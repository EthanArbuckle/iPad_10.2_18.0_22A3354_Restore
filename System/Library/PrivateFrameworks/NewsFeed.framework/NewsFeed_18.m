uint64_t sub_1BB003068()
{
  return 8;
}

uint64_t sub_1BB003074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB002518(a1, a2, a3, (void (*)(_QWORD))sub_1BB003174) & 1;
}

uint64_t sub_1BB003094(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (void (*)(_QWORD))sub_1BB003174);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(0);
  return sub_1BB872874();
}

unint64_t sub_1BB0030E0()
{
  unint64_t result;

  result = qword_1EF2B9398;
  if (!qword_1EF2B9398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes, &type metadata for PuzzleStyleAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9398);
  }
  return result;
}

uint64_t sub_1BB003124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA716CEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB003174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B93A0)
  {
    v0 = sub_1BB8746D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B93A0);
  }
}

void sub_1BB0031D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B93A8)
  {
    sub_1BB86C184();
    v0 = sub_1BB8746D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B93A8);
  }
}

uint64_t FormatMediaTiming.duration.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.speed.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.beginTime.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.timeOffset.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

void FormatMediaTiming.fillMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t FormatMediaTiming.repeatCount.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.repeatDuration.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTiming.autoreverses.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatMediaTiming.timingFunction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 112);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1BA825F44(v2, v3, v4, v5, v6);
}

uint64_t FormatMediaTiming.removeOnCompletion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 136);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t sub_1BB0032D4(_QWORD *a1)
{
  return FormatMediaTiming.encode(to:)(a1);
}

uint64_t sub_1BB0032EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  unsigned __int8 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = *((_BYTE *)v1 + 32);
  v8 = v1[5];
  v9 = v1[6];
  v10 = v1[7];
  v11 = v1[8];
  v12 = *((_BYTE *)v1 + 72);
  v13 = v1[10];
  v14 = v1[11];
  v15 = v1[12];
  v16 = v1[13];
  v17 = *((unsigned __int8 *)v1 + 112);
  v18 = v1[15];
  v19 = v1[16];
  v20 = *((_BYTE *)v1 + 136);
  v37 = v18;
  if (v17 != 255)
  {
    if ((v17 & 1) != 0)
    {
      v36 = v1[7];
      v33 = v1[8];
      v34 = v1[5];
      v30 = v1[2];
      v31 = v1[3];
      v21 = *v1;
      v35 = *((_BYTE *)v1 + 72);
      v32 = v1[16];
      v22 = *((_BYTE *)v1 + 136);
      v23 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = v23;
      v3 = v21;
      v6 = v30;
      v5 = v31;
      v20 = v22;
      v19 = v32;
      v11 = v33;
      v10 = v36;
      v18 = v37;
      v8 = v34;
      v12 = v35;
      LOBYTE(v17) = 1;
    }
    else
    {
      LOBYTE(v17) = 0;
    }
  }
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v16;
  *(_BYTE *)(a1 + 112) = v17;
  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v19;
  *(_BYTE *)(a1 + 136) = v20;
  v24 = v10;
  v25 = v11;
  v26 = v12;
  v27 = v19;
  v28 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA796C58(v24, v25, v26);
  return sub_1BA796C58(v37, v27, v28);
}

BOOL _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  _QWORD v64[4];
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v63 = *(_QWORD *)(a1 + 24);
  v62 = *(unsigned __int8 *)(a1 + 32);
  v60 = *(_QWORD *)(a1 + 40);
  v56 = *(unsigned __int8 *)(a1 + 72);
  v5 = *(unsigned __int8 *)(a1 + 112);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v61 = *(unsigned __int8 *)(a2 + 32);
  v58 = *(_QWORD *)(a1 + 48);
  v59 = *(_QWORD *)(a2 + 40);
  v57 = *(_QWORD *)(a2 + 48);
  v55 = *(unsigned __int8 *)(a2 + 72);
  v10 = *(unsigned __int8 *)(a2 + 112);
  if (*(_QWORD *)a1)
  {
    if (!v7)
      return 0;
    v51 = *(_QWORD *)(a2 + 64);
    v52 = *(_QWORD *)(a2 + 56);
    v53 = *(_QWORD *)(a1 + 56);
    v54 = *(_QWORD *)(a1 + 64);
    v43 = *(_QWORD *)(a2 + 80);
    v44 = *(_QWORD *)(a2 + 88);
    v45 = *(_QWORD *)(a2 + 96);
    v46 = *(_QWORD *)(a2 + 104);
    v47 = *(_QWORD *)(a1 + 80);
    v48 = *(_QWORD *)(a1 + 88);
    v49 = *(_QWORD *)(a1 + 96);
    v50 = *(_QWORD *)(a1 + 104);
    v41 = *(unsigned __int8 *)(a2 + 136);
    v42 = *(unsigned __int8 *)(a1 + 136);
    v37 = *(_QWORD *)(a2 + 128);
    v38 = *(_QWORD *)(a2 + 120);
    v39 = *(_QWORD *)(a1 + 120);
    v40 = *(_QWORD *)(a1 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA881EAC(v3, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      return 0;
  }
  else
  {
    v51 = *(_QWORD *)(a2 + 64);
    v52 = *(_QWORD *)(a2 + 56);
    v53 = *(_QWORD *)(a1 + 56);
    v54 = *(_QWORD *)(a1 + 64);
    v43 = *(_QWORD *)(a2 + 80);
    v44 = *(_QWORD *)(a2 + 88);
    v45 = *(_QWORD *)(a2 + 96);
    v46 = *(_QWORD *)(a2 + 104);
    v47 = *(_QWORD *)(a1 + 80);
    v48 = *(_QWORD *)(a1 + 88);
    v49 = *(_QWORD *)(a1 + 96);
    v50 = *(_QWORD *)(a1 + 104);
    v41 = *(unsigned __int8 *)(a2 + 136);
    v42 = *(unsigned __int8 *)(a1 + 136);
    v37 = *(_QWORD *)(a2 + 128);
    v38 = *(_QWORD *)(a2 + 120);
    v39 = *(_QWORD *)(a1 + 120);
    v40 = *(_QWORD *)(a1 + 128);
    if (v7)
      return 0;
  }
  if (v2)
  {
    if (!v6)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA881EAC(v2, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  if (v4)
  {
    if (!v8)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA881EAC(v4, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if (v63)
  {
    if (!v9)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA881EAC(v63, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  if (v62 == 4)
  {
    if (v61 != 4)
      return 0;
  }
  else
  {
    if (v61 == 4)
      return 0;
    sub_1BB806B18(v62);
    if ((v15 & 1) == 0)
      return 0;
  }
  if (v60)
  {
    if (!v59)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA881EAC(v60, v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
  }
  else if (v59)
  {
    return 0;
  }
  if (!v58)
  {
    if (!v57)
      goto LABEL_36;
    return 0;
  }
  if (!v57)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA881EAC(v58, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    return 0;
LABEL_36:
  if (v56 == 255)
  {
    v18 = v55;
    if (v55 == 255)
      goto LABEL_53;
LABEL_44:
    v20 = v51;
    v19 = v52;
    sub_1BA796C58(v52, v51, v18);
    v22 = v53;
    v21 = v54;
    v23 = v53;
    v24 = v54;
    v25 = v56;
LABEL_45:
    sub_1BA796C58(v23, v24, v25);
    sub_1BA796C70(v22, v21, v25);
    sub_1BA796C70(v19, v20, v18);
    return 0;
  }
  v18 = v55;
  if (v55 == 255)
    goto LABEL_44;
  if ((v56 & 1) == 0)
  {
    if ((v55 & 1) == 0)
    {
      sub_1BA69C828(v53, v54, 0);
      sub_1BA69C828(v52, v51, 0);
      v26 = 0;
      if (((((v53 & 1) == 0) ^ v52) & 1) == 0)
        return v26;
      goto LABEL_53;
    }
LABEL_50:
    v27 = v55 & 1;
    v29 = v51;
    v28 = v52;
    sub_1BA69C808(v52, v51, v55 & 1);
    v30 = v56 & 1;
    v31 = v53;
    v32 = v54;
LABEL_51:
    sub_1BA69C828(v31, v32, v30);
    sub_1BA69C828(v28, v29, v27);
    return 0;
  }
  if ((v55 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_50;
  }
  if (v53 == v52 && v54 == v51)
  {
    sub_1BA796C58(v53, v54, v55);
    sub_1BA796C58(v53, v54, v56);
    sub_1BA69C828(v53, v54, 1);
    sub_1BA69C828(v53, v54, 1);
  }
  else
  {
    v33 = sub_1BB874398();
    sub_1BA796C58(v52, v51, v55);
    sub_1BA796C58(v53, v54, v56);
    sub_1BA69C828(v53, v54, 1);
    sub_1BA69C828(v52, v51, 1);
    v26 = 0;
    if ((v33 & 1) == 0)
      return v26;
  }
LABEL_53:
  if (v5 == 255)
  {
    if (v10 == 255)
      goto LABEL_58;
LABEL_66:
    sub_1BA825F44(v43, v44, v45, v46, v10);
    sub_1BA825F5C(v47, v48, v49, v50, v5);
    sub_1BA825F5C(v43, v44, v45, v46, v10);
    return 0;
  }
  v66 = v47;
  v67 = v48;
  v68 = v49;
  v69 = v50;
  v70 = v5;
  if (v10 == 255)
  {
    sub_1BA896394(v47, v48, v49, v50, v5 & 1);
    sub_1BA896394(v47, v48, v49, v50, v5 & 1);
    sub_1BA8964E0(v47, v48, v49, v50, v5 & 1);
    goto LABEL_66;
  }
  v64[0] = v43;
  v64[1] = v44;
  v64[2] = v45;
  v64[3] = v46;
  v65 = v10 & 1;
  sub_1BA825F44(v47, v48, v49, v50, v5);
  sub_1BA896394(v47, v48, v49, v50, v5 & 1);
  v34 = _s8NewsFeed25FormatMediaTimingFunctionO2eeoiySbAC_ACtFZ_0((uint64_t)&v66, (uint64_t)v64);
  sub_1BA8964E0(v66, v67, v68, v69, v70);
  sub_1BA825F5C(v47, v48, v49, v50, v5);
  if ((v34 & 1) == 0)
    return 0;
LABEL_58:
  if (v42 == 255)
  {
    if (v41 == 255)
      return 1;
    goto LABEL_70;
  }
  if (v41 == 255)
  {
LABEL_70:
    v20 = v37;
    v19 = v38;
    v18 = v41;
    sub_1BA796C58(v38, v37, v41);
    v22 = v39;
    v21 = v40;
    v23 = v39;
    v24 = v40;
    v25 = v42;
    goto LABEL_45;
  }
  if ((v42 & 1) == 0)
  {
    if ((v41 & 1) != 0)
    {
LABEL_75:
      v27 = v41 & 1;
      v29 = v37;
      v28 = v38;
      sub_1BA69C808(v38, v37, v41 & 1);
      v30 = v42 & 1;
      v31 = v39;
      v32 = v40;
      goto LABEL_51;
    }
    sub_1BA69C828(v39, v40, 0);
    sub_1BA69C828(v38, v37, 0);
    return ((((v39 & 1) == 0) ^ v38) & 1) != 0;
  }
  if ((v41 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_75;
  }
  if (v39 != v38 || v40 != v37)
  {
    v36 = sub_1BB874398();
    sub_1BA796C58(v38, v37, v41);
    sub_1BA796C58(v39, v40, v42);
    v26 = 1;
    sub_1BA69C828(v39, v40, 1);
    sub_1BA69C828(v38, v37, 1);
    if ((v36 & 1) != 0)
      return v26;
    return 0;
  }
  sub_1BA796C58(v39, v40, v41);
  sub_1BA796C58(v39, v40, v42);
  v26 = 1;
  sub_1BA69C828(v39, v40, 1);
  sub_1BA69C828(v39, v40, 1);
  return v26;
}

unint64_t sub_1BB003C2C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB003C50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB003C50()
{
  unint64_t result;

  result = qword_1EF2B93B0;
  if (!qword_1EF2B93B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTiming, &type metadata for FormatMediaTiming);
    atomic_store(result, (unint64_t *)&qword_1EF2B93B0);
  }
  return result;
}

unint64_t sub_1BB003C94(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5015B4();
  a1[2] = sub_1BAEEF890();
  result = sub_1BB003CC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB003CC8()
{
  unint64_t result;

  result = qword_1EF2B93B8;
  if (!qword_1EF2B93B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTiming, &type metadata for FormatMediaTiming);
    atomic_store(result, (unint64_t *)&qword_1EF2B93B8);
  }
  return result;
}

uint64_t destroy for FormatMediaTiming(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;
  int v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 != 255)
    result = sub_1BA69C828(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v3 & 1);
  v4 = *(unsigned __int8 *)(a1 + 112);
  if (v4 != 255)
    result = sub_1BA8964E0(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v4 & 1);
  v5 = *(unsigned __int8 *)(a1 + 136);
  if (v5 != 255)
    return sub_1BA69C828(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v5 & 1);
  return result;
}

uint64_t initializeWithCopy for FormatMediaTiming(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(unsigned __int8 *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 56);
    v9 = *(_QWORD *)(a2 + 64);
    sub_1BA69C808(v8, v9, v7 & 1);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 72) = v7 & 1;
  }
  v10 = *(unsigned __int8 *)(a2 + 112);
  if (v10 == 255)
  {
    v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v12 = v10 & 1;
    v13 = *(_QWORD *)(a2 + 80);
    v14 = *(_QWORD *)(a2 + 88);
    v15 = *(_QWORD *)(a2 + 96);
    v16 = *(_QWORD *)(a2 + 104);
    sub_1BA896394(v13, v14, v15, v16, v10 & 1);
    *(_QWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 88) = v14;
    *(_QWORD *)(a1 + 96) = v15;
    *(_QWORD *)(a1 + 104) = v16;
    *(_BYTE *)(a1 + 112) = v12;
  }
  v17 = *(unsigned __int8 *)(a2 + 136);
  if (v17 == 255)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  }
  else
  {
    v18 = v17 & 1;
    v20 = *(_QWORD *)(a2 + 120);
    v19 = *(_QWORD *)(a2 + 128);
    sub_1BA69C808(v20, v19, v17 & 1);
    *(_QWORD *)(a1 + 120) = v20;
    *(_QWORD *)(a1 + 128) = v19;
    *(_BYTE *)(a1 + 136) = v18;
  }
  return a1;
}

uint64_t assignWithCopy for FormatMediaTiming(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  __int128 *v41;
  int v42;
  char v43;
  __int128 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 56);
  v5 = (__int128 *)(a2 + 56);
  v6 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v6 == 255)
    {
      v8 = *v5;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *v4 = v8;
    }
    else
    {
      v15 = v6 & 1;
      v16 = *(_QWORD *)(a2 + 56);
      v17 = *(_QWORD *)(a2 + 64);
      sub_1BA69C808(v16, v17, v6 & 1);
      *(_QWORD *)(a1 + 56) = v16;
      *(_QWORD *)(a1 + 64) = v17;
      *(_BYTE *)(a1 + 72) = v15;
    }
  }
  else if (v6 == 255)
  {
    sub_1BAB10C5C(a1 + 56);
    v7 = *(_BYTE *)(a2 + 72);
    *v4 = *v5;
    *(_BYTE *)(a1 + 72) = v7;
  }
  else
  {
    v9 = v6 & 1;
    v10 = *(_QWORD *)(a2 + 56);
    v11 = *(_QWORD *)(a2 + 64);
    sub_1BA69C808(v10, v11, v6 & 1);
    v12 = *(_QWORD *)(a1 + 56);
    v13 = *(_QWORD *)(a1 + 64);
    v14 = *(_BYTE *)(a1 + 72);
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    *(_BYTE *)(a1 + 72) = v9;
    sub_1BA69C828(v12, v13, v14);
  }
  v18 = (__int128 *)(a1 + 80);
  v19 = (__int128 *)(a2 + 80);
  v20 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v20 == 255)
    {
      v23 = *v19;
      v24 = *(_OWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v18 = v23;
      *(_OWORD *)(a1 + 96) = v24;
    }
    else
    {
      v35 = v20 & 1;
      v36 = *(_QWORD *)(a2 + 80);
      v37 = *(_QWORD *)(a2 + 88);
      v38 = *(_QWORD *)(a2 + 96);
      v39 = *(_QWORD *)(a2 + 104);
      sub_1BA896394(v36, v37, v38, v39, v20 & 1);
      *(_QWORD *)(a1 + 80) = v36;
      *(_QWORD *)(a1 + 88) = v37;
      *(_QWORD *)(a1 + 96) = v38;
      *(_QWORD *)(a1 + 104) = v39;
      *(_BYTE *)(a1 + 112) = v35;
    }
  }
  else if (v20 == 255)
  {
    sub_1BB00420C(a1 + 80);
    v21 = *(_BYTE *)(a2 + 112);
    v22 = *(_OWORD *)(a2 + 96);
    *v18 = *v19;
    *(_OWORD *)(a1 + 96) = v22;
    *(_BYTE *)(a1 + 112) = v21;
  }
  else
  {
    v25 = v20 & 1;
    v26 = *(_QWORD *)(a2 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_QWORD *)(a2 + 96);
    v29 = *(_QWORD *)(a2 + 104);
    sub_1BA896394(v26, v27, v28, v29, v20 & 1);
    v30 = *(_QWORD *)(a1 + 80);
    v31 = *(_QWORD *)(a1 + 88);
    v32 = *(_QWORD *)(a1 + 96);
    v33 = *(_QWORD *)(a1 + 104);
    v34 = *(_BYTE *)(a1 + 112);
    *(_QWORD *)(a1 + 80) = v26;
    *(_QWORD *)(a1 + 88) = v27;
    *(_QWORD *)(a1 + 96) = v28;
    *(_QWORD *)(a1 + 104) = v29;
    *(_BYTE *)(a1 + 112) = v25;
    sub_1BA8964E0(v30, v31, v32, v33, v34);
  }
  v40 = (__int128 *)(a1 + 120);
  v41 = (__int128 *)(a2 + 120);
  v42 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 255)
  {
    if (v42 == 255)
    {
      v44 = *v41;
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *v40 = v44;
    }
    else
    {
      v51 = v42 & 1;
      v53 = *(_QWORD *)(a2 + 120);
      v52 = *(_QWORD *)(a2 + 128);
      sub_1BA69C808(v53, v52, v42 & 1);
      *(_QWORD *)(a1 + 120) = v53;
      *(_QWORD *)(a1 + 128) = v52;
      *(_BYTE *)(a1 + 136) = v51;
    }
  }
  else if (v42 == 255)
  {
    sub_1BAB10C5C(a1 + 120);
    v43 = *(_BYTE *)(a2 + 136);
    *v40 = *v41;
    *(_BYTE *)(a1 + 136) = v43;
  }
  else
  {
    v45 = v42 & 1;
    v47 = *(_QWORD *)(a2 + 120);
    v46 = *(_QWORD *)(a2 + 128);
    sub_1BA69C808(v47, v46, v42 & 1);
    v48 = *(_QWORD *)(a1 + 120);
    v49 = *(_QWORD *)(a1 + 128);
    v50 = *(_BYTE *)(a1 + 136);
    *(_QWORD *)(a1 + 120) = v47;
    *(_QWORD *)(a1 + 128) = v46;
    *(_BYTE *)(a1 + 136) = v45;
    sub_1BA69C828(v48, v49, v50);
  }
  return a1;
}

uint64_t sub_1BB00420C(uint64_t a1)
{
  destroy for FormatMediaTimingFunction(a1);
  return a1;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for FormatMediaTiming(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a2 + 56);
  v5 = *(unsigned __int8 *)(a1 + 72);
  if (v5 == 255)
    goto LABEL_4;
  v6 = *(unsigned __int8 *)(a2 + 72);
  if (v6 == 255)
  {
    sub_1BAB10C5C(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v4;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *v4;
  *(_BYTE *)(a1 + 72) = v6 & 1;
  sub_1BA69C828(v7, v8, v5 & 1);
LABEL_6:
  v9 = *(unsigned __int8 *)(a1 + 112);
  if (v9 == 255)
  {
LABEL_9:
    v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    goto LABEL_11;
  }
  v10 = *(unsigned __int8 *)(a2 + 112);
  if (v10 == 255)
  {
    sub_1BB00420C(a1 + 80);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 104);
  v16 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 112) = v10 & 1;
  sub_1BA8964E0(v12, v13, v14, v15, v9 & 1);
LABEL_11:
  v17 = (_OWORD *)(a2 + 120);
  v18 = *(unsigned __int8 *)(a1 + 136);
  if (v18 != 255)
  {
    v19 = *(unsigned __int8 *)(a2 + 136);
    if (v19 != 255)
    {
      v20 = *(_QWORD *)(a1 + 120);
      v21 = *(_QWORD *)(a1 + 128);
      *(_OWORD *)(a1 + 120) = *v17;
      *(_BYTE *)(a1 + 136) = v19 & 1;
      sub_1BA69C828(v20, v21, v18 & 1);
      return a1;
    }
    sub_1BAB10C5C(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *v17;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMediaTiming()
{
  return &type metadata for FormatMediaTiming;
}

uint64_t sub_1BB004424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA89631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BB004468(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[4];
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40[10];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46[7];
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50[18];
  uint64_t v51[18];
  uint64_t v52[4];
  unsigned __int8 v53;
  uint64_t v54[18];
  uint64_t v55[18];
  uint64_t v56[18];
  _OWORD v57[2];
  uint64_t v58;
  _BYTE v59[144];
  uint64_t v60[19];

  sub_1BB004424(a1, (uint64_t)v59);
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
  sub_1BA8C88C8(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87FAA0;
  v33 = v6;
  v7 = (_QWORD *)(v6 + v5);
  sub_1BB004424((uint64_t)v59, (uint64_t)v60);
  v8 = 0;
  if (sub_1BA896370(v60) != 1)
  {
    v8 = v60[0];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF3E48(0x6E6F697461727544, 0xE800000000000000, v8, v7);
  v9 = type metadata accessor for FormatInspectionItem(0);
  v10 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v7, 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v56);
  v11 = 0;
  if (sub_1BA896370(v56) != 1)
  {
    v11 = v56[1];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF3E48(0x6465657053, 0xE500000000000000, v11, (_QWORD *)((char *)v7 + v4));
  v10((_QWORD *)((char *)v7 + v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v55);
  if (sub_1BA896370(v55) == 1)
  {
    v12 = 0;
  }
  else
  {
    v12 = v55[2];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF3E48(0x6954206E69676542, 0xEA0000000000656DLL, v12, (_QWORD *)((char *)v7 + 2 * v4));
  v10((_QWORD *)((char *)v7 + 2 * v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v54);
  if (sub_1BA896370(v54) == 1)
  {
    v13 = 0;
  }
  else
  {
    v13 = v54[3];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF3E48(0x66664F20656D6954, 0xEB00000000746573, v13, (_QWORD *)((char *)v7 + 3 * v4));
  v10((_QWORD *)((char *)v7 + 3 * v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v52);
  if (sub_1BA896370(v52) == 1)
    v14 = 4;
  else
    v14 = v53;
  sub_1BAAFA53C(0x646F4D206C6C6946, 0xE900000000000065, v14, (_QWORD *)((char *)v7 + 4 * v4));
  v10((_QWORD *)((char *)v7 + 4 * v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v51);
  if (sub_1BA896370(v51) == 1)
  {
    v15 = 0;
  }
  else
  {
    v15 = v51[5];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF3E48(0x4320746165706552, 0xEC000000746E756FLL, v15, (_QWORD *)((char *)v7 + 5 * v4));
  v10((_QWORD *)((char *)v7 + 5 * v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v50);
  if (sub_1BA896370(v50) == 1)
  {
    v16 = 0;
  }
  else
  {
    v16 = v50[6];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF3E48(0x4420746165706552, 0xEF6E6F6974617275, v16, (_QWORD *)((char *)v7 + 6 * v4));
  v10((_QWORD *)((char *)v7 + 6 * v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v46);
  if (sub_1BA896370(v46) == 1)
  {
    v17 = 0;
    v18 = 0;
    v19 = -1;
  }
  else
  {
    v17 = v47;
    v18 = v48;
    v19 = v49;
    sub_1BA796C58(v47, v48, v49);
  }
  sub_1BAAFA830(0x657665726F747541, 0xEC00000073657372, v17, v18, v19, (_QWORD *)((char *)&v7[v4] - v4));
  v10((_QWORD *)((char *)&v7[v4] - v4), 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v40);
  if (sub_1BA896370(v40) == 1)
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = -1;
  }
  else
  {
    v20 = v41;
    v21 = v42;
    v22 = v43;
    v23 = v44;
    v24 = v45;
    sub_1BA825F44(v41, v42, v43, v44, v45);
  }
  v35[0] = v20;
  v35[1] = v21;
  v35[2] = v22;
  v35[3] = v23;
  v36 = v24;
  v25 = sub_1BAB0EF48((uint64_t)v35);
  sub_1BA825F5C(v20, v21, v22, v23, v24);
  sub_1BAAF83B0(0x4620676E696D6954, 0xEF6E6F6974636E75, (uint64_t)v25, &v7[v4]);
  v10(&v7[v4], 0, 1, v9);
  sub_1BB004424((uint64_t)v59, (uint64_t)v35);
  if (sub_1BA896370(v35) == 1)
  {
    v26 = 0;
    v27 = 0;
    v28 = -1;
  }
  else
  {
    v26 = v37;
    v27 = v38;
    v28 = v39;
    sub_1BA796C58(v37, v38, v39);
  }
  sub_1BAAFA830(0xD000000000000014, 0x80000001BB975660, v26, v27, v28, (_QWORD *)((char *)v7 + 9 * v4));
  v10((_QWORD *)((char *)v7 + 9 * v4), 0, 1, v9);
  sub_1BAF89090(0x695420616964654DLL, 0xEC000000676E696DLL, 0, 0, v33, v57);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v34 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v34 + 64) = &off_1E72D2F60;
  v29 = swift_allocObject();
  *(_QWORD *)(v34 + 32) = v29;
  v30 = v57[1];
  *(_OWORD *)(v29 + 16) = v57[0];
  *(_OWORD *)(v29 + 32) = v30;
  *(_QWORD *)(v29 + 48) = v58;
  v31 = sub_1BB6DF010(v34);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v31;
}

uint64_t sub_1BB004B2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id SharingPuzzleURLActivityItemSource.__allocating_init(puzzle:linkPresentationSource:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1BB00517C(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v6;
}

id SharingPuzzleURLActivityItemSource.init(puzzle:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v2;

  v2 = sub_1BB00517C(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v2;
}

id SharingPuzzleURLActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingPuzzleURLActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingPuzzleURLActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingPuzzleURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10[3];
  uint64_t v11;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7E8428(v1 + OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_puzzleURL, (uint64_t)v5);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    result = (_OWORD *)sub_1BA7F0A80((uint64_t)v5);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    v11 = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    return sub_1BA76EAE0(v10, (_OWORD *)a1);
  }
  return result;
}

uint64_t SharingPuzzleURLActivityItemSource.activityViewController(_:itemForActivityType:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = sub_1BB8729A0();
    v10 = v9;
    if (v8 == sub_1BB8729A0() && v10 == v11)
    {
      result = swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    v13 = sub_1BB874398();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
LABEL_10:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  sub_1BA7E8428(v2 + OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_puzzleURL, (uint64_t)v7);
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    result = sub_1BA7F0A80((uint64_t)v7);
    goto LABEL_10;
  }
  *(_QWORD *)(a2 + 24) = v15;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v7, v15);
}

LPLinkMetadata_optional __swiftcall SharingPuzzleURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  objc_class *v4;
  id v5;
  LPLinkMetadata_optional result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_linkPresentationSource))
  {
    sub_1BB86E71C();
    v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1BB00517C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3;
  v11 = objc_msgSend(a1, sel_identifier);
  if (!v11)
  {
    sub_1BB8729A0();
    v11 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleID_, v11);

  if (v12)
  {
    sub_1BB86C5EC();

    v13 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
  }
  else
  {
    v14 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  sub_1BA7F0AD4((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_puzzleURL]);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed34SharingPuzzleURLActivityItemSource_linkPresentationSource] = a2;
  swift_retain();

  v16.receiver = v10;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1BB0052FC()
{
  return type metadata accessor for SharingPuzzleURLActivityItemSource();
}

uint64_t type metadata accessor for SharingPuzzleURLActivityItemSource()
{
  uint64_t result;

  result = qword_1EF2B9400;
  if (!qword_1EF2B9400)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB005340()
{
  unint64_t v0;

  sub_1BA6EF3B0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SharingPuzzleURLActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPuzzleURLActivityItemSource.__allocating_init(puzzle:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for FormatBindingResource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB005414 + 4 * byte_1BB8E1D85[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB005448 + 4 * byte_1BB8E1D80[v4]))();
}

uint64_t sub_1BB005448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB005450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB005458);
  return result;
}

uint64_t sub_1BB005464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB00546CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB005470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB005478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingResource()
{
  return &type metadata for FormatBindingResource;
}

uint64_t sub_1BB005494()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB8745D8();
  sub_1BA7F1C2C((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB0054E4(uint64_t a1)
{
  char *v1;
  char v3;

  v3 = *v1;
  sub_1BB8745D8();
  sub_1BA7F1C2C(a1, v3);
}

uint64_t sub_1BB005520()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB8745D8();
  sub_1BA7F1C2C((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB00556C(char *a1)
{
  sub_1BB7F9F14(*a1);
}

NewsFeed::FeedScoredTag __swiftcall FeedScoredTag.init(tagID:score:)(Swift::String tagID, Swift::Double score)
{
  uint64_t v2;
  NewsFeed::FeedScoredTag result;

  *(Swift::String *)v2 = tagID;
  *(Swift::Double *)(v2 + 16) = score;
  result.tagID = tagID;
  result.score = score;
  return result;
}

double FeedScoredTag.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t FeedScoredTag.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static FeedScoredTag.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_1BB874398();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

BOOL sub_1BB005614(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_1BB874398();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

_QWORD *sub_1BB005674(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatLayeredMedia(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for FormatLayeredMedia(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1BB00573C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  sub_1BA809900(a1, (uint64_t)v13);
  v4 = v14;
  if (v14)
  {
    v5 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    sub_1BA554698((uint64_t)v13);
    v7 = 0;
  }
  sub_1BA809900(a1, (uint64_t)v13);
  v8 = v14;
  if (v14)
  {
    v9 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    v8 = v11;
    sub_1BA554698(a1);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    sub_1BA554698(a1);
    result = sub_1BA554698((uint64_t)v13);
    v10 = 0;
  }
  *a2 = v4;
  a2[1] = v7;
  a2[2] = v10;
  a2[3] = v8;
  return result;
}

uint64_t sub_1BB005840()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C746974;
  else
    return 1701667182;
}

uint64_t sub_1BB005870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB005E3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB005894()
{
  sub_1BB005A18();
  return sub_1BB874710();
}

uint64_t sub_1BB0058BC()
{
  sub_1BB005A18();
  return sub_1BB87471C();
}

uint64_t DebugInspectionGroup.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BB005C04(0, &qword_1EF2B9410, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB005A18();
  sub_1BB8746C8();
  v13 = 0;
  v9 = v11[3];
  sub_1BB87411C();
  if (!v9)
  {
    v12 = 1;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB005A18()
{
  unint64_t result;

  result = qword_1EF2B9418;
  if (!qword_1EF2B9418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E1FB8, &type metadata for DebugInspectionGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9418);
  }
  return result;
}

uint64_t DebugInspectionGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1BB005C04(0, &qword_1EF2B9420, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB005A18();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1BB87402C();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB87402C();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB005C04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB005A18();
    v7 = a3(a1, &type metadata for DebugInspectionGroup.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB005C60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DebugInspectionGroup.init(from:)(a1, a2);
}

uint64_t sub_1BB005C74(_QWORD *a1)
{
  return DebugInspectionGroup.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for DebugInspectionGroup()
{
  return &type metadata for DebugInspectionGroup;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB005CE4 + 4 * byte_1BB8E1E85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB005D18 + 4 * asc_1BB8E1E80[v4]))();
}

uint64_t sub_1BB005D18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB005D20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB005D28);
  return result;
}

uint64_t sub_1BB005D34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB005D3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB005D40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB005D48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionGroup.CodingKeys()
{
  return &type metadata for DebugInspectionGroup.CodingKeys;
}

unint64_t sub_1BB005D68()
{
  unint64_t result;

  result = qword_1EF2B9428;
  if (!qword_1EF2B9428)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E1F90, &type metadata for DebugInspectionGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9428);
  }
  return result;
}

unint64_t sub_1BB005DB0()
{
  unint64_t result;

  result = qword_1EF2B9430;
  if (!qword_1EF2B9430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E1F00, &type metadata for DebugInspectionGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9430);
  }
  return result;
}

unint64_t sub_1BB005DF8()
{
  unint64_t result;

  result = qword_1EF2B9438;
  if (!qword_1EF2B9438)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E1F28, &type metadata for DebugInspectionGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9438);
  }
  return result;
}

uint64_t sub_1BB005E3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FeedItemType.debugKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

BOOL static FeedItem.SavedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static FeedItem.AccessLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void FeedItem.kind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BB006020 + 4 * byte_1BB8E201A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB006020()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 40);
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRelease();
  result = sub_1BA6E0CBC(v3, v2);
  *v0 = 0;
  v0[1] = 0;
  return result;
}

void FeedItem.debugIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4C2DD8(v0, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)&loc_1BB006420 + *((int *)qword_1BB006868 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BB006430()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA6E0CBC(v0[5], v0[6]);
  return v1;
}

void sub_1BB0066E4()
{
  _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
  swift_release();
  JUMPOUT(0x1BB0066BCLL);
}

void sub_1BB006704()
{
  id v0;

  swift_bridgeObjectRetain();
  v0 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  sub_1BB8729A0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease_n();

  JUMPOUT(0x1BB0066BCLL);
}

void sub_1BB00675C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 144) = v2;
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v1 + 160);
  v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 80) = v3;
  v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 112) = v4;
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 48) = v6;
  swift_bridgeObjectRetain();
  sub_1BA93EBE8(v0);
  JUMPOUT(0x1BB0066BCLL);
}

void sub_1BB0067A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1BA6E0CBC(v1, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BB0066BCLL);
}

void sub_1BB0067D8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA5193C4(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  swift_bridgeObjectRetain();
  JUMPOUT(0x1BB0066B8);
}

void sub_1BB006808()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v1 + 192);
  *(_OWORD *)(v0 + 208) = v2;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v1 + 240);
  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 144) = v3;
  v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 176) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 80) = v5;
  v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 112) = v6;
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 48) = v8;
  swift_bridgeObjectRetain();
  sub_1BA93EC1C(v0);
  JUMPOUT(0x1BB0066BCLL);
}

void FeedItem.debugTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BB0069D8 + dword_1BB006F14[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB0069EC()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  return 0;
}

void FeedItem.traits.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10[42];

  v10[1] = a1;
  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(v10[0], (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BB007104 + 4 * byte_1BB8E202C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB007104()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = v1[2];
  v4 = v1[5];
  v3 = v1[6];
  swift_bridgeObjectRelease();
  result = sub_1BA6E0CBC(v4, v3);
  **(_QWORD **)(v0 + 8) = v2 | 1;
  return result;
}

void sub_1BB0075A0(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void FeedItemType.visibility.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t FeedItemType.additionalFormatFeedItems.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t FeedItem.feedIssue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[7];
  _OWORD v15[2];

  v2 = v1;
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_OWORD *)((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v2, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (((1 << EnumCaseMultiPayload) & 0x1FFDF) != 0)
  {
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  }
  else if (EnumCaseMultiPayload == 5)
  {
    v10 = v6[7];
    v14[6] = v6[6];
    v15[0] = v10;
    *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v6 + 121);
    v11 = v6[3];
    v14[2] = v6[2];
    v14[3] = v11;
    v12 = v6[5];
    v14[4] = v6[4];
    v14[5] = v12;
    v13 = v6[1];
    v14[0] = *v6;
    v14[1] = v13;
    nullsub_1(v14);
    return sub_1BA8EDBB0((uint64_t)v14, a1);
  }
  sub_1BA90EFB8(v14);
  return sub_1BA8EDBB0((uint64_t)v14, a1);
}

void sub_1BB0076C4(_QWORD *a1@<X8>)
{
  FeedItemType.visibility.getter(a1);
}

unint64_t FeedItem.Kind.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = 7364935;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v3 = 0x696C66664F706147;
      break;
    case 2uLL:
      v3 = 0x644172656E6E6142;
      break;
    case 3uLL:
      v3 = 0x656E696C64616548;
      break;
    case 4uLL:
      v3 = 0x6465626D45626557;
      break;
    case 5uLL:
      v3 = 0x6575737349;
      break;
    case 6uLL:
      v3 = 0x49676F6C61746143;
      break;
    case 7uLL:
      v3 = 6775124;
      break;
    case 8uLL:
      v3 = 0x79726F6765746143;
      break;
    case 9uLL:
      v3 = 0xD000000000000010;
      break;
    case 0xAuLL:
      v3 = 0x6E6967756C50;
      break;
    case 0xBuLL:
      v3 = 0x76457374726F7053;
      break;
    case 0xCuLL:
      v3 = 0x656C7A7A7550;
      break;
    case 0xDuLL:
      v3 = 0x7954656C7A7A7550;
      break;
    case 0xEuLL:
      v3 = 0x7453656C7A7A7550;
      break;
    case 0xFuLL:
      v3 = 0x6C6C6177796150;
      break;
    case 0x10uLL:
      v3 = 1701736270;
      break;
    default:
      v3 = v1;
      break;
  }
  sub_1BA75A650(v1, v2);
  return v3;
}

uint64_t FeedItem.Kind.hash(into:)()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
      result = sub_1BB8745D8();
      break;
    default:
      sub_1BB8745D8();
      result = sub_1BB872A90();
      break;
  }
  return result;
}

uint64_t FeedItem.Kind.hashValue.getter()
{
  sub_1BB8745CC();
  FeedItem.Kind.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BB007A14()
{
  sub_1BB8745CC();
  FeedItem.Kind.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BB007A60()
{
  sub_1BB8745CC();
  FeedItem.Kind.hash(into:)();
  return sub_1BB874608();
}

void FeedItem.additionalFormatFeedItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  _QWORD v8[46];

  v8[44] = *MEMORY[0x1E0C80C00];
  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BB007BE4 + *((int *)qword_1BB008310 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BB007BF4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA4A2E80(v1, type metadata accessor for FeedItem);
  return v0;
}

void FeedItem.isGap.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4C2DD8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1BB0083E8 + 4 * byte_1BB8E20B8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB0083E8()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  return 0;
}

void FeedItem.debugSourceName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BB008558 + *((int *)qword_1BB008A40 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BB00856C()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  return 0;
}

void sub_1BB008884()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)(v0 + 768) = *(_OWORD *)(v1 + 192);
  *(_OWORD *)(v0 + 784) = v2;
  *(_OWORD *)(v0 + 800) = *(_OWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 816) = *(_QWORD *)(v1 + 240);
  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 704) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 720) = v3;
  v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v0 + 736) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 752) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 640) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 656) = v5;
  v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 672) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 688) = v6;
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 576) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 592) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 608) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 624) = v8;
  swift_bridgeObjectRetain();
  sub_1BA93EC1C(v0 + 576);
  JUMPOUT(0x1BB00885CLL);
}

void FeedItem.debugAssetHandle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)&loc_1BB008B48 + *((int *)qword_1BB008DA8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BB008B58()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  return 0;
}

void FeedItem.debugScoreProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)&loc_1BB008EB4 + dword_1BB00911C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB008EC4()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  return 0;
}

uint64_t FeedItem.feedWebEmbed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 5 >= 0xC && EnumCaseMultiPayload >= 4)
  {
    if (EnumCaseMultiPayload == 4)
    {
      sub_1BA5193C4((uint64_t)v6, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v12 = type metadata accessor for FeedWebEmbed();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 0, 1, v12);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  }
  v10 = type metadata accessor for FeedWebEmbed();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
}

uint64_t FeedItem.feedPuzzleStatistic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 0xF)
    goto LABEL_2;
  if (EnumCaseMultiPayload == 15)
  {
    sub_1BA5193C4((uint64_t)v6, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v11 = type metadata accessor for FeedPuzzleStatistic();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  if (EnumCaseMultiPayload == 16)
LABEL_2:
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  v9 = type metadata accessor for FeedPuzzleStatistic();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
}

uint64_t sub_1BB0093AC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  _QWORD *v22;
  _QWORD v24[2];

  v0 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D24D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - v10;
  v12 = type metadata accessor for FeedPuzzleStatistic();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  FeedItem.feedPuzzleStatistic.getter((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&unk_1ED3D24D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
    return 0;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    v17 = *(int *)(v12 + 32);
    v18 = type metadata accessor for PuzzleStatistic();
    sub_1BA4C2DD8((uint64_t)&v15[v17 + *(int *)(v18 + 20)], (uint64_t)v8, type metadata accessor for PuzzleStatisticCategory);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) >= 2)
    {
      if (EnumCaseMultiPayload)
      {
        sub_1BA5193C4((uint64_t)v8, (uint64_t)v2, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        PuzzleStatisticValue.primaryValue.getter();
        v20 = (uint64_t)v2;
        v21 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      }
      else
      {
        sub_1BA5193C4((uint64_t)v8, (uint64_t)v5, type metadata accessor for PuzzleStatisticValue);
        PuzzleStatisticValue.primaryValue.getter();
        v20 = (uint64_t)v5;
        v21 = type metadata accessor for PuzzleStatisticValue;
      }
      sub_1BA4A2E80(v20, v21);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for PuzzleStatisticCategory);
    }
    sub_1BB872FDC();
    sub_1BB872AFC(v22);
    swift_bridgeObjectRelease();
    v16 = v24[0];
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  }
  return v16;
}

unint64_t static FeedItem.LikeState.state(from:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result >= 3)
  {
    result = sub_1BB873EAC();
    __break(1u);
  }
  else
  {
    *a2 = 0x10002u >> (8 * result);
  }
  return result;
}

uint64_t FeedItem.SavedState.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedItem.AccessLevel.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t sub_1BB00975C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 232);
  v3 = *(_QWORD *)(v1 + 240);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t sub_1BB009768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t sub_1BB009778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

double sub_1BB009784@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB8E2860;
  return result;
}

uint64_t sub_1BB009794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

double sub_1BB0097A4@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB8E2840;
  return result;
}

uint64_t sub_1BB0097B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_1BA75A650(v4, v5);
}

uint64_t sub_1BB0097C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t _s8NewsFeed0B4ItemO4KindO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_42;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_42;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_42;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_42;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_42;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_42;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_42;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_42;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_42;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_42;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_42;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_42;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_42;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_42;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_42;
      v6 = 1;
      v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15)
        goto LABEL_42;
      v6 = 1;
      v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16)
        goto LABEL_42;
      v6 = 1;
      v3 = 16;
      break;
    default:
      if (v5 < 0x11)
      {
LABEL_42:
        v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        v6 = 1;
      }
      else
      {
        v6 = sub_1BB874398();
      }
      sub_1BA75A650(v4, v5);
      sub_1BA75A650(v2, v3);
      break;
  }
  sub_1BA6E0CBC(v2, v3);
  sub_1BA6E0CBC(v4, v5);
  return v6 & 1;
}

uint64_t sub_1BB0099E8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB009A24()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

unint64_t sub_1BB009A80(unint64_t result)
{
  if (result != 2)
    return sub_1BB009A90(result);
  return result;
}

unint64_t sub_1BB009A90(unint64_t result)
{
  if (result >= 2)
    return swift_unknownObjectRelease();
  return result;
}

unint64_t sub_1BB009AA4()
{
  unint64_t result;

  result = qword_1ED3AF770;
  if (!qword_1ED3AF770)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.Kind, &type metadata for FeedItem.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED3AF770);
  }
  return result;
}

unint64_t sub_1BB009AEC()
{
  unint64_t result;

  result = qword_1EF2B9440;
  if (!qword_1EF2B9440)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.PremiumBadge, &type metadata for FeedItem.PremiumBadge);
    atomic_store(result, (unint64_t *)&qword_1EF2B9440);
  }
  return result;
}

unint64_t sub_1BB009B34()
{
  unint64_t result;

  result = qword_1EF2B9448;
  if (!qword_1EF2B9448)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.LikeState, &type metadata for FeedItem.LikeState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9448);
  }
  return result;
}

unint64_t sub_1BB009B7C()
{
  unint64_t result;

  result = qword_1EF2B9450;
  if (!qword_1EF2B9450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.SavedState, &type metadata for FeedItem.SavedState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9450);
  }
  return result;
}

unint64_t sub_1BB009BC4()
{
  unint64_t result;

  result = qword_1EF2B9458;
  if (!qword_1EF2B9458)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.OffensiveState, &type metadata for FeedItem.OffensiveState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9458);
  }
  return result;
}

unint64_t sub_1BB009C0C()
{
  unint64_t result;

  result = qword_1EF2B9460;
  if (!qword_1EF2B9460)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.AccessLevel, &type metadata for FeedItem.AccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EF2B9460);
  }
  return result;
}

unint64_t sub_1BB009C54()
{
  unint64_t result;

  result = qword_1EF2B9468;
  if (!qword_1EF2B9468)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.DeletedState, &type metadata for FeedItem.DeletedState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9468);
  }
  return result;
}

unint64_t sub_1BB009C9C()
{
  unint64_t result;

  result = qword_1EF2B9470;
  if (!qword_1EF2B9470)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem.BlockedState, &type metadata for FeedItem.BlockedState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9470);
  }
  return result;
}

uint64_t dispatch thunk of FeedItemType.traits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemType.layoutDirection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemType.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedItemType.visibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedItemType.additionalFormatFeedItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

char *initializeBufferWithCopyOfBuffer for FeedItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  char *result;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  char *v63;
  int *v64;
  unsigned int (*v65)(char *, uint64_t, int *);
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  __int128 v73;
  int v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  _QWORD *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  __int128 v147;
  _OWORD *v148;
  _OWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  int *v159;
  __int128 v160;
  _OWORD *v161;
  _OWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  int *v174;
  unsigned int (*v175)(char *, uint64_t, int *);
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, char *, uint64_t);
  id v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  _OWORD *v193;
  _OWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _OWORD *v208;
  _OWORD *v209;
  __int128 v210;
  void *v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  id v215;
  id v216;
  __int128 v217;
  uint64_t v218;
  void *v219;
  id v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  id v225;
  _QWORD *v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  id v233;
  _QWORD *v234;
  unint64_t v235;
  void *v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  uint64_t v240;
  id v241;
  id v242;
  __int128 v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  uint64_t v247;
  char *v248;
  char *v249;
  id v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  _QWORD *v259;
  unint64_t v260;
  uint64_t v261;
  unint64_t v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  uint64_t v267;
  uint64_t v268;
  void *v269;
  id v270;
  _QWORD *v271;
  unint64_t v272;
  uint64_t v273;
  void *v274;
  void (*v275)(char *, _QWORD, uint64_t, int *);
  id v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  int EnumCaseMultiPayload;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  __int128 v290;
  uint64_t v291;
  char *v292;
  int *v293;
  uint64_t v294;
  int *v295;
  char *v296;
  uint64_t v297;
  _QWORD *v298;
  char *__dst;
  void (*__dsta)(char *, char *, void *);
  _QWORD *v301;
  int *v302;
  char *v303;
  void *v304;
  uint64_t v305;
  int *v306;
  char *v307;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        v8 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v8;
        a1[32] = a2[32];
        v9 = a2 + 40;
        v10 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        if (v10 >= 0x11)
        {
          *((_QWORD *)a1 + 5) = *v9;
          *((_QWORD *)a1 + 6) = v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)v9;
        }
        goto LABEL_93;
      case 1u:
        v50 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v50;
        v51 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v51;
        a1[32] = a2[32];
        v52 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v52;
        v53 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v53;
        v54 = a2 + 72;
        v55 = *((_QWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= 0x11)
        {
          *((_QWORD *)a1 + 9) = *v54;
          *((_QWORD *)a1 + 10) = v55;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v54;
        }
        goto LABEL_93;
      case 2u:
        v13 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v13;
        v14 = (int *)type metadata accessor for FeedBannerAd();
        v15 = v14[5];
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_1BB8721C0();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
        v20 = v14[7];
        v21 = &a1[v20];
        v22 = &a2[v20];
        *(_QWORD *)v21 = *(_QWORD *)v22;
        v21[8] = v22[8];
        v23 = v14[8];
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = *((_QWORD *)v25 + 1);
        if (v26 >= 0x11)
          goto LABEL_40;
        *(_OWORD *)v24 = *(_OWORD *)v25;
        goto LABEL_93;
      case 3u:
        v56 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v56;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        v57 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v57;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        a1[56] = a2[56];
        v302 = (int *)type metadata accessor for FeedHeadline(0);
        v58 = v302[10];
        v59 = &a1[v58];
        v60 = &a2[v58];
        *v59 = a2[v58];
        v59[1] = a2[v58 + 1];
        v61 = (int *)type metadata accessor for FeedHeadline.State(0);
        v62 = v61[6];
        __dst = &v59[v62];
        v63 = &v60[v62];
        v64 = (int *)type metadata accessor for SharedItem();
        v297 = *((_QWORD *)v64 - 1);
        v65 = *(unsigned int (**)(char *, uint64_t, int *))(v297 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v65(v63, 1, v64))
        {
          v66 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          v178 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(__dst, v63, v178);
          __dst[v64[5]] = v63[v64[5]];
          v179 = v64[6];
          v180 = *(void **)&v63[v179];
          *(_QWORD *)&__dst[v179] = v180;
          v181 = v64[7];
          v307 = &__dst[v181];
          v296 = &v63[v181];
          v182 = sub_1BB86C67C();
          v183 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16);
          v184 = v180;
          v183(v307, v296, v182);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v297 + 56))(__dst, 0, 1, v64);
        }
        v59[v61[7]] = v60[v61[7]];
        v59[v61[8]] = v60[v61[8]];
        v59[v61[9]] = v60[v61[9]];
        v59[v61[10]] = v60[v61[10]];
        v185 = v302[11];
        v186 = &a1[v185];
        v187 = &a2[v185];
        v188 = sub_1BB871B24();
        v189 = *(_QWORD *)(v188 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v186, v187, v188);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
        }
        v197 = v302[12];
        v198 = &a1[v197];
        v199 = &a2[v197];
        v200 = *((_QWORD *)v199 + 1);
        if (v200 >= 0x11)
        {
          *(_QWORD *)v198 = *(_QWORD *)v199;
          *((_QWORD *)v198 + 1) = v200;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v198 = *(_OWORD *)v199;
        }
        v201 = v302[13];
        v202 = *(_QWORD *)&a2[v201];
        if (v202 >= 2)
        {
          if (v202 == 2)
          {
            *(_QWORD *)&a1[v201] = 2;
          }
          else
          {
            *(_QWORD *)&a1[v201] = v202;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&a1[v201] = v202;
        }
        v218 = v302[14];
        v219 = *(void **)&a2[v218];
        *(_QWORD *)&a1[v218] = v219;
        v220 = v219;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        v27 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v27;
        a1[16] = a2[16];
        v28 = a2 + 24;
        v29 = *((_QWORD *)a2 + 4);
        if (v29 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v28;
          *((_QWORD *)a1 + 4) = v29;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v28;
        }
        v118 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v118;
        v119 = (int *)type metadata accessor for FeedWebEmbed();
        v120 = v119[8];
        v121 = &a1[v120];
        v122 = &a2[v120];
        v123 = sub_1BB86C67C();
        v124 = *(_QWORD *)(v123 - 8);
        v125 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
        swift_bridgeObjectRetain();
        v125(v121, v122, v123);
        v126 = v119[9];
        v127 = &a1[v126];
        v128 = &a2[v126];
        __dsta = (void (*)(char *, char *, void *))v125;
        v304 = (void *)v123;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(&a2[v126], 1, v123))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          v125(v127, v128, v123);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v127, 0, 1, v123);
        }
        *(_QWORD *)&a1[v119[10]] = *(_QWORD *)&a2[v119[10]];
        *(_QWORD *)&a1[v119[11]] = *(_QWORD *)&a2[v119[11]];
        v152 = v119[12];
        v153 = &a1[v152];
        v306 = v119;
        v154 = &a2[v152];
        v155 = type metadata accessor for FeedHeadline(0);
        v156 = *(_QWORD *)(v155 - 8);
        v157 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48);
        swift_retain();
        swift_retain();
        if (v157(v154, 1, v155))
        {
          sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
          v159 = v306;
        }
        else
        {
          v165 = *((_QWORD *)v154 + 1);
          *(_QWORD *)v153 = *(_QWORD *)v154;
          *((_QWORD *)v153 + 1) = v165;
          *((_QWORD *)v153 + 2) = *((_QWORD *)v154 + 2);
          v153[24] = v154[24];
          v166 = (int *)v155;
          v167 = *((_QWORD *)v154 + 5);
          *((_QWORD *)v153 + 4) = *((_QWORD *)v154 + 4);
          *((_QWORD *)v153 + 5) = v167;
          *((_QWORD *)v153 + 6) = *((_QWORD *)v154 + 6);
          v153[56] = v154[56];
          v294 = v156;
          v295 = v166;
          v168 = v166[10];
          v169 = &v153[v168];
          v298 = v154;
          v170 = &v154[v168];
          *v169 = v154[v168];
          v169[1] = v154[v168 + 1];
          v171 = type metadata accessor for FeedHeadline.State(0);
          v172 = *(int *)(v171 + 24);
          v292 = &v169[v172];
          v293 = (int *)v171;
          v173 = &v170[v172];
          v174 = (int *)type metadata accessor for SharedItem();
          v291 = *((_QWORD *)v174 - 1);
          v175 = *(unsigned int (**)(char *, uint64_t, int *))(v291 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v175(v173, 1, v174))
          {
            v176 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v292, v173, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
          }
          else
          {
            v244 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v292, v173, v244);
            v292[v174[5]] = v173[v174[5]];
            v245 = v174[6];
            v246 = *(void **)&v173[v245];
            *(_QWORD *)&v292[v245] = v246;
            v247 = v174[7];
            v248 = &v292[v247];
            v249 = &v173[v247];
            v250 = v246;
            __dsta(v248, v249, v304);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v291 + 56))(v292, 0, 1, v174);
          }
          v169[v293[7]] = v170[v293[7]];
          v169[v293[8]] = v170[v293[8]];
          v169[v293[9]] = v170[v293[9]];
          v169[v293[10]] = v170[v293[10]];
          v251 = v295[11];
          v252 = &v153[v251];
          v253 = (char *)v298 + v251;
          v254 = sub_1BB871B24();
          v255 = *(_QWORD *)(v254 - 8);
          v159 = v306;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v255 + 48))(v253, 1, v254))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v252, v253, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v252, v253, v254);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v252, 0, 1, v254);
          }
          v257 = v295[12];
          v258 = &v153[v257];
          v259 = (_QWORD *)((char *)v298 + v257);
          v260 = v259[1];
          if (v260 >= 0x11)
          {
            *(_QWORD *)v258 = *v259;
            *((_QWORD *)v258 + 1) = v260;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v258 = *(_OWORD *)v259;
          }
          v261 = v295[13];
          v262 = *(_QWORD *)((char *)v298 + v261);
          if (v262 >= 2)
          {
            if (v262 == 2)
            {
              *(_QWORD *)&v153[v261] = 2;
            }
            else
            {
              *(_QWORD *)&v153[v261] = v262;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v153[v261] = v262;
          }
          v273 = v295[14];
          v274 = *(void **)((char *)v298 + v273);
          *(_QWORD *)&v153[v273] = v274;
          v275 = *(void (**)(char *, _QWORD, uint64_t, int *))(v294 + 56);
          v276 = v274;
          v275(v153, 0, 1, v295);
        }
        v277 = v159[13];
        v278 = &a1[v277];
        v279 = &a2[v277];
        v280 = type metadata accessor for WebEmbedDataVisualization();
        v281 = *(_QWORD *)(v280 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48))(v279, 1, v280))
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v278, v279, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v284 = *(_QWORD *)v279;
          if (EnumCaseMultiPayload == 1)
          {
            v285 = *((_QWORD *)v279 + 1);
            *(_QWORD *)v278 = v284;
            *((_QWORD *)v278 + 1) = v285;
            v286 = type metadata accessor for GenericDataVisualization();
            v287 = *(int *)(v286 + 20);
            v288 = &v278[v287];
            v289 = &v279[v287];
            v159 = v306;
            swift_bridgeObjectRetain();
            __dsta(v288, v289, v304);
            *(_QWORD *)&v278[*(int *)(v286 + 24)] = *(_QWORD *)&v279[*(int *)(v286 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_QWORD *)v278 = v284;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
        }
        a1[v159[14]] = a2[v159[14]];
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        v67 = *(void **)a2;
        v68 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v68;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v69 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v69;
        a1[64] = a2[64];
        v70 = *((_QWORD *)a2 + 10);
        v71 = v67;
        swift_bridgeObjectRetain();
        v72 = v69;
        if (v70 == 1)
        {
          v73 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v73;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v70;
          v131 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v131;
          v133 = (void *)*((_QWORD *)a2 + 13);
          v132 = *((_QWORD *)a2 + 14);
          *((_QWORD *)a1 + 13) = v133;
          *((_QWORD *)a1 + 14) = v132;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v134 = v133;
        }
        v135 = a2 + 120;
        v136 = *((_QWORD *)a2 + 16);
        if (v136 >= 0x11)
        {
          *((_QWORD *)a1 + 15) = *v135;
          *((_QWORD *)a1 + 16) = v136;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v135;
        }
        a1[136] = a2[136];
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        v74 = a2[281];
        if (v74 == 2)
        {
          v204 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v204;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          v205 = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = v205;
          v206 = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 9) = v206;
          v207 = *((_QWORD *)a2 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v207 != 1)
          {
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = v207;
            v228 = *((_QWORD *)a2 + 15);
            swift_bridgeObjectRetain();
            if (v228)
            {
              v229 = *((_QWORD *)a2 + 16);
              *((_QWORD *)a1 + 15) = v228;
              *((_QWORD *)a1 + 16) = v229;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v228 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v228);
              *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
            }
            else
            {
              v290 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v290;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            a1[144] = a2[144];
            goto LABEL_143;
          }
          v208 = a1 + 80;
          v209 = a2 + 80;
          v210 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v210;
          a1[144] = a2[144];
        }
        else
        {
          if (v74 != 1)
          {
            v211 = *(void **)a2;
            v212 = *((_QWORD *)a2 + 1);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *((_QWORD *)a1 + 1) = v212;
            *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
            a1[40] = a2[40];
            v213 = (void *)*((_QWORD *)a2 + 7);
            *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
            *((_QWORD *)a1 + 7) = v213;
            a1[64] = a2[64];
            v214 = *((_QWORD *)a2 + 10);
            v215 = v211;
            swift_bridgeObjectRetain();
            v216 = v213;
            if (v214 == 1)
            {
              v217 = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
              *(_OWORD *)(a1 + 88) = v217;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
            }
            else
            {
              *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
              *((_QWORD *)a1 + 10) = v214;
              v230 = *((_QWORD *)a2 + 12);
              *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
              *((_QWORD *)a1 + 12) = v230;
              v232 = (void *)*((_QWORD *)a2 + 13);
              v231 = *((_QWORD *)a2 + 14);
              *((_QWORD *)a1 + 13) = v232;
              *((_QWORD *)a1 + 14) = v231;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v233 = v232;
            }
            v234 = a2 + 120;
            v235 = *((_QWORD *)a2 + 16);
            if (v235 >= 0x11)
            {
              *((_QWORD *)a1 + 15) = *v234;
              *((_QWORD *)a1 + 16) = v235;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v234;
            }
            a1[136] = a2[136];
            goto LABEL_143;
          }
          v75 = *(void **)a2;
          v76 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v76;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          v77 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = v77;
          a1[64] = a2[64];
          v78 = *((_QWORD *)a2 + 10);
          v79 = v75;
          swift_bridgeObjectRetain();
          v80 = v77;
          if (v78 == 1)
          {
            v81 = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 88) = v81;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = v78;
            v222 = *((_QWORD *)a2 + 12);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = v222;
            v224 = (void *)*((_QWORD *)a2 + 13);
            v223 = *((_QWORD *)a2 + 14);
            *((_QWORD *)a1 + 13) = v224;
            *((_QWORD *)a1 + 14) = v223;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v225 = v224;
          }
          v226 = a2 + 120;
          v227 = *((_QWORD *)a2 + 16);
          if (v227 >= 0x11)
          {
            *((_QWORD *)a1 + 15) = *v226;
            *((_QWORD *)a1 + 16) = v227;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v226;
          }
          v209 = a2 + 144;
          v236 = (void *)*((_QWORD *)a2 + 18);
          a1[136] = a2[136];
          if (v236)
          {
            v237 = *((_QWORD *)a2 + 19);
            v238 = *((_QWORD *)a2 + 20);
            *((_QWORD *)a1 + 18) = v236;
            *((_QWORD *)a1 + 19) = v237;
            *((_QWORD *)a1 + 20) = v238;
            *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
            *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
            a1[184] = a2[184];
            v239 = (void *)*((_QWORD *)a2 + 25);
            *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
            *((_QWORD *)a1 + 25) = v239;
            a1[208] = a2[208];
            v240 = *((_QWORD *)a2 + 28);
            v241 = v236;
            swift_bridgeObjectRetain();
            v242 = v239;
            if (v240 == 1)
            {
              v243 = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
              *(_OWORD *)(a1 + 232) = v243;
              *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
            }
            else
            {
              *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
              *((_QWORD *)a1 + 28) = v240;
              v267 = *((_QWORD *)a2 + 30);
              *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
              *((_QWORD *)a1 + 30) = v267;
              v269 = (void *)*((_QWORD *)a2 + 31);
              v268 = *((_QWORD *)a2 + 32);
              *((_QWORD *)a1 + 31) = v269;
              *((_QWORD *)a1 + 32) = v268;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v270 = v269;
            }
            v271 = a2 + 264;
            v272 = *((_QWORD *)a2 + 34);
            if (v272 >= 0x11)
            {
              *((_QWORD *)a1 + 33) = *v271;
              *((_QWORD *)a1 + 34) = v272;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)v271;
            }
            a1[280] = a2[280];
LABEL_143:
            a1[281] = v74;
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          v208 = a1 + 144;
          v263 = *((_OWORD *)a2 + 16);
          *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
          *((_OWORD *)a1 + 16) = v263;
          *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
          v264 = *((_OWORD *)a2 + 12);
          *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
          *((_OWORD *)a1 + 12) = v264;
          v265 = *((_OWORD *)a2 + 14);
          *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
          *((_OWORD *)a1 + 14) = v265;
        }
        v266 = v209[1];
        *v208 = *v209;
        v208[1] = v266;
        goto LABEL_143;
      case 7u:
        v82 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v82;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v83 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v83;
        v84 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v84;
        v85 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v85 == 1)
        {
          v86 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v86;
          a1[144] = a2[144];
          v87 = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 6) = v87;
        }
        else
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = v85;
          v137 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v137)
          {
            v138 = *((_QWORD *)a2 + 16);
            *((_QWORD *)a1 + 15) = v137;
            *((_QWORD *)a1 + 16) = v138;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v137 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v137);
            *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
          }
          else
          {
            v221 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v221;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          a1[144] = a2[144];
        }
        goto LABEL_93;
      case 8u:
        v88 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v88;
        v89 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v90 = &a1[v89];
        v91 = &a2[v89];
        v92 = *(_QWORD *)&a2[v89 + 8];
        *(_QWORD *)v90 = *(_QWORD *)&a2[v89];
        *((_QWORD *)v90 + 1) = v92;
        v93 = *(_QWORD *)&a2[v89 + 24];
        *((_QWORD *)v90 + 2) = *(_QWORD *)&a2[v89 + 16];
        *((_QWORD *)v90 + 3) = v93;
        v94 = type metadata accessor for FormatCustomItem.Resolved();
        v95 = *(int *)(v94 + 24);
        v303 = &v90[v95];
        v305 = v94;
        v96 = &v91[v95];
        v97 = type metadata accessor for FormatCustomItem.Action();
        v98 = *(_QWORD *)(v97 - 8);
        v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v99(v96, 1, v97))
        {
          sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v303, v96, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          v191 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v303, v96, v191);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v303, 0, 1, v97);
        }
        *(_QWORD *)&v90[*(int *)(v305 + 28)] = *(_QWORD *)&v91[*(int *)(v305 + 28)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        v30 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v30;
        v31 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v31;
        v32 = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32)
        {
          v33 = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 7) = v32;
          *((_QWORD *)a1 + 8) = v33;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v32);
        }
        else
        {
          v147 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v147;
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        }
        v148 = a1 + 72;
        v149 = a2 + 72;
        v150 = *((_QWORD *)a2 + 12);
        if (v150)
        {
          v151 = *((_QWORD *)a2 + 13);
          *((_QWORD *)a1 + 12) = v150;
          *((_QWORD *)a1 + 13) = v151;
          (**(void (***)(_OWORD *, _OWORD *))(v150 - 8))(v148, v149);
        }
        else
        {
          v160 = *(_OWORD *)(a2 + 88);
          *v148 = *v149;
          *(_OWORD *)(a1 + 88) = v160;
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        }
        v161 = a1 + 112;
        v162 = a2 + 112;
        v163 = *((_QWORD *)a2 + 17);
        if (v163)
        {
          v164 = *((_QWORD *)a2 + 18);
          *((_QWORD *)a1 + 17) = v163;
          *((_QWORD *)a1 + 18) = v164;
          (**(void (***)(_OWORD *, _OWORD *))(v163 - 8))(v161, v162);
        }
        else
        {
          v177 = *((_OWORD *)a2 + 8);
          *v161 = *v162;
          *((_OWORD *)a1 + 8) = v177;
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        }
        goto LABEL_93;
      case 0xAu:
        v101 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v101;
        v102 = (int *)type metadata accessor for FeedEngagementBanner();
        v103 = v102[5];
        v104 = &a1[v103];
        v105 = &a2[v103];
        v106 = sub_1BB86EDAC();
        v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        v107(v104, v105, v106);
        *(_QWORD *)&a1[v102[6]] = *(_QWORD *)&a2[v102[6]];
        v108 = v102[7];
        v109 = &a1[v108];
        v110 = &a2[v108];
        *(_QWORD *)v109 = *(_QWORD *)v110;
        v109[8] = v110[8];
        v111 = v102[8];
        v24 = &a1[v111];
        v25 = &a2[v111];
        v26 = *((_QWORD *)v25 + 1);
        if (v26 >= 0x11)
        {
LABEL_40:
          *(_QWORD *)v24 = *(_QWORD *)v25;
          *((_QWORD *)v24 + 1) = v26;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v24 = *(_OWORD *)v25;
        }
        goto LABEL_93;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xCu:
        v34 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v34;
        v35 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v35;
        a1[32] = a2[32];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        v112 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v112;
        a1[16] = a2[16];
        v113 = a2 + 24;
        v114 = *((_QWORD *)a2 + 4);
        if (v114 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v113;
          *((_QWORD *)a1 + 4) = v114;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v113;
        }
        v139 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v139;
        v140 = (void *)*((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v140;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v141 = *((_QWORD *)a2 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v142 = v140;
        swift_bridgeObjectRetain();
        if (v141)
        {
          v143 = *((_QWORD *)a2 + 15);
          *((_QWORD *)a1 + 14) = v141;
          *((_QWORD *)a1 + 15) = v143;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v141 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v141);
        }
        else
        {
          v192 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v192;
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        }
        v193 = a1 + 128;
        v194 = a2 + 128;
        v195 = *((_QWORD *)a2 + 19);
        if (v195)
        {
          v196 = *((_QWORD *)a2 + 20);
          *((_QWORD *)a1 + 19) = v195;
          *((_QWORD *)a1 + 20) = v196;
          (**(void (***)(_OWORD *, _OWORD *))(v195 - 8))(v193, v194);
        }
        else
        {
          v203 = *((_OWORD *)a2 + 9);
          *v193 = *v194;
          *((_OWORD *)a1 + 9) = v203;
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        }
        goto LABEL_93;
      case 0xEu:
        v36 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v36;
        a1[16] = a2[16];
        v37 = a2 + 24;
        v38 = *((_QWORD *)a2 + 4);
        if (v38 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v37;
          *((_QWORD *)a1 + 4) = v38;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v37;
        }
        v130 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v130;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xFu:
        v115 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v115;
        a1[16] = a2[16];
        v116 = a2 + 24;
        v117 = *((_QWORD *)a2 + 4);
        if (v117 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v116;
          *((_QWORD *)a1 + 4) = v117;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v116;
        }
        v144 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v144;
        v145 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v145] = *(_QWORD *)&a2[v145];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v146 = (char *)&loc_1BB00A858 + 4 * word_1BB8E2110[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        v39 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v39;
        v40 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v40;
        v41 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v41;
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        v42 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v42;
        v43 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v43;
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        a1[112] = a2[112];
        v44 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v44;
        a1[136] = a2[136];
        v45 = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = v45;
        v46 = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = v46;
        a1[184] = a2[184];
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        v47 = *((_QWORD *)a2 + 25);
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        *((_QWORD *)a1 + 25) = v47;
        a1[224] = a2[224];
        v48 = *((_QWORD *)a2 + 27);
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        *((_QWORD *)a1 + 27) = v48;
        v301 = a2 + 232;
        v49 = *((_QWORD *)a2 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49 >= 0x11)
        {
          *((_QWORD *)a1 + 29) = *v301;
          *((_QWORD *)a1 + 30) = v49;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)v301;
        }
LABEL_93:
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  v11 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  a1 = (char *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
  swift_retain();
  return a1;
}

char *assignWithCopy for FeedItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  char *v35;
  int *v36;
  unsigned int (*v37)(char *, uint64_t, int *);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  __int128 v45;
  __int128 v46;
  int v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void *v95;
  id v96;
  uint64_t v97;
  char v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  char *v103;
  __int128 v104;
  __int128 v105;
  _OWORD *v106;
  __int128 *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  _OWORD *v118;
  __int128 *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  int *v127;
  unsigned int (*v128)(char *, uint64_t, int *);
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  id v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  _OWORD *v148;
  __int128 *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  void *v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  id v167;
  id v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  void *v172;
  id v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  void *v177;
  id v178;
  uint64_t v179;
  char v180;
  void *v181;
  id v182;
  void *v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  id v187;
  id v188;
  __int128 v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  id v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  unint64_t v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  void *v215;
  id v216;
  uint64_t v217;
  void *v218;
  void (*v219)(char *, _QWORD, uint64_t, int *);
  id v220;
  int *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int EnumCaseMultiPayload;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  char *result;
  uint64_t v236;
  int *v237;
  uint64_t v238;
  int *v239;
  int *v240;
  char *v241;
  _QWORD *v242;
  char *v243;
  char *__dst;
  char *__dsta;
  char *__dstb;
  void *v247;
  int *v248;
  char *v249;
  void (*v250)(char *, char *, uint64_t);
  uint64_t v251;
  uint64_t v252;
  char *v253;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v6 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v6;
        v7 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        if (v7 >= 0x11)
        {
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
        goto LABEL_138;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v27 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v27;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v28 = *((_QWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28 >= 0x11)
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        }
        goto LABEL_138;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v8 = (int *)type metadata accessor for FeedBannerAd();
        v9 = v8[5];
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_1BB8721C0();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
        v14 = v8[7];
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = v16[8];
        *(_QWORD *)v15 = *(_QWORD *)v16;
        v15[8] = v17;
        v18 = v8[8];
        v19 = &a1[v18];
        v20 = &a2[v18];
        if (*((_QWORD *)v20 + 1) >= 0x11uLL)
          goto LABEL_38;
        *(_OWORD *)v19 = *(_OWORD *)v20;
        goto LABEL_138;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 2) = v29;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        a1[56] = a2[56];
        v248 = (int *)type metadata accessor for FeedHeadline(0);
        v30 = v248[10];
        v31 = &a1[v30];
        v32 = &a2[v30];
        *v31 = a2[v30];
        v31[1] = a2[v30 + 1];
        v33 = (int *)type metadata accessor for FeedHeadline.State(0);
        v34 = v33[6];
        __dst = &v31[v34];
        v35 = &v32[v34];
        v36 = (int *)type metadata accessor for SharedItem();
        v242 = (_QWORD *)*((_QWORD *)v36 - 1);
        v37 = (unsigned int (*)(char *, uint64_t, int *))v242[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v37(v35, 1, v36))
        {
          v38 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          v132 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(__dst, v35, v132);
          __dst[v36[5]] = v35[v36[5]];
          v133 = v36[6];
          v134 = *(void **)&v35[v133];
          *(_QWORD *)&__dst[v133] = v134;
          v135 = v36[7];
          v253 = &__dst[v135];
          v241 = &v35[v135];
          v136 = sub_1BB86C67C();
          v137 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
          v138 = v134;
          v137(v253, v241, v136);
          ((void (*)(char *, _QWORD, uint64_t, int *))v242[7])(__dst, 0, 1, v36);
        }
        v31[v33[7]] = v32[v33[7]];
        v31[v33[8]] = v32[v33[8]];
        v31[v33[9]] = v32[v33[9]];
        v31[v33[10]] = v32[v33[10]];
        v139 = v248[11];
        v140 = &a1[v139];
        v141 = &a2[v139];
        v142 = sub_1BB871B24();
        v143 = *(_QWORD *)(v142 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v140, v141, v142);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
        }
        v151 = v248[12];
        v152 = &a1[v151];
        v153 = &a2[v151];
        if (*((_QWORD *)v153 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v152 = *(_QWORD *)v153;
          *((_QWORD *)v152 + 1) = *((_QWORD *)v153 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v152 = *(_OWORD *)v153;
        }
        v154 = v248[13];
        v155 = *(_QWORD *)&a2[v154];
        if (v155 >= 2)
        {
          if (v155 == 2)
          {
            *(_QWORD *)&a1[v154] = 2;
          }
          else
          {
            *(_QWORD *)&a1[v154] = v155;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&a1[v154] = v155;
        }
        v171 = v248[14];
        v172 = *(void **)&a2[v171];
        *(_QWORD *)&a1[v171] = v172;
        v173 = v172;
        goto LABEL_138;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v21 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v21;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v84 = (int *)type metadata accessor for FeedWebEmbed();
        v85 = v84[8];
        v86 = &a1[v85];
        v87 = &a2[v85];
        v88 = sub_1BB86C67C();
        v89 = *(_QWORD *)(v88 - 8);
        v90 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
        swift_bridgeObjectRetain();
        v90(v86, v87, v88);
        v91 = v84[9];
        v92 = &a1[v91];
        v93 = &a2[v91];
        v252 = v88;
        v250 = v90;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(&a2[v91], 1, v88))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          v90(v92, v93, v88);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v92, 0, 1, v88);
        }
        *(_QWORD *)&a1[v84[10]] = *(_QWORD *)&a2[v84[10]];
        *(_QWORD *)&a1[v84[11]] = *(_QWORD *)&a2[v84[11]];
        v109 = v84[12];
        v110 = &a1[v109];
        v111 = &a2[v109];
        v112 = type metadata accessor for FeedHeadline(0);
        v113 = *(_QWORD *)(v112 - 8);
        v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
        swift_retain();
        swift_retain();
        if (v114(v111, 1, v112))
        {
          sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          v238 = v113;
          v239 = (int *)v112;
          v240 = v84;
          *(_QWORD *)v110 = *(_QWORD *)v111;
          *((_QWORD *)v110 + 1) = *((_QWORD *)v111 + 1);
          v121 = *((_QWORD *)v111 + 2);
          v110[24] = v111[24];
          *((_QWORD *)v110 + 2) = v121;
          *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
          *((_QWORD *)v110 + 5) = *((_QWORD *)v111 + 5);
          *((_QWORD *)v110 + 6) = *((_QWORD *)v111 + 6);
          v110[56] = v111[56];
          v122 = *(int *)(v112 + 40);
          v123 = &v110[v122];
          __dsta = v111;
          v124 = &v111[v122];
          *v123 = *v124;
          v123[1] = v124[1];
          v237 = (int *)type metadata accessor for FeedHeadline.State(0);
          v125 = v237[6];
          v243 = &v123[v125];
          v126 = &v124[v125];
          v127 = (int *)type metadata accessor for SharedItem();
          v236 = *((_QWORD *)v127 - 1);
          v128 = *(unsigned int (**)(char *, uint64_t, int *))(v236 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v128(v126, 1, v127))
          {
            v129 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v243, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
          }
          else
          {
            v191 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v243, v126, v191);
            v243[v127[5]] = v126[v127[5]];
            v192 = v127[6];
            v193 = *(void **)&v126[v192];
            *(_QWORD *)&v243[v192] = v193;
            v194 = v127[7];
            v195 = &v243[v194];
            v196 = &v126[v194];
            v197 = v193;
            v250(v195, v196, v252);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v236 + 56))(v243, 0, 1, v127);
          }
          v123[v237[7]] = v124[v237[7]];
          v123[v237[8]] = v124[v237[8]];
          v123[v237[9]] = v124[v237[9]];
          v123[v237[10]] = v124[v237[10]];
          v198 = v239[11];
          v199 = &v110[v198];
          v200 = &__dsta[v198];
          v201 = sub_1BB871B24();
          v202 = *(_QWORD *)(v201 - 8);
          v84 = v240;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48))(v200, 1, v201))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v199, v200, v201);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
          }
          v204 = v239[12];
          v205 = &v110[v204];
          v206 = &__dsta[v204];
          if (*((_QWORD *)v206 + 1) >= 0x11uLL)
          {
            *(_QWORD *)v205 = *(_QWORD *)v206;
            *((_QWORD *)v205 + 1) = *((_QWORD *)v206 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v205 = *(_OWORD *)v206;
          }
          v207 = v239[13];
          v208 = *(_QWORD *)&__dsta[v207];
          if (v208 >= 2)
          {
            if (v208 == 2)
            {
              *(_QWORD *)&v110[v207] = 2;
            }
            else
            {
              *(_QWORD *)&v110[v207] = v208;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v110[v207] = v208;
          }
          v217 = v239[14];
          v218 = *(void **)&__dsta[v217];
          *(_QWORD *)&v110[v217] = v218;
          v219 = *(void (**)(char *, _QWORD, uint64_t, int *))(v238 + 56);
          v220 = v218;
          v219(v110, 0, 1, v239);
        }
        v221 = v84;
        v222 = v84[13];
        v223 = &a1[v222];
        v224 = &a2[v222];
        v225 = type metadata accessor for WebEmbedDataVisualization();
        v226 = *(_QWORD *)(v225 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v224, 1, v225))
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v223 = *(_QWORD *)v224;
          if (EnumCaseMultiPayload == 1)
          {
            *((_QWORD *)v223 + 1) = *((_QWORD *)v224 + 1);
            v229 = type metadata accessor for GenericDataVisualization();
            v230 = *(int *)(v229 + 20);
            __dstb = &v223[v230];
            v231 = &v224[v230];
            swift_bridgeObjectRetain();
            v250(__dstb, v231, v252);
            *(_QWORD *)&v223[*(int *)(v229 + 24)] = *(_QWORD *)&v224[*(int *)(v229 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v226 + 56))(v223, 0, 1, v225);
        }
        a1[v221[14]] = a2[v221[14]];
        goto LABEL_138;
      case 5u:
        v39 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        a1[25] = a2[25];
        v40 = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        *((_QWORD *)a1 + 4) = v40;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v41 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 7) = v41;
        a1[64] = a2[64];
        v42 = *((_QWORD *)a2 + 10);
        v43 = v39;
        swift_bridgeObjectRetain();
        v44 = v41;
        if (v42 == 1)
        {
          v45 = *(_OWORD *)(a2 + 72);
          v46 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v46;
          *(_OWORD *)(a1 + 72) = v45;
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          v95 = (void *)*((_QWORD *)a2 + 13);
          *((_QWORD *)a1 + 13) = v95;
          *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v96 = v95;
        }
        if (*((_QWORD *)a2 + 16) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        a1[136] = a2[136];
        goto LABEL_138;
      case 6u:
        v47 = a2[281];
        if (v47 == 2)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          v158 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v158;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          v159 = *((_QWORD *)a2 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v159 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            v160 = *((_OWORD *)a2 + 6);
            v161 = *((_OWORD *)a2 + 7);
            v162 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 7) = v161;
            *((_OWORD *)a1 + 8) = v162;
            *((_OWORD *)a1 + 6) = v160;
          }
          else
          {
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            v179 = *((_QWORD *)a2 + 15);
            swift_bridgeObjectRetain();
            if (v179)
            {
              *((_QWORD *)a1 + 15) = v179;
              *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v179 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v179);
              v180 = a2[144];
              *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
              a1[144] = v180;
            }
            else
            {
              v232 = *((_OWORD *)a2 + 6);
              v233 = *((_OWORD *)a2 + 7);
              v234 = *((_OWORD *)a2 + 8);
              a1[144] = a2[144];
              *((_OWORD *)a1 + 7) = v233;
              *((_OWORD *)a1 + 8) = v234;
              *((_OWORD *)a1 + 6) = v232;
            }
          }
        }
        else if (v47 == 1)
        {
          v48 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          a1[25] = a2[25];
          v49 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v49;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          v50 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 7) = v50;
          a1[64] = a2[64];
          v51 = *((_QWORD *)a2 + 10);
          v52 = v48;
          swift_bridgeObjectRetain();
          v53 = v50;
          if (v51 == 1)
          {
            v54 = *(_OWORD *)(a2 + 72);
            v55 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v55;
            *(_OWORD *)(a1 + 72) = v54;
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
            v177 = (void *)*((_QWORD *)a2 + 13);
            *((_QWORD *)a1 + 13) = v177;
            *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v178 = v177;
          }
          if (*((_QWORD *)a2 + 16) >= 0x11uLL)
          {
            *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          a1[136] = a2[136];
          v183 = (void *)*((_QWORD *)a2 + 18);
          if (v183)
          {
            *((_QWORD *)a1 + 18) = v183;
            *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
            *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
            a1[168] = a2[168];
            a1[169] = a2[169];
            v184 = *((_QWORD *)a2 + 22);
            a1[184] = a2[184];
            *((_QWORD *)a1 + 22) = v184;
            *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
            v185 = (void *)*((_QWORD *)a2 + 25);
            *((_QWORD *)a1 + 25) = v185;
            a1[208] = a2[208];
            v186 = *((_QWORD *)a2 + 28);
            v187 = v183;
            swift_bridgeObjectRetain();
            v188 = v185;
            if (v186 == 1)
            {
              v189 = *(_OWORD *)(a2 + 216);
              v190 = *(_OWORD *)(a2 + 248);
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 248) = v190;
              *(_OWORD *)(a1 + 216) = v189;
            }
            else
            {
              *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
              *((_QWORD *)a1 + 28) = *((_QWORD *)a2 + 28);
              *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
              *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
              v215 = (void *)*((_QWORD *)a2 + 31);
              *((_QWORD *)a1 + 31) = v215;
              *((_QWORD *)a1 + 32) = *((_QWORD *)a2 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v216 = v215;
            }
            if (*((_QWORD *)a2 + 34) >= 0x11uLL)
            {
              *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
              *((_QWORD *)a1 + 34) = *((_QWORD *)a2 + 34);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
            }
            a1[280] = a2[280];
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            v209 = *((_OWORD *)a2 + 10);
            v210 = *((_OWORD *)a2 + 11);
            v211 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v211;
            *((_OWORD *)a1 + 10) = v209;
            *((_OWORD *)a1 + 11) = v210;
            v212 = *((_OWORD *)a2 + 14);
            v213 = *((_OWORD *)a2 + 15);
            v214 = *((_OWORD *)a2 + 16);
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            *((_OWORD *)a1 + 15) = v213;
            *((_OWORD *)a1 + 16) = v214;
            *((_OWORD *)a1 + 14) = v212;
          }
        }
        else
        {
          v163 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          a1[25] = a2[25];
          v164 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v164;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          v165 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 7) = v165;
          a1[64] = a2[64];
          v166 = *((_QWORD *)a2 + 10);
          v167 = v163;
          swift_bridgeObjectRetain();
          v168 = v165;
          if (v166 == 1)
          {
            v169 = *(_OWORD *)(a2 + 72);
            v170 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v170;
            *(_OWORD *)(a1 + 72) = v169;
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
            v181 = (void *)*((_QWORD *)a2 + 13);
            *((_QWORD *)a1 + 13) = v181;
            *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v182 = v181;
          }
          if (*((_QWORD *)a2 + 16) >= 0x11uLL)
          {
            *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          a1[136] = a2[136];
        }
        a1[281] = v47;
        goto LABEL_138;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        v56 = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        *((_QWORD *)a1 + 4) = v56;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v57 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v57 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          v58 = *((_OWORD *)a2 + 6);
          v59 = *((_OWORD *)a2 + 7);
          v60 = *((_OWORD *)a2 + 8);
          a1[144] = a2[144];
          *((_OWORD *)a1 + 7) = v59;
          *((_OWORD *)a1 + 8) = v60;
          *((_OWORD *)a1 + 6) = v58;
        }
        else
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          v97 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v97)
          {
            *((_QWORD *)a1 + 15) = v97;
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v97);
            v98 = a2[144];
            *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
            a1[144] = v98;
          }
          else
          {
            v174 = *((_OWORD *)a2 + 6);
            v175 = *((_OWORD *)a2 + 7);
            v176 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 7) = v175;
            *((_OWORD *)a1 + 8) = v176;
            *((_OWORD *)a1 + 6) = v174;
          }
        }
        goto LABEL_138;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v61 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v62 = &a1[v61];
        v63 = &a2[v61];
        *(_QWORD *)v62 = *(_QWORD *)&a2[v61];
        *((_QWORD *)v62 + 1) = *(_QWORD *)&a2[v61 + 8];
        *((_QWORD *)v62 + 2) = *(_QWORD *)&a2[v61 + 16];
        *((_QWORD *)v62 + 3) = *(_QWORD *)&a2[v61 + 24];
        v64 = type metadata accessor for FormatCustomItem.Resolved();
        v65 = *(int *)(v64 + 24);
        v249 = &v62[v65];
        v251 = v64;
        v66 = &v63[v65];
        v67 = type metadata accessor for FormatCustomItem.Action();
        v68 = *(_QWORD *)(v67 - 8);
        v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v69(v66, 1, v67))
        {
          sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v249, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          v145 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v249, v66, v145);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v249, 0, 1, v67);
        }
        *(_QWORD *)&v62[*(int *)(v251 + 28)] = *(_QWORD *)&v63[*(int *)(v251 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v22 = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22)
        {
          *((_QWORD *)a1 + 7) = v22;
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v22);
        }
        else
        {
          v104 = *((_OWORD *)a2 + 2);
          v105 = *((_OWORD *)a2 + 3);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_OWORD *)a1 + 2) = v104;
          *((_OWORD *)a1 + 3) = v105;
        }
        v106 = a1 + 72;
        v107 = (__int128 *)(a2 + 72);
        v108 = *((_QWORD *)a2 + 12);
        if (v108)
        {
          *((_QWORD *)a1 + 12) = v108;
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          (**(void (***)(_OWORD *, __int128 *))(v108 - 8))(v106, v107);
        }
        else
        {
          v116 = *v107;
          v117 = *(_OWORD *)(a2 + 88);
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          *v106 = v116;
          *(_OWORD *)(a1 + 88) = v117;
        }
        v118 = a1 + 112;
        v119 = (__int128 *)(a2 + 112);
        v120 = *((_QWORD *)a2 + 17);
        if (v120)
        {
          *((_QWORD *)a1 + 17) = v120;
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          (**(void (***)(_OWORD *, __int128 *))(v120 - 8))(v118, v119);
        }
        else
        {
          v130 = *v119;
          v131 = *((_OWORD *)a2 + 8);
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          *v118 = v130;
          *((_OWORD *)a1 + 8) = v131;
        }
        goto LABEL_138;
      case 0xAu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v71 = (int *)type metadata accessor for FeedEngagementBanner();
        v72 = v71[5];
        v73 = &a1[v72];
        v74 = &a2[v72];
        v75 = sub_1BB86EDAC();
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        *(_QWORD *)&a1[v71[6]] = *(_QWORD *)&a2[v71[6]];
        v77 = v71[7];
        v78 = &a1[v77];
        v79 = &a2[v77];
        v80 = v79[8];
        *(_QWORD *)v78 = *(_QWORD *)v79;
        v78[8] = v80;
        v81 = v71[8];
        v19 = &a1[v81];
        v20 = &a2[v81];
        if (*((_QWORD *)v20 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(_QWORD *)v19 = *(_QWORD *)v20;
          *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v19 = *(_OWORD *)v20;
        }
        goto LABEL_138;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        goto LABEL_138;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v23 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v23;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xDu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v82 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v82;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v99 = (void *)*((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 8) = v99;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v100 = *((_QWORD *)a2 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v101 = v99;
        swift_bridgeObjectRetain();
        if (v100)
        {
          *((_QWORD *)a1 + 14) = v100;
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v100 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v100);
        }
        else
        {
          v146 = *(_OWORD *)(a2 + 88);
          v147 = *(_OWORD *)(a2 + 104);
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          *(_OWORD *)(a1 + 88) = v146;
          *(_OWORD *)(a1 + 104) = v147;
        }
        v148 = a1 + 128;
        v149 = (__int128 *)(a2 + 128);
        v150 = *((_QWORD *)a2 + 19);
        if (v150)
        {
          *((_QWORD *)a1 + 19) = v150;
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
          (**(void (***)(_OWORD *, __int128 *))(v150 - 8))(v148, v149);
        }
        else
        {
          v156 = *v149;
          v157 = *((_OWORD *)a2 + 9);
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
          *v148 = v156;
          *((_OWORD *)a1 + 9) = v157;
        }
        goto LABEL_138;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v24 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v24;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xFu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v83 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v83;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v102 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v102] = *(_QWORD *)&a2[v102];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v103 = (char *)&loc_1BB00CA50 + 4 * word_1BB8E218A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        a1[49] = a2[49];
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        a1[112] = a2[112];
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
        a1[136] = a2[136];
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
        v25 = *((_QWORD *)a2 + 22);
        a1[184] = a2[184];
        *((_QWORD *)a1 + 22) = v25;
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        v26 = *((_QWORD *)a2 + 27);
        a1[224] = a2[224];
        *((_QWORD *)a1 + 27) = v26;
        v247 = (void *)*((_QWORD *)a2 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)v247 >= 0x11)
        {
          *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
          *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
LABEL_138:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for FeedItem(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *result;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  char *__dst;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v6 = (int *)type metadata accessor for FeedBannerAd();
      v7 = v6[5];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_1BB8721C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v11 = v6[7];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v12[8] = v13[8];
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
      goto LABEL_40;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      v14 = (int *)type metadata accessor for FeedHeadline(0);
      v15 = v14[10];
      v16 = &a1[v15];
      v17 = &a2[v15];
      *v16 = a2[v15];
      v16[1] = a2[v15 + 1];
      v18 = (int *)type metadata accessor for FeedHeadline.State(0);
      v19 = v18[6];
      v20 = &v16[v19];
      v21 = &v17[v19];
      v22 = (int *)type metadata accessor for SharedItem();
      v23 = *((_QWORD *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        v24 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v59 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v20, v21, v59);
        v20[v22[5]] = v21[v22[5]];
        *(_QWORD *)&v20[v22[6]] = *(_QWORD *)&v21[v22[6]];
        v60 = v22[7];
        v109 = &v20[v60];
        v61 = &v21[v60];
        v62 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v109, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      v16[v18[7]] = v17[v18[7]];
      v16[v18[8]] = v17[v18[8]];
      v16[v18[9]] = v17[v18[9]];
      v16[v18[10]] = v17[v18[10]];
      v63 = v14[11];
      v64 = &a1[v63];
      v65 = &a2[v63];
      v66 = sub_1BB871B24();
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      *(_OWORD *)&a1[v14[12]] = *(_OWORD *)&a2[v14[12]];
      v76 = v14[13];
      v77 = *(_QWORD *)&a2[v76];
      if (v77 == 2)
        v77 = 2;
      *(_QWORD *)&a1[v76] = v77;
      *(_QWORD *)&a1[v14[14]] = *(_QWORD *)&a2[v14[14]];
      goto LABEL_40;
    case 4u:
      v25 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v25;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v26 = (int *)type metadata accessor for FeedWebEmbed();
      v27 = v26[8];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = sub_1BB86C67C();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v32(v28, v29, v30);
      v33 = v26[9];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v107 = v32;
      v108 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&a2[v33], 1, v30))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
      }
      *(_QWORD *)&a1[v26[10]] = *(_QWORD *)&a2[v26[10]];
      *(_QWORD *)&a1[v26[11]] = *(_QWORD *)&a2[v26[11]];
      v69 = v26[12];
      v70 = &a1[v69];
      v71 = &a2[v69];
      v72 = (int *)type metadata accessor for FeedHeadline(0);
      v73 = *((_QWORD *)v72 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v73 + 48))(v71, 1, v72))
      {
        sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v104 = v73;
        v105 = v26;
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
        v70[24] = v71[24];
        *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
        *(_OWORD *)(v70 + 40) = *(_OWORD *)(v71 + 40);
        v70[56] = v71[56];
        v78 = v72[10];
        v79 = &v70[v78];
        v80 = &v71[v78];
        *v79 = v71[v78];
        v79[1] = v71[v78 + 1];
        v81 = (int *)type metadata accessor for FeedHeadline.State(0);
        v82 = v81[6];
        __dst = &v79[v82];
        v83 = &v80[v82];
        v84 = (int *)type metadata accessor for SharedItem();
        v103 = *((_QWORD *)v84 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v103 + 48))(v83, 1, v84))
        {
          v85 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          v86 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(__dst, v83, v86);
          __dst[v84[5]] = v83[v84[5]];
          *(_QWORD *)&__dst[v84[6]] = *(_QWORD *)&v83[v84[6]];
          v107(&__dst[v84[7]], &v83[v84[7]], v108);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(__dst, 0, 1, v84);
        }
        v79[v81[7]] = v80[v81[7]];
        v79[v81[8]] = v80[v81[8]];
        v79[v81[9]] = v80[v81[9]];
        v79[v81[10]] = v80[v81[10]];
        v87 = v72[11];
        v88 = &v70[v87];
        v89 = &v71[v87];
        v90 = sub_1BB871B24();
        v91 = *(_QWORD *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        v26 = v105;
        *(_OWORD *)&v70[v72[12]] = *(_OWORD *)&v71[v72[12]];
        v93 = v72[13];
        v94 = *(_QWORD *)&v71[v93];
        if (v94 == 2)
          v94 = 2;
        *(_QWORD *)&v70[v93] = v94;
        *(_QWORD *)&v70[v72[14]] = *(_QWORD *)&v71[v72[14]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v104 + 56))(v70, 0, 1, v72);
      }
      v95 = v26[13];
      v96 = &a1[v95];
      v97 = &a2[v95];
      v98 = type metadata accessor for WebEmbedDataVisualization();
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)v96 = *(_OWORD *)v97;
          v101 = type metadata accessor for GenericDataVisualization();
          v107(&v96[*(int *)(v101 + 20)], &v97[*(int *)(v101 + 20)], v108);
          *(_QWORD *)&v96[*(int *)(v101 + 24)] = *(_QWORD *)&v97[*(int *)(v101 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v96, v97, *(_QWORD *)(v99 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      a1[v26[14]] = a2[v26[14]];
      goto LABEL_40;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = *(_OWORD *)&a2[v37 + 16];
      *(_OWORD *)v38 = *(_OWORD *)&a2[v37];
      *((_OWORD *)v38 + 1) = v40;
      v41 = type metadata accessor for FormatCustomItem.Resolved();
      v42 = *(int *)(v41 + 24);
      v43 = &v38[v42];
      v44 = &v39[v42];
      v45 = type metadata accessor for FormatCustomItem.Action();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v75 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v43, v44, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(_QWORD *)&v38[*(int *)(v41 + 28)] = *(_QWORD *)&v39[*(int *)(v41 + 28)];
      goto LABEL_40;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v48 = (int *)type metadata accessor for FeedEngagementBanner();
      v49 = v48[5];
      v50 = &a1[v49];
      v51 = &a2[v49];
      v52 = sub_1BB86EDAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      *(_QWORD *)&a1[v48[6]] = *(_QWORD *)&a2[v48[6]];
      v53 = v48[7];
      v54 = &a1[v53];
      v55 = &a2[v53];
      v54[8] = v55[8];
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_OWORD *)&a1[v48[8]] = *(_OWORD *)&a2[v48[8]];
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    case 0xFu:
      v56 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v56;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v57] = *(_QWORD *)&a2[v57];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v58 = (char *)&loc_1BB00E498 + 4 * word_1BB8E21A0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for FeedItem(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *result;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  char *__dst;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v6 = (int *)type metadata accessor for FeedBannerAd();
        v7 = v6[5];
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
        v11 = v6[7];
        v12 = &a1[v11];
        v13 = &a2[v11];
        v12[8] = v13[8];
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
        goto LABEL_41;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        v14 = (int *)type metadata accessor for FeedHeadline(0);
        v15 = v14[10];
        v16 = &a1[v15];
        v17 = &a2[v15];
        *v16 = a2[v15];
        v16[1] = a2[v15 + 1];
        v18 = (int *)type metadata accessor for FeedHeadline.State(0);
        v19 = v18[6];
        v20 = &v16[v19];
        v21 = &v17[v19];
        v22 = (int *)type metadata accessor for SharedItem();
        v23 = *((_QWORD *)v22 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
        {
          v24 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v59 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v20, v21, v59);
          v20[v22[5]] = v21[v22[5]];
          *(_QWORD *)&v20[v22[6]] = *(_QWORD *)&v21[v22[6]];
          v60 = v22[7];
          v109 = &v20[v60];
          v61 = &v21[v60];
          v62 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v109, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
        }
        v16[v18[7]] = v17[v18[7]];
        v16[v18[8]] = v17[v18[8]];
        v16[v18[9]] = v17[v18[9]];
        v16[v18[10]] = v17[v18[10]];
        v63 = v14[11];
        v64 = &a1[v63];
        v65 = &a2[v63];
        v66 = sub_1BB871B24();
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        *(_OWORD *)&a1[v14[12]] = *(_OWORD *)&a2[v14[12]];
        v76 = v14[13];
        v77 = *(_QWORD *)&a2[v76];
        if (v77 == 2)
          v77 = 2;
        *(_QWORD *)&a1[v76] = v77;
        *(_QWORD *)&a1[v14[14]] = *(_QWORD *)&a2[v14[14]];
        goto LABEL_41;
      case 4u:
        v25 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v25;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v26 = (int *)type metadata accessor for FeedWebEmbed();
        v27 = v26[8];
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = sub_1BB86C67C();
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v32(v28, v29, v30);
        v33 = v26[9];
        v34 = &a1[v33];
        v35 = &a2[v33];
        v107 = v32;
        v108 = v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&a2[v33], 1, v30))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v32(v34, v35, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
        }
        *(_QWORD *)&a1[v26[10]] = *(_QWORD *)&a2[v26[10]];
        *(_QWORD *)&a1[v26[11]] = *(_QWORD *)&a2[v26[11]];
        v69 = v26[12];
        v70 = &a1[v69];
        v71 = &a2[v69];
        v72 = (int *)type metadata accessor for FeedHeadline(0);
        v73 = *((_QWORD *)v72 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v73 + 48))(v71, 1, v72))
        {
          sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          v104 = v73;
          v105 = v26;
          *(_OWORD *)v70 = *(_OWORD *)v71;
          *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
          v70[24] = v71[24];
          *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
          *(_OWORD *)(v70 + 40) = *(_OWORD *)(v71 + 40);
          v70[56] = v71[56];
          v78 = v72[10];
          v79 = &v70[v78];
          v80 = &v71[v78];
          *v79 = v71[v78];
          v79[1] = v71[v78 + 1];
          v81 = (int *)type metadata accessor for FeedHeadline.State(0);
          v82 = v81[6];
          __dst = &v79[v82];
          v83 = &v80[v82];
          v84 = (int *)type metadata accessor for SharedItem();
          v103 = *((_QWORD *)v84 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v103 + 48))(v83, 1, v84))
          {
            v85 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          }
          else
          {
            v86 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(__dst, v83, v86);
            __dst[v84[5]] = v83[v84[5]];
            *(_QWORD *)&__dst[v84[6]] = *(_QWORD *)&v83[v84[6]];
            v107(&__dst[v84[7]], &v83[v84[7]], v108);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(__dst, 0, 1, v84);
          }
          v79[v81[7]] = v80[v81[7]];
          v79[v81[8]] = v80[v81[8]];
          v79[v81[9]] = v80[v81[9]];
          v79[v81[10]] = v80[v81[10]];
          v87 = v72[11];
          v88 = &v70[v87];
          v89 = &v71[v87];
          v90 = sub_1BB871B24();
          v91 = *(_QWORD *)(v90 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
          }
          v26 = v105;
          *(_OWORD *)&v70[v72[12]] = *(_OWORD *)&v71[v72[12]];
          v93 = v72[13];
          v94 = *(_QWORD *)&v71[v93];
          if (v94 == 2)
            v94 = 2;
          *(_QWORD *)&v70[v93] = v94;
          *(_QWORD *)&v70[v72[14]] = *(_QWORD *)&v71[v72[14]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v104 + 56))(v70, 0, 1, v72);
        }
        v95 = v26[13];
        v96 = &a1[v95];
        v97 = &a2[v95];
        v98 = type metadata accessor for WebEmbedDataVisualization();
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v96 = *(_OWORD *)v97;
            v101 = type metadata accessor for GenericDataVisualization();
            v107(&v96[*(int *)(v101 + 20)], &v97[*(int *)(v101 + 20)], v108);
            *(_QWORD *)&v96[*(int *)(v101 + 24)] = *(_QWORD *)&v97[*(int *)(v101 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v96, v97, *(_QWORD *)(v99 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        a1[v26[14]] = a2[v26[14]];
        goto LABEL_41;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = *(_OWORD *)&a2[v37 + 16];
        *(_OWORD *)v38 = *(_OWORD *)&a2[v37];
        *((_OWORD *)v38 + 1) = v40;
        v41 = type metadata accessor for FormatCustomItem.Resolved();
        v42 = *(int *)(v41 + 24);
        v43 = &v38[v42];
        v44 = &v39[v42];
        v45 = type metadata accessor for FormatCustomItem.Action();
        v46 = *(_QWORD *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v75 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v43, v44, v75);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        *(_QWORD *)&v38[*(int *)(v41 + 28)] = *(_QWORD *)&v39[*(int *)(v41 + 28)];
        goto LABEL_41;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v48 = (int *)type metadata accessor for FeedEngagementBanner();
        v49 = v48[5];
        v50 = &a1[v49];
        v51 = &a2[v49];
        v52 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        *(_QWORD *)&a1[v48[6]] = *(_QWORD *)&a2[v48[6]];
        v53 = v48[7];
        v54 = &a1[v53];
        v55 = &a2[v53];
        v54[8] = v55[8];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *(_OWORD *)&a1[v48[8]] = *(_OWORD *)&a2[v48[8]];
LABEL_41:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v56 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v56;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v57] = *(_QWORD *)&a2[v57];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v58 = (char *)&loc_1BB00F7F0 + 4 * word_1BB8E21B6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItem.Kind(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFEE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483631);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 16;
  if (v4 >= 0x12)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedItem.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEF)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483631;
    if (a3 >= 0x7FFFFFEF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFEF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 16;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.Kind()
{
  return &type metadata for FeedItem.Kind;
}

uint64_t storeEnumTagSinglePayload for FeedItem.PremiumBadge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB01081C + 4 * byte_1BB8E21C3[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB010850 + 4 * byte_1BB8E21BE[v4]))();
}

uint64_t sub_1BB010850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB010858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB010860);
  return result;
}

uint64_t sub_1BB01086C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB010874);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB010878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB010880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.LikeState()
{
  return &type metadata for FeedItem.LikeState;
}

ValueMetadata *type metadata accessor for FeedItem.SavedState()
{
  return &type metadata for FeedItem.SavedState;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedItem.SharedState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for SharedItem();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1BB86C8B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      *((_BYTE *)a1 + v7[5]) = *((_BYTE *)a2 + v7[5]);
      v11 = v7[6];
      v12 = *(void **)((char *)a2 + v11);
      *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
      v13 = v7[7];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1BB86C67C();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v18 = v12;
      v17(v14, v15, v16);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

_BYTE *assignWithCopy for FeedItem.SharedState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = (int *)type metadata accessor for SharedItem();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      a1[v6[5]] = a2[v6[5]];
      v22 = v6[6];
      v23 = *(void **)&a2[v22];
      v24 = *(void **)&a1[v22];
      *(_QWORD *)&a1[v22] = v23;
      v25 = v23;

      v26 = v6[7];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      return a1;
    }
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  a1[v6[5]] = a2[v6[5]];
  v12 = v6[6];
  v13 = *(void **)&a2[v12];
  *(_QWORD *)&a1[v12] = v13;
  v14 = v6[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_1BB86C67C();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19 = v13;
  v18(v15, v16, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for FeedItem.SharedState(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = (int *)type metadata accessor for SharedItem();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    a1[v6[5]] = a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    v9 = v6[7];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *assignWithTake for FeedItem.SharedState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = (int *)type metadata accessor for SharedItem();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v17 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(a1, a2, v17);
      a1[v6[5]] = a2[v6[5]];
      v18 = v6[6];
      v19 = *(void **)&a1[v18];
      *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];

      v20 = v6[7];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
      return a1;
    }
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  a1[v6[5]] = a2[v6[5]];
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  v12 = v6[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1BB010E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for SharedItem();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedItem.SharedState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB010E64(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for SharedItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BB010EB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BB010EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedItem();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

ValueMetadata *type metadata accessor for FeedItem.OffensiveState()
{
  return &type metadata for FeedItem.OffensiveState;
}

uint64_t _s8NewsFeed8FeedItemO9LikeStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB010F88 + 4 * byte_1BB8E21CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB010FBC + 4 * byte_1BB8E21C8[v4]))();
}

uint64_t sub_1BB010FBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB010FC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB010FCCLL);
  return result;
}

uint64_t sub_1BB010FD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB010FE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB010FE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB010FEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.AccessLevel()
{
  return &type metadata for FeedItem.AccessLevel;
}

ValueMetadata *type metadata accessor for FeedItem.DeletedState()
{
  return &type metadata for FeedItem.DeletedState;
}

uint64_t _s8NewsFeed8FeedItemO10SavedStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB011064 + 4 * byte_1BB8E21D7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB011098 + 4 * byte_1BB8E21D2[v4]))();
}

uint64_t sub_1BB011098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0110A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0110A8);
  return result;
}

uint64_t sub_1BB0110B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0110BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB0110C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0110C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.BlockedState()
{
  return &type metadata for FeedItem.BlockedState;
}

void sub_1BB011110(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v16 = a2;
  v17 = a1;
  v3 = *v2;
  v4 = type metadata accessor for FeedHeadline(0);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v20 = v5;
  v22 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB871E6C();
  v7 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  v25 = v7;
  MEMORY[0x1E0C80A78](v6);
  v19 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[2] = v8;
  MEMORY[0x1E0C80A78](v9);
  v18 = (char *)v14 - v10;
  sub_1BB871C80();
  v15 = *(_QWORD *)(v3 + 96);
  v11 = *(_QWORD *)(v3 + 120);
  v12 = *(_QWORD *)(v3 + 128);
  v13 = *(_QWORD *)(v3 + 136);
  v26 = *(_OWORD *)(v3 + 80);
  v27 = v15;
  v23 = *(_OWORD *)(v3 + 104);
  v28 = v23;
  v29 = v11;
  v30 = v12;
  v31 = v13;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

BOOL sub_1BB01183C()
{
  char v1;

  sub_1BB871E60();
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_bridgeObjectRelease();
  swift_release();
  return (v1 & 1) == 0;
}

uint64_t sub_1BB0118F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1BB011988@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37[2];
  uint64_t v38;

  v36 = a5;
  v28 = a3;
  v29 = a4;
  v27 = a2;
  v6 = type metadata accessor for FeedHeadline(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v7;
  MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB871C80();
  v10 = *(_QWORD *)(v9 - 8);
  v26 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB871E6C();
  v14 = *(_QWORD *)(v13 - 8);
  v25 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[4];
  v33 = a1[3];
  v34 = v17;
  v35 = __swift_project_boxed_opaque_existential_1(a1, v33);
  v32 = sub_1BB8719BC();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v27, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v28, v9);
  sub_1BA4C2DD8(v29, v38, type metadata accessor for FeedHeadline);
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v37);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (v15 + *(unsigned __int8 *)(v10 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = (v11 + *(unsigned __int8 *)(v30 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v21 = (v31 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v22 + v18, v16, v25);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v22 + v19, v12, v26);
  sub_1BA5193C4(v38, v22 + v20, type metadata accessor for FeedHeadline);
  sub_1BA4CECCC(v37, v22 + v21);
  sub_1BB871F08();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530C0];
  sub_1BB871DA0();
  sub_1BA4A2870(&qword_1ED3D51C0, v23, MEMORY[0x1E0D530B8]);
  sub_1BB871ED8();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB011C44(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v27 = a5;
  v28 = a3;
  v29 = a4;
  v35 = sub_1BB871CBC();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v32 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB871CD4();
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x1E0C80A78](v7);
  v34 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB871B84();
  v25 = *(_QWORD *)(v9 - 8);
  v26 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB871B48();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB8719E0();
  v30 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB871E48();
  sub_1BB871E48();
  sub_1BB8719D4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4A2870(&qword_1EF2B9478, (uint64_t (*)(uint64_t))MEMORY[0x1E0D525A8], MEMORY[0x1E0D525A0]);
  v31 = v16;
  sub_1BB871EF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB871C80();
  sub_1BA4A2870(&qword_1ED3B0B58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BF8], MEMORY[0x1E0D52BF0]);
  sub_1BB871EF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = v29;
  swift_unknownObjectRetain();
  sub_1BB871B3C();
  sub_1BA4A2870(&qword_1EF2B9480, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52770], MEMORY[0x1E0D52768]);
  sub_1BB871EF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (objc_msgSend(*(id *)(v19 + 40), sel_sourceChannel))
  {
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    swift_unknownObjectRetain();
    sub_1BB871B78();
    sub_1BA4A2870(&qword_1EF2B9488, (uint64_t (*)(uint64_t))MEMORY[0x1E0D527E8], MEMORY[0x1E0D527E0]);
    v20 = v26;
    sub_1BB871EF0();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v20);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x1E0D52C50], v35);
  v21 = v34;
  sub_1BB871CC8();
  sub_1BA4A2870(&qword_1ED3B0B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C90], MEMORY[0x1E0D52C88]);
  v22 = v37;
  sub_1BB871EF0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v18, v31);
}

BOOL sub_1BB012034()
{
  return sub_1BB01183C();
}

uint64_t sub_1BB012050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_1BB871E6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BB871C80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (int *)type metadata accessor for FeedHeadline(0);
  v10 = (v7 + v8 + *(unsigned __int8 *)(*((_QWORD *)v9 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v9 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  v11 = v0 + v10;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v12 = v9[10];
  v13 = v0 + v10 + v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v14 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = sub_1BB86C8B0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

    v16 = v13 + *(int *)(v14 + 28);
    v17 = sub_1BB86C67C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  v18 = v11 + v9[11];
  v19 = sub_1BB871B24();
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  if (*(_QWORD *)(v11 + v9[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v11 + v9[13]) >= 3uLL)
    swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BB012268@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(sub_1BB871E6C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1BB871C80() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  return sub_1BB011988(a1, v2 + v6, v2 + v9, v2 + ((v9 + v10 + v11) & ~v11), a2);
}

uint64_t sub_1BB012310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = sub_1BB871E6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BB871C80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (int *)type metadata accessor for FeedHeadline(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = *(_QWORD *)(v10 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  v12 = v0 + v11;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v13 = v9[10];
  v14 = v0 + v11 + v13 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v15 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_1BB86C8B0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);

    v17 = v14 + *(int *)(v15 + 28);
    v18 = sub_1BB86C67C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  v19 = v12 + v9[11];
  v20 = sub_1BB871B24();
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  if (*(_QWORD *)(v12 + v9[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + v9[13]) >= 3uLL)
    swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + ((v23 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_1BB01253C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(sub_1BB871E6C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1BB871C80() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_1BB011C44(a1, v1 + v4, v1 + v7, v1 + v10, (_QWORD *)(v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB0125E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  id v14;
  int v15;
  unsigned int *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[136];
  _BYTE v45[136];
  _BYTE v46[136];

  v3 = v2;
  v6 = sub_1BB8701C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA53BAD8(v3, (uint64_t)v45);
  sub_1BA53BAD8((uint64_t)v45, (uint64_t)v46);
  if (sub_1BA895ED8((uint64_t)v46) == 1)
  {
    v10 = sub_1BA895EE4((uint64_t)v46);
    v11 = *(_BYTE *)(v10 + 8);
    *(_QWORD *)&v36 = *(_QWORD *)v10;
    sub_1BA53BAD8((uint64_t)v45, (uint64_t)v44);
    sub_1BA895EE4((uint64_t)v44);
    swift_retain();
    FormatColor.color.getter();
    v13 = v12;
    v14 = objc_msgSend(v12, sel_resolvedColorWithTraitCollection_, a1);

    sub_1BAC68720((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769654);
    LOBYTE(v36) = v11;
    v15 = sub_1BA89EE50();
    *(_QWORD *)a2 = v14;
    *(_DWORD *)(a2 + 8) = v15;
    v16 = (unsigned int *)MEMORY[0x1E0DBABF0];
  }
  else
  {
    v17 = sub_1BA895EE4((uint64_t)v46);
    sub_1BA895FE8((__int128 *)v17, (uint64_t)v44);
    v18 = sub_1BA896024((uint64_t)v44);
    v19 = sub_1BA896030((uint64_t)v44);
    if (v18 == 1)
    {
      v20 = *(_OWORD *)(v19 + 80);
      v40 = *(_OWORD *)(v19 + 64);
      v41 = v20;
      v21 = *(_OWORD *)(v19 + 112);
      v42 = *(_OWORD *)(v19 + 96);
      v43 = v21;
      v22 = *(_OWORD *)(v19 + 16);
      v36 = *(_OWORD *)v19;
      v37 = v22;
      v23 = *(_OWORD *)(v19 + 48);
      v38 = *(_OWORD *)(v19 + 32);
      v39 = v23;
      sub_1BB1E4FCC(a2);
      v24 = (unsigned int *)MEMORY[0x1E0DBC538];
    }
    else
    {
      v35 = *(_OWORD *)(v19 + 16);
      v25 = *(_QWORD *)(v19 + 32);
      v26 = *(_QWORD *)(v19 + 40);
      sub_1BAC68720((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      v27 = swift_bridgeObjectRetain();
      sub_1BA98444C(v27);
      swift_bridgeObjectRelease();
      *(_OWORD *)v9 = v35;
      *((_QWORD *)v9 + 2) = v25;
      *((_QWORD *)v9 + 3) = v26;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB85B8], v6);
      swift_bridgeObjectRetain();
      sub_1BB870198();
      sub_1BAC68720((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769654);
      v24 = (unsigned int *)MEMORY[0x1E0DBC530];
    }
    v28 = *v24;
    v29 = sub_1BB8714DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(a2, v28, v29);
    sub_1BB0136EC();
    v31 = *(int *)(v30 + 48);
    LOBYTE(v36) = *(_BYTE *)(v17 + 128);
    *(_DWORD *)(a2 + v31) = sub_1BA89EE50();
    v16 = (unsigned int *)MEMORY[0x1E0DBABF8];
  }
  v32 = *v16;
  v33 = sub_1BB870C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(a2, v32, v33);
}

uint64_t sub_1BB0128B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentBlend.GradientData.init(from:)(a1, a2);
}

uint64_t sub_1BB0128C8(_QWORD *a1)
{
  return FormatImageAdjustmentBlend.GradientData.encode(to:)(a1);
}

uint64_t _s8NewsFeed26FormatImageAdjustmentBlendO12GradientDataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12[8];
  __int128 v13[8];
  __int128 v14[8];
  __int128 v15[8];

  sub_1BA895FE8((__int128 *)a1, (uint64_t)v14);
  v4 = *(_BYTE *)(a1 + 128);
  sub_1BA895FE8((__int128 *)a2, (uint64_t)v15);
  v5 = *(_BYTE *)(a2 + 128);
  sub_1BA895FE8(v14, (uint64_t)v13);
  sub_1BA895FE8(v15, (uint64_t)v12);
  if ((_s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0(v13, v12) & 1) != 0)
  {
    LOBYTE(v13[0]) = v4;
    LOBYTE(v12[0]) = v5;
    v6 = FormatBlendMode.rawValue.getter();
    v8 = v7;
    if (v6 == FormatBlendMode.rawValue.getter() && v8 == v9)
      v10 = 1;
    else
      v10 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t _s8NewsFeed26FormatImageAdjustmentBlendO9ColorDataV2eeoiySbAE_AEtFZ_0(uint64_t *a1)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v1 = *((_BYTE *)a1 + 8);
  v9 = *a1;
  static FormatColor.== infix(_:_:)((uint64_t)&v9);
  if ((v2 & 1) != 0)
  {
    LOBYTE(v9) = v1;
    v3 = FormatBlendMode.rawValue.getter();
    v5 = v4;
    if (v3 == FormatBlendMode.rawValue.getter() && v5 == v6)
      v7 = 1;
    else
      v7 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed26FormatImageAdjustmentBlendO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v24[8];
  char v25;
  _OWORD v26[8];
  char v27;
  _BYTE v28[136];
  _BYTE v29[136];
  _BYTE v30[136];
  _BYTE v31[136];
  uint64_t v32;
  _BYTE v33[136];

  sub_1BA53BAD8(a1, (uint64_t)v29);
  sub_1BA53BAD8(a2, (uint64_t)v30);
  sub_1BA53BAD8((uint64_t)v29, (uint64_t)v31);
  sub_1BA53BAD8((uint64_t)v30, (uint64_t)&v32);
  sub_1BA53BAD8((uint64_t)v29, (uint64_t)v33);
  if (sub_1BA895ED8((uint64_t)v33) == 1)
  {
    v3 = sub_1BA895EE4((uint64_t)v33);
    v4 = *(_QWORD *)v3;
    v5 = *(_BYTE *)(v3 + 8);
    sub_1BA53BAD8((uint64_t)v30, (uint64_t)v28);
    v6 = sub_1BA895ED8((uint64_t)v28);
    v7 = sub_1BA895EE4((uint64_t)v28);
    if (v6 == 1)
    {
      v8 = *(_QWORD *)v7;
      v9 = *(_BYTE *)(v7 + 8);
      *(_QWORD *)&v26[0] = v4;
      BYTE8(v26[0]) = v5;
      *(_QWORD *)&v24[0] = v8;
      BYTE8(v24[0]) = v9;
      sub_1BAC68720((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      v10 = _s8NewsFeed26FormatImageAdjustmentBlendO9ColorDataV2eeoiySbAE_AEtFZ_0((uint64_t *)v26);
LABEL_7:
      v14 = v10;
      sub_1BA895EF4((uint64_t)v31);
      sub_1BAC68720((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769654);
      sub_1BAC68720((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769654);
      return v14 & 1;
    }
  }
  else
  {
    v11 = sub_1BA895EE4((uint64_t)v33);
    sub_1BA53BAD8((uint64_t)v30, (uint64_t)v28);
    v12 = sub_1BA895ED8((uint64_t)v28);
    v13 = sub_1BA895EE4((uint64_t)v28);
    if (v12 != 1)
    {
      v15 = *(_OWORD *)(v11 + 112);
      v26[6] = *(_OWORD *)(v11 + 96);
      v26[7] = v15;
      v27 = *(_BYTE *)(v11 + 128);
      v16 = *(_OWORD *)(v11 + 48);
      v26[2] = *(_OWORD *)(v11 + 32);
      v26[3] = v16;
      v17 = *(_OWORD *)(v11 + 80);
      v26[4] = *(_OWORD *)(v11 + 64);
      v26[5] = v17;
      v18 = *(_OWORD *)(v11 + 16);
      v26[0] = *(_OWORD *)v11;
      v26[1] = v18;
      v19 = *(_OWORD *)(v13 + 112);
      v24[6] = *(_OWORD *)(v13 + 96);
      v24[7] = v19;
      v25 = *(_BYTE *)(v13 + 128);
      v20 = *(_OWORD *)(v13 + 48);
      v24[2] = *(_OWORD *)(v13 + 32);
      v24[3] = v20;
      v21 = *(_OWORD *)(v13 + 80);
      v24[4] = *(_OWORD *)(v13 + 64);
      v24[5] = v21;
      v22 = *(_OWORD *)(v13 + 16);
      v24[0] = *(_OWORD *)v13;
      v24[1] = v22;
      sub_1BAC68720((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      v10 = _s8NewsFeed26FormatImageAdjustmentBlendO12GradientDataV2eeoiySbAE_AEtFZ_0((uint64_t)v26, (uint64_t)v24);
      goto LABEL_7;
    }
  }
  sub_1BAC68720((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
  sub_1BAC68720((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
  sub_1BA895EF4((uint64_t)v31);
  v14 = 0;
  return v14 & 1;
}

unint64_t sub_1BB012CD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB012CF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB012CF8()
{
  unint64_t result;

  result = qword_1EF2B9490;
  if (!qword_1EF2B9490)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.GradientData, &type metadata for FormatImageAdjustmentBlend.GradientData);
    atomic_store(result, (unint64_t *)&qword_1EF2B9490);
  }
  return result;
}

uint64_t sub_1BB012D3C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE99314, (uint64_t (*)(void))sub_1BAEF1BB8, (uint64_t (*)(void))sub_1BB012D58);
}

unint64_t sub_1BB012D58()
{
  unint64_t result;

  result = qword_1EF2B9498;
  if (!qword_1EF2B9498)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.GradientData, &type metadata for FormatImageAdjustmentBlend.GradientData);
    atomic_store(result, (unint64_t *)&qword_1EF2B9498);
  }
  return result;
}

unint64_t sub_1BB012D9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB012DC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB012DC0()
{
  unint64_t result;

  result = qword_1EF2B94A0;
  if (!qword_1EF2B94A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.ColorData, &type metadata for FormatImageAdjustmentBlend.ColorData);
    atomic_store(result, (unint64_t *)&qword_1EF2B94A0);
  }
  return result;
}

uint64_t sub_1BB012E04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA534E9C, (uint64_t (*)(void))sub_1BA50D448, (uint64_t (*)(void))sub_1BB012E20);
}

unint64_t sub_1BB012E20()
{
  unint64_t result;

  result = qword_1EF2B94A8;
  if (!qword_1EF2B94A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.ColorData, &type metadata for FormatImageAdjustmentBlend.ColorData);
    atomic_store(result, (unint64_t *)&qword_1EF2B94A8);
  }
  return result;
}

unint64_t sub_1BB012E64(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB012E88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB012E88()
{
  unint64_t result;

  result = qword_1EF2B94B0;
  if (!qword_1EF2B94B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend, &type metadata for FormatImageAdjustmentBlend);
    atomic_store(result, (unint64_t *)&qword_1EF2B94B0);
  }
  return result;
}

uint64_t sub_1BB012ECC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA560FEC, (uint64_t (*)(void))sub_1BA53BB14, (uint64_t (*)(void))sub_1BB012EE8);
}

unint64_t sub_1BB012EE8()
{
  unint64_t result;

  result = qword_1EF2B94B8;
  if (!qword_1EF2B94B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend, &type metadata for FormatImageAdjustmentBlend);
    atomic_store(result, (unint64_t *)&qword_1EF2B94B8);
  }
  return result;
}

uint64_t destroy for FormatImageAdjustmentBlend(uint64_t a1)
{
  return sub_1BA769654(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
}

uint64_t initializeWithCopy for FormatImageAdjustmentBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_BYTE *)(a2 + 128);
  sub_1BA769620(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_BYTE *)(a1 + 128) = v20;
  return a1;
}

uint64_t assignWithCopy for FormatImageAdjustmentBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v32 = *(_QWORD *)(a2 + 112);
  v33 = *(_QWORD *)(a2 + 120);
  v34 = *(_BYTE *)(a2 + 128);
  sub_1BA769620(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 120);
  v25 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_QWORD *)(a1 + 112) = v32;
  *(_QWORD *)(a1 + 120) = v33;
  *(_BYTE *)(a1 + 128) = v34;
  sub_1BA769654(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24, v25);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustmentBlend(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v3 = *(_BYTE *)(a2 + 128);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a1 + 120);
  v17 = *(_BYTE *)(a1 + 128);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(_BYTE *)(a1 + 128) = v3;
  sub_1BA769654(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  return a1;
}

uint64_t sub_1BB01324C(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 128) & 0xF | (a2 << 7);
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentBlend()
{
  return &type metadata for FormatImageAdjustmentBlend;
}

uint64_t destroy for FormatDirectionalGradient(uint64_t *a1)
{
  return sub_1BA895D94(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
}

uint64_t initializeWithCopy for FormatImageAdjustmentBlend.GradientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a2 + 104);
  v19 = *(_QWORD *)(a2 + 112);
  v20 = *(_QWORD *)(a2 + 120);
  sub_1BA895C14(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 104) = v18;
  *(_QWORD *)(a1 + 112) = v19;
  *(_QWORD *)(a1 + 120) = v20;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for FormatImageAdjustmentBlend.GradientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v29 = *(_QWORD *)(a2 + 104);
  v30 = *(_QWORD *)(a2 + 112);
  v31 = *(_QWORD *)(a2 + 120);
  sub_1BA895C14(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28, v29);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v24;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a1 + 88) = v27;
  *(_QWORD *)(a1 + 96) = v28;
  *(_QWORD *)(a1 + 104) = v29;
  *(_QWORD *)(a1 + 112) = v30;
  *(_QWORD *)(a1 + 120) = v31;
  sub_1BA895D94(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1));
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustmentBlend.GradientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  sub_1BA895D94(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1));
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

double storeEnumTagSinglePayload for FormatImageAdjustmentBlend.GradientData(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 120) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 128) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 104) = 2 * -a2;
      *(_QWORD *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentBlend.GradientData()
{
  return &type metadata for FormatImageAdjustmentBlend.GradientData;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatImageAdjustmentBlend.ColorData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatImageAdjustmentBlend.ColorData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustmentBlend.ColorData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentBlend.ColorData()
{
  return &type metadata for FormatImageAdjustmentBlend.ColorData;
}

void sub_1BB0136EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B94C0)
  {
    sub_1BB8714DC();
    type metadata accessor for CGBlendMode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B94C0);
  }
}

id sub_1BB01375C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  char *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v18[4];

  v1 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem];
  }
  else
  {
    ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    v5 = v0;
    v6 = (void *)sub_1BB872970();
    if (ObjectType)
    {
      v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      v8 = *(_QWORD *)(ObjectType - 8);
      v9 = MEMORY[0x1E0C80A78](v7);
      v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v8 + 16))(v11, v9);
      v12 = sub_1BB874380();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      v12 = 0;
    }
    v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 2, v12, sel_doCreatePackage, v18[0]);

    swift_unknownObjectRelease();
    v15 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v14;
    v3 = v14;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

void sub_1BB0138E8()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  objc_super v27;

  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  v5 = objc_msgSend(v0, sel_navigationItem);
  v6 = objc_msgSend(v3, sel_systemBackgroundColor);
  sub_1BB80F468(v5, (uint64_t)v6);

  v7 = objc_msgSend(v0, sel_navigationItem);
  v8 = (void *)sub_1BB872970();
  objc_msgSend(v7, sel_setTitle_, v8);

  v9 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB8856E0;
  v11 = (void *)sub_1BB872970();
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v11);

  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v14 = v0;
  v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_doDismissView);

  *(_QWORD *)(v10 + 32) = v15;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v16 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setRightBarButtonItems_, v16);

  v17 = sub_1BB01375C();
  v18 = objc_msgSend(v3, sel_systemBlueColor);
  objc_msgSend(v17, sel_setTintColor_, v18);

  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v19 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v19 + 40) = sub_1BB01375C();
  sub_1BB872DCC();
  v20 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setToolbarItems_, v20);

  v21 = *(void **)&v14[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_tableView];
  objc_msgSend(v21, sel_setDataSource_, v14);
  objc_msgSend(v21, sel_setDelegate_, v14);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, sel_setTableFooterView_, v22);

  type metadata accessor for DebugFormatCreatePackageTableViewCell();
  sub_1BB873234();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  sub_1BB873234();
  type metadata accessor for DebugFormatMarkdownHeaderFooterView();
  sub_1BB873228();
  v23 = objc_msgSend(v14, sel_view);
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, sel_addSubview_, v21);

    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v14, sel_doEndEditing);
    objc_msgSend(v25, sel_setCancelsTouchesInView_, 0);
    objc_msgSend(v21, sel_addGestureRecognizer_, v25);
    v26 = sub_1BB01375C();
    objc_msgSend(v26, sel_setEnabled_, 0);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1BB013F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v19 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = v2 - 1;
    v5 = v1 + 72;
    LOBYTE(v6) = 1;
    v17 = v4;
    v18 = v1;
    while (1)
    {
      if ((v6 & 1) != 0)
      {
        v7 = *(_QWORD *)(v5 - 32);
        v20 = *(_QWORD *)(v5 - 40);
        v21 = *(unsigned __int8 *)(v5 + 8);
        swift_beginAccess();
        v8 = *v19;
        v9 = *(_QWORD *)(*v19 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v10 = sub_1BA6E35A8(v20, v7);
          if ((v11 & 1) != 0)
          {
            v12 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v10);
            v13 = *v12;
            v14 = v12[1];
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v15 = HIBYTE(v14) & 0xF;
            if ((v14 & 0x2000000000000000) == 0)
              v15 = v13 & 0xFFFFFFFFFFFFLL;
            if (!v15)
            {
              v6 = 0;
LABEL_19:
              swift_bridgeObjectRelease();
              goto LABEL_20;
            }
            v6 = 1;
            v4 = v17;
            v1 = v18;
            if (v17 == v3)
              goto LABEL_19;
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v4 = v17;
        v1 = v18;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = v21 ^ 1u;
      }
      else
      {
        v6 = 0;
      }
      if (v4 == v3)
        goto LABEL_19;
LABEL_5:
      ++v3;
      v5 += 96;
      if (v3 >= *(_QWORD *)(v1 + 16))
      {
        __break(1u);
        return;
      }
    }
  }
  v6 = 1;
LABEL_20:
  v16 = sub_1BB01375C();
  objc_msgSend(v16, sel_setEnabled_, v6);

}

void sub_1BB0141E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  void **v44;
  void *v45;
  char v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  id v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t ObjectType;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id *v74;
  uint64_t v75;
  uint64_t v76;
  id v77[6];

  v1 = v0;
  v77[4] = *(id *)MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v2 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1BB86BC8C();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v66 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 24);
  v70 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 16);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate + 48);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = &unk_1EF2B9000;
  if (v8)
  {
    v63[1] = v4;
    v64 = v6;
    v65 = v1;
    v74 = (id *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63[0] = v7;
    v10 = (_QWORD *)(v7 + 72);
    while (1)
    {
      v76 = v8;
      v12 = *(v10 - 5);
      v11 = *(v10 - 4);
      v13 = v10[3];
      v73 = v10[2];
      v14 = v10[4];
      v15 = v10[6];
      v16 = v74;
      swift_beginAccess();
      v17 = *v16;
      v18 = *((_QWORD *)*v16 + 2);
      v75 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_1BA6E35A8(v12, v11);
        v20 = v13;
        if ((v21 & 1) != 0)
        {
          v71 = v12;
          v72 = v14;
          v22 = (uint64_t *)(v17[7] + 16 * v19);
          v24 = *v22;
          v23 = v22[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v13)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_6;
            }
            v26 = v74;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v77[0] = *v26;
            v28 = v77[0];
            *v26 = (id)0x8000000000000000;
            v30 = sub_1BA6E35A8(v71, v11);
            v31 = v28[2];
            v32 = (v29 & 1) == 0;
            v33 = v31 + v32;
            if (__OFADD__(v31, v32))
            {
              __break(1u);
LABEL_36:
              __break(1u);
            }
            v34 = v29;
            if (v28[3] >= v33)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v37 = v77[0];
                if ((v29 & 1) == 0)
                  goto LABEL_25;
              }
              else
              {
                sub_1BB4C216C();
                v37 = v77[0];
                if ((v34 & 1) == 0)
                  goto LABEL_25;
              }
            }
            else
            {
              sub_1BB4AE750(v33, isUniquelyReferenced_nonNull_native);
              v35 = sub_1BA6E35A8(v71, v11);
              if ((v34 & 1) != (v36 & 1))
              {
                sub_1BB874560();
                __break(1u);
                return;
              }
              v30 = v35;
              v37 = v77[0];
              if ((v34 & 1) == 0)
              {
LABEL_25:
                v37[(v30 >> 6) + 8] |= 1 << v30;
                v39 = (_QWORD *)(v37[6] + 16 * v30);
                *v39 = v71;
                v39[1] = v11;
                v40 = (_QWORD *)(v37[7] + 16 * v30);
                *v40 = v73;
                v40[1] = v20;
                v41 = v37[2];
                v42 = __OFADD__(v41, 1);
                v43 = v41 + 1;
                if (v42)
                  goto LABEL_36;
                v37[2] = v43;
                swift_bridgeObjectRetain();
LABEL_27:
                *v74 = v37;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess();
LABEL_28:
                swift_bridgeObjectRelease();
                goto LABEL_5;
              }
            }
            v38 = (_QWORD *)(v37[7] + 16 * v30);
            swift_bridgeObjectRelease();
            *v38 = v73;
            v38[1] = v20;
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      v10 += 12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v76 - 1;
      if (v76 == 1)
      {
        swift_bridgeObjectRelease();
        v6 = v64;
        v1 = v65;
        v9 = (_QWORD *)&unk_1EF2B9000;
        goto LABEL_31;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_31:
  v44 = (void **)(v1 + v9[159]);
  swift_beginAccess();
  v45 = *v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = swift_isUniquelyReferenced_nonNull_native();
  v77[0] = v45;
  v47 = v70;
  sub_1BB4BDCEC(v70, v6, 0x6574616C706D6574, 0xE800000000000000, v46);
  swift_bridgeObjectRelease();
  v48 = (void *)objc_opt_self();
  v49 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v77[0] = 0;
  v50 = objc_msgSend(v48, sel_dataWithJSONObject_options_error_, v49, 0, v77);

  v51 = v77[0];
  if (v50)
  {
    v52 = sub_1BB86C6E8();
    v54 = v53;

    sub_1BB86C5BC();
    v55 = v66;
    sub_1BB86BC5C();
    sub_1BB86BC20();
    sub_1BB86BC80();
    v76 = v52;
    sub_1BA69D44C(v52, v54);
    sub_1BB86BC74();
    v56 = sub_1BB01375C();
    objc_msgSend(v56, sel_setEnabled_, 0);

    MEMORY[0x1E0C80A78](v57);
    v63[-2] = v1;
    v63[-1] = v55;
    sub_1BB86EC14();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v58 = (void *)sub_1BB87345C();
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = v47;
    *(_QWORD *)(v59 + 24) = v6;
    sub_1BB86E98C();
    swift_release();

    swift_release();
    v60 = (void *)sub_1BB87345C();
    sub_1BB86E9B0();
    sub_1BA69D314(v76, v54);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v69);
  }
  else
  {
    v61 = v51;
    swift_bridgeObjectRelease();
    v62 = (void *)sub_1BB86C484();

    swift_willThrow();
  }
}

uint64_t sub_1BB014984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_1BB86BC8C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_debugFormatService);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(v8, a2, v4, v6);
  v13 = v8;
  v14 = v9;
  sub_1BA4AD288(0, &qword_1EF2B9560, (uint64_t)&type metadata for DebugFormatCreatePackageResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v10 = sub_1BB86EA58();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  return v10;
}

uint64_t sub_1BB014A78(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 *v32;
  void *v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD v45[4];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 aBlock;
  uint64_t (*v64)(uint64_t);
  __int128 v65;
  void (*v66)();
  uint64_t v67;
  uint64_t v68;

  v8 = sub_1BB872610();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1BB872664();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C8B0();
  v60 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  v12 = *(_QWORD *)(v60 + 64);
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v55 = (char *)v45 - v14;
  v15 = *a1;
  v16 = a1[1];
  v17 = a1[2];
  if (qword_1EF2A6C58 != -1)
    swift_once();
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000011;
  *((_QWORD *)&aBlock + 1) = 0x80000001BB975920;
  swift_bridgeObjectRetain();
  v47 = v15;
  sub_1BB872AFC(&v68);
  swift_bridgeObjectRelease();
  sub_1BA9719E4((void *)2, 0, 0, aBlock, *((uint64_t *)&aBlock + 1));
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v45[1] = v16;
    v45[2] = a3;
    v45[3] = a4;
    v46 = a2;
    v48 = v12 + 7;
    v45[0] = swift_bridgeObjectRetain();
    v19 = v45[0] + 40;
    v20 = v60;
    v21 = v61;
    v22 = v59;
    v23 = v55;
    do
    {
      v58 = v18;
      v24 = qword_1EF3D04D8;
      *(_QWORD *)&aBlock = 0x656C69662077654ELL;
      *((_QWORD *)&aBlock + 1) = 0xEA0000000000203ALL;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v25);
      swift_bridgeObjectRelease();
      v26 = aBlock;
      sub_1BB86C8A4();
      v57 = *(_QWORD *)(v24 + 40);
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v23, v21);
      v27 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v28 = (v48 + v27) & 0xFFFFFFFFFFFFFFF8;
      v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
      v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
      v31 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v31 + v27, v59, v61);
      v32 = (__int128 *)(v31 + v28);
      v23 = v55;
      *v32 = v26;
      v56 = *((_QWORD *)&v26 + 1);
      *(_QWORD *)(v31 + v29) = 2;
      v20 = v60;
      *(_QWORD *)(v31 + v30) = v24;
      *((_QWORD *)&v65 + 1) = sub_1BA9723CC;
      v66 = (void (*)())v31;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v64 = sub_1BA4F1DD8;
      *(_QWORD *)&v65 = &block_descriptor_35;
      v33 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v34 = v49;
      sub_1BB872634();
      v62 = MEMORY[0x1E0DEE9D8];
      v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v35, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA571C58();
      v36 = v52;
      v37 = v54;
      sub_1BB873BC4();
      MEMORY[0x1BCCE3D90](0, v34, v36, v33);
      _Block_release(v33);
      v38 = v36;
      v21 = v61;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v37);
      v39 = v34;
      v22 = v59;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v51);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v21);
      swift_bridgeObjectRelease();
      swift_release();
      v19 += 16;
      v18 = v58 - 1;
    }
    while (v58 != 1);
    swift_bridgeObjectRelease();
    a2 = v46;
  }
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)&aBlock, "Created new ");
  BYTE13(aBlock) = 0;
  HIWORD(aBlock) = -5120;
  sub_1BB872AFC((_QWORD *)0x2064657461657243);
  sub_1BB872AFC(v40);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(&v68);
  swift_bridgeObjectRelease();
  v41 = aBlock;
  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  LOBYTE(aBlock) = 0;
  *((_QWORD *)&aBlock + 1) = 0x73736563637553;
  v64 = (uint64_t (*)(uint64_t))0xE700000000000000;
  v65 = v41;
  v66 = sub_1BB016858;
  v67 = v42;
  v43 = (_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editor)
                 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v43)
  {
    swift_retain();
    sub_1BB263178(&aBlock);
    swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BB015088(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_1BB0150E8(void *a1, uint64_t a2)
{
  _QWORD *v4;
  id v5;
  __int128 v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4(a1, 0, 0, 0xD000000000000018, 0x80000001BB975900);
  *(_QWORD *)&v6 = 0;
  sub_1BA8EBDF8();
  sub_1BB873E34();
  *((_QWORD *)&v6 + 1) = 0x64656C696146;
  v7 = 0xE600000000000000;
  v8 = 0;
  v9 = 0xE000000000000000;
  v10 = 0;
  v11 = 0;
  v4 = (_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editor)
                + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v4)
  {
    swift_retain();
    sub_1BB263178(&v6);
    swift_release();
  }
  v5 = sub_1BB01375C();
  objc_msgSend(v5, sel_setEnabled_, 1, a1);
  swift_bridgeObjectRelease();

}

uint64_t sub_1BB015378()
{
  return type metadata accessor for DebugFormatCreatePackageViewController();
}

uint64_t type metadata accessor for DebugFormatCreatePackageViewController()
{
  uint64_t result;

  result = qword_1EF2B9548;
  if (!qword_1EF2B9548)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB0153BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1BB0154C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  void *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t (**v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char v65;
  id v66;
  void *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  char v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  char **v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;

  v1 = sub_1BB86CBE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v83 - v6;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_sections);
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (result >= *(_QWORD *)(v8 + 16))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v86 = v2;
  v10 = v8 + 104 * result;
  v12 = *(_OWORD *)(v10 + 48);
  v11 = *(_OWORD *)(v10 + 64);
  v92 = *(_OWORD *)(v10 + 32);
  v13 = *(_QWORD *)(v10 + 128);
  v15 = *(_OWORD *)(v10 + 96);
  v14 = *(_OWORD *)(v10 + 112);
  v95 = *(_OWORD *)(v10 + 80);
  v96 = v15;
  v93 = v12;
  v94 = v11;
  v97 = v14;
  v98 = v13;
  v88 = *((_QWORD *)&v92 + 1);
  v16 = v92;
  v17 = v15;
  v85 = *((_QWORD *)&v95 + 1);
  sub_1BB0164F0((uint64_t)&v92);
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (result < *(_QWORD *)(v13 + 16))
  {
    v87 = v16;
    v18 = v13 + 24 * result;
    v20 = *(_QWORD *)(v18 + 32);
    v19 = *(_QWORD *)(v18 + 40);
    LOBYTE(v18) = *(_BYTE *)(v18 + 48);
    v89 = v0;
    if ((v18 & 1) != 0)
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
      swift_bridgeObjectRetain_n();
      v21 = (void *)sub_1BB87321C();
      v22 = objc_msgSend(v21, sel_textLabel);
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v22, sel_setNumberOfLines_, 0);

      }
      v24 = objc_msgSend(v21, sel_textLabel);
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
        objc_msgSend(v25, sel_setFont_, v26);

      }
      v27 = objc_msgSend(v21, sel_textLabel);
      v28 = v89;
      if (v27)
      {
        v29 = v27;
        swift_bridgeObjectRetain();
        v30 = sub_1BA689E44(v20, v19);
        v32 = v31;
        sub_1BAA49EA8();
        if (v32)
        {
          v90 = v30;
          v91 = v32;
          sub_1BA7114A0();
          v86 = sub_1BB873ABC();
          v34 = v33;
          swift_bridgeObjectRelease();
          sub_1BAF92B74();
          v35 = sub_1BA9C0430(1uLL, v20, v19);
          v37 = v36;
          v39 = v38;
          v41 = v40;
          sub_1BAA49EA8();
          MEMORY[0x1BCCE334C](v35, v37, v39, v41);
          v28 = v89;
          swift_bridgeObjectRelease();
          v90 = v86;
          v91 = v34;
          swift_bridgeObjectRetain();
          sub_1BB872AFC(v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v67 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_setText_, v67);

      }
      objc_msgSend(v21, sel_setSelectionStyle_, 0);
      v68 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
      swift_beginAccess();
      v69 = *v68;
      if (*(_QWORD *)(v69 + 16))
      {
        v70 = v88;
        swift_bridgeObjectRetain();
        v71 = sub_1BA6E35A8(v87, v70);
        if ((v72 & 1) != 0)
        {
          v73 = (uint64_t *)(*(_QWORD *)(v69 + 56) + 16 * v71);
          v74 = *v73;
          v17 = v73[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1BB016574((uint64_t)&v92);
          if (v20 != v74)
            goto LABEL_33;
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_bridgeObjectRetain();
      sub_1BB016574((uint64_t)&v92);
      if (!v17)
      {
        v75 = 0;
        goto LABEL_36;
      }
      if (v20 != v85)
        goto LABEL_33;
LABEL_31:
      if (v19 == v17)
      {
        v75 = 1;
LABEL_34:
        swift_bridgeObjectRelease();
LABEL_36:
        sub_1BAA49EA8();
        v76 = objc_msgSend(v21, sel_imageView);
        if (v76)
        {
          v77 = v76;
          v78 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
          v79 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v78);

          objc_msgSend(v77, sel_setImage_, v79);
        }
        v80 = (void *)objc_opt_self();
        v43 = v21;
        v81 = &selRef_systemBlueColor;
        if ((v75 & 1) == 0)
          v81 = &selRef_secondarySystemFillColor;
        v82 = objc_msgSend(v80, *v81);
        objc_msgSend(v43, sel_setTintColor_, v82);

        goto LABEL_41;
      }
LABEL_33:
      v75 = sub_1BB874398();
      goto LABEL_34;
    }
    v85 = v20;
    v84 = v1;
    type metadata accessor for DebugFormatCreatePackageTableViewCell();
    swift_bridgeObjectRetain_n();
    v43 = (char *)sub_1BB87321C();
    objc_msgSend(v43, sel_setSelectionStyle_, 0);
    v44 = OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField;
    v45 = *(void **)&v43[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField];
    v46 = v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey;
    swift_beginAccess();
    v47 = *(_QWORD *)(*(_QWORD *)v46 + 16);
    v48 = v45;
    if (v47)
    {
      v49 = v88;
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v87, v49);
      if ((v50 & 1) != 0)
      {
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v51 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
LABEL_18:
        objc_msgSend(v48, sel_setText_, v51);

        v52 = v44;
        v53 = *(void **)&v43[v44];
        objc_msgSend(v53, sel_setEnabled_, 1);
        v54 = v85;
        objc_msgSend(v53, sel_setAutocapitalizationType_, v85);
        LOBYTE(v90) = v54;
        v91 = v19;
        sub_1BB5F06D0((uint64_t)v7);
        sub_1BAA49EA8();
        v55 = (uint64_t)&v43[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet];
        swift_beginAccess();
        sub_1BAA65974((uint64_t)v7, v55);
        swift_endAccess();
        v56 = swift_allocObject();
        v57 = v89;
        swift_unknownObjectWeakInit();
        v58 = swift_allocObject();
        v59 = v95;
        *(_OWORD *)(v58 + 56) = v94;
        v60 = v92;
        *(_OWORD *)(v58 + 40) = v93;
        *(_OWORD *)(v58 + 24) = v60;
        v61 = v96;
        *(_OWORD *)(v58 + 104) = v97;
        *(_OWORD *)(v58 + 88) = v61;
        *(_QWORD *)(v58 + 16) = v56;
        *(_QWORD *)(v58 + 120) = v98;
        *(_OWORD *)(v58 + 72) = v59;
        v62 = (uint64_t (**)(uint64_t, uint64_t))&v43[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
        v63 = *(_QWORD *)&v43[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
        *v62 = sub_1BB016674;
        v62[1] = (uint64_t (*)(uint64_t, uint64_t))v58;
        sub_1BA49EBE0(v63);
        v64 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder;
        if (*(_BYTE *)(v57
                      + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder) == 1)
        {
          MEMORY[0x1BCCDD4D8](0, 0);
          v65 = sub_1BB86CB98();
          (*(void (**)(char *, uint64_t))(v86 + 8))(v4, v84);
          if ((v65 & 1) != 0)
          {
            v66 = *(id *)&v43[v52];
            objc_msgSend(v66, sel_becomeFirstResponder);
            sub_1BAA49EA8();

            *(_BYTE *)(v57 + v64) = 0;
            return (unint64_t)v43;
          }
        }
LABEL_41:
        sub_1BAA49EA8();
        return (unint64_t)v43;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v51 = 0;
    goto LABEL_18;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1BB015D94(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t *v13;
  __int128 v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  _OWORD v17[6];

  v7 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = a4[3];
    v17[2] = a4[2];
    v17[3] = v10;
    v11 = a4[5];
    v17[4] = a4[4];
    v17[5] = v11;
    v12 = a4[1];
    v17[0] = *a4;
    v17[1] = v12;
    v13 = (uint64_t *)(result + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    v14 = v17[0];
    swift_beginAccess();
    sub_1BB016680((uint64_t)v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v13;
    *v13 = 0x8000000000000000;
    sub_1BB4BDCEC(a1, a2, v14, *((uint64_t *)&v14 + 1), isUniquelyReferenced_nonNull_native);
    *v13 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1BB013F1C();

    return sub_1BB0166F0((uint64_t)v17);
  }
  return result;
}

void sub_1BB0160B4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[4];
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v31 = a1;
  v5 = sub_1BB86CB08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_sections);
  v32 = a2;
  v10 = sub_1BB86CBD4();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 >= *(_QWORD *)(v9 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v29 = v6;
  v30 = v5;
  v11 = (_QWORD *)(v9 + 104 * v10);
  v12 = v11[5];
  v28 = v11[4];
  v13 = v11[7];
  v15 = v11[15];
  v14 = v11[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1BB86CBC8();
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v16 >= *(_QWORD *)(v14 + 16))
  {
LABEL_11:
    __break(1u);
    return;
  }
  v17 = v14 + 24 * v16;
  if ((*(_BYTE *)(v17 + 48) & 1) != 0)
  {
    v27 = v8;
    v19 = *(_QWORD *)(v17 + 32);
    v18 = *(_QWORD *)(v17 + 40);
    v26[2] = v3;
    v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey);
    swift_beginAccess();
    sub_1BAF92B74();
    v26[0] = v15;
    v26[1] = v13;
    v26[3] = v19;
    sub_1BAF92B74();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = *v20;
    *v20 = 0x8000000000000000;
    sub_1BB4BDCEC(v19, v18, v28, v12, isUniquelyReferenced_nonNull_native);
    *v20 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1BB013F1C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v22 = sub_1BB86CBD4();
    sub_1BA4A2870(&qword_1EF2B9558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E8]);
    v23 = v27;
    v24 = v30;
    sub_1BB873BB8();
    v33 = v22;
    sub_1BB873B94();
    v25 = (void *)sub_1BB86CAE4();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v24);
    objc_msgSend(v31, sel_reloadSections_withRowAnimation_, v25, 5);
    sub_1BAA49EA8();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB0164F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB016574(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB0165F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB016618()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB016674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB015D94(a1, a2, *(_QWORD *)(v2 + 16), (_OWORD *)(v2 + 24));
}

uint64_t sub_1BB016680(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB0166F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB016760()
{
  uint64_t v0;

  return sub_1BB014984(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB016778()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB01679C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB014A78(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB0167B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;

  v1 = sub_1BB86C8B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  v5 = *(char **)(v0 + v4);
  if ((unint64_t)(v5 - 1) >= 4)

  swift_release();
  return swift_deallocObject();
}

void sub_1BB016858()
{
  uint64_t v0;

  sub_1BB015088(v0);
}

void sub_1BB016860(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v4;

  sub_1BB797088(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

id sub_1BB016868(uint64_t a1, uint64_t a2, __int128 *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  objc_class *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  objc_super v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74[3];
  uint64_t v75;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v4[v9] = v10;
  v11 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)&v4[v11] = v12;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey] = MEMORY[0x1E0DEE9E0];
  v13 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_tableView;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v15 = v4;
  *(_QWORD *)&v4[v13] = objc_msgSend(v14, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editor] = a1;
  v16 = &v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_editorURL];
  v17 = sub_1BB86C67C();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  sub_1BACBAB08(a3, &v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_selectedTemplate]);
  sub_1BACBAB08(a3, v74);
  v19 = *(_QWORD *)(v75 + 16);
  if (!v19)
  {
    swift_retain();
    v23 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  v51 = v18;
  v52 = v17;
  v53 = v15;
  v54 = ObjectType;
  v55 = a2;
  v73 = MEMORY[0x1E0DEE9D8];
  v20 = v75;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAC7AE04(0, v19, 0);
  v21 = v19;
  v22 = 0;
  v23 = v73;
  v59 = v19;
  do
  {
    v24 = v20 + 32 + 96 * v22;
    v25 = *(_QWORD *)(v24 + 32);
    v26 = *(_QWORD *)(v24 + 40);
    v27 = *(_BYTE *)(v24 + 48);
    v61 = v22;
    v62 = *(_QWORD *)(v24 + 56);
    v28 = *(_QWORD *)(v24 + 80);
    v29 = *(_QWORD *)(v24 + 88);
    v69 = *(_QWORD *)(v24 + 8);
    v70 = *(_QWORD *)(v24 + 72);
    v65 = *(_QWORD *)(v24 + 16);
    v66 = *(_QWORD *)v24;
    v67 = *(_QWORD *)(v24 + 64);
    v68 = *(_QWORD *)(v24 + 24);
    v63 = v28;
    v64 = v29;
    if (v29)
    {
      v30 = v28;
      sub_1BA4AD288(0, &qword_1EF2B1730, (uint64_t)&type metadata for DebugFormatCreatePackageItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v31 + 32) = v30;
      *(_QWORD *)(v31 + 40) = v29;
      *(_BYTE *)(v31 + 48) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v59;
LABEL_5:
      v32 = v61;
      v33 = v62;
      goto LABEL_15;
    }
    if (*(_QWORD *)(v24 + 72))
      v34 = *(_QWORD *)(v24 + 72);
    else
      v34 = MEMORY[0x1E0DEE9D8];
    v35 = *(_QWORD *)(v34 + 16);
    if (!v35)
    {
      v46 = v21;
      v47 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v21 = v46;
      v31 = v47;
      goto LABEL_5;
    }
    v60 = *(_BYTE *)(v24 + 48);
    v57 = *(_QWORD *)(v24 + 32);
    v58 = v23;
    v72 = MEMORY[0x1E0DEE9D8];
    v36 = v34;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v56 = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1BAC7AE20(0, v35, 0);
    v31 = v72;
    v37 = (uint64_t *)(v36 + 40);
    v32 = v61;
    do
    {
      v38 = *(v37 - 1);
      v39 = *v37;
      v72 = v31;
      v41 = *(_QWORD *)(v31 + 16);
      v40 = *(_QWORD *)(v31 + 24);
      swift_bridgeObjectRetain();
      if (v41 >= v40 >> 1)
      {
        sub_1BAC7AE20(v40 > 1, v41 + 1, 1);
        v31 = v72;
      }
      v37 += 2;
      *(_QWORD *)(v31 + 16) = v41 + 1;
      v42 = v31 + 24 * v41;
      *(_QWORD *)(v42 + 32) = v38;
      *(_QWORD *)(v42 + 40) = v39;
      *(_BYTE *)(v42 + 48) = 1;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v59;
    v25 = v57;
    v23 = v58;
    v27 = v60;
    v33 = v62;
LABEL_15:
    v73 = v23;
    v44 = *(_QWORD *)(v23 + 16);
    v43 = *(_QWORD *)(v23 + 24);
    if (v44 >= v43 >> 1)
    {
      v48 = v21;
      sub_1BAC7AE04(v43 > 1, v44 + 1, 1);
      v21 = v48;
      v23 = v73;
    }
    v22 = v32 + 1;
    *(_QWORD *)(v23 + 16) = v44 + 1;
    v45 = v23 + 104 * v44;
    *(_QWORD *)(v45 + 32) = v66;
    *(_QWORD *)(v45 + 40) = v69;
    *(_QWORD *)(v45 + 48) = v65;
    *(_QWORD *)(v45 + 56) = v68;
    *(_QWORD *)(v45 + 64) = v25;
    *(_QWORD *)(v45 + 72) = v26;
    *(_BYTE *)(v45 + 80) = v27;
    *(_QWORD *)(v45 + 88) = v33;
    *(_QWORD *)(v45 + 96) = v67;
    *(_QWORD *)(v45 + 104) = v70;
    *(_QWORD *)(v45 + 112) = v63;
    *(_QWORD *)(v45 + 120) = v64;
    *(_QWORD *)(v45 + 128) = v31;
  }
  while (v22 != v21);
  swift_bridgeObjectRelease();
  ObjectType = v54;
  a2 = v55;
  v17 = v52;
  v15 = v53;
  v18 = v51;
LABEL_21:
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_sections] = v23;

  v71.receiver = v15;
  v71.super_class = ObjectType;
  v49 = objc_msgSendSuper2(&v71, sel_initWithNibName_bundle_, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  return v49;
}

void sub_1BB016DD4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)&v0[v1] = v2;
  v3 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)&v0[v3] = v4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_valuesByTemplateKey] = MEMORY[0x1E0DEE9E0];
  v5 = OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_tableView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController_shouldBecomeFirstResponder] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatCreatePackageViewController____lazy_storage___createBarButtonItem] = 0;

  sub_1BB873EAC();
  __break(1u);
}

char *sub_1BB016EE4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer;
  v11 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_init);

  v24.receiver = v12;
  v24.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer;
  v15 = *(void **)&v13[OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer];
  v16 = v13;
  objc_msgSend(v15, sel_setLineWidth_, 20.0);
  v17 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v18 = v15;
  v19 = objc_msgSend(v17, sel_initWithRed_green_blue_alpha_, 0.101960784, 0.0980392157, 0.101960784, 1.0);
  v20 = objc_msgSend(v19, sel_CGColor);

  objc_msgSend(v18, sel_setStrokeColor_, v20);
  v21 = objc_msgSend(v16, sel_layer);
  v22 = *(id *)&v13[v14];
  objc_msgSend(v21, sel_addSublayer_, v22);

  return v16;
}

void sub_1BB017148()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  CGMutablePathRef Mutable;
  objc_super v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugFormatBezelView_bezelLayer];
  objc_msgSend(v1, sel_lineWidth);
  v3 = v2 * -0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, UIEdgeInsetsInsetRect(v4, v5, v6, v7, v3, v3));
  Mutable = CGPathCreateMutable();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMinY(v16);
  v10 = 0x3FF0000000000000;
  v11 = 0;
  v12 = 0;
  v13 = 0x3FF0000000000000;
  v14 = 0;
  v15 = 0;
  sub_1BB87333C();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxY(v17);
  sub_1BB873354();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxX(v18);
  objc_msgSend(v1, sel_bounds);
  CGRectGetMinY(v19);
  sub_1BB87333C();
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxX(v20);
  objc_msgSend(v1, sel_bounds);
  CGRectGetMaxY(v21);
  sub_1BB873354();
  objc_msgSend(v1, sel_setPath_, Mutable);

}

uint64_t type metadata accessor for DebugFormatBezelView()
{
  return objc_opt_self();
}

_QWORD *sub_1BB01732C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1BB017364(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions);
}

_QWORD *sub_1BB017348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1BB017364(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
}

_QWORD *sub_1BB017364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t);
  char v28;
  char v29;
  uint64_t v30;
  id v31;
  char *v32;
  void *v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  _QWORD v42[2];
  char v43;
  uint64_t v44;

  v40 = a6;
  v39 = a2;
  v9 = sub_1BB86C9DC();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x1E0C80A78](v9);
  v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v35 - v20;
  sub_1BAB50C1C(a3, a4, a5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_1BB86BD70();
  if (round(v22) == 0.0)
    sub_1BB86BD7C();
  v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v18, v12);
  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v25 = v21;
  v24(v21, v15, v12);
  v42[0] = a3;
  v42[1] = a4;
  v43 = a5 & 1;
  sub_1BA9680DC(a3, a4, a5);
  sub_1BB86DD80();
  v26 = v42;
  v27 = v41;
  v28 = FormatBoolean.value(contextLayoutOptions:)(v44);
  if (v27)
  {
    sub_1BA968268(a3, a4, a5);
    swift_release();
    v23(v21, v12);
  }
  else
  {
    v29 = v28;
    v41 = v23;
    sub_1BA968268(a3, a4, a5);
    swift_release();
    if ((v29 & 1) != 0)
      v30 = 1;
    else
      v30 = 5;
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3760]), sel_init);
    v32 = v36;
    sub_1BB86C94C();
    v33 = (void *)sub_1BB86C940();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v38);
    objc_msgSend(v31, sel_setLocale_, v33);

    objc_msgSend(v31, sel_setUnitOptions_, v30);
    if (qword_1ED3A5CC0 != -1)
      swift_once();
    objc_msgSend(v31, sel_setNumberFormatter_, qword_1ED3A5CB8);
    sub_1BA9405B0();
    v26 = (_QWORD *)sub_1BB87354C();

    v41(v25, v12);
  }
  return v26;
}

_QWORD *sub_1BB01768C(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  id v29;
  char *v30;
  void *v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  _QWORD v38[2];
  char v39;
  uint64_t v40;

  v37 = a2;
  v8 = sub_1BB86C9DC();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8);
  v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - v19;
  sub_1BAB50C1C(a3, a4, a5);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1BB86BD70();
  if (round(v21) == 0.0)
    sub_1BB86BD7C();
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v17, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  v38[0] = a3;
  v38[1] = a4;
  v39 = a5 & 1;
  sub_1BA9680DC(a3, a4, a5);
  v23 = sub_1BA793D58();
  v24 = v38;
  v25 = v40;
  v26 = FormatBoolean.value(contextLayoutOptions:)(v23);
  v40 = v25;
  if (v25)
  {
    sub_1BA968268(a3, a4, a5);
    swift_release();
    v22(v20, v11);
  }
  else
  {
    v27 = v26;
    v37 = v22;
    sub_1BA968268(a3, a4, a5);
    swift_release();
    if ((v27 & 1) != 0)
      v28 = 1;
    else
      v28 = 5;
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3760]), sel_init);
    v30 = v34;
    sub_1BB86C94C();
    v31 = (void *)sub_1BB86C940();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v36);
    objc_msgSend(v29, sel_setLocale_, v31);

    objc_msgSend(v29, sel_setUnitOptions_, v28);
    if (qword_1ED3A5CC0 != -1)
      swift_once();
    objc_msgSend(v29, sel_setNumberFormatter_, qword_1ED3A5CB8);
    sub_1BA9405B0();
    v24 = (_QWORD *)sub_1BB87354C();

    v37(v20, v11);
  }
  return v24;
}

_QWORD *sub_1BB017998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  id v35;
  char *v36;
  void *v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  char v45;

  v42 = a2;
  v8 = sub_1BB86C9DC();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - v19;
  sub_1BAB50C1C(a3, a4, a5);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1BB86BD70();
  if (round(v21) == 0.0)
    sub_1BB86BD7C();
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v17, v11);
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24 = v20;
  v23(v20, v14, v11);
  v44[0] = a3;
  v44[1] = a4;
  v45 = a5 & 1;
  v25 = *(_QWORD *)(v42 + 48);
  type metadata accessor for FormatVariableCollection();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = MEMORY[0x1E0DEE9E0];
  type metadata accessor for FormatOptionCollection();
  swift_allocObject();
  sub_1BA9680DC(a3, a4, a5);
  v27 = sub_1BA6E1E0C(MEMORY[0x1E0DEE9D8], v26);
  type metadata accessor for FormatContextLayoutOptions();
  inited = swift_initStackObject();
  *(_BYTE *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = v25;
  *(_QWORD *)(inited + 32) = 0x3FF0000000000000;
  *(_QWORD *)(inited + 40) = v27;
  v29 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = v29;
  v30 = v44;
  v31 = v43;
  v32 = FormatBoolean.value(contextLayoutOptions:)(inited);
  v43 = v31;
  if (v31)
  {
    sub_1BA968268(a3, a4, a5);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    v22(v20, v11);
  }
  else
  {
    v33 = v32;
    sub_1BA968268(a3, a4, a5);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      v34 = 1;
    else
      v34 = 5;
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3760]), sel_init);
    v36 = v39;
    sub_1BB86C94C();
    v37 = (void *)sub_1BB86C940();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v41);
    objc_msgSend(v35, sel_setLocale_, v37);

    objc_msgSend(v35, sel_setUnitOptions_, v34);
    if (qword_1ED3A5CC0 != -1)
      swift_once();
    objc_msgSend(v35, sel_setNumberFormatter_, qword_1ED3A5CB8);
    sub_1BA9405B0();
    v30 = (_QWORD *)sub_1BB87354C();

    v22(v24, v11);
  }
  return v30;
}

uint64_t sub_1BB017D48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB017D84
                                                            + 4 * asc_1BB8E2C08[a1]))(0x74617265706D6574, 0xEB00000000657275);
}

uint64_t sub_1BB017D84()
{
  return 0x706D655468676968;
}

uint64_t sub_1BB017DA8()
{
  return 0x65706D6554776F6CLL;
}

unint64_t sub_1BB017DCC()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB017DEC()
{
  return 0x6F697469646E6F63;
}

unint64_t sub_1BB017E1C()
{
  return 0xD000000000000013;
}

void sub_1BB017E38(char *a1)
{
  sub_1BB7FA174(*a1);
}

void sub_1BB017E44()
{
  char *v0;

  sub_1BAB096FC(0, *v0);
}

void sub_1BB017E50(uint64_t a1)
{
  char *v1;

  sub_1BA9D2DD0(a1, *v1);
}

void sub_1BB017E58(uint64_t a1)
{
  char *v1;

  sub_1BAB096FC(a1, *v1);
}

uint64_t sub_1BB017E60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB01A700();
  *a1 = result;
  return result;
}

uint64_t sub_1BB017E8C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB017D48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB017EB4()
{
  sub_1BB01A6BC();
  return sub_1BB872D60();
}

uint64_t sub_1BB017F10()
{
  sub_1BB01A6BC();
  return sub_1BB872D0C();
}

void sub_1BB017F5C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724F8E8;
}

uint64_t sub_1BB017F6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWeatherBinding.Text.init(from:)(a1, a2);
}

void sub_1BB017F80(_QWORD *a1)
{
  FormatWeatherBinding.Text.encode(to:)(a1);
}

void sub_1BB017F98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[15];
  uint64_t v45;

  v44[11] = a3;
  v44[13] = a4;
  v44[14] = a2;
  v45 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v45);
  v44[1] = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v44[5] = (char *)v44 - v12;
  MEMORY[0x1E0C80A78](v13);
  v44[9] = (char *)v44 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78]((char *)v44 - v18);
  MEMORY[0x1E0C80A78](v19);
  v44[6] = (char *)v44 - v20;
  MEMORY[0x1E0C80A78](v21);
  v44[10] = (char *)v44 - v22;
  MEMORY[0x1E0C80A78](v23);
  v44[7] = (char *)v44 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  v44[3] = (char *)v44 - v30;
  MEMORY[0x1E0C80A78](v31);
  v44[8] = (char *)v44 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  v44[4] = (char *)v44 - v38;
  MEMORY[0x1E0C80A78](v39);
  v44[2] = (char *)v44 - v40;
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  __asm { BR              X10 }
}

uint64_t sub_1BB01836C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t result;

  *(_QWORD *)(v10 - 128) = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = *(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB8832C0;
  *(_QWORD *)(v10 - 200) = v15;
  v16 = (_QWORD *)(v15 + v14);
  v17 = *(_QWORD *)(v10 - 96);
  sub_1BAA63AB8(v17, v9);
  v18 = v9 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  v19 = *(_QWORD *)(v10 - 120);
  sub_1BA8DACF0(v19);
  v20 = *(void **)(v10 - 112);
  v21 = sub_1BB017998(v18, v19, 1, 0, 0);
  if (v20)
  {

    v23 = 0;
    v24 = 0;
  }
  else
  {
    v23 = (uint64_t)v21;
    v24 = v22;
  }
  sub_1BAAF7494(0xD000000000000014, 0x80000001BB975DD0, v23, v24, v16);
  sub_1BA8DAD20(v19);
  sub_1BAA63AFC(v9);
  sub_1BAA63AB8(v17, v8);
  v25 = v8 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v19);
  v26 = sub_1BB017998(v25, v19, 1, 0, 64);
  sub_1BAAF7494(0xD00000000000001FLL, 0x80000001BB975DF0, (uint64_t)v26, v27, (_QWORD *)((char *)v16 + v13));
  sub_1BA8DAD20(v19);
  sub_1BAA63AFC(v8);
  sub_1BAA63AB8(v17, v7);
  v28 = v7 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v19);
  v29 = sub_1BB017998(v28, v19, 0, 0, 64);
  v30 = *(_QWORD *)(v10 - 192);
  sub_1BAAF7494(0xD00000000000001FLL, 0x80000001BB975E10, (uint64_t)v29, v31, (_QWORD *)((char *)v16 + 2 * v13));
  sub_1BA8DAD20(v19);
  sub_1BAA63AFC(v7);
  sub_1BAA63AB8(v17, v30);
  v32 = v30 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v19);
  v33 = sub_1BB017998(v32, v19, 1, 0, 128);
  v34 = *(_QWORD *)(v10 - 176);
  sub_1BAAF7494(0xD000000000000022, 0x80000001BB975E30, (uint64_t)v33, v35, (_QWORD *)((char *)v16 + 3 * v13));
  sub_1BA8DAD20(v19);
  sub_1BAA63AFC(v30);
  sub_1BAA63AB8(v17, v34);
  v36 = v34 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v19);
  v37 = sub_1BB017998(v36, v19, 0, 0, 128);
  sub_1BAAF7494(0xD000000000000022, 0x80000001BB975E60, (uint64_t)v37, v38, (_QWORD *)((char *)v16 + 4 * v13));
  sub_1BA8DAD20(v19);
  sub_1BAA63AFC(v34);
  sub_1BAA63AB8(v17, a7);
  v39 = a7 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v19);
  v40 = sub_1BB017998(v39, v19, 1, 0, 192);
  sub_1BAAF7494(0xD00000000000001ELL, 0x80000001BB975E90, (uint64_t)v40, v41, (_QWORD *)((char *)v16 + 5 * v13));
  sub_1BA8DAD20(v19);
  sub_1BAA63AFC(a7);
  v42 = *(_QWORD *)(v10 - 128);
  sub_1BAA63AB8(v17, v42);
  v43 = v42 + *(int *)(*(_QWORD *)(v10 - 88) + 36);
  sub_1BA8DACF0(v19);
  v44 = sub_1BB017998(v43, v19, 0, 0, 192);
  v45 = *(_QWORD *)(v10 - 200);
  sub_1BAAF7494(0xD00000000000001ELL, 0x80000001BB975EB0, (uint64_t)v44, v46, (_QWORD *)((char *)v16 + 6 * v13));
  sub_1BA8DAD20(v19);
  v47 = *(_QWORD **)(v10 - 104);
  result = sub_1BAA63AFC(*(_QWORD *)(v10 - 128));
  *v47 = v45;
  return result;
}

void _s8NewsFeed20FormatWeatherBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1BB01996C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  if (v7)
  {
    sub_1BA968180(v5, v4, v3, v7);
    sub_1BA968180(v2, v1, v0, v6);
    sub_1BA968240(v2, v1, v0, v6);
    sub_1BA968240(v5, v4, v3, v7);
    return 0;
  }
  if (v0 <= 0xFD)
  {
    v12 = v2;
    v13 = v1;
    v14 = v0;
    if (v3 > 0xFD)
    {
      sub_1BA968180(v2, v1, v0, 0);
      sub_1BA968180(v5, v4, v3, 0);
      sub_1BA968180(v2, v1, v0, 0);
      sub_1BA968180(v5, v4, v3, 0);
      sub_1BA968180(v2, v1, v0, 0);
      sub_1BA968240(v2, v1, v0, 0);
      sub_1BA968240(v5, v4, v3, 0);
      sub_1BA968268(v2, v1, v0);
      goto LABEL_8;
    }
    sub_1BA968180(v2, v1, v0, 0);
    sub_1BA968180(v5, v4, v3, 0);
    sub_1BA968180(v2, v1, v0, 0);
    sub_1BA968180(v5, v4, v3, 0);
    sub_1BA968180(v2, v1, v0, 0);
    _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)&v12);
    v11 = v10;
    sub_1BA968240(v2, v1, v0, 0);
    sub_1BA968240(v5, v4, v3, 0);
    sub_1BA968240(v5, v4, v3, 0);
    sub_1BA968268(v12, v13, v14);
    sub_1BA968240(v2, v1, v0, 0);
    return (v11 & 1) != 0;
  }
  sub_1BA968194(v5, v4, v3);
  sub_1BA968180(v5, v4, v3, 0);
  sub_1BA968180(v2, v1, v0, 0);
  sub_1BA968240(v2, v1, v0, 0);
  sub_1BA968240(v5, v4, v3, 0);
  if (v3 <= 0xFD)
  {
LABEL_8:
    sub_1BA968254(v2, v1, v0);
    sub_1BA968254(v5, v4, v3);
    return 0;
  }
  return 1;
}

unint64_t sub_1BB01A2BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB01A2E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB01A2E0()
{
  unint64_t result;

  result = qword_1EF2B9598;
  if (!qword_1EF2B9598)
  {
    result = MEMORY[0x1BCCE5B24]("垟+0(\r", &type metadata for FormatWeatherBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B9598);
  }
  return result;
}

unint64_t sub_1BB01A324(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE77678();
  a1[2] = sub_1BAEF99F8();
  result = sub_1BB01A358();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB01A358()
{
  unint64_t result;

  result = qword_1EF2B95A0;
  if (!qword_1EF2B95A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Text, &type metadata for FormatWeatherBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B95A0);
  }
  return result;
}

uint64_t _s4TextOwxx(uint64_t a1)
{
  return sub_1BA968240(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_BYTE *)(a1 + 17));
}

uint64_t _s4TextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BA968180(*(_QWORD *)a2, v4, v6, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  return a1;
}

uint64_t _s4TextOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BA968180(*(_QWORD *)a2, v4, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  v10 = *(_BYTE *)(a1 + 17);
  *(_BYTE *)(a1 + 17) = v5;
  sub_1BA968240(v7, v8, v9, v10);
  return a1;
}

uint64_t _s4TextOwta(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  char v7;

  v3 = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 17);
  v7 = *(_BYTE *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_1BA968240(v4, v5, v7, v6);
  return a1;
}

uint64_t sub_1BB01A4C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 17) <= 3u)
    return *(unsigned __int8 *)(a1 + 17);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1BB01A4DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(_BYTE *)(result + 16) = 0;
  }
  *(_BYTE *)(result + 17) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Text()
{
  return &type metadata for FormatWeatherBinding.Text;
}

uint64_t _s4TextO10CodingTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB01A554 + 4 * byte_1BB8E2C28[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB01A588 + 4 * byte_1BB8E2C23[v4]))();
}

uint64_t sub_1BB01A588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB01A590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB01A598);
  return result;
}

uint64_t sub_1BB01A5A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB01A5ACLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB01A5B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB01A5B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa_0()
{
  return &_s4TextO10CodingTypeON_0;
}

unint64_t sub_1BB01A5D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B95A8;
  if (!qword_1EF2B95A8)
  {
    sub_1BB01A620();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B95A8);
  }
  return result;
}

void sub_1BB01A620()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B95B0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B95B0);
  }
}

unint64_t sub_1BB01A678()
{
  unint64_t result;

  result = qword_1EF2B95B8;
  if (!qword_1EF2B95B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E2DF8, &_s4TextO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B95B8);
  }
  return result;
}

unint64_t sub_1BB01A6BC()
{
  unint64_t result;

  result = qword_1ED3A69A8;
  if (!qword_1ED3A69A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E2D80, &_s4TextO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A69A8);
  }
  return result;
}

uint64_t sub_1BB01A700()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t destroy for DebugPersonalizationItem(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 56);
  if (v2 >= 2)
    v2 = *(_DWORD *)result + 2;
  if (v2 == 1)
    return __swift_destroy_boxed_opaque_existential_1(v1);
  if (!v2)
  {
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v1 + 40))
    {
      v1 += 16;
      return __swift_destroy_boxed_opaque_existential_1(v1);
    }
  }
  return result;
}

uint64_t initializeWithCopy for DebugPersonalizationItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
    *(_BYTE *)(a1 + 56) = 1;
  }
  else if (v4)
  {
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = (_OWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 48) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16, v7);
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *v6;
      *(_OWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for DebugPersonalizationItem(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = a1;
  if ((__int128 *)a1 == a2)
    return v2;
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 != 1)
  {
    if (v4)
      goto LABEL_9;
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v2 + 40))
      goto LABEL_9;
    a1 = v2 + 16;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_9:
  v5 = *((unsigned __int8 *)a2 + 56);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    v7 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(v2 + 24) = v7;
    *(_QWORD *)(v2 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v7 - 8))(v2, a2);
    *(_BYTE *)(v2 + 56) = 1;
  }
  else if (v5)
  {
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[2];
    *(_OWORD *)(v2 + 41) = *(__int128 *)((char *)a2 + 41);
    *(_OWORD *)(v2 + 16) = v9;
    *(_OWORD *)(v2 + 32) = v10;
    *(_OWORD *)v2 = v8;
  }
  else
  {
    *(_QWORD *)v2 = *(_QWORD *)a2;
    *(_QWORD *)(v2 + 8) = *((_QWORD *)a2 + 1);
    v6 = *((_QWORD *)a2 + 5);
    swift_bridgeObjectRetain();
    if (v6)
    {
      *(_QWORD *)(v2 + 40) = v6;
      *(_QWORD *)(v2 + 48) = *((_QWORD *)a2 + 6);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(v2 + 16, (uint64_t)(a2 + 1), v6);
    }
    else
    {
      v11 = a2[1];
      v12 = a2[2];
      *(_QWORD *)(v2 + 48) = *((_QWORD *)a2 + 6);
      *(_OWORD *)(v2 + 16) = v11;
      *(_OWORD *)(v2 + 32) = v12;
    }
    *(_BYTE *)(v2 + 56) = 0;
  }
  return v2;
}

uint64_t assignWithTake for DebugPersonalizationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  v2 = a1;
  if (a1 == a2)
    return v2;
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 != 1)
  {
    if (v4)
      goto LABEL_9;
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v2 + 40))
      goto LABEL_9;
    a1 = v2 + 16;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_9:
  v5 = *(unsigned __int8 *)(a2 + 56);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v7;
    *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(v2 + 56) = 1;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v6;
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
    if (v5)
    {
      *(_OWORD *)(v2 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      *(_QWORD *)(v2 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(v2 + 56) = 0;
    }
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for DebugFormatUploadConfirmItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadConfirmItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationItem()
{
  return &type metadata for DebugPersonalizationItem;
}

uint64_t storeEnumTagSinglePayload for DebugPersonalizationItem.LoadingItemType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB01AB94 + 4 * byte_1BB8E2E50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB01ABB4 + 4 * byte_1BB8E2E55[v4]))();
}

_BYTE *sub_1BB01AB94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB01ABB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB01ABBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB01ABC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB01ABCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB01ABD4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationItem.LoadingItemType()
{
  return &type metadata for DebugPersonalizationItem.LoadingItemType;
}

unint64_t sub_1BB01ABF4()
{
  unint64_t result;

  result = qword_1EF2B95C0;
  if (!qword_1EF2B95C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E2ECC, &type metadata for DebugPersonalizationItem.LoadingItemType);
    atomic_store(result, (unint64_t *)&qword_1EF2B95C0);
  }
  return result;
}

uint64_t sub_1BB01AC38(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1BA7447E8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (void *)MEMORY[0x1BCCE4630](v5, a1);
      }
      else
      {
        v6 = *(void **)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      v7 = objc_msgSend(v6, sel_identifier);
      v8 = sub_1BB8729A0();
      v10 = v9;
      swift_unknownObjectRelease();

      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1BA7447E8(v11 > 1, v12 + 1, 1);
      ++v5;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

_QWORD *FeedDatabase.__allocating_init(log:feedCursorFactory:feedGroupProcessor:lazyDatabase:referenceService:saveJournalEntries:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v14;

  v7 = v6;
  swift_allocObject();
  v14 = sub_1BB0257E8(a1, a2, a3, a4, a5, a6);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 88) - 8) + 8))(a3);

  swift_unknownObjectRelease();
  return v14;
}

_QWORD *FeedDatabase.init(log:feedCursorFactory:feedGroupProcessor:lazyDatabase:referenceService:saveJournalEntries:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t *v6;
  uint64_t v9;
  _QWORD *v10;

  v9 = *v6;
  v10 = sub_1BB0257E8(a1, a2, a3, a4, a5, a6);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 88) - 8) + 8))(a3);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1BB01AEF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  CFTimeInterval v11;
  uint64_t v12;
  uint64_t result;
  double v14;
  uint64_t v15;

  v4 = CACurrentMediaTime();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedDatabaseStore(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  v8 = a1;
  sub_1BB86E71C();
  v9 = sub_1BB46DD40(v8, v15);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  v11 = CACurrentMediaTime();
  v12 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v10 + 64) = v12;
  *(CFTimeInterval *)(v10 + 32) = (v11 - v4) * 1000.0;
  sub_1BB87330C();
  sub_1BB86EF44("Feed database store initialized, time=%fms", v14);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t FeedDatabase.readRootCursor(context:state:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;

  CACurrentMediaTime();
  v6 = sub_1BA6B2CB8();
  if (!v3)
  {
    v7 = (_QWORD *)v6;
    v8 = *(_QWORD *)(v2 + 16);
    v9 = sub_1BB87330C();
    sub_1BB86EF44("Feed database reading root cursor from database", 47, 2, &dword_1BA493000, v8, v9, MEMORY[0x1E0DEE9D8]);
    v10 = sub_1BB01B70C(a1, a2, v7, 0);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87FC80;
    v12 = sub_1BA630F34(v10);
    v14 = v13;
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 40) = v14;
    FeedCursorContainer.kind.getter(v10, &v16);
    __asm { BR              X12 }
  }
  return v2;
}

void sub_1BB01B61C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  CFTimeInterval v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v3 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 104) = v5;
  *(_QWORD *)(v3 + 72) = 0x6E657A6F7246;
  *(_QWORD *)(v3 + 80) = a1;
  swift_bridgeObjectRetain(v4);
  v7 = CACurrentMediaTime();
  v8 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v3 + 136) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v3 + 144) = v8;
  *(CFTimeInterval *)(v3 + 112) = (v7 - v6) * 1000.0;
  v10 = sub_1BB87330C(v9);
  sub_1BB86EF44("Feed database successfully reading root cursor, id=%{public}@, kind=%{public}@, time=%fms", 89, 2, &dword_1BA493000, v2, v10, v3);
  swift_release(v1);
  swift_bridgeObjectRelease(v3);
  JUMPOUT(0x1BB01B5F0);
}

void sub_1BB01B62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  CFTimeInterval v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v2 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 72) = 0x4620666F20646E45;
  *(_QWORD *)(v2 + 80) = 0xEB00000000646565;
  swift_bridgeObjectRetain(v3);
  v6 = CACurrentMediaTime();
  v7 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v2 + 136) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v2 + 144) = v7;
  *(CFTimeInterval *)(v2 + 112) = (v6 - v5) * 1000.0;
  v9 = sub_1BB87330C(v8);
  sub_1BB86EF44("Feed database successfully reading root cursor, id=%{public}@, kind=%{public}@, time=%fms", 89, 2, &dword_1BA493000, v1, v9, v2);
  swift_release(v0);
  swift_bridgeObjectRelease(v2);
  JUMPOUT(0x1BB01B5F0);
}

void sub_1BB01B64C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  CFTimeInterval v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v3 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 104) = v5;
  *(_QWORD *)(v3 + 72) = 0x646568636143;
  *(_QWORD *)(v3 + 80) = a1;
  swift_bridgeObjectRetain(v4);
  v7 = CACurrentMediaTime();
  v8 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v3 + 136) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v3 + 144) = v8;
  *(CFTimeInterval *)(v3 + 112) = (v7 - v6) * 1000.0;
  v10 = sub_1BB87330C(v9);
  sub_1BB86EF44("Feed database successfully reading root cursor, id=%{public}@, kind=%{public}@, time=%fms", 89, 2, &dword_1BA493000, v2, v10, v3);
  swift_release(v1);
  swift_bridgeObjectRelease(v3);
  JUMPOUT(0x1BB01B5F0);
}

void sub_1BB01B65C()
{
  JUMPOUT(0x1BB01B684);
}

uint64_t sub_1BB01B70C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[4];
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t AssociatedConformanceWitness;
  char *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103[5];
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  LODWORD(v102) = a4;
  v100 = a1;
  v6 = *v4;
  v85 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  v9 = type metadata accessor for FeedCursorTrackerSnapshot(255, v8, v7, a4);
  v10 = sub_1BB873A2C();
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  v88 = v10;
  v87 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v86 = (char *)v72 - v12;
  v92 = v9;
  v93 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v13);
  v83 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v90 = (uint64_t)v72 - v16;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v11);
  MEMORY[0x1E0C80A78](v17);
  v95 = (char *)v72 - v18;
  v84 = v6;
  v82 = *(_QWORD *)(v6 + 96);
  swift_getAssociatedTypeWitness();
  v91 = v7;
  v89 = v8;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v99 = swift_getAssociatedTypeWitness();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v97 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v101 = (char *)v72 - v22;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], v11);
  MEMORY[0x1E0C80A78](v23);
  v25 = (_QWORD *)((char *)v72 - v24);
  v26 = sub_1BB86F04C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = a3;
  sub_1BB86F1E4();
  v103[3] = sub_1BB86F280();
  v103[4] = MEMORY[0x1E0DB2D38];
  __swift_allocate_boxed_opaque_existential_0(v103);
  sub_1BB86F28C();
  sub_1BB86F160();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  *v25 = 0x4464657461657263;
  v25[1] = 0xEB00000000657461;
  v30 = *MEMORY[0x1E0DB2D18];
  v31 = sub_1BB86F274();
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v32 + 104))(v25, v30, v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v25, 0, 1, v31);
  v33 = v126;
  sub_1BB86F1B4();
  if (v33)
  {
    swift_release();
    sub_1BA5C699C((uint64_t)v25, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  v74 = AssociatedTypeWitness;
  v35 = (char)v102;
  swift_release();
  sub_1BA5C699C((uint64_t)v25, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  if (!(_QWORD)v104)
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_QWORD *)v48 = 0;
    *(_QWORD *)(v48 + 8) = 0;
    *(_BYTE *)(v48 + 16) = 7;
    return swift_willThrow();
  }
  v36 = v107;
  v37 = v108;
  v39 = v109;
  v38 = v110;
  v78 = v104;
  v115 = v104;
  v126 = *((_QWORD *)&v104 + 1);
  v79 = v105;
  v116 = v105;
  v117 = v106;
  v80 = v106;
  v118 = v107;
  v119 = v108;
  v120 = v109;
  v121 = v110;
  v77 = v111;
  v122 = v111;
  v123 = v112;
  v76 = v112;
  v75 = v113;
  v124 = v113;
  v125 = v114;
  v81 = v114;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v40 = *((_QWORD *)&v104 + 1);
  if (!*((_QWORD *)&v104 + 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v41 = v104;
  FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v40 - 1));
  v73 = LOBYTE(v103[0]);
  v42 = v101;
  if (LOBYTE(v103[0]) <= 5u && ((1 << v73) & 0x31) != 0)
  {
    v72[0] = v36;
    v72[1] = v37;
    v72[2] = v39;
    v43 = v98;
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
    v45 = v100;
    v46 = v99;
    v44(v101, v100, v99);
    v72[3] = v38;
    if ((v35 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v46);
      v47 = v97;
      goto LABEL_12;
    }
    sub_1BB86F064();
    v49 = (uint64_t)v95;
    sub_1BB86F22C();
    swift_release();
    v50 = sub_1BB86C8B0();
    v51 = *(_QWORD *)(v50 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50);
    if ((_DWORD)result != 1)
    {
      v46 = v99;
      v52 = swift_getAssociatedConformanceWitness();
      v53 = v101;
      FeedServiceContextType.shouldReadRootCursorFromDatabase(createdDate:)(v49, v46, v52);
      v55 = v54;
      (*(void (**)(char *, uint64_t))(v98 + 8))(v53, v46);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
      v45 = v100;
      v47 = v97;
      if ((v55 & 1) != 0)
      {
LABEL_12:
        v44(v47, v45, v46);
        v56 = v96;
        sub_1BB86F1E4();
        v61 = sub_1BB86F1A8();
        swift_release();
        v62 = (uint64_t)v47;
        v63 = v90;
        sub_1BA4FEC6C(v62, v61, v89, v91, v90);
        v64 = v93;
        v65 = (uint64_t)v86;
        v66 = v92;
        v102 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
        v102(v86, v63, v92);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v66);
        sub_1BA5334C4(v65);
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v65, v88);
        sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_1BB87CE70;
        v68 = *(_QWORD *)(*(_QWORD *)(v63 + *(int *)(v66 + 36)) + 16);
        v69 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v67 + 64) = v69;
        *(_QWORD *)(v67 + 32) = v68;
        sub_1BB87330C();
        sub_1BB86EF44("Feed database root tracker read with %ld seen groups", v72[0]);
        swift_bridgeObjectRelease();
        sub_1BA4D3E3C(v56, (uint64_t)&v115);
        v71 = *(_QWORD *)(v84 + 104);
        v104 = *(_OWORD *)(v84 + 80);
        v105 = v82;
        v106 = v71;
        type metadata accessor for FeedDatabaseContext();
      }
      sub_1BB025BE8();
      swift_allocError();
      *(_OWORD *)v70 = xmmword_1BB8D2DB0;
      *(_BYTE *)(v70 + 16) = 7;
      swift_willThrow();
      v60 = v78;
      return sub_1BA4C47AC(v60);
    }
    goto LABEL_18;
  }
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v57 = *((_QWORD *)&v104 + 1);
  if (*((_QWORD *)&v104 + 1))
  {
    v58 = v104;
    sub_1BB025BE8();
    swift_allocError();
    *(_QWORD *)v59 = v58;
    *(_QWORD *)(v59 + 8) = v57;
    *(_BYTE *)(v59 + 16) = 2;
    swift_willThrow();
    v60 = v78;
    return sub_1BA4C47AC(v60);
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1BB01C484(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = v2;
  v6 = *v2;
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 200)) + 16));
  v7 = *(_QWORD *)(*v2 + 208);
  if (*((_BYTE *)v2 + v7) == 1)
  {
    *((_BYTE *)v2 + v7) = 0;
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1ED3AC990 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    if (v19 == 1)
    {
      v8 = FeedCursorContainer.rootCursorContainer.getter(a2);
      v9 = sub_1BA630F34((uint64_t)v8);
      v11 = v10;
      swift_bridgeObjectRetain();
      swift_release();
      v12 = v3[2];
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v13 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v11;
      swift_bridgeObjectRetain();
      v14 = sub_1BB87330C();
      sub_1BB86EF44("Feed database scheduling cleanup against root cursor %{public}@", 63, 2, &dword_1BA493000, v12, v14, v13);
      swift_bridgeObjectRelease();
      v15 = swift_allocObject();
      swift_weakInit();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v6 + 80);
      *(_QWORD *)(v16 + 24) = *(_QWORD *)(v6 + 88);
      *(_OWORD *)(v16 + 32) = *(_OWORD *)(v6 + 96);
      *(_QWORD *)(v16 + 48) = *(_QWORD *)(v6 + 112);
      *(_OWORD *)(v16 + 56) = *(_OWORD *)(v6 + 120);
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v6 + 136);
      *(_QWORD *)(v16 + 80) = v15;
      *(_QWORD *)(v16 + 88) = v9;
      *(_QWORD *)(v16 + 96) = v11;
      *(_QWORD *)(v16 + 104) = a1;
      swift_retain();
      swift_retain();
      sub_1BA6B2D10((uint64_t)sub_1BB026728, v16);
      swift_release();
      swift_release();
    }
    else
    {
      v17 = v2[2];
      v18 = sub_1BB87330C();
      sub_1BB86EF44("Feed database cleanup disabled by settings", 42, 2, &dword_1BA493000, v17, v18, MEMORY[0x1E0DEE9D8]);
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 200)) + 16));
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 200)) + 16));
  }
}

_QWORD *sub_1BB01C750(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  void *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *result;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t AssociatedConformanceWitness;
  char *v60;
  unsigned int v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  char v70;
  id v71;

  v9 = v8;
  v49 = a5;
  v64 = a3;
  v65 = a4;
  swift_getAssociatedTypeWitness();
  v50 = a6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v58 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v56 = (char *)&v45 - v15;
  v16 = swift_checkMetadataState();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v60 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v45 - v20;
  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v23 = result;
    v47 = a7;
    v48 = a8;
    FeedServiceFetchResult.groups.getter(a2);
    v25 = v24;
    if (MEMORY[0x1BCCE37E4]())
    {
      v26 = 0;
      v51 = xmmword_1BB87FC80;
      v53 = v21;
      v54 = v17;
      v27 = v60;
      v52 = v25;
      v55 = v23;
      do
      {
        v29 = sub_1BB872E80();
        sub_1BB872E38();
        if ((v29 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v21, v25+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v26, v16);
          v30 = v26 + 1;
          if (__OFADD__(v26, 1))
            goto LABEL_20;
        }
        else
        {
          result = (_QWORD *)sub_1BB873D08();
          if (v46 != 8)
          {
            __break(1u);
            return result;
          }
          v68 = result;
          (*(void (**)(char *, void **, uint64_t))(v17 + 16))(v21, &v68, v16);
          swift_unknownObjectRelease();
          v30 = v26 + 1;
          if (__OFADD__(v26, 1))
          {
LABEL_20:
            __break(1u);
            break;
          }
        }
        v67 = v30;
        (*(void (**)(_QWORD *, char *, uint64_t))(v17 + 32))(v27, v21, v16);
        v31 = v9;
        sub_1BB01CCD4(v64, v27, v65);
        if (v9)
        {
          v9 = 0;
          v71 = v31;
          v32 = v31;
          v66 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
          if ((swift_dynamicCast() & 1) == 0)
          {
            v63 = 0;
LABEL_16:

            v62 = v23[2];
            v61 = sub_1BB8732F4();
            sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v33 = swift_allocObject();
            *(_OWORD *)(v33 + 16) = v51;
            v68 = 0;
            v69 = (id)0xE000000000000000;
            v34 = v60;
            v35 = v56;
            (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v16, AssociatedConformanceWitness);
            v36 = v58;
            sub_1BB874344();
            (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v36);
            v37 = v68;
            v38 = v69;
            *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
            v39 = sub_1BA6A2D8C();
            *(_QWORD *)(v33 + 64) = v39;
            *(_QWORD *)(v33 + 32) = v37;
            *(_QWORD *)(v33 + 40) = v38;
            v27 = v34;
            v40 = sub_1BB86DEE8();
            v41 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v33 + 96) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v33 + 104) = v39;
            *(_QWORD *)(v33 + 72) = v40;
            *(_QWORD *)(v33 + 80) = v42;
            v68 = 0;
            v69 = (id)0xE000000000000000;
            v71 = v31;
            sub_1BB873E34();
            v43 = v68;
            v44 = v69;
            *(_QWORD *)(v33 + 136) = v41;
            *(_QWORD *)(v33 + 144) = v39;
            *(_QWORD *)(v33 + 112) = v43;
            *(_QWORD *)(v33 + 120) = v44;
            sub_1BB86EF44("Feed database failed to write group to cache, kind=%{public}@ identifier=%{public}@, error=%{public}@", 101, 2, &dword_1BA493000, v62, v61, v33);
            v23 = v55;
            swift_bridgeObjectRelease();

            v17 = v54;
            (*(void (**)(_QWORD *, uint64_t))(v54 + 8))(v34, v16);
            v9 = v63;
            v21 = v53;
            v25 = v52;
            goto LABEL_5;
          }
          if (v70 != 7 || v68 != (void *)3 || v69)
          {
            v63 = 0;
            sub_1BAF24FD0(v68, v69, v70);
            goto LABEL_16;
          }
          (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v27, v16);

        }
        else
        {
          (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v27, v16);
          v9 = 0;
        }
LABEL_5:
        v28 = MEMORY[0x1BCCE37E4](v25, v16);
        ++v26;
      }
      while (v67 != v28);
    }
    swift_bridgeObjectRelease();
    sub_1BB0261B0((uint64_t)v64, v65);
    return (_QWORD *)swift_release();
  }
  return result;
}

_QWORD *sub_1BB01CCD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (**v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (**v24)(char *, uint64_t);
  uint64_t v25;
  _QWORD *result;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  void (**v85)(char *, uint64_t);
  _QWORD *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  unsigned __int8 v102;
  __int128 v103[2];
  _QWORD v104[31];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  _QWORD v112[18];
  _OWORD v113[6];
  _OWORD v114[6];
  uint64_t v115;
  _OWORD v116[6];
  uint64_t v117;
  uint64_t v118;

  v92 = a2;
  v86 = a1;
  v5 = *v3;
  v6 = *a1;
  sub_1BB0264EC();
  v82 = *(_QWORD *)(v7 - 8);
  v83 = v7;
  MEMORY[0x1E0C80A78](v7);
  v84 = (_QWORD *)((char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for FeedCursorGroup(255, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v9);
  v11 = sub_1BB873A2C();
  v87 = *(_QWORD *)(v11 - 8);
  v88 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v79 - v12;
  v14 = *(void (***)(char *, uint64_t))(v10 - 8);
  MEMORY[0x1E0C80A78](v15);
  v89 = (uint64_t)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v90 = (char *)v79 - v18;
  v91 = a3;
  *(_QWORD *)&v105 = *(_QWORD *)(a3 + qword_1ED4767D0);
  v19 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF20], v19);
  sub_1BB8728EC();
  v112[16] = v112[17];
  v20 = *(_OWORD *)(v5 + 96);
  v93 = *(_OWORD *)(v5 + 80);
  v94 = v20;
  v95 = *(_OWORD *)(v5 + 112);
  v21 = *(_QWORD *)(v5 + 136);
  v22 = *(_QWORD *)(v5 + 128);
  v96 = v22;
  v97 = v21;
  v98 = v92;
  v23 = sub_1BB873F24();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECCF8], v23);
  v24 = v14;
  v25 = v118;
  sub_1BB872C28();
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v14[6])(v13, 1, v10) == 1)
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v13, v88);
  v27 = v90;
  ((void (*)(char *, char *, uint64_t))v14[4])(v90, v13, v10);
  v28 = v14[2];
  v29 = v89;
  ((void (*)(uint64_t, char *, uint64_t))v28)(v89, v27, v10);
  v30 = v91;
  v31 = swift_retain();
  sub_1BAA06B14(v31, v29, v21, (uint64_t *)v113);
  if (v25)
  {
    v32 = v24[1];
    v33 = v27;
    return (_QWORD *)((uint64_t (*)(char *, uint64_t))v32)(v33, v10);
  }
  v118 = v22;
  sub_1BB86F1D8();
  v107 = v113[2];
  v108 = v113[3];
  v109 = v113[4];
  v110 = v113[5];
  v105 = v113[0];
  v106 = v113[1];
  sub_1BB86F19C();
  swift_release();
  if (*((_BYTE *)v85 + *((_QWORD *)*v85 + 23)) != 1
    || !objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
  {
    v24[1](v27, v10);
    return (_QWORD *)sub_1BA5D1B6C((uint64_t)v113);
  }
  v89 = v21;
  v85 = v24;
  v34 = (uint64_t *)(v30 + qword_1ED476790);
  v35 = *(_QWORD *)(v30 + qword_1ED476790 + 8);
  v36 = FeedCursorGroup.identifier.getter();
  if (!*(_QWORD *)(v35 + 16) || (v38 = sub_1BA6E35A8(v36, v37), (v39 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v85[1](v27, v10);
    return (_QWORD *)sub_1BA5D1B6C((uint64_t)v113);
  }
  v40 = (uint64_t *)(*(_QWORD *)(v35 + 56) + 24 * v38);
  v41 = *v40;
  v87 = v40[1];
  v42 = v87;
  v88 = v41;
  swift_bridgeObjectRetain();
  sub_1BA67035C(v42);
  swift_bridgeObjectRelease();
  v43 = v34[2];
  v44 = FeedCursorGroup.identifier.getter();
  if (!*(_QWORD *)(v43 + 16))
    goto LABEL_32;
  v46 = sub_1BA6E35A8(v44, v45);
  if ((v47 & 1) == 0)
    goto LABEL_32;
  v48 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v46);
  swift_bridgeObjectRelease();
  v49 = *v34;
  sub_1BA4AD288(0, &qword_1ED3AADE0, (uint64_t)&type metadata for FeedJournalEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v51 = v50;
  v52 = sub_1BA5C69E0(&qword_1ED3AADE8, &qword_1ED3AADE0, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E0DEAF50]);
  v79[2] = v51;
  v80 = v49;
  *(_QWORD *)&v105 = v49;
  v53 = v84;
  v79[1] = v52;
  result = (_QWORD *)sub_1BB8730E4();
  v54 = v48 - 1;
  if (__OFSUB__(v48, 1))
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v92 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v81 = v10;
  while (1)
  {
    v104[0] = v54;
    v55 = v83;
    sub_1BB86E134();
    result = (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t))(v82 + 8))(v53, v55);
    v56 = v105;
    if (!(_QWORD)v105)
      break;
    if (!*(_QWORD *)(v105 + 16))
      goto LABEL_51;
    v57 = *((_QWORD *)&v105 + 1);
    v58 = v106;
    sub_1BA670450(v105 + 32, (uint64_t)&v105);
    sub_1BA5B0E6C((uint64_t)v112, (uint64_t)v104);
    sub_1BA67036C((uint64_t)&v105);
    sub_1BA5B0E6C((uint64_t)v104, (uint64_t)&v99);
    if (v102 >= 3u)
    {
      if (v102 - 4 < 3)
      {
        sub_1BA5B0A58((uint64_t)&v99);
        v99 = 0u;
        v100 = 0u;
        v101 = 0;
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BA4CECCC(&v99, (uint64_t)v103);
    sub_1BA4CECCC(v103, (uint64_t)&v99);
LABEL_21:
    sub_1BA5B0A58((uint64_t)v104);
    v59 = *((_QWORD *)&v100 + 1);
    sub_1BB026698((uint64_t)&v99);
    if (v59)
    {
      sub_1BA5B1720(v56, v57);
      break;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v92 = sub_1BA670884(0, v92[2] + 1, 1, v92);
    v60 = v92;
    v62 = v92[2];
    v61 = v92[3];
    if (v62 >= v61 >> 1)
      v60 = sub_1BA670884((_QWORD *)(v61 > 1), v62 + 1, 1, v92);
    v60[2] = v62 + 1;
    v92 = v60;
    v63 = &v60[3 * v62];
    v63[4] = v56;
    v63[5] = v57;
    v63[6] = v58;
    *(_QWORD *)&v105 = v80;
    v53 = v84;
    result = (_QWORD *)sub_1BB8730E4();
    v64 = __OFSUB__(v54--, 1);
    v10 = v81;
    if (v64)
      goto LABEL_49;
  }
  result = v92;
  v71 = v92[2];
  if (!v71)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    v65 = v88;
    v66 = *(_QWORD *)(v88 + 16);
    if (!v66)
    {
      swift_bridgeObjectRetain();
LABEL_48:
      sub_1BA5D1B6C((uint64_t)v113);
      swift_bridgeObjectRelease();
      sub_1BA5B18CC(v87);
      swift_bridgeObjectRelease();
      v32 = v85[1];
      v33 = v90;
      return (_QWORD *)((uint64_t (*)(char *, uint64_t))v32)(v33, v10);
    }
    v67 = v88 + 32;
    result = (_QWORD *)swift_bridgeObjectRetain();
    v68 = v65 + 32;
    v69 = v87;
    while (1)
    {
      *(_QWORD *)&v99 = v69;
      if (!*(_QWORD *)(v65 + 16))
        break;
      sub_1BA670450(v67, (uint64_t)&v105);
      sub_1BA670450(v68, (uint64_t)v104);
      v70 = v91;
      swift_retain();
      sub_1BA67035C(v69);
      sub_1BAA75EC8((unint64_t *)&v99, (uint64_t *)&v105, (uint64_t)v104, v70, v89, (uint64_t)v116);
      sub_1BB86F1D8();
      v109 = v116[4];
      v110 = v116[5];
      v111 = v117;
      v105 = v116[0];
      v106 = v116[1];
      v107 = v116[2];
      v108 = v116[3];
      sub_1BB86F19C();
      swift_release();
      result = (_QWORD *)sub_1BB0265C4((uint64_t)v116);
      v68 += 248;
      --v66;
      v65 = v88;
      if (!v66)
        goto LABEL_48;
    }
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v72 = v92 + 4;
  v84 = v92 + 4;
  while (v71 <= result[2])
  {
    --v71;
    v73 = &v72[3 * v71];
    v74 = *v73;
    v75 = *(_QWORD *)(*v73 + 16);
    if (v75)
    {
      v76 = v73[1];
      swift_bridgeObjectRetain();
      sub_1BA67035C(v76);
      result = (_QWORD *)swift_bridgeObjectRetain();
      v77 = v74 + 32;
      while (1)
      {
        *(_QWORD *)&v99 = v76;
        if (!*(_QWORD *)(v74 + 16))
          goto LABEL_50;
        sub_1BA670450(v74 + 32, (uint64_t)&v105);
        sub_1BA670450(v77, (uint64_t)v104);
        v78 = v91;
        swift_retain();
        sub_1BA67035C(v76);
        sub_1BAA75EC8((unint64_t *)&v99, (uint64_t *)&v105, (uint64_t)v104, v78, v89, (uint64_t)v114);
        sub_1BB86F1D8();
        v109 = v114[4];
        v110 = v114[5];
        v111 = v115;
        v105 = v114[0];
        v106 = v114[1];
        v107 = v114[2];
        v108 = v114[3];
        sub_1BB86F19C();
        swift_release();
        result = (_QWORD *)sub_1BB0265C4((uint64_t)v114);
        v77 += 248;
        if (!--v75)
        {
          swift_bridgeObjectRelease_n();
          sub_1BA5B18CC(v76);
          v10 = v81;
          result = v92;
          v72 = v84;
          break;
        }
      }
    }
    if (!v71)
      goto LABEL_32;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t FeedDatabase.dropAndSave(result:flush:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v2;
  v7 = *v2;
  result = sub_1BA6B2CB8();
  if (!v3)
  {
    v9 = result;
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v7 + 80);
    *(_QWORD *)(v11 + 24) = *(_QWORD *)(v7 + 88);
    *(_OWORD *)(v11 + 32) = *(_OWORD *)(v7 + 96);
    *(_QWORD *)(v11 + 48) = *(_QWORD *)(v7 + 112);
    *(_OWORD *)(v11 + 56) = *(_OWORD *)(v7 + 120);
    *(_QWORD *)(v11 + 72) = *(_QWORD *)(v7 + 136);
    *(_QWORD *)(v11 + 80) = v10;
    *(_QWORD *)(v11 + 88) = v9;
    *(_QWORD *)(v11 + 96) = a1;
    swift_retain();
    swift_retain();
    if ((a2 & 1) != 0)
    {
      sub_1BB46DD94();
      v12 = v4[2];
      v13 = sub_1BB87330C();
      sub_1BB86EF44("Feed database dropAndSave did flush changes", 43, 2, &dword_1BA493000, v12, v13, MEMORY[0x1E0DEE9D8]);
    }
    else
    {
      sub_1BA6B2D10((uint64_t)sub_1BB025CE4, v11);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

id *sub_1BB01D800(uint64_t a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id *result;
  id *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  void (*v77)(void);
  char *v78;
  uint64_t v79;
  id *v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t AssociatedConformanceWitness;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id *v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  id v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  void *v136;
  void *v137;
  id *v138;
  id v139;
  char v140;
  id v141;

  v115 = a8;
  v113 = a6;
  v111 = a4;
  v136 = a3;
  v128 = a2;
  v13 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v114 = a7;
  v112 = a5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v122 = AssociatedTypeWitness;
  v120 = swift_getAssociatedTypeWitness();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v118 = (char *)&v104 - v15;
  v17 = *(_QWORD *)(v13 + 80);
  v16 = *(_QWORD *)(v13 + 88);
  v19 = type metadata accessor for FeedCursorGroup(0, v17, v16, v18);
  v20 = *(_QWORD *)(v19 - 8);
  v123 = v19;
  v124 = v20;
  MEMORY[0x1E0C80A78](v19);
  v135 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v104 - v23;
  v26 = type metadata accessor for FeedCursorTrackerSnapshot(255, v17, v16, v25);
  v27 = sub_1BB873A2C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v104 - v29;
  swift_beginAccess();
  result = (id *)swift_weakLoadStrong();
  if (!result)
    return result;
  v32 = result;
  v33 = result[2];
  v34 = sub_1BB87330C();
  sub_1BB86EF44("Feed database dropAndSave will erase all", 40, 2, &dword_1BA493000, v33, v34, MEMORY[0x1E0DEE9D8]);

  sub_1BA5333AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v30, 1, 1, v26);
  sub_1BA5334C4((uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  sub_1BA546D3C((uint64_t)v136);
  v36 = v35;
  swift_retain();
  v37 = (unint64_t)FeedCursorContainer.rootCursorContainer.getter(v36);
  swift_release();
  if ((v37 & 0x8000000000000000) != 0)
  {
    v100 = v32[2];
    v101 = sub_1BB87330C();
    sub_1BB86EF44("Feed database dropAndSave will write nothing because the root cursor is deferred", 80, 2, &dword_1BA493000, v100, v101, MEMORY[0x1E0DEE9D8]);
    swift_release();

    return (id *)swift_release();
  }
  v110 = a11;
  v109 = a10;
  v108 = a9;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v133 = v38;
  v117 = xmmword_1BB87CE70;
  v116 = xmmword_1BB87FC80;
  v39 = v32;
  v126 = v32;
  v40 = v124;
  v107 = v17;
  v106 = v16;
  v127 = v24;
  while (1)
  {
    v134 = (_QWORD *)v37;
    swift_retain();
    v41 = v39[2];
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v117;
    v43 = qword_1ED4767D0;
    v44 = *(_QWORD *)((char *)v134 + qword_1ED4767D0);
    v45 = v41;
    v46 = v44;
    v47 = v123;
    v48 = MEMORY[0x1BCCE37B4](v46, v123);
    *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v42 + 64) = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v42 + 32) = v48;
    sub_1BB87330C();
    sub_1BB86EF44("Feed database dropAndSave will write %lu groups", v104);

    v49 = v47;
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)((char *)v134 + v43);
    v51 = (uint64_t)v134;
    v52 = swift_bridgeObjectRetain();
    if (MEMORY[0x1BCCE37E4](v52, v47))
      break;
LABEL_23:
    swift_bridgeObjectRelease();
    v90 = v39[2];
    v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = v117;
    v92 = v134[2];
    v93 = v134[3];
    *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v91 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v91 + 32) = v92;
    *(_QWORD *)(v91 + 40) = v93;
    v94 = (uint64_t)v134;
    v95 = v90;
    swift_bridgeObjectRetain();
    v96 = sub_1BB87330C();
    sub_1BB86EF44("Feed database dropAndSave will write cursor, id=%{public}@", 58, 2, &dword_1BA493000, v95, v96, v91);

    swift_bridgeObjectRelease();
    v97 = v137;
    sub_1BB0261B0((uint64_t)v128, v94);
    v137 = v97;
    if (v97)
    {
      swift_release();
      swift_release();
      v99 = v94;
      return (id *)sub_1BA62ECD4(v99);
    }
    v98 = FeedCursorContainer.nextCursorContainer.getter(v94);
    sub_1BA62ECD4(v94);
    if ((~v98 & 0xF000000000000007) == 0)
    {
      v102 = v39[2];
      v103 = sub_1BB87330C();
      sub_1BB86EF44("Feed database dropAndSave will finish because the next cursor is nil", 68, 2, &dword_1BA493000, v102, v103, MEMORY[0x1E0DEE9D8]);
      swift_release();

      return (id *)swift_release();
    }
    swift_release();
    v37 = v98;
    if (v98 < 0)
    {
      swift_release();
      v99 = v98;
      return (id *)sub_1BA62ECD4(v99);
    }
  }
  v53 = 0;
  v54 = v135;
  v125 = v50;
  while (1)
  {
    v62 = v50;
    v63 = sub_1BB872E80();
    sub_1BB872E38();
    if ((v63 & 1) == 0)
      break;
    result = (id *)(*(uint64_t (**)(char *, unint64_t, uint64_t))(v40 + 16))(v24, v62+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v53, v49);
    v50 = v62;
    v64 = v53 + 1;
    if (__OFADD__(v53, 1))
      goto LABEL_33;
LABEL_10:
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v54, v24, v49);
    v65 = v40;
    v66 = v137;
    sub_1BB01CCD4(v128, &v54[*(int *)(v49 + 36)], v51);
    v136 = v66;
    if (v66)
    {
      v137 = 0;
      v141 = v66;
      v67 = v66;
      v68 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (v140 == 7 && v138 == (id *)3 && !v139)
        {

          v69 = v39[2];
          v70 = swift_allocObject();
          *(_OWORD *)(v70 + 16) = v117;
          v71 = FeedCursorGroup.identifier.getter();
          v73 = v72;
          *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v70 + 64) = sub_1BA6A2D8C();
          *(_QWORD *)(v70 + 32) = v71;
          *(_QWORD *)(v70 + 40) = v73;
          v74 = sub_1BB87330C();
          v75 = v69;
          v50 = v125;
          sub_1BB86EF44("Feed database dropAndSave did skip group because it ignores caching, id=%{public}@", 82, 2, &dword_1BA493000, v75, v74, v70);
          v54 = v135;
          swift_bridgeObjectRelease();
          v40 = v124;
          (*(void (**)(char *, uint64_t))(v124 + 8))(v54, v49);

          goto LABEL_7;
        }
        v129 = v68;
        v130 = v64;
        sub_1BAF24FD0(v138, v139, v140);
      }
      else
      {
        v129 = v68;
        v130 = v64;
      }

      v132 = v39[2];
      v131 = sub_1BB8732F4();
      v76 = swift_allocObject();
      *(_OWORD *)(v76 + 16) = v116;
      v138 = 0;
      v139 = (id)0xE000000000000000;
      v77 = *(void (**)(void))(AssociatedConformanceWitness + 64);
      swift_checkMetadataState();
      v78 = v118;
      v77();
      v79 = v120;
      sub_1BB874344();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v78, v79);
      v80 = v138;
      v81 = v139;
      v82 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v76 + 56) = MEMORY[0x1E0DEA968];
      v83 = sub_1BA6A2D8C();
      *(_QWORD *)(v76 + 64) = v83;
      *(_QWORD *)(v76 + 32) = v80;
      *(_QWORD *)(v76 + 40) = v81;
      v84 = sub_1BB86DEE8();
      v85 = v82;
      *(_QWORD *)(v76 + 96) = v82;
      *(_QWORD *)(v76 + 104) = v83;
      *(_QWORD *)(v76 + 72) = v84;
      *(_QWORD *)(v76 + 80) = v86;
      v138 = 0;
      v139 = (id)0xE000000000000000;
      v87 = v136;
      v141 = v136;
      sub_1BB873E34();
      v88 = v138;
      v89 = v139;
      *(_QWORD *)(v76 + 136) = v85;
      *(_QWORD *)(v76 + 144) = v83;
      *(_QWORD *)(v76 + 112) = v88;
      *(_QWORD *)(v76 + 120) = v89;
      sub_1BB86EF44("Feed database failed to write group to cache, kind=%{public}@ identifier=%{public}@, error=%{public}@", 101, 2, &dword_1BA493000, v132, v131, v76);
      v39 = v126;
      swift_bridgeObjectRelease();

      v49 = v123;
      v40 = v124;
      v54 = v135;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v135, v123);
      v50 = v125;
      v64 = v130;
      goto LABEL_7;
    }
    v55 = v39[2];
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v117;
    v57 = FeedCursorGroup.identifier.getter();
    v59 = v58;
    *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v56 + 32) = v57;
    *(_QWORD *)(v56 + 40) = v59;
    v39 = v126;
    v60 = sub_1BB87330C();
    v54 = v135;
    sub_1BB86EF44("Feed database dropAndSave did write group, id=%{public}@", 56, 2, &dword_1BA493000, v55, v60, v56);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v54, v49);
    v137 = v136;
    v40 = v65;
LABEL_7:
    v61 = MEMORY[0x1BCCE37E4](v50, v49);
    ++v53;
    v24 = v127;
    v51 = (uint64_t)v134;
    if (v64 == v61)
      goto LABEL_23;
  }
  result = (id *)sub_1BB873D08();
  if (v105 != 8)
    goto LABEL_34;
  v138 = result;
  (*(void (**)(char *, id **, uint64_t))(v40 + 16))(v24, &v138, v49);
  result = (id *)swift_unknownObjectRelease();
  v50 = v125;
  v64 = v53 + 1;
  if (!__OFADD__(v53, 1))
    goto LABEL_10;
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1BB01E2DC(uint64_t result)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v3;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    for (i = swift_bridgeObjectRetain() + 40; ; i += 48)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB86F1D8();
      sub_1BB86F19C();
      if (v3)
        break;
      v3 = 0;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (!--v1)
        return swift_bridgeObjectRelease();
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedDatabase.hotSwap(group:context:state:)(unint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  void *v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v4 = (uint64_t)v3;
  v6 = *v3;
  v42 = (uint64_t)a3;
  v7 = *a3;
  v40 = a2;
  v41 = v7;
  v8 = *(_QWORD *)(v6 + 104);
  v9 = *(_QWORD *)(v6 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v44 = (char *)&v38 - v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  v43 = a1;
  v46 = v15(AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v16)
  {
    v17 = v16;
    v39 = v11;
    v18 = v3[2];
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v19 + 32) = v46;
    *(_QWORD *)(v19 + 40) = v17;
    swift_bridgeObjectRetain();
    v20 = sub_1BB87330C();
    sub_1BB86EF44("Feed database attempting to hot-swap group, id=%{public}@", 57, 2, &dword_1BA493000, v18, v20, v19);
    swift_bridgeObjectRelease();
    v21 = v45;
    v22 = sub_1BA6B2CB8();
    if (v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      MEMORY[0x1E0C80A78](v22);
      v45 = 0;
      v25 = v40;
      *(&v38 - 4) = v4;
      *(&v38 - 3) = v25;
      *(&v38 - 2) = v42;
      *(&v38 - 1) = v26;
      v27 = *(_QWORD *)(v41 + 80);
      v28 = *(_QWORD *)(v41 + 88);
      v41 = v26;
      type metadata accessor for FeedCursor(0, v27, v28, v29);
      v42 = sub_1BB86EC14();
      v30 = v39;
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v44, v43, AssociatedTypeWitness);
      v31 = (*(unsigned __int8 *)(v30 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      v43 = (v12 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
      v40 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(v6 + 80);
      *(_QWORD *)(v32 + 24) = v9;
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v6 + 96);
      *(_QWORD *)(v32 + 40) = v8;
      *(_QWORD *)(v32 + 48) = *(_QWORD *)(v6 + 112);
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(v6 + 120);
      v33 = v46;
      *(_QWORD *)(v32 + 72) = *(_QWORD *)(v6 + 136);
      *(_QWORD *)(v32 + 80) = v33;
      *(_QWORD *)(v32 + 88) = v17;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v32 + v31, v44, AssociatedTypeWitness);
      *(_QWORD *)(v32 + v43) = v41;
      *(_QWORD *)(v32 + v40) = v4;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v34 = (void *)sub_1BB86E854();
      sub_1BB86E974();
      swift_release();
      swift_release();

      v35 = (_QWORD *)swift_allocObject();
      v35[2] = v4;
      v35[3] = v33;
      v35[4] = v17;
      swift_retain();
      v36 = (void *)sub_1BB86E854();
      v4 = sub_1BB86E9A4();
      swift_release();
      swift_release();
      swift_release();

    }
  }
  else
  {
    v4 = v3[2];
    v23 = sub_1BB8732F4();
    sub_1BB86EF44("Feed database could not hot-swap group without a kind-identifier", 64, 2, &dword_1BA493000, v4, v23, MEMORY[0x1E0DEE9D8]);
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v24 = xmmword_1BB8D2DD0;
    *(_BYTE *)(v24 + 16) = 7;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1BB01E844(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = *a3;
  result = sub_1BB01B70C(a2, (uint64_t)a3, a4, 1);
  if (!v4)
  {
    v8 = FeedCursorContainer.cursor()(result, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), v7);
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1BB01E8A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v28;
  _OWORD v29[7];
  uint64_t v30;

  v11 = *a5;
  v12 = *a6;
  v30 = *(_QWORD *)(*a1 + qword_1ED4768A0);
  v13 = *(_QWORD *)(v12 + 128);
  v14 = *(char **)(v12 + 136);
  type metadata accessor for FeedDatabaseGroup(255, *(_QWORD *)(v11 + 80), *(_QWORD *)(v11 + 88), a4);
  v15 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v15);
  sub_1BB872C28();
  swift_bridgeObjectRelease();
  if (v28)
  {
    v16 = v28[4];
    v29[2] = v28[3];
    v29[3] = v16;
    v17 = v28[6];
    v29[4] = v28[5];
    v29[5] = v17;
    v18 = v28[2];
    v29[0] = v28[1];
    v29[1] = v18;
    sub_1BA4C9ACC((uint64_t)v29);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1BAA09158(a4, AssociatedTypeWitness, AssociatedConformanceWitness, v13, v14);
    if (v7)
    {
      sub_1BA5D1B6C((uint64_t)v29);
      return swift_release();
    }
    else
    {
      sub_1BB86F1D8();
      sub_1BB86F19C();
      swift_release();
      v23 = a6[2];
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v24 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v24 + 32) = a2;
      *(_QWORD *)(v24 + 40) = a3;
      swift_bridgeObjectRetain();
      v25 = sub_1BB87330C();
      sub_1BB86EF44("Feed database successfully hot-swapped group, id=%{public}@", 59, 2, &dword_1BA493000, v23, v25, v24);
      sub_1BA5D1B6C((uint64_t)v29);
      swift_bridgeObjectRelease();
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a7, a4, AssociatedTypeWitness);
    }
  }
  else
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_QWORD *)v22 = a2;
    *(_QWORD *)(v22 + 8) = a3;
    *(_BYTE *)(v22 + 16) = 6;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
}

uint64_t sub_1BB01EBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v7;
  uint64_t v8;

  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  if (!v8)
  {
    sub_1BA6E3730(v7, 0);
    goto LABEL_7;
  }
  if (v8 == 1)
  {
LABEL_7:
    v5 = 0;
    return v5 & 1;
  }
  if (v7 == a2 && v8 == a3)
  {
    sub_1BA6E3730(a2, v8);
    v5 = 1;
  }
  else
  {
    v5 = sub_1BB874398();
    sub_1BA6E3730(v7, v8);
  }
  return v5 & 1;
}

uint64_t sub_1BB01ECBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  swift_bridgeObjectRetain();
  sub_1BB873E34();
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 80) = 0xE000000000000000;
  sub_1BB86EF44("Feed database failed to hot-swap group, id=%{public}@, error=%{public}@", 71, 2, &dword_1BA493000, v6, v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t FeedDatabase.save(cacheKey:feedGroupLayout:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13[3];

  v5 = *v2;
  v6 = type metadata accessor for FeedLayoutCacheKey();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1BA6B2CB8();
  sub_1BB025EF4(a1, (uint64_t)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C010C(a2, (uint64_t)v13);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v5 + 88);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v5 + 96);
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v5 + 112);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(v5 + 120);
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(v5 + 136);
  *(_QWORD *)(v11 + 80) = v9;
  sub_1BB026018((uint64_t)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_1BA4CECCC(v13, v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_retain();
  sub_1BA6B2D10((uint64_t)sub_1BB02605C, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_1BB01EF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _OWORD v9[4];
  _OWORD v10[4];

  v5 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB86F1D8();
  sub_1BB025EF4(a2, (uint64_t)v7);
  sub_1BA4C010C(a3, (uint64_t)v9);
  sub_1BB4161DC(v7, v9, (uint64_t *)v10);
  v9[0] = v10[0];
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  sub_1BB86F19C();
  sub_1BB026428((uint64_t)v10);
  return swift_release();
}

void sub_1BB01F034(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  double v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char **__ptr32 *v40;
  void *v41;
  uint64_t v42;
  double v43;
  int64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  void *v69;
  uint64_t v70;
  id v71;
  CFTimeInterval v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  void *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  CFTimeInterval v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  double v90[2];
  void *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  char *v94;
  __int128 v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v105 = a4;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v90 - v8;
  v10 = sub_1BB86F04C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v96 = (char *)v90 - v15;
  MEMORY[0x1E0C80A78](v16);
  v97 = (char *)v90 - v17;
  MEMORY[0x1E0C80A78](v18);
  v98 = (char *)v90 - v19;
  MEMORY[0x1E0C80A78](v20);
  v99 = (char *)v90 - v21;
  MEMORY[0x1E0C80A78](v22);
  v100 = (char *)v90 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v90 - v25;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v28 = Strong;
    v94 = v13;
    v104 = v10;
    v29 = CACurrentMediaTime();
    v102 = v28;
    v30 = *(void **)(v28 + 16);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v103 = v31;
    v32 = swift_allocObject();
    v95 = xmmword_1BB87CE70;
    *(_OWORD *)(v32 + 16) = xmmword_1BB87CE70;
    v33 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
    v101 = sub_1BA6A2D8C();
    *(_QWORD *)(v32 + 64) = v101;
    *(_QWORD *)(v32 + 32) = a2;
    *(_QWORD *)(v32 + 40) = a3;
    v34 = v30;
    swift_bridgeObjectRetain();
    v35 = sub_1BB87330C();
    sub_1BB86EF44("Feed database starting cleanup against root cursor %{public}@", 61, 2, &dword_1BA493000, v34, v35, v32);

    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(v105 + 16);
    sub_1BB86F1E4();
    v120 = v33;
    v121 = MEMORY[0x1E0DB2EC8];
    v118 = a2;
    v119 = a3;
    swift_bridgeObjectRetain();
    sub_1BB86F178();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
    v37 = sub_1BB86F274();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v9, 1, 1, v37);
    v38 = sub_1BB86F1C0();
    v39 = v4;
    v40 = &off_1BB87A000;
    if (v4)
    {
      swift_release();
      sub_1BA5C699C((uint64_t)v9, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v104);
      v41 = v4;
      v42 = v102;
LABEL_18:
      v78 = *(void **)(v42 + 16);
      v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = *((_OWORD *)v40 + 57);
      v118 = 0;
      v119 = 0xE000000000000000;
      v117 = (uint64_t)v41;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      v80 = v78;
      sub_1BB873E34();
      v81 = v118;
      v82 = v119;
      v83 = v101;
      *(_QWORD *)(v79 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v79 + 64) = v83;
      *(_QWORD *)(v79 + 32) = v81;
      *(_QWORD *)(v79 + 40) = v82;
      v84 = CACurrentMediaTime();
      v85 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v79 + 96) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v79 + 104) = v85;
      *(CFTimeInterval *)(v79 + 72) = (v84 - v29) * 1000.0;
      v86 = sub_1BB87330C();
      sub_1BB86EF44("Feed database failed to run cleanup task, error=%{public}@, time=%fms", 69, 2, &dword_1BA493000, v80, v86, v79);
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
    v43 = *(double *)&v38;
    v93 = v36;
    swift_release();
    sub_1BA5C699C((uint64_t)v9, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    v92 = *(void (**)(char *, uint64_t))(v11 + 8);
    v92(v26, v104);
    v44 = *(_QWORD *)(*(_QWORD *)&v43 + 16);
    if (!v44)
    {
      swift_bridgeObjectRelease();
      v45 = MEMORY[0x1E0DEE9D8];
      v42 = v102;
LABEL_12:
      v60 = *(void **)(v42 + 16);
      v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = *((_OWORD *)v40 + 57);
      v62 = *(_QWORD *)(v45 + 16);
      v63 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v61 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v61 + 64) = v63;
      *(_QWORD *)(v61 + 32) = v62;
      v64 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      *(_QWORD *)(v61 + 96) = v65;
      *(_QWORD *)(v61 + 104) = sub_1BA5C69E0((unint64_t *)&qword_1ED3A2FA8, (unint64_t *)&qword_1ED3B95C0, v64, MEMORY[0x1E0CB1B18]);
      *(_QWORD *)(v61 + 72) = v45;
      v66 = v60;
      swift_bridgeObjectRetain();
      v67 = sub_1BB87330C();
      sub_1BB86EF44("Feed database will cleanup %ld cursors: %{public}@", 50, 2, &dword_1BA493000, v66, v67, v61);

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v45 + 16))
      {
        sub_1BB86F1FC();
        sub_1BA81C284(v45);
        v68 = v100;
        sub_1BB86F16C();
        swift_bridgeObjectRelease();
        sub_1BB86F268();
        v41 = v39;
        if (v39)
        {
          v92(v68, v104);
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_18;
        }
        v74 = v92;
        v92(v68, v104);
        swift_release();
        sub_1BB86F1FC();
        v116 = v45;
        sub_1BA81C284(v45);
        v75 = v99;
        sub_1BB86F16C();
        swift_bridgeObjectRelease();
        sub_1BB86F268();
        v74(v75, v104);
        swift_release();
        sub_1BB86F1FC();
        sub_1BA81C284(v116);
        v76 = v74;
        v77 = v98;
        sub_1BB86F16C();
        swift_bridgeObjectRelease();
        sub_1BB86F268();
        v76(v77, v104);
        swift_release();
        sub_1BB86F1FC();
        sub_1BA81C284(v116);
        v87 = v97;
        sub_1BB86F16C();
        swift_bridgeObjectRelease();
        sub_1BB86F268();
        v76(v87, v104);
        swift_release();
        sub_1BB86F1FC();
        sub_1BA81C284(v116);
        v88 = v96;
        sub_1BB86F16C();
        swift_bridgeObjectRelease();
        sub_1BB86F268();
        v76(v88, v104);
        swift_release();
        sub_1BB86F1FC();
        sub_1BA81C284(v116);
        swift_bridgeObjectRelease();
        v89 = v94;
        sub_1BB86F16C();
        swift_bridgeObjectRelease();
        sub_1BB86F268();
        v76(v89, v104);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v69 = *(void **)(v42 + 16);
      v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = v95;
      v71 = v69;
      v72 = CACurrentMediaTime();
      v73 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v70 + 64) = v73;
      *(CFTimeInterval *)(v70 + 32) = (v72 - v29) * 1000.0;
      sub_1BB87330C();
      sub_1BB86EF44("Feed database did run cleanup task, time=%fms", v90[0]);
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
    v91 = 0;
    v117 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v44, 0);
    v45 = v117;
    v90[1] = v43;
    v46 = (uint64_t *)(*(_QWORD *)&v43 + 64);
    while (1)
    {
      v116 = v45;
      v47 = *(v46 - 4);
      v48 = *(v46 - 3);
      v49 = *(v46 - 2);
      v50 = *(v46 - 1);
      v52 = *v46;
      v51 = v46[1];
      v112 = v44;
      v113 = v51;
      v53 = v46[2];
      v54 = v46[5];
      v114 = v46[3];
      v115 = v54;
      swift_retain();
      v111 = v48;
      swift_retain();
      v110 = v49;
      swift_retain();
      v109 = v50;
      swift_retain();
      v108 = v52;
      swift_retain();
      swift_retain();
      v107 = v53;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v106 = v47;
      sub_1BB86F064();
      sub_1BB86F22C();
      swift_release();
      v55 = v119;
      if (!v119)
        break;
      v56 = v118;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v45 = v116;
      v117 = v116;
      v58 = *(_QWORD *)(v116 + 16);
      v57 = *(_QWORD *)(v116 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_1BA7447E8(v57 > 1, v58 + 1, 1);
        v45 = v117;
      }
      *(_QWORD *)(v45 + 16) = v58 + 1;
      v59 = v45 + 16 * v58;
      *(_QWORD *)(v59 + 32) = v56;
      *(_QWORD *)(v59 + 40) = v55;
      v46 += 12;
      v44 = v112 - 1;
      if (v112 == 1)
      {
        swift_bridgeObjectRelease();
        v42 = v102;
        v39 = v91;
        v40 = &off_1BB87A000;
        goto LABEL_12;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1BB01FC50()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorGroup(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  v3 = FeedCursorGroup.identifier.getter();
  v5 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if (v3 == sub_1BB86DEE8() && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB01FDAC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[5];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v24 = a4;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)&v22 - v10;
  v27 = sub_1BB86F04C();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v40 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x1E0DEE9E8];
  v25 = v4;
  v12 = *(_QWORD *)(v4 + 16);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v38 = v13;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  v37 = sub_1BA6A2D8C();
  *(_QWORD *)(v14 + 64) = v37;
  v15 = a1;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain_n();
  v16 = sub_1BB87330C();
  v39 = v12;
  sub_1BB86EF44("Feed database reading cursor %{public}@", 39, 2, &dword_1BA493000, v12, v16, v14);
  swift_bridgeObjectRelease();
  v23 = a3;
  v28 = a3[2];
  v36 = xmmword_1BB87A390;
  v17 = sub_1BB86F1E4();
  v42[3] = MEMORY[0x1E0DEA968];
  v42[4] = MEMORY[0x1E0DB2EC8];
  v42[0] = a1;
  v42[1] = a2;
  swift_bridgeObjectRetain();
  sub_1BB86F160();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  v18 = sub_1BB86F274();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v41, 1, 1, v18);
  sub_1BB86F1B4();
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA5C699C(v41, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v40, v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    sub_1BA5C699C(v41, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v40, v27);
    v19 = v43;
    if ((_QWORD)v43)
    {
      v54 = v43;
      v33 = *((_QWORD *)&v43 + 1);
      v34 = v44;
      v55 = v44;
      v56 = v45;
      v57 = v46;
      v58 = v47;
      v35 = v47;
      v59 = v48;
      v60 = v49;
      v32 = v50;
      v61 = v50;
      v62 = v51;
      v31 = v51;
      v30 = v52;
      v63 = v52;
      v64 = v53;
      v29 = v53;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC((uint64_t *)&v43, v15, a2);
      swift_bridgeObjectRelease();
      v17 = sub_1BB0206CC(v23, &v54, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4C47AC(v19);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB025BE8();
      swift_allocError();
      *(_QWORD *)v20 = 0;
      *(_QWORD *)(v20 + 8) = 0;
      *(_BYTE *)(v20 + 16) = 7;
      swift_willThrow();
    }
  }
  return v17;
}

uint64_t sub_1BB0206CC(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  CFTimeInterval v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v24 = *a1;
  v27 = *(_QWORD *)(v3 + 16);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87FC80;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  if (!v32)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = v31;
  *(_QWORD *)(v5 + 40) = v32;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  if (!v30)
  {
LABEL_9:
    __break(1u);
    __break(1u);
    __break(1u);
    JUMPOUT(0x1BB020A48);
  }
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 72) = v29;
  *(_QWORD *)(v5 + 80) = v30;
  v8 = sub_1BA4E0C98();
  *(_QWORD *)(v5 + 136) = v6;
  *(_QWORD *)(v5 + 144) = v7;
  *(_QWORD *)(v5 + 112) = v8;
  *(_QWORD *)(v5 + 120) = v9;
  v10 = sub_1BB87330C();
  sub_1BB86EF44("Feed database rebuilding %{public}@ cursor %{public}@ with context=%{public}@", 77, 2, &dword_1BA493000, v27, v10, v5);
  swift_bridgeObjectRelease();
  v11 = CACurrentMediaTime();
  sub_1BA4DABF8(a1, (uint64_t)a2, a3);
  if (!v25)
  {
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87FC80;
    sub_1BB86F064();
    sub_1BB86F22C();
    swift_release();
    *(_QWORD *)(v12 + 56) = v6;
    *(_QWORD *)(v12 + 64) = v7;
    *(_QWORD *)(v12 + 32) = v31;
    *(_QWORD *)(v12 + 40) = v32;
    sub_1BB86F064();
    sub_1BB86F22C();
    swift_release();
    *(_QWORD *)(v12 + 96) = v6;
    *(_QWORD *)(v12 + 104) = v7;
    *(_QWORD *)(v12 + 72) = v29;
    *(_QWORD *)(v12 + 80) = v30;
    v13 = CACurrentMediaTime();
    v14 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v12 + 136) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v12 + 144) = v14;
    *(CFTimeInterval *)(v12 + 112) = (v13 - v11) * 1000.0;
    v15 = sub_1BB87330C();
    sub_1BB86EF44("Feed database finished decoding %{public}@ cursor %{public}@, time=%fms", 71, 2, &dword_1BA493000, v27, v15, v12);
    swift_bridgeObjectRelease();
    CACurrentMediaTime();
    MEMORY[0x1E0C80A78](v16);
    type metadata accessor for FeedCursor(0, *(_QWORD *)(v24 + 80), *(_QWORD *)(v24 + 88), v17);
    sub_1BB86EC14();
    v18 = swift_allocObject();
    v19 = a2[3];
    *(_OWORD *)(v18 + 48) = a2[2];
    *(_OWORD *)(v18 + 64) = v19;
    v20 = a2[5];
    *(_OWORD *)(v18 + 80) = a2[4];
    *(_OWORD *)(v18 + 96) = v20;
    v21 = a2[1];
    *(_OWORD *)(v18 + 16) = *a2;
    *(_OWORD *)(v18 + 32) = v21;
    *(double *)(v18 + 112) = v11;
    sub_1BA4C9ACC((uint64_t)a2);
    v22 = (void *)sub_1BB86E854();
    v3 = sub_1BB86E9F8();
    swift_release();
    swift_release();
    swift_release();

  }
  return v3;
}

uint64_t sub_1BB020A68(double a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_1BB020B74(a3, a4, a5);
  if (!v6)
  {
    v10 = swift_allocObject();
    v11 = a6[3];
    *(_OWORD *)(v10 + 48) = a6[2];
    *(_OWORD *)(v10 + 64) = v11;
    v12 = a6[5];
    *(_OWORD *)(v10 + 80) = a6[4];
    *(_OWORD *)(v10 + 96) = v12;
    v13 = a6[1];
    *(_OWORD *)(v10 + 16) = *a6;
    *(_OWORD *)(v10 + 32) = v13;
    *(double *)(v10 + 112) = a1;
    sub_1BA4C9ACC((uint64_t)a6);
    sub_1BB86E854();
    type metadata accessor for FeedDatabase();
  }
  return v7;
}

uint64_t sub_1BB020B74(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String rawValue;
  uint64_t v29;

  v5 = v3;
  v23 = v5;
  v24 = a1;
  v25 = a2;
  v7 = sub_1BA4E5BFC(a2, (uint64_t (*)(uint64_t))sub_1BB026784, (uint64_t)v22);
  if (!v4)
  {
    v29 = v7;
    v21 = *(_QWORD *)(v5 + 16);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87FC80;
    sub_1BB86F064();
    sub_1BB86F22C();
    swift_release();
    object = rawValue._object;
    if (rawValue._object)
    {
      countAndFlagsBits = rawValue._countAndFlagsBits;
      v11 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
      v12 = sub_1BA6A2D8C();
      *(_QWORD *)(v8 + 64) = v12;
      *(_QWORD *)(v8 + 32) = countAndFlagsBits;
      *(_QWORD *)(v8 + 40) = object;
      sub_1BB86F064();
      sub_1BB86F22C();
      swift_release();
      v13 = v27;
      if (v27)
      {
        v14 = v26;
        *(_QWORD *)(v8 + 96) = v11;
        *(_QWORD *)(v8 + 104) = v12;
        *(_QWORD *)(v8 + 72) = v14;
        *(_QWORD *)(v8 + 80) = v13;
        v15 = sub_1BA4E0C98();
        *(_QWORD *)(v8 + 136) = v11;
        *(_QWORD *)(v8 + 144) = v12;
        *(_QWORD *)(v8 + 112) = v15;
        *(_QWORD *)(v8 + 120) = v16;
        v17 = sub_1BB87330C();
        sub_1BB86EF44("Feed database creating %{public}@ cursor %{public}@ with new context=%{public}@", 79, 2, &dword_1BA493000, v21, v17, v8);
        swift_bridgeObjectRelease();
        sub_1BB86F064();
        sub_1BB86F22C();
        swift_release();
        v18 = rawValue._object;
        if (rawValue._object)
        {
          v19 = rawValue._countAndFlagsBits;
          FeedCursorKind.init(rawValue:)(*(Swift::String *)(&v18 - 1));
          __asm { BR              X10 }
        }
LABEL_9:
        __break(1u);
        JUMPOUT(0x1BB020EC4);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return a3;
}

uint64_t sub_1BB020EE8(uint64_t a1, double a2, uint64_t a3, const char *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  CFTimeInterval v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = *(_QWORD *)(a1 + 16);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87FC80;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v19)
  {
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1BA6A2D8C();
    *(_QWORD *)(v9 + 64) = v12;
    *(_QWORD *)(v9 + 32) = v18;
    *(_QWORD *)(v9 + 40) = v19;
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    if (v17)
    {
      *(_QWORD *)(v9 + 96) = v11;
      *(_QWORD *)(v9 + 104) = v12;
      *(_QWORD *)(v9 + 72) = v16;
      *(_QWORD *)(v9 + 80) = v17;
      v13 = CACurrentMediaTime();
      v14 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v9 + 136) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v9 + 144) = v14;
      *(CFTimeInterval *)(v9 + 112) = (v13 - a2) * 1000.0;
      v15 = sub_1BB87330C();
      sub_1BB86EF44(a4, a5, 2, &dword_1BA493000, v8, v15, v9);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB021064(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  __int16 v79;
  __int128 v80;
  uint64_t v81;
  _OWORD v82[5];
  unsigned __int8 v83;
  _OWORD v84[2];
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t Cursor;

  v4 = v3;
  Cursor = a3;
  v77 = (_QWORD *)*v3;
  v68 = a1;
  v6 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v59 - v10;
  v11 = *(_QWORD *)(v6 + 80);
  v71 = sub_1BB873A2C();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v59 - v12;
  v67 = sub_1BB86C8E0();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v65 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v3[2];
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
  v64 = *(_QWORD *)(a2 + 104);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v17 = *((_QWORD *)&v82[0] + 1);
  if (*((_QWORD *)&v82[0] + 1))
  {
    v18 = *(_QWORD *)&v82[0];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 32) = v18;
    *(_QWORD *)(v15 + 40) = v17;
    v19 = *(_QWORD *)(a2 + 112);
    v20 = *(_QWORD *)(v6 + 88);
    v22 = type metadata accessor for FeedDatabaseGroup(0, v11, v20, v21);
    v23 = MEMORY[0x1BCCE37B4](v19, v22);
    v24 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v15 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v15 + 104) = v24;
    *(_QWORD *)(v15 + 72) = v23;
    v25 = sub_1BB87330C();
    sub_1BB86EF44("Feed database creating %{public}@ cursor with %ld groups", 56, 2, &dword_1BA493000, v14, v25, v15);
    swift_bridgeObjectRelease();
    v74 = v11;
    v27 = type metadata accessor for FeedCursor(0, v11, v20, v26);
    LOBYTE(v82[0]) = 4;
    v75 = v4;
    v28 = v4[3];
    v29 = v77[16];
    v30 = v77[17];
    swift_retain();
    v31 = a2;
    v32 = (_QWORD *)Cursor;
    swift_retain();
    swift_unknownObjectRetain();
    v33 = v76;
    v34 = sub_1BB86A404((unsigned __int8 *)v82, v31, v32, v28, v29, v30);
    v35 = v33;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    if (v33)
      return v35;
    v36 = v30;
    v62 = v27;
    v63 = v34;
    v76 = 0;
    v37 = v74;
    v38 = Cursor;
    v60 = *(_QWORD *)(v31 + 96);
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    if (v80 != 2)
    {
      v61 = v36;
      if ((v80 & 1) != 0
        && (v59 = *(_QWORD *)(v31 + 48),
            sub_1BB86F064(),
            sub_1BB86F22C(),
            swift_release(),
            v40 = *((_QWORD *)&v82[0] + 1),
            sub_1BA6E3730(*(uint64_t *)&v82[0], *((uint64_t *)&v82[0] + 1)),
            v40 != 1))
      {
        v57 = *(_QWORD *)(v31 + 88);
        v58 = *(_OWORD *)(v31 + 32);
        v84[0] = *(_OWORD *)(v31 + 16);
        v84[1] = v58;
        v86 = *(_OWORD *)(v31 + 56);
        v87 = *(_OWORD *)(v31 + 72);
        v85 = v59;
        v88 = v57;
        v89 = v60;
        v90 = v64;
        v35 = sub_1BB0226E8(v63, v84, v38);
      }
      else
      {
        Cursor = type metadata accessor for FeedNextCursor(0, v37, v20, v39);
        v41 = v65;
        sub_1BB86C8D4();
        v74 = sub_1BB86C8C8();
        v64 = v42;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v67);
        LOBYTE(v82[0]) = 5;
        v43 = *(_QWORD *)(v38 + 32);
        v44 = swift_allocObject();
        swift_weakInit();
        v45 = (_QWORD *)swift_allocObject();
        v46 = v77;
        v45[2] = v77[14];
        v45[3] = v46[15];
        v45[4] = v29;
        v45[5] = v61;
        v45[6] = v44;
        v47 = v68;
        v45[7] = v38;
        v45[8] = v47;
        v48 = v63;
        v45[9] = v31;
        v45[10] = v48;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v49 = sub_1BB63C45C(v74, v64, (char *)v82, v43, (uint64_t)sub_1BB026AC8, (uint64_t)v45);
        swift_release();
        swift_release();
        Cursor = sub_1BB86EAAC();
        v50 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v69, 1, 1, v37);
        v83 = 7;
        v51 = sub_1BB86C8B0();
        v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
        v53 = (uint64_t)v72;
        v52(v72, 1, 1, v51);
        v54 = (uint64_t)v73;
        v52(v73, 1, 1, v51);
        memset(v82, 0, sizeof(v82));
        v81 = 0;
        v80 = 0u;
        v78 = 0;
        v79 = 256;
        v55 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v50, 0, &v83, v53, v54, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                0,
                0,
                (uint64_t)v82,
                (uint64_t *)&v80,
                (uint64_t)&v78,
                0,
                0,
                (uint64_t)v49);
        v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
        sub_1BA5C699C(v54, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        sub_1BA5C699C(v53, (unint64_t *)&qword_1ED3B0540, v56);
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v50, v71);
        *(_QWORD *)&v82[0] = v55;
        v35 = sub_1BB86E9D4();
        swift_release();
      }
      swift_release();
      return v35;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB0217CC(unint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t AssociatedTypeWitness;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[5];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v64 = (_QWORD *)*v2;
  v65 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v59 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v60 = (uint64_t)&v57 - v10;
  v61 = *(_QWORD *)(v4 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v63 = (char *)&v57 - v13;
  v66 = v2;
  v14 = v2[2];
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
  v16 = *(_QWORD *)(a1 + 104);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v18 = v68;
  if (v68)
  {
    v19 = v67;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 32) = v19;
    *(_QWORD *)(v15 + 40) = v18;
    v20 = *(_QWORD *)(a1 + 112);
    v22 = type metadata accessor for FeedDatabaseGroup(0, v4, v5, v21);
    v23 = MEMORY[0x1BCCE37B4](v20, v22);
    v24 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v15 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v15 + 104) = v24;
    *(_QWORD *)(v15 + 72) = v23;
    v25 = sub_1BB87330C();
    sub_1BB86EF44("Feed database creating %{public}@ cursor with %ld groups", 56, 2, &dword_1BA493000, v14, v25, v15);
    swift_bridgeObjectRelease();
    v67 = v20;
    v26 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v26);
    if ((sub_1BB873168() & 1) != 0)
    {
      v16 = (uint64_t)v63;
      v28 = v72;
      sub_1BA4EE55C((uint64_t)v63);
      if (!v28)
      {
        v57 = v5;
        (*(void (**)(uint64_t, uint64_t))(v5 + 64))(v4, v5);
        v72 = v64[12];
        v29 = AssociatedTypeWitness;
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v31 = v60;
        FeedContentConfigType.seenContentMarker()(v29, AssociatedConformanceWitness, v60);
        v32 = *(void (**)(char *, uint64_t))(v59 + 8);
        v32(v8, v29);
        (*(void (**)(uint64_t, uint64_t))(v57 + 160))(v31, v4);
        v32((char *)v31, v29);
        v33 = v66;
        v60 = v66[3];
        v34 = swift_allocBox();
        (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v35, v62, v4);
        v67 = v34 | 0x1000000000000000;
        v36 = v65;
        v37 = v65[3];
        v38 = swift_allocObject();
        v39 = v64;
        *(_QWORD *)(v38 + 16) = v64[14];
        *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 15);
        *(_QWORD *)(v38 + 40) = v39[17];
        *(_QWORD *)(v38 + 48) = a1;
        *(_QWORD *)(v38 + 56) = v36;
        v40 = v72;
        v41 = *(void (**)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v72 + 40);
        v42 = v39[10];
        swift_retain();
        swift_retain();
        v41(&v67, v37, sub_1BB026BD4, v38, v42, v40);
        swift_release();
        swift_release();
        v43 = (_QWORD *)swift_allocObject();
        v43[2] = v33;
        v43[3] = a1;
        v43[4] = v36;
        swift_retain();
        swift_retain();
        swift_retain();
        v44 = (void *)sub_1BB86E854();
        type metadata accessor for FeedCursor(0, v4, v57, v45);
        v16 = sub_1BB86E968();
        swift_release();
        swift_release();

        v46 = *(void (**)(char *, uint64_t))(v61 + 8);
        v46(v62, v4);
        v46(v63, v4);
      }
    }
    else
    {
      type metadata accessor for FeedCursor(0, v4, v5, v27);
      LOBYTE(v67) = 1;
      v47 = v66[3];
      v48 = v64[16];
      v49 = v64[17];
      swift_retain();
      v50 = v65;
      swift_retain();
      swift_unknownObjectRetain();
      v51 = v48;
      v52 = v72;
      v53 = sub_1BB86A404((unsigned __int8 *)&v67, a1, v50, v47, v51, v49);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      if (!v52)
      {
        v54 = *(_QWORD *)(a1 + 96);
        v55 = *(_OWORD *)(a1 + 32);
        v69[0] = *(_OWORD *)(a1 + 16);
        v69[1] = v55;
        v56 = *(_OWORD *)(a1 + 64);
        v69[2] = *(_OWORD *)(a1 + 48);
        v69[3] = v56;
        v69[4] = *(_OWORD *)(a1 + 80);
        v70 = v54;
        v71 = v16;
        v16 = sub_1BB0226E8(v53, v69, v65);
        swift_release();
      }
    }
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB021D5C(unsigned __int8 *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t Cursor;
  uint64_t v100;
  uint64_t v101;
  __int16 v102;
  __int128 v103;
  uint64_t v104;
  _OWORD v105[5];
  unsigned __int8 v106;
  _OWORD v107[2];
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v5 = v4;
  v114 = *v4;
  v90 = a2;
  v9 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v94 = (char *)&v76 - v13;
  v14 = *(_QWORD *)(v9 + 80);
  v93 = sub_1BB873A2C();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)&v76 - v15;
  v88 = sub_1BB86C8E0();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v86 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = *a1;
  v17 = v4[2];
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v84 = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87A390;
  v85 = a3[13];
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v21 = *((_QWORD *)&v105[0] + 1);
  if (!*((_QWORD *)&v105[0] + 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = *(_QWORD *)&v105[0];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  v98 = sub_1BA6A2D8C();
  *(_QWORD *)(v19 + 64) = v98;
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v21;
  v23 = a3[14];
  v24 = *(_QWORD *)(v9 + 88);
  v26 = type metadata accessor for FeedDatabaseGroup(0, v14, v24, v25);
  v27 = MEMORY[0x1BCCE37B4](v23, v26);
  v28 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v19 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v19 + 104) = v28;
  *(_QWORD *)(v19 + 72) = v27;
  v29 = sub_1BB87330C();
  Cursor = v17;
  sub_1BB86EF44("Feed database creating %{public}@ cursor with %ld groups", 56, 2, &dword_1BA493000, v17, v29, v19);
  swift_bridgeObjectRelease();
  v96 = v24;
  v31 = type metadata accessor for FeedCursor(0, v14, v24, v30);
  LOBYTE(v105[0]) = 4;
  v97 = v14;
  v32 = v5;
  v33 = v5[3];
  v35 = *(_QWORD *)(v114 + 128);
  v34 = *(_QWORD *)(v114 + 136);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v36 = v100;
  v37 = sub_1BB86A404((unsigned __int8 *)v105, (unint64_t)a3, a4, v33, v35, v34);
  v38 = v36;
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  v100 = v36;
  if (v36)
    return v38;
  v77 = v34;
  v78 = v35;
  v39 = v98;
  v79 = v31;
  v40 = Cursor;
  v41 = v97;
  v42 = v114;
  v81 = a4;
  v80 = v37;
  v82 = v32;
  v83 = a3;
  v43 = a3[12];
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v103 == 2)
    goto LABEL_13;
  v45 = v42;
  v46 = v41;
  v47 = v40;
  v48 = MEMORY[0x1E0DEA968];
  if ((v103 & 1) == 0)
  {
    v49 = v96;
LABEL_7:
    Cursor = type metadata accessor for FeedNextCursor(0, v46, v49, v44);
    v52 = v86;
    sub_1BB86C8D4();
    v98 = sub_1BB86C8C8();
    v54 = v53;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v52, v88);
    LOBYTE(v52) = v89;
    LOBYTE(v105[0]) = v89;
    v55 = v81;
    v56 = v81[4];
    v57 = swift_allocObject();
    swift_weakInit();
    v58 = swift_allocObject();
    *(_QWORD *)(v58 + 16) = *(_QWORD *)(v45 + 112);
    v59 = v78;
    *(_QWORD *)(v58 + 24) = *(_QWORD *)(v45 + 120);
    *(_QWORD *)(v58 + 32) = v59;
    *(_QWORD *)(v58 + 40) = v77;
    *(_QWORD *)(v58 + 48) = v57;
    v60 = v90;
    *(_QWORD *)(v58 + 56) = v83;
    *(_QWORD *)(v58 + 64) = v60;
    *(_QWORD *)(v58 + 72) = v80;
    *(_QWORD *)(v58 + 80) = v55;
    *(_BYTE *)(v58 + 88) = (_BYTE)v52;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v61 = sub_1BB63C45C(v98, v54, (char *)v105, v56, (uint64_t)sub_1BB026C8C, v58);
    swift_release();
    swift_release();
    v114 = sub_1BB86EAAC();
    v62 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v91, 1, 1, v46);
    v106 = 7;
    v63 = sub_1BB86C8B0();
    v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
    v66 = (uint64_t)v94;
    v65(v94, 1, 1, v63);
    v67 = (uint64_t)v95;
    v65(v95, 1, 1, v63);
    memset(v105, 0, sizeof(v105));
    v104 = 0;
    v103 = 0u;
    v101 = 0;
    v102 = 256;
    v68 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v62, 0, &v106, v66, v67, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v105,
            (uint64_t *)&v103,
            (uint64_t)&v101,
            0,
            0,
            (uint64_t)v61);
    sub_1BA5C699C(v67, (unint64_t *)&qword_1ED3B0540, v64);
    sub_1BA5C699C(v66, (unint64_t *)&qword_1ED3B0540, v64);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v62, v93);
    *(_QWORD *)&v105[0] = v68;
    v38 = sub_1BB86E9D4();
    swift_release();
LABEL_10:
    swift_release();
    return v38;
  }
  v50 = v83[6];
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v51 = *((_QWORD *)&v105[0] + 1);
  sub_1BA6E3730(*(uint64_t *)&v105[0], *((uint64_t *)&v105[0] + 1));
  v49 = v96;
  if (v51 == 1)
    goto LABEL_7;
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_1BB87CE70;
  v70 = v85;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v71 = *((_QWORD *)&v105[0] + 1);
  if (*((_QWORD *)&v105[0] + 1))
  {
    v72 = *(_QWORD *)&v105[0];
    *(_QWORD *)(v69 + 56) = v48;
    *(_QWORD *)(v69 + 64) = v39;
    *(_QWORD *)(v69 + 32) = v72;
    *(_QWORD *)(v69 + 40) = v71;
    v73 = sub_1BB87330C();
    sub_1BB86EF44("Feed database creating %{public}@ cursor that has reached the end, chain next", 77, 2, &dword_1BA493000, v47, v73, v69);
    swift_bridgeObjectRelease();
    v74 = v83[11];
    v75 = *((_OWORD *)v83 + 2);
    v107[0] = *((_OWORD *)v83 + 1);
    v107[1] = v75;
    v109 = *(_OWORD *)(v83 + 7);
    v110 = *(_OWORD *)(v83 + 9);
    v108 = v50;
    v111 = v74;
    v112 = v43;
    v113 = v70;
    v38 = sub_1BB0226E8(v80, v107, v81);
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1BB0225D8(_OWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[6];
  unsigned __int8 v20;

  v6 = v5;
  v7 = (uint64_t)v4;
  v10 = *v4;
  type metadata accessor for FeedCursor(0, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), a4);
  v20 = 4;
  v11 = v4[3];
  v12 = *(_QWORD *)(v10 + 128);
  v13 = *(_QWORD *)(v10 + 136);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v14 = sub_1BB86A404(&v20, (unint64_t)a1, a2, v11, v12, v13);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  if (!v6)
  {
    v15 = a1[4];
    v19[2] = a1[3];
    v19[3] = v15;
    v16 = a1[6];
    v19[4] = a1[5];
    v19[5] = v16;
    v17 = a1[2];
    v19[0] = a1[1];
    v19[1] = v17;
    v7 = sub_1BB0226E8(v14, v19, a2);
    swift_release();
  }
  return v7;
}

uint64_t sub_1BB0226E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  __int128 v62;
  uint64_t v63;
  _OWORD v64[5];
  unsigned __int8 v65[9];

  v4 = v3;
  v58 = *v3;
  v59 = a3;
  v6 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - v11;
  v13 = *(_QWORD *)(v6 + 80);
  v14 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v51 - v16;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v18 = *((_QWORD *)&v64[0] + 1);
  if (*((_QWORD *)&v64[0] + 1) >= 2uLL)
  {
    v55 = v17;
    v26 = *(_QWORD *)&v64[0];
    v52 = v4[2];
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v27 = swift_allocObject();
    v54 = v9;
    v28 = (_QWORD *)v27;
    *(_OWORD *)(v27 + 16) = xmmword_1BB87A390;
    v53 = v12;
    v56 = v15;
    v57 = v14;
    v29 = a1[2];
    v30 = a1[3];
    v31 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    v32 = sub_1BA6A2D8C();
    v28[4] = v29;
    v28[5] = v30;
    v28[12] = v31;
    v28[13] = v32;
    v28[8] = v32;
    v28[9] = v26;
    v28[10] = v18;
    swift_bridgeObjectRetain();
    sub_1BA6EA1F0(v26, v18);
    v33 = sub_1BB87330C();
    sub_1BB86EF44("Feed database async chaining %{public}@ cursor to next cursor %{public}@", 72, 2, &dword_1BA493000, v52, v33, v28);
    swift_bridgeObjectRelease();
    v34 = *(_QWORD *)(v6 + 88);
    type metadata accessor for FeedNextCursor(0, v13, v34, v35);
    LOBYTE(v64[0]) = 7;
    v36 = v59;
    v37 = *(_QWORD *)(v59 + 32);
    v38 = swift_allocObject();
    swift_weakInit();
    v39 = swift_allocObject();
    v40 = v58;
    *(_QWORD *)(v39 + 16) = *(_QWORD *)(v58 + 112);
    *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 120);
    *(_QWORD *)(v39 + 40) = *(_QWORD *)(v40 + 136);
    *(_QWORD *)(v39 + 48) = v38;
    *(_QWORD *)(v39 + 56) = v26;
    *(_QWORD *)(v39 + 64) = v18;
    *(_QWORD *)(v39 + 72) = v36;
    sub_1BA6EA1F0(v26, v18);
    swift_retain();
    swift_retain();
    v41 = sub_1BB63C45C(v26, v18, (char *)v64, v37, (uint64_t)sub_1BB02694C, v39);
    swift_release();
    swift_release();
    type metadata accessor for FeedCursor(255, v13, v34, v42);
    sub_1BB86EAAC();
    v43 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v55, 1, 1, v13);
    v65[0] = 7;
    v44 = sub_1BB86C8B0();
    v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
    v47 = (uint64_t)v53;
    v46(v53, 1, 1, v44);
    v48 = (uint64_t)v54;
    v46(v54, 1, 1, v44);
    memset(v64, 0, sizeof(v64));
    v63 = 0;
    v62 = 0u;
    v60 = 0;
    v61 = 256;
    v49 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v43, 0, v65, v47, v48, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v64,
            (uint64_t *)&v62,
            (uint64_t)&v60,
            0,
            0,
            (uint64_t)v41);
    sub_1BA5C699C(v48, (unint64_t *)&qword_1ED3B0540, v45);
    sub_1BA5C699C(v47, (unint64_t *)&qword_1ED3B0540, v45);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v43, v57);
    *(_QWORD *)&v64[0] = v49;
    v25 = sub_1BB86E9D4();
    swift_release();
  }
  else
  {
    v19 = v4[2];
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    v22 = a1[2];
    v21 = a1[3];
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v21;
    swift_bridgeObjectRetain();
    v23 = sub_1BB87330C();
    sub_1BB86EF44("Feed database chaining %{public}@ cursor to next cursor empty", 61, 2, &dword_1BA493000, v19, v23, v20);
    swift_bridgeObjectRelease();
    type metadata accessor for FeedCursor(255, v13, *(_QWORD *)(v6 + 88), v24);
    sub_1BB86EAAC();
    *(_QWORD *)&v64[0] = a1;
    swift_retain();
    return sub_1BB86E9D4();
  }
  return v25;
}

uint64_t sub_1BB022C30(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), _QWORD *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v91 = a8;
  v16 = *a7;
  v84 = *a4;
  v85 = v16;
  v86 = *a5;
  v87 = a6;
  v88 = *(_QWORD *)(v86 + 80);
  v17 = *(_QWORD *)(v88 - 8);
  v18 = MEMORY[0x1E0C80A78](a1);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v74 - v21;
  v24 = v23 + 16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v28 = xmmword_1BB8D2D90;
    *(_BYTE *)(v28 + 16) = 7;
    swift_willThrow();
    return v24;
  }
  v81 = a7;
  v82 = a1;
  v83 = a2;
  v89 = Strong;
  v26 = v90;
  v27 = sub_1BB0248EC((uint64_t)a4, a5);
  if (v26)
  {
    swift_release();
    return v24;
  }
  v75 = a9;
  v76 = a10;
  v77 = a11;
  v74 = a4;
  v80 = v22;
  v78 = v20;
  v79 = v17;
  v29 = MEMORY[0x1E0DEE9D8];
  v92 = MEMORY[0x1E0DEE9D8];
  v30 = *(_QWORD *)(v27 + 16);
  if (v30)
  {
    swift_bridgeObjectRetain();
    v31 = 0;
    v32 = v87;
    while (1)
    {
      swift_retain();
      sub_1BB86F064();
      sub_1BB86F22C();
      result = swift_release();
      if (!v101)
        break;
      ++v31;
      sub_1BB86F328();
      swift_release();
      v34 = v100;
      swift_release();
      if (v34)
        v35 = v34;
      else
        v35 = v29;
      sub_1BA6E9BD8(v35);
      if (v30 == v31)
      {
        swift_bridgeObjectRelease_n();
        v36 = v92;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
    v32 = v87;
LABEL_14:
    v37 = v88;
    v90 = sub_1BA6E43EC(v36);
    swift_bridgeObjectRelease();
    v38 = *(void **)(v89 + 16);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1BB87FC80;
    v40 = v38;
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    v41 = v93;
    v42 = (uint64_t)v80;
    if (v93)
    {
      v43 = v92;
      *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v39 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v39 + 32) = v43;
      *(_QWORD *)(v39 + 40) = v41;
      v44 = *(_QWORD *)(v32 + 112);
      v45 = *(_QWORD *)(v86 + 88);
      v47 = type metadata accessor for FeedDatabaseGroup(0, v37, v45, v46);
      v48 = MEMORY[0x1BCCE37B4](v44, v47);
      v49 = MEMORY[0x1E0DEB418];
      v50 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v39 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v39 + 104) = v50;
      *(_QWORD *)(v39 + 72) = v48;
      v51 = v90;
      v52 = *(_QWORD *)(v90 + 16);
      *(_QWORD *)(v39 + 136) = v49;
      *(_QWORD *)(v39 + 144) = v50;
      *(_QWORD *)(v39 + 112) = v52;
      v53 = sub_1BB87330C();
      sub_1BB86EF44("Feed database creating %{public}@ cursor with %ld groups; found %ld seen items to ignore in repooled pool",
        105,
        2,
        &dword_1BA493000,
        v40,
        v53,
        v39);

      swift_bridgeObjectRelease();
      sub_1BA4EE55C(v42);
      v54 = *(_QWORD *)((char *)v81 + qword_1ED4767D0);
      v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 112))(v37, v45);
      v56 = static FeedCursorGroup.tags(from:excluding:)(v54, v55, v37, v45);
      swift_bridgeObjectRelease();
      v57 = sub_1BB01AC38(v56);
      swift_bridgeObjectRelease();
      v58 = sub_1BA6E43EC(v57);
      swift_bridgeObjectRelease();
      v59 = v78;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 152))(1, v51, v58, v37, v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v60 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v61, v59, v37);
      v92 = v60 | 0x1000000000000000;
      v62 = v74;
      v63 = v74[3];
      v64 = (_QWORD *)swift_allocObject();
      v65 = v75;
      v64[2] = v91;
      v64[3] = v65;
      v66 = v77;
      v64[4] = v76;
      v64[5] = v66;
      v64[6] = v82;
      v64[7] = v83;
      v64[8] = v32;
      v64[9] = v62;
      v67 = v84;
      v68 = *(_QWORD *)(v84 + 96);
      v69 = *(void (**)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), _QWORD *, uint64_t, uint64_t))(v68 + 40);
      v70 = *(_QWORD *)(v84 + 80);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v69(&v92, v63, sub_1BB026B34, v64, v70, v68);
      swift_release();
      swift_release();
      v71 = swift_allocObject();
      *(_QWORD *)(v71 + 16) = v32;
      *(_QWORD *)(v71 + 24) = v62;
      swift_retain();
      swift_retain();
      sub_1BB86E854();
      v72 = *(_QWORD *)(v67 + 88);
      v73 = *(_QWORD *)(v67 + 104);
      v92 = v70;
      v93 = v72;
      v94 = v68;
      v95 = v73;
      v96 = v91;
      v97 = v75;
      v98 = v76;
      v99 = v77;
      type metadata accessor for FeedDatabase();
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1BB0232B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[5];
  unsigned __int8 v31[9];

  v24 = a2;
  v25 = a3;
  v6 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  v13 = *(_QWORD *)(v6 + 80);
  v14 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v23 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))((char *)&v23 - v16, 1, 1, v13);
  v31[0] = 5;
  v18 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v19 = *(_QWORD *)(a5 + 40);
  memset(v30, 0, sizeof(v30));
  v29 = 0;
  v28 = 0u;
  v26 = 0;
  v27 = 256;
  v20 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(v24, v25, (uint64_t)v17, 0, v31, (uint64_t)v12, (uint64_t)v10, 0, 0, 0, 0, 0, 0, 0, 1, v19, 0, 0, 1,
          0,
          0,
          (uint64_t)v30,
          (uint64_t *)&v28,
          (uint64_t)&v26,
          *(_QWORD *)(a5 + 16),
          0,
          0);
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3B0540, v21);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v20;
}

uint64_t *sub_1BB0234F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[5];
  unsigned __int8 v26;

  v4 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(v4 + 80);
  v12 = sub_1BB873A2C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))((char *)&v20 - v14, 1, 1, v11);
  v26 = 1;
  v16 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  memset(v25, 0, sizeof(v25));
  v24 = 0;
  v23 = 0u;
  v21 = 0;
  v22 = 256;
  v17 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v15, 0, &v26, (uint64_t)v10, (uint64_t)v8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v25,
          (uint64_t *)&v23,
          (uint64_t)&v21,
          *(_QWORD *)(a3 + 16),
          0,
          0);
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, v18);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

uint64_t sub_1BB023720(uint64_t *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v12[6];

  sub_1BA83B518(*a1);
  if (!v4)
  {
    v7 = a3[4];
    v12[2] = a3[3];
    v12[3] = v7;
    v8 = a3[6];
    v12[4] = a3[5];
    v12[5] = v8;
    v9 = a3[2];
    v12[0] = a3[1];
    v12[1] = v9;
    v10 = swift_retain();
    a4 = sub_1BB0226E8(v10, v12, a4);
    swift_release();
  }
  return a4;
}

uint64_t sub_1BB0237BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, _QWORD *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v80 = a8;
  v82 = a7;
  v83 = a6;
  v81 = a2;
  v79 = a1;
  v14 = *a4;
  v84 = (_QWORD *)*a7;
  v15 = *(_QWORD *)(v14 + 80);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v68 - v20;
  v23 = v22 + 16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v25 = xmmword_1BB8D2D90;
    *(_BYTE *)(v25 + 16) = 7;
    swift_willThrow();
    return v23;
  }
  v85 = Strong;
  v23 = (uint64_t)a4;
  sub_1BA4EE55C((uint64_t)v21);
  if (v12)
  {
    swift_release();
    return v23;
  }
  sub_1BA83DD30();
  sub_1BB86F208();
  v27 = sub_1BB86F358();
  v77 = v19;
  v78 = v21;
  v76 = v16;
  swift_release();
  v28 = MEMORY[0x1E0DEE9D8];
  v86 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(v27 + 16);
  if (v29)
  {
    v75 = v15;
    swift_bridgeObjectRetain();
    v30 = 0;
    while (1)
    {
      swift_retain();
      sub_1BB86F064();
      sub_1BB86F22C();
      result = swift_release();
      if (!v89)
        break;
      ++v30;
      sub_1BB86F328();
      swift_release();
      v31 = v88;
      swift_release();
      if (v31)
        v32 = v31;
      else
        v32 = v28;
      sub_1BA6E9BD8(v32);
      if (v29 == v30)
      {
        swift_bridgeObjectRelease_n();
        v33 = v86;
        v15 = v75;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    v75 = sub_1BA6E43EC(v33);
    swift_bridgeObjectRelease();
    v83 = *(_QWORD *)(v83 + qword_1ED4767D0);
    v34 = v84[13];
    v35 = v84[11];
    swift_getAssociatedTypeWitness();
    v72 = v34;
    v71 = v35;
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v36 = sub_1BB872754();
    v37 = *(_QWORD *)(v14 + 88);
    v38 = static FeedCursorGroup.tags(from:excluding:)(v83, v36, v15, v37);
    swift_bridgeObjectRelease();
    v39 = sub_1BB01AC38(v38);
    swift_bridgeObjectRelease();
    v40 = sub_1BA6E43EC(v39);
    swift_bridgeObjectRelease();
    v41 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 152);
    v42 = v77;
    v70 = v37;
    v41(0, v75, v40, v15, v37);
    swift_bridgeObjectRelease();
    v43 = *(void **)(v85 + 16);
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1BB87A390;
    v45 = v43;
    sub_1BB86F064();
    sub_1BB86F22C();
    result = swift_release();
    v46 = v87;
    if (v87)
    {
      v69 = a12;
      v83 = a11;
      v73 = a9;
      v74 = a10;
      v47 = v86;
      *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v44 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v44 + 32) = v47;
      *(_QWORD *)(v44 + 40) = v46;
      v48 = *(_QWORD *)(v75 + 16);
      swift_bridgeObjectRelease();
      v49 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v44 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v44 + 104) = v49;
      *(_QWORD *)(v44 + 72) = v48;
      v50 = sub_1BB87330C();
      sub_1BB86EF44("Feed database creating %{public}@ cursor found %ld items to ignore in next pool", 79, 2, &dword_1BA493000, v45, v50, v44);

      swift_bridgeObjectRelease();
      v75 = *(_QWORD *)(v85 + 24);
      v51 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v52, v42, v15);
      v86 = v51 | 0x1000000000000000;
      v53 = v82;
      v54 = v82[3];
      v55 = swift_allocObject();
      v56 = v74;
      *(_QWORD *)(v55 + 16) = v73;
      *(_QWORD *)(v55 + 24) = v56;
      v57 = v69;
      *(_QWORD *)(v55 + 32) = v83;
      *(_QWORD *)(v55 + 40) = v57;
      *(_QWORD *)(v55 + 48) = v79;
      *(_QWORD *)(v55 + 56) = v81;
      *(_BYTE *)(v55 + 64) = v80;
      *(_QWORD *)(v55 + 72) = a4;
      *(_QWORD *)(v55 + 80) = v53;
      v58 = v84[12];
      v59 = *(void (**)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v58 + 40);
      v60 = v84[10];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v59(&v86, v54, sub_1BB026CFC, v55, v60, v58);
      swift_release();
      swift_release();
      v61 = (_QWORD *)swift_allocObject();
      v62 = v71;
      v61[2] = v60;
      v61[3] = v62;
      v63 = v72;
      v61[4] = v58;
      v61[5] = v63;
      v64 = v74;
      v61[6] = v73;
      v61[7] = v64;
      v61[8] = v83;
      v61[9] = v57;
      v65 = (void *)sub_1BB86E854();
      type metadata accessor for FeedCursor(0, v15, v70, v66);
      v23 = sub_1BB86E974();
      swift_release();
      swift_release();
      swift_release();

      v67 = *(void (**)(char *, uint64_t))(v76 + 8);
      v67(v77, v15);
      v67(v78, v15);
      return v23;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1BB023E48(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[5];
  unsigned __int8 v33[9];

  v26 = a2;
  v27 = a3;
  v8 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - v13;
  v15 = *(_QWORD *)(v8 + 80);
  v16 = sub_1BB873A2C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))((char *)&v25 - v18, 1, 1, v15);
  v33[0] = a4;
  v20 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v21 = *(_QWORD *)(a6 + 40);
  memset(v32, 0, sizeof(v32));
  v31 = 0;
  v30 = 0u;
  v28 = 0;
  v29 = 256;
  v22 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(v26, v27, (uint64_t)v19, 0, v33, (uint64_t)v14, (uint64_t)v12, 0, 0, 0, 0, 0, 0, 0, 1, v21, 0, 0, 1,
          0,
          0,
          (uint64_t)v32,
          (uint64_t *)&v30,
          (uint64_t)&v28,
          *(_QWORD *)(a6 + 16),
          0,
          0);
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3B0540, v23);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v22;
}

uint64_t sub_1BB024080@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1BA83B518(v4);
  if (!v2)
  {
    *a2 = result;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BB024128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t *v10;
  uint64_t v11;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = (uint64_t *)sub_1BA6B2CB8();
    if (!v6)
    {
      a6 = sub_1BB01FDAC(a4, a5, v10, a6);
      swift_release();
    }
    swift_release();
  }
  else
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v11 = xmmword_1BB8D2D90;
    *(_BYTE *)(v11 + 16) = 7;
    swift_willThrow();
  }
  return a6;
}

uint64_t sub_1BB024264(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _QWORD *v58;
  uint64_t v59;
  void (*v60)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v88 = a4;
  v8 = (_QWORD *)*v4;
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v94 == 2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((v94 & 1) != 0)
  {
    sub_1BB86F064();
    sub_1BB86F22C();
    swift_release();
    v15 = v92;
    sub_1BA6E3730(v91, v92);
    if (v15 != 1)
      return sub_1BB0226E8(a1, a3, v88);
  }
  v86 = (_OWORD *)a3;
  v87 = a1;
  v85 = v9;
  v28 = v8[14];
  v16 = v8[15];
  v18 = v8[16];
  v17 = v8[17];
  v19 = v90;
  v20 = sub_1BB0248EC(v88, a2);
  if (v19)
    return v28;
  v78 = v17;
  v79 = v18;
  v80 = v16;
  v81 = v28;
  v90 = 0;
  v82 = v13;
  v83 = v11;
  v84 = v10;
  v21 = MEMORY[0x1E0DEE9D8];
  v91 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v20 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    v23 = 0;
    v24 = v86;
    while (1)
    {
      swift_retain();
      sub_1BB86F064();
      sub_1BB86F22C();
      result = swift_release();
      if (!v94)
        break;
      ++v23;
      sub_1BB86F328();
      swift_release();
      v25 = v93;
      swift_release();
      if (v25)
        v26 = v25;
      else
        v26 = v21;
      sub_1BA6E9BD8(v26);
      if (v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        v27 = v91;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  v27 = MEMORY[0x1E0DEE9D8];
  v24 = v86;
LABEL_15:
  v29 = v87;
  v30 = sub_1BA6E43EC(v27);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v89 + 16);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BB87A390;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v33 = v92;
  if (v92)
  {
    v34 = v91;
    *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v32 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v32 + 32) = v34;
    *(_QWORD *)(v32 + 40) = v33;
    v35 = *(_QWORD *)(v30 + 16);
    v36 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v32 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v32 + 104) = v36;
    *(_QWORD *)(v32 + 72) = v35;
    v37 = sub_1BB87330C();
    sub_1BB86EF44("Feed database convert creating %{public}@ cursor; found %ld seen items to ignore in repooled pool",
      97,
      2,
      &dword_1BA493000,
      v31,
      v37,
      v32);
    swift_bridgeObjectRelease();
    v38 = *(uint64_t *)((char *)v29 + qword_1ED4767D0);
    v86 = (_OWORD *)v8[13];
    v39 = v8[11];
    v76 = v8;
    v77 = v39;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v40 = sub_1BB872754();
    v41 = *(_QWORD *)(v85 + 88);
    v42 = v84;
    v43 = static FeedCursorGroup.tags(from:excluding:)(v38, v40, v84, v41);
    swift_bridgeObjectRelease();
    v44 = v90;
    v45 = sub_1BB01AC38(v43);
    v90 = v44;
    swift_bridgeObjectRelease();
    v46 = sub_1BA6E43EC(v45);
    swift_bridgeObjectRelease();
    v47 = v82;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 152))(1, v30, v46, v42, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = swift_allocBox();
    (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v49, v47, v42);
    v91 = v48 | 0x1000000000000000;
    v50 = v88;
    v51 = *(_QWORD *)(v88 + 24);
    v52 = swift_allocObject();
    v53 = v80;
    *(_QWORD *)(v52 + 16) = v81;
    *(_QWORD *)(v52 + 24) = v53;
    v54 = v78;
    *(_QWORD *)(v52 + 32) = v79;
    *(_QWORD *)(v52 + 40) = v54;
    v55 = v24[3];
    *(_OWORD *)(v52 + 80) = v24[2];
    *(_OWORD *)(v52 + 96) = v55;
    v56 = v24[5];
    *(_OWORD *)(v52 + 112) = v24[4];
    *(_OWORD *)(v52 + 128) = v56;
    v57 = v24[1];
    *(_OWORD *)(v52 + 48) = *v24;
    *(_OWORD *)(v52 + 64) = v57;
    *(_QWORD *)(v52 + 144) = v50;
    v58 = v76;
    v59 = v76[12];
    v60 = *(void (**)(uint64_t *, uint64_t, uint64_t *(*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v59 + 40);
    sub_1BA4C9ACC((uint64_t)v24);
    v85 = v58[10];
    v61 = v85;
    swift_retain();
    v60(&v91, v51, sub_1BB02683C, v52, v61, v59);
    swift_release();
    swift_release();
    v62 = swift_allocObject();
    v63 = v24[3];
    *(_OWORD *)(v62 + 48) = v24[2];
    *(_OWORD *)(v62 + 64) = v63;
    v64 = v24[5];
    *(_OWORD *)(v62 + 80) = v24[4];
    *(_OWORD *)(v62 + 96) = v64;
    v65 = v24[1];
    *(_OWORD *)(v62 + 16) = *v24;
    *(_OWORD *)(v62 + 32) = v65;
    *(_QWORD *)(v62 + 112) = v50;
    sub_1BA4C9ACC((uint64_t)v24);
    swift_retain();
    v66 = (void *)sub_1BB86E854();
    v67 = v84;
    type metadata accessor for FeedCursor(0, v84, v41, v68);
    sub_1BB86E980();
    swift_release();
    swift_release();

    v69 = (_QWORD *)swift_allocObject();
    v70 = v77;
    v69[2] = v85;
    v69[3] = v70;
    v71 = v86;
    v69[4] = v59;
    v69[5] = v71;
    v72 = v80;
    v69[6] = v81;
    v69[7] = v72;
    v73 = v78;
    v69[8] = v79;
    v69[9] = v73;
    v69[10] = v87;
    swift_retain();
    v74 = (void *)sub_1BB86E854();
    v28 = sub_1BB86E968();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v67);
    return v28;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1BB0248EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v4 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  v24 = sub_1BB86F04C();
  v8 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeedCursorTrackerSnapshot(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - v14;
  FeedCursorTracker.snapshot()((uint64_t)&v23 - v14);
  v16 = *(_QWORD *)&v15[*(int *)(v12 + 36)];
  v17 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  v17(v15, v12);
  v18 = sub_1BA67F4CC(v16);
  swift_bridgeObjectRelease();
  if (v18[2])
  {
    sub_1BA83DD30();
    sub_1BB86F208();
    v19 = sub_1BA81C284((uint64_t)v18);
    swift_release();
    sub_1BB86F16C();
    swift_bridgeObjectRelease();
    v20 = sub_1BB86F274();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    v21 = sub_1BB86F370();
    if (!v3)
      v19 = v21;
    swift_release();
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&unk_1ED39A728, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2D28]);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v19;
}

uint64_t sub_1BB024B50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;

  v7 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1BA83B518(v7);
  if (!v4)
  {
    v9 = (uint64_t *)swift_retain();
    v10 = sub_1BB0226E8(v9, a3, a4);
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_1BB024C30(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t (*v19)(uint64_t);
  _QWORD v21[2];
  uint64_t v22;
  __int16 v23;
  __int128 v24;
  uint64_t v25;
  _OWORD v26[5];
  unsigned __int8 v27;

  v21[1] = a2;
  v3 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - v8;
  v10 = *(_QWORD *)(v3 + 80);
  v11 = sub_1BB873A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - v13;
  v15 = *a1;
  v21[0] = sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v14, 1, 1, v10);
  v27 = 7;
  v16 = sub_1BB86C8B0();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v9, 1, 1, v16);
  v17(v6, 1, 1, v16);
  memset(v26, 0, sizeof(v26));
  v25 = 0;
  v24 = 0u;
  v22 = 0;
  v23 = 256;
  v18 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v14, 0, &v27, (uint64_t)v9, (uint64_t)v6, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v26,
          (uint64_t *)&v24,
          (uint64_t)&v22,
          0,
          0,
          v15);
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA5C699C((uint64_t)v6, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA5C699C((uint64_t)v9, (unint64_t *)&qword_1ED3B0540, v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(_QWORD *)&v26[0] = v18;
  return sub_1BB86E9D4();
}

uint64_t sub_1BB024E80(uint64_t a1, uint64_t a2)
{
  return FeedDatabase.readRootCursor(context:state:)(a1, a2);
}

uint64_t sub_1BB024EA0(uint64_t a1, char a2)
{
  return FeedDatabase.dropAndSave(result:flush:)(a1, a2);
}

uint64_t sub_1BB024EC0(unint64_t a1, unint64_t a2, uint64_t *a3)
{
  return FeedDatabase.hotSwap(group:context:state:)(a1, a2, a3);
}

uint64_t sub_1BB024EE0(uint64_t a1, uint64_t a2)
{
  return FeedDatabase.save(cacheKey:feedGroupLayout:)(a1, a2);
}

uint64_t sub_1BB024F00(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BAC75A98(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BB025094(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_1BAC75C24(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BB0251F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v32[2];
  _QWORD v33[6];

  v2 = a2;
  v33[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v32[0] = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10)
            goto LABEL_33;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_33;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_33;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_33;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain();
                    sub_1BA6EBD18();
                    return v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_33;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_36:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
        v19 = sub_1BB8745C0();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_QWORD *)(v22 + 8 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_QWORD *)(v22 + 8 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32[0];
    v33[3] = v4;
    v33[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v27 = (char *)v32 - v26;
      memcpy((char *)v32 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_1BB025590((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1BA6EBD18();
      return v28;
    }
    else
    {
      v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      v30 = sub_1BB025590((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1BA6EBD18();
      MEMORY[0x1BCCE5C38](v29, -1, -1);
      return v30;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1BB025590(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;
  int64_t v32;

  v8 = (unint64_t *)result;
  v9 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v10 = v9 - 1;
  v11 = a3 + 56;
  while (1)
  {
    v16 = a5[3];
    v17 = a5[4];
    if (!v17)
      break;
    v18 = (v17 - 1) & v17;
    v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_16:
    v26 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    result = sub_1BB8745C0();
    v27 = -1 << *(_BYTE *)(a3 + 32);
    v28 = result & ~v27;
    v12 = v28 >> 6;
    v13 = 1 << v28;
    if (((1 << v28) & *(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v29 = *(_QWORD *)(a3 + 48);
      if (*(_QWORD *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        v14 = v12;
        v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1))
            goto LABEL_35;
          if (!v10)
            return MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        for (i = v28 + 1; ; i = v31 + 1)
        {
          v31 = i & ~v27;
          if (((*(_QWORD *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
            break;
          if (*(_QWORD *)(v29 + 8 * v31) == v26)
          {
            v12 = v31 >> 6;
            v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    v21 = (unint64_t)(a5[2] + 64) >> 6;
    v22 = a5[3];
    if (v20 >= v21)
      goto LABEL_33;
    v23 = a5[1];
    v24 = *(_QWORD *)(v23 + 8 * v20);
    if (v24)
      goto LABEL_15;
    v25 = v16 + 2;
    v22 = v16 + 1;
    if (v16 + 2 >= v21)
      goto LABEL_33;
    v24 = *(_QWORD *)(v23 + 8 * v25);
    if (!v24)
    {
      v22 = v16 + 2;
      if (v16 + 3 >= v21)
        goto LABEL_33;
      v24 = *(_QWORD *)(v23 + 8 * (v16 + 3));
      if (v24)
      {
        v20 = v16 + 3;
        goto LABEL_15;
      }
      v25 = v16 + 4;
      v22 = v16 + 3;
      if (v16 + 4 >= v21)
        goto LABEL_33;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (!v24)
      {
        v20 = v16 + 5;
        v22 = v16 + 4;
        if (v16 + 5 >= v21)
          goto LABEL_33;
        v24 = *(_QWORD *)(v23 + 8 * v20);
        if (!v24)
        {
          v22 = v21 - 1;
          v32 = v16 + 6;
          while (v21 != v32)
          {
            v24 = *(_QWORD *)(v23 + 8 * v32++);
            if (v24)
            {
              v20 = v32 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v22;
          a5[4] = 0;
          swift_retain();
          return sub_1BB73E30C(v8, a2, v10, a3);
        }
        goto LABEL_15;
      }
    }
    v20 = v25;
LABEL_15:
    v18 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    v16 = v20;
    goto LABEL_16;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

_QWORD *sub_1BB0257E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t AssociatedConformanceWitness;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v7 = v6;
  v47 = a6;
  v45 = a3;
  v46 = a5;
  v57 = a4;
  v43 = a1;
  v44 = a2;
  v8 = (_QWORD *)*v6;
  v56 = sub_1BB86DE7C();
  v48 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&AssociatedConformanceWitness - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v8[12];
  v10 = v8[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for FeedCursorTrackerSnapshot(255, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v14 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&AssociatedConformanceWitness - v17;
  v19 = v8[24];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v13 - 8) + 56))((char *)&AssociatedConformanceWitness - v17, 1, 1, v13, v16);
  v20 = v8[11];
  v21 = v8[13];
  v51 = v8[14];
  v52 = v21;
  v22 = v8[15];
  v49 = v8[16];
  v50 = v22;
  v54 = v8[17];
  v23 = sub_1BA5C6B84((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  *(_QWORD *)((char *)v7 + v19) = v23;
  v24 = *(_QWORD *)(*v7 + 200);
  sub_1BA5C6AC4();
  v25 = swift_allocObject();
  *(_QWORD *)((char *)v7 + v24) = v25;
  *(_DWORD *)(v25 + 16) = 0;
  *((_BYTE *)v7 + *(_QWORD *)(*v7 + 208)) = 1;
  v27 = v43;
  v26 = v44;
  v7[2] = v43;
  v7[3] = v26;
  v28 = (char *)v7 + *(_QWORD *)(*v7 + 160);
  v42 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v28, v45, v20);
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 176)) = v46;
  *((_BYTE *)v7 + *(_QWORD *)(*v7 + 184)) = v47;
  type metadata accessor for FeedDatabaseStore(255, AssociatedTypeWitness, AssociatedConformanceWitness, v29);
  sub_1BB86E8F0();
  sub_1BB86E74C();
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1BA4B07F0(0, &qword_1ED3C1DE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
  v32 = v27;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB86DE70();
  v59 = v31;
  sub_1BA4A2870(&qword_1ED3B07A0, v30, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  sub_1BB873BC4();
  v33 = (_QWORD *)swift_allocObject();
  v34 = v42;
  v33[2] = v53;
  v33[3] = v34;
  v35 = v57;
  v36 = v52;
  v33[4] = v58;
  v33[5] = v36;
  v37 = v50;
  v33[6] = v51;
  v33[7] = v37;
  v38 = v54;
  v33[8] = v49;
  v33[9] = v38;
  v33[10] = v32;
  v33[11] = v35;
  v39 = v32;
  swift_retain();
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 168)) = sub_1BB86E734();
  return v7;
}

uint64_t sub_1BB025B9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB025BC0()
{
  return sub_1BA5333AC();
}

unint64_t sub_1BB025BE8()
{
  unint64_t result;

  result = qword_1ED39AAB0[0];
  if (!qword_1ED39AAB0[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDatabaseError, &type metadata for FeedDatabaseError);
    atomic_store(result, qword_1ED39AAB0);
  }
  return result;
}

uint64_t sub_1BB025C2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB025C50()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB025C90()
{
  return sub_1BB026744((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB01C750);
}

uint64_t sub_1BB025CAC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id *sub_1BB025CE4()
{
  uint64_t v0;

  return sub_1BB01D800(*(_QWORD *)(v0 + 80), *(_QWORD **)(v0 + 88), *(void **)(v0 + 96), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1BB025D20()
{
  return objectdestroy_12Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BB025D2C()
{
  return sub_1BA533274((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB01E2DC);
}

uint64_t sub_1BB025D48()
{
  uint64_t v0;

  return sub_1BB01E844(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32), *(_QWORD **)(v0 + 40));
}

uint64_t sub_1BB025D64()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB025E1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BB01E8A8(a1, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v2 + v6, *(uint64_t **)(v2 + v7), *(uint64_t **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1BB025EB0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB025EDC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB01ECBC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BB025EE8()
{
  return objectdestroy_12Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB025EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedLayoutCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB025F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for FeedLayoutCacheKey();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v6 = v5 + *(int *)(v1 + 76);
  v7 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_1BB026018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedLayoutCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB02605C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for FeedLayoutCacheKey() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BB01EF58(*(_QWORD *)(v0 + 80), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1BB02610C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 112);
}

uint64_t sub_1BB026114(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

uint64_t sub_1BB02611C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 128);
}

uint64_t sub_1BB026124(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 136);
}

uint64_t dispatch thunk of FeedDatabaseType.readRootCursor(context:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FeedDatabaseType.save(snapshot:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FeedDatabaseType.save(result:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FeedDatabaseType.dropAndSave(result:flush:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of FeedDatabaseType.hotSwap(group:context:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of FeedDatabaseType.erase()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t method lookup function for FeedDatabase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedDatabase.__allocating_init(log:feedCursorFactory:feedGroupProcessor:lazyDatabase:referenceService:saveJournalEntries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

void sub_1BB0261B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = (_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 264));
  swift_retain();
  swift_beginAccess();
  if (*v3 && (v4 = FeedNextCursor.syncCursor.getter()) != 0)
  {
    do
    {
      v5 = v4;
      swift_release();
      v6 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 264));
      swift_beginAccess();
      if (!*v6)
        break;
      v4 = FeedNextCursor.syncCursor.getter();
    }
    while (v4);
  }
  else
  {
    v5 = a2;
  }
  swift_retain();
  __asm { BR              X9 }
}

uint64_t sub_1BB026298()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[24];

  v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
    swift_release();
    return swift_release();
  }
  v3 = (char *)swift_retain();
  sub_1BB174C58(v3, v1, v6);
  if (v0)
  {
    swift_release();
    return swift_release();
  }
  sub_1BB86F1D8();
  sub_1BB86F19C();
  swift_release();
  v4 = sub_1BB6386BC();
  sub_1BA5D1B6C((uint64_t)v6);
  swift_release();
  result = swift_release();
  if (v4)
    JUMPOUT(0x1BB02626CLL);
  return result;
}

void sub_1BB026410()
{
  swift_release();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BB0263E4);
}

uint64_t sub_1BB026428(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1BB0264AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB01EBE8(a1, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88)) & 1;
}

void sub_1BB0264EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3928)
  {
    sub_1BA4AD288(255, &qword_1ED3AADE0, (uint64_t)&type metadata for FeedJournalEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0(&qword_1ED3AADE8, &qword_1ED3AADE0, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E0DEAF50]);
    v0 = sub_1BB86E128();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3928);
  }
}

uint64_t sub_1BB02658C()
{
  return sub_1BB01FC50() & 1;
}

uint64_t sub_1BB0265C4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1BB026698(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1ED3A52A0, (unint64_t *)&qword_1ED3C63C0, (uint64_t)&protocol descriptor for FeedGroupType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB0266F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026728()
{
  return sub_1BB026744((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB01F034);
}

uint64_t sub_1BB026744(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[10], v1[11], v1[12], v1[13], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BB026784()
{
  return sub_1BB026A74();
}

uint64_t sub_1BB026798()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BB02683C(uint64_t *a1)
{
  return sub_1BA83827C(a1, 5u);
}

uint64_t sub_1BB026844()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0268C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB024B50(a1, a2, v2 + 16, *(_QWORD *)(v2 + 112));
}

uint64_t sub_1BB0268E4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB024C30(a1, *(uint64_t **)(v1 + 80));
}

uint64_t sub_1BB026918()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB02694C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BB024128(a1, a2, v2[6], v2[7], v2[8], v2[9]);
}

uint64_t sub_1BB02697C()
{
  uint64_t v0;

  return sub_1BB020A68(*(double *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_OWORD **)(v0 + 48));
}

uint64_t sub_1BB0269A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB020EE8(a1, *(double *)(v1 + 112), v1 + 16, "Feed database rebuilt %{public}@ cursor %{public}@, total time=%fms", 67);
}

uint64_t objectdestroy_55Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026A4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB020EE8(a1, *(double *)(v1 + 112), v1 + 16, "Feed database finished creating %{public}@ cursor %{public}@, time=%fms", 71);
}

uint64_t sub_1BB026A74()
{
  uint64_t v0;
  _QWORD *v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[6];

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_OWORD **)(v0 + 32);
  v3 = v2[4];
  v7[2] = v2[3];
  v7[3] = v3;
  v4 = v2[6];
  v7[4] = v2[5];
  v7[5] = v4;
  v5 = v2[2];
  v7[0] = v2[1];
  v7[1] = v5;
  return sub_1BA4D3E3C(v1, (uint64_t)v7);
}

uint64_t sub_1BB026AC0()
{
  return objectdestroy_62Tm();
}

uint64_t sub_1BB026AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB022C30(a1, a2, *(_QWORD *)(v2 + 48), *(_QWORD **)(v2 + 56), *(uint64_t **)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD **)(v2 + 80), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BB026B00()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BB026B34(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1BB0232B8(a1, v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BB026B64()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026B90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB023720(a1, a2, *(_OWORD **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB026BA8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BB026BD4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB0234F0(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1BB026BE4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026C18(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB023720(a1, *(_QWORD *)(v1 + 16), *(_OWORD **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BB026C34()
{
  return objectdestroy_62Tm();
}

uint64_t objectdestroy_62Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB0237BC(a1, a2, *(_QWORD *)(v2 + 48), *(uint64_t **)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD **)(v2 + 80), *(unsigned __int8 *)(v2 + 88), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BB026CC8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BB026CFC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB023E48(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_1BB026D30()
{
  return swift_deallocObject();
}

uint64_t sub_1BB026D40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB024080(a1, a2);
}

uint64_t sub_1BB026D7C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026E08()
{
  return swift_deallocObject();
}

uint64_t sub_1BB026E18()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB026E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB01AEF8(*(void **)(v1 + 80), a1);
}

id FormatGroupNodeMaskBasicLayer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t FormatGroupNodeMaskBasicLayer.canRemoveOnAnimationCompletion.getter()
{
  return 1;
}

id FormatGroupNodeMaskBasicLayer.init()()
{
  return sub_1BB026FD8(&OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskBasicLayer_canRemoveOnAnimationCompletion, 1);
}

id FormatGroupNodeMaskBasicLayer.init(layer:)(_QWORD *a1)
{
  return sub_1BB02711C(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskBasicLayer_canRemoveOnAnimationCompletion, 1);
}

id FormatGroupNodeMaskBasicLayer.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatGroupNodeMaskBasicLayer.init(coder:)(void *a1)
{
  return sub_1BB02728C(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskBasicLayer_canRemoveOnAnimationCompletion, 1);
}

uint64_t FormatGroupNodeMaskShapeLayer.canRemoveOnAnimationCompletion.getter()
{
  return 0;
}

id FormatGroupNodeMaskShapeLayer.init()()
{
  return sub_1BB026FD8(&OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskShapeLayer_canRemoveOnAnimationCompletion, 0);
}

id FormatGroupNodeMaskShapeLayer.init(layer:)(_QWORD *a1)
{
  return sub_1BB02711C(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskShapeLayer_canRemoveOnAnimationCompletion, 0);
}

id FormatGroupNodeMaskShapeLayer.init(coder:)(void *a1)
{
  return sub_1BB02728C(a1, &OBJC_IVAR____TtC8NewsFeed29FormatGroupNodeMaskShapeLayer_canRemoveOnAnimationCompletion, 0);
}

uint64_t FormatGroupNodeMaskGradientLayer.canRemoveOnAnimationCompletion.getter()
{
  return 0;
}

id FormatGroupNodeMaskGradientLayer.init()()
{
  return sub_1BB026FD8(&OBJC_IVAR____TtC8NewsFeed32FormatGroupNodeMaskGradientLayer_canRemoveOnAnimationCompletion, 0);
}

id sub_1BB026FD8(_QWORD *a1, char a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2[*a1] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1BB02703C(_BYTE *a1, uint64_t a2, _QWORD *a3, char a4)
{
  objc_class *ObjectType;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  a1[*a3] = a4;
  v9.receiver = a1;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id _s8NewsFeed29FormatGroupNodeMaskBasicLayerC5layerACyp_tcfC_0(_QWORD *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = objc_msgSend(v3, sel_initWithLayer_, sub_1BB874380());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

id FormatGroupNodeMaskGradientLayer.init(layer:)(_QWORD *a1)
{
  return sub_1BB02711C(a1, &OBJC_IVAR____TtC8NewsFeed32FormatGroupNodeMaskGradientLayer_canRemoveOnAnimationCompletion, 0);
}

id sub_1BB02711C(_QWORD *a1, _QWORD *a2, char a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v3[*a2] = a3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_1BB874380();
  v11.receiver = v3;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_initWithLayer_, v8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

id sub_1BB0271C8(_BYTE *a1, uint64_t a2, uint64_t a3, _QWORD *a4, char a5)
{
  objc_class *ObjectType;
  uint64_t v9;
  id v10;
  objc_super v12;
  _QWORD v13[4];

  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1BB873B64();
  swift_unknownObjectRelease();
  a1[*a4] = a5;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  v9 = sub_1BB874380();
  v12.receiver = a1;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, sel_initWithLayer_, v9);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v10;
}

id FormatGroupNodeMaskGradientLayer.init(coder:)(void *a1)
{
  return sub_1BB02728C(a1, &OBJC_IVAR____TtC8NewsFeed32FormatGroupNodeMaskGradientLayer_canRemoveOnAnimationCompletion, 0);
}

id sub_1BB02728C(void *a1, _QWORD *a2, char a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v3[*a2] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1BB027304(_BYTE *a1, uint64_t a2, uint64_t a3, _QWORD *a4, char a5)
{
  objc_class *ObjectType;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  a1[*a4] = a5;
  v11.receiver = a1;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_initWithCoder_, a3);
}

uint64_t dispatch thunk of FormatGroupNodeMaskLayerType.canRemoveOnAnimationCompletion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for FormatGroupNodeMaskBasicLayer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatGroupNodeMaskShapeLayer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatGroupNodeMaskGradientLayer()
{
  return objc_opt_self();
}

uint64_t sub_1BB0273DC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_1BB8729A0();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t FCMescalSignature.signature(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_task_switch();
}

uint64_t sub_1BB027474()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[4];
  v1 = v0[5];
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  sub_1BA76D834();
  *v4 = v0;
  v4[1] = sub_1BB027528;
  return sub_1BB874518();
}

uint64_t sub_1BB027528()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_1BB027594(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  sub_1BA9838A8();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v2);
  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1BB86C6DC();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_1BB02789C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB0273DC;
  aBlock[3] = &block_descriptor_36;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_signatureFromData_completion_, v7, v10);
  _Block_release(v10);

}

void sub_1BB0276EC(uint64_t a1)
{
  sub_1BB027594(a1);
}

uint64_t sub_1BB0276F4(int a1, int a2, id a3)
{
  id v3;

  if (a3)
  {
    v3 = a3;
    sub_1BA9838A8();
    return sub_1BB872F34();
  }
  else
  {
    sub_1BA9838A8();
    swift_bridgeObjectRetain();
    return sub_1BB872F40();
  }
}

uint64_t sub_1BB027770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_task_switch();
}

uint64_t sub_1BB027788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[4];
  v1 = v0[5];
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  sub_1BA76D834();
  *v4 = v0;
  v4[1] = sub_1BA9801E4;
  return sub_1BB874518();
}

uint64_t sub_1BB02783C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA9838A8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB02789C(int a1, int a2, void *a3)
{
  sub_1BA9838A8();
  return sub_1BB0276F4(a1, a2, a3);
}

uint64_t FormatCommandState.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*((_BYTE *)v0 + 16))
  {
    if (*((_BYTE *)v0 + 16) == 1)
    {
      if ((v1 & 1) != 0)
        return 1702195828;
      else
        return 0x65736C6166;
    }
    else
    {
      sub_1BA6F0168();
      return sub_1BB873B58();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1BB0279A0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*((_BYTE *)v0 + 16))
  {
    if (*((_BYTE *)v0 + 16) == 1)
    {
      if ((v1 & 1) != 0)
        return 1702195828;
      else
        return 0x65736C6166;
    }
    else
    {
      sub_1BA6F0168();
      return sub_1BB873B58();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t _s8NewsFeed18FormatCommandStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        sub_1BA73B1B8(*(_QWORD *)a1, v3, 1);
        sub_1BA73B1B8(v5, v6, 1);
        v8 = ((v2 & 1) == 0) ^ v5;
        return v8 & 1;
      }
    }
    else if (v7 == 2)
    {
      sub_1BA73B1B8(*(_QWORD *)a1, v3, 2);
      sub_1BA73B1B8(v5, v6, 2);
      v8 = v2 == v5;
      return v8 & 1;
    }
LABEL_9:
    sub_1BA73B1CC(v5, v6, v7);
    sub_1BA73B1B8(v2, v3, v4);
    sub_1BA73B1B8(v5, v6, v7);
    v8 = 0;
    return v8 & 1;
  }
  if (*(_BYTE *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (v2 == v5 && v3 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  sub_1BA73B1CC(v5, v6, 0);
  sub_1BA73B1CC(v2, v3, 0);
  sub_1BA73B1B8(v2, v3, 0);
  sub_1BA73B1B8(v5, v6, 0);
  return v8 & 1;
}

unint64_t sub_1BB027BA8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB027BCC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB027BCC()
{
  unint64_t result;

  result = qword_1EF2B9658;
  if (!qword_1EF2B9658)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandState, &type metadata for FormatCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9658);
  }
  return result;
}

unint64_t sub_1BB027C10(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5AFF14();
  a1[2] = sub_1BA5BE5E4();
  result = sub_1BB027C44();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB027C44()
{
  unint64_t result;

  result = qword_1EF2B9660;
  if (!qword_1EF2B9660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandState, &type metadata for FormatCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B9660);
  }
  return result;
}

uint64_t destroy for FormatCommandState(uint64_t a1)
{
  return sub_1BA73B1B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed18FormatCommandStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA73B1CC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatCommandState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA73B1CC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA73B1B8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatCommandState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA73B1B8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatCommandState()
{
  return &type metadata for FormatCommandState;
}

uint64_t sub_1BB027D8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  v45 = a2;
  sub_1BA61B370();
  v46 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB028AAC(0, &qword_1ED3AB5B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v36 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB028A24();
  v12 = (uint64_t)v47;
  sub_1BB87468C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v43 = v4;
  v44 = v9;
  v14 = v46;
  v47 = a1;
  LOBYTE(v48) = 0;
  v16 = sub_1BB874098();
  v18 = v17;
  LOBYTE(v48) = 1;
  v19 = sub_1BB87402C();
  v42 = v20;
  v40 = v18;
  v41 = 0;
  v39 = v19;
  LOBYTE(v48) = 2;
  v21 = sub_1BB8740F8();
  if ((v21 & 1) != 0)
  {
    v52 = 2;
    sub_1BAEE927C();
    v22 = v41;
    sub_1BB8740D4();
    v23 = v22;
    if (v22)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v8);
      v24 = v41;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      result = swift_bridgeObjectRelease();
      if (!v24)
        return swift_bridgeObjectRelease();
      return result;
    }
    v37 = v16;
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v14);
    v25 = v40;
  }
  else
  {
    v37 = v16;
    v38 = MEMORY[0x1E0DEE9D8];
    v25 = v40;
    v23 = v41;
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3AB098, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v52 = 3;
  sub_1BB028B6C((unint64_t *)&unk_1ED3AB0A0, (uint64_t (*)(void))sub_1BA920B6C, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  if (v23)
  {
    v52 = 4;
    sub_1BB028A68();
    sub_1BB8740D4();
    v46 = v8;
    v28 = v48;
    v29 = v49;
    v30 = v50;
    v31 = v51;
    sub_1BA4AD288(0, qword_1ED3A3230, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = swift_allocObject();
    v26 = (char *)v32;
    *(_OWORD *)(v32 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v32 + 32) = 0x617453746E657665;
    *(_QWORD *)(v32 + 40) = 0xEF61746144636974;
    *(_QWORD *)(v32 + 48) = 0x7461446465626D65;
    *(_QWORD *)(v32 + 56) = 0xE900000000000061;
    *(_QWORD *)(v32 + 64) = v28;
    *(_QWORD *)(v32 + 72) = v29;
    if (v31)
    {
      v26 = (char *)sub_1BB392308((_QWORD *)1, 2, 1, (_QWORD *)v32);
      *((_QWORD *)v26 + 2) = 2;
      strcpy(v26 + 80, "eventLiveData");
      *((_WORD *)v26 + 47) = -4864;
      strcpy(v26 + 96, "liveEmbedData");
      *((_WORD *)v26 + 55) = -4864;
      *((_QWORD *)v26 + 14) = v30;
      *((_QWORD *)v26 + 15) = v31;
    }
    v25 = v40;
    v33 = v44;
    v27 = v45;

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v8);
    v26 = v48;
    v27 = v45;
  }
  v34 = v38;
  *(_QWORD *)v27 = v37;
  *(_QWORD *)(v27 + 8) = v25;
  v35 = v42;
  *(_QWORD *)(v27 + 16) = v39;
  *(_QWORD *)(v27 + 24) = v35;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v26;
  *(_BYTE *)(v27 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB02829C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t (*v14)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_1BB028AAC(0, &qword_1EF2B9668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  v8 = v1[2];
  v19 = v1[3];
  v20 = v8;
  v9 = v1[4];
  v17 = v1[5];
  v18 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB028A24();
  sub_1BB8746C8();
  LOBYTE(v22) = 0;
  v10 = v21;
  sub_1BB87417C();
  if (!v10)
  {
    v11 = v17;
    v12 = v18;
    v22 = v20;
    v23 = v19;
    v24 = 1;
    v13 = MEMORY[0x1E0DEB940];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BB028B08((unint64_t *)&qword_1ED39BDB0, (unint64_t *)&qword_1ED3B9200, (uint64_t (*)(_QWORD, uint64_t))v13, MEMORY[0x1E0DEE988]);
    sub_1BB8741AC();
    v22 = v12;
    v24 = 2;
    v14 = MEMORY[0x1E0DEAEC8];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB028B08((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, uint64_t))v14, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v22 = v11;
    v24 = 3;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3AB098, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB028B6C(&qword_1EF2AA9C8, (uint64_t (*)(void))sub_1BA920C70, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BB02852C(char *a1)
{
  sub_1BB7ED0E8(*a1);
}

void sub_1BB028538()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB028590()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB02862C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB028674()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB0286FC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB028750()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0287EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB028F48();
  *a1 = result;
  return result;
}

uint64_t sub_1BB028818()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB028854 + 4 * byte_1BB8E323F[*v0]))();
}

void sub_1BB028854(_QWORD *a1@<X8>)
{
  *a1 = 0x615465756761656CLL;
  a1[1] = 0xEB00000000644967;
}

void sub_1BB028878(_QWORD *a1@<X8>)
{
  *a1 = 0x736449676174;
  a1[1] = 0xE600000000000000;
}

void sub_1BB028890(char *a1@<X8>)
{
  strcpy(a1, "urlDataSources");
  a1[15] = -18;
}

void sub_1BB0288B8(_QWORD *a1@<X8>)
{
  *a1 = 0x72756F5361746164;
  a1[1] = 0xEA00000000006563;
}

uint64_t sub_1BB0288D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB028914 + 4 * byte_1BB8E3244[*v0]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB028914()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BB028934()
{
  return 0x736449676174;
}

uint64_t sub_1BB028948()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB02896C()
{
  return 0x72756F5361746164;
}

uint64_t sub_1BB028988@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB028F48();
  *a1 = result;
  return result;
}

uint64_t sub_1BB0289AC()
{
  sub_1BB028A24();
  return sub_1BB874710();
}

uint64_t sub_1BB0289D4()
{
  sub_1BB028A24();
  return sub_1BB87471C();
}

uint64_t sub_1BB0289FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB027D8C(a1, a2);
}

uint64_t sub_1BB028A10(_QWORD *a1)
{
  return sub_1BB02829C(a1);
}

unint64_t sub_1BB028A24()
{
  unint64_t result;

  result = qword_1ED3AA9A0;
  if (!qword_1ED3AA9A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E33CC, &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9A0);
  }
  return result;
}

unint64_t sub_1BB028A68()
{
  unint64_t result;

  result = qword_1ED3A4668;
  if (!qword_1ED3A4668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA248, &type metadata for SportsDataVisualizationResponseDataSource);
    atomic_store(result, (unint64_t *)&qword_1ED3A4668);
  }
  return result;
}

void sub_1BB028AAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB028A24();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB028B08(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, a2, MEMORY[0x1E0DEA968], a3);
    v8 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1BCCE5B24](a4, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB028B6C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3AB098, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseStandingItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB028C34 + 4 * byte_1BB8E324E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB028C68 + 4 * byte_1BB8E3249[v4]))();
}

uint64_t sub_1BB028C68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB028C70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB028C78);
  return result;
}

uint64_t sub_1BB028C84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB028C8CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB028C90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB028C98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseStandingItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys;
}

uint64_t destroy for SportsDataVisualizationResponseStandingItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsDataVisualizationResponseStandingItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationResponseStandingItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationResponseStandingItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseStandingItem()
{
  return &type metadata for SportsDataVisualizationResponseStandingItem;
}

unint64_t sub_1BB028E74()
{
  unint64_t result;

  result = qword_1EF2B9670;
  if (!qword_1EF2B9670)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E33A4, &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9670);
  }
  return result;
}

unint64_t sub_1BB028EBC()
{
  unint64_t result;

  result = qword_1ED3AA9B0;
  if (!qword_1ED3AA9B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E32DC, &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9B0);
  }
  return result;
}

unint64_t sub_1BB028F04()
{
  unint64_t result;

  result = qword_1ED3AA9A8;
  if (!qword_1ED3AA9A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E3304, &type metadata for SportsDataVisualizationResponseStandingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9A8);
  }
  return result;
}

uint64_t sub_1BB028F48()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

int64x2_t sub_1BB028F90@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t result;

  v2 = swift_allocObject();
  *(int64x2_t *)(v2 + 16) = vdupq_n_s64(0x404E000000000000uLL);
  *(_QWORD *)(v2 + 32) = 0x4050C00000000000;
  *(_QWORD *)(v2 + 40) = 0x3FE3333333333333;
  *(_BYTE *)(v2 + 48) = 0;
  v3 = v2 | 0x6000000000000000;
  v4 = swift_allocObject();
  result = vdupq_n_s64(0x4068600000000000uLL);
  *(int64x2_t *)(v4 + 16) = result;
  *(_QWORD *)(v4 + 32) = 0x4067800000000000;
  *(_QWORD *)(v4 + 40) = 0x3FE3333333333333;
  *(_BYTE *)(v4 + 48) = 0;
  *a1 = v3;
  a1[1] = v4 | 0x6000000000000000;
  return result;
}

uint64_t sub_1BB02902C()
{
  return swift_deallocObject();
}

uint64_t FormatPuzzleStatisticBinding.Image.image(from:context:imageContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t *v31;
  char v32;
  char v33;
  int v34;

  v31 = a3;
  v6 = type metadata accessor for FeedPuzzleStatistic();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*v3 & 1) != 0)
  {
    v10 = swift_allocObject();
    v11 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    v13 = *(_OWORD *)(a2 + 64);
    v29 = *(_OWORD *)(a2 + 80);
    v30 = v13;
    v28 = *(_OWORD *)(a2 + 96);
    v14 = *(_QWORD *)(a2 + 112);
    v27 = *(_QWORD *)(a2 + 120);
    v34 = *(unsigned __int8 *)(a2 + 128);
    sub_1BA4C2DD8(a1, (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v16 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v9, v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v33 = 1;
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_BYTE *)(v10 + 48) = 1;
    *(_QWORD *)(v10 + 56) = v11;
    *(_QWORD *)(v10 + 64) = v12;
    *(_OWORD *)(v10 + 72) = v30;
    *(_OWORD *)(v10 + 88) = v29;
    *(_OWORD *)(v10 + 104) = v28;
    v17 = v27;
    *(_QWORD *)(v10 + 120) = v14;
    *(_QWORD *)(v10 + 128) = v17;
    *(_BYTE *)(v10 + 136) = v34;
    v18 = sub_1BB029B78;
  }
  else
  {
    v10 = swift_allocObject();
    v19 = *(_QWORD *)(a2 + 48);
    v20 = *(_QWORD *)(a2 + 56);
    v21 = *(_OWORD *)(a2 + 64);
    v29 = *(_OWORD *)(a2 + 80);
    v30 = v21;
    v28 = *(_OWORD *)(a2 + 96);
    v22 = *(_QWORD *)(a2 + 112);
    v27 = *(_QWORD *)(a2 + 120);
    v34 = *(unsigned __int8 *)(a2 + 128);
    sub_1BA4C2DD8(a1, (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v23 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v16 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v9, v16 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v32 = 1;
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_BYTE *)(v10 + 48) = 1;
    *(_QWORD *)(v10 + 56) = v19;
    *(_QWORD *)(v10 + 64) = v20;
    *(_OWORD *)(v10 + 72) = v30;
    *(_OWORD *)(v10 + 88) = v29;
    *(_OWORD *)(v10 + 104) = v28;
    v24 = v27;
    *(_QWORD *)(v10 + 120) = v22;
    *(_QWORD *)(v10 + 128) = v24;
    *(_BYTE *)(v10 + 136) = v34;
    v18 = sub_1BB029B88;
  }
  *(_QWORD *)(v10 + 144) = v18;
  *(_QWORD *)(v10 + 152) = v16;
  result = swift_bridgeObjectRetain();
  *v31 = v10 | 0x2000000000000000;
  return result;
}

uint64_t sub_1BB029288()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0292B4@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_1BB86C8E0();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - v17;
  v19 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v20 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v19 + *(int *)(v20 + 20), (uint64_t)v12, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for PuzzleStatisticCategory);
LABEL_7:
    v26 = v37;
    v25 = v38;
    sub_1BB86C8D4();
    sub_1BB86C8C8();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
    v27 = sub_1BB86FE20();
    swift_allocObject();
    result = sub_1BB86FE14();
    v29 = MEMORY[0x1E0DB7D90];
    a2[3] = v27;
    a2[4] = v29;
    *a2 = result;
    return result;
  }
  sub_1BAFA75E4((uint64_t)v12, (uint64_t)v18);
  sub_1BB029E54((uint64_t)v18, (uint64_t)v15);
  v21 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
    sub_1BA502AD0((uint64_t)v15, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_6:
    sub_1BA502AD0((uint64_t)v18, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    goto LABEL_7;
  }
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  v22 = &v9[*(int *)(v7 + 24)];
  v24 = *((_QWORD *)v22 + 2);
  v23 = *((_QWORD *)v22 + 3);
  sub_1BA86B484(v24, v23);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
  if (v23 >> 60 == 15)
    goto LABEL_6;
  v30 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1BA69D44C(v24, v23);
  v31 = (void *)sub_1BB86C6DC();
  v32 = objc_msgSend(v30, sel_initWithData_, v31);
  sub_1BA69D490(v24, v23);

  if (!v32)
  {
    sub_1BA502AD0((uint64_t)v18, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    sub_1BA69D490(v24, v23);
    goto LABEL_7;
  }
  v33 = v32;
  sub_1BB86C8D4();
  sub_1BB86C8C8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v38);
  v34 = sub_1BB86FE20();
  swift_allocObject();
  v35 = sub_1BB86FE14();
  v36 = MEMORY[0x1E0DB7D90];
  a2[3] = v34;
  a2[4] = v36;

  sub_1BA69D490(v24, v23);
  *a2 = v35;
  return sub_1BA502AD0((uint64_t)v18, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
}

uint64_t sub_1BB0296A8@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;

  v49 = a2;
  v3 = sub_1BB86C8E0();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2AD7D0, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - v7;
  v9 = type metadata accessor for PuzzleLeaderboardEntry();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v46 - v20;
  v22 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v23 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v22 + *(int *)(v23 + 20), (uint64_t)v15, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for PuzzleStatisticCategory);
LABEL_8:
    v28 = v49;
LABEL_9:
    v30 = v47;
    v29 = v48;
    sub_1BB86C8D4();
    sub_1BB86C8C8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    v31 = sub_1BB86FE20();
    swift_allocObject();
    result = sub_1BB86FE14();
    v33 = MEMORY[0x1E0DB7D90];
    v28[3] = v31;
    v28[4] = v33;
    *v28 = result;
    return result;
  }
  sub_1BAFA75E4((uint64_t)v15, (uint64_t)v21);
  sub_1BB029E54((uint64_t)v21, (uint64_t)v18);
  v24 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 1, v24) == 1)
  {
    sub_1BA502AD0((uint64_t)v18, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_6:
    sub_1BA502AD0((uint64_t)v21, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    v25 = &qword_1EF2AD7D0;
    v26 = (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry;
    v27 = (uint64_t)v8;
LABEL_7:
    sub_1BA502AD0(v27, v25, v26);
    goto LABEL_8;
  }
  sub_1BB593D50((uint64_t)v8);
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_6;
  v34 = (uint64_t)v12;
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
  v35 = &v12[*(int *)(v9 + 24)];
  v36 = *((_QWORD *)v35 + 3);
  if (v36 >> 60 == 15)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
    v25 = (unint64_t *)&unk_1ED3C4390;
    v26 = (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult;
    v27 = (uint64_t)v21;
    goto LABEL_7;
  }
  v37 = (uint64_t)v21;
  v38 = *((_QWORD *)v35 + 2);
  v39 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1BA69D44C(v38, v36);
  v40 = (void *)sub_1BB86C6DC();
  v41 = objc_msgSend(v39, sel_initWithData_, v40);

  v28 = v49;
  if (!v41)
  {
    sub_1BA69D490(v38, v36);
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
    sub_1BA502AD0(v37, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    goto LABEL_9;
  }
  v42 = v41;
  sub_1BB86C8D4();
  sub_1BB86C8C8();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v48);
  v43 = sub_1BB86FE20();
  swift_allocObject();
  v44 = sub_1BB86FE14();
  v45 = MEMORY[0x1E0DB7D90];
  v28[3] = v43;
  v28[4] = v45;

  sub_1BA69D490(v38, v36);
  *v28 = v44;
  sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleLeaderboardEntry);
  return sub_1BA502AD0(v37, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
}

uint64_t sub_1BB029B78(uint64_t a1, uint64_t a2)
{
  return sub_1BB029B94(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB0296A8);
}

uint64_t sub_1BB029B88(uint64_t a1, uint64_t a2)
{
  return sub_1BB029B94(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB0292B4);
}

uint64_t sub_1BB029B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedPuzzleStatistic() - 8) + 80);
  return a3(a1, a2, v3 + ((v6 + 16) & ~v6));
}

BOOL static FormatPuzzleStatisticBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatPuzzleStatisticBinding.Image.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleStatisticBinding.Image.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB029C80()
{
  unint64_t result;

  result = qword_1EF2B9678;
  if (!qword_1EF2B9678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Image, &type metadata for FormatPuzzleStatisticBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B9678);
  }
  return result;
}

unint64_t sub_1BB029CC4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB029CE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB029CE8()
{
  unint64_t result;

  result = qword_1EF2B9680;
  if (!qword_1EF2B9680)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Image, &type metadata for FormatPuzzleStatisticBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B9680);
  }
  return result;
}

unint64_t sub_1BB029D2C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE9A1A0();
  a1[2] = sub_1BAEF17DC();
  result = sub_1BB029C80();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB029D60@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Image.init(from:)(a1, a2);
}

uint64_t sub_1BB029D74(_QWORD *a1)
{
  return FormatPuzzleStatisticBinding.Image.encode(to:)(a1);
}

uint64_t _s5ImageOwst_5(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB029DD4 + 4 * byte_1BB8E3425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB029E08 + 4 * byte_1BB8E3420[v4]))();
}

uint64_t sub_1BB029E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB029E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB029E18);
  return result;
}

uint64_t sub_1BB029E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB029E2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB029E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB029E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Image()
{
  return &type metadata for FormatPuzzleStatisticBinding.Image;
}

uint64_t sub_1BB029E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTestScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB029EF4 + 4 * byte_1BB8E3545[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB029F28 + 4 * byte_1BB8E3540[v4]))();
}

uint64_t sub_1BB029F28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB029F30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB029F38);
  return result;
}

uint64_t sub_1BB029F44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB029F4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB029F50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB029F58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestScope()
{
  return &type metadata for DebugFormatTestScope;
}

unint64_t sub_1BB029F78()
{
  unint64_t result;

  result = qword_1EF2B9688;
  if (!qword_1EF2B9688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E363C, &type metadata for DebugFormatTestScope);
    atomic_store(result, (unint64_t *)&qword_1EF2B9688);
  }
  return result;
}

uint64_t sub_1BB029FBC@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[9];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_1BA7B06D8(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB02A680();
  MEMORY[0x1E0C80A78](v11);
  v13 = (_OWORD *)((char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    v15 = *v14;
    v16 = *(_QWORD *)(*v14 + 16);
    if (v16)
    {
      v36 = v7;
      v37 = v13;
      v38 = a3;
      v17 = v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v34[1] = v15;
      v35 = v8;
      v18 = *(_QWORD *)(v8 + 72);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA7B0658(v17, (uint64_t)v10);
        v19 = *v10;
        v20 = v10[1];
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        if (v19 == v49 && v20 == v50)
          break;
        v22 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          goto LABEL_15;
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA7B06D8);
        v17 += v18;
        if (!--v16)
        {
          swift_bridgeObjectRelease();
          v23 = 1;
          v13 = v37;
          a3 = v38;
          v8 = v35;
          v7 = v36;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      v7 = v36;
      swift_bridgeObjectRelease();
      v13 = v37;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BA7B06D8);
      v23 = 0;
      a3 = v38;
      v8 = v35;
    }
    else
    {
      swift_bridgeObjectRetain();
      v23 = 1;
    }
LABEL_16:
    (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, v23, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
    {
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BB02A680);
      goto LABEL_18;
    }
    v29 = v13[7];
    v45 = v13[6];
    v46 = v29;
    v47 = v13[8];
    v30 = v13[3];
    v41 = v13[2];
    v42 = v30;
    v31 = v13[5];
    v43 = v13[4];
    v44 = v31;
    v32 = v13[1];
    v39 = *v13;
    v40 = v32;
    sub_1BA8C88FC((uint64_t)&v39);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7B06D8);
    v48[6] = v45;
    v48[7] = v46;
    v48[8] = v47;
    v48[2] = v41;
    v48[3] = v42;
    v48[4] = v43;
    v48[5] = v44;
    v48[0] = v39;
    v48[1] = v40;
    sub_1BB02A774((uint64_t)v48);
LABEL_20:
    sub_1BAF8FDD8((uint64_t)v48, (uint64_t)&v49);
    nullsub_1();
    return sub_1BA5193C4((uint64_t)&v49, a3, (uint64_t (*)(_QWORD))sub_1BB02A704);
  }
  swift_beginAccess();
  v24 = *v14;
  v25 = v14[1];
  v26 = v14[2];
  type metadata accessor for GroupLayoutContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_1BB86D63C();
  v49 = v24;
  v50 = v25;
  v51 = v26;
  v28 = FormatGroupCollection.subscript.getter(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28)
  {
    *(_QWORD *)&v48[0] = v28;
    sub_1BB02A758((uint64_t)v48);
    goto LABEL_20;
  }
LABEL_18:
  sub_1BB02A6D4((uint64_t)&v49);
  return sub_1BA5193C4((uint64_t)&v49, a3, (uint64_t (*)(_QWORD))sub_1BB02A704);
}

uint64_t sub_1BB02A34C(char *a1, char *a2)
{
  return sub_1BB7FBE0C(*a1, *a2);
}

uint64_t sub_1BB02A358()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB02A3D4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB02A42C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB02A4A4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB02A500(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x70756F7267;
  if (*v1)
    v2 = 0x6567616B636170;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB02A53C()
{
  sub_1BB02A63C();
  return sub_1BB872CDC();
}

uint64_t sub_1BB02A57C()
{
  sub_1BB02A63C();
  return sub_1BB872CD0();
}

uint64_t sub_1BB02A5C4()
{
  sub_1BB02A63C();
  return sub_1BB872CC4();
}

uint64_t sub_1BB02A604()
{
  _BYTE *v0;

  if (*v0)
    return 0x6567616B636150;
  else
    return 0x70756F7247;
}

unint64_t sub_1BB02A63C()
{
  unint64_t result;

  result = qword_1EF2BCF60;
  if (!qword_1EF2BCF60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E35C4, &type metadata for DebugFormatTestScope);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF60);
  }
  return result;
}

void sub_1BB02A680()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B37B8)
  {
    sub_1BA7B06D8(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B37B8);
  }
}

double sub_1BB02A6D4(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 0x3FFFFFFFCLL;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  return result;
}

void sub_1BB02A704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B77F8)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B77F8);
  }
}

uint64_t sub_1BB02A758(uint64_t result)
{
  unint64_t v1;

  v1 = *(unsigned __int8 *)(result + 128) | 0x8000000000000000;
  *(_QWORD *)(result + 48) &= 3uLL;
  *(_QWORD *)(result + 128) = v1;
  return result;
}

uint64_t sub_1BB02A774(uint64_t result)
{
  uint64_t v1;

  v1 = *(unsigned __int8 *)(result + 128);
  *(_QWORD *)(result + 48) &= 3uLL;
  *(_QWORD *)(result + 128) = v1;
  return result;
}

uint64_t sub_1BB02A78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if ((a17 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6BAD2C(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for DebugFormatTestScope.Resolved(uint64_t a1)
{
  return sub_1BAF8FE88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128));
}

uint64_t *initializeWithCopy for DebugFormatTestScope.Resolved(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  sub_1BB02A78C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  return a1;
}

uint64_t assignWithCopy for DebugFormatTestScope.Resolved(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v26 = a2[9];
  v27 = a2[10];
  v28 = a2[11];
  v29 = a2[12];
  v30 = a2[13];
  v31 = a2[14];
  v32 = a2[15];
  v33 = a2[16];
  v34 = a2[17];
  sub_1BB02A78C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32, v33);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v26;
  *(_QWORD *)(a1 + 80) = v27;
  *(_QWORD *)(a1 + 88) = v28;
  *(_QWORD *)(a1 + 96) = v29;
  *(_QWORD *)(a1 + 104) = v30;
  *(_QWORD *)(a1 + 112) = v31;
  *(_QWORD *)(a1 + 120) = v32;
  *(_QWORD *)(a1 + 128) = v33;
  *(_QWORD *)(a1 + 136) = v34;
  sub_1BAF8FE88(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24);
  return a1;
}

uint64_t assignWithTake for DebugFormatTestScope.Resolved(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = *(_QWORD *)(a1 + 128);
  v16 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v17;
  v18 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v18;
  v19 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v19;
  *(_OWORD *)(a1 + 128) = a2[8];
  sub_1BAF8FE88(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((unint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatTestScope.Resolved(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48) >> 2;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for DebugFormatTestScope.Resolved(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 136) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = 4 * -a2;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_QWORD *)(a1 + 136) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BB02AC58(uint64_t result, uint64_t a2)
{
  unint64_t v2;

  v2 = *(unsigned __int8 *)(result + 128) | (unint64_t)(a2 << 63);
  *(_QWORD *)(result + 48) &= 3uLL;
  *(_QWORD *)(result + 128) = v2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestScope.Resolved()
{
  return &type metadata for DebugFormatTestScope.Resolved;
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return sub_1BB86C46C();
}

NewsFeed::PuzzleStyleAttributes::Value_optional __swiftcall PuzzleStyleAttributes.Value.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::PuzzleStyleAttributes::Value_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PuzzleStyleAttributes.Value.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB02AD34 + 4 * byte_1BB8E36A0[*v0]))(0x6E696C7265646E75, 0xE900000000000065);
}

uint64_t sub_1BB02AD34()
{
  return 0x7263737265707573;
}

uint64_t sub_1BB02AD54()
{
  return 0x7069726373627573;
}

uint64_t sub_1BB02AD6C()
{
  return 0x72656C6C616D73;
}

uint64_t sub_1BB02AD84()
{
  return 0x726567676962;
}

void sub_1BB02AD98(char *a1)
{
  sub_1BB7F8524(*a1);
}

void sub_1BB02ADA4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB02ADF4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB02AE80()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB02AEC0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB02AF38()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB02AF84()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleStyleAttributes::Value_optional sub_1BB02B010(Swift::String *a1)
{
  return PuzzleStyleAttributes.Value.init(rawValue:)(*a1);
}

uint64_t sub_1BB02B01C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB02B050 + 4 * byte_1BB8E36B4[*v0]))();
}

void sub_1BB02B050(_QWORD *a1@<X8>)
{
  *a1 = 0x7263737265707573;
  a1[1] = 0xEB00000000747069;
}

void sub_1BB02B074(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7069726373627573;
  a1[1] = v1 + 15;
}

void sub_1BB02B090(_QWORD *a1@<X8>)
{
  *a1 = 0x72656C6C616D73;
  a1[1] = 0xE700000000000000;
}

void sub_1BB02B0AC(_QWORD *a1@<X8>)
{
  *a1 = 0x726567676962;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BB02B0C4()
{
  sub_1BB02B720();
  return sub_1BB872D60();
}

uint64_t sub_1BB02B120()
{
  sub_1BB02B720();
  return sub_1BB872D0C();
}

uint64_t static PuzzleStyleAttributes.name.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = *(_QWORD *)aPuzzlestyle_0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static PuzzleStyleAttributes.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)aPuzzlestyle_0 = a1;
  *(_QWORD *)&aPuzzlestyle_0[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PuzzleStyleAttributes.name.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BB02B254()
{
  sub_1BB02B6DC();
  return sub_1BB86C4CC();
}

uint64_t sub_1BB02B2B0()
{
  sub_1BB02B698();
  return sub_1BB86C4D8();
}

uint64_t sub_1BB02B30C()
{
  sub_1BB02B654();
  return sub_1BB86C4E4();
}

uint64_t sub_1BB02B36C()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = *(_QWORD *)aPuzzlestyle_0;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1BB02B3D0()
{
  sub_1BB002894();
  JUMPOUT(0x1BCCDC980);
}

void sub_1BB02B408()
{
  sub_1BB002894();
  JUMPOUT(0x1BCCDC98CLL);
}

unint64_t sub_1BB02B448()
{
  unint64_t result;

  result = qword_1EF2B96A0;
  if (!qword_1EF2B96A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes.Value, &type metadata for PuzzleStyleAttributes.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2B96A0);
  }
  return result;
}

unint64_t sub_1BB02B494()
{
  unint64_t result;

  result = qword_1EF2B96A8;
  if (!qword_1EF2B96A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes.Value, &type metadata for PuzzleStyleAttributes.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2B96A8);
  }
  return result;
}

unint64_t sub_1BB02B4DC()
{
  unint64_t result;

  result = qword_1EF2B96B0;
  if (!qword_1EF2B96B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AttributeScopes.PuzzleAttributes, &type metadata for AttributeScopes.PuzzleAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B96B0);
  }
  return result;
}

unint64_t sub_1BB02B524()
{
  unint64_t result;

  result = qword_1EF2B96B8;
  if (!qword_1EF2B96B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AttributeScopes.PuzzleAttributes, &type metadata for AttributeScopes.PuzzleAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B96B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStyleAttributes()
{
  return &type metadata for PuzzleStyleAttributes;
}

uint64_t storeEnumTagSinglePayload for PuzzleStyleAttributes.Value(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB02B5C4 + 4 * byte_1BB8E36BE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB02B5F8 + 4 * byte_1BB8E36B9[v4]))();
}

uint64_t sub_1BB02B5F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB02B600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB02B608);
  return result;
}

uint64_t sub_1BB02B614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB02B61CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB02B620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB02B628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStyleAttributes.Value()
{
  return &type metadata for PuzzleStyleAttributes.Value;
}

ValueMetadata *type metadata accessor for AttributeScopes.PuzzleAttributes()
{
  return &type metadata for AttributeScopes.PuzzleAttributes;
}

unint64_t sub_1BB02B654()
{
  unint64_t result;

  result = qword_1EF2B96C0;
  if (!qword_1EF2B96C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes, &type metadata for PuzzleStyleAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B96C0);
  }
  return result;
}

unint64_t sub_1BB02B698()
{
  unint64_t result;

  result = qword_1EF2B96C8;
  if (!qword_1EF2B96C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes.Value, &type metadata for PuzzleStyleAttributes.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2B96C8);
  }
  return result;
}

unint64_t sub_1BB02B6DC()
{
  unint64_t result;

  result = qword_1EF2B96D0;
  if (!qword_1EF2B96D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes.Value, &type metadata for PuzzleStyleAttributes.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2B96D0);
  }
  return result;
}

unint64_t sub_1BB02B720()
{
  unint64_t result;

  result = qword_1EF2B96D8;
  if (!qword_1EF2B96D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleStyleAttributes.Value, &type metadata for PuzzleStyleAttributes.Value);
    atomic_store(result, (unint64_t *)&qword_1EF2B96D8);
  }
  return result;
}

double static FormatCodingPuzzleOverridesStrategy.defaultValue.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

BOOL static FormatCodingPuzzleOverridesStrategy.shouldEncode(wrappedValue:)(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[9];
  _OWORD v7[9];

  v1 = a1[7];
  v7[6] = a1[6];
  v7[7] = v1;
  v7[8] = a1[8];
  v2 = a1[3];
  v7[2] = a1[2];
  v7[3] = v2;
  v3 = a1[5];
  v7[4] = a1[4];
  v7[5] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  memset(v6, 0, sizeof(v6));
  return (_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(v7, v6) & 1) == 0;
}

double sub_1BB02B7F4@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

BOOL sub_1BB02B810(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[9];
  _OWORD v7[9];

  v1 = a1[7];
  v7[6] = a1[6];
  v7[7] = v1;
  v7[8] = a1[8];
  v2 = a1[3];
  v7[2] = a1[2];
  v7[3] = v2;
  v3 = a1[5];
  v7[4] = a1[4];
  v7[5] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  memset(v6, 0, sizeof(v6));
  return (_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(v7, v6) & 1) == 0;
}

unint64_t sub_1BB02B884(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB02B8A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB02B8A8()
{
  unint64_t result;

  result = qword_1EF2B96E0;
  if (!qword_1EF2B96E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingPuzzleOverridesStrategy, &type metadata for FormatCodingPuzzleOverridesStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B96E0);
  }
  return result;
}

unint64_t sub_1BB02B8F0()
{
  unint64_t result;

  result = qword_1ED3A5518;
  if (!qword_1ED3A5518)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzle.Overrides, &type metadata for FormatPuzzle.Overrides);
    atomic_store(result, (unint64_t *)&qword_1ED3A5518);
  }
  return result;
}

unint64_t sub_1BB02B938()
{
  unint64_t result;

  result = qword_1ED3A5510;
  if (!qword_1ED3A5510)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzle.Overrides, &type metadata for FormatPuzzle.Overrides);
    atomic_store(result, (unint64_t *)&qword_1ED3A5510);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingPuzzleOverridesStrategy()
{
  return &type metadata for FormatCodingPuzzleOverridesStrategy;
}

uint64_t sub_1BB02B990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int *v38;

  sub_1BB0428DC(a1, a9);
  v38 = (int *)type metadata accessor for FormatRemoteVideo();
  sub_1BB0428DC(a2, a9 + v38[5]);
  sub_1BB0428DC(a3, a9 + v38[6]);
  sub_1BA5D5518(a4, a9 + v38[7], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a5, a9 + v38[8], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a6, a9 + v38[9], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a7, a9 + v38[10], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a8, a9 + v38[11], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a10, a9 + v38[12], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a11, a9 + v38[13], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a12, a9 + v38[14], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a13, a9 + v38[15], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a14, a9 + v38[16], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a15, a9 + v38[17], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a16, a9 + v38[18], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a17, a9 + v38[19], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a18, a9 + v38[20], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a19, a9 + v38[21], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a20, a9 + v38[22], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a21, a9 + v38[23], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a22, a9 + v38[24], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a23, a9 + v38[25], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a24, a9 + v38[26], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a25, a9 + v38[27], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a26, a9 + v38[28], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a27, a9 + v38[29], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a28, a9 + v38[30], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a29, a9 + v38[31], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA5D5518(a30, a9 + v38[32], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  return sub_1BA5D5518(a31, a9 + v38[33], (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x1VideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x2VideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatRemoteVideo();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x3VideoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatRemoteVideo();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

uint64_t FormatRemoteVideo.x1VideoURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 28);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 32);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 36);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1VideoURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 40);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 44);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 48);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1VideoURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 52);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 56);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 60);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1VideoURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 64);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2VideoURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 68);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3VideoURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 72);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 76);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 80);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 84);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 88);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 92);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_6.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 96);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 100);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 104);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_8.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 108);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 112);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 116);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_12.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 120);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x1ImageURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 124);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x2ImageURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 128);
  return sub_1BB034218(v3, a1);
}

uint64_t FormatRemoteVideo.x3ImageURL_18.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatRemoteVideo() + 132);
  return sub_1BB034218(v3, a1);
}

uint64_t sub_1BB02C304@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, char *a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int *v204;
  uint64_t v205;
  uint64_t v207;
  int v208;
  uint64_t v209;
  void (*v210)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v211;
  uint64_t (*v212)(_QWORD, _QWORD, _QWORD);
  int v213;
  uint64_t v214;
  void (*v215)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  int v221;
  int *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  void (*v228)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v233;
  unsigned int (*v234)(_QWORD, _QWORD, _QWORD);
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v247;
  void (*v248)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  uint64_t v250;
  uint64_t (*v251)(char *, uint64_t, uint64_t);
  int v252;
  int *v253;
  int *v254;
  void (*v255)(uint64_t);
  uint64_t v256;
  void (*v257)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  int *v266;
  uint64_t v267;
  uint64_t v268;
  unsigned int (*v269)(uint64_t, uint64_t, uint64_t);
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unsigned int (*v276)(uint64_t, uint64_t, uint64_t);
  uint64_t v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void (*v282)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void (*v286)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  int *v290;
  uint64_t v291;
  void (*v292)(char *, uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void (*v296)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v297;
  unsigned int (*v298)(uint64_t, uint64_t, uint64_t);
  uint64_t *v299;
  uint64_t v300;
  void (*v301)(uint64_t *, uint64_t, uint64_t);
  uint64_t v302;
  void (*v303)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v304;
  uint64_t v305;
  unsigned int (*v306)(uint64_t, uint64_t, uint64_t);
  uint64_t v307;
  void (*v308)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v309;
  int *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unsigned int (*v319)(uint64_t, uint64_t, uint64_t);
  void (*v320)(uint64_t, uint64_t, uint64_t);
  char *v321;
  void (*v322)(char *, char *, uint64_t);
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  int v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  void (*v338)(uint64_t *, uint64_t, uint64_t, uint64_t);
  void (*v339)(uint64_t *, uint64_t, uint64_t);
  void (*v340)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v341;
  unsigned int v342;
  uint64_t v343;
  uint64_t *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void (*v349)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v350;
  void (*v351)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v352;
  void (*v353)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v354;
  void (*v355)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v356;
  unsigned int (*v357)(uint64_t, uint64_t, uint64_t);
  char *v358;
  void (*v359)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v360;
  uint64_t v361;
  void (*v362)(char *, char *, uint64_t);
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void (*v376)(uint64_t, uint64_t, uint64_t);
  void (*v377)(uint64_t *, uint64_t, uint64_t);
  void (*v378)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t *v386;
  uint64_t *v387;
  uint64_t v388;
  uint64_t v389;
  void (*v390)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v391)(uint64_t);
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  void (*v402)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  void (*v413)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  uint64_t *v418;
  int v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  int v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  void (*v432)(uint64_t);
  uint64_t v433;
  char *v434;
  uint64_t v435;
  void (*v436)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v437)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v438)(uint64_t *, uint64_t, uint64_t);
  void (*v439)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v440)(uint64_t);
  uint64_t v441;
  unsigned int v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t *v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char *v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char *v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  char *v488;
  char *v489;
  char *v490;
  char *v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t *v501;
  char *v502;
  uint64_t v503;
  uint64_t *v504;
  uint64_t v505;
  char *v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  char *v510;
  char *v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  char *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t *v523;
  uint64_t v524;
  char *v525;
  uint64_t v526;
  uint64_t v527;
  char *v528;
  uint64_t *v529;
  uint64_t *v530;
  char *v531;
  uint64_t v532;
  char *v533;
  void (*v534)(char *, char *, uint64_t);
  uint64_t v535;
  void (*v536)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v537;
  int *v538;
  uint64_t v539;
  uint64_t v540;

  v537 = a1;
  v534 = a2;
  v531 = a3;
  v538 = (int *)type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v538);
  v460 = (char *)&v452 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v474 = (char *)&v452 - v7;
  MEMORY[0x1E0C80A78](v8);
  v472 = (char *)&v452 - v9;
  MEMORY[0x1E0C80A78](v10);
  v491 = (char *)&v452 - v11;
  MEMORY[0x1E0C80A78](v12);
  v489 = (char *)&v452 - v13;
  MEMORY[0x1E0C80A78](v14);
  v511 = (char *)&v452 - v15;
  MEMORY[0x1E0C80A78](v16);
  v466 = (uint64_t)&v452 - v17;
  MEMORY[0x1E0C80A78](v18);
  v490 = (char *)&v452 - v19;
  MEMORY[0x1E0C80A78](v20);
  v480 = (uint64_t)&v452 - v21;
  MEMORY[0x1E0C80A78](v22);
  v510 = (char *)&v452 - v23;
  MEMORY[0x1E0C80A78](v24);
  v497 = (uint64_t)&v452 - v25;
  MEMORY[0x1E0C80A78](v26);
  v519 = (uint64_t)&v452 - v27;
  MEMORY[0x1E0C80A78](v28);
  v488 = (char *)&v452 - v29;
  MEMORY[0x1E0C80A78](v30);
  v509 = (char *)&v452 - v31;
  MEMORY[0x1E0C80A78](v32);
  v506 = (char *)&v452 - v33;
  MEMORY[0x1E0C80A78](v34);
  v518 = (uint64_t)&v452 - v35;
  MEMORY[0x1E0C80A78](v36);
  v520 = (char *)&v452 - v37;
  MEMORY[0x1E0C80A78](v38);
  v527 = (uint64_t)&v452 - v39;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v40);
  v457 = (uint64_t)&v452 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v452 = (uint64_t)&v452 - v43;
  MEMORY[0x1E0C80A78](v44);
  v459 = (uint64_t)&v452 - v45;
  MEMORY[0x1E0C80A78](v46);
  v473 = (uint64_t)&v452 - v47;
  MEMORY[0x1E0C80A78](v48);
  v455 = (uint64_t)&v452 - v49;
  MEMORY[0x1E0C80A78](v50);
  v471 = (uint64_t)&v452 - v51;
  MEMORY[0x1E0C80A78](v52);
  v493 = (uint64_t)&v452 - v53;
  MEMORY[0x1E0C80A78](v54);
  v465 = (uint64_t)&v452 - v55;
  MEMORY[0x1E0C80A78](v56);
  v487 = (uint64_t)&v452 - v57;
  MEMORY[0x1E0C80A78](v58);
  v514 = (uint64_t)&v452 - v59;
  MEMORY[0x1E0C80A78](v60);
  v468 = (uint64_t)&v452 - v61;
  MEMORY[0x1E0C80A78](v62);
  v454 = (uint64_t)&v452 - v63;
  MEMORY[0x1E0C80A78](v64);
  v470 = (uint64_t)&v452 - v65;
  MEMORY[0x1E0C80A78](v66);
  v492 = (uint64_t)&v452 - v67;
  MEMORY[0x1E0C80A78](v68);
  v464 = (uint64_t)&v452 - v69;
  MEMORY[0x1E0C80A78](v70);
  v486 = (uint64_t)&v452 - v71;
  MEMORY[0x1E0C80A78](v72);
  v513 = (uint64_t)&v452 - v73;
  MEMORY[0x1E0C80A78](v74);
  v479 = (uint64_t)&v452 - v75;
  MEMORY[0x1E0C80A78](v76);
  v505 = (uint64_t)&v452 - v77;
  MEMORY[0x1E0C80A78](v78);
  v524 = (uint64_t)&v452 - v79;
  MEMORY[0x1E0C80A78](v80);
  v484 = (uint64_t)&v452 - v81;
  MEMORY[0x1E0C80A78](v82);
  v463 = (uint64_t)&v452 - v83;
  MEMORY[0x1E0C80A78](v84);
  v485 = (uint64_t)&v452 - v85;
  MEMORY[0x1E0C80A78](v86);
  v512 = (uint64_t)&v452 - v87;
  MEMORY[0x1E0C80A78](v88);
  v478 = (uint64_t)&v452 - v89;
  MEMORY[0x1E0C80A78](v90);
  v504 = (uint64_t *)((char *)&v452 - v91);
  MEMORY[0x1E0C80A78](v92);
  v523 = (uint64_t *)((char *)&v452 - v93);
  MEMORY[0x1E0C80A78](v94);
  v496 = (uint64_t)&v452 - v95;
  MEMORY[0x1E0C80A78](v96);
  v521 = (uint64_t)&v452 - v97;
  MEMORY[0x1E0C80A78](v98);
  v529 = (uint64_t *)((char *)&v452 - v99);
  v100 = sub_1BB86DA68();
  v101 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v525 = (char *)&v452 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v103);
  v530 = (uint64_t *)((char *)&v452 - v104);
  MEMORY[0x1E0C80A78](v105);
  v107 = (char *)&v452 - v106;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v108);
  v456 = (uint64_t)&v452 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v110);
  v458 = (uint64_t)&v452 - v111;
  MEMORY[0x1E0C80A78](v112);
  v453 = (char *)&v452 - v113;
  MEMORY[0x1E0C80A78](v114);
  v481 = (uint64_t)&v452 - v115;
  MEMORY[0x1E0C80A78](v116);
  v469 = (uint64_t)&v452 - v117;
  MEMORY[0x1E0C80A78](v118);
  v462 = (uint64_t)&v452 - v119;
  MEMORY[0x1E0C80A78](v120);
  v499 = (uint64_t)&v452 - v121;
  MEMORY[0x1E0C80A78](v122);
  v501 = (uint64_t *)((char *)&v452 - v123);
  MEMORY[0x1E0C80A78](v124);
  v477 = (uint64_t)&v452 - v125;
  MEMORY[0x1E0C80A78](v126);
  v508 = (uint64_t)&v452 - v127;
  MEMORY[0x1E0C80A78](v128);
  v467 = (uint64_t)&v452 - v129;
  MEMORY[0x1E0C80A78](v130);
  v482 = (char *)&v452 - v131;
  MEMORY[0x1E0C80A78](v132);
  v461 = (uint64_t)&v452 - v133;
  MEMORY[0x1E0C80A78](v134);
  v498 = (uint64_t)&v452 - v135;
  MEMORY[0x1E0C80A78](v136);
  v502 = (char *)&v452 - v137;
  MEMORY[0x1E0C80A78](v138);
  v476 = (uint64_t)&v452 - v139;
  MEMORY[0x1E0C80A78](v140);
  v517 = (uint64_t)&v452 - v141;
  MEMORY[0x1E0C80A78](v142);
  v515 = (uint64_t)&v452 - v143;
  MEMORY[0x1E0C80A78](v144);
  v495 = (uint64_t)&v452 - v145;
  MEMORY[0x1E0C80A78](v146);
  v522 = (uint64_t)&v452 - v147;
  MEMORY[0x1E0C80A78](v148);
  v483 = (uint64_t)&v452 - v149;
  MEMORY[0x1E0C80A78](v150);
  v500 = (uint64_t)&v452 - v151;
  MEMORY[0x1E0C80A78](v152);
  v475 = (char *)&v452 - v153;
  MEMORY[0x1E0C80A78](v154);
  v507 = (uint64_t)&v452 - v155;
  MEMORY[0x1E0C80A78](v156);
  v503 = (uint64_t)&v452 - v157;
  MEMORY[0x1E0C80A78](v158);
  v494 = (uint64_t)&v452 - v159;
  MEMORY[0x1E0C80A78](v160);
  v526 = (uint64_t)&v452 - v161;
  MEMORY[0x1E0C80A78](v162);
  v528 = (char *)&v452 - v163;
  MEMORY[0x1E0C80A78](v164);
  v516 = (char *)&v452 - v165;
  MEMORY[0x1E0C80A78](v166);
  v168 = (char *)&v452 - v167;
  MEMORY[0x1E0C80A78](v169);
  v532 = (uint64_t)&v452 - v170;
  v540 = sub_1BB86C67C();
  v535 = *(_QWORD *)(v540 - 8);
  MEMORY[0x1E0C80A78](v540);
  v172 = (char *)&v452 - ((v171 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v173);
  MEMORY[0x1E0C80A78](v174);
  MEMORY[0x1E0C80A78](v175);
  MEMORY[0x1E0C80A78](v176);
  v178 = (char *)&v452 - v177;
  MEMORY[0x1E0C80A78](v179);
  v181 = (char *)&v452 - v180;
  MEMORY[0x1E0C80A78](v182);
  MEMORY[0x1E0C80A78]((char *)&v452 - v183);
  MEMORY[0x1E0C80A78](v184);
  v186 = (char *)&v452 - v185;
  MEMORY[0x1E0C80A78](v187);
  MEMORY[0x1E0C80A78](v188);
  v190 = (char *)&v452 - v189;
  MEMORY[0x1E0C80A78](v191);
  v193 = (char *)&v452 - v192;
  MEMORY[0x1E0C80A78](v194);
  v533 = (char *)&v452 - v201;
  if (a4 >= 3.0)
  {
    v207 = v196;
    (*(void (**)(char *, _QWORD, uint64_t))(v101 + 16))(v107, v534, v100);
    v208 = (*(uint64_t (**)(char *, uint64_t))(v101 + 88))(v107, v100);
    if (v208 == *MEMORY[0x1E0DB6228])
    {
      v209 = v539;
      v210 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v529;
      sub_1BB034218(v539 + v538[9], (uint64_t)v529);
      v211 = type metadata accessor for FormatURL();
      v212 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v211 - 8) + 48);
      v213 = v212(v210, 1, v211);
      v214 = v535;
      v215 = v536;
      if (v213 == 1)
      {
        sub_1BA502AD0((uint64_t)v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v216 = *(uint64_t **)(v214 + 56);
        v217 = v168;
        v218 = 1;
LABEL_19:
        v530 = v216;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v216)(v217, v218, 1, v540);
        v250 = v527;
        sub_1BA4C2DD8(v209, v527, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v251 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v214 + 48);
        v252 = v251(v168, 1, v540);
        v253 = v538;
        if (v252 == 1)
        {
          v254 = v538;
          sub_1BA7FAB40(v537, (uint64_t)v193);
          if (v215)
          {
            sub_1BA4A2E80(v250, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v256 = (uint64_t)v168;
            return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
          }
          sub_1BA4A2E80(v250, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA502AD0((uint64_t)v168, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v534 = *(void (**)(char *, char *, uint64_t))(v535 + 32);
          v253 = v254;
          v214 = v535;
        }
        else
        {
          sub_1BA4A2E80(v250, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v534 = *(void (**)(char *, char *, uint64_t))(v214 + 32);
          v534(v193, v168, v540);
        }
        v534(v533, v193, v540);
        v267 = v521;
        sub_1BB034218(v539 + v253[24], v521);
        if (v212(v267, 1, v211) == 1)
        {
          v536 = v215;
          sub_1BA502AD0(v267, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v293 = 1;
          v294 = (uint64_t)v520;
          goto LABEL_76;
        }
        sub_1BA7FAB40(v537, (uint64_t)v528);
        v294 = (uint64_t)v520;
        if (!v215)
        {
          v536 = 0;
          sub_1BA4A2E80(v267, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v293 = 0;
          v253 = v538;
LABEL_76:
          v327 = v528;
          v328 = v540;
          v329 = v530;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v530)(v528, v293, 1, v540);
          sub_1BA4C2DD8(v539, v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          if (v251(v327, 1, v328) != 1)
          {
            sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            v333 = (uint64_t)v516;
            v335 = v540;
            v534(v516, v327, v540);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v329)(v333, 0, 1, v335);
            v277 = v532;
LABEL_201:
            v432 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v433 = v333;
LABEL_202:
            sub_1BA5D5518(v433, v277, (unint64_t *)&qword_1ED3D2E70, v432);
LABEL_203:
            v434 = v531;
            v534(v531, v533, v540);
            v435 = type metadata accessor for FormatVideoData.Assets(0);
            return sub_1BA5D5518(v277, (uint64_t)&v434[*(int *)(v435 + 20)], (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          }
          v330 = v294 + v253[21];
          v331 = v496;
          sub_1BB034218(v330, v496);
          v332 = v212(v331, 1, v211);
          v333 = (uint64_t)v516;
          if (v332 == 1)
          {
            sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            sub_1BA502AD0(v331, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
            v334 = v528;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v530)(v333, 1, 1, v540);
          }
          else
          {
            v340 = v536;
            sub_1BA7FAB40(v537, (uint64_t)v516);
            v334 = v528;
            v341 = v530;
            if (v340)
            {
              sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
              (*(void (**)(char *, uint64_t))(v214 + 8))(v533, v540);
              goto LABEL_216;
            }
            sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            sub_1BA4A2E80(v331, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v341)(v333, 0, 1, v540);
          }
          v391 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v392 = (uint64_t)v334;
LABEL_199:
          sub_1BA502AD0(v392, (unint64_t *)&qword_1ED3D2E70, v391);
          goto LABEL_200;
        }
        (*(void (**)(char *, uint64_t))(v214 + 8))(v533, v540);
        return sub_1BA4A2E80(v267, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      sub_1BA7FAB40(v537, (uint64_t)v168);
      if (!v215)
      {
        sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v216 = *(uint64_t **)(v214 + 56);
        v217 = v168;
        v218 = 0;
        goto LABEL_19;
      }
      return sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v231 = v535;
    v232 = v536;
    if (v208 != *MEMORY[0x1E0DB6238])
    {
      v534 = (void (*)(char *, char *, uint64_t))v100;
      v266 = v538;
      if (v208 != *MEMORY[0x1E0DB6240])
      {
        v289 = v101;
        v290 = v538;
        v291 = v539;
        sub_1BA7FAB40(v537, (uint64_t)v186);
        if (v232)
          return (*(uint64_t (**)(char *, void (*)(char *, char *, uint64_t)))(v289 + 8))(v107, v534);
        v321 = v186;
        v322 = *(void (**)(char *, char *, uint64_t))(v231 + 32);
        v322(v533, v321, v540);
        v323 = v484;
        sub_1BB034218(v291 + v290[21], v484);
        v324 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v324 - 8) + 48))(v323, 1, v324) == 1)
        {
          sub_1BA502AD0(v323, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v325 = 1;
          v326 = v483;
        }
        else
        {
          v326 = v483;
          sub_1BA7FAB40(v537, v483);
          sub_1BA4A2E80(v323, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v325 = 0;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v231 + 56))(v326, v325, 1, v540);
        v415 = v326;
        v416 = v532;
        sub_1BA5D5518(v415, v532, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v417 = v107;
        v277 = v416;
        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v289 + 8))(v417, v534);
        v534 = v322;
        goto LABEL_203;
      }
      v267 = v512;
      sub_1BB034218(v539 + v538[18], v512);
      v268 = type metadata accessor for FormatURL();
      v269 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v268 - 8) + 48);
      if (v269(v267, 1, v268) == 1)
      {
        sub_1BA502AD0(v267, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v270 = v535;
        v247 = v507;
        v530 = *(uint64_t **)(v535 + 56);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v530)(v507, 1, 1, v540);
        v271 = v537;
        v272 = (uint64_t)v509;
      }
      else
      {
        v247 = v507;
        v271 = v537;
        sub_1BA7FAB40(v537, v507);
        v272 = (uint64_t)v509;
        if (v232)
          return sub_1BA4A2E80(v267, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v267, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v270 = v535;
        v530 = *(uint64_t **)(v535 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v530)(v247, 0, 1, v540);
        v266 = v538;
      }
      sub_1BA4C2DD8(v539, v272, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v536 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v270 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v536)(v247, 1, v540) == 1)
      {
        v361 = v207;
        sub_1BA7FAB40(v271, v207);
        v300 = v272;
        if (v232)
        {
LABEL_116:
          sub_1BA4A2E80(v300, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v256 = v247;
          return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
        }
        sub_1BA4A2E80(v272, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v247, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v534 = *(void (**)(char *, char *, uint64_t))(v535 + 32);
        v266 = v538;
      }
      else
      {
        sub_1BA4A2E80(v272, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v362 = *(void (**)(char *, char *, uint64_t))(v270 + 32);
        v361 = v207;
        v534 = v362;
        v362((char *)v207, (char *)v247, v540);
      }
      v534(v533, (char *)v361, v540);
      v267 = v485;
      sub_1BB034218(v539 + v266[33], v485);
      if (v269(v267, 1, v268) == 1)
      {
        sub_1BA502AD0(v267, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v388 = 1;
        v389 = (uint64_t)v488;
      }
      else
      {
        sub_1BA7FAB40(v271, v500);
        v389 = (uint64_t)v488;
        if (v232)
        {
          (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
          return sub_1BA4A2E80(v267, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        sub_1BA4A2E80(v267, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v388 = 0;
        v266 = v538;
      }
      v405 = v500;
      v406 = v540;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v530)(v500, v388, 1, v540);
      sub_1BA4C2DD8(v539, v389, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v536)(v405, 1, v406) == 1)
      {
        v407 = v389 + v266[21];
        v408 = v463;
        sub_1BB034218(v407, v463);
        if (v269(v408, 1, v268) == 1)
        {
          sub_1BA4A2E80(v389, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA502AD0(v408, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v409 = 1;
          v410 = v500;
          v411 = (uint64_t)v475;
        }
        else
        {
          v411 = (uint64_t)v475;
          sub_1BA7FAB40(v271, (uint64_t)v475);
          if (v232)
          {
            sub_1BA4A2E80(v389, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
            sub_1BA4A2E80(v408, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v256 = v500;
            return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
          }
          sub_1BA4A2E80(v389, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA4A2E80(v408, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v409 = 0;
          v410 = v500;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v530)(v411, v409, 1, v540);
        sub_1BA502AD0(v410, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      }
      else
      {
        sub_1BA4A2E80(v389, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v411 = (uint64_t)v475;
        v412 = v540;
        v534(v475, (char *)v405, v540);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v530)(v411, 0, 1, v412);
      }
      v277 = v532;
      goto LABEL_230;
    }
    v210 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v523;
    sub_1BB034218(v539 + v538[15], (uint64_t)v523);
    v233 = type metadata accessor for FormatURL();
    v234 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v233 - 8) + 48);
    if (v234(v210, 1, v233) == 1)
    {
      sub_1BA502AD0((uint64_t)v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v235 = *(uint64_t **)(v231 + 56);
      v236 = v526;
      v237 = v526;
      v238 = 1;
    }
    else
    {
      v236 = v526;
      sub_1BA7FAB40(v537, v526);
      if (v232)
        return sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v235 = *(uint64_t **)(v231 + 56);
      v237 = v236;
      v238 = 0;
    }
    v273 = v540;
    v530 = v235;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v235)(v237, v238, 1, v540);
    v274 = v518;
    sub_1BA4C2DD8(v539, v518, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
    v275 = v231;
    v276 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48);
    if (v276(v236, 1, v273) == 1)
    {
      sub_1BA7FAB40(v537, (uint64_t)v190);
      if (v232)
      {
        sub_1BA4A2E80(v274, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v256 = v526;
        return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
      }
      sub_1BA4A2E80(v274, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      sub_1BA502AD0(v526, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v292 = *(void (**)(char *, uint64_t, uint64_t))(v535 + 32);
      v273 = v540;
    }
    else
    {
      sub_1BA4A2E80(v274, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v292 = *(void (**)(char *, uint64_t, uint64_t))(v275 + 32);
      v292(v190, v236, v273);
    }
    v534 = (void (*)(char *, char *, uint64_t))v292;
    v292(v533, (uint64_t)v190, v273);
    v210 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v504;
    sub_1BB034218(v539 + v538[30], (uint64_t)v504);
    v342 = v234(v210, 1, v233);
    v343 = v503;
    v344 = v530;
    if (v342 == 1)
    {
      sub_1BA502AD0((uint64_t)v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v345 = 1;
      v346 = (uint64_t)v506;
    }
    else
    {
      sub_1BA7FAB40(v537, v503);
      v346 = (uint64_t)v506;
      if (v232)
      {
        (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
        return sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v345 = 0;
    }
    v363 = v540;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v344)(v343, v345, 1, v540);
    sub_1BA4C2DD8(v539, v346, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
    if (v276(v343, 1, v363) == 1)
    {
      v364 = v478;
      sub_1BB034218(v346 + v538[21], v478);
      if (v234(v364, 1, v233) == 1)
      {
        sub_1BA4A2E80(v346, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v364, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v365 = 1;
        v333 = v494;
      }
      else
      {
        v333 = v494;
        sub_1BA7FAB40(v537, v494);
        if (v232)
        {
          sub_1BA4A2E80(v346, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
          sub_1BA4A2E80(v364, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v256 = v343;
          return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
        }
        sub_1BA4A2E80(v346, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA4A2E80(v364, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v365 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v344)(v333, v365, 1, v540);
      v391 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v392 = v343;
      goto LABEL_199;
    }
    sub_1BA4A2E80(v346, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
    v333 = v494;
    v366 = v494;
    v367 = v343;
    goto LABEL_129;
  }
  v202 = v101;
  v203 = v100;
  if (a4 >= 2.0)
  {
    v219 = v197;
    v528 = v181;
    v529 = v195;
    v220 = (char *)v530;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v101 + 16))(v530, v534, v100);
    v221 = (*(uint64_t (**)(char *, uint64_t))(v101 + 88))(v220, v100);
    v223 = v537;
    v222 = v538;
    if (v221 == *MEMORY[0x1E0DB6228])
    {
      v224 = v539;
      v225 = v524;
      sub_1BB034218(v539 + v538[8], v524);
      v226 = type metadata accessor for FormatURL();
      v530 = *(uint64_t **)(*(_QWORD *)(v226 - 8) + 48);
      v227 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v530)(v225, 1, v226);
      v228 = v536;
      if (v227 == 1)
      {
        sub_1BA502AD0(v225, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v229 = v535;
        v230 = v522;
        v529 = *(uint64_t **)(v535 + 56);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v529)(v522, 1, 1, v540);
      }
      else
      {
        v230 = v522;
        sub_1BA7FAB40(v223, v522);
        v229 = v535;
        if (v228)
          return sub_1BA4A2E80(v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v529 = *(uint64_t **)(v229 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v529)(v230, 0, 1, v540);
        v222 = v538;
      }
      v317 = v519;
      sub_1BA4C2DD8(v224, v519, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v318 = v229;
      v319 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v229 + 48);
      if (v319(v230, 1, v540) == 1)
      {
        sub_1BA7FAB40(v223, v219);
        if (v228)
        {
          sub_1BA4A2E80(v317, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          return sub_1BA502AD0(v230, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        }
        sub_1BA4A2E80(v317, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v230, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v320 = *(void (**)(uint64_t, uint64_t, uint64_t))(v535 + 32);
        v222 = v538;
      }
      else
      {
        sub_1BA4A2E80(v317, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v320 = *(void (**)(uint64_t, uint64_t, uint64_t))(v318 + 32);
        v320(v219, v230, v540);
      }
      v534 = (void (*)(char *, char *, uint64_t))v320;
      v320((uint64_t)v533, v219, v540);
      v347 = v539;
      v348 = v505;
      sub_1BB034218(v539 + v222[23], v505);
      v349 = v228;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v348, 1, v226) == 1)
      {
        sub_1BA502AD0(v348, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v350 = 1;
      }
      else
      {
        sub_1BA7FAB40(v537, v515);
        if (v228)
        {
          (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
          v302 = v348;
          return sub_1BA4A2E80(v302, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        sub_1BA4A2E80(v348, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v350 = 0;
        v222 = v538;
      }
      v368 = v515;
      v369 = v540;
      v344 = v529;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v529)(v515, v350, 1, v540);
      v370 = v347;
      v371 = v368;
      v372 = v497;
      sub_1BA4C2DD8(v370, v497, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      if (v319(v371, 1, v369) == 1)
      {
        v373 = v372 + v222[20];
        v374 = v479;
        sub_1BB034218(v373, v479);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v374, 1, v226) == 1)
        {
          sub_1BA4A2E80(v372, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA502AD0(v374, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v333 = v495;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v529)(v495, 1, 1, v540);
        }
        else
        {
          v333 = v495;
          sub_1BA7FAB40(v537, v495);
          v378 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v529;
          if (v349)
          {
            sub_1BA4A2E80(v372, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
            sub_1BA4A2E80(v374, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v256 = v371;
            return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
          }
          sub_1BA4A2E80(v372, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA4A2E80(v374, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v378(v333, 0, 1, v540);
        }
        v391 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v392 = v371;
        goto LABEL_199;
      }
      sub_1BA4A2E80(v372, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v333 = v495;
      v366 = v495;
      v367 = v371;
LABEL_129:
      v375 = v540;
      v534((char *)v366, (char *)v367, v540);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v344)(v333, 0, 1, v375);
LABEL_200:
      v277 = v532;
      goto LABEL_201;
    }
    v257 = v536;
    if (v221 == *MEMORY[0x1E0DB6238])
    {
      v258 = v539;
      v259 = v513;
      sub_1BB034218(v539 + v538[14], v513);
      v260 = type metadata accessor for FormatURL();
      v530 = *(uint64_t **)(*(_QWORD *)(v260 - 8) + 48);
      v261 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v530)(v259, 1, v260);
      v262 = v532;
      if (v261 == 1)
      {
        sub_1BA502AD0(v259, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v263 = (_QWORD *)v535;
        v264 = v517;
        v528 = *(char **)(v535 + 56);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v528)(v517, 1, 1, v540);
        v265 = (uint64_t)v510;
      }
      else
      {
        v264 = v517;
        sub_1BA7FAB40(v537, v517);
        v263 = (_QWORD *)v535;
        v265 = (uint64_t)v510;
        v302 = v259;
        if (v257)
          return sub_1BA4A2E80(v302, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v259, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v528 = (char *)v263[7];
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v528)(v264, 0, 1, v540);
        v222 = v538;
      }
      sub_1BA4C2DD8(v258, v265, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v536 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v263[6];
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v536)(v264, 1, v540) == 1)
      {
        v303 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v529;
        sub_1BA7FAB40(v537, (uint64_t)v529);
        if (v257)
        {
          sub_1BA4A2E80(v265, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v256 = v517;
          return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
        }
        sub_1BA4A2E80(v265, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v517, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v339 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v535 + 32);
        v258 = v539;
      }
      else
      {
        sub_1BA4A2E80(v265, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v339 = (void (*)(uint64_t *, uint64_t, uint64_t))v263[4];
        v303 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v529;
        v339(v529, v264, v540);
      }
      v534 = (void (*)(char *, char *, uint64_t))v339;
      v339((uint64_t *)v533, (uint64_t)v303, v540);
      v241 = v486;
      sub_1BB034218(v258 + v222[29], v486);
      v277 = v262;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v241, 1, v260) == 1)
      {
        sub_1BA502AD0(v241, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v379 = 1;
      }
      else
      {
        sub_1BA7FAB40(v537, (uint64_t)v502);
        if (v257)
          goto LABEL_224;
        sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v379 = 0;
        v222 = v538;
      }
      v380 = (uint64_t)v502;
      v381 = v540;
      v382 = v528;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v528)(v502, v379, 1, v540);
      v383 = v480;
      sub_1BA4C2DD8(v258, v480, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v536)(v380, 1, v381) != 1)
      {
        sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v387 = &v508;
LABEL_182:
        v333 = *(v387 - 32);
        v425 = v540;
        v534((char *)v333, (char *)v380, v540);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v382)(v333, 0, 1, v425);
        goto LABEL_201;
      }
      v384 = v383 + v222[20];
      v331 = v464;
      sub_1BB034218(v384, v464);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v331, 1, v260) == 1)
      {
        sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v331, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v385 = 1;
        v334 = v502;
        v386 = &v508;
LABEL_191:
        v333 = *(v386 - 32);
LABEL_192:
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v382)(v333, v385, 1, v540);
        sub_1BA502AD0((uint64_t)v334, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        goto LABEL_201;
      }
      v333 = v476;
      v413 = v257;
      sub_1BA7FAB40(v537, v476);
      v414 = (uint64_t *)&v534;
    }
    else
    {
      if (v221 != *MEMORY[0x1E0DB6240])
      {
        v310 = v538;
        v311 = v539;
        sub_1BA7FAB40(v537, (uint64_t)v178);
        if (v257)
          return (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v220, v203);
        v534 = *(void (**)(char *, char *, uint64_t))(v535 + 32);
        v534(v533, v178, v540);
        v312 = v468;
        sub_1BB034218(v311 + v310[20], v468);
        v313 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v313 - 8) + 48))(v312, 1, v313) == 1)
        {
          sub_1BA502AD0(v312, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v314 = 1;
          v315 = v535;
          v277 = v532;
          v316 = v467;
        }
        else
        {
          v316 = v467;
          sub_1BA7FAB40(v223, v467);
          v277 = v532;
          sub_1BA4A2E80(v312, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v314 = 0;
          v315 = v535;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v315 + 56))(v316, v314, 1, v540);
        v440 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v441 = v316;
        goto LABEL_239;
      }
      v225 = v492;
      sub_1BB034218(v539 + v538[17], v492);
      v284 = type metadata accessor for FormatURL();
      v530 = *(uint64_t **)(*(_QWORD *)(v284 - 8) + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v225, 1, v284) == 1)
      {
        sub_1BA502AD0(v225, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v285 = v535;
        v286 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v535 + 56);
        v287 = v498;
        v286(v498, 1, 1, v540);
        v288 = (uint64_t)v490;
      }
      else
      {
        v354 = v498;
        sub_1BA7FAB40(v223, v498);
        v285 = v535;
        v288 = (uint64_t)v490;
        if (v257)
          return sub_1BA4A2E80(v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v355 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v285 + 56);
        v355(v354, 0, 1, v540);
        v222 = v538;
        v287 = v354;
        v286 = v355;
      }
      sub_1BA4C2DD8(v539, v288, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v356 = v285;
      v357 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v285 + 48);
      if (v357(v287, 1, v540) == 1)
      {
        v358 = v528;
        sub_1BA7FAB40(v537, (uint64_t)v528);
        if (v257)
        {
          sub_1BA4A2E80(v288, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v256 = v498;
          return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
        }
        sub_1BA4A2E80(v288, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v498, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v377 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v535 + 32);
      }
      else
      {
        sub_1BA4A2E80(v288, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v377 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v356 + 32);
        v358 = v528;
        v377((uint64_t *)v528, v287, v540);
      }
      v534 = (void (*)(char *, char *, uint64_t))v377;
      v377((uint64_t *)v533, (uint64_t)v358, v540);
      v241 = v470;
      sub_1BB034218(v539 + v222[32], v470);
      v426 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v530)(v241, 1, v284);
      v277 = v532;
      if (v426 == 1)
      {
        sub_1BA502AD0(v241, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v427 = 1;
      }
      else
      {
        sub_1BA7FAB40(v537, (uint64_t)v482);
        if (v257)
          goto LABEL_224;
        sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v427 = 0;
        v222 = v538;
      }
      v428 = (uint64_t)v482;
      v429 = v540;
      v286((uint64_t)v482, v427, 1, v540);
      v383 = v466;
      sub_1BA4C2DD8(v539, v466, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      if (v357(v428, 1, v429) != 1)
      {
        sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v402 = v286;
        v333 = v461;
        v403 = v461;
        v404 = v428;
        goto LABEL_194;
      }
      v382 = (char *)v286;
      v430 = v383 + v222[20];
      v331 = v454;
      sub_1BB034218(v430, v454);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v331, 1, v284) == 1)
      {
        sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v331, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v385 = 1;
        v334 = v482;
        v386 = &v493;
        goto LABEL_191;
      }
      v333 = v461;
      v413 = v257;
      sub_1BA7FAB40(v537, v461);
      v414 = &v514;
    }
    v334 = (char *)*(v414 - 32);
    if (!v413)
    {
      sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      sub_1BA4A2E80(v331, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v385 = 0;
      goto LABEL_192;
    }
    sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
    (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
LABEL_216:
    sub_1BA4A2E80(v331, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v256 = (uint64_t)v334;
    return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
  }
  v205 = v537;
  v204 = v538;
  if (a4 < 1.0)
    return sub_1BB02C304(v537, v534, 3.0);
  v529 = v198;
  v530 = v200;
  v239 = v199;
  v220 = v525;
  (*(void (**)(char *, _QWORD, uint64_t))(v101 + 16))(v525, v534, v203);
  v240 = (*(uint64_t (**)(char *, uint64_t))(v101 + 88))(v220, v203);
  if (v240 != *MEMORY[0x1E0DB6228])
  {
    v277 = v532;
    v278 = (_QWORD *)v535;
    if (v240 == *MEMORY[0x1E0DB6238])
    {
      v279 = v493;
      sub_1BB034218(v539 + v204[13], v493);
      v280 = type metadata accessor for FormatURL();
      v530 = *(uint64_t **)(*(_QWORD *)(v280 - 8) + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v530)(v279, 1, v280) == 1)
      {
        sub_1BA502AD0(v279, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v281 = v499;
        v529 = (uint64_t *)v278[7];
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v529)(v499, 1, 1, v540);
        v282 = v536;
        v283 = (uint64_t)v491;
LABEL_100:
        sub_1BA4C2DD8(v539, v283, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v352 = v278;
        v353 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v278[6];
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v353)(v281, 1, v540) == 1)
        {
          sub_1BA7FAB40(v537, v239);
          if (v282)
          {
            sub_1BA4A2E80(v283, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v256 = v499;
            return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
          }
          v536 = v353;
          sub_1BA4A2E80(v283, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA502AD0(v499, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          v376 = *(void (**)(uint64_t, uint64_t, uint64_t))(v535 + 32);
          v204 = v538;
        }
        else
        {
          v536 = v353;
          sub_1BA4A2E80(v283, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v376 = (void (*)(uint64_t, uint64_t, uint64_t))v352[4];
          v376(v239, v281, v540);
        }
        v534 = (void (*)(char *, char *, uint64_t))v376;
        v376((uint64_t)v533, v239, v540);
        v241 = v471;
        sub_1BB034218(v539 + v204[28], v471);
        v418 = v530;
        v419 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v530)(v241, 1, v280);
        v277 = v532;
        v380 = v469;
        if (v419 == 1)
        {
          sub_1BA502AD0(v241, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v420 = 1;
          v421 = (uint64_t)v472;
LABEL_178:
          v422 = v540;
          v382 = (char *)v529;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v529)(v380, v420, 1, v540);
          sub_1BA4C2DD8(v539, v421, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v536)(v380, 1, v422) == 1)
          {
            v423 = v421 + v204[19];
            v424 = v455;
            sub_1BB034218(v423, v455);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v418)(v424, 1, v280) == 1)
            {
              sub_1BA4A2E80(v421, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
              sub_1BA502AD0(v424, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
              v333 = v462;
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v529)(v462, 1, 1, v540);
            }
            else
            {
              v333 = v462;
              sub_1BA7FAB40(v537, v462);
              v439 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v529;
              if (v282)
              {
                sub_1BA4A2E80(v421, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
                (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
                sub_1BA4A2E80(v424, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
                v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
                v256 = v380;
                return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
              }
              sub_1BA4A2E80(v421, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
              sub_1BA4A2E80(v424, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
              v439(v333, 0, 1, v540);
            }
            sub_1BA502AD0(v380, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            goto LABEL_201;
          }
          sub_1BA4A2E80(v421, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v387 = &v494;
          goto LABEL_182;
        }
        sub_1BA7FAB40(v537, v469);
        v421 = (uint64_t)v472;
        if (!v282)
        {
          sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v420 = 0;
          v204 = v538;
          goto LABEL_178;
        }
LABEL_224:
        (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
        return sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v281 = v499;
      v351 = v536;
      sub_1BA7FAB40(v537, v499);
      v282 = v351;
      v302 = v279;
      v283 = (uint64_t)v491;
      if (!v351)
      {
        sub_1BA4A2E80(v302, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v529 = (uint64_t *)v278[7];
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v529)(v281, 0, 1, v540);
        v204 = v538;
        goto LABEL_100;
      }
      return sub_1BA4A2E80(v302, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    if (v240 == *MEMORY[0x1E0DB6240])
    {
      v304 = v473;
      sub_1BB034218(v539 + v204[16], v473);
      v305 = type metadata accessor for FormatURL();
      v306 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v305 - 8) + 48);
      if (v306(v304, 1, v305) == 1)
      {
        sub_1BA502AD0(v304, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v307 = v481;
        v530 = (uint64_t *)v278[7];
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v530)(v481, 1, 1, v540);
        v308 = v536;
        v309 = (uint64_t)v474;
      }
      else
      {
        v307 = v481;
        v390 = v536;
        sub_1BA7FAB40(v537, v481);
        v308 = v390;
        v302 = v304;
        v309 = (uint64_t)v474;
        if (v390)
          return sub_1BA4A2E80(v302, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v302, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v530 = (uint64_t *)v278[7];
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v530)(v307, 0, 1, v540);
        v204 = v538;
      }
      sub_1BA4C2DD8(v539, v309, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v436 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v278[6];
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v436)(v307, 1, v540) == 1)
      {
        v437 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v529;
        sub_1BA7FAB40(v537, (uint64_t)v529);
        if (v308)
        {
          sub_1BA4A2E80(v309, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v256 = v481;
          return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
        }
        v536 = v436;
        sub_1BA4A2E80(v309, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        sub_1BA502AD0(v481, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v438 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v535 + 32);
        v204 = v538;
      }
      else
      {
        v536 = v436;
        sub_1BA4A2E80(v309, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v438 = (void (*)(uint64_t *, uint64_t, uint64_t))v278[4];
        v437 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v529;
        v438(v529, v307, v540);
      }
      v534 = (void (*)(char *, char *, uint64_t))v438;
      v438((uint64_t *)v533, (uint64_t)v437, v540);
      v241 = v459;
      sub_1BB034218(v539 + v204[31], v459);
      v442 = v306(v241, 1, v305);
      v277 = v532;
      v443 = v458;
      if (v442 == 1)
      {
        sub_1BA502AD0(v241, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v444 = 1;
        v445 = (uint64_t)v460;
      }
      else
      {
        sub_1BA7FAB40(v537, v458);
        v445 = (uint64_t)v460;
        if (v308)
          goto LABEL_224;
        sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v444 = 0;
        v204 = v538;
      }
      v446 = v540;
      v447 = v530;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v530)(v443, v444, 1, v540);
      sub_1BA4C2DD8(v539, v445, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v536)(v443, 1, v446) == 1)
      {
        v448 = v445 + v204[19];
        v449 = v452;
        sub_1BB034218(v448, v452);
        if (v306(v449, 1, v305) == 1)
        {
          sub_1BA4A2E80(v445, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA502AD0(v449, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v411 = (uint64_t)v453;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v530)(v453, 1, 1, v540);
        }
        else
        {
          v411 = (uint64_t)v453;
          sub_1BA7FAB40(v537, (uint64_t)v453);
          v451 = v530;
          if (v308)
          {
            sub_1BA4A2E80(v445, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
            sub_1BA4A2E80(v449, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v256 = v443;
            return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
          }
          sub_1BA4A2E80(v445, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          sub_1BA4A2E80(v449, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v451)(v411, 0, 1, v540);
        }
        sub_1BA502AD0(v443, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      }
      else
      {
        sub_1BA4A2E80(v445, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v411 = (uint64_t)v453;
        v450 = v540;
        v534(v453, (char *)v443, v540);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v447)(v411, 0, 1, v450);
      }
LABEL_230:
      v432 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v433 = v411;
      goto LABEL_202;
    }
    v359 = v536;
    v360 = v539;
    sub_1BA7FAB40(v537, (uint64_t)v172);
    if (v359)
      return (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v220, v203);
    v534 = (void (*)(char *, char *, uint64_t))v278[4];
    v534(v533, v172, v540);
    v393 = v360 + v538[19];
    v394 = v457;
    sub_1BB034218(v393, v457);
    v395 = type metadata accessor for FormatURL();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v395 - 8) + 48))(v394, 1, v395) == 1)
    {
      sub_1BA502AD0(v394, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v396 = 1;
      v397 = v456;
    }
    else
    {
      v397 = v456;
      sub_1BA7FAB40(v537, v456);
      sub_1BA4A2E80(v394, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v396 = 0;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v278[7])(v397, v396, 1, v540);
    v440 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v441 = v397;
LABEL_239:
    sub_1BA5D5518(v441, v277, (unint64_t *)&qword_1ED3D2E70, v440);
    (*(void (**)(char *, uint64_t))(v202 + 8))(v220, v203);
    goto LABEL_203;
  }
  v241 = v514;
  sub_1BB034218(v539 + v204[7], v514);
  v242 = type metadata accessor for FormatURL();
  v529 = *(uint64_t **)(*(_QWORD *)(v242 - 8) + 48);
  v243 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v529)(v241, 1, v242);
  v244 = v532;
  v245 = v535;
  if (v243 == 1)
  {
    sub_1BA502AD0(v241, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v246 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 56);
    v247 = v508;
    v246(v508, 1, 1, v540);
    v248 = v536;
    v249 = (uint64_t)v511;
LABEL_52:
    v536 = v246;
    sub_1BA4C2DD8(v539, v249, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
    v297 = v245;
    v298 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v245 + 48);
    if (v298(v247, 1, v540) != 1)
    {
      sub_1BA4A2E80(v249, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      v301 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v297 + 32);
      v299 = v530;
      v301(v530, v247, v540);
      goto LABEL_81;
    }
    v299 = v530;
    sub_1BA7FAB40(v537, (uint64_t)v530);
    v300 = v249;
    if (!v248)
    {
      sub_1BA4A2E80(v249, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
      sub_1BA502AD0(v247, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v301 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v535 + 32);
      v204 = v538;
LABEL_81:
      v534 = (void (*)(char *, char *, uint64_t))v301;
      v301((uint64_t *)v533, (uint64_t)v299, v540);
      v225 = v487;
      sub_1BB034218(v539 + v204[22], v487);
      v277 = v244;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v529)(v225, 1, v242) == 1)
      {
        sub_1BA502AD0(v225, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v336 = 1;
        v337 = (uint64_t)v489;
        v338 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v536;
LABEL_158:
        v398 = (uint64_t)v501;
        v399 = v540;
        v338(v501, v336, 1, v540);
        sub_1BA4C2DD8(v539, v337, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        if (v298(v398, 1, v399) == 1)
        {
          v382 = (char *)v338;
          v400 = v337 + v204[19];
          v401 = v465;
          sub_1BB034218(v400, v465);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v529)(v401, 1, v242) == 1)
          {
            sub_1BA4A2E80(v337, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            sub_1BA502AD0(v401, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
            v385 = 1;
            v334 = (char *)v501;
            v386 = (uint64_t *)&v509;
            goto LABEL_191;
          }
          v333 = v477;
          sub_1BA7FAB40(v537, v477);
          if (!v248)
          {
            sub_1BA4A2E80(v337, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
            sub_1BA4A2E80(v401, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            v385 = 0;
            v334 = (char *)v501;
            goto LABEL_192;
          }
          sub_1BA4A2E80(v337, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
          (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
          sub_1BA4A2E80(v401, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v255 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v256 = (uint64_t)v501;
          return sub_1BA502AD0(v256, (unint64_t *)&qword_1ED3D2E70, v255);
        }
        sub_1BA4A2E80(v337, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
        v402 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v338;
        v333 = v477;
        v403 = v477;
        v404 = v398;
LABEL_194:
        v431 = v540;
        v534((char *)v403, (char *)v404, v540);
        v402(v333, 0, 1, v431);
        goto LABEL_201;
      }
      sub_1BA7FAB40(v537, (uint64_t)v501);
      v337 = (uint64_t)v489;
      v338 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v536;
      if (!v248)
      {
        sub_1BA4A2E80(v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v336 = 0;
        v204 = v538;
        goto LABEL_158;
      }
      (*(void (**)(char *, uint64_t))(v535 + 8))(v533, v540);
      return sub_1BA4A2E80(v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    goto LABEL_116;
  }
  v295 = v508;
  v296 = v536;
  sub_1BA7FAB40(v205, v508);
  v248 = v296;
  v249 = (uint64_t)v511;
  if (!v296)
  {
    sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v246 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 56);
    v246(v295, 0, 1, v540);
    v204 = v538;
    v247 = v295;
    goto LABEL_52;
  }
  return sub_1BA4A2E80(v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

uint64_t sub_1BB02FBF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRemoteVideo.init(from:)(a1, a2);
}

uint64_t sub_1BB02FC0C(_QWORD *a1)
{
  return FormatRemoteVideo.encode(to:)(a1);
}

BOOL _s8NewsFeed17FormatRemoteVideoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  int *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int (*v236)(uint64_t, uint64_t, uint64_t);
  uint64_t v237;
  unsigned int (*v238)(uint64_t, uint64_t, uint64_t);
  uint64_t v239;
  uint64_t v240;
  unsigned int (*v241)(uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  int *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char v247;
  int *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned int (*v254)(uint64_t, uint64_t, uint64_t);
  uint64_t v255;
  int *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  int *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  int *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v277;
  int *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned int v283;
  uint64_t v284;
  char v285;
  int *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unsigned int (*v293)(uint64_t, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  char v296;
  int *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t v304;
  char v305;
  int *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char v313;
  int *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char v321;
  int *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char v329;
  int *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char v337;
  int *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  char v345;
  int *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char v353;
  int *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  int *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char v369;
  int *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  char v377;
  int *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char v385;
  int *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char v393;
  int *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char v401;
  int *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char v409;
  int *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char v417;
  int *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  char v425;
  int *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  char v433;
  int *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char v441;
  int *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  char v449;
  char *v450;
  uint64_t v451;
  uint64_t v452;
  int *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;

  v4 = type metadata accessor for FormatURL();
  v555 = *(_QWORD *)(v4 - 8);
  v556 = v4;
  MEMORY[0x1E0C80A78](v4);
  v553 = (uint64_t)&v450 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB042920();
  v557 = v6;
  MEMORY[0x1E0C80A78](v6);
  v501 = (uint64_t)&v450 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v500 = (uint64_t)&v450 - v9;
  MEMORY[0x1E0C80A78](v10);
  v496 = (uint64_t)&v450 - v11;
  MEMORY[0x1E0C80A78](v12);
  v492 = (uint64_t)&v450 - v13;
  MEMORY[0x1E0C80A78](v14);
  v489 = (uint64_t)&v450 - v15;
  MEMORY[0x1E0C80A78](v16);
  v486 = (uint64_t)&v450 - v17;
  MEMORY[0x1E0C80A78](v18);
  v483 = (uint64_t)&v450 - v19;
  MEMORY[0x1E0C80A78](v20);
  v479 = (uint64_t)&v450 - v21;
  MEMORY[0x1E0C80A78](v22);
  v476 = (uint64_t)&v450 - v23;
  MEMORY[0x1E0C80A78](v24);
  v472 = (uint64_t)&v450 - v25;
  MEMORY[0x1E0C80A78](v26);
  v468 = (uint64_t)&v450 - v27;
  MEMORY[0x1E0C80A78](v28);
  v464 = (uint64_t)&v450 - v29;
  MEMORY[0x1E0C80A78](v30);
  v505 = (uint64_t)&v450 - v31;
  MEMORY[0x1E0C80A78](v32);
  v510 = (uint64_t)&v450 - v33;
  MEMORY[0x1E0C80A78](v34);
  v513 = (uint64_t)&v450 - v35;
  MEMORY[0x1E0C80A78](v36);
  v517 = (uint64_t)&v450 - v37;
  MEMORY[0x1E0C80A78](v38);
  v521 = (uint64_t)&v450 - v39;
  MEMORY[0x1E0C80A78](v40);
  v525 = (uint64_t)&v450 - v41;
  MEMORY[0x1E0C80A78](v42);
  v530 = (uint64_t)&v450 - v43;
  MEMORY[0x1E0C80A78](v44);
  v533 = (uint64_t)&v450 - v45;
  MEMORY[0x1E0C80A78](v46);
  v538 = (uint64_t)&v450 - v47;
  MEMORY[0x1E0C80A78](v48);
  v542 = (uint64_t)&v450 - v49;
  MEMORY[0x1E0C80A78](v50);
  v545 = (uint64_t)&v450 - v51;
  MEMORY[0x1E0C80A78](v52);
  v547 = (uint64_t)&v450 - v53;
  MEMORY[0x1E0C80A78](v54);
  v552 = (uint64_t)&v450 - v55;
  MEMORY[0x1E0C80A78](v56);
  v554 = (uint64_t)&v450 - v57;
  MEMORY[0x1E0C80A78](v58);
  v558 = (uint64_t)&v450 - v59;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v60);
  v499 = (uint64_t)&v450 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v62);
  v497 = (uint64_t)&v450 - v63;
  MEMORY[0x1E0C80A78](v64);
  v498 = (uint64_t)&v450 - v65;
  MEMORY[0x1E0C80A78](v66);
  v495 = (uint64_t)&v450 - v67;
  MEMORY[0x1E0C80A78](v68);
  v493 = (uint64_t)&v450 - v69;
  MEMORY[0x1E0C80A78](v70);
  v494 = (uint64_t)&v450 - v71;
  MEMORY[0x1E0C80A78](v72);
  v491 = (uint64_t)&v450 - v73;
  MEMORY[0x1E0C80A78](v74);
  v488 = (uint64_t)&v450 - v75;
  MEMORY[0x1E0C80A78](v76);
  v490 = (uint64_t)&v450 - v77;
  MEMORY[0x1E0C80A78](v78);
  v487 = (uint64_t)&v450 - v79;
  MEMORY[0x1E0C80A78](v80);
  v484 = (uint64_t)&v450 - v81;
  MEMORY[0x1E0C80A78](v82);
  v485 = (uint64_t)&v450 - v83;
  MEMORY[0x1E0C80A78](v84);
  v482 = (uint64_t)&v450 - v85;
  MEMORY[0x1E0C80A78](v86);
  v480 = (uint64_t)&v450 - v87;
  MEMORY[0x1E0C80A78](v88);
  v481 = (uint64_t)&v450 - v89;
  MEMORY[0x1E0C80A78](v90);
  v92 = (char *)&v450 - v91;
  MEMORY[0x1E0C80A78](v93);
  v477 = (uint64_t)&v450 - v94;
  MEMORY[0x1E0C80A78](v95);
  v478 = (uint64_t)&v450 - v96;
  MEMORY[0x1E0C80A78](v97);
  v475 = (uint64_t)&v450 - v98;
  MEMORY[0x1E0C80A78](v99);
  v473 = (uint64_t)&v450 - v100;
  MEMORY[0x1E0C80A78](v101);
  v474 = (uint64_t)&v450 - v102;
  MEMORY[0x1E0C80A78](v103);
  v471 = (uint64_t)&v450 - v104;
  MEMORY[0x1E0C80A78](v105);
  v469 = (uint64_t)&v450 - v106;
  MEMORY[0x1E0C80A78](v107);
  v470 = (uint64_t)&v450 - v108;
  MEMORY[0x1E0C80A78](v109);
  v467 = (uint64_t)&v450 - v110;
  MEMORY[0x1E0C80A78](v111);
  v465 = (uint64_t)&v450 - v112;
  MEMORY[0x1E0C80A78](v113);
  v466 = (uint64_t)&v450 - v114;
  MEMORY[0x1E0C80A78](v115);
  v463 = (uint64_t)&v450 - v116;
  MEMORY[0x1E0C80A78](v117);
  v461 = (uint64_t)&v450 - v118;
  MEMORY[0x1E0C80A78](v119);
  v462 = (uint64_t)&v450 - v120;
  MEMORY[0x1E0C80A78](v121);
  v460 = (uint64_t)&v450 - v122;
  MEMORY[0x1E0C80A78](v123);
  v458 = (uint64_t)&v450 - v124;
  MEMORY[0x1E0C80A78](v125);
  v459 = (uint64_t)&v450 - v126;
  MEMORY[0x1E0C80A78](v127);
  v457 = (uint64_t)&v450 - v128;
  MEMORY[0x1E0C80A78](v129);
  v455 = (uint64_t)&v450 - v130;
  MEMORY[0x1E0C80A78](v131);
  v456 = (uint64_t)&v450 - v132;
  MEMORY[0x1E0C80A78](v133);
  v502 = (uint64_t)&v450 - v134;
  MEMORY[0x1E0C80A78](v135);
  v503 = (uint64_t)&v450 - v136;
  MEMORY[0x1E0C80A78](v137);
  v504 = (uint64_t)&v450 - v138;
  MEMORY[0x1E0C80A78](v139);
  v506 = (uint64_t)&v450 - v140;
  MEMORY[0x1E0C80A78](v141);
  v507 = (uint64_t)&v450 - v142;
  MEMORY[0x1E0C80A78](v143);
  v508 = (uint64_t)&v450 - v144;
  MEMORY[0x1E0C80A78](v145);
  v509 = (uint64_t)&v450 - v146;
  MEMORY[0x1E0C80A78](v147);
  v511 = (uint64_t)&v450 - v148;
  MEMORY[0x1E0C80A78](v149);
  v512 = (uint64_t)&v450 - v150;
  MEMORY[0x1E0C80A78](v151);
  v514 = (uint64_t)&v450 - v152;
  MEMORY[0x1E0C80A78](v153);
  v515 = (uint64_t)&v450 - v154;
  MEMORY[0x1E0C80A78](v155);
  v516 = (uint64_t)&v450 - v156;
  MEMORY[0x1E0C80A78](v157);
  v518 = (uint64_t)&v450 - v158;
  MEMORY[0x1E0C80A78](v159);
  v519 = (uint64_t)&v450 - v160;
  MEMORY[0x1E0C80A78](v161);
  v520 = (uint64_t)&v450 - v162;
  MEMORY[0x1E0C80A78](v163);
  v522 = (uint64_t)&v450 - v164;
  MEMORY[0x1E0C80A78](v165);
  v523 = (uint64_t)&v450 - v166;
  MEMORY[0x1E0C80A78](v167);
  v524 = (uint64_t)&v450 - v168;
  MEMORY[0x1E0C80A78](v169);
  v526 = (uint64_t)&v450 - v170;
  MEMORY[0x1E0C80A78](v171);
  v528 = (uint64_t)&v450 - v172;
  MEMORY[0x1E0C80A78](v173);
  v529 = (uint64_t)&v450 - v174;
  MEMORY[0x1E0C80A78](v175);
  v527 = (uint64_t)&v450 - v176;
  MEMORY[0x1E0C80A78](v177);
  v531 = (uint64_t)&v450 - v178;
  MEMORY[0x1E0C80A78](v179);
  v532 = (uint64_t)&v450 - v180;
  MEMORY[0x1E0C80A78](v181);
  v535 = (uint64_t)&v450 - v182;
  MEMORY[0x1E0C80A78](v183);
  v537 = (uint64_t)&v450 - v184;
  MEMORY[0x1E0C80A78](v185);
  v534 = (uint64_t)&v450 - v186;
  MEMORY[0x1E0C80A78](v187);
  v536 = (uint64_t)&v450 - v188;
  MEMORY[0x1E0C80A78](v189);
  v540 = (uint64_t)&v450 - v190;
  MEMORY[0x1E0C80A78](v191);
  v541 = (uint64_t)&v450 - v192;
  MEMORY[0x1E0C80A78](v193);
  v539 = (uint64_t)&v450 - v194;
  MEMORY[0x1E0C80A78](v195);
  v543 = (uint64_t)&v450 - v196;
  MEMORY[0x1E0C80A78](v197);
  v544 = (uint64_t)&v450 - v198;
  MEMORY[0x1E0C80A78](v199);
  v201 = (char *)&v450 - v200;
  MEMORY[0x1E0C80A78](v202);
  v549 = (uint64_t)&v450 - v203;
  MEMORY[0x1E0C80A78](v204);
  v546 = (uint64_t)&v450 - v205;
  MEMORY[0x1E0C80A78](v206);
  v548 = (uint64_t)&v450 - v207;
  MEMORY[0x1E0C80A78](v208);
  v550 = (uint64_t)&v450 - v209;
  MEMORY[0x1E0C80A78](v210);
  v551 = (uint64_t)&v450 - v211;
  MEMORY[0x1E0C80A78](v212);
  v214 = (char *)&v450 - v213;
  MEMORY[0x1E0C80A78](v215);
  v217 = (char *)&v450 - v216;
  MEMORY[0x1E0C80A78](v218);
  v220 = (char *)&v450 - v219;
  MEMORY[0x1E0C80A78](v221);
  v223 = (char *)&v450 - v222;
  MEMORY[0x1E0C80A78](v224);
  v226 = (char *)&v450 - v225;
  MEMORY[0x1E0C80A78](v227);
  v229 = (char *)&v450 - v228;
  if ((_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v454 = v92;
  v230 = (int *)type metadata accessor for FormatRemoteVideo();
  if ((_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(a1 + v230[5], a2 + v230[5]) & 1) == 0
    || (_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(a1 + v230[6], a2 + v230[6]) & 1) == 0)
  {
    return 0;
  }
  v450 = v201;
  v231 = v230[7];
  v452 = a1;
  sub_1BB034218(a1 + v231, (uint64_t)v229);
  v453 = v230;
  v232 = v230[7];
  v451 = a2;
  sub_1BB034218(a2 + v232, (uint64_t)v226);
  v233 = v558;
  v234 = v558 + *(int *)(v557 + 48);
  sub_1BB034218((uint64_t)v229, v558);
  sub_1BB034218((uint64_t)v226, v234);
  v235 = v556;
  v236 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v555 + 48);
  if (v236(v233, 1, v556) == 1)
  {
    sub_1BA502AD0((uint64_t)v226, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0((uint64_t)v229, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v236(v234, 1, v235) == 1)
    {
      v237 = v235;
      v238 = v236;
      sub_1BA502AD0(v558, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v239 = v553;
      goto LABEL_11;
    }
LABEL_9:
    v242 = v558;
LABEL_45:
    sub_1BA4A2E80(v242, (uint64_t (*)(_QWORD))sub_1BB042920);
    return 0;
  }
  sub_1BB034218(v233, (uint64_t)v223);
  v240 = v235;
  v241 = v236;
  if (v236(v234, 1, v240) == 1)
  {
    sub_1BA502AD0((uint64_t)v226, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0((uint64_t)v229, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80((uint64_t)v223, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_9;
  }
  v239 = v553;
  sub_1BB0428DC(v234, v553);
  LODWORD(v555) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v223, v239);
  sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0((uint64_t)v226, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0((uint64_t)v229, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80((uint64_t)v223, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v233, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v237 = v556;
  v238 = v241;
  if ((v555 & 1) == 0)
    return 0;
LABEL_11:
  v243 = v453;
  sub_1BB034218(v452 + v453[8], (uint64_t)v220);
  v244 = v451;
  sub_1BB034218(v451 + v243[8], (uint64_t)v217);
  v245 = v554;
  v246 = v554 + *(int *)(v557 + 48);
  sub_1BB034218((uint64_t)v220, v554);
  sub_1BB034218((uint64_t)v217, v246);
  if (v238(v245, 1, v237) == 1)
  {
    sub_1BA502AD0((uint64_t)v217, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v245 = v554;
    sub_1BA502AD0((uint64_t)v220, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v238(v246, 1, v237) == 1)
    {
      sub_1BA502AD0(v245, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  sub_1BB034218(v245, (uint64_t)v214);
  if (v238(v246, 1, v237) == 1)
  {
    sub_1BA502AD0((uint64_t)v217, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0((uint64_t)v220, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80((uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_16:
    v242 = v245;
    goto LABEL_45;
  }
  sub_1BB0428DC(v246, v239);
  v247 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v214, v239);
  sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0((uint64_t)v217, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0((uint64_t)v220, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80((uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v244 = v451;
  sub_1BA502AD0(v245, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v247 & 1) == 0)
    return 0;
LABEL_18:
  v248 = v453;
  v249 = v452;
  v250 = v551;
  sub_1BB034218(v452 + v453[9], v551);
  v251 = v550;
  sub_1BB034218(v244 + v248[9], v550);
  v252 = v552;
  v253 = v552 + *(int *)(v557 + 48);
  sub_1BB034218(v250, v552);
  sub_1BB034218(v251, v253);
  if (v238(v252, 1, v237) == 1)
  {
    v254 = v238;
    sub_1BA502AD0(v251, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v250, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v238(v253, 1, v237) == 1)
    {
      sub_1BA502AD0(v552, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  v255 = v548;
  sub_1BB034218(v252, v548);
  if (v238(v253, 1, v237) == 1)
  {
    sub_1BA502AD0(v550, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v551, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_23:
    v242 = v552;
    goto LABEL_45;
  }
  sub_1BB0428DC(v253, v239);
  LODWORD(v558) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v255, v239);
  sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v550, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v551, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v254 = v238;
  sub_1BA502AD0(v252, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v558 & 1) == 0)
    return 0;
LABEL_25:
  v256 = v453;
  v257 = v546;
  sub_1BB034218(v249 + v453[10], v546);
  v258 = v549;
  sub_1BB034218(v244 + v256[10], v549);
  v259 = v547;
  v260 = v547 + *(int *)(v557 + 48);
  sub_1BB034218(v257, v547);
  sub_1BB034218(v258, v260);
  if (v254(v259, 1, v237) == 1)
  {
    sub_1BA502AD0(v258, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v257, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v254(v260, 1, v237) == 1)
    {
      sub_1BA502AD0(v259, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  v261 = (uint64_t)v450;
  sub_1BB034218(v259, (uint64_t)v450);
  if (v254(v260, 1, v237) == 1)
  {
    sub_1BA502AD0(v549, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v257, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v261, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_30:
    v242 = v259;
    goto LABEL_45;
  }
  sub_1BB0428DC(v260, v239);
  LODWORD(v558) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v261, v239);
  sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v549, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v257, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v261, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v259, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v558 & 1) == 0)
    return 0;
LABEL_32:
  v262 = v453;
  v263 = v544;
  sub_1BB034218(v249 + v453[11], v544);
  v264 = v244 + v262[11];
  v265 = v543;
  sub_1BB034218(v264, v543);
  v266 = v545;
  v267 = v545 + *(int *)(v557 + 48);
  sub_1BB034218(v263, v545);
  sub_1BB034218(v265, v267);
  if (v254(v266, 1, v237) == 1)
  {
    sub_1BA502AD0(v265, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v266 = v545;
    sub_1BA502AD0(v263, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v254(v267, 1, v237) != 1)
    {
LABEL_44:
      v242 = v266;
      goto LABEL_45;
    }
    sub_1BA502AD0(v266, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v268 = v539;
    sub_1BB034218(v266, v539);
    if (v254(v267, 1, v237) == 1)
    {
      sub_1BA502AD0(v543, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v269 = v544;
LABEL_43:
      sub_1BA502AD0(v269, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      sub_1BA4A2E80(v268, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      goto LABEL_44;
    }
    sub_1BB0428DC(v267, v239);
    v270 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v268, v239);
    sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA502AD0(v543, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v544, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v268, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA502AD0(v266, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if ((v270 & 1) == 0)
      return 0;
  }
  v271 = v453;
  v272 = v541;
  sub_1BB034218(v249 + v453[12], v541);
  v273 = v244 + v271[12];
  v274 = v540;
  sub_1BB034218(v273, v540);
  v266 = v542;
  v275 = v542 + *(int *)(v557 + 48);
  sub_1BB034218(v272, v542);
  sub_1BB034218(v274, v275);
  if (v254(v266, 1, v237) == 1)
  {
    sub_1BA502AD0(v274, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v266 = v542;
    sub_1BA502AD0(v272, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v254(v275, 1, v237) == 1)
    {
      sub_1BA502AD0(v266, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  v268 = v536;
  sub_1BB034218(v266, v536);
  if (v254(v275, 1, v237) == 1)
  {
    sub_1BA502AD0(v540, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v269 = v541;
    goto LABEL_43;
  }
  sub_1BB0428DC(v275, v239);
  v277 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v268, v239);
  sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v540, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v541, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v268, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v266, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v277 & 1) == 0)
    return 0;
LABEL_49:
  v278 = v453;
  v279 = v534;
  sub_1BB034218(v249 + v453[13], v534);
  v280 = v537;
  sub_1BB034218(v244 + v278[13], v537);
  v281 = v538;
  v282 = v538 + *(int *)(v557 + 48);
  sub_1BB034218(v279, v538);
  sub_1BB034218(v280, v282);
  v283 = v254(v281, 1, v237);
  v284 = v535;
  if (v283 == 1)
  {
    sub_1BA502AD0(v280, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v279, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v254(v282, 1, v237) == 1)
    {
      sub_1BA502AD0(v538, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_56;
    }
    goto LABEL_54;
  }
  sub_1BB034218(v281, v535);
  if (v254(v282, 1, v237) == 1)
  {
    sub_1BA502AD0(v537, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v279, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v284, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_54:
    v242 = v538;
    goto LABEL_45;
  }
  sub_1BB0428DC(v282, v239);
  v285 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v284, v239);
  sub_1BA4A2E80(v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v537, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v279, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v284, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v538, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v285 & 1) == 0)
    return 0;
LABEL_56:
  v286 = v453;
  v287 = v249 + v453[14];
  v288 = v532;
  sub_1BB034218(v287, v532);
  v289 = v244 + v286[14];
  v290 = v531;
  sub_1BB034218(v289, v531);
  v291 = v533;
  v292 = v533 + *(int *)(v557 + 48);
  sub_1BB034218(v288, v533);
  sub_1BB034218(v290, v292);
  if (v254(v291, 1, v237) == 1)
  {
    sub_1BA502AD0(v290, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v288, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v293 = v254;
    if (v254(v292, 1, v237) == 1)
    {
      sub_1BA502AD0(v291, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  v294 = v527;
  sub_1BB034218(v291, v527);
  v293 = v254;
  if (v254(v292, 1, v237) == 1)
  {
    sub_1BA502AD0(v290, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v288, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_61:
    v242 = v291;
    goto LABEL_45;
  }
  v295 = v553;
  sub_1BB0428DC(v292, v553);
  v296 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v294, v295);
  sub_1BA4A2E80(v295, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v290, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v288, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v291, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v296 & 1) == 0)
    return 0;
LABEL_63:
  v297 = v453;
  v298 = v529;
  sub_1BB034218(v452 + v453[15], v529);
  v299 = v528;
  sub_1BB034218(v451 + v297[15], v528);
  v300 = v530;
  v301 = v530 + *(int *)(v557 + 48);
  sub_1BB034218(v298, v530);
  sub_1BB034218(v299, v301);
  if (v293(v300, 1, v556) == 1)
  {
    sub_1BA502AD0(v528, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v529, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v301, 1, v556) == 1)
    {
      sub_1BA502AD0(v530, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_70;
    }
LABEL_68:
    v302 = &v559;
LABEL_195:
    v242 = *(v302 - 32);
    goto LABEL_45;
  }
  sub_1BB034218(v530, v526);
  if (v293(v301, 1, v556) == 1)
  {
    sub_1BA502AD0(v528, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v529, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v526, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_68;
  }
  v303 = v553;
  sub_1BB0428DC(v301, v553);
  v304 = v526;
  v305 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v526, v303);
  sub_1BA4A2E80(v303, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v528, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v529, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v304, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v530, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v305 & 1) == 0)
    return 0;
LABEL_70:
  v306 = v453;
  v307 = v524;
  sub_1BB034218(v452 + v453[16], v524);
  v308 = v523;
  sub_1BB034218(v451 + v306[16], v523);
  v309 = v525;
  v310 = v525 + *(int *)(v557 + 48);
  sub_1BB034218(v307, v525);
  sub_1BB034218(v308, v310);
  if (v293(v309, 1, v556) == 1)
  {
    sub_1BA502AD0(v523, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v524, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v310, 1, v556) == 1)
    {
      sub_1BA502AD0(v525, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_77;
    }
    goto LABEL_75;
  }
  sub_1BB034218(v525, v522);
  if (v293(v310, 1, v556) == 1)
  {
    sub_1BA502AD0(v523, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v524, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v522, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_75:
    v302 = &v557;
    goto LABEL_195;
  }
  v311 = v553;
  sub_1BB0428DC(v310, v553);
  v312 = v522;
  v313 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v522, v311);
  sub_1BA4A2E80(v311, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v523, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v524, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v312, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v525, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v313 & 1) == 0)
    return 0;
LABEL_77:
  v314 = v453;
  v315 = v520;
  sub_1BB034218(v452 + v453[17], v520);
  v316 = v519;
  sub_1BB034218(v451 + v314[17], v519);
  v317 = v521;
  v318 = v521 + *(int *)(v557 + 48);
  sub_1BB034218(v315, v521);
  sub_1BB034218(v316, v318);
  if (v293(v317, 1, v556) == 1)
  {
    sub_1BA502AD0(v519, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v520, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v318, 1, v556) == 1)
    {
      sub_1BA502AD0(v521, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_84;
    }
    goto LABEL_82;
  }
  sub_1BB034218(v521, v518);
  if (v293(v318, 1, v556) == 1)
  {
    sub_1BA502AD0(v519, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v520, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v518, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_82:
    v302 = &v553;
    goto LABEL_195;
  }
  v319 = v553;
  sub_1BB0428DC(v318, v553);
  v320 = v518;
  v321 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v518, v319);
  sub_1BA4A2E80(v319, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v519, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v520, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v320, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v521, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v321 & 1) == 0)
    return 0;
LABEL_84:
  v322 = v453;
  v323 = v516;
  sub_1BB034218(v452 + v453[18], v516);
  v324 = v515;
  sub_1BB034218(v451 + v322[18], v515);
  v325 = v517;
  v326 = v517 + *(int *)(v557 + 48);
  sub_1BB034218(v323, v517);
  sub_1BB034218(v324, v326);
  if (v293(v325, 1, v556) == 1)
  {
    sub_1BA502AD0(v515, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v516, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v326, 1, v556) == 1)
    {
      sub_1BA502AD0(v517, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_91;
    }
    goto LABEL_89;
  }
  sub_1BB034218(v517, v514);
  if (v293(v326, 1, v556) == 1)
  {
    sub_1BA502AD0(v515, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v516, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v514, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_89:
    v302 = &v549;
    goto LABEL_195;
  }
  v327 = v553;
  sub_1BB0428DC(v326, v553);
  v328 = v514;
  v329 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v514, v327);
  sub_1BA4A2E80(v327, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v515, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v516, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v328, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v517, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v329 & 1) == 0)
    return 0;
LABEL_91:
  v330 = v453;
  v331 = v512;
  sub_1BB034218(v452 + v453[19], v512);
  v332 = v511;
  sub_1BB034218(v451 + v330[19], v511);
  v333 = v513;
  v334 = v513 + *(int *)(v557 + 48);
  sub_1BB034218(v331, v513);
  sub_1BB034218(v332, v334);
  if (v293(v333, 1, v556) == 1)
  {
    sub_1BA502AD0(v511, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v512, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v334, 1, v556) == 1)
    {
      sub_1BA502AD0(v513, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_98;
    }
    goto LABEL_96;
  }
  sub_1BB034218(v513, v509);
  if (v293(v334, 1, v556) == 1)
  {
    sub_1BA502AD0(v511, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v512, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v509, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_96:
    v302 = &v545;
    goto LABEL_195;
  }
  v335 = v553;
  sub_1BB0428DC(v334, v553);
  v336 = v509;
  v337 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v509, v335);
  sub_1BA4A2E80(v335, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v511, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v512, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v336, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v513, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v337 & 1) == 0)
    return 0;
LABEL_98:
  v338 = v453;
  v339 = v508;
  sub_1BB034218(v452 + v453[20], v508);
  v340 = v507;
  sub_1BB034218(v451 + v338[20], v507);
  v341 = v510;
  v342 = v510 + *(int *)(v557 + 48);
  sub_1BB034218(v339, v510);
  sub_1BB034218(v340, v342);
  if (v293(v341, 1, v556) == 1)
  {
    sub_1BA502AD0(v507, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v508, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v342, 1, v556) == 1)
    {
      sub_1BA502AD0(v510, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_105;
    }
    goto LABEL_103;
  }
  sub_1BB034218(v510, v506);
  if (v293(v342, 1, v556) == 1)
  {
    sub_1BA502AD0(v507, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v508, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v506, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_103:
    v302 = &v542;
    goto LABEL_195;
  }
  v343 = v553;
  sub_1BB0428DC(v342, v553);
  v344 = v506;
  v345 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v506, v343);
  sub_1BA4A2E80(v343, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v507, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v508, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v344, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v510, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v345 & 1) == 0)
    return 0;
LABEL_105:
  v346 = v453;
  v347 = v504;
  sub_1BB034218(v452 + v453[21], v504);
  v348 = v503;
  sub_1BB034218(v451 + v346[21], v503);
  v349 = v505;
  v350 = v505 + *(int *)(v557 + 48);
  sub_1BB034218(v347, v505);
  sub_1BB034218(v348, v350);
  if (v293(v349, 1, v556) == 1)
  {
    sub_1BA502AD0(v503, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v504, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v350, 1, v556) == 1)
    {
      sub_1BA502AD0(v505, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_112;
    }
    goto LABEL_110;
  }
  sub_1BB034218(v505, v502);
  if (v293(v350, 1, v556) == 1)
  {
    sub_1BA502AD0(v503, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v504, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v502, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_110:
    v302 = &v537;
    goto LABEL_195;
  }
  v351 = v553;
  sub_1BB0428DC(v350, v553);
  v352 = v502;
  v353 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v502, v351);
  sub_1BA4A2E80(v351, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v503, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v504, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v352, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v505, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v353 & 1) == 0)
    return 0;
LABEL_112:
  v354 = v453;
  v355 = v456;
  sub_1BB034218(v452 + v453[22], v456);
  v356 = v455;
  sub_1BB034218(v451 + v354[22], v455);
  v357 = v464;
  v358 = v464 + *(int *)(v557 + 48);
  sub_1BB034218(v355, v464);
  sub_1BB034218(v356, v358);
  if (v293(v357, 1, v556) == 1)
  {
    sub_1BA502AD0(v455, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v456, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v358, 1, v556) == 1)
    {
      sub_1BA502AD0(v464, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_119;
    }
    goto LABEL_117;
  }
  sub_1BB034218(v464, v457);
  if (v293(v358, 1, v556) == 1)
  {
    sub_1BA502AD0(v455, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v456, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v457, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_117:
    v302 = &v496;
    goto LABEL_195;
  }
  v359 = v553;
  sub_1BB0428DC(v358, v553);
  v360 = v457;
  v361 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v457, v359);
  sub_1BA4A2E80(v359, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v455, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v456, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v360, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v464, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v361 & 1) == 0)
    return 0;
LABEL_119:
  v362 = v453;
  v363 = v459;
  sub_1BB034218(v452 + v453[23], v459);
  v364 = v458;
  sub_1BB034218(v451 + v362[23], v458);
  v365 = v468;
  v366 = v468 + *(int *)(v557 + 48);
  sub_1BB034218(v363, v468);
  sub_1BB034218(v364, v366);
  if (v293(v365, 1, v556) == 1)
  {
    sub_1BA502AD0(v458, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v459, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v366, 1, v556) == 1)
    {
      sub_1BA502AD0(v468, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_126;
    }
    goto LABEL_124;
  }
  sub_1BB034218(v468, v460);
  if (v293(v366, 1, v556) == 1)
  {
    sub_1BA502AD0(v458, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v459, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v460, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_124:
    v302 = &v500;
    goto LABEL_195;
  }
  v367 = v553;
  sub_1BB0428DC(v366, v553);
  v368 = v460;
  v369 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v460, v367);
  sub_1BA4A2E80(v367, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v458, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v459, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v368, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v468, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v369 & 1) == 0)
    return 0;
LABEL_126:
  v370 = v453;
  v371 = v462;
  sub_1BB034218(v452 + v453[24], v462);
  v372 = v461;
  sub_1BB034218(v451 + v370[24], v461);
  v373 = v472;
  v374 = v472 + *(int *)(v557 + 48);
  sub_1BB034218(v371, v472);
  sub_1BB034218(v372, v374);
  if (v293(v373, 1, v556) == 1)
  {
    sub_1BA502AD0(v461, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v462, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v374, 1, v556) == 1)
    {
      sub_1BA502AD0(v472, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_133;
    }
    goto LABEL_131;
  }
  sub_1BB034218(v472, v463);
  if (v293(v374, 1, v556) == 1)
  {
    sub_1BA502AD0(v461, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v462, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v463, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_131:
    v302 = &v504;
    goto LABEL_195;
  }
  v375 = v553;
  sub_1BB0428DC(v374, v553);
  v376 = v463;
  v377 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v463, v375);
  sub_1BA4A2E80(v375, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v461, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v462, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v376, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v472, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v377 & 1) == 0)
    return 0;
LABEL_133:
  v378 = v453;
  v379 = v466;
  sub_1BB034218(v452 + v453[25], v466);
  v380 = v465;
  sub_1BB034218(v451 + v378[25], v465);
  v381 = v476;
  v382 = v476 + *(int *)(v557 + 48);
  sub_1BB034218(v379, v476);
  sub_1BB034218(v380, v382);
  if (v293(v381, 1, v556) == 1)
  {
    sub_1BA502AD0(v465, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v466, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v382, 1, v556) == 1)
    {
      sub_1BA502AD0(v476, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_140;
    }
    goto LABEL_138;
  }
  sub_1BB034218(v476, v467);
  if (v293(v382, 1, v556) == 1)
  {
    sub_1BA502AD0(v465, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v466, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v467, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_138:
    v302 = &v508;
    goto LABEL_195;
  }
  v383 = v553;
  sub_1BB0428DC(v382, v553);
  v384 = v467;
  v385 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v467, v383);
  sub_1BA4A2E80(v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v465, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v466, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v384, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v476, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v385 & 1) == 0)
    return 0;
LABEL_140:
  v386 = v453;
  v387 = v470;
  sub_1BB034218(v452 + v453[26], v470);
  v388 = v469;
  sub_1BB034218(v451 + v386[26], v469);
  v389 = v479;
  v390 = v479 + *(int *)(v557 + 48);
  sub_1BB034218(v387, v479);
  sub_1BB034218(v388, v390);
  if (v293(v389, 1, v556) == 1)
  {
    sub_1BA502AD0(v469, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v470, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v390, 1, v556) == 1)
    {
      sub_1BA502AD0(v479, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_147;
    }
    goto LABEL_145;
  }
  sub_1BB034218(v479, v471);
  if (v293(v390, 1, v556) == 1)
  {
    sub_1BA502AD0(v469, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v470, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v471, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_145:
    v302 = &v511;
    goto LABEL_195;
  }
  v391 = v553;
  sub_1BB0428DC(v390, v553);
  v392 = v471;
  v393 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v471, v391);
  sub_1BA4A2E80(v391, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v469, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v470, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v392, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v479, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v393 & 1) == 0)
    return 0;
LABEL_147:
  v394 = v453;
  v395 = v474;
  sub_1BB034218(v452 + v453[27], v474);
  v396 = v473;
  sub_1BB034218(v451 + v394[27], v473);
  v397 = v483;
  v398 = v483 + *(int *)(v557 + 48);
  sub_1BB034218(v395, v483);
  sub_1BB034218(v396, v398);
  if (v293(v397, 1, v556) == 1)
  {
    sub_1BA502AD0(v473, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v474, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v398, 1, v556) == 1)
    {
      sub_1BA502AD0(v483, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_154;
    }
    goto LABEL_152;
  }
  sub_1BB034218(v483, v475);
  if (v293(v398, 1, v556) == 1)
  {
    sub_1BA502AD0(v473, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v474, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v475, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_152:
    v302 = &v515;
    goto LABEL_195;
  }
  v399 = v553;
  sub_1BB0428DC(v398, v553);
  v400 = v475;
  v401 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v475, v399);
  sub_1BA4A2E80(v399, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v473, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v474, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v400, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v483, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v401 & 1) == 0)
    return 0;
LABEL_154:
  v402 = v453;
  v403 = v478;
  sub_1BB034218(v452 + v453[28], v478);
  v404 = v477;
  sub_1BB034218(v451 + v402[28], v477);
  v405 = v486;
  v406 = v486 + *(int *)(v557 + 48);
  sub_1BB034218(v403, v486);
  sub_1BB034218(v404, v406);
  if (v293(v405, 1, v556) == 1)
  {
    sub_1BA502AD0(v477, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v478, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v406, 1, v556) == 1)
    {
      sub_1BA502AD0(v486, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_161;
    }
    goto LABEL_159;
  }
  sub_1BB034218(v486, (uint64_t)v454);
  if (v293(v406, 1, v556) == 1)
  {
    sub_1BA502AD0(v477, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v478, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80((uint64_t)v454, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_159:
    v302 = &v518;
    goto LABEL_195;
  }
  v407 = v553;
  sub_1BB0428DC(v406, v553);
  v408 = (uint64_t)v454;
  v409 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v454, v407);
  sub_1BA4A2E80(v407, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v477, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v478, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v408, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v486, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v409 & 1) == 0)
    return 0;
LABEL_161:
  v410 = v453;
  v411 = v481;
  sub_1BB034218(v452 + v453[29], v481);
  v412 = v480;
  sub_1BB034218(v451 + v410[29], v480);
  v413 = v489;
  v414 = v489 + *(int *)(v557 + 48);
  sub_1BB034218(v411, v489);
  sub_1BB034218(v412, v414);
  if (v293(v413, 1, v556) == 1)
  {
    sub_1BA502AD0(v480, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v481, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v414, 1, v556) == 1)
    {
      sub_1BA502AD0(v489, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_168;
    }
    goto LABEL_166;
  }
  sub_1BB034218(v489, v482);
  if (v293(v414, 1, v556) == 1)
  {
    sub_1BA502AD0(v480, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v481, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v482, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_166:
    v302 = &v521;
    goto LABEL_195;
  }
  v415 = v553;
  sub_1BB0428DC(v414, v553);
  v416 = v482;
  v417 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v482, v415);
  sub_1BA4A2E80(v415, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v480, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v481, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v416, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v489, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v417 & 1) == 0)
    return 0;
LABEL_168:
  v418 = v453;
  v419 = v485;
  sub_1BB034218(v452 + v453[30], v485);
  v420 = v484;
  sub_1BB034218(v451 + v418[30], v484);
  v421 = v492;
  v422 = v492 + *(int *)(v557 + 48);
  sub_1BB034218(v419, v492);
  sub_1BB034218(v420, v422);
  if (v293(v421, 1, v556) == 1)
  {
    sub_1BA502AD0(v484, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v485, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v422, 1, v556) == 1)
    {
      sub_1BA502AD0(v492, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_175;
    }
    goto LABEL_173;
  }
  sub_1BB034218(v492, v487);
  if (v293(v422, 1, v556) == 1)
  {
    sub_1BA502AD0(v484, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v485, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v487, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_173:
    v302 = &v524;
    goto LABEL_195;
  }
  v423 = v553;
  sub_1BB0428DC(v422, v553);
  v424 = v487;
  v425 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v487, v423);
  sub_1BA4A2E80(v423, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v484, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v485, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v424, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v492, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v425 & 1) == 0)
    return 0;
LABEL_175:
  v426 = v453;
  v427 = v490;
  sub_1BB034218(v452 + v453[31], v490);
  v428 = v488;
  sub_1BB034218(v451 + v426[31], v488);
  v429 = v496;
  v430 = v496 + *(int *)(v557 + 48);
  sub_1BB034218(v427, v496);
  sub_1BB034218(v428, v430);
  if (v293(v429, 1, v556) == 1)
  {
    sub_1BA502AD0(v488, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v490, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v430, 1, v556) == 1)
    {
      sub_1BA502AD0(v496, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      goto LABEL_182;
    }
    goto LABEL_180;
  }
  sub_1BB034218(v496, v491);
  if (v293(v430, 1, v556) == 1)
  {
    sub_1BA502AD0(v488, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v490, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v491, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_180:
    v302 = &v528;
    goto LABEL_195;
  }
  v431 = v553;
  sub_1BB0428DC(v430, v553);
  v432 = v491;
  v433 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v491, v431);
  sub_1BA4A2E80(v431, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v488, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v490, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v432, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v496, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if ((v433 & 1) == 0)
    return 0;
LABEL_182:
  v434 = v453;
  v435 = v494;
  sub_1BB034218(v452 + v453[32], v494);
  v436 = v493;
  sub_1BB034218(v451 + v434[32], v493);
  v437 = v500;
  v438 = v500 + *(int *)(v557 + 48);
  sub_1BB034218(v435, v500);
  sub_1BB034218(v436, v438);
  if (v293(v437, 1, v556) != 1)
  {
    sub_1BB034218(v500, v495);
    if (v293(v438, 1, v556) != 1)
    {
      v439 = v553;
      sub_1BB0428DC(v438, v553);
      v440 = v495;
      v441 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v495, v439);
      sub_1BA4A2E80(v439, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA502AD0(v493, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      sub_1BA502AD0(v494, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      sub_1BA4A2E80(v440, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA502AD0(v500, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      if ((v441 & 1) == 0)
        return 0;
      goto LABEL_189;
    }
    sub_1BA502AD0(v493, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v494, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v495, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_187;
  }
  sub_1BA502AD0(v493, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v494, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v293(v438, 1, v556) != 1)
  {
LABEL_187:
    v302 = &v532;
    goto LABEL_195;
  }
  sub_1BA502AD0(v500, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
LABEL_189:
  v442 = v453;
  v443 = v498;
  sub_1BB034218(v452 + v453[33], v498);
  v444 = v497;
  sub_1BB034218(v451 + v442[33], v497);
  v445 = v501;
  v446 = v501 + *(int *)(v557 + 48);
  sub_1BB034218(v443, v501);
  sub_1BB034218(v444, v446);
  if (v293(v445, 1, v556) == 1)
  {
    sub_1BA502AD0(v497, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v498, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v293(v446, 1, v556) == 1)
    {
      sub_1BA502AD0(v501, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      return 1;
    }
    goto LABEL_194;
  }
  sub_1BB034218(v501, v499);
  if (v293(v446, 1, v556) == 1)
  {
    sub_1BA502AD0(v497, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA502AD0(v498, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v499, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_194:
    v302 = &v533;
    goto LABEL_195;
  }
  v447 = v553;
  sub_1BB0428DC(v446, v553);
  v448 = v499;
  v449 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v499, v447);
  sub_1BA4A2E80(v447, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v497, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA502AD0(v498, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BA4A2E80(v448, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA502AD0(v501, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  return (v449 & 1) != 0;
}

uint64_t type metadata accessor for FormatRemoteVideo()
{
  uint64_t result;

  result = qword_1ED3BB6D8;
  if (!qword_1ED3BB6D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB034218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB03426C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB034304(&qword_1EF2B9748, (uint64_t)&protocol conformance descriptor for FormatRemoteVideo);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB0342A0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB034304(&qword_1ED39FCA8, (uint64_t)&protocol conformance descriptor for FormatRemoteVideo);
  a1[2] = sub_1BB034304(&qword_1EF2B6048, (uint64_t)&protocol conformance descriptor for FormatRemoteVideo);
  result = sub_1BB034304(&qword_1EF2B9750, (uint64_t)&protocol conformance descriptor for FormatRemoteVideo);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB034304(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatRemoteVideo();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatRemoteVideo(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t *v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t *v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t *v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t *v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t *v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t *v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t *v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t *v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t *v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t *v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t *v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t *v246;
  uint64_t v247;
  int v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t *v257;
  uint64_t *v258;
  uint64_t v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t *v269;
  uint64_t *v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  uint64_t *v282;
  uint64_t v283;
  int v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  uint64_t *v294;
  uint64_t v295;
  int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t *v306;
  uint64_t v307;
  int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t *v317;
  uint64_t *v318;
  uint64_t v319;
  int v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t *v330;
  uint64_t v331;
  int v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t *v341;
  uint64_t *v342;
  uint64_t v343;
  int v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t *v353;
  uint64_t *v354;
  uint64_t v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v365;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for FormatURL();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *(_QWORD *)a2;
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(*(_QWORD *)a2, v12, v13, v14);
      *(_QWORD *)a1 = v11;
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v13;
      *(_BYTE *)(a1 + 24) = v14;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v9 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v9;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v15 = sub_1BB86C67C();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(a1 + *(int *)(v16 + 20)) = *(_QWORD *)(a2 + *(int *)(v16 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[5];
    v18 = a1 + v17;
    v19 = a2 + v17;
    v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 2)
    {
      v22 = *(_QWORD *)v19;
      v23 = *(_QWORD *)(v19 + 8);
      v24 = *(_QWORD *)(v19 + 16);
      v25 = *(_BYTE *)(v19 + 24);
      sub_1BA690C00(v22, v23, v24, v25);
      *(_QWORD *)v18 = v22;
      *(_QWORD *)(v18 + 8) = v23;
      *(_QWORD *)(v18 + 16) = v24;
      *(_BYTE *)(v18 + 24) = v25;
    }
    else
    {
      if (v20 == 1)
      {
        v21 = *(_QWORD *)(v19 + 8);
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *(_QWORD *)(v18 + 8) = v21;
        *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v26 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v18, v19, v26);
        v27 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v18 + *(int *)(v27 + 20)) = *(_QWORD *)(v19 + *(int *)(v27 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v28 = a3[6];
    v29 = a1 + v28;
    v30 = a2 + v28;
    v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      v33 = *(_QWORD *)v30;
      v34 = *(_QWORD *)(v30 + 8);
      v35 = *(_QWORD *)(v30 + 16);
      v36 = *(_BYTE *)(v30 + 24);
      sub_1BA690C00(v33, v34, v35, v36);
      *(_QWORD *)v29 = v33;
      *(_QWORD *)(v29 + 8) = v34;
      *(_QWORD *)(v29 + 16) = v35;
      *(_BYTE *)(v29 + 24) = v36;
    }
    else
    {
      if (v31 == 1)
      {
        v32 = *(_QWORD *)(v30 + 8);
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *(_QWORD *)(v29 + 8) = v32;
        *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v37 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v29, v30, v37);
        v38 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v29 + *(int *)(v38 + 20)) = *(_QWORD *)(v30 + *(int *)(v38 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v39 = a3[7];
    v40 = (uint64_t *)(a1 + v39);
    v41 = (uint64_t *)(a2 + v39);
    v365 = *(_QWORD *)(v7 - 8);
    v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v365 + 48);
    if (v42(a2 + v39, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = swift_getEnumCaseMultiPayload();
      if (v44 == 2)
      {
        v46 = *v41;
        v47 = v41[1];
        v48 = v41[2];
        v49 = *((_BYTE *)v41 + 24);
        sub_1BA690C00(v46, v47, v48, v49);
        *v40 = v46;
        v40[1] = v47;
        v40[2] = v48;
        *((_BYTE *)v40 + 24) = v49;
      }
      else
      {
        if (v44 == 1)
        {
          v45 = v41[1];
          *v40 = *v41;
          v40[1] = v45;
          v40[2] = v41[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v50 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v40, v41, v50);
          v51 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v40 + *(int *)(v51 + 20)) = *(uint64_t *)((char *)v41 + *(int *)(v51 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v40, 0, 1, v7);
    }
    v52 = a3[8];
    v53 = (uint64_t *)(a1 + v52);
    v54 = (uint64_t *)(a2 + v52);
    if (v42(a2 + v52, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v56 = swift_getEnumCaseMultiPayload();
      if (v56 == 2)
      {
        v58 = *v54;
        v59 = v54[1];
        v60 = v54[2];
        v61 = *((_BYTE *)v54 + 24);
        sub_1BA690C00(v58, v59, v60, v61);
        *v53 = v58;
        v53[1] = v59;
        v53[2] = v60;
        *((_BYTE *)v53 + 24) = v61;
      }
      else
      {
        if (v56 == 1)
        {
          v57 = v54[1];
          *v53 = *v54;
          v53[1] = v57;
          v53[2] = v54[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v62 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v53, v54, v62);
          v63 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v53 + *(int *)(v63 + 20)) = *(uint64_t *)((char *)v54 + *(int *)(v63 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v53, 0, 1, v7);
    }
    v64 = a3[9];
    v65 = (uint64_t *)(a1 + v64);
    v66 = (uint64_t *)(a2 + v64);
    if (v42(a2 + v64, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      v68 = swift_getEnumCaseMultiPayload();
      if (v68 == 2)
      {
        v70 = *v66;
        v71 = v66[1];
        v72 = v66[2];
        v73 = *((_BYTE *)v66 + 24);
        sub_1BA690C00(v70, v71, v72, v73);
        *v65 = v70;
        v65[1] = v71;
        v65[2] = v72;
        *((_BYTE *)v65 + 24) = v73;
      }
      else
      {
        if (v68 == 1)
        {
          v69 = v66[1];
          *v65 = *v66;
          v65[1] = v69;
          v65[2] = v66[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v74 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v65, v66, v74);
          v75 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v65 + *(int *)(v75 + 20)) = *(uint64_t *)((char *)v66 + *(int *)(v75 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v65, 0, 1, v7);
    }
    v76 = a3[10];
    v77 = (uint64_t *)(a1 + v76);
    v78 = (uint64_t *)(a2 + v76);
    if (v42(a2 + v76, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v80 = swift_getEnumCaseMultiPayload();
      if (v80 == 2)
      {
        v82 = *v78;
        v83 = v78[1];
        v84 = v78[2];
        v85 = *((_BYTE *)v78 + 24);
        sub_1BA690C00(v82, v83, v84, v85);
        *v77 = v82;
        v77[1] = v83;
        v77[2] = v84;
        *((_BYTE *)v77 + 24) = v85;
      }
      else
      {
        if (v80 == 1)
        {
          v81 = v78[1];
          *v77 = *v78;
          v77[1] = v81;
          v77[2] = v78[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v86 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v77, v78, v86);
          v87 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v77 + *(int *)(v87 + 20)) = *(uint64_t *)((char *)v78 + *(int *)(v87 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v77, 0, 1, v7);
    }
    v88 = a3[11];
    v89 = (uint64_t *)(a1 + v88);
    v90 = (uint64_t *)(a2 + v88);
    if (v42(a2 + v88, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      v92 = swift_getEnumCaseMultiPayload();
      if (v92 == 2)
      {
        v94 = *v90;
        v95 = v90[1];
        v96 = v90[2];
        v97 = *((_BYTE *)v90 + 24);
        sub_1BA690C00(v94, v95, v96, v97);
        *v89 = v94;
        v89[1] = v95;
        v89[2] = v96;
        *((_BYTE *)v89 + 24) = v97;
      }
      else
      {
        if (v92 == 1)
        {
          v93 = v90[1];
          *v89 = *v90;
          v89[1] = v93;
          v89[2] = v90[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v98 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v89, v90, v98);
          v99 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v89 + *(int *)(v99 + 20)) = *(uint64_t *)((char *)v90 + *(int *)(v99 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v89, 0, 1, v7);
    }
    v100 = a3[12];
    v101 = (uint64_t *)(a1 + v100);
    v102 = (uint64_t *)(a2 + v100);
    if (v42(a2 + v100, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      v104 = swift_getEnumCaseMultiPayload();
      if (v104 == 2)
      {
        v106 = *v102;
        v107 = v102[1];
        v108 = v102[2];
        v109 = *((_BYTE *)v102 + 24);
        sub_1BA690C00(v106, v107, v108, v109);
        *v101 = v106;
        v101[1] = v107;
        v101[2] = v108;
        *((_BYTE *)v101 + 24) = v109;
      }
      else
      {
        if (v104 == 1)
        {
          v105 = v102[1];
          *v101 = *v102;
          v101[1] = v105;
          v101[2] = v102[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v110 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v101, v102, v110);
          v111 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v101 + *(int *)(v111 + 20)) = *(uint64_t *)((char *)v102 + *(int *)(v111 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v101, 0, 1, v7);
    }
    v112 = a3[13];
    v113 = (uint64_t *)(a1 + v112);
    v114 = (uint64_t *)(a2 + v112);
    if (v42(a2 + v112, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
    }
    else
    {
      v116 = swift_getEnumCaseMultiPayload();
      if (v116 == 2)
      {
        v118 = *v114;
        v119 = v114[1];
        v120 = v114[2];
        v121 = *((_BYTE *)v114 + 24);
        sub_1BA690C00(v118, v119, v120, v121);
        *v113 = v118;
        v113[1] = v119;
        v113[2] = v120;
        *((_BYTE *)v113 + 24) = v121;
      }
      else
      {
        if (v116 == 1)
        {
          v117 = v114[1];
          *v113 = *v114;
          v113[1] = v117;
          v113[2] = v114[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v122 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v113, v114, v122);
          v123 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v113 + *(int *)(v123 + 20)) = *(uint64_t *)((char *)v114 + *(int *)(v123 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v113, 0, 1, v7);
    }
    v124 = a3[14];
    v125 = (uint64_t *)(a1 + v124);
    v126 = (uint64_t *)(a2 + v124);
    if (v42(a2 + v124, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    }
    else
    {
      v128 = swift_getEnumCaseMultiPayload();
      if (v128 == 2)
      {
        v130 = *v126;
        v131 = v126[1];
        v132 = v126[2];
        v133 = *((_BYTE *)v126 + 24);
        sub_1BA690C00(v130, v131, v132, v133);
        *v125 = v130;
        v125[1] = v131;
        v125[2] = v132;
        *((_BYTE *)v125 + 24) = v133;
      }
      else
      {
        if (v128 == 1)
        {
          v129 = v126[1];
          *v125 = *v126;
          v125[1] = v129;
          v125[2] = v126[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v134 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v125, v126, v134);
          v135 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v125 + *(int *)(v135 + 20)) = *(uint64_t *)((char *)v126 + *(int *)(v135 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v125, 0, 1, v7);
    }
    v136 = a3[15];
    v137 = (uint64_t *)(a1 + v136);
    v138 = (uint64_t *)(a2 + v136);
    if (v42(a2 + v136, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    }
    else
    {
      v140 = swift_getEnumCaseMultiPayload();
      if (v140 == 2)
      {
        v142 = *v138;
        v143 = v138[1];
        v144 = v138[2];
        v145 = *((_BYTE *)v138 + 24);
        sub_1BA690C00(v142, v143, v144, v145);
        *v137 = v142;
        v137[1] = v143;
        v137[2] = v144;
        *((_BYTE *)v137 + 24) = v145;
      }
      else
      {
        if (v140 == 1)
        {
          v141 = v138[1];
          *v137 = *v138;
          v137[1] = v141;
          v137[2] = v138[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v146 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v137, v138, v146);
          v147 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v137 + *(int *)(v147 + 20)) = *(uint64_t *)((char *)v138 + *(int *)(v147 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v137, 0, 1, v7);
    }
    v148 = a3[16];
    v149 = (uint64_t *)(a1 + v148);
    v150 = (uint64_t *)(a2 + v148);
    if (v42(a2 + v148, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
    else
    {
      v152 = swift_getEnumCaseMultiPayload();
      if (v152 == 2)
      {
        v154 = *v150;
        v155 = v150[1];
        v156 = v150[2];
        v157 = *((_BYTE *)v150 + 24);
        sub_1BA690C00(v154, v155, v156, v157);
        *v149 = v154;
        v149[1] = v155;
        v149[2] = v156;
        *((_BYTE *)v149 + 24) = v157;
      }
      else
      {
        if (v152 == 1)
        {
          v153 = v150[1];
          *v149 = *v150;
          v149[1] = v153;
          v149[2] = v150[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v158 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v149, v150, v158);
          v159 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v149 + *(int *)(v159 + 20)) = *(uint64_t *)((char *)v150 + *(int *)(v159 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v149, 0, 1, v7);
    }
    v160 = a3[17];
    v161 = (uint64_t *)(a1 + v160);
    v162 = (uint64_t *)(a2 + v160);
    if (v42(a2 + v160, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    }
    else
    {
      v164 = swift_getEnumCaseMultiPayload();
      if (v164 == 2)
      {
        v166 = *v162;
        v167 = v162[1];
        v168 = v162[2];
        v169 = *((_BYTE *)v162 + 24);
        sub_1BA690C00(v166, v167, v168, v169);
        *v161 = v166;
        v161[1] = v167;
        v161[2] = v168;
        *((_BYTE *)v161 + 24) = v169;
      }
      else
      {
        if (v164 == 1)
        {
          v165 = v162[1];
          *v161 = *v162;
          v161[1] = v165;
          v161[2] = v162[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v170 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v161, v162, v170);
          v171 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v161 + *(int *)(v171 + 20)) = *(uint64_t *)((char *)v162 + *(int *)(v171 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v161, 0, 1, v7);
    }
    v172 = a3[18];
    v173 = (uint64_t *)(a1 + v172);
    v174 = (uint64_t *)(a2 + v172);
    if (v42(a2 + v172, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
    }
    else
    {
      v176 = swift_getEnumCaseMultiPayload();
      if (v176 == 2)
      {
        v178 = *v174;
        v179 = v174[1];
        v180 = v174[2];
        v181 = *((_BYTE *)v174 + 24);
        sub_1BA690C00(v178, v179, v180, v181);
        *v173 = v178;
        v173[1] = v179;
        v173[2] = v180;
        *((_BYTE *)v173 + 24) = v181;
      }
      else
      {
        if (v176 == 1)
        {
          v177 = v174[1];
          *v173 = *v174;
          v173[1] = v177;
          v173[2] = v174[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v182 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v173, v174, v182);
          v183 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v173 + *(int *)(v183 + 20)) = *(uint64_t *)((char *)v174 + *(int *)(v183 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v173, 0, 1, v7);
    }
    v184 = a3[19];
    v185 = (uint64_t *)(a1 + v184);
    v186 = (uint64_t *)(a2 + v184);
    if (v42(a2 + v184, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
    }
    else
    {
      v188 = swift_getEnumCaseMultiPayload();
      if (v188 == 2)
      {
        v190 = *v186;
        v191 = v186[1];
        v192 = v186[2];
        v193 = *((_BYTE *)v186 + 24);
        sub_1BA690C00(v190, v191, v192, v193);
        *v185 = v190;
        v185[1] = v191;
        v185[2] = v192;
        *((_BYTE *)v185 + 24) = v193;
      }
      else
      {
        if (v188 == 1)
        {
          v189 = v186[1];
          *v185 = *v186;
          v185[1] = v189;
          v185[2] = v186[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v194 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v185, v186, v194);
          v195 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v185 + *(int *)(v195 + 20)) = *(uint64_t *)((char *)v186 + *(int *)(v195 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v185, 0, 1, v7);
    }
    v196 = a3[20];
    v197 = (uint64_t *)(a1 + v196);
    v198 = (uint64_t *)(a2 + v196);
    if (v42(a2 + v196, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
    }
    else
    {
      v200 = swift_getEnumCaseMultiPayload();
      if (v200 == 2)
      {
        v202 = *v198;
        v203 = v198[1];
        v204 = v198[2];
        v205 = *((_BYTE *)v198 + 24);
        sub_1BA690C00(v202, v203, v204, v205);
        *v197 = v202;
        v197[1] = v203;
        v197[2] = v204;
        *((_BYTE *)v197 + 24) = v205;
      }
      else
      {
        if (v200 == 1)
        {
          v201 = v198[1];
          *v197 = *v198;
          v197[1] = v201;
          v197[2] = v198[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v206 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v197, v198, v206);
          v207 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v197 + *(int *)(v207 + 20)) = *(uint64_t *)((char *)v198 + *(int *)(v207 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v197, 0, 1, v7);
    }
    v208 = a3[21];
    v209 = (uint64_t *)(a1 + v208);
    v210 = (uint64_t *)(a2 + v208);
    if (v42(a2 + v208, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
    }
    else
    {
      v212 = swift_getEnumCaseMultiPayload();
      if (v212 == 2)
      {
        v214 = *v210;
        v215 = v210[1];
        v216 = v210[2];
        v217 = *((_BYTE *)v210 + 24);
        sub_1BA690C00(v214, v215, v216, v217);
        *v209 = v214;
        v209[1] = v215;
        v209[2] = v216;
        *((_BYTE *)v209 + 24) = v217;
      }
      else
      {
        if (v212 == 1)
        {
          v213 = v210[1];
          *v209 = *v210;
          v209[1] = v213;
          v209[2] = v210[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v218 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v209, v210, v218);
          v219 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v209 + *(int *)(v219 + 20)) = *(uint64_t *)((char *)v210 + *(int *)(v219 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v209, 0, 1, v7);
    }
    v220 = a3[22];
    v221 = (uint64_t *)(a1 + v220);
    v222 = (uint64_t *)(a2 + v220);
    if (v42(a2 + v220, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
    }
    else
    {
      v224 = swift_getEnumCaseMultiPayload();
      if (v224 == 2)
      {
        v226 = *v222;
        v227 = v222[1];
        v228 = v222[2];
        v229 = *((_BYTE *)v222 + 24);
        sub_1BA690C00(v226, v227, v228, v229);
        *v221 = v226;
        v221[1] = v227;
        v221[2] = v228;
        *((_BYTE *)v221 + 24) = v229;
      }
      else
      {
        if (v224 == 1)
        {
          v225 = v222[1];
          *v221 = *v222;
          v221[1] = v225;
          v221[2] = v222[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v230 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v221, v222, v230);
          v231 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v221 + *(int *)(v231 + 20)) = *(uint64_t *)((char *)v222 + *(int *)(v231 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v221, 0, 1, v7);
    }
    v232 = a3[23];
    v233 = (uint64_t *)(a1 + v232);
    v234 = (uint64_t *)(a2 + v232);
    if (v42(a2 + v232, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
    }
    else
    {
      v236 = swift_getEnumCaseMultiPayload();
      if (v236 == 2)
      {
        v238 = *v234;
        v239 = v234[1];
        v240 = v234[2];
        v241 = *((_BYTE *)v234 + 24);
        sub_1BA690C00(v238, v239, v240, v241);
        *v233 = v238;
        v233[1] = v239;
        v233[2] = v240;
        *((_BYTE *)v233 + 24) = v241;
      }
      else
      {
        if (v236 == 1)
        {
          v237 = v234[1];
          *v233 = *v234;
          v233[1] = v237;
          v233[2] = v234[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v242 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v233, v234, v242);
          v243 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v233 + *(int *)(v243 + 20)) = *(uint64_t *)((char *)v234 + *(int *)(v243 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v233, 0, 1, v7);
    }
    v244 = a3[24];
    v245 = (uint64_t *)(a1 + v244);
    v246 = (uint64_t *)(a2 + v244);
    if (v42(a2 + v244, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
    }
    else
    {
      v248 = swift_getEnumCaseMultiPayload();
      if (v248 == 2)
      {
        v250 = *v246;
        v251 = v246[1];
        v252 = v246[2];
        v253 = *((_BYTE *)v246 + 24);
        sub_1BA690C00(v250, v251, v252, v253);
        *v245 = v250;
        v245[1] = v251;
        v245[2] = v252;
        *((_BYTE *)v245 + 24) = v253;
      }
      else
      {
        if (v248 == 1)
        {
          v249 = v246[1];
          *v245 = *v246;
          v245[1] = v249;
          v245[2] = v246[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v254 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v245, v246, v254);
          v255 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v245 + *(int *)(v255 + 20)) = *(uint64_t *)((char *)v246 + *(int *)(v255 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v245, 0, 1, v7);
    }
    v256 = a3[25];
    v257 = (uint64_t *)(a1 + v256);
    v258 = (uint64_t *)(a2 + v256);
    if (v42(a2 + v256, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
    }
    else
    {
      v260 = swift_getEnumCaseMultiPayload();
      if (v260 == 2)
      {
        v262 = *v258;
        v263 = v258[1];
        v264 = v258[2];
        v265 = *((_BYTE *)v258 + 24);
        sub_1BA690C00(v262, v263, v264, v265);
        *v257 = v262;
        v257[1] = v263;
        v257[2] = v264;
        *((_BYTE *)v257 + 24) = v265;
      }
      else
      {
        if (v260 == 1)
        {
          v261 = v258[1];
          *v257 = *v258;
          v257[1] = v261;
          v257[2] = v258[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v266 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v266 - 8) + 16))(v257, v258, v266);
          v267 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v257 + *(int *)(v267 + 20)) = *(uint64_t *)((char *)v258 + *(int *)(v267 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v257, 0, 1, v7);
    }
    v268 = a3[26];
    v269 = (uint64_t *)(a1 + v268);
    v270 = (uint64_t *)(a2 + v268);
    if (v42(a2 + v268, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
    }
    else
    {
      v272 = swift_getEnumCaseMultiPayload();
      if (v272 == 2)
      {
        v274 = *v270;
        v275 = v270[1];
        v276 = v270[2];
        v277 = *((_BYTE *)v270 + 24);
        sub_1BA690C00(v274, v275, v276, v277);
        *v269 = v274;
        v269[1] = v275;
        v269[2] = v276;
        *((_BYTE *)v269 + 24) = v277;
      }
      else
      {
        if (v272 == 1)
        {
          v273 = v270[1];
          *v269 = *v270;
          v269[1] = v273;
          v269[2] = v270[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v278 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v278 - 8) + 16))(v269, v270, v278);
          v279 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v269 + *(int *)(v279 + 20)) = *(uint64_t *)((char *)v270 + *(int *)(v279 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v269, 0, 1, v7);
    }
    v280 = a3[27];
    v281 = (uint64_t *)(a1 + v280);
    v282 = (uint64_t *)(a2 + v280);
    if (v42(a2 + v280, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
    }
    else
    {
      v284 = swift_getEnumCaseMultiPayload();
      if (v284 == 2)
      {
        v286 = *v282;
        v287 = v282[1];
        v288 = v282[2];
        v289 = *((_BYTE *)v282 + 24);
        sub_1BA690C00(v286, v287, v288, v289);
        *v281 = v286;
        v281[1] = v287;
        v281[2] = v288;
        *((_BYTE *)v281 + 24) = v289;
      }
      else
      {
        if (v284 == 1)
        {
          v285 = v282[1];
          *v281 = *v282;
          v281[1] = v285;
          v281[2] = v282[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v290 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v281, v282, v290);
          v291 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v281 + *(int *)(v291 + 20)) = *(uint64_t *)((char *)v282 + *(int *)(v291 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v281, 0, 1, v7);
    }
    v292 = a3[28];
    v293 = (uint64_t *)(a1 + v292);
    v294 = (uint64_t *)(a2 + v292);
    if (v42(a2 + v292, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
    }
    else
    {
      v296 = swift_getEnumCaseMultiPayload();
      if (v296 == 2)
      {
        v298 = *v294;
        v299 = v294[1];
        v300 = v294[2];
        v301 = *((_BYTE *)v294 + 24);
        sub_1BA690C00(v298, v299, v300, v301);
        *v293 = v298;
        v293[1] = v299;
        v293[2] = v300;
        *((_BYTE *)v293 + 24) = v301;
      }
      else
      {
        if (v296 == 1)
        {
          v297 = v294[1];
          *v293 = *v294;
          v293[1] = v297;
          v293[2] = v294[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v302 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(v293, v294, v302);
          v303 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v293 + *(int *)(v303 + 20)) = *(uint64_t *)((char *)v294 + *(int *)(v303 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v293, 0, 1, v7);
    }
    v304 = a3[29];
    v305 = (uint64_t *)(a1 + v304);
    v306 = (uint64_t *)(a2 + v304);
    if (v42(a2 + v304, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v305, v306, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
    }
    else
    {
      v308 = swift_getEnumCaseMultiPayload();
      if (v308 == 2)
      {
        v310 = *v306;
        v311 = v306[1];
        v312 = v306[2];
        v313 = *((_BYTE *)v306 + 24);
        sub_1BA690C00(v310, v311, v312, v313);
        *v305 = v310;
        v305[1] = v311;
        v305[2] = v312;
        *((_BYTE *)v305 + 24) = v313;
      }
      else
      {
        if (v308 == 1)
        {
          v309 = v306[1];
          *v305 = *v306;
          v305[1] = v309;
          v305[2] = v306[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v314 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v305, v306, v314);
          v315 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v305 + *(int *)(v315 + 20)) = *(uint64_t *)((char *)v306 + *(int *)(v315 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v305, 0, 1, v7);
    }
    v316 = a3[30];
    v317 = (uint64_t *)(a1 + v316);
    v318 = (uint64_t *)(a2 + v316);
    if (v42(a2 + v316, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v317, v318, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
    }
    else
    {
      v320 = swift_getEnumCaseMultiPayload();
      if (v320 == 2)
      {
        v322 = *v318;
        v323 = v318[1];
        v324 = v318[2];
        v325 = *((_BYTE *)v318 + 24);
        sub_1BA690C00(v322, v323, v324, v325);
        *v317 = v322;
        v317[1] = v323;
        v317[2] = v324;
        *((_BYTE *)v317 + 24) = v325;
      }
      else
      {
        if (v320 == 1)
        {
          v321 = v318[1];
          *v317 = *v318;
          v317[1] = v321;
          v317[2] = v318[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v326 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v317, v318, v326);
          v327 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v317 + *(int *)(v327 + 20)) = *(uint64_t *)((char *)v318 + *(int *)(v327 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v317, 0, 1, v7);
    }
    v328 = a3[31];
    v329 = (uint64_t *)(a1 + v328);
    v330 = (uint64_t *)(a2 + v328);
    if (v42(a2 + v328, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v329, v330, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
    }
    else
    {
      v332 = swift_getEnumCaseMultiPayload();
      if (v332 == 2)
      {
        v334 = *v330;
        v335 = v330[1];
        v336 = v330[2];
        v337 = *((_BYTE *)v330 + 24);
        sub_1BA690C00(v334, v335, v336, v337);
        *v329 = v334;
        v329[1] = v335;
        v329[2] = v336;
        *((_BYTE *)v329 + 24) = v337;
      }
      else
      {
        if (v332 == 1)
        {
          v333 = v330[1];
          *v329 = *v330;
          v329[1] = v333;
          v329[2] = v330[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v338 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v329, v330, v338);
          v339 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v329 + *(int *)(v339 + 20)) = *(uint64_t *)((char *)v330 + *(int *)(v339 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v329, 0, 1, v7);
    }
    v340 = a3[32];
    v341 = (uint64_t *)(a1 + v340);
    v342 = (uint64_t *)(a2 + v340);
    if (v42(a2 + v340, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v341, v342, *(_QWORD *)(*(_QWORD *)(v343 - 8) + 64));
    }
    else
    {
      v344 = swift_getEnumCaseMultiPayload();
      if (v344 == 2)
      {
        v346 = *v342;
        v347 = v342[1];
        v348 = v342[2];
        v349 = *((_BYTE *)v342 + 24);
        sub_1BA690C00(v346, v347, v348, v349);
        *v341 = v346;
        v341[1] = v347;
        v341[2] = v348;
        *((_BYTE *)v341 + 24) = v349;
      }
      else
      {
        if (v344 == 1)
        {
          v345 = v342[1];
          *v341 = *v342;
          v341[1] = v345;
          v341[2] = v342[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v350 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v341, v342, v350);
          v351 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v341 + *(int *)(v351 + 20)) = *(uint64_t *)((char *)v342 + *(int *)(v351 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v341, 0, 1, v7);
    }
    v352 = a3[33];
    v353 = (uint64_t *)(a1 + v352);
    v354 = (uint64_t *)(a2 + v352);
    if (v42((uint64_t)v354, 1, v7))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v353, v354, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
    }
    else
    {
      v356 = swift_getEnumCaseMultiPayload();
      if (v356 == 2)
      {
        v358 = *v354;
        v359 = v354[1];
        v360 = v354[2];
        v361 = *((_BYTE *)v354 + 24);
        sub_1BA690C00(v358, v359, v360, v361);
        *v353 = v358;
        v353[1] = v359;
        v353[2] = v360;
        *((_BYTE *)v353 + 24) = v361;
      }
      else
      {
        if (v356 == 1)
        {
          v357 = v354[1];
          *v353 = *v354;
          v353[1] = v357;
          v353[2] = v354[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v362 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v353, v354, v362);
          v363 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v353 + *(int *)(v363 + 20)) = *(uint64_t *)((char *)v354 + *(int *)(v363 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v353, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatRemoteVideo(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;

  v4 = type metadata accessor for FormatURL();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_8;
      v6 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_8:
  v7 = a1 + a2[5];
  v8 = swift_getEnumCaseMultiPayload();
  if (v8 == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
  }
  else
  {
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v8)
        goto LABEL_15;
      v9 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  v10 = a1 + a2[6];
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_BYTE *)(v10 + 24));
  }
  else
  {
    if (v11 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11)
        goto LABEL_22;
      v12 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  v13 = a1 + a2[7];
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v14(v13, 1, v4))
  {
    v42 = swift_getEnumCaseMultiPayload();
    switch(v42)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_BYTE *)(v13 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v43 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v13, v43);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v15 = a1 + a2[8];
  if (!v14(v15, 1, v4))
  {
    v44 = swift_getEnumCaseMultiPayload();
    switch(v44)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_BYTE *)(v15 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v45 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v15, v45);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v16 = a1 + a2[9];
  if (!v14(v16, 1, v4))
  {
    v46 = swift_getEnumCaseMultiPayload();
    switch(v46)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), *(_BYTE *)(v16 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v47 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v16, v47);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v17 = a1 + a2[10];
  if (!v14(v17, 1, v4))
  {
    v48 = swift_getEnumCaseMultiPayload();
    switch(v48)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_BYTE *)(v17 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v49 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v17, v49);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v18 = a1 + a2[11];
  if (!v14(v18, 1, v4))
  {
    v50 = swift_getEnumCaseMultiPayload();
    switch(v50)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_BYTE *)(v18 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v51 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v18, v51);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v19 = a1 + a2[12];
  if (!v14(v19, 1, v4))
  {
    v52 = swift_getEnumCaseMultiPayload();
    switch(v52)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_QWORD *)(v19 + 16), *(_BYTE *)(v19 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v53 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v19, v53);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v20 = a1 + a2[13];
  if (!v14(v20, 1, v4))
  {
    v54 = swift_getEnumCaseMultiPayload();
    switch(v54)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_QWORD *)(v20 + 16), *(_BYTE *)(v20 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v55 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v20, v55);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v21 = a1 + a2[14];
  if (!v14(v21, 1, v4))
  {
    v56 = swift_getEnumCaseMultiPayload();
    switch(v56)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16), *(_BYTE *)(v21 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v57 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v21, v57);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v22 = a1 + a2[15];
  if (!v14(v22, 1, v4))
  {
    v58 = swift_getEnumCaseMultiPayload();
    switch(v58)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_QWORD *)(v22 + 16), *(_BYTE *)(v22 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v59 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v22, v59);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v23 = a1 + a2[16];
  if (!v14(v23, 1, v4))
  {
    v60 = swift_getEnumCaseMultiPayload();
    switch(v60)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(_BYTE *)(v23 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v61 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v23, v61);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v24 = a1 + a2[17];
  if (!v14(v24, 1, v4))
  {
    v62 = swift_getEnumCaseMultiPayload();
    switch(v62)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_BYTE *)(v24 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v63 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v24, v63);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v25 = a1 + a2[18];
  if (!v14(v25, 1, v4))
  {
    v64 = swift_getEnumCaseMultiPayload();
    switch(v64)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(_QWORD *)(v25 + 16), *(_BYTE *)(v25 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v65 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v25, v65);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v26 = a1 + a2[19];
  if (!v14(v26, 1, v4))
  {
    v66 = swift_getEnumCaseMultiPayload();
    switch(v66)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v26, *(_QWORD *)(v26 + 8), *(_QWORD *)(v26 + 16), *(_BYTE *)(v26 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v67 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v26, v67);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v27 = a1 + a2[20];
  if (!v14(v27, 1, v4))
  {
    v68 = swift_getEnumCaseMultiPayload();
    switch(v68)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v27, *(_QWORD *)(v27 + 8), *(_QWORD *)(v27 + 16), *(_BYTE *)(v27 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v69 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v27, v69);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v28 = a1 + a2[21];
  if (!v14(v28, 1, v4))
  {
    v70 = swift_getEnumCaseMultiPayload();
    switch(v70)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v28, *(_QWORD *)(v28 + 8), *(_QWORD *)(v28 + 16), *(_BYTE *)(v28 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v71 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v28, v71);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v29 = a1 + a2[22];
  if (!v14(v29, 1, v4))
  {
    v72 = swift_getEnumCaseMultiPayload();
    switch(v72)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v29, *(_QWORD *)(v29 + 8), *(_QWORD *)(v29 + 16), *(_BYTE *)(v29 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v73 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v29, v73);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v30 = a1 + a2[23];
  if (!v14(v30, 1, v4))
  {
    v74 = swift_getEnumCaseMultiPayload();
    switch(v74)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v30, *(_QWORD *)(v30 + 8), *(_QWORD *)(v30 + 16), *(_BYTE *)(v30 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v75 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v30, v75);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v31 = a1 + a2[24];
  if (!v14(v31, 1, v4))
  {
    v76 = swift_getEnumCaseMultiPayload();
    switch(v76)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v31, *(_QWORD *)(v31 + 8), *(_QWORD *)(v31 + 16), *(_BYTE *)(v31 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v77 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v31, v77);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v32 = a1 + a2[25];
  if (!v14(v32, 1, v4))
  {
    v78 = swift_getEnumCaseMultiPayload();
    switch(v78)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v32, *(_QWORD *)(v32 + 8), *(_QWORD *)(v32 + 16), *(_BYTE *)(v32 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v79 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v32, v79);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v33 = a1 + a2[26];
  if (!v14(v33, 1, v4))
  {
    v80 = swift_getEnumCaseMultiPayload();
    switch(v80)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v33, *(_QWORD *)(v33 + 8), *(_QWORD *)(v33 + 16), *(_BYTE *)(v33 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v81 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8))(v33, v81);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v34 = a1 + a2[27];
  if (!v14(v34, 1, v4))
  {
    v82 = swift_getEnumCaseMultiPayload();
    switch(v82)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v34, *(_QWORD *)(v34 + 8), *(_QWORD *)(v34 + 16), *(_BYTE *)(v34 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v83 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v34, v83);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v35 = a1 + a2[28];
  if (!v14(v35, 1, v4))
  {
    v84 = swift_getEnumCaseMultiPayload();
    switch(v84)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v35, *(_QWORD *)(v35 + 8), *(_QWORD *)(v35 + 16), *(_BYTE *)(v35 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v85 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v35, v85);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v36 = a1 + a2[29];
  if (!v14(v36, 1, v4))
  {
    v86 = swift_getEnumCaseMultiPayload();
    switch(v86)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v36, *(_QWORD *)(v36 + 8), *(_QWORD *)(v36 + 16), *(_BYTE *)(v36 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v87 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v36, v87);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v37 = a1 + a2[30];
  if (!v14(v37, 1, v4))
  {
    v88 = swift_getEnumCaseMultiPayload();
    switch(v88)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v37, *(_QWORD *)(v37 + 8), *(_QWORD *)(v37 + 16), *(_BYTE *)(v37 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v89 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 8))(v37, v89);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v38 = a1 + a2[31];
  if (!v14(v38, 1, v4))
  {
    v90 = swift_getEnumCaseMultiPayload();
    switch(v90)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v38, *(_QWORD *)(v38 + 8), *(_QWORD *)(v38 + 16), *(_BYTE *)(v38 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v91 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v38, v91);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v39 = a1 + a2[32];
  if (!v14(v39, 1, v4))
  {
    v92 = swift_getEnumCaseMultiPayload();
    switch(v92)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v39, *(_QWORD *)(v39 + 8), *(_QWORD *)(v39 + 16), *(_BYTE *)(v39 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v93 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v39, v93);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v40 = a1 + a2[33];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v40, 1, v4);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2)
      return sub_1BA5A7EF8(*(_QWORD *)v40, *(_QWORD *)(v40 + 8), *(_QWORD *)(v40 + 16), *(_BYTE *)(v40 + 24));
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((_DWORD)result)
        return result;
      v94 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 8))(v40, v94);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatRemoteVideo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t *v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t *v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t *v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t *v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t *v208;
  uint64_t *v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t *v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t *v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t *v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t *v256;
  uint64_t *v257;
  uint64_t v258;
  int v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t *v269;
  uint64_t v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t *v281;
  uint64_t v282;
  int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t *v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t *v304;
  uint64_t *v305;
  uint64_t v306;
  int v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t *v316;
  uint64_t *v317;
  uint64_t v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t *v328;
  uint64_t *v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t *v340;
  uint64_t *v341;
  uint64_t v342;
  int v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t *v352;
  uint64_t *v353;
  uint64_t v354;
  int v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v364;

  v6 = type metadata accessor for FormatURL();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_BYTE *)(a2 + 24);
    sub_1BA690C00(*(_QWORD *)a2, v10, v11, v12);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 24) = v12;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(a1 + *(int *)(v14 + 20)) = *(_QWORD *)(a2 + *(int *)(v14 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[5];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 2)
  {
    v20 = *(_QWORD *)v17;
    v21 = *(_QWORD *)(v17 + 8);
    v22 = *(_QWORD *)(v17 + 16);
    v23 = *(_BYTE *)(v17 + 24);
    sub_1BA690C00(v20, v21, v22, v23);
    *(_QWORD *)v16 = v20;
    *(_QWORD *)(v16 + 8) = v21;
    *(_QWORD *)(v16 + 16) = v22;
    *(_BYTE *)(v16 + 24) = v23;
  }
  else
  {
    if (v18 == 1)
    {
      v19 = *(_QWORD *)(v17 + 8);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = v19;
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v16, v17, v24);
      v25 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(v16 + *(int *)(v25 + 20)) = *(_QWORD *)(v17 + *(int *)(v25 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v26 = a3[6];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = swift_getEnumCaseMultiPayload();
  if (v29 == 2)
  {
    v31 = *(_QWORD *)v28;
    v32 = *(_QWORD *)(v28 + 8);
    v33 = *(_QWORD *)(v28 + 16);
    v34 = *(_BYTE *)(v28 + 24);
    sub_1BA690C00(v31, v32, v33, v34);
    *(_QWORD *)v27 = v31;
    *(_QWORD *)(v27 + 8) = v32;
    *(_QWORD *)(v27 + 16) = v33;
    *(_BYTE *)(v27 + 24) = v34;
  }
  else
  {
    if (v29 == 1)
    {
      v30 = *(_QWORD *)(v28 + 8);
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *(_QWORD *)(v27 + 8) = v30;
      *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v27, v28, v35);
      v36 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(v27 + *(int *)(v36 + 20)) = *(_QWORD *)(v28 + *(int *)(v36 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v37 = a3[7];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  v364 = v40;
  if (v41(a2 + v37, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      v45 = *v39;
      v46 = v39[1];
      v47 = v39[2];
      v48 = *((_BYTE *)v39 + 24);
      sub_1BA690C00(v45, v46, v47, v48);
      *v38 = v45;
      v38[1] = v46;
      v40 = v364;
      v38[2] = v47;
      *((_BYTE *)v38 + 24) = v48;
    }
    else
    {
      if (v43 == 1)
      {
        v44 = v39[1];
        *v38 = *v39;
        v38[1] = v44;
        v38[2] = v39[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v49 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v38, v39, v49);
        v50 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v38 + *(int *)(v50 + 20)) = *(uint64_t *)((char *)v39 + *(int *)(v50 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v6);
  }
  v51 = a3[8];
  v52 = (uint64_t *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  if (v41(a2 + v51, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v55 = swift_getEnumCaseMultiPayload();
    if (v55 == 2)
    {
      v57 = *v53;
      v58 = v53[1];
      v59 = v53[2];
      v60 = *((_BYTE *)v53 + 24);
      sub_1BA690C00(v57, v58, v59, v60);
      *v52 = v57;
      v52[1] = v58;
      v40 = v364;
      v52[2] = v59;
      *((_BYTE *)v52 + 24) = v60;
    }
    else
    {
      if (v55 == 1)
      {
        v56 = v53[1];
        *v52 = *v53;
        v52[1] = v56;
        v52[2] = v53[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v61 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v52, v53, v61);
        v62 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v52 + *(int *)(v62 + 20)) = *(uint64_t *)((char *)v53 + *(int *)(v62 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v6);
  }
  v63 = a3[9];
  v64 = (uint64_t *)(a1 + v63);
  v65 = (uint64_t *)(a2 + v63);
  if (v41(a2 + v63, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v67 = swift_getEnumCaseMultiPayload();
    if (v67 == 2)
    {
      v69 = *v65;
      v70 = v65[1];
      v71 = v65[2];
      v72 = *((_BYTE *)v65 + 24);
      sub_1BA690C00(v69, v70, v71, v72);
      *v64 = v69;
      v64[1] = v70;
      v40 = v364;
      v64[2] = v71;
      *((_BYTE *)v64 + 24) = v72;
    }
    else
    {
      if (v67 == 1)
      {
        v68 = v65[1];
        *v64 = *v65;
        v64[1] = v68;
        v64[2] = v65[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v73 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v64, v65, v73);
        v74 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v64 + *(int *)(v74 + 20)) = *(uint64_t *)((char *)v65 + *(int *)(v74 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v64, 0, 1, v6);
  }
  v75 = a3[10];
  v76 = (uint64_t *)(a1 + v75);
  v77 = (uint64_t *)(a2 + v75);
  if (v41(a2 + v75, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v79 = swift_getEnumCaseMultiPayload();
    if (v79 == 2)
    {
      v81 = *v77;
      v82 = v77[1];
      v83 = v77[2];
      v84 = *((_BYTE *)v77 + 24);
      sub_1BA690C00(v81, v82, v83, v84);
      *v76 = v81;
      v76[1] = v82;
      v40 = v364;
      v76[2] = v83;
      *((_BYTE *)v76 + 24) = v84;
    }
    else
    {
      if (v79 == 1)
      {
        v80 = v77[1];
        *v76 = *v77;
        v76[1] = v80;
        v76[2] = v77[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v85 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v76, v77, v85);
        v86 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v76 + *(int *)(v86 + 20)) = *(uint64_t *)((char *)v77 + *(int *)(v86 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v76, 0, 1, v6);
  }
  v87 = a3[11];
  v88 = (uint64_t *)(a1 + v87);
  v89 = (uint64_t *)(a2 + v87);
  if (v41(a2 + v87, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    v91 = swift_getEnumCaseMultiPayload();
    if (v91 == 2)
    {
      v93 = *v89;
      v94 = v89[1];
      v95 = v89[2];
      v96 = *((_BYTE *)v89 + 24);
      sub_1BA690C00(v93, v94, v95, v96);
      *v88 = v93;
      v88[1] = v94;
      v40 = v364;
      v88[2] = v95;
      *((_BYTE *)v88 + 24) = v96;
    }
    else
    {
      if (v91 == 1)
      {
        v92 = v89[1];
        *v88 = *v89;
        v88[1] = v92;
        v88[2] = v89[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v97 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v88, v89, v97);
        v98 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v88 + *(int *)(v98 + 20)) = *(uint64_t *)((char *)v89 + *(int *)(v98 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v88, 0, 1, v6);
  }
  v99 = a3[12];
  v100 = (uint64_t *)(a1 + v99);
  v101 = (uint64_t *)(a2 + v99);
  if (v41(a2 + v99, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    v103 = swift_getEnumCaseMultiPayload();
    if (v103 == 2)
    {
      v105 = *v101;
      v106 = v101[1];
      v107 = v101[2];
      v108 = *((_BYTE *)v101 + 24);
      sub_1BA690C00(v105, v106, v107, v108);
      *v100 = v105;
      v100[1] = v106;
      v40 = v364;
      v100[2] = v107;
      *((_BYTE *)v100 + 24) = v108;
    }
    else
    {
      if (v103 == 1)
      {
        v104 = v101[1];
        *v100 = *v101;
        v100[1] = v104;
        v100[2] = v101[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v109 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v100, v101, v109);
        v110 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v100 + *(int *)(v110 + 20)) = *(uint64_t *)((char *)v101 + *(int *)(v110 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v100, 0, 1, v6);
  }
  v111 = a3[13];
  v112 = (uint64_t *)(a1 + v111);
  v113 = (uint64_t *)(a2 + v111);
  if (v41(a2 + v111, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
  }
  else
  {
    v115 = swift_getEnumCaseMultiPayload();
    if (v115 == 2)
    {
      v117 = *v113;
      v118 = v113[1];
      v119 = v113[2];
      v120 = *((_BYTE *)v113 + 24);
      sub_1BA690C00(v117, v118, v119, v120);
      *v112 = v117;
      v112[1] = v118;
      v40 = v364;
      v112[2] = v119;
      *((_BYTE *)v112 + 24) = v120;
    }
    else
    {
      if (v115 == 1)
      {
        v116 = v113[1];
        *v112 = *v113;
        v112[1] = v116;
        v112[2] = v113[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v121 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v112, v113, v121);
        v122 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v112 + *(int *)(v122 + 20)) = *(uint64_t *)((char *)v113 + *(int *)(v122 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v112, 0, 1, v6);
  }
  v123 = a3[14];
  v124 = (uint64_t *)(a1 + v123);
  v125 = (uint64_t *)(a2 + v123);
  if (v41(a2 + v123, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    v127 = swift_getEnumCaseMultiPayload();
    if (v127 == 2)
    {
      v129 = *v125;
      v130 = v125[1];
      v131 = v125[2];
      v132 = *((_BYTE *)v125 + 24);
      sub_1BA690C00(v129, v130, v131, v132);
      *v124 = v129;
      v124[1] = v130;
      v40 = v364;
      v124[2] = v131;
      *((_BYTE *)v124 + 24) = v132;
    }
    else
    {
      if (v127 == 1)
      {
        v128 = v125[1];
        *v124 = *v125;
        v124[1] = v128;
        v124[2] = v125[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v133 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v124, v125, v133);
        v134 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v124 + *(int *)(v134 + 20)) = *(uint64_t *)((char *)v125 + *(int *)(v134 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v124, 0, 1, v6);
  }
  v135 = a3[15];
  v136 = (uint64_t *)(a1 + v135);
  v137 = (uint64_t *)(a2 + v135);
  if (v41(a2 + v135, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    v139 = swift_getEnumCaseMultiPayload();
    if (v139 == 2)
    {
      v141 = *v137;
      v142 = v137[1];
      v143 = v137[2];
      v144 = *((_BYTE *)v137 + 24);
      sub_1BA690C00(v141, v142, v143, v144);
      *v136 = v141;
      v136[1] = v142;
      v40 = v364;
      v136[2] = v143;
      *((_BYTE *)v136 + 24) = v144;
    }
    else
    {
      if (v139 == 1)
      {
        v140 = v137[1];
        *v136 = *v137;
        v136[1] = v140;
        v136[2] = v137[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v145 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v136, v137, v145);
        v146 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v136 + *(int *)(v146 + 20)) = *(uint64_t *)((char *)v137 + *(int *)(v146 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v136, 0, 1, v6);
  }
  v147 = a3[16];
  v148 = (uint64_t *)(a1 + v147);
  v149 = (uint64_t *)(a2 + v147);
  if (v41(a2 + v147, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    v151 = swift_getEnumCaseMultiPayload();
    if (v151 == 2)
    {
      v153 = *v149;
      v154 = v149[1];
      v155 = v149[2];
      v156 = *((_BYTE *)v149 + 24);
      sub_1BA690C00(v153, v154, v155, v156);
      *v148 = v153;
      v148[1] = v154;
      v40 = v364;
      v148[2] = v155;
      *((_BYTE *)v148 + 24) = v156;
    }
    else
    {
      if (v151 == 1)
      {
        v152 = v149[1];
        *v148 = *v149;
        v148[1] = v152;
        v148[2] = v149[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v157 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v148, v149, v157);
        v158 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v148 + *(int *)(v158 + 20)) = *(uint64_t *)((char *)v149 + *(int *)(v158 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v148, 0, 1, v6);
  }
  v159 = a3[17];
  v160 = (uint64_t *)(a1 + v159);
  v161 = (uint64_t *)(a2 + v159);
  if (v41(a2 + v159, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    v163 = swift_getEnumCaseMultiPayload();
    if (v163 == 2)
    {
      v165 = *v161;
      v166 = v161[1];
      v167 = v161[2];
      v168 = *((_BYTE *)v161 + 24);
      sub_1BA690C00(v165, v166, v167, v168);
      *v160 = v165;
      v160[1] = v166;
      v40 = v364;
      v160[2] = v167;
      *((_BYTE *)v160 + 24) = v168;
    }
    else
    {
      if (v163 == 1)
      {
        v164 = v161[1];
        *v160 = *v161;
        v160[1] = v164;
        v160[2] = v161[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v169 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v160, v161, v169);
        v170 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v160 + *(int *)(v170 + 20)) = *(uint64_t *)((char *)v161 + *(int *)(v170 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v160, 0, 1, v6);
  }
  v171 = a3[18];
  v172 = (uint64_t *)(a1 + v171);
  v173 = (uint64_t *)(a2 + v171);
  if (v41(a2 + v171, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
  }
  else
  {
    v175 = swift_getEnumCaseMultiPayload();
    if (v175 == 2)
    {
      v177 = *v173;
      v178 = v173[1];
      v179 = v173[2];
      v180 = *((_BYTE *)v173 + 24);
      sub_1BA690C00(v177, v178, v179, v180);
      *v172 = v177;
      v172[1] = v178;
      v40 = v364;
      v172[2] = v179;
      *((_BYTE *)v172 + 24) = v180;
    }
    else
    {
      if (v175 == 1)
      {
        v176 = v173[1];
        *v172 = *v173;
        v172[1] = v176;
        v172[2] = v173[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v181 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v172, v173, v181);
        v182 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v172 + *(int *)(v182 + 20)) = *(uint64_t *)((char *)v173 + *(int *)(v182 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v172, 0, 1, v6);
  }
  v183 = a3[19];
  v184 = (uint64_t *)(a1 + v183);
  v185 = (uint64_t *)(a2 + v183);
  if (v41(a2 + v183, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
  }
  else
  {
    v187 = swift_getEnumCaseMultiPayload();
    if (v187 == 2)
    {
      v189 = *v185;
      v190 = v185[1];
      v191 = v185[2];
      v192 = *((_BYTE *)v185 + 24);
      sub_1BA690C00(v189, v190, v191, v192);
      *v184 = v189;
      v184[1] = v190;
      v40 = v364;
      v184[2] = v191;
      *((_BYTE *)v184 + 24) = v192;
    }
    else
    {
      if (v187 == 1)
      {
        v188 = v185[1];
        *v184 = *v185;
        v184[1] = v188;
        v184[2] = v185[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v193 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v184, v185, v193);
        v194 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v184 + *(int *)(v194 + 20)) = *(uint64_t *)((char *)v185 + *(int *)(v194 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v184, 0, 1, v6);
  }
  v195 = a3[20];
  v196 = (uint64_t *)(a1 + v195);
  v197 = (uint64_t *)(a2 + v195);
  if (v41(a2 + v195, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
  }
  else
  {
    v199 = swift_getEnumCaseMultiPayload();
    if (v199 == 2)
    {
      v201 = *v197;
      v202 = v197[1];
      v203 = v197[2];
      v204 = *((_BYTE *)v197 + 24);
      sub_1BA690C00(v201, v202, v203, v204);
      *v196 = v201;
      v196[1] = v202;
      v40 = v364;
      v196[2] = v203;
      *((_BYTE *)v196 + 24) = v204;
    }
    else
    {
      if (v199 == 1)
      {
        v200 = v197[1];
        *v196 = *v197;
        v196[1] = v200;
        v196[2] = v197[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v205 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v205 - 8) + 16))(v196, v197, v205);
        v206 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v196 + *(int *)(v206 + 20)) = *(uint64_t *)((char *)v197 + *(int *)(v206 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v196, 0, 1, v6);
  }
  v207 = a3[21];
  v208 = (uint64_t *)(a1 + v207);
  v209 = (uint64_t *)(a2 + v207);
  if (v41(a2 + v207, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
  }
  else
  {
    v211 = swift_getEnumCaseMultiPayload();
    if (v211 == 2)
    {
      v213 = *v209;
      v214 = v209[1];
      v215 = v209[2];
      v216 = *((_BYTE *)v209 + 24);
      sub_1BA690C00(v213, v214, v215, v216);
      *v208 = v213;
      v208[1] = v214;
      v40 = v364;
      v208[2] = v215;
      *((_BYTE *)v208 + 24) = v216;
    }
    else
    {
      if (v211 == 1)
      {
        v212 = v209[1];
        *v208 = *v209;
        v208[1] = v212;
        v208[2] = v209[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v217 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v208, v209, v217);
        v218 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v208 + *(int *)(v218 + 20)) = *(uint64_t *)((char *)v209 + *(int *)(v218 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v208, 0, 1, v6);
  }
  v219 = a3[22];
  v220 = (uint64_t *)(a1 + v219);
  v221 = (uint64_t *)(a2 + v219);
  if (v41(a2 + v219, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
  }
  else
  {
    v223 = swift_getEnumCaseMultiPayload();
    if (v223 == 2)
    {
      v225 = *v221;
      v226 = v221[1];
      v227 = v221[2];
      v228 = *((_BYTE *)v221 + 24);
      sub_1BA690C00(v225, v226, v227, v228);
      *v220 = v225;
      v220[1] = v226;
      v40 = v364;
      v220[2] = v227;
      *((_BYTE *)v220 + 24) = v228;
    }
    else
    {
      if (v223 == 1)
      {
        v224 = v221[1];
        *v220 = *v221;
        v220[1] = v224;
        v220[2] = v221[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v229 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(v220, v221, v229);
        v230 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v220 + *(int *)(v230 + 20)) = *(uint64_t *)((char *)v221 + *(int *)(v230 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v220, 0, 1, v6);
  }
  v231 = a3[23];
  v232 = (uint64_t *)(a1 + v231);
  v233 = (uint64_t *)(a2 + v231);
  if (v41(a2 + v231, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v232, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
  }
  else
  {
    v235 = swift_getEnumCaseMultiPayload();
    if (v235 == 2)
    {
      v237 = *v233;
      v238 = v233[1];
      v239 = v233[2];
      v240 = *((_BYTE *)v233 + 24);
      sub_1BA690C00(v237, v238, v239, v240);
      *v232 = v237;
      v232[1] = v238;
      v40 = v364;
      v232[2] = v239;
      *((_BYTE *)v232 + 24) = v240;
    }
    else
    {
      if (v235 == 1)
      {
        v236 = v233[1];
        *v232 = *v233;
        v232[1] = v236;
        v232[2] = v233[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v241 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v232, v233, v241);
        v242 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v232 + *(int *)(v242 + 20)) = *(uint64_t *)((char *)v233 + *(int *)(v242 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v232, 0, 1, v6);
  }
  v243 = a3[24];
  v244 = (uint64_t *)(a1 + v243);
  v245 = (uint64_t *)(a2 + v243);
  if (v41(a2 + v243, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
  }
  else
  {
    v247 = swift_getEnumCaseMultiPayload();
    if (v247 == 2)
    {
      v249 = *v245;
      v250 = v245[1];
      v251 = v245[2];
      v252 = *((_BYTE *)v245 + 24);
      sub_1BA690C00(v249, v250, v251, v252);
      *v244 = v249;
      v244[1] = v250;
      v40 = v364;
      v244[2] = v251;
      *((_BYTE *)v244 + 24) = v252;
    }
    else
    {
      if (v247 == 1)
      {
        v248 = v245[1];
        *v244 = *v245;
        v244[1] = v248;
        v244[2] = v245[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v253 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v253 - 8) + 16))(v244, v245, v253);
        v254 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v244 + *(int *)(v254 + 20)) = *(uint64_t *)((char *)v245 + *(int *)(v254 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v244, 0, 1, v6);
  }
  v255 = a3[25];
  v256 = (uint64_t *)(a1 + v255);
  v257 = (uint64_t *)(a2 + v255);
  if (v41(a2 + v255, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
  }
  else
  {
    v259 = swift_getEnumCaseMultiPayload();
    if (v259 == 2)
    {
      v261 = *v257;
      v262 = v257[1];
      v263 = v257[2];
      v264 = *((_BYTE *)v257 + 24);
      sub_1BA690C00(v261, v262, v263, v264);
      *v256 = v261;
      v256[1] = v262;
      v40 = v364;
      v256[2] = v263;
      *((_BYTE *)v256 + 24) = v264;
    }
    else
    {
      if (v259 == 1)
      {
        v260 = v257[1];
        *v256 = *v257;
        v256[1] = v260;
        v256[2] = v257[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v265 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v265 - 8) + 16))(v256, v257, v265);
        v266 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v256 + *(int *)(v266 + 20)) = *(uint64_t *)((char *)v257 + *(int *)(v266 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v256, 0, 1, v6);
  }
  v267 = a3[26];
  v268 = (uint64_t *)(a1 + v267);
  v269 = (uint64_t *)(a2 + v267);
  if (v41(a2 + v267, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
  }
  else
  {
    v271 = swift_getEnumCaseMultiPayload();
    if (v271 == 2)
    {
      v273 = *v269;
      v274 = v269[1];
      v275 = v269[2];
      v276 = *((_BYTE *)v269 + 24);
      sub_1BA690C00(v273, v274, v275, v276);
      *v268 = v273;
      v268[1] = v274;
      v40 = v364;
      v268[2] = v275;
      *((_BYTE *)v268 + 24) = v276;
    }
    else
    {
      if (v271 == 1)
      {
        v272 = v269[1];
        *v268 = *v269;
        v268[1] = v272;
        v268[2] = v269[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v277 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v277 - 8) + 16))(v268, v269, v277);
        v278 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v268 + *(int *)(v278 + 20)) = *(uint64_t *)((char *)v269 + *(int *)(v278 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v268, 0, 1, v6);
  }
  v279 = a3[27];
  v280 = (uint64_t *)(a1 + v279);
  v281 = (uint64_t *)(a2 + v279);
  if (v41(a2 + v279, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
  }
  else
  {
    v283 = swift_getEnumCaseMultiPayload();
    if (v283 == 2)
    {
      v285 = *v281;
      v286 = v281[1];
      v287 = v281[2];
      v288 = *((_BYTE *)v281 + 24);
      sub_1BA690C00(v285, v286, v287, v288);
      *v280 = v285;
      v280[1] = v286;
      v40 = v364;
      v280[2] = v287;
      *((_BYTE *)v280 + 24) = v288;
    }
    else
    {
      if (v283 == 1)
      {
        v284 = v281[1];
        *v280 = *v281;
        v280[1] = v284;
        v280[2] = v281[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v289 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v280, v281, v289);
        v290 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v280 + *(int *)(v290 + 20)) = *(uint64_t *)((char *)v281 + *(int *)(v290 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v280, 0, 1, v6);
  }
  v291 = a3[28];
  v292 = (uint64_t *)(a1 + v291);
  v293 = (uint64_t *)(a2 + v291);
  if (v41(a2 + v291, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
  }
  else
  {
    v295 = swift_getEnumCaseMultiPayload();
    if (v295 == 2)
    {
      v297 = *v293;
      v298 = v293[1];
      v299 = v293[2];
      v300 = *((_BYTE *)v293 + 24);
      sub_1BA690C00(v297, v298, v299, v300);
      *v292 = v297;
      v292[1] = v298;
      v40 = v364;
      v292[2] = v299;
      *((_BYTE *)v292 + 24) = v300;
    }
    else
    {
      if (v295 == 1)
      {
        v296 = v293[1];
        *v292 = *v293;
        v292[1] = v296;
        v292[2] = v293[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v301 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(v292, v293, v301);
        v302 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v292 + *(int *)(v302 + 20)) = *(uint64_t *)((char *)v293 + *(int *)(v302 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v292, 0, 1, v6);
  }
  v303 = a3[29];
  v304 = (uint64_t *)(a1 + v303);
  v305 = (uint64_t *)(a2 + v303);
  if (v41(a2 + v303, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
  }
  else
  {
    v307 = swift_getEnumCaseMultiPayload();
    if (v307 == 2)
    {
      v309 = *v305;
      v310 = v305[1];
      v311 = v305[2];
      v312 = *((_BYTE *)v305 + 24);
      sub_1BA690C00(v309, v310, v311, v312);
      *v304 = v309;
      v304[1] = v310;
      v40 = v364;
      v304[2] = v311;
      *((_BYTE *)v304 + 24) = v312;
    }
    else
    {
      if (v307 == 1)
      {
        v308 = v305[1];
        *v304 = *v305;
        v304[1] = v308;
        v304[2] = v305[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v313 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v313 - 8) + 16))(v304, v305, v313);
        v314 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v304 + *(int *)(v314 + 20)) = *(uint64_t *)((char *)v305 + *(int *)(v314 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v304, 0, 1, v6);
  }
  v315 = a3[30];
  v316 = (uint64_t *)(a1 + v315);
  v317 = (uint64_t *)(a2 + v315);
  if (v41(a2 + v315, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v316, v317, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
  }
  else
  {
    v319 = swift_getEnumCaseMultiPayload();
    if (v319 == 2)
    {
      v321 = *v317;
      v322 = v317[1];
      v323 = v317[2];
      v324 = *((_BYTE *)v317 + 24);
      sub_1BA690C00(v321, v322, v323, v324);
      *v316 = v321;
      v316[1] = v322;
      v40 = v364;
      v316[2] = v323;
      *((_BYTE *)v316 + 24) = v324;
    }
    else
    {
      if (v319 == 1)
      {
        v320 = v317[1];
        *v316 = *v317;
        v316[1] = v320;
        v316[2] = v317[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v325 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v316, v317, v325);
        v326 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v316 + *(int *)(v326 + 20)) = *(uint64_t *)((char *)v317 + *(int *)(v326 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v316, 0, 1, v6);
  }
  v327 = a3[31];
  v328 = (uint64_t *)(a1 + v327);
  v329 = (uint64_t *)(a2 + v327);
  if (v41(a2 + v327, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v328, v329, *(_QWORD *)(*(_QWORD *)(v330 - 8) + 64));
  }
  else
  {
    v331 = swift_getEnumCaseMultiPayload();
    if (v331 == 2)
    {
      v333 = *v329;
      v334 = v329[1];
      v335 = v329[2];
      v336 = *((_BYTE *)v329 + 24);
      sub_1BA690C00(v333, v334, v335, v336);
      *v328 = v333;
      v328[1] = v334;
      v40 = v364;
      v328[2] = v335;
      *((_BYTE *)v328 + 24) = v336;
    }
    else
    {
      if (v331 == 1)
      {
        v332 = v329[1];
        *v328 = *v329;
        v328[1] = v332;
        v328[2] = v329[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v337 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v328, v329, v337);
        v338 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v328 + *(int *)(v338 + 20)) = *(uint64_t *)((char *)v329 + *(int *)(v338 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v328, 0, 1, v6);
  }
  v339 = a3[32];
  v340 = (uint64_t *)(a1 + v339);
  v341 = (uint64_t *)(a2 + v339);
  if (v41(a2 + v339, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v342 - 8) + 64));
  }
  else
  {
    v343 = swift_getEnumCaseMultiPayload();
    if (v343 == 2)
    {
      v345 = *v341;
      v346 = v341[1];
      v347 = v341[2];
      v348 = *((_BYTE *)v341 + 24);
      sub_1BA690C00(v345, v346, v347, v348);
      *v340 = v345;
      v340[1] = v346;
      v40 = v364;
      v340[2] = v347;
      *((_BYTE *)v340 + 24) = v348;
    }
    else
    {
      if (v343 == 1)
      {
        v344 = v341[1];
        *v340 = *v341;
        v340[1] = v344;
        v340[2] = v341[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v349 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v340, v341, v349);
        v350 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v340 + *(int *)(v350 + 20)) = *(uint64_t *)((char *)v341 + *(int *)(v350 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v340, 0, 1, v6);
  }
  v351 = a3[33];
  v352 = (uint64_t *)(a1 + v351);
  v353 = (uint64_t *)(a2 + v351);
  if (v41((uint64_t)v353, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v352, v353, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
  }
  else
  {
    v355 = swift_getEnumCaseMultiPayload();
    if (v355 == 2)
    {
      v357 = *v353;
      v358 = v353[1];
      v359 = v353[2];
      v360 = *((_BYTE *)v353 + 24);
      sub_1BA690C00(v357, v358, v359, v360);
      *v352 = v357;
      v352[1] = v358;
      v352[2] = v359;
      *((_BYTE *)v352 + 24) = v360;
    }
    else
    {
      if (v355 == 1)
      {
        v356 = v353[1];
        *v352 = *v353;
        v352[1] = v356;
        v352[2] = v353[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v361 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v352, v353, v361);
        v362 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v352 + *(int *)(v362 + 20)) = *(uint64_t *)((char *)v353 + *(int *)(v362 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v352, 0, 1, v6);
  }
  return a1;
}

uint64_t assignWithCopy for FormatRemoteVideo(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  int v166;
  uint64_t v167;
  int v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  int v180;
  uint64_t v181;
  int v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  int v194;
  uint64_t v195;
  int v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  int v208;
  uint64_t v209;
  int v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  int v222;
  uint64_t v223;
  int v224;
  int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  int v236;
  uint64_t v237;
  int v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int v249;
  int v250;
  uint64_t v251;
  int v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int v263;
  int v264;
  uint64_t v265;
  int v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  int v278;
  uint64_t v279;
  int v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  int v292;
  uint64_t v293;
  int v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  int v305;
  int v306;
  uint64_t v307;
  int v308;
  int v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  int v320;
  uint64_t v321;
  int v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  int v333;
  int v334;
  uint64_t v335;
  int v336;
  int v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  int v347;
  int v348;
  uint64_t v349;
  int v350;
  int v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  int v361;
  int v362;
  uint64_t v363;
  int v364;
  int v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  int v375;
  int v376;
  uint64_t v377;
  int v378;
  int v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  int v389;
  int v390;
  uint64_t v391;
  int v392;
  int v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  int v403;
  int v404;
  uint64_t v405;
  int v406;
  int v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  char v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  char v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  char v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  char v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  char v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  char v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  char v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  char v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  char v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  char v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  char v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  char v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  char v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  char v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  char v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  char v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  char v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  char v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  char v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  char v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  char v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    type metadata accessor for FormatURL();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = *(_QWORD *)a2;
      v8 = *(_QWORD *)(a2 + 8);
      v9 = *(_QWORD *)(a2 + 16);
      v10 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(*(_QWORD *)a2, v8, v9, v10);
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v9;
      *(_BYTE *)(a1 + 24) = v10;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v11 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v12 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(a1 + *(int *)(v12 + 20)) = *(_QWORD *)(a2 + *(int *)(v12 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[5];
    v14 = a1 + v13;
    v15 = a2 + v13;
    sub_1BA4A2E80(a1 + v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 2)
    {
      v17 = *(_QWORD *)v15;
      v18 = *(_QWORD *)(v15 + 8);
      v19 = *(_QWORD *)(v15 + 16);
      v20 = *(_BYTE *)(v15 + 24);
      sub_1BA690C00(v17, v18, v19, v20);
      *(_QWORD *)v14 = v17;
      *(_QWORD *)(v14 + 8) = v18;
      *(_QWORD *)(v14 + 16) = v19;
      *(_BYTE *)(v14 + 24) = v20;
    }
    else
    {
      if (v16 == 1)
      {
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
        *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, v15, v21);
        v22 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v14 + *(int *)(v22 + 20)) = *(_QWORD *)(v15 + *(int *)(v22 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v23 = a3[6];
    v24 = a1 + v23;
    v25 = a2 + v23;
    sub_1BA4A2E80(a1 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      v27 = *(_QWORD *)v25;
      v28 = *(_QWORD *)(v25 + 8);
      v29 = *(_QWORD *)(v25 + 16);
      v30 = *(_BYTE *)(v25 + 24);
      sub_1BA690C00(v27, v28, v29, v30);
      *(_QWORD *)v24 = v27;
      *(_QWORD *)(v24 + 8) = v28;
      *(_QWORD *)(v24 + 16) = v29;
      *(_BYTE *)(v24 + 24) = v30;
    }
    else
    {
      if (v26 == 1)
      {
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
        *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v31 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
        v32 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v24 + *(int *)(v32 + 20)) = *(_QWORD *)(v25 + *(int *)(v32 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v33 = a3[7];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for FormatURL();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  v577 = v37;
  if (v39)
  {
    if (v40)
      goto LABEL_26;
    v42 = swift_getEnumCaseMultiPayload();
    if (v42 == 2)
    {
      v44 = *(_QWORD *)v35;
      v45 = *(_QWORD *)(v35 + 8);
      v46 = *(_QWORD *)(v35 + 16);
      v47 = *(_BYTE *)(v35 + 24);
      sub_1BA690C00(v44, v45, v46, v47);
      *(_QWORD *)v34 = v44;
      *(_QWORD *)(v34 + 8) = v45;
      v37 = v577;
      *(_QWORD *)(v34 + 16) = v46;
      *(_BYTE *)(v34 + 24) = v47;
    }
    else
    {
      if (v42 == 1)
      {
        *(_QWORD *)v34 = *(_QWORD *)v35;
        *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
        *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v48 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v34, v35, v48);
        v49 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v34 + *(int *)(v49 + 20)) = *(_QWORD *)(v35 + *(int *)(v49 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  else
  {
    if (v40)
    {
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_26:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v34, (const void *)v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      goto LABEL_39;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 2)
      {
        v415 = *(_QWORD *)v35;
        v416 = *(_QWORD *)(v35 + 8);
        v417 = *(_QWORD *)(v35 + 16);
        v418 = *(_BYTE *)(v35 + 24);
        sub_1BA690C00(v415, v416, v417, v418);
        *(_QWORD *)v34 = v415;
        *(_QWORD *)(v34 + 8) = v416;
        v37 = v577;
        *(_QWORD *)(v34 + 16) = v417;
        *(_BYTE *)(v34 + 24) = v418;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v43 == 1)
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
          *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v523 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v523 - 8) + 16))(v34, v35, v523);
          v524 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v34 + *(int *)(v524 + 20)) = *(_QWORD *)(v35 + *(int *)(v524 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_39:
  v50 = a3[8];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = v38(a1 + v50, 1, v36);
  v54 = v38(v52, 1, v36);
  if (v53)
  {
    if (v54)
      goto LABEL_44;
    v56 = swift_getEnumCaseMultiPayload();
    if (v56 == 2)
    {
      v58 = *(_QWORD *)v52;
      v59 = *(_QWORD *)(v52 + 8);
      v60 = *(_QWORD *)(v52 + 16);
      v61 = *(_BYTE *)(v52 + 24);
      sub_1BA690C00(v58, v59, v60, v61);
      *(_QWORD *)v51 = v58;
      *(_QWORD *)(v51 + 8) = v59;
      v37 = v577;
      *(_QWORD *)(v51 + 16) = v60;
      *(_BYTE *)(v51 + 24) = v61;
    }
    else
    {
      if (v56 == 1)
      {
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
        *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v62 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v51, v52, v62);
        v63 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v51 + *(int *)(v63 + 20)) = *(_QWORD *)(v52 + *(int *)(v63 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v51, 0, 1, v36);
  }
  else
  {
    if (v54)
    {
      sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_44:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v51, (const void *)v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      goto LABEL_57;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v57 = swift_getEnumCaseMultiPayload();
      if (v57 == 2)
      {
        v419 = *(_QWORD *)v52;
        v420 = *(_QWORD *)(v52 + 8);
        v421 = *(_QWORD *)(v52 + 16);
        v422 = *(_BYTE *)(v52 + 24);
        sub_1BA690C00(v419, v420, v421, v422);
        *(_QWORD *)v51 = v419;
        *(_QWORD *)(v51 + 8) = v420;
        v37 = v577;
        *(_QWORD *)(v51 + 16) = v421;
        *(_BYTE *)(v51 + 24) = v422;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v57 == 1)
        {
          *(_QWORD *)v51 = *(_QWORD *)v52;
          *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
          *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v525 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v525 - 8) + 16))(v51, v52, v525);
          v526 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v51 + *(int *)(v526 + 20)) = *(_QWORD *)(v52 + *(int *)(v526 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_57:
  v64 = a3[9];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = v38(a1 + v64, 1, v36);
  v68 = v38(v66, 1, v36);
  if (v67)
  {
    if (v68)
      goto LABEL_62;
    v70 = swift_getEnumCaseMultiPayload();
    if (v70 == 2)
    {
      v72 = *(_QWORD *)v66;
      v73 = *(_QWORD *)(v66 + 8);
      v74 = *(_QWORD *)(v66 + 16);
      v75 = *(_BYTE *)(v66 + 24);
      sub_1BA690C00(v72, v73, v74, v75);
      *(_QWORD *)v65 = v72;
      *(_QWORD *)(v65 + 8) = v73;
      v37 = v577;
      *(_QWORD *)(v65 + 16) = v74;
      *(_BYTE *)(v65 + 24) = v75;
    }
    else
    {
      if (v70 == 1)
      {
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
        *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v76 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v65, v66, v76);
        v77 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v65 + *(int *)(v77 + 20)) = *(_QWORD *)(v66 + *(int *)(v77 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v65, 0, 1, v36);
  }
  else
  {
    if (v68)
    {
      sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_62:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v65, (const void *)v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      goto LABEL_75;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v71 = swift_getEnumCaseMultiPayload();
      if (v71 == 2)
      {
        v423 = *(_QWORD *)v66;
        v424 = *(_QWORD *)(v66 + 8);
        v425 = *(_QWORD *)(v66 + 16);
        v426 = *(_BYTE *)(v66 + 24);
        sub_1BA690C00(v423, v424, v425, v426);
        *(_QWORD *)v65 = v423;
        *(_QWORD *)(v65 + 8) = v424;
        v37 = v577;
        *(_QWORD *)(v65 + 16) = v425;
        *(_BYTE *)(v65 + 24) = v426;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v71 == 1)
        {
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
          *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v527 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v527 - 8) + 16))(v65, v66, v527);
          v528 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v65 + *(int *)(v528 + 20)) = *(_QWORD *)(v66 + *(int *)(v528 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_75:
  v78 = a3[10];
  v79 = a1 + v78;
  v80 = a2 + v78;
  v81 = v38(a1 + v78, 1, v36);
  v82 = v38(v80, 1, v36);
  if (v81)
  {
    if (v82)
      goto LABEL_80;
    v84 = swift_getEnumCaseMultiPayload();
    if (v84 == 2)
    {
      v86 = *(_QWORD *)v80;
      v87 = *(_QWORD *)(v80 + 8);
      v88 = *(_QWORD *)(v80 + 16);
      v89 = *(_BYTE *)(v80 + 24);
      sub_1BA690C00(v86, v87, v88, v89);
      *(_QWORD *)v79 = v86;
      *(_QWORD *)(v79 + 8) = v87;
      v37 = v577;
      *(_QWORD *)(v79 + 16) = v88;
      *(_BYTE *)(v79 + 24) = v89;
    }
    else
    {
      if (v84 == 1)
      {
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
        *(_QWORD *)(v79 + 16) = *(_QWORD *)(v80 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v90 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v79, v80, v90);
        v91 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v79 + *(int *)(v91 + 20)) = *(_QWORD *)(v80 + *(int *)(v91 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v79, 0, 1, v36);
  }
  else
  {
    if (v82)
    {
      sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_80:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v79, (const void *)v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      goto LABEL_93;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v85 = swift_getEnumCaseMultiPayload();
      if (v85 == 2)
      {
        v427 = *(_QWORD *)v80;
        v428 = *(_QWORD *)(v80 + 8);
        v429 = *(_QWORD *)(v80 + 16);
        v430 = *(_BYTE *)(v80 + 24);
        sub_1BA690C00(v427, v428, v429, v430);
        *(_QWORD *)v79 = v427;
        *(_QWORD *)(v79 + 8) = v428;
        v37 = v577;
        *(_QWORD *)(v79 + 16) = v429;
        *(_BYTE *)(v79 + 24) = v430;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v85 == 1)
        {
          *(_QWORD *)v79 = *(_QWORD *)v80;
          *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
          *(_QWORD *)(v79 + 16) = *(_QWORD *)(v80 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v529 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v529 - 8) + 16))(v79, v80, v529);
          v530 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v79 + *(int *)(v530 + 20)) = *(_QWORD *)(v80 + *(int *)(v530 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_93:
  v92 = a3[11];
  v93 = a1 + v92;
  v94 = a2 + v92;
  v95 = v38(a1 + v92, 1, v36);
  v96 = v38(v94, 1, v36);
  if (v95)
  {
    if (v96)
      goto LABEL_98;
    v98 = swift_getEnumCaseMultiPayload();
    if (v98 == 2)
    {
      v100 = *(_QWORD *)v94;
      v101 = *(_QWORD *)(v94 + 8);
      v102 = *(_QWORD *)(v94 + 16);
      v103 = *(_BYTE *)(v94 + 24);
      sub_1BA690C00(v100, v101, v102, v103);
      *(_QWORD *)v93 = v100;
      *(_QWORD *)(v93 + 8) = v101;
      v37 = v577;
      *(_QWORD *)(v93 + 16) = v102;
      *(_BYTE *)(v93 + 24) = v103;
    }
    else
    {
      if (v98 == 1)
      {
        *(_QWORD *)v93 = *(_QWORD *)v94;
        *(_QWORD *)(v93 + 8) = *(_QWORD *)(v94 + 8);
        *(_QWORD *)(v93 + 16) = *(_QWORD *)(v94 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v104 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v93, v94, v104);
        v105 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v93 + *(int *)(v105 + 20)) = *(_QWORD *)(v94 + *(int *)(v105 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v93, 0, 1, v36);
  }
  else
  {
    if (v96)
    {
      sub_1BA4A2E80(v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_98:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v93, (const void *)v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      goto LABEL_111;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v99 = swift_getEnumCaseMultiPayload();
      if (v99 == 2)
      {
        v431 = *(_QWORD *)v94;
        v432 = *(_QWORD *)(v94 + 8);
        v433 = *(_QWORD *)(v94 + 16);
        v434 = *(_BYTE *)(v94 + 24);
        sub_1BA690C00(v431, v432, v433, v434);
        *(_QWORD *)v93 = v431;
        *(_QWORD *)(v93 + 8) = v432;
        v37 = v577;
        *(_QWORD *)(v93 + 16) = v433;
        *(_BYTE *)(v93 + 24) = v434;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v99 == 1)
        {
          *(_QWORD *)v93 = *(_QWORD *)v94;
          *(_QWORD *)(v93 + 8) = *(_QWORD *)(v94 + 8);
          *(_QWORD *)(v93 + 16) = *(_QWORD *)(v94 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v531 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v531 - 8) + 16))(v93, v94, v531);
          v532 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v93 + *(int *)(v532 + 20)) = *(_QWORD *)(v94 + *(int *)(v532 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_111:
  v106 = a3[12];
  v107 = a1 + v106;
  v108 = a2 + v106;
  v109 = v38(a1 + v106, 1, v36);
  v110 = v38(v108, 1, v36);
  if (v109)
  {
    if (v110)
      goto LABEL_116;
    v112 = swift_getEnumCaseMultiPayload();
    if (v112 == 2)
    {
      v114 = *(_QWORD *)v108;
      v115 = *(_QWORD *)(v108 + 8);
      v116 = *(_QWORD *)(v108 + 16);
      v117 = *(_BYTE *)(v108 + 24);
      sub_1BA690C00(v114, v115, v116, v117);
      *(_QWORD *)v107 = v114;
      *(_QWORD *)(v107 + 8) = v115;
      v37 = v577;
      *(_QWORD *)(v107 + 16) = v116;
      *(_BYTE *)(v107 + 24) = v117;
    }
    else
    {
      if (v112 == 1)
      {
        *(_QWORD *)v107 = *(_QWORD *)v108;
        *(_QWORD *)(v107 + 8) = *(_QWORD *)(v108 + 8);
        *(_QWORD *)(v107 + 16) = *(_QWORD *)(v108 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v118 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v107, v108, v118);
        v119 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v107 + *(int *)(v119 + 20)) = *(_QWORD *)(v108 + *(int *)(v119 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v107, 0, 1, v36);
  }
  else
  {
    if (v110)
    {
      sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_116:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v107, (const void *)v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      goto LABEL_129;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v113 = swift_getEnumCaseMultiPayload();
      if (v113 == 2)
      {
        v435 = *(_QWORD *)v108;
        v436 = *(_QWORD *)(v108 + 8);
        v437 = *(_QWORD *)(v108 + 16);
        v438 = *(_BYTE *)(v108 + 24);
        sub_1BA690C00(v435, v436, v437, v438);
        *(_QWORD *)v107 = v435;
        *(_QWORD *)(v107 + 8) = v436;
        v37 = v577;
        *(_QWORD *)(v107 + 16) = v437;
        *(_BYTE *)(v107 + 24) = v438;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v113 == 1)
        {
          *(_QWORD *)v107 = *(_QWORD *)v108;
          *(_QWORD *)(v107 + 8) = *(_QWORD *)(v108 + 8);
          *(_QWORD *)(v107 + 16) = *(_QWORD *)(v108 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v533 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v533 - 8) + 16))(v107, v108, v533);
          v534 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v107 + *(int *)(v534 + 20)) = *(_QWORD *)(v108 + *(int *)(v534 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_129:
  v120 = a3[13];
  v121 = a1 + v120;
  v122 = a2 + v120;
  v123 = v38(a1 + v120, 1, v36);
  v124 = v38(v122, 1, v36);
  if (v123)
  {
    if (v124)
      goto LABEL_134;
    v126 = swift_getEnumCaseMultiPayload();
    if (v126 == 2)
    {
      v128 = *(_QWORD *)v122;
      v129 = *(_QWORD *)(v122 + 8);
      v130 = *(_QWORD *)(v122 + 16);
      v131 = *(_BYTE *)(v122 + 24);
      sub_1BA690C00(v128, v129, v130, v131);
      *(_QWORD *)v121 = v128;
      *(_QWORD *)(v121 + 8) = v129;
      v37 = v577;
      *(_QWORD *)(v121 + 16) = v130;
      *(_BYTE *)(v121 + 24) = v131;
    }
    else
    {
      if (v126 == 1)
      {
        *(_QWORD *)v121 = *(_QWORD *)v122;
        *(_QWORD *)(v121 + 8) = *(_QWORD *)(v122 + 8);
        *(_QWORD *)(v121 + 16) = *(_QWORD *)(v122 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v132 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v121, v122, v132);
        v133 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v121 + *(int *)(v133 + 20)) = *(_QWORD *)(v122 + *(int *)(v133 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v121, 0, 1, v36);
  }
  else
  {
    if (v124)
    {
      sub_1BA4A2E80(v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_134:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v121, (const void *)v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      goto LABEL_147;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v127 = swift_getEnumCaseMultiPayload();
      if (v127 == 2)
      {
        v439 = *(_QWORD *)v122;
        v440 = *(_QWORD *)(v122 + 8);
        v441 = *(_QWORD *)(v122 + 16);
        v442 = *(_BYTE *)(v122 + 24);
        sub_1BA690C00(v439, v440, v441, v442);
        *(_QWORD *)v121 = v439;
        *(_QWORD *)(v121 + 8) = v440;
        v37 = v577;
        *(_QWORD *)(v121 + 16) = v441;
        *(_BYTE *)(v121 + 24) = v442;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v127 == 1)
        {
          *(_QWORD *)v121 = *(_QWORD *)v122;
          *(_QWORD *)(v121 + 8) = *(_QWORD *)(v122 + 8);
          *(_QWORD *)(v121 + 16) = *(_QWORD *)(v122 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v535 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v535 - 8) + 16))(v121, v122, v535);
          v536 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v121 + *(int *)(v536 + 20)) = *(_QWORD *)(v122 + *(int *)(v536 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_147:
  v134 = a3[14];
  v135 = a1 + v134;
  v136 = a2 + v134;
  v137 = v38(a1 + v134, 1, v36);
  v138 = v38(v136, 1, v36);
  if (v137)
  {
    if (v138)
      goto LABEL_152;
    v140 = swift_getEnumCaseMultiPayload();
    if (v140 == 2)
    {
      v142 = *(_QWORD *)v136;
      v143 = *(_QWORD *)(v136 + 8);
      v144 = *(_QWORD *)(v136 + 16);
      v145 = *(_BYTE *)(v136 + 24);
      sub_1BA690C00(v142, v143, v144, v145);
      *(_QWORD *)v135 = v142;
      *(_QWORD *)(v135 + 8) = v143;
      v37 = v577;
      *(_QWORD *)(v135 + 16) = v144;
      *(_BYTE *)(v135 + 24) = v145;
    }
    else
    {
      if (v140 == 1)
      {
        *(_QWORD *)v135 = *(_QWORD *)v136;
        *(_QWORD *)(v135 + 8) = *(_QWORD *)(v136 + 8);
        *(_QWORD *)(v135 + 16) = *(_QWORD *)(v136 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v146 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v135, v136, v146);
        v147 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v135 + *(int *)(v147 + 20)) = *(_QWORD *)(v136 + *(int *)(v147 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v135, 0, 1, v36);
  }
  else
  {
    if (v138)
    {
      sub_1BA4A2E80(v135, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_152:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v135, (const void *)v136, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
      goto LABEL_165;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v135, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v141 = swift_getEnumCaseMultiPayload();
      if (v141 == 2)
      {
        v443 = *(_QWORD *)v136;
        v444 = *(_QWORD *)(v136 + 8);
        v445 = *(_QWORD *)(v136 + 16);
        v446 = *(_BYTE *)(v136 + 24);
        sub_1BA690C00(v443, v444, v445, v446);
        *(_QWORD *)v135 = v443;
        *(_QWORD *)(v135 + 8) = v444;
        v37 = v577;
        *(_QWORD *)(v135 + 16) = v445;
        *(_BYTE *)(v135 + 24) = v446;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v141 == 1)
        {
          *(_QWORD *)v135 = *(_QWORD *)v136;
          *(_QWORD *)(v135 + 8) = *(_QWORD *)(v136 + 8);
          *(_QWORD *)(v135 + 16) = *(_QWORD *)(v136 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v537 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v537 - 8) + 16))(v135, v136, v537);
          v538 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v135 + *(int *)(v538 + 20)) = *(_QWORD *)(v136 + *(int *)(v538 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_165:
  v148 = a3[15];
  v149 = a1 + v148;
  v150 = a2 + v148;
  v151 = v38(a1 + v148, 1, v36);
  v152 = v38(v150, 1, v36);
  if (v151)
  {
    if (v152)
      goto LABEL_170;
    v154 = swift_getEnumCaseMultiPayload();
    if (v154 == 2)
    {
      v156 = *(_QWORD *)v150;
      v157 = *(_QWORD *)(v150 + 8);
      v158 = *(_QWORD *)(v150 + 16);
      v159 = *(_BYTE *)(v150 + 24);
      sub_1BA690C00(v156, v157, v158, v159);
      *(_QWORD *)v149 = v156;
      *(_QWORD *)(v149 + 8) = v157;
      v37 = v577;
      *(_QWORD *)(v149 + 16) = v158;
      *(_BYTE *)(v149 + 24) = v159;
    }
    else
    {
      if (v154 == 1)
      {
        *(_QWORD *)v149 = *(_QWORD *)v150;
        *(_QWORD *)(v149 + 8) = *(_QWORD *)(v150 + 8);
        *(_QWORD *)(v149 + 16) = *(_QWORD *)(v150 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v160 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v149, v150, v160);
        v161 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v149 + *(int *)(v161 + 20)) = *(_QWORD *)(v150 + *(int *)(v161 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v149, 0, 1, v36);
  }
  else
  {
    if (v152)
    {
      sub_1BA4A2E80(v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_170:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v149, (const void *)v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      goto LABEL_183;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v155 = swift_getEnumCaseMultiPayload();
      if (v155 == 2)
      {
        v447 = *(_QWORD *)v150;
        v448 = *(_QWORD *)(v150 + 8);
        v449 = *(_QWORD *)(v150 + 16);
        v450 = *(_BYTE *)(v150 + 24);
        sub_1BA690C00(v447, v448, v449, v450);
        *(_QWORD *)v149 = v447;
        *(_QWORD *)(v149 + 8) = v448;
        v37 = v577;
        *(_QWORD *)(v149 + 16) = v449;
        *(_BYTE *)(v149 + 24) = v450;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v155 == 1)
        {
          *(_QWORD *)v149 = *(_QWORD *)v150;
          *(_QWORD *)(v149 + 8) = *(_QWORD *)(v150 + 8);
          *(_QWORD *)(v149 + 16) = *(_QWORD *)(v150 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v539 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v539 - 8) + 16))(v149, v150, v539);
          v540 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v149 + *(int *)(v540 + 20)) = *(_QWORD *)(v150 + *(int *)(v540 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_183:
  v162 = a3[16];
  v163 = a1 + v162;
  v164 = a2 + v162;
  v165 = v38(a1 + v162, 1, v36);
  v166 = v38(v164, 1, v36);
  if (v165)
  {
    if (v166)
      goto LABEL_188;
    v168 = swift_getEnumCaseMultiPayload();
    if (v168 == 2)
    {
      v170 = *(_QWORD *)v164;
      v171 = *(_QWORD *)(v164 + 8);
      v172 = *(_QWORD *)(v164 + 16);
      v173 = *(_BYTE *)(v164 + 24);
      sub_1BA690C00(v170, v171, v172, v173);
      *(_QWORD *)v163 = v170;
      *(_QWORD *)(v163 + 8) = v171;
      v37 = v577;
      *(_QWORD *)(v163 + 16) = v172;
      *(_BYTE *)(v163 + 24) = v173;
    }
    else
    {
      if (v168 == 1)
      {
        *(_QWORD *)v163 = *(_QWORD *)v164;
        *(_QWORD *)(v163 + 8) = *(_QWORD *)(v164 + 8);
        *(_QWORD *)(v163 + 16) = *(_QWORD *)(v164 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v174 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v163, v164, v174);
        v175 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v163 + *(int *)(v175 + 20)) = *(_QWORD *)(v164 + *(int *)(v175 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v163, 0, 1, v36);
  }
  else
  {
    if (v166)
    {
      sub_1BA4A2E80(v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_188:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v163, (const void *)v164, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      goto LABEL_201;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v169 = swift_getEnumCaseMultiPayload();
      if (v169 == 2)
      {
        v451 = *(_QWORD *)v164;
        v452 = *(_QWORD *)(v164 + 8);
        v453 = *(_QWORD *)(v164 + 16);
        v454 = *(_BYTE *)(v164 + 24);
        sub_1BA690C00(v451, v452, v453, v454);
        *(_QWORD *)v163 = v451;
        *(_QWORD *)(v163 + 8) = v452;
        v37 = v577;
        *(_QWORD *)(v163 + 16) = v453;
        *(_BYTE *)(v163 + 24) = v454;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v169 == 1)
        {
          *(_QWORD *)v163 = *(_QWORD *)v164;
          *(_QWORD *)(v163 + 8) = *(_QWORD *)(v164 + 8);
          *(_QWORD *)(v163 + 16) = *(_QWORD *)(v164 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v541 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v541 - 8) + 16))(v163, v164, v541);
          v542 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v163 + *(int *)(v542 + 20)) = *(_QWORD *)(v164 + *(int *)(v542 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_201:
  v176 = a3[17];
  v177 = a1 + v176;
  v178 = a2 + v176;
  v179 = v38(a1 + v176, 1, v36);
  v180 = v38(v178, 1, v36);
  if (v179)
  {
    if (v180)
      goto LABEL_206;
    v182 = swift_getEnumCaseMultiPayload();
    if (v182 == 2)
    {
      v184 = *(_QWORD *)v178;
      v185 = *(_QWORD *)(v178 + 8);
      v186 = *(_QWORD *)(v178 + 16);
      v187 = *(_BYTE *)(v178 + 24);
      sub_1BA690C00(v184, v185, v186, v187);
      *(_QWORD *)v177 = v184;
      *(_QWORD *)(v177 + 8) = v185;
      v37 = v577;
      *(_QWORD *)(v177 + 16) = v186;
      *(_BYTE *)(v177 + 24) = v187;
    }
    else
    {
      if (v182 == 1)
      {
        *(_QWORD *)v177 = *(_QWORD *)v178;
        *(_QWORD *)(v177 + 8) = *(_QWORD *)(v178 + 8);
        *(_QWORD *)(v177 + 16) = *(_QWORD *)(v178 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v188 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v177, v178, v188);
        v189 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v177 + *(int *)(v189 + 20)) = *(_QWORD *)(v178 + *(int *)(v189 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v177, 0, 1, v36);
  }
  else
  {
    if (v180)
    {
      sub_1BA4A2E80(v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_206:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v177, (const void *)v178, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
      goto LABEL_219;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v183 = swift_getEnumCaseMultiPayload();
      if (v183 == 2)
      {
        v455 = *(_QWORD *)v178;
        v456 = *(_QWORD *)(v178 + 8);
        v457 = *(_QWORD *)(v178 + 16);
        v458 = *(_BYTE *)(v178 + 24);
        sub_1BA690C00(v455, v456, v457, v458);
        *(_QWORD *)v177 = v455;
        *(_QWORD *)(v177 + 8) = v456;
        v37 = v577;
        *(_QWORD *)(v177 + 16) = v457;
        *(_BYTE *)(v177 + 24) = v458;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v183 == 1)
        {
          *(_QWORD *)v177 = *(_QWORD *)v178;
          *(_QWORD *)(v177 + 8) = *(_QWORD *)(v178 + 8);
          *(_QWORD *)(v177 + 16) = *(_QWORD *)(v178 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v543 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v543 - 8) + 16))(v177, v178, v543);
          v544 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v177 + *(int *)(v544 + 20)) = *(_QWORD *)(v178 + *(int *)(v544 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_219:
  v190 = a3[18];
  v191 = a1 + v190;
  v192 = a2 + v190;
  v193 = v38(a1 + v190, 1, v36);
  v194 = v38(v192, 1, v36);
  if (v193)
  {
    if (v194)
      goto LABEL_224;
    v196 = swift_getEnumCaseMultiPayload();
    if (v196 == 2)
    {
      v198 = *(_QWORD *)v192;
      v199 = *(_QWORD *)(v192 + 8);
      v200 = *(_QWORD *)(v192 + 16);
      v201 = *(_BYTE *)(v192 + 24);
      sub_1BA690C00(v198, v199, v200, v201);
      *(_QWORD *)v191 = v198;
      *(_QWORD *)(v191 + 8) = v199;
      v37 = v577;
      *(_QWORD *)(v191 + 16) = v200;
      *(_BYTE *)(v191 + 24) = v201;
    }
    else
    {
      if (v196 == 1)
      {
        *(_QWORD *)v191 = *(_QWORD *)v192;
        *(_QWORD *)(v191 + 8) = *(_QWORD *)(v192 + 8);
        *(_QWORD *)(v191 + 16) = *(_QWORD *)(v192 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v202 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v191, v192, v202);
        v203 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v191 + *(int *)(v203 + 20)) = *(_QWORD *)(v192 + *(int *)(v203 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v191, 0, 1, v36);
  }
  else
  {
    if (v194)
    {
      sub_1BA4A2E80(v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_224:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v191, (const void *)v192, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
      goto LABEL_237;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v197 = swift_getEnumCaseMultiPayload();
      if (v197 == 2)
      {
        v459 = *(_QWORD *)v192;
        v460 = *(_QWORD *)(v192 + 8);
        v461 = *(_QWORD *)(v192 + 16);
        v462 = *(_BYTE *)(v192 + 24);
        sub_1BA690C00(v459, v460, v461, v462);
        *(_QWORD *)v191 = v459;
        *(_QWORD *)(v191 + 8) = v460;
        v37 = v577;
        *(_QWORD *)(v191 + 16) = v461;
        *(_BYTE *)(v191 + 24) = v462;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v197 == 1)
        {
          *(_QWORD *)v191 = *(_QWORD *)v192;
          *(_QWORD *)(v191 + 8) = *(_QWORD *)(v192 + 8);
          *(_QWORD *)(v191 + 16) = *(_QWORD *)(v192 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v545 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v545 - 8) + 16))(v191, v192, v545);
          v546 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v191 + *(int *)(v546 + 20)) = *(_QWORD *)(v192 + *(int *)(v546 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_237:
  v204 = a3[19];
  v205 = a1 + v204;
  v206 = a2 + v204;
  v207 = v38(a1 + v204, 1, v36);
  v208 = v38(v206, 1, v36);
  if (v207)
  {
    if (v208)
      goto LABEL_242;
    v210 = swift_getEnumCaseMultiPayload();
    if (v210 == 2)
    {
      v212 = *(_QWORD *)v206;
      v213 = *(_QWORD *)(v206 + 8);
      v214 = *(_QWORD *)(v206 + 16);
      v215 = *(_BYTE *)(v206 + 24);
      sub_1BA690C00(v212, v213, v214, v215);
      *(_QWORD *)v205 = v212;
      *(_QWORD *)(v205 + 8) = v213;
      v37 = v577;
      *(_QWORD *)(v205 + 16) = v214;
      *(_BYTE *)(v205 + 24) = v215;
    }
    else
    {
      if (v210 == 1)
      {
        *(_QWORD *)v205 = *(_QWORD *)v206;
        *(_QWORD *)(v205 + 8) = *(_QWORD *)(v206 + 8);
        *(_QWORD *)(v205 + 16) = *(_QWORD *)(v206 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v216 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v205, v206, v216);
        v217 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v205 + *(int *)(v217 + 20)) = *(_QWORD *)(v206 + *(int *)(v217 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v205, 0, 1, v36);
  }
  else
  {
    if (v208)
    {
      sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_242:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v205, (const void *)v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
      goto LABEL_255;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v211 = swift_getEnumCaseMultiPayload();
      if (v211 == 2)
      {
        v463 = *(_QWORD *)v206;
        v464 = *(_QWORD *)(v206 + 8);
        v465 = *(_QWORD *)(v206 + 16);
        v466 = *(_BYTE *)(v206 + 24);
        sub_1BA690C00(v463, v464, v465, v466);
        *(_QWORD *)v205 = v463;
        *(_QWORD *)(v205 + 8) = v464;
        v37 = v577;
        *(_QWORD *)(v205 + 16) = v465;
        *(_BYTE *)(v205 + 24) = v466;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v211 == 1)
        {
          *(_QWORD *)v205 = *(_QWORD *)v206;
          *(_QWORD *)(v205 + 8) = *(_QWORD *)(v206 + 8);
          *(_QWORD *)(v205 + 16) = *(_QWORD *)(v206 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v547 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v547 - 8) + 16))(v205, v206, v547);
          v548 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v205 + *(int *)(v548 + 20)) = *(_QWORD *)(v206 + *(int *)(v548 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_255:
  v218 = a3[20];
  v219 = a1 + v218;
  v220 = a2 + v218;
  v221 = v38(a1 + v218, 1, v36);
  v222 = v38(v220, 1, v36);
  if (v221)
  {
    if (v222)
      goto LABEL_260;
    v224 = swift_getEnumCaseMultiPayload();
    if (v224 == 2)
    {
      v226 = *(_QWORD *)v220;
      v227 = *(_QWORD *)(v220 + 8);
      v228 = *(_QWORD *)(v220 + 16);
      v229 = *(_BYTE *)(v220 + 24);
      sub_1BA690C00(v226, v227, v228, v229);
      *(_QWORD *)v219 = v226;
      *(_QWORD *)(v219 + 8) = v227;
      v37 = v577;
      *(_QWORD *)(v219 + 16) = v228;
      *(_BYTE *)(v219 + 24) = v229;
    }
    else
    {
      if (v224 == 1)
      {
        *(_QWORD *)v219 = *(_QWORD *)v220;
        *(_QWORD *)(v219 + 8) = *(_QWORD *)(v220 + 8);
        *(_QWORD *)(v219 + 16) = *(_QWORD *)(v220 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v230 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v219, v220, v230);
        v231 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v219 + *(int *)(v231 + 20)) = *(_QWORD *)(v220 + *(int *)(v231 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v219, 0, 1, v36);
  }
  else
  {
    if (v222)
    {
      sub_1BA4A2E80(v219, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_260:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v219, (const void *)v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
      goto LABEL_273;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v219, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v225 = swift_getEnumCaseMultiPayload();
      if (v225 == 2)
      {
        v467 = *(_QWORD *)v220;
        v468 = *(_QWORD *)(v220 + 8);
        v469 = *(_QWORD *)(v220 + 16);
        v470 = *(_BYTE *)(v220 + 24);
        sub_1BA690C00(v467, v468, v469, v470);
        *(_QWORD *)v219 = v467;
        *(_QWORD *)(v219 + 8) = v468;
        v37 = v577;
        *(_QWORD *)(v219 + 16) = v469;
        *(_BYTE *)(v219 + 24) = v470;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v225 == 1)
        {
          *(_QWORD *)v219 = *(_QWORD *)v220;
          *(_QWORD *)(v219 + 8) = *(_QWORD *)(v220 + 8);
          *(_QWORD *)(v219 + 16) = *(_QWORD *)(v220 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v549 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v549 - 8) + 16))(v219, v220, v549);
          v550 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v219 + *(int *)(v550 + 20)) = *(_QWORD *)(v220 + *(int *)(v550 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_273:
  v232 = a3[21];
  v233 = a1 + v232;
  v234 = a2 + v232;
  v235 = v38(a1 + v232, 1, v36);
  v236 = v38(v234, 1, v36);
  if (v235)
  {
    if (v236)
      goto LABEL_278;
    v238 = swift_getEnumCaseMultiPayload();
    if (v238 == 2)
    {
      v240 = *(_QWORD *)v234;
      v241 = *(_QWORD *)(v234 + 8);
      v242 = *(_QWORD *)(v234 + 16);
      v243 = *(_BYTE *)(v234 + 24);
      sub_1BA690C00(v240, v241, v242, v243);
      *(_QWORD *)v233 = v240;
      *(_QWORD *)(v233 + 8) = v241;
      v37 = v577;
      *(_QWORD *)(v233 + 16) = v242;
      *(_BYTE *)(v233 + 24) = v243;
    }
    else
    {
      if (v238 == 1)
      {
        *(_QWORD *)v233 = *(_QWORD *)v234;
        *(_QWORD *)(v233 + 8) = *(_QWORD *)(v234 + 8);
        *(_QWORD *)(v233 + 16) = *(_QWORD *)(v234 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v244 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v233, v234, v244);
        v245 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v233 + *(int *)(v245 + 20)) = *(_QWORD *)(v234 + *(int *)(v245 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v233, 0, 1, v36);
  }
  else
  {
    if (v236)
    {
      sub_1BA4A2E80(v233, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_278:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v233, (const void *)v234, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
      goto LABEL_291;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v233, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v239 = swift_getEnumCaseMultiPayload();
      if (v239 == 2)
      {
        v471 = *(_QWORD *)v234;
        v472 = *(_QWORD *)(v234 + 8);
        v473 = *(_QWORD *)(v234 + 16);
        v474 = *(_BYTE *)(v234 + 24);
        sub_1BA690C00(v471, v472, v473, v474);
        *(_QWORD *)v233 = v471;
        *(_QWORD *)(v233 + 8) = v472;
        v37 = v577;
        *(_QWORD *)(v233 + 16) = v473;
        *(_BYTE *)(v233 + 24) = v474;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v239 == 1)
        {
          *(_QWORD *)v233 = *(_QWORD *)v234;
          *(_QWORD *)(v233 + 8) = *(_QWORD *)(v234 + 8);
          *(_QWORD *)(v233 + 16) = *(_QWORD *)(v234 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v551 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v551 - 8) + 16))(v233, v234, v551);
          v552 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v233 + *(int *)(v552 + 20)) = *(_QWORD *)(v234 + *(int *)(v552 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_291:
  v246 = a3[22];
  v247 = a1 + v246;
  v248 = a2 + v246;
  v249 = v38(a1 + v246, 1, v36);
  v250 = v38(v248, 1, v36);
  if (v249)
  {
    if (v250)
      goto LABEL_296;
    v252 = swift_getEnumCaseMultiPayload();
    if (v252 == 2)
    {
      v254 = *(_QWORD *)v248;
      v255 = *(_QWORD *)(v248 + 8);
      v256 = *(_QWORD *)(v248 + 16);
      v257 = *(_BYTE *)(v248 + 24);
      sub_1BA690C00(v254, v255, v256, v257);
      *(_QWORD *)v247 = v254;
      *(_QWORD *)(v247 + 8) = v255;
      v37 = v577;
      *(_QWORD *)(v247 + 16) = v256;
      *(_BYTE *)(v247 + 24) = v257;
    }
    else
    {
      if (v252 == 1)
      {
        *(_QWORD *)v247 = *(_QWORD *)v248;
        *(_QWORD *)(v247 + 8) = *(_QWORD *)(v248 + 8);
        *(_QWORD *)(v247 + 16) = *(_QWORD *)(v248 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v258 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(v247, v248, v258);
        v259 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v247 + *(int *)(v259 + 20)) = *(_QWORD *)(v248 + *(int *)(v259 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v247, 0, 1, v36);
  }
  else
  {
    if (v250)
    {
      sub_1BA4A2E80(v247, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_296:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v247, (const void *)v248, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
      goto LABEL_309;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v247, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v253 = swift_getEnumCaseMultiPayload();
      if (v253 == 2)
      {
        v475 = *(_QWORD *)v248;
        v476 = *(_QWORD *)(v248 + 8);
        v477 = *(_QWORD *)(v248 + 16);
        v478 = *(_BYTE *)(v248 + 24);
        sub_1BA690C00(v475, v476, v477, v478);
        *(_QWORD *)v247 = v475;
        *(_QWORD *)(v247 + 8) = v476;
        v37 = v577;
        *(_QWORD *)(v247 + 16) = v477;
        *(_BYTE *)(v247 + 24) = v478;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v253 == 1)
        {
          *(_QWORD *)v247 = *(_QWORD *)v248;
          *(_QWORD *)(v247 + 8) = *(_QWORD *)(v248 + 8);
          *(_QWORD *)(v247 + 16) = *(_QWORD *)(v248 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v553 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v553 - 8) + 16))(v247, v248, v553);
          v554 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v247 + *(int *)(v554 + 20)) = *(_QWORD *)(v248 + *(int *)(v554 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_309:
  v260 = a3[23];
  v261 = a1 + v260;
  v262 = a2 + v260;
  v263 = v38(a1 + v260, 1, v36);
  v264 = v38(v262, 1, v36);
  if (v263)
  {
    if (v264)
      goto LABEL_314;
    v266 = swift_getEnumCaseMultiPayload();
    if (v266 == 2)
    {
      v268 = *(_QWORD *)v262;
      v269 = *(_QWORD *)(v262 + 8);
      v270 = *(_QWORD *)(v262 + 16);
      v271 = *(_BYTE *)(v262 + 24);
      sub_1BA690C00(v268, v269, v270, v271);
      *(_QWORD *)v261 = v268;
      *(_QWORD *)(v261 + 8) = v269;
      v37 = v577;
      *(_QWORD *)(v261 + 16) = v270;
      *(_BYTE *)(v261 + 24) = v271;
    }
    else
    {
      if (v266 == 1)
      {
        *(_QWORD *)v261 = *(_QWORD *)v262;
        *(_QWORD *)(v261 + 8) = *(_QWORD *)(v262 + 8);
        *(_QWORD *)(v261 + 16) = *(_QWORD *)(v262 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v272 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v272 - 8) + 16))(v261, v262, v272);
        v273 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v261 + *(int *)(v273 + 20)) = *(_QWORD *)(v262 + *(int *)(v273 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v261, 0, 1, v36);
  }
  else
  {
    if (v264)
    {
      sub_1BA4A2E80(v261, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_314:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v261, (const void *)v262, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
      goto LABEL_327;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v261, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v267 = swift_getEnumCaseMultiPayload();
      if (v267 == 2)
      {
        v479 = *(_QWORD *)v262;
        v480 = *(_QWORD *)(v262 + 8);
        v481 = *(_QWORD *)(v262 + 16);
        v482 = *(_BYTE *)(v262 + 24);
        sub_1BA690C00(v479, v480, v481, v482);
        *(_QWORD *)v261 = v479;
        *(_QWORD *)(v261 + 8) = v480;
        v37 = v577;
        *(_QWORD *)(v261 + 16) = v481;
        *(_BYTE *)(v261 + 24) = v482;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v267 == 1)
        {
          *(_QWORD *)v261 = *(_QWORD *)v262;
          *(_QWORD *)(v261 + 8) = *(_QWORD *)(v262 + 8);
          *(_QWORD *)(v261 + 16) = *(_QWORD *)(v262 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v555 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v555 - 8) + 16))(v261, v262, v555);
          v556 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v261 + *(int *)(v556 + 20)) = *(_QWORD *)(v262 + *(int *)(v556 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_327:
  v274 = a3[24];
  v275 = a1 + v274;
  v276 = a2 + v274;
  v277 = v38(a1 + v274, 1, v36);
  v278 = v38(v276, 1, v36);
  if (v277)
  {
    if (v278)
      goto LABEL_332;
    v280 = swift_getEnumCaseMultiPayload();
    if (v280 == 2)
    {
      v282 = *(_QWORD *)v276;
      v283 = *(_QWORD *)(v276 + 8);
      v284 = *(_QWORD *)(v276 + 16);
      v285 = *(_BYTE *)(v276 + 24);
      sub_1BA690C00(v282, v283, v284, v285);
      *(_QWORD *)v275 = v282;
      *(_QWORD *)(v275 + 8) = v283;
      v37 = v577;
      *(_QWORD *)(v275 + 16) = v284;
      *(_BYTE *)(v275 + 24) = v285;
    }
    else
    {
      if (v280 == 1)
      {
        *(_QWORD *)v275 = *(_QWORD *)v276;
        *(_QWORD *)(v275 + 8) = *(_QWORD *)(v276 + 8);
        *(_QWORD *)(v275 + 16) = *(_QWORD *)(v276 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v286 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v286 - 8) + 16))(v275, v276, v286);
        v287 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v275 + *(int *)(v287 + 20)) = *(_QWORD *)(v276 + *(int *)(v287 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v275, 0, 1, v36);
  }
  else
  {
    if (v278)
    {
      sub_1BA4A2E80(v275, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_332:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v275, (const void *)v276, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
      goto LABEL_345;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v275, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v281 = swift_getEnumCaseMultiPayload();
      if (v281 == 2)
      {
        v483 = *(_QWORD *)v276;
        v484 = *(_QWORD *)(v276 + 8);
        v485 = *(_QWORD *)(v276 + 16);
        v486 = *(_BYTE *)(v276 + 24);
        sub_1BA690C00(v483, v484, v485, v486);
        *(_QWORD *)v275 = v483;
        *(_QWORD *)(v275 + 8) = v484;
        v37 = v577;
        *(_QWORD *)(v275 + 16) = v485;
        *(_BYTE *)(v275 + 24) = v486;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v281 == 1)
        {
          *(_QWORD *)v275 = *(_QWORD *)v276;
          *(_QWORD *)(v275 + 8) = *(_QWORD *)(v276 + 8);
          *(_QWORD *)(v275 + 16) = *(_QWORD *)(v276 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v557 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v557 - 8) + 16))(v275, v276, v557);
          v558 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v275 + *(int *)(v558 + 20)) = *(_QWORD *)(v276 + *(int *)(v558 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_345:
  v288 = a3[25];
  v289 = a1 + v288;
  v290 = a2 + v288;
  v291 = v38(a1 + v288, 1, v36);
  v292 = v38(v290, 1, v36);
  if (v291)
  {
    if (v292)
      goto LABEL_350;
    v294 = swift_getEnumCaseMultiPayload();
    if (v294 == 2)
    {
      v296 = *(_QWORD *)v290;
      v297 = *(_QWORD *)(v290 + 8);
      v298 = *(_QWORD *)(v290 + 16);
      v299 = *(_BYTE *)(v290 + 24);
      sub_1BA690C00(v296, v297, v298, v299);
      *(_QWORD *)v289 = v296;
      *(_QWORD *)(v289 + 8) = v297;
      v37 = v577;
      *(_QWORD *)(v289 + 16) = v298;
      *(_BYTE *)(v289 + 24) = v299;
    }
    else
    {
      if (v294 == 1)
      {
        *(_QWORD *)v289 = *(_QWORD *)v290;
        *(_QWORD *)(v289 + 8) = *(_QWORD *)(v290 + 8);
        *(_QWORD *)(v289 + 16) = *(_QWORD *)(v290 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v300 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v300 - 8) + 16))(v289, v290, v300);
        v301 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v289 + *(int *)(v301 + 20)) = *(_QWORD *)(v290 + *(int *)(v301 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v289, 0, 1, v36);
  }
  else
  {
    if (v292)
    {
      sub_1BA4A2E80(v289, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_350:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v289, (const void *)v290, *(_QWORD *)(*(_QWORD *)(v293 - 8) + 64));
      goto LABEL_363;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v289, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v295 = swift_getEnumCaseMultiPayload();
      if (v295 == 2)
      {
        v487 = *(_QWORD *)v290;
        v488 = *(_QWORD *)(v290 + 8);
        v489 = *(_QWORD *)(v290 + 16);
        v490 = *(_BYTE *)(v290 + 24);
        sub_1BA690C00(v487, v488, v489, v490);
        *(_QWORD *)v289 = v487;
        *(_QWORD *)(v289 + 8) = v488;
        v37 = v577;
        *(_QWORD *)(v289 + 16) = v489;
        *(_BYTE *)(v289 + 24) = v490;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v295 == 1)
        {
          *(_QWORD *)v289 = *(_QWORD *)v290;
          *(_QWORD *)(v289 + 8) = *(_QWORD *)(v290 + 8);
          *(_QWORD *)(v289 + 16) = *(_QWORD *)(v290 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v559 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v559 - 8) + 16))(v289, v290, v559);
          v560 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v289 + *(int *)(v560 + 20)) = *(_QWORD *)(v290 + *(int *)(v560 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_363:
  v302 = a3[26];
  v303 = a1 + v302;
  v304 = a2 + v302;
  v305 = v38(a1 + v302, 1, v36);
  v306 = v38(v304, 1, v36);
  if (v305)
  {
    if (v306)
      goto LABEL_368;
    v308 = swift_getEnumCaseMultiPayload();
    if (v308 == 2)
    {
      v310 = *(_QWORD *)v304;
      v311 = *(_QWORD *)(v304 + 8);
      v312 = *(_QWORD *)(v304 + 16);
      v313 = *(_BYTE *)(v304 + 24);
      sub_1BA690C00(v310, v311, v312, v313);
      *(_QWORD *)v303 = v310;
      *(_QWORD *)(v303 + 8) = v311;
      v37 = v577;
      *(_QWORD *)(v303 + 16) = v312;
      *(_BYTE *)(v303 + 24) = v313;
    }
    else
    {
      if (v308 == 1)
      {
        *(_QWORD *)v303 = *(_QWORD *)v304;
        *(_QWORD *)(v303 + 8) = *(_QWORD *)(v304 + 8);
        *(_QWORD *)(v303 + 16) = *(_QWORD *)(v304 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v314 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v303, v304, v314);
        v315 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v303 + *(int *)(v315 + 20)) = *(_QWORD *)(v304 + *(int *)(v315 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v303, 0, 1, v36);
  }
  else
  {
    if (v306)
    {
      sub_1BA4A2E80(v303, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_368:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v303, (const void *)v304, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
      goto LABEL_381;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v303, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v309 = swift_getEnumCaseMultiPayload();
      if (v309 == 2)
      {
        v491 = *(_QWORD *)v304;
        v492 = *(_QWORD *)(v304 + 8);
        v493 = *(_QWORD *)(v304 + 16);
        v494 = *(_BYTE *)(v304 + 24);
        sub_1BA690C00(v491, v492, v493, v494);
        *(_QWORD *)v303 = v491;
        *(_QWORD *)(v303 + 8) = v492;
        v37 = v577;
        *(_QWORD *)(v303 + 16) = v493;
        *(_BYTE *)(v303 + 24) = v494;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v309 == 1)
        {
          *(_QWORD *)v303 = *(_QWORD *)v304;
          *(_QWORD *)(v303 + 8) = *(_QWORD *)(v304 + 8);
          *(_QWORD *)(v303 + 16) = *(_QWORD *)(v304 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v561 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v303, v304, v561);
          v562 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v303 + *(int *)(v562 + 20)) = *(_QWORD *)(v304 + *(int *)(v562 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_381:
  v316 = a3[27];
  v317 = a1 + v316;
  v318 = a2 + v316;
  v319 = v38(a1 + v316, 1, v36);
  v320 = v38(v318, 1, v36);
  if (v319)
  {
    if (v320)
      goto LABEL_386;
    v322 = swift_getEnumCaseMultiPayload();
    if (v322 == 2)
    {
      v324 = *(_QWORD *)v318;
      v325 = *(_QWORD *)(v318 + 8);
      v326 = *(_QWORD *)(v318 + 16);
      v327 = *(_BYTE *)(v318 + 24);
      sub_1BA690C00(v324, v325, v326, v327);
      *(_QWORD *)v317 = v324;
      *(_QWORD *)(v317 + 8) = v325;
      v37 = v577;
      *(_QWORD *)(v317 + 16) = v326;
      *(_BYTE *)(v317 + 24) = v327;
    }
    else
    {
      if (v322 == 1)
      {
        *(_QWORD *)v317 = *(_QWORD *)v318;
        *(_QWORD *)(v317 + 8) = *(_QWORD *)(v318 + 8);
        *(_QWORD *)(v317 + 16) = *(_QWORD *)(v318 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v328 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v317, v318, v328);
        v329 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v317 + *(int *)(v329 + 20)) = *(_QWORD *)(v318 + *(int *)(v329 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v317, 0, 1, v36);
  }
  else
  {
    if (v320)
    {
      sub_1BA4A2E80(v317, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_386:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v317, (const void *)v318, *(_QWORD *)(*(_QWORD *)(v321 - 8) + 64));
      goto LABEL_399;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v317, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v323 = swift_getEnumCaseMultiPayload();
      if (v323 == 2)
      {
        v495 = *(_QWORD *)v318;
        v496 = *(_QWORD *)(v318 + 8);
        v497 = *(_QWORD *)(v318 + 16);
        v498 = *(_BYTE *)(v318 + 24);
        sub_1BA690C00(v495, v496, v497, v498);
        *(_QWORD *)v317 = v495;
        *(_QWORD *)(v317 + 8) = v496;
        v37 = v577;
        *(_QWORD *)(v317 + 16) = v497;
        *(_BYTE *)(v317 + 24) = v498;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v323 == 1)
        {
          *(_QWORD *)v317 = *(_QWORD *)v318;
          *(_QWORD *)(v317 + 8) = *(_QWORD *)(v318 + 8);
          *(_QWORD *)(v317 + 16) = *(_QWORD *)(v318 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v563 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v563 - 8) + 16))(v317, v318, v563);
          v564 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v317 + *(int *)(v564 + 20)) = *(_QWORD *)(v318 + *(int *)(v564 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_399:
  v330 = a3[28];
  v331 = a1 + v330;
  v332 = a2 + v330;
  v333 = v38(a1 + v330, 1, v36);
  v334 = v38(v332, 1, v36);
  if (v333)
  {
    if (v334)
      goto LABEL_404;
    v336 = swift_getEnumCaseMultiPayload();
    if (v336 == 2)
    {
      v338 = *(_QWORD *)v332;
      v339 = *(_QWORD *)(v332 + 8);
      v340 = *(_QWORD *)(v332 + 16);
      v341 = *(_BYTE *)(v332 + 24);
      sub_1BA690C00(v338, v339, v340, v341);
      *(_QWORD *)v331 = v338;
      *(_QWORD *)(v331 + 8) = v339;
      v37 = v577;
      *(_QWORD *)(v331 + 16) = v340;
      *(_BYTE *)(v331 + 24) = v341;
    }
    else
    {
      if (v336 == 1)
      {
        *(_QWORD *)v331 = *(_QWORD *)v332;
        *(_QWORD *)(v331 + 8) = *(_QWORD *)(v332 + 8);
        *(_QWORD *)(v331 + 16) = *(_QWORD *)(v332 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v342 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v331, v332, v342);
        v343 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v331 + *(int *)(v343 + 20)) = *(_QWORD *)(v332 + *(int *)(v343 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v331, 0, 1, v36);
  }
  else
  {
    if (v334)
    {
      sub_1BA4A2E80(v331, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_404:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v331, (const void *)v332, *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64));
      goto LABEL_417;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v331, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v337 = swift_getEnumCaseMultiPayload();
      if (v337 == 2)
      {
        v499 = *(_QWORD *)v332;
        v500 = *(_QWORD *)(v332 + 8);
        v501 = *(_QWORD *)(v332 + 16);
        v502 = *(_BYTE *)(v332 + 24);
        sub_1BA690C00(v499, v500, v501, v502);
        *(_QWORD *)v331 = v499;
        *(_QWORD *)(v331 + 8) = v500;
        v37 = v577;
        *(_QWORD *)(v331 + 16) = v501;
        *(_BYTE *)(v331 + 24) = v502;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v337 == 1)
        {
          *(_QWORD *)v331 = *(_QWORD *)v332;
          *(_QWORD *)(v331 + 8) = *(_QWORD *)(v332 + 8);
          *(_QWORD *)(v331 + 16) = *(_QWORD *)(v332 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v565 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v565 - 8) + 16))(v331, v332, v565);
          v566 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v331 + *(int *)(v566 + 20)) = *(_QWORD *)(v332 + *(int *)(v566 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_417:
  v344 = a3[29];
  v345 = a1 + v344;
  v346 = a2 + v344;
  v347 = v38(a1 + v344, 1, v36);
  v348 = v38(v346, 1, v36);
  if (v347)
  {
    if (v348)
      goto LABEL_422;
    v350 = swift_getEnumCaseMultiPayload();
    if (v350 == 2)
    {
      v352 = *(_QWORD *)v346;
      v353 = *(_QWORD *)(v346 + 8);
      v354 = *(_QWORD *)(v346 + 16);
      v355 = *(_BYTE *)(v346 + 24);
      sub_1BA690C00(v352, v353, v354, v355);
      *(_QWORD *)v345 = v352;
      *(_QWORD *)(v345 + 8) = v353;
      v37 = v577;
      *(_QWORD *)(v345 + 16) = v354;
      *(_BYTE *)(v345 + 24) = v355;
    }
    else
    {
      if (v350 == 1)
      {
        *(_QWORD *)v345 = *(_QWORD *)v346;
        *(_QWORD *)(v345 + 8) = *(_QWORD *)(v346 + 8);
        *(_QWORD *)(v345 + 16) = *(_QWORD *)(v346 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v356 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v345, v346, v356);
        v357 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v345 + *(int *)(v357 + 20)) = *(_QWORD *)(v346 + *(int *)(v357 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v345, 0, 1, v36);
  }
  else
  {
    if (v348)
    {
      sub_1BA4A2E80(v345, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_422:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v345, (const void *)v346, *(_QWORD *)(*(_QWORD *)(v349 - 8) + 64));
      goto LABEL_435;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v345, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v351 = swift_getEnumCaseMultiPayload();
      if (v351 == 2)
      {
        v503 = *(_QWORD *)v346;
        v504 = *(_QWORD *)(v346 + 8);
        v505 = *(_QWORD *)(v346 + 16);
        v506 = *(_BYTE *)(v346 + 24);
        sub_1BA690C00(v503, v504, v505, v506);
        *(_QWORD *)v345 = v503;
        *(_QWORD *)(v345 + 8) = v504;
        v37 = v577;
        *(_QWORD *)(v345 + 16) = v505;
        *(_BYTE *)(v345 + 24) = v506;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v351 == 1)
        {
          *(_QWORD *)v345 = *(_QWORD *)v346;
          *(_QWORD *)(v345 + 8) = *(_QWORD *)(v346 + 8);
          *(_QWORD *)(v345 + 16) = *(_QWORD *)(v346 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v567 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v567 - 8) + 16))(v345, v346, v567);
          v568 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v345 + *(int *)(v568 + 20)) = *(_QWORD *)(v346 + *(int *)(v568 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_435:
  v358 = a3[30];
  v359 = a1 + v358;
  v360 = a2 + v358;
  v361 = v38(a1 + v358, 1, v36);
  v362 = v38(v360, 1, v36);
  if (v361)
  {
    if (v362)
      goto LABEL_440;
    v364 = swift_getEnumCaseMultiPayload();
    if (v364 == 2)
    {
      v366 = *(_QWORD *)v360;
      v367 = *(_QWORD *)(v360 + 8);
      v368 = *(_QWORD *)(v360 + 16);
      v369 = *(_BYTE *)(v360 + 24);
      sub_1BA690C00(v366, v367, v368, v369);
      *(_QWORD *)v359 = v366;
      *(_QWORD *)(v359 + 8) = v367;
      v37 = v577;
      *(_QWORD *)(v359 + 16) = v368;
      *(_BYTE *)(v359 + 24) = v369;
    }
    else
    {
      if (v364 == 1)
      {
        *(_QWORD *)v359 = *(_QWORD *)v360;
        *(_QWORD *)(v359 + 8) = *(_QWORD *)(v360 + 8);
        *(_QWORD *)(v359 + 16) = *(_QWORD *)(v360 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v370 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v359, v360, v370);
        v371 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v359 + *(int *)(v371 + 20)) = *(_QWORD *)(v360 + *(int *)(v371 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v359, 0, 1, v36);
  }
  else
  {
    if (v362)
    {
      sub_1BA4A2E80(v359, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_440:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v359, (const void *)v360, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
      goto LABEL_453;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v359, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v365 = swift_getEnumCaseMultiPayload();
      if (v365 == 2)
      {
        v507 = *(_QWORD *)v360;
        v508 = *(_QWORD *)(v360 + 8);
        v509 = *(_QWORD *)(v360 + 16);
        v510 = *(_BYTE *)(v360 + 24);
        sub_1BA690C00(v507, v508, v509, v510);
        *(_QWORD *)v359 = v507;
        *(_QWORD *)(v359 + 8) = v508;
        v37 = v577;
        *(_QWORD *)(v359 + 16) = v509;
        *(_BYTE *)(v359 + 24) = v510;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v365 == 1)
        {
          *(_QWORD *)v359 = *(_QWORD *)v360;
          *(_QWORD *)(v359 + 8) = *(_QWORD *)(v360 + 8);
          *(_QWORD *)(v359 + 16) = *(_QWORD *)(v360 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v569 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v569 - 8) + 16))(v359, v360, v569);
          v570 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v359 + *(int *)(v570 + 20)) = *(_QWORD *)(v360 + *(int *)(v570 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_453:
  v372 = a3[31];
  v373 = a1 + v372;
  v374 = a2 + v372;
  v375 = v38(a1 + v372, 1, v36);
  v376 = v38(v374, 1, v36);
  if (v375)
  {
    if (v376)
      goto LABEL_458;
    v378 = swift_getEnumCaseMultiPayload();
    if (v378 == 2)
    {
      v380 = *(_QWORD *)v374;
      v381 = *(_QWORD *)(v374 + 8);
      v382 = *(_QWORD *)(v374 + 16);
      v383 = *(_BYTE *)(v374 + 24);
      sub_1BA690C00(v380, v381, v382, v383);
      *(_QWORD *)v373 = v380;
      *(_QWORD *)(v373 + 8) = v381;
      v37 = v577;
      *(_QWORD *)(v373 + 16) = v382;
      *(_BYTE *)(v373 + 24) = v383;
    }
    else
    {
      if (v378 == 1)
      {
        *(_QWORD *)v373 = *(_QWORD *)v374;
        *(_QWORD *)(v373 + 8) = *(_QWORD *)(v374 + 8);
        *(_QWORD *)(v373 + 16) = *(_QWORD *)(v374 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v384 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v373, v374, v384);
        v385 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v373 + *(int *)(v385 + 20)) = *(_QWORD *)(v374 + *(int *)(v385 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v373, 0, 1, v36);
  }
  else
  {
    if (v376)
    {
      sub_1BA4A2E80(v373, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_458:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v373, (const void *)v374, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
      goto LABEL_471;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v373, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v379 = swift_getEnumCaseMultiPayload();
      if (v379 == 2)
      {
        v511 = *(_QWORD *)v374;
        v512 = *(_QWORD *)(v374 + 8);
        v513 = *(_QWORD *)(v374 + 16);
        v514 = *(_BYTE *)(v374 + 24);
        sub_1BA690C00(v511, v512, v513, v514);
        *(_QWORD *)v373 = v511;
        *(_QWORD *)(v373 + 8) = v512;
        v37 = v577;
        *(_QWORD *)(v373 + 16) = v513;
        *(_BYTE *)(v373 + 24) = v514;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v379 == 1)
        {
          *(_QWORD *)v373 = *(_QWORD *)v374;
          *(_QWORD *)(v373 + 8) = *(_QWORD *)(v374 + 8);
          *(_QWORD *)(v373 + 16) = *(_QWORD *)(v374 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v571 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v571 - 8) + 16))(v373, v374, v571);
          v572 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v373 + *(int *)(v572 + 20)) = *(_QWORD *)(v374 + *(int *)(v572 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_471:
  v386 = a3[32];
  v387 = a1 + v386;
  v388 = a2 + v386;
  v389 = v38(a1 + v386, 1, v36);
  v390 = v38(v388, 1, v36);
  if (v389)
  {
    if (v390)
      goto LABEL_476;
    v392 = swift_getEnumCaseMultiPayload();
    if (v392 == 2)
    {
      v394 = *(_QWORD *)v388;
      v395 = *(_QWORD *)(v388 + 8);
      v396 = *(_QWORD *)(v388 + 16);
      v397 = *(_BYTE *)(v388 + 24);
      sub_1BA690C00(v394, v395, v396, v397);
      *(_QWORD *)v387 = v394;
      *(_QWORD *)(v387 + 8) = v395;
      v37 = v577;
      *(_QWORD *)(v387 + 16) = v396;
      *(_BYTE *)(v387 + 24) = v397;
    }
    else
    {
      if (v392 == 1)
      {
        *(_QWORD *)v387 = *(_QWORD *)v388;
        *(_QWORD *)(v387 + 8) = *(_QWORD *)(v388 + 8);
        *(_QWORD *)(v387 + 16) = *(_QWORD *)(v388 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v398 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v398 - 8) + 16))(v387, v388, v398);
        v399 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v387 + *(int *)(v399 + 20)) = *(_QWORD *)(v388 + *(int *)(v399 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v387, 0, 1, v36);
  }
  else
  {
    if (v390)
    {
      sub_1BA4A2E80(v387, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_476:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v387, (const void *)v388, *(_QWORD *)(*(_QWORD *)(v391 - 8) + 64));
      goto LABEL_489;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v387, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v393 = swift_getEnumCaseMultiPayload();
      if (v393 == 2)
      {
        v515 = *(_QWORD *)v388;
        v516 = *(_QWORD *)(v388 + 8);
        v517 = *(_QWORD *)(v388 + 16);
        v518 = *(_BYTE *)(v388 + 24);
        sub_1BA690C00(v515, v516, v517, v518);
        *(_QWORD *)v387 = v515;
        *(_QWORD *)(v387 + 8) = v516;
        v37 = v577;
        *(_QWORD *)(v387 + 16) = v517;
        *(_BYTE *)(v387 + 24) = v518;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v393 == 1)
        {
          *(_QWORD *)v387 = *(_QWORD *)v388;
          *(_QWORD *)(v387 + 8) = *(_QWORD *)(v388 + 8);
          *(_QWORD *)(v387 + 16) = *(_QWORD *)(v388 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v573 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v573 - 8) + 16))(v387, v388, v573);
          v574 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v387 + *(int *)(v574 + 20)) = *(_QWORD *)(v388 + *(int *)(v574 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_489:
  v400 = a3[33];
  v401 = a1 + v400;
  v402 = a2 + v400;
  v403 = v38(a1 + v400, 1, v36);
  v404 = v38(v402, 1, v36);
  if (v403)
  {
    if (v404)
      goto LABEL_494;
    v406 = swift_getEnumCaseMultiPayload();
    if (v406 == 2)
    {
      v408 = *(_QWORD *)v402;
      v409 = *(_QWORD *)(v402 + 8);
      v410 = *(_QWORD *)(v402 + 16);
      v411 = *(_BYTE *)(v402 + 24);
      sub_1BA690C00(v408, v409, v410, v411);
      *(_QWORD *)v401 = v408;
      *(_QWORD *)(v401 + 8) = v409;
      *(_QWORD *)(v401 + 16) = v410;
      *(_BYTE *)(v401 + 24) = v411;
    }
    else
    {
      if (v406 == 1)
      {
        *(_QWORD *)v401 = *(_QWORD *)v402;
        *(_QWORD *)(v401 + 8) = *(_QWORD *)(v402 + 8);
        *(_QWORD *)(v401 + 16) = *(_QWORD *)(v402 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v412 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(v401, v402, v412);
        v413 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v401 + *(int *)(v413 + 20)) = *(_QWORD *)(v402 + *(int *)(v413 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v401, 0, 1, v36);
  }
  else
  {
    if (v404)
    {
      sub_1BA4A2E80(v401, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_494:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy((void *)v401, (const void *)v402, *(_QWORD *)(*(_QWORD *)(v405 - 8) + 64));
      return a1;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80(v401, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v407 = swift_getEnumCaseMultiPayload();
      if (v407 == 2)
      {
        v519 = *(_QWORD *)v402;
        v520 = *(_QWORD *)(v402 + 8);
        v521 = *(_QWORD *)(v402 + 16);
        v522 = *(_BYTE *)(v402 + 24);
        sub_1BA690C00(v519, v520, v521, v522);
        *(_QWORD *)v401 = v519;
        *(_QWORD *)(v401 + 8) = v520;
        *(_QWORD *)(v401 + 16) = v521;
        *(_BYTE *)(v401 + 24) = v522;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v407 == 1)
        {
          *(_QWORD *)v401 = *(_QWORD *)v402;
          *(_QWORD *)(v401 + 8) = *(_QWORD *)(v402 + 8);
          *(_QWORD *)(v401 + 16) = *(_QWORD *)(v402 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v575 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v575 - 8) + 16))(v401, v402, v575);
          v576 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v401 + *(int *)(v576 + 20)) = *(_QWORD *)(v402 + *(int *)(v576 + 20));
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
  }
  return a1;
}

char *initializeWithTake for FormatRemoteVideo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;

  v6 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    v13 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&v10[*(int *)(v13 + 20)] = *(_QWORD *)&v11[*(int *)(v13 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (swift_getEnumCaseMultiPayload())
  {
    v17 = *(_QWORD *)(v6 - 8);
    memcpy(v15, v16, *(_QWORD *)(v17 + 64));
  }
  else
  {
    v18 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
    v19 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&v15[*(int *)(v19 + 20)] = *(_QWORD *)&v16[*(int *)(v19 + 20)];
    swift_storeEnumTagMultiPayload();
    v17 = *(_QWORD *)(v6 - 8);
  }
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(&a2[v20], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v21, v22, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v25 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v21, v22, v25);
      v26 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v21[*(int *)(v26 + 20)] = *(_QWORD *)&v22[*(int *)(v26 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v6);
  }
  v27 = a3[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  if (v23(&a2[v27], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v28, v29, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v31 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
      v32 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v28[*(int *)(v32 + 20)] = *(_QWORD *)&v29[*(int *)(v32 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v6);
  }
  v33 = a3[9];
  v34 = &a1[v33];
  v35 = &a2[v33];
  if (v23(&a2[v33], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v34, v35, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v37 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
      v38 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v34[*(int *)(v38 + 20)] = *(_QWORD *)&v35[*(int *)(v38 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v6);
  }
  v39 = a3[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  if (v23(&a2[v39], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v40, v41, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v43 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v40, v41, v43);
      v44 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v40[*(int *)(v44 + 20)] = *(_QWORD *)&v41[*(int *)(v44 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v40, 0, 1, v6);
  }
  v45 = a3[11];
  v46 = &a1[v45];
  v47 = &a2[v45];
  if (v23(&a2[v45], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v46, v47, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v49 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v46, v47, v49);
      v50 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v46[*(int *)(v50 + 20)] = *(_QWORD *)&v47[*(int *)(v50 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v6);
  }
  v51 = a3[12];
  v52 = &a1[v51];
  v53 = &a2[v51];
  if (v23(&a2[v51], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v52, v53, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v55 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v52, v53, v55);
      v56 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v52[*(int *)(v56 + 20)] = *(_QWORD *)&v53[*(int *)(v56 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v52, 0, 1, v6);
  }
  v57 = a3[13];
  v58 = &a1[v57];
  v59 = &a2[v57];
  if (v23(&a2[v57], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v58, v59, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v61 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v58, v59, v61);
      v62 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v58[*(int *)(v62 + 20)] = *(_QWORD *)&v59[*(int *)(v62 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v58, 0, 1, v6);
  }
  v63 = a3[14];
  v64 = &a1[v63];
  v65 = &a2[v63];
  if (v23(&a2[v63], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v64, v65, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v67 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v64, v65, v67);
      v68 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v64[*(int *)(v68 + 20)] = *(_QWORD *)&v65[*(int *)(v68 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v64, 0, 1, v6);
  }
  v69 = a3[15];
  v70 = &a1[v69];
  v71 = &a2[v69];
  if (v23(&a2[v69], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v70, v71, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v73 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v70, v71, v73);
      v74 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v70[*(int *)(v74 + 20)] = *(_QWORD *)&v71[*(int *)(v74 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v70, 0, 1, v6);
  }
  v75 = a3[16];
  v76 = &a1[v75];
  v77 = &a2[v75];
  if (v23(&a2[v75], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v76, v77, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v79 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v76, v77, v79);
      v80 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v76[*(int *)(v80 + 20)] = *(_QWORD *)&v77[*(int *)(v80 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v76, 0, 1, v6);
  }
  v81 = a3[17];
  v82 = &a1[v81];
  v83 = &a2[v81];
  if (v23(&a2[v81], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v82, v83, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v85 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v82, v83, v85);
      v86 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v82[*(int *)(v86 + 20)] = *(_QWORD *)&v83[*(int *)(v86 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v82, 0, 1, v6);
  }
  v87 = a3[18];
  v88 = &a1[v87];
  v89 = &a2[v87];
  if (v23(&a2[v87], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v88, v89, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v91 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v88, v89, v91);
      v92 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v88[*(int *)(v92 + 20)] = *(_QWORD *)&v89[*(int *)(v92 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v88, 0, 1, v6);
  }
  v93 = a3[19];
  v94 = &a1[v93];
  v95 = &a2[v93];
  if (v23(&a2[v93], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v94, v95, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v97 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v94, v95, v97);
      v98 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v94[*(int *)(v98 + 20)] = *(_QWORD *)&v95[*(int *)(v98 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v94, 0, 1, v6);
  }
  v99 = a3[20];
  v100 = &a1[v99];
  v101 = &a2[v99];
  if (v23(&a2[v99], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v100, v101, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v103 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v100, v101, v103);
      v104 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v100[*(int *)(v104 + 20)] = *(_QWORD *)&v101[*(int *)(v104 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v100, 0, 1, v6);
  }
  v105 = a3[21];
  v106 = &a1[v105];
  v107 = &a2[v105];
  if (v23(&a2[v105], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v106, v107, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v109 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v106, v107, v109);
      v110 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v106[*(int *)(v110 + 20)] = *(_QWORD *)&v107[*(int *)(v110 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v106, 0, 1, v6);
  }
  v111 = a3[22];
  v112 = &a1[v111];
  v113 = &a2[v111];
  if (v23(&a2[v111], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v112, v113, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v115 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v112, v113, v115);
      v116 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v112[*(int *)(v116 + 20)] = *(_QWORD *)&v113[*(int *)(v116 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v112, 0, 1, v6);
  }
  v117 = a3[23];
  v118 = &a1[v117];
  v119 = &a2[v117];
  if (v23(&a2[v117], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v118, v119, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v121 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v118, v119, v121);
      v122 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v118[*(int *)(v122 + 20)] = *(_QWORD *)&v119[*(int *)(v122 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v118, 0, 1, v6);
  }
  v123 = a3[24];
  v124 = &a1[v123];
  v125 = &a2[v123];
  if (v23(&a2[v123], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v124, v125, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v127 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v124, v125, v127);
      v128 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v124[*(int *)(v128 + 20)] = *(_QWORD *)&v125[*(int *)(v128 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v124, 0, 1, v6);
  }
  v129 = a3[25];
  v130 = &a1[v129];
  v131 = &a2[v129];
  if (v23(&a2[v129], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v130, v131, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v133 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v130, v131, v133);
      v134 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v130[*(int *)(v134 + 20)] = *(_QWORD *)&v131[*(int *)(v134 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v130, 0, 1, v6);
  }
  v135 = a3[26];
  v136 = &a1[v135];
  v137 = &a2[v135];
  if (v23(&a2[v135], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v136, v137, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v139 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v136, v137, v139);
      v140 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v136[*(int *)(v140 + 20)] = *(_QWORD *)&v137[*(int *)(v140 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v136, 0, 1, v6);
  }
  v141 = a3[27];
  v142 = &a1[v141];
  v143 = &a2[v141];
  if (v23(&a2[v141], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v142, v143, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v145 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v142, v143, v145);
      v146 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v142[*(int *)(v146 + 20)] = *(_QWORD *)&v143[*(int *)(v146 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v142, 0, 1, v6);
  }
  v147 = a3[28];
  v148 = &a1[v147];
  v149 = &a2[v147];
  if (v23(&a2[v147], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v148, v149, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v151 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v148, v149, v151);
      v152 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v148[*(int *)(v152 + 20)] = *(_QWORD *)&v149[*(int *)(v152 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v148, 0, 1, v6);
  }
  v153 = a3[29];
  v154 = &a1[v153];
  v155 = &a2[v153];
  if (v23(&a2[v153], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v154, v155, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v157 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v154, v155, v157);
      v158 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v154[*(int *)(v158 + 20)] = *(_QWORD *)&v155[*(int *)(v158 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v154, 0, 1, v6);
  }
  v159 = a3[30];
  v160 = &a1[v159];
  v161 = &a2[v159];
  if (v23(&a2[v159], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v160, v161, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v163 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v160, v161, v163);
      v164 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v160[*(int *)(v164 + 20)] = *(_QWORD *)&v161[*(int *)(v164 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v160, 0, 1, v6);
  }
  v165 = a3[31];
  v166 = &a1[v165];
  v167 = &a2[v165];
  if (v23(&a2[v165], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v166, v167, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v169 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v166, v167, v169);
      v170 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v166[*(int *)(v170 + 20)] = *(_QWORD *)&v167[*(int *)(v170 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v166, 0, 1, v6);
  }
  v171 = a3[32];
  v172 = &a1[v171];
  v173 = &a2[v171];
  if (v23(&a2[v171], 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v172, v173, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v175 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v172, v173, v175);
      v176 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v172[*(int *)(v176 + 20)] = *(_QWORD *)&v173[*(int *)(v176 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v172, 0, 1, v6);
  }
  v177 = a3[33];
  v178 = &a1[v177];
  v179 = &a2[v177];
  if (v23(v179, 1, v6))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v178, v179, *(_QWORD *)(v17 + 64));
    }
    else
    {
      v181 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v178, v179, v181);
      v182 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v178[*(int *)(v182 + 20)] = *(_QWORD *)&v179[*(int *)(v182 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v178, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for FormatRemoteVideo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  size_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  size_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  size_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  int v62;
  uint64_t v63;
  size_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  size_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  size_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  size_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int v97;
  int v98;
  uint64_t v99;
  size_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int v106;
  int v107;
  uint64_t v108;
  size_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int v115;
  int v116;
  uint64_t v117;
  size_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int v124;
  int v125;
  uint64_t v126;
  size_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  int v134;
  uint64_t v135;
  size_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  int v142;
  int v143;
  uint64_t v144;
  size_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  int v151;
  int v152;
  uint64_t v153;
  size_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  int v160;
  int v161;
  uint64_t v162;
  size_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  int v169;
  int v170;
  uint64_t v171;
  size_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  int v178;
  int v179;
  uint64_t v180;
  size_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  int v187;
  int v188;
  uint64_t v189;
  size_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  int v196;
  int v197;
  uint64_t v198;
  size_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  int v205;
  int v206;
  uint64_t v207;
  size_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  int v214;
  int v215;
  uint64_t v216;
  size_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  int v223;
  int v224;
  uint64_t v225;
  size_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  int v232;
  int v233;
  uint64_t v234;
  size_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  int v241;
  int v242;
  uint64_t v243;
  size_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  int v250;
  int v251;
  uint64_t v252;
  size_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  int v259;
  int v260;
  uint64_t v261;
  size_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v6 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    sub_1BA4A2E80((uint64_t)&a1[v9], (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v12 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      v13 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v10[*(int *)(v13 + 20)] = *(_QWORD *)&v11[*(int *)(v13 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    v14 = a3[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    sub_1BA4A2E80((uint64_t)&a1[v14], (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v17 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v15[*(int *)(v18 + 20)] = *(_QWORD *)&v16[*(int *)(v18 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for FormatURL();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (v26)
      goto LABEL_16;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v20, v21, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v29 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v20, v21, v29);
      v30 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v20[*(int *)(v30 + 20)] = *(_QWORD *)&v21[*(int *)(v30 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  else
  {
    if (v26)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_16:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v28 = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64);
LABEL_17:
      memcpy(v20, v21, v28);
      goto LABEL_25;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v28 = *(_QWORD *)(v23 + 64);
        goto LABEL_17;
      }
      v266 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v266 - 8) + 32))(v20, v21, v266);
      v267 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v20[*(int *)(v267 + 20)] = *(_QWORD *)&v21[*(int *)(v267 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_25:
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = v24(&a1[v31], 1, v22);
  v35 = v24(v33, 1, v22);
  if (v34)
  {
    if (v35)
      goto LABEL_30;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v32, v33, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v38 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v32, v33, v38);
      v39 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v32[*(int *)(v39 + 20)] = *(_QWORD *)&v33[*(int *)(v39 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v22);
  }
  else
  {
    if (v35)
    {
      sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_30:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v37 = *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64);
LABEL_31:
      memcpy(v32, v33, v37);
      goto LABEL_39;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v37 = *(_QWORD *)(v23 + 64);
        goto LABEL_31;
      }
      v268 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v32, v33, v268);
      v269 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v32[*(int *)(v269 + 20)] = *(_QWORD *)&v33[*(int *)(v269 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_39:
  v40 = a3[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = v24(&a1[v40], 1, v22);
  v44 = v24(v42, 1, v22);
  if (v43)
  {
    if (v44)
      goto LABEL_44;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v41, v42, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v47 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v41, v42, v47);
      v48 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v41[*(int *)(v48 + 20)] = *(_QWORD *)&v42[*(int *)(v48 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v41, 0, 1, v22);
  }
  else
  {
    if (v44)
    {
      sub_1BA4A2E80((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_44:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v46 = *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64);
LABEL_45:
      memcpy(v41, v42, v46);
      goto LABEL_53;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v46 = *(_QWORD *)(v23 + 64);
        goto LABEL_45;
      }
      v270 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v41, v42, v270);
      v271 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v41[*(int *)(v271 + 20)] = *(_QWORD *)&v42[*(int *)(v271 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_53:
  v49 = a3[10];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = v24(&a1[v49], 1, v22);
  v53 = v24(v51, 1, v22);
  if (v52)
  {
    if (v53)
      goto LABEL_58;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v50, v51, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v56 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v50, v51, v56);
      v57 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v50[*(int *)(v57 + 20)] = *(_QWORD *)&v51[*(int *)(v57 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v50, 0, 1, v22);
  }
  else
  {
    if (v53)
    {
      sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_58:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v55 = *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64);
LABEL_59:
      memcpy(v50, v51, v55);
      goto LABEL_67;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v55 = *(_QWORD *)(v23 + 64);
        goto LABEL_59;
      }
      v272 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v50, v51, v272);
      v273 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v50[*(int *)(v273 + 20)] = *(_QWORD *)&v51[*(int *)(v273 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_67:
  v58 = a3[11];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = v24(&a1[v58], 1, v22);
  v62 = v24(v60, 1, v22);
  if (v61)
  {
    if (v62)
      goto LABEL_72;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v59, v60, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v65 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v59, v60, v65);
      v66 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v59[*(int *)(v66 + 20)] = *(_QWORD *)&v60[*(int *)(v66 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v59, 0, 1, v22);
  }
  else
  {
    if (v62)
    {
      sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_72:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v64 = *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64);
LABEL_73:
      memcpy(v59, v60, v64);
      goto LABEL_81;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v64 = *(_QWORD *)(v23 + 64);
        goto LABEL_73;
      }
      v274 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v59, v60, v274);
      v275 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v59[*(int *)(v275 + 20)] = *(_QWORD *)&v60[*(int *)(v275 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_81:
  v67 = a3[12];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = v24(&a1[v67], 1, v22);
  v71 = v24(v69, 1, v22);
  if (v70)
  {
    if (v71)
      goto LABEL_86;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v68, v69, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v74 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v68, v69, v74);
      v75 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v68[*(int *)(v75 + 20)] = *(_QWORD *)&v69[*(int *)(v75 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v68, 0, 1, v22);
  }
  else
  {
    if (v71)
    {
      sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_86:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v73 = *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64);
LABEL_87:
      memcpy(v68, v69, v73);
      goto LABEL_95;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v73 = *(_QWORD *)(v23 + 64);
        goto LABEL_87;
      }
      v276 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v276 - 8) + 32))(v68, v69, v276);
      v277 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v68[*(int *)(v277 + 20)] = *(_QWORD *)&v69[*(int *)(v277 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_95:
  v76 = a3[13];
  v77 = &a1[v76];
  v78 = &a2[v76];
  v79 = v24(&a1[v76], 1, v22);
  v80 = v24(v78, 1, v22);
  if (v79)
  {
    if (v80)
      goto LABEL_100;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v77, v78, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v83 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v77, v78, v83);
      v84 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v77[*(int *)(v84 + 20)] = *(_QWORD *)&v78[*(int *)(v84 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v77, 0, 1, v22);
  }
  else
  {
    if (v80)
    {
      sub_1BA4A2E80((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_100:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v82 = *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64);
LABEL_101:
      memcpy(v77, v78, v82);
      goto LABEL_109;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v82 = *(_QWORD *)(v23 + 64);
        goto LABEL_101;
      }
      v278 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 32))(v77, v78, v278);
      v279 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v77[*(int *)(v279 + 20)] = *(_QWORD *)&v78[*(int *)(v279 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_109:
  v85 = a3[14];
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = v24(&a1[v85], 1, v22);
  v89 = v24(v87, 1, v22);
  if (v88)
  {
    if (v89)
      goto LABEL_114;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v86, v87, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v92 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v86, v87, v92);
      v93 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v86[*(int *)(v93 + 20)] = *(_QWORD *)&v87[*(int *)(v93 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v86, 0, 1, v22);
  }
  else
  {
    if (v89)
    {
      sub_1BA4A2E80((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_114:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v91 = *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64);
LABEL_115:
      memcpy(v86, v87, v91);
      goto LABEL_123;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v91 = *(_QWORD *)(v23 + 64);
        goto LABEL_115;
      }
      v280 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 32))(v86, v87, v280);
      v281 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v86[*(int *)(v281 + 20)] = *(_QWORD *)&v87[*(int *)(v281 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_123:
  v94 = a3[15];
  v95 = &a1[v94];
  v96 = &a2[v94];
  v97 = v24(&a1[v94], 1, v22);
  v98 = v24(v96, 1, v22);
  if (v97)
  {
    if (v98)
      goto LABEL_128;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v95, v96, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v101 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v95, v96, v101);
      v102 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v95[*(int *)(v102 + 20)] = *(_QWORD *)&v96[*(int *)(v102 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v95, 0, 1, v22);
  }
  else
  {
    if (v98)
    {
      sub_1BA4A2E80((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_128:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v100 = *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64);
LABEL_129:
      memcpy(v95, v96, v100);
      goto LABEL_137;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v100 = *(_QWORD *)(v23 + 64);
        goto LABEL_129;
      }
      v282 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v95, v96, v282);
      v283 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v95[*(int *)(v283 + 20)] = *(_QWORD *)&v96[*(int *)(v283 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_137:
  v103 = a3[16];
  v104 = &a1[v103];
  v105 = &a2[v103];
  v106 = v24(&a1[v103], 1, v22);
  v107 = v24(v105, 1, v22);
  if (v106)
  {
    if (v107)
      goto LABEL_142;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v104, v105, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v110 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v104, v105, v110);
      v111 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v104[*(int *)(v111 + 20)] = *(_QWORD *)&v105[*(int *)(v111 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v104, 0, 1, v22);
  }
  else
  {
    if (v107)
    {
      sub_1BA4A2E80((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_142:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v109 = *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64);
LABEL_143:
      memcpy(v104, v105, v109);
      goto LABEL_151;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v109 = *(_QWORD *)(v23 + 64);
        goto LABEL_143;
      }
      v284 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v104, v105, v284);
      v285 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v104[*(int *)(v285 + 20)] = *(_QWORD *)&v105[*(int *)(v285 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_151:
  v112 = a3[17];
  v113 = &a1[v112];
  v114 = &a2[v112];
  v115 = v24(&a1[v112], 1, v22);
  v116 = v24(v114, 1, v22);
  if (v115)
  {
    if (v116)
      goto LABEL_156;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v113, v114, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v119 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v113, v114, v119);
      v120 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v113[*(int *)(v120 + 20)] = *(_QWORD *)&v114[*(int *)(v120 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v113, 0, 1, v22);
  }
  else
  {
    if (v116)
    {
      sub_1BA4A2E80((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_156:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v118 = *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64);
LABEL_157:
      memcpy(v113, v114, v118);
      goto LABEL_165;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v118 = *(_QWORD *)(v23 + 64);
        goto LABEL_157;
      }
      v286 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v113, v114, v286);
      v287 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v113[*(int *)(v287 + 20)] = *(_QWORD *)&v114[*(int *)(v287 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_165:
  v121 = a3[18];
  v122 = &a1[v121];
  v123 = &a2[v121];
  v124 = v24(&a1[v121], 1, v22);
  v125 = v24(v123, 1, v22);
  if (v124)
  {
    if (v125)
      goto LABEL_170;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v122, v123, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v128 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v122, v123, v128);
      v129 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v122[*(int *)(v129 + 20)] = *(_QWORD *)&v123[*(int *)(v129 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v122, 0, 1, v22);
  }
  else
  {
    if (v125)
    {
      sub_1BA4A2E80((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_170:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v127 = *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64);
LABEL_171:
      memcpy(v122, v123, v127);
      goto LABEL_179;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v127 = *(_QWORD *)(v23 + 64);
        goto LABEL_171;
      }
      v288 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 32))(v122, v123, v288);
      v289 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v122[*(int *)(v289 + 20)] = *(_QWORD *)&v123[*(int *)(v289 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_179:
  v130 = a3[19];
  v131 = &a1[v130];
  v132 = &a2[v130];
  v133 = v24(&a1[v130], 1, v22);
  v134 = v24(v132, 1, v22);
  if (v133)
  {
    if (v134)
      goto LABEL_184;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v131, v132, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v137 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v131, v132, v137);
      v138 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v131[*(int *)(v138 + 20)] = *(_QWORD *)&v132[*(int *)(v138 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v131, 0, 1, v22);
  }
  else
  {
    if (v134)
    {
      sub_1BA4A2E80((uint64_t)v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_184:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v136 = *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64);
LABEL_185:
      memcpy(v131, v132, v136);
      goto LABEL_193;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v136 = *(_QWORD *)(v23 + 64);
        goto LABEL_185;
      }
      v290 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v131, v132, v290);
      v291 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v131[*(int *)(v291 + 20)] = *(_QWORD *)&v132[*(int *)(v291 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_193:
  v139 = a3[20];
  v140 = &a1[v139];
  v141 = &a2[v139];
  v142 = v24(&a1[v139], 1, v22);
  v143 = v24(v141, 1, v22);
  if (v142)
  {
    if (v143)
      goto LABEL_198;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v140, v141, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v146 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v140, v141, v146);
      v147 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v140[*(int *)(v147 + 20)] = *(_QWORD *)&v141[*(int *)(v147 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v140, 0, 1, v22);
  }
  else
  {
    if (v143)
    {
      sub_1BA4A2E80((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_198:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v145 = *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64);
LABEL_199:
      memcpy(v140, v141, v145);
      goto LABEL_207;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v145 = *(_QWORD *)(v23 + 64);
        goto LABEL_199;
      }
      v292 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v292 - 8) + 32))(v140, v141, v292);
      v293 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v140[*(int *)(v293 + 20)] = *(_QWORD *)&v141[*(int *)(v293 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_207:
  v148 = a3[21];
  v149 = &a1[v148];
  v150 = &a2[v148];
  v151 = v24(&a1[v148], 1, v22);
  v152 = v24(v150, 1, v22);
  if (v151)
  {
    if (v152)
      goto LABEL_212;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v149, v150, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v155 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v149, v150, v155);
      v156 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v149[*(int *)(v156 + 20)] = *(_QWORD *)&v150[*(int *)(v156 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v149, 0, 1, v22);
  }
  else
  {
    if (v152)
    {
      sub_1BA4A2E80((uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_212:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v154 = *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64);
LABEL_213:
      memcpy(v149, v150, v154);
      goto LABEL_221;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v154 = *(_QWORD *)(v23 + 64);
        goto LABEL_213;
      }
      v294 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v149, v150, v294);
      v295 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v149[*(int *)(v295 + 20)] = *(_QWORD *)&v150[*(int *)(v295 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_221:
  v157 = a3[22];
  v158 = &a1[v157];
  v159 = &a2[v157];
  v160 = v24(&a1[v157], 1, v22);
  v161 = v24(v159, 1, v22);
  if (v160)
  {
    if (v161)
      goto LABEL_226;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v158, v159, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v164 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v158, v159, v164);
      v165 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v158[*(int *)(v165 + 20)] = *(_QWORD *)&v159[*(int *)(v165 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v158, 0, 1, v22);
  }
  else
  {
    if (v161)
    {
      sub_1BA4A2E80((uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_226:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v163 = *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64);
LABEL_227:
      memcpy(v158, v159, v163);
      goto LABEL_235;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v163 = *(_QWORD *)(v23 + 64);
        goto LABEL_227;
      }
      v296 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v158, v159, v296);
      v297 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v158[*(int *)(v297 + 20)] = *(_QWORD *)&v159[*(int *)(v297 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_235:
  v166 = a3[23];
  v167 = &a1[v166];
  v168 = &a2[v166];
  v169 = v24(&a1[v166], 1, v22);
  v170 = v24(v168, 1, v22);
  if (v169)
  {
    if (v170)
      goto LABEL_240;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v167, v168, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v173 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v167, v168, v173);
      v174 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v167[*(int *)(v174 + 20)] = *(_QWORD *)&v168[*(int *)(v174 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v167, 0, 1, v22);
  }
  else
  {
    if (v170)
    {
      sub_1BA4A2E80((uint64_t)v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_240:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v172 = *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64);
LABEL_241:
      memcpy(v167, v168, v172);
      goto LABEL_249;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v172 = *(_QWORD *)(v23 + 64);
        goto LABEL_241;
      }
      v298 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v167, v168, v298);
      v299 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v167[*(int *)(v299 + 20)] = *(_QWORD *)&v168[*(int *)(v299 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_249:
  v175 = a3[24];
  v176 = &a1[v175];
  v177 = &a2[v175];
  v178 = v24(&a1[v175], 1, v22);
  v179 = v24(v177, 1, v22);
  if (v178)
  {
    if (v179)
      goto LABEL_254;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v176, v177, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v182 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v176, v177, v182);
      v183 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v176[*(int *)(v183 + 20)] = *(_QWORD *)&v177[*(int *)(v183 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v176, 0, 1, v22);
  }
  else
  {
    if (v179)
    {
      sub_1BA4A2E80((uint64_t)v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_254:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v181 = *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64);
LABEL_255:
      memcpy(v176, v177, v181);
      goto LABEL_263;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v181 = *(_QWORD *)(v23 + 64);
        goto LABEL_255;
      }
      v300 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v176, v177, v300);
      v301 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v176[*(int *)(v301 + 20)] = *(_QWORD *)&v177[*(int *)(v301 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_263:
  v184 = a3[25];
  v185 = &a1[v184];
  v186 = &a2[v184];
  v187 = v24(&a1[v184], 1, v22);
  v188 = v24(v186, 1, v22);
  if (v187)
  {
    if (v188)
      goto LABEL_268;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v185, v186, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v191 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v185, v186, v191);
      v192 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v185[*(int *)(v192 + 20)] = *(_QWORD *)&v186[*(int *)(v192 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v185, 0, 1, v22);
  }
  else
  {
    if (v188)
    {
      sub_1BA4A2E80((uint64_t)v185, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_268:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v190 = *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64);
LABEL_269:
      memcpy(v185, v186, v190);
      goto LABEL_277;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v185, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v190 = *(_QWORD *)(v23 + 64);
        goto LABEL_269;
      }
      v302 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v185, v186, v302);
      v303 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v185[*(int *)(v303 + 20)] = *(_QWORD *)&v186[*(int *)(v303 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_277:
  v193 = a3[26];
  v194 = &a1[v193];
  v195 = &a2[v193];
  v196 = v24(&a1[v193], 1, v22);
  v197 = v24(v195, 1, v22);
  if (v196)
  {
    if (v197)
      goto LABEL_282;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v194, v195, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v200 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v194, v195, v200);
      v201 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v194[*(int *)(v201 + 20)] = *(_QWORD *)&v195[*(int *)(v201 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v194, 0, 1, v22);
  }
  else
  {
    if (v197)
    {
      sub_1BA4A2E80((uint64_t)v194, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_282:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v199 = *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64);
LABEL_283:
      memcpy(v194, v195, v199);
      goto LABEL_291;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v194, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v199 = *(_QWORD *)(v23 + 64);
        goto LABEL_283;
      }
      v304 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v194, v195, v304);
      v305 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v194[*(int *)(v305 + 20)] = *(_QWORD *)&v195[*(int *)(v305 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_291:
  v202 = a3[27];
  v203 = &a1[v202];
  v204 = &a2[v202];
  v205 = v24(&a1[v202], 1, v22);
  v206 = v24(v204, 1, v22);
  if (v205)
  {
    if (v206)
      goto LABEL_296;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v203, v204, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v209 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v203, v204, v209);
      v210 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v203[*(int *)(v210 + 20)] = *(_QWORD *)&v204[*(int *)(v210 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v203, 0, 1, v22);
  }
  else
  {
    if (v206)
    {
      sub_1BA4A2E80((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_296:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v208 = *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64);
LABEL_297:
      memcpy(v203, v204, v208);
      goto LABEL_305;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v208 = *(_QWORD *)(v23 + 64);
        goto LABEL_297;
      }
      v306 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 32))(v203, v204, v306);
      v307 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v203[*(int *)(v307 + 20)] = *(_QWORD *)&v204[*(int *)(v307 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_305:
  v211 = a3[28];
  v212 = &a1[v211];
  v213 = &a2[v211];
  v214 = v24(&a1[v211], 1, v22);
  v215 = v24(v213, 1, v22);
  if (v214)
  {
    if (v215)
      goto LABEL_310;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v212, v213, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v218 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v212, v213, v218);
      v219 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v212[*(int *)(v219 + 20)] = *(_QWORD *)&v213[*(int *)(v219 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v212, 0, 1, v22);
  }
  else
  {
    if (v215)
    {
      sub_1BA4A2E80((uint64_t)v212, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_310:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v217 = *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64);
LABEL_311:
      memcpy(v212, v213, v217);
      goto LABEL_319;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v212, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v217 = *(_QWORD *)(v23 + 64);
        goto LABEL_311;
      }
      v308 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 32))(v212, v213, v308);
      v309 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v212[*(int *)(v309 + 20)] = *(_QWORD *)&v213[*(int *)(v309 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_319:
  v220 = a3[29];
  v221 = &a1[v220];
  v222 = &a2[v220];
  v223 = v24(&a1[v220], 1, v22);
  v224 = v24(v222, 1, v22);
  if (v223)
  {
    if (v224)
      goto LABEL_324;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v221, v222, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v227 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v221, v222, v227);
      v228 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v221[*(int *)(v228 + 20)] = *(_QWORD *)&v222[*(int *)(v228 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v221, 0, 1, v22);
  }
  else
  {
    if (v224)
    {
      sub_1BA4A2E80((uint64_t)v221, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_324:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v226 = *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64);
LABEL_325:
      memcpy(v221, v222, v226);
      goto LABEL_333;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v221, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v226 = *(_QWORD *)(v23 + 64);
        goto LABEL_325;
      }
      v310 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v221, v222, v310);
      v311 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v221[*(int *)(v311 + 20)] = *(_QWORD *)&v222[*(int *)(v311 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_333:
  v229 = a3[30];
  v230 = &a1[v229];
  v231 = &a2[v229];
  v232 = v24(&a1[v229], 1, v22);
  v233 = v24(v231, 1, v22);
  if (v232)
  {
    if (v233)
      goto LABEL_338;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v230, v231, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v236 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v230, v231, v236);
      v237 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v230[*(int *)(v237 + 20)] = *(_QWORD *)&v231[*(int *)(v237 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v230, 0, 1, v22);
  }
  else
  {
    if (v233)
    {
      sub_1BA4A2E80((uint64_t)v230, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_338:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v235 = *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64);
LABEL_339:
      memcpy(v230, v231, v235);
      goto LABEL_347;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v230, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v235 = *(_QWORD *)(v23 + 64);
        goto LABEL_339;
      }
      v312 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v312 - 8) + 32))(v230, v231, v312);
      v313 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v230[*(int *)(v313 + 20)] = *(_QWORD *)&v231[*(int *)(v313 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_347:
  v238 = a3[31];
  v239 = &a1[v238];
  v240 = &a2[v238];
  v241 = v24(&a1[v238], 1, v22);
  v242 = v24(v240, 1, v22);
  if (v241)
  {
    if (v242)
      goto LABEL_352;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v239, v240, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v245 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v239, v240, v245);
      v246 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v239[*(int *)(v246 + 20)] = *(_QWORD *)&v240[*(int *)(v246 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v239, 0, 1, v22);
  }
  else
  {
    if (v242)
    {
      sub_1BA4A2E80((uint64_t)v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_352:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v244 = *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64);
LABEL_353:
      memcpy(v239, v240, v244);
      goto LABEL_361;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v244 = *(_QWORD *)(v23 + 64);
        goto LABEL_353;
      }
      v314 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 32))(v239, v240, v314);
      v315 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v239[*(int *)(v315 + 20)] = *(_QWORD *)&v240[*(int *)(v315 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_361:
  v247 = a3[32];
  v248 = &a1[v247];
  v249 = &a2[v247];
  v250 = v24(&a1[v247], 1, v22);
  v251 = v24(v249, 1, v22);
  if (v250)
  {
    if (v251)
      goto LABEL_366;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v248, v249, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v254 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 32))(v248, v249, v254);
      v255 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v248[*(int *)(v255 + 20)] = *(_QWORD *)&v249[*(int *)(v255 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v248, 0, 1, v22);
  }
  else
  {
    if (v251)
    {
      sub_1BA4A2E80((uint64_t)v248, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_366:
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v253 = *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64);
LABEL_367:
      memcpy(v248, v249, v253);
      goto LABEL_375;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v248, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (swift_getEnumCaseMultiPayload())
      {
        v253 = *(_QWORD *)(v23 + 64);
        goto LABEL_367;
      }
      v316 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(v248, v249, v316);
      v317 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v248[*(int *)(v317 + 20)] = *(_QWORD *)&v249[*(int *)(v317 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_375:
  v256 = a3[33];
  v257 = &a1[v256];
  v258 = &a2[v256];
  v259 = v24(&a1[v256], 1, v22);
  v260 = v24(v258, 1, v22);
  if (!v259)
  {
    if (!v260)
    {
      if (a1 == a2)
        return a1;
      sub_1BA4A2E80((uint64_t)v257, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      if (!swift_getEnumCaseMultiPayload())
      {
        v318 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 32))(v257, v258, v318);
        v319 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v257[*(int *)(v319 + 20)] = *(_QWORD *)&v258[*(int *)(v319 + 20)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v262 = *(_QWORD *)(v23 + 64);
      goto LABEL_381;
    }
    sub_1BA4A2E80((uint64_t)v257, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_380:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v262 = *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64);
LABEL_381:
    memcpy(v257, v258, v262);
    return a1;
  }
  if (v260)
    goto LABEL_380;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v257, v258, *(_QWORD *)(v23 + 64));
  }
  else
  {
    v263 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v257, v258, v263);
    v264 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&v257[*(int *)(v264 + 20)] = *(_QWORD *)&v258[*(int *)(v264 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v257, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatRemoteVideo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0426F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for FormatURL();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FormatRemoteVideo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB042784(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = type metadata accessor for FormatURL();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1BB042810()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for FormatURL();
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1BB0428DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB042920()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B9758)
  {
    sub_1BA4A3FB4(255, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B9758);
  }
}

uint64_t sub_1BB042990()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for FormatStringSelector.Selector()
{
  return &type metadata for FormatStringSelector.Selector;
}

uint64_t sub_1BB0429CC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  char v57;
  char v58;
  uint64_t v59;
  unsigned __int8 *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v7 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BB872B5C();
  if ((result & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((sub_1BB872B68() & 1) != 0
      || (swift_bridgeObjectRelease(), swift_bridgeObjectRetain(), (sub_1BB872B68() & 1) != 0))
    {
      v78 = v3;
      v79 = a3;
      swift_arrayDestroy();
      swift_bridgeObjectRetain();
      v11 = sub_1BA9C0430(1uLL, a1, a2);
      swift_bridgeObjectRelease();
      v12 = sub_1BB872AB4();
      swift_bridgeObjectRelease();
      if (v12 < 0)
      {
        __break(1u);
      }
      else
      {
        v15 = sub_1BB873A38();
        if ((v16 & 1) != 0)
          v17 = v11;
        else
          v17 = v15;
        v13 = v17 >> 14;
        if (v17 >> 14 >= v11 >> 14)
        {
          v18 = sub_1BB873A68();
          v20 = v19;
          v22 = v21;
          v24 = v23;
          swift_bridgeObjectRelease();
          v25 = MEMORY[0x1BCCE334C](v18, v20, v22, v24);
          v27 = v26;
          swift_bridgeObjectRelease();
          v28 = &v9[*(int *)(v7 + 28)];
          v29 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
          *(_QWORD *)v9 = v25;
          *((_QWORD *)v9 + 1) = v27;
          *((_QWORD *)v9 + 3) = 0;
          *((_QWORD *)v9 + 4) = 0;
          *((_QWORD *)v9 + 2) = 0;
          v9[40] = 2;
          *((_QWORD *)v9 + 6) = MEMORY[0x1E0DEE9D8];
          sub_1BB3D7D48((uint64_t)v9);
          return sub_1BAA736BC((uint64_t)v9);
        }
      }
      __break(1u);
      goto LABEL_67;
    }
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    v80 = a1;
    v81 = a2;
    sub_1BA7114A0();
    v30 = (_QWORD *)sub_1BB873B4C();
    v31 = v30;
    if (v30[2] != 2)
      return swift_bridgeObjectRelease();
    v79 = a3;
    v32 = v30[5];
    v9 = (char *)v30[6];
    swift_bridgeObjectRetain();
    v33 = sub_1BB873A38();
    if ((v34 & 1) != 0)
      v33 = v32;
    if (v32 >> 14 < v33 >> 14)
    {
      __break(1u);
    }
    else
    {
      v35 = sub_1BB873A68();
      v37 = v36;
      v39 = v38;
      v41 = v40;
      swift_bridgeObjectRelease();
      v42 = MEMORY[0x1BCCE334C](v35, v37, v39, v41);
      v9 = v43;
      swift_bridgeObjectRelease();
      if (v31[2] >= 2uLL)
      {
        v78 = v42;
        v44 = v31[8];
        v45 = v31[9];
        v46 = v31[10];
        v47 = v31[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v48 = MEMORY[0x1BCCE334C](v44, v45, v46, v47);
        v50 = v49;
        swift_bridgeObjectRelease();
        if (v48 == 1702195828 && v50 == 0xE400000000000000
          || (sub_1BB874398() & 1) != 0
          || v48 == 0x65736C6166 && v50 == 0xE500000000000000
          || (result = sub_1BB874398(), (result & 1) != 0))
        {
          swift_bridgeObjectRelease();
          v51 = &unk_1E724DA88;
LABEL_24:
          v52 = sub_1BA862600((uint64_t)v51);
          sub_1BB3D7F90(v78, (uint64_t)v9, v52, 1);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v53 = HIBYTE(v50) & 0xF;
        v54 = v48 & 0xFFFFFFFFFFFFLL;
        if ((v50 & 0x2000000000000000) != 0)
          v55 = HIBYTE(v50) & 0xF;
        else
          v55 = v48 & 0xFFFFFFFFFFFFLL;
        if (v55)
        {
          if ((v50 & 0x1000000000000000) != 0)
          {
            sub_1BA9BF9A4(v48, v50, 10);
            v58 = v77;
            goto LABEL_63;
          }
          if ((v50 & 0x2000000000000000) == 0)
          {
            if ((v48 & 0x1000000000000000) != 0)
              v56 = (unsigned __int8 *)((v50 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v56 = (unsigned __int8 *)sub_1BB873D80();
            sub_1BA9BF8AC(v56, v54, 10);
            v58 = v57 & 1;
LABEL_63:
            swift_bridgeObjectRelease();
            if ((v58 & 1) == 0)
            {
              v51 = &unk_1E724DAB0;
              goto LABEL_24;
            }
LABEL_76:
            v51 = &unk_1E724DAD8;
            goto LABEL_24;
          }
          v80 = v48;
          v81 = v50 & 0xFFFFFFFFFFFFFFLL;
          if (v48 == 43)
          {
            if (v53)
            {
              if (v53 != 1 && (BYTE1(v48) - 48) <= 9u)
              {
                v66 = v53 - 2;
                if (v66)
                {
                  v67 = (BYTE1(v48) - 48);
                  v68 = (unsigned __int8 *)&v80 + 2;
                  while (1)
                  {
                    v69 = *v68 - 48;
                    if (v69 > 9)
                      goto LABEL_60;
                    v70 = (unsigned __int128)(v67 * (__int128)10) >> 64;
                    v71 = 10 * v67;
                    if (v70 != v71 >> 63)
                      goto LABEL_60;
                    v65 = __OFADD__(v71, v69);
                    v67 = v71 + v69;
                    if (v65)
                      goto LABEL_60;
                    v58 = 0;
                    ++v68;
                    if (!--v66)
                      goto LABEL_63;
                  }
                }
LABEL_62:
                v58 = 0;
                goto LABEL_63;
              }
LABEL_60:
              v58 = 1;
              goto LABEL_63;
            }
          }
          else
          {
            if (v48 != 45)
            {
              if (v53)
              {
                v14 = v48 - 48;
                if ((v48 - 48) <= 9u)
                {
                  v13 = v53 - 1;
                  if (v13)
                  {
LABEL_67:
                    v72 = v14;
                    v73 = (unsigned __int8 *)&v80 + 1;
                    while (1)
                    {
                      v74 = *v73 - 48;
                      if (v74 > 9)
                        goto LABEL_60;
                      v75 = (unsigned __int128)(v72 * (__int128)10) >> 64;
                      v76 = 10 * v72;
                      if (v75 != v76 >> 63)
                        goto LABEL_60;
                      v65 = __OFADD__(v76, v74);
                      v72 = v76 + v74;
                      if (v65)
                        goto LABEL_60;
                      v58 = 0;
                      ++v73;
                      if (!--v13)
                        goto LABEL_63;
                    }
                  }
                  goto LABEL_62;
                }
              }
              goto LABEL_60;
            }
            if (v53)
            {
              if (v53 != 1 && (BYTE1(v48) - 48) <= 9u)
              {
                v59 = v53 - 2;
                if (v59)
                {
                  v60 = (unsigned __int8 *)&v80 + 2;
                  v61 = -(uint64_t)(BYTE1(v48) - 48);
                  while (1)
                  {
                    v62 = *v60 - 48;
                    if (v62 > 9)
                      goto LABEL_60;
                    v63 = (unsigned __int128)(v61 * (__int128)10) >> 64;
                    v64 = 10 * v61;
                    if (v63 != v64 >> 63)
                      goto LABEL_60;
                    v65 = __OFSUB__(v64, v62);
                    v61 = v64 - v62;
                    if (v65)
                      goto LABEL_60;
                    v58 = 0;
                    ++v60;
                    if (!--v59)
                      goto LABEL_63;
                  }
                }
                goto LABEL_62;
              }
              goto LABEL_60;
            }
            __break(1u);
          }
          __break(1u);
          return result;
        }
LABEL_75:
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
    }
    __break(1u);
    goto LABEL_75;
  }
  return result;
}

uint64_t sub_1BB043088(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB043358(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BB0430A0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  char *v27;
  const void *v28;
  char *v29;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v29 = __src;
  v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst)
        memmove(__dst, a2, 40 * v11);
      v18 = &v4[40 * v11];
      v27 = v18;
      v29 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        v19 = a3 - 40;
        do
        {
          v20 = (char *)(v19 + 40);
          if (*((_QWORD *)v6 - 3) >= *((_QWORD *)v18 - 3))
          {
            v27 = v18 - 40;
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              v24 = *(_OWORD *)(v18 - 40);
              v25 = *(_OWORD *)(v18 - 24);
              *(_QWORD *)(v19 + 32) = *((_QWORD *)v18 - 1);
              *(_OWORD *)v19 = v24;
              *(_OWORD *)(v19 + 16) = v25;
            }
            v21 = v6;
            v18 -= 40;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 40;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              v22 = *(_OWORD *)v21;
              v23 = *(_OWORD *)(v6 - 24);
              *(_QWORD *)(v19 + 32) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v19 = v22;
              *(_OWORD *)(v19 + 16) = v23;
            }
            v29 = v6 - 40;
            if (v21 <= v7)
              break;
          }
          v19 -= 40;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1BACAA82C((void **)&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = &v4[40 * v9];
    v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      v13 = v4;
      while (1)
      {
        if (*((_QWORD *)v13 + 2) >= *((_QWORD *)v6 + 2))
        {
          v4 = v13 + 40;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 40;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 40;
          }
        }
        else
        {
          v14 = v6 + 40;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        v17 = *((_OWORD *)v15 + 1);
        *((_QWORD *)v7 + 4) = *((_QWORD *)v15 + 4);
        *(_OWORD *)v7 = v16;
        *((_OWORD *)v7 + 1) = v17;
LABEL_18:
        v7 += 40;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v28 = v4;
        v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB043358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t j;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;

  v4 = v3;
  v8 = a2 + 56;
  v9 = 1 << *(_BYTE *)(a2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_1BB0429CC(v21, v22, a1);
    if (v4)
      goto LABEL_45;
    result = swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_4;
LABEL_5:
    v17 = __OFADD__(v14++, 1);
    if (v17)
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v14 >= v12)
      goto LABEL_23;
    v18 = *(_QWORD *)(v8 + 8 * v14);
    if (!v18)
      break;
LABEL_15:
    v11 = (v18 - 1) & v18;
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v12)
    goto LABEL_23;
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v14 + 2;
  if (v14 + 2 >= v12)
    goto LABEL_23;
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v14 + 3;
  if (v14 + 3 >= v12)
  {
LABEL_23:
    swift_release();
    v23 = a3 + 56;
    v24 = 1 << *(_BYTE *)(a3 + 32);
    v25 = -1;
    if (v24 < 64)
      v25 = ~(-1 << v24);
    v26 = v25 & *(_QWORD *)(a3 + 56);
    v27 = (unint64_t)(v24 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v28 = 0;
    if (!v26)
      goto LABEL_27;
LABEL_26:
    v29 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    for (j = v29 | (v28 << 6); ; j = __clz(__rbit64(v31)) + (v28 << 6))
    {
      v33 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * j);
      v34 = *v33;
      v35 = v33[1];
      swift_bridgeObjectRetain();
      sub_1BB0429CC(v34, v35, a1);
      if (v4)
        break;
      result = swift_bridgeObjectRelease();
      if (v26)
        goto LABEL_26;
LABEL_27:
      v17 = __OFADD__(v28++, 1);
      if (v17)
        goto LABEL_49;
      if (v28 >= v27)
        return swift_release();
      v31 = *(_QWORD *)(v23 + 8 * v28);
      if (!v31)
      {
        v32 = v28 + 1;
        if (v28 + 1 >= v27)
          return swift_release();
        v31 = *(_QWORD *)(v23 + 8 * v32);
        if (!v31)
        {
          v32 = v28 + 2;
          if (v28 + 2 >= v27)
            return swift_release();
          v31 = *(_QWORD *)(v23 + 8 * v32);
          if (!v31)
          {
            v32 = v28 + 3;
            if (v28 + 3 >= v27)
              return swift_release();
            v31 = *(_QWORD *)(v23 + 8 * v32);
            if (!v31)
            {
              while (1)
              {
                v28 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_51;
                if (v28 >= v27)
                  return swift_release();
                v31 = *(_QWORD *)(v23 + 8 * v28);
                ++v32;
                if (v31)
                  goto LABEL_37;
              }
            }
          }
        }
        v28 = v32;
      }
LABEL_37:
      v26 = (v31 - 1) & v31;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
LABEL_14:
    v14 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v12)
      goto LABEL_23;
    v18 = *(_QWORD *)(v8 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_15;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for FormatStringListSelector()
{
  return &type metadata for FormatStringListSelector;
}

uint64_t FormatPluginFactory.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

uint64_t FormatPluginFactory.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*FormatPluginFactory.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BB043740;
}

uint64_t FormatPluginFactory.pluginContainerController.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 32);
}

void sub_1BB043788(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  v4 = swift_unknownObjectWeakAssign();
  v5 = *(_QWORD *)(v3 + 184);
  v6 = (void *)MEMORY[0x1BCCE5D40](v4);
  v7 = *(_QWORD *)(v3 + 40);
  swift_beginAccess();
  *(_QWORD *)(v5 + 24) = v7;
  swift_unknownObjectWeakAssign();

}

void FormatPluginFactory.pluginContainerController.setter(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a2;
  v5 = swift_unknownObjectWeakAssign();
  v6 = *(_QWORD *)(v2 + 184);
  v7 = (void *)MEMORY[0x1BCCE5D40](v5);
  v8 = *(_QWORD *)(v2 + 40);
  swift_beginAccess();
  *(_QWORD *)(v6 + 24) = v8;
  swift_unknownObjectWeakAssign();

}

void (*FormatPluginFactory.pluginContainerController.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BB043928;
}

void sub_1BB043928(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  *(_QWORD *)(*(_QWORD *)(*a1 + 40) + 40) = *(_QWORD *)(*a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 40);
    swift_endAccess();

    v6 = *(_QWORD *)(v5 + 184);
    v7 = (void *)MEMORY[0x1BCCE5D40](v5 + 32);
    v8 = *(_QWORD *)(v5 + 40);
    swift_beginAccess();
    *(_QWORD *)(v6 + 24) = v8;
    swift_unknownObjectWeakAssign();

  }
  free((void *)v3);
}

uint64_t FormatPluginFactory.__allocating_init(resolver:formatModelFactory:formatTracker:webEmbedManager:animatorFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BA49DD54(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB0442A8);
}

uint64_t FormatPluginFactory.createPlugin(with:layoutOptionsProvider:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v26 = a2;
  v27 = a3;
  v6 = type metadata accessor for FormatPluginData();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3 + 6, v3[9]);
  sub_1BA840BB0();
  result = sub_1BB86DF3C();
  if (result)
  {
    v11 = result;
    v12 = v3[9];
    v25 = v3[10];
    __swift_project_boxed_opaque_existential_1(v3 + 6, v12);
    sub_1BA505288(0, (unint64_t *)&unk_1ED3D4C20);
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
    v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v3;
    sub_1BA866C58((uint64_t)v9, v15 + v13);
    *(_QWORD *)(v15 + v14) = v11;
    swift_retain();
    sub_1BB86DF30();
    swift_unownedRelease();
    result = swift_release();
    if (v30)
    {
      sub_1BA4CECCC(&v29, (uint64_t)v31);
      v16 = a1[1];
      v25 = *a1;
      v18 = v32;
      v17 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v19 = (objc_class *)type metadata accessor for FormatPluginConfig();
      v20 = objc_allocWithZone(v19);
      sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v20 + OBJC_IVAR____TtC8NewsFeed18FormatPluginConfig_pluginData, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v28.receiver = v20;
      v28.super_class = v19;
      v21 = objc_msgSendSuper2(&v28, sel_init);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      swift_beginAccess();
      v22 = MEMORY[0x1BCCE5D40](v4 + 2);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 8))(v25, v16, v26, v27, v21, v22, v4[3], v18, v17);

      swift_unknownObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      return v23;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB043CA4(_QWORD *a1, uint64_t a2)
{
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[3];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  sub_1BA4C010C(a2 + 88, (uint64_t)v8);
  swift_release();
  sub_1BA505288(0, &qword_1ED3A0200);
  sub_1BB86DDD4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  type metadata accessor for WebEmbedManager();
  sub_1BB86DDEC();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatPluginData();
  sub_1BB86DDD4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB86DDC8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_unownedRetainStrong();
  v5 = *(_OWORD *)(a2 + 128);
  swift_unknownObjectRetain();
  swift_release();
  v8[0] = v5;
  sub_1BA505288(0, &qword_1ED3D4C38);
  sub_1BB86DDD4();
  swift_unknownObjectRelease();
  swift_unownedRetainStrong();
  sub_1BA4C2DD8(a2 + 144, (uint64_t)&v6, (uint64_t (*)(_QWORD))sub_1BA8209E0);
  swift_release();
  if (!v7)
    return sub_1BA4A2E80((uint64_t)&v6, (uint64_t (*)(_QWORD))sub_1BA8209E0);
  sub_1BA4CECCC(&v6, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3A9BB0);
  sub_1BB86DDD4();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t FormatPluginFactory.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  sub_1BA8FD860(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_unknownObjectRelease();
  sub_1BA4A2E80(v0 + 144, (uint64_t (*)(_QWORD))sub_1BA8209E0);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPluginFactory.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  sub_1BA8FD860(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_unknownObjectRelease();
  sub_1BA4A2E80(v0 + 144, (uint64_t (*)(_QWORD))sub_1BA8209E0);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB043FF0()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

uint64_t (*sub_1BB044034(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BB043740;
}

void sub_1BB0440A0(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1BB044110()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 32);
}

void (*sub_1BB044154(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FormatPluginFactory.pluginContainerController.modify(v2);
  return sub_1BA9D68C8;
}

_QWORD *sub_1BB04419C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;

  a6[3] = 0;
  swift_unknownObjectWeakInit();
  a6[5] = 0;
  swift_unknownObjectWeakInit();
  a6[24] = MEMORY[0x1E0DEE9E8];
  sub_1BA4C010C(a1, (uint64_t)(a6 + 6));
  sub_1BA4C010C(a2, (uint64_t)(a6 + 11));
  sub_1BA4C2DD8(a5, (uint64_t)(a6 + 18), (uint64_t (*)(_QWORD))sub_1BA8209E0);
  a6[23] = a4;
  type metadata accessor for WeakFormatTracker();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v14 + 24) = a8;
  swift_unknownObjectWeakAssign();
  sub_1BA4A2E80(a5, (uint64_t (*)(_QWORD))sub_1BA8209E0);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  a6[16] = v14;
  a6[17] = &protocol witness table for WeakFormatTracker;
  return a6;
}

_QWORD *sub_1BB0442A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;

  v15 = (_QWORD *)swift_allocObject();
  return sub_1BB04419C(a1, a2, a3, a4, a5, v15, a7, a8);
}

uint64_t sub_1BB044324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB044380(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB0443D4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for FormatPluginData();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unownedRelease();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FormatContent.Resolved();
  v5 = v3 + v4[5];
  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v7 = v3 + v4[14];
  v8 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + v8[5];
    swift_bridgeObjectRelease();
    v10 = type metadata accessor for FormatWebEmbed();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    v28 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v28(v11, v12);
    v14 = v9 + *(int *)(v10 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12))
      v28(v14, v12);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v15 = v7 + v8[8];
    v16 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for GenericDataVisualization();
        v28(v15 + *(int *)(v17 + 20), v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v18 = v7 + v8[9];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  }

  swift_bridgeObjectRelease();
  v22 = v3 + v4[18];
  v23 = sub_1BB871E24();
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v25 = v3 + v1[5];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v25 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v3 + v1[6];
  if (*(_QWORD *)(v26 + 24))
    __swift_destroy_boxed_opaque_existential_1(v26);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0447DC(_QWORD *a1)
{
  uint64_t v1;

  type metadata accessor for FormatPluginData();
  return sub_1BB043CA4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB044830@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1BB044888(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BB0448E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  v6 = *(_QWORD *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t dispatch thunk of FormatPluginFactoryType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.pluginContainerController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.pluginContainerController.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.pluginContainerController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.prepare(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FormatPluginFactoryType.createPlugin(with:layoutOptionsProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t method lookup function for FormatPluginFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatPluginFactory.__allocating_init(resolver:formatModelFactory:formatTracker:webEmbedManager:animatorFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

char *sub_1BB044990(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  uint64_t v15;
  Class v16;
  char *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v11 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView;
  type metadata accessor for FormatAdMetricsContentView();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = v4;
  *(_QWORD *)&v4[v11] = objc_msgSend(v12, sel_init);
  v14 = &v13[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker] = 0;
  v15 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_onCollapse;
  sub_1BA563554();
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(v16), sel_init);

  v19.receiver = v13;
  v19.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView]);
  return v17;
}

uint64_t type metadata accessor for FormatAdMetricsView()
{
  return objc_opt_self();
}

uint64_t sub_1BB044B8C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FormatAdMetricsContentView()
{
  return objc_opt_self();
}

void sub_1BB044D18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  Class v5;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_identifier];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  v2 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_contentView;
  type metadata accessor for FormatAdMetricsContentView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_metricsView];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_privacyMarker] = 0;
  v4 = OBJC_IVAR____TtC8NewsFeed19FormatAdMetricsView_onCollapse;
  sub_1BA563554();
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB044DF0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1BB86BE54();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v18 = a2;
  if ((a3 & 1) != 0)
  {
    sub_1BB86BE00();
    sub_1BA7114A0();
    v11 = sub_1BB873AEC();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = v11;
    v18 = v13;
    v15 = 10;
    v16 = 0xE100000000000000;
    v10 = sub_1BB873AB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 10;
    v16 = 0xE100000000000000;
    sub_1BA7114A0();
    return sub_1BB873AB0();
  }
  return v10;
}

uint64_t sub_1BB044F30(uint64_t a1)
{
  return sub_1BB044F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceHighlighter()
{
  return objc_opt_self();
}

uint64_t sub_1BB044F6C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BB044F88 + 4 * byte_1BB8E3D50[a3]))();
}

uint64_t sub_1BB044F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1BB874398();
}

uint64_t sub_1BB04500C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  BOOL v27;
  _BYTE v28[23];
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_1BB86BE54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = a1;
  v32 = a2;
  sub_1BB86BE00();
  sub_1BA7114A0();
  v8 = sub_1BB873AEC();
  v10 = v9;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRetain();
  v11 = sub_1BA689E44(v8, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    if (v11 == 35 && v13 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return a1;
    }
  }
  v16 = sub_1BA6E43EC((uint64_t)&unk_1E726F8D8);
  swift_arrayDestroy();
  v17 = sub_1BA761FE4(v8, v10, v16);
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_16;
  v18 = v8 == 1702195828 && v10 == 0xE400000000000000;
  if (v18 || (sub_1BB874398() & 1) != 0)
    goto LABEL_16;
  if (v8 == 0x65736C6166 && v10 == 0xE500000000000000)
    goto LABEL_16;
  v21 = sub_1BB874398();
  if ((v21 & 1) != 0)
    goto LABEL_16;
  v30 = 0;
  MEMORY[0x1E0C80A78](v21);
  *(_QWORD *)&v28[-16] = &v30;
  if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v8 & 0x1000000000000000))
  {
    sub_1BB873C90();
    goto LABEL_16;
  }
  MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)&v28[-16] = sub_1BB04611C;
  *(_QWORD *)&v28[-8] = v23;
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((v8 & 0x1000000000000000) != 0)
    {
      v24 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v25 = v8 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v24 = sub_1BB873D80();
    }
    v29 = sub_1BA9F2820(v24, v25, (void (*)(uint64_t *__return_ptr))sub_1BB046188) & 1;
    goto LABEL_16;
  }
  v31 = v8;
  v32 = v10 & 0xFFFFFFFFFFFFFFLL;
  v27 = (v8 > 0x20u || ((0x100003E01uLL >> v8) & 1) == 0)
     && (v26 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
     && *v26 == 0;
  v29 = v27;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BB045390(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  unsigned int v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  unsigned __int8 v73;
  _QWORD *v74;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t result;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  unint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  unsigned __int8 v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unsigned __int8 v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  __int128 v118;
  __int128 v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  _BOOL4 v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;

  v4 = sub_1BB86BE54();
  v124 = *(_QWORD *)(v4 - 8);
  v125 = v4;
  MEMORY[0x1E0C80A78](v4);
  v123 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a2) & 0xF;
  else
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (!v6)
  {
    v135 = 0;
    v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = 0xE000000000000000;
    goto LABEL_151;
  }
  v135 = 0;
  v7 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v7) = 1;
  v8 = 4 << v7;
  v130 = a2 & 0xFFFFFFFFFFFFFFLL;
  v131 = 4 * v6;
  v129 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v9 = 15;
  v119 = xmmword_1BB8E3DC0;
  v118 = xmmword_1BB8E3DD0;
  v10 = 0xE000000000000000;
  v128 = v6;
  v132 = 4 << v7;
  v121 = a1;
  v122 = HIBYTE(a2) & 0xF;
  while (2)
  {
    v120 = v126 + 4;
    while (1)
    {
      v11 = v9 & 0xC;
      v12 = (v9 & 1) == 0 || v11 == v8;
      v13 = v12;
      if (v12)
      {
        v14 = v9;
        if (v11 == v8)
          v14 = sub_1BB80CBC0(v9, a1, a2);
        v15 = (uint64_t *)(v14 >> 16);
        if (v14 >> 16 >= v6)
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if ((v14 & 1) == 0)
          sub_1BB80CD40(v14, a1, a2);
      }
      else
      {
        v15 = (uint64_t *)(v9 >> 16);
        if (v9 >> 16 >= v6)
          goto LABEL_161;
      }
      v134 = v13;
      v16 = v10;
      v133 = v9 & 0xC;
      if ((a2 & 0x1000000000000000) == 0)
        break;
      LODWORD(v11) = sub_1BB873CA8();
      v17 = v135;
      if ((int)v11 <= 44)
        goto LABEL_53;
LABEL_31:
      if ((_DWORD)v11 == 45)
      {
        v136 = v17;
        v137 = v16;
        swift_bridgeObjectRetain();
        v25 = v123;
        sub_1BB86BDA0();
        sub_1BA7114A0();
        v26 = sub_1BB873AEC();
        v28 = v27;
        (*(void (**)(char *, uint64_t))(v124 + 8))(v25, v125);
        swift_bridgeObjectRelease();
        if (v26 || v28 != 0xE000000000000000)
        {
          v29 = sub_1BB874398();
          swift_bridgeObjectRelease();
          v6 = v128;
          if ((v29 & 1) != 0)
            goto LABEL_107;
          goto LABEL_70;
        }
        swift_bridgeObjectRelease();
        v6 = v128;
LABEL_107:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v126 = sub_1BB3921D4(0, v126[2] + 1, 1, v126);
        v82 = v126[2];
        v81 = v126[3];
        if (v82 >= v81 >> 1)
          v126 = sub_1BB3921D4((_QWORD *)(v81 > 1), v82 + 1, 1, v126);
        v83 = v126;
        v126[2] = v82 + 1;
        v84 = &v83[3 * v82];
        v84[4] = v135;
        v84[5] = v16;
        *((_BYTE *)v84 + 48) = 2;
        swift_bridgeObjectRelease();
        v86 = v83[2];
        v85 = v83[3];
        if (v86 >= v85 >> 1)
          v126 = sub_1BB3921D4((_QWORD *)(v85 > 1), v86 + 1, 1, v126);
        v87 = v126;
        v126[2] = v86 + 1;
        v88 = &v87[3 * v86];
        *((_OWORD *)v88 + 2) = v119;
        *((_BYTE *)v88 + 48) = 0;
        v89 = sub_1BB80CC38(v9, a1, a2);
        if ((a2 & 0x1000000000000000) != 0)
          goto LABEL_117;
        v65 = v89 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
          goto LABEL_118;
        v66 = v129;
        if ((a1 & 0x1000000000000000) == 0)
LABEL_96:
          v66 = sub_1BB873D80();
LABEL_116:
        v90 = *(unsigned __int8 *)(v66 + v65);
        v8 = v132;
LABEL_138:
        v135 = 0;
        v106 = (char)v90;
        v107 = __clz(v90 ^ 0xFF) - 24;
        if (v106 >= 0)
          LOBYTE(v107) = 1;
        v9 = ((v65 + v107) << 16) | 5;
LABEL_141:
        v10 = 0xE000000000000000;
        goto LABEL_142;
      }
      if ((_DWORD)v11 != 58)
        goto LABEL_70;
      v18 = a2;
      swift_bridgeObjectRetain();
      v19 = sub_1BB04500C(v17, v16);
      v21 = v20;
      v23 = v22;
      v24 = v22;
      sub_1BB0460EC(v19, v20, v22);
      swift_bridgeObjectRelease();
      if (v24 != 3)
      {
        sub_1BB046104(v19, v21, v23);
        a2 = v18;
        a1 = v121;
        v6 = v128;
LABEL_42:
        v30 = v126[2];
        if (v30)
        {
          v31 = &v120[3 * v30];
          v34 = *(v31 - 3);
          v33 = v31 - 3;
          v32 = v34;
          if (*((_BYTE *)v33 + 16))
            goto LABEL_70;
          v35 = v32 == 45 && v33[1] == 0xE100000000000000;
          if (!v35 && (sub_1BB874398() & 1) == 0)
            goto LABEL_70;
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v126 = sub_1BB3921D4(0, v30 + 1, 1, v126);
        v57 = v126[2];
        v56 = v126[3];
        if (v57 >= v56 >> 1)
          v126 = sub_1BB3921D4((_QWORD *)(v56 > 1), v57 + 1, 1, v126);
        v58 = v126;
        v126[2] = v57 + 1;
        v59 = &v58[3 * v57];
        v59[4] = v135;
        v59[5] = v16;
        *((_BYTE *)v59 + 48) = 2;
        swift_bridgeObjectRelease();
        v61 = v58[2];
        v60 = v58[3];
        if (v61 >= v60 >> 1)
          v126 = sub_1BB3921D4((_QWORD *)(v60 > 1), v61 + 1, 1, v126);
        v62 = v126;
        v126[2] = v61 + 1;
        v63 = &v62[3 * v61];
        *((_OWORD *)v63 + 2) = v118;
        *((_BYTE *)v63 + 48) = 0;
        v64 = sub_1BB80CC38(v9, a1, a2);
        if ((a2 & 0x1000000000000000) == 0)
        {
          v65 = v64 >> 16;
          if ((a2 & 0x2000000000000000) == 0)
          {
            v66 = v129;
            if ((a1 & 0x1000000000000000) == 0)
              goto LABEL_96;
            goto LABEL_116;
          }
LABEL_118:
          v136 = a1;
          v137 = v130;
          v90 = *((unsigned __int8 *)&v136 + v65);
          v8 = v132;
          goto LABEL_138;
        }
LABEL_117:
        v9 = sub_1BB872A54();
        v135 = 0;
        v10 = 0xE000000000000000;
        v8 = v132;
        goto LABEL_142;
      }
      if (v19 == v17 && v21 == v16)
      {
        sub_1BB046104(v17, v16, 3u);
        a2 = v18;
        a1 = v121;
        v6 = v128;
        goto LABEL_70;
      }
      v36 = sub_1BB874398();
      sub_1BB046104(v19, v21, 3u);
      a2 = v18;
      a1 = v121;
      v6 = v128;
      if ((v36 & 1) == 0)
        goto LABEL_42;
LABEL_70:
      v136 = v17;
      v137 = v16;
      v15 = &v136;
      sub_1BB872A6C();
      v10 = v137;
      v135 = v136;
      if (v134)
      {
        v8 = v132;
        if (v133 == v132)
        {
          v9 = sub_1BB80CBC0(v9, a1, a2);
          if (v6 <= v9 >> 16)
            goto LABEL_163;
        }
        else if (v6 <= v9 >> 16)
        {
          goto LABEL_163;
        }
        if ((v9 & 1) == 0)
          v9 = v9 & 0xC | sub_1BB80CD40(v9, a1, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
      }
      else
      {
        v8 = v132;
        if (v6 <= v9 >> 16)
          goto LABEL_162;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v9 = sub_1BB872A54();
      }
      else
      {
        v51 = v9 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          v136 = a1;
          v137 = v130;
          v53 = *((unsigned __int8 *)&v136 + v51);
        }
        else
        {
          v52 = v129;
          if ((a1 & 0x1000000000000000) == 0)
            v52 = sub_1BB873D80();
          v53 = *(unsigned __int8 *)(v52 + v51);
        }
        v54 = (char)v53;
        v55 = __clz(v53 ^ 0xFF) - 24;
        if (v54 >= 0)
          LOBYTE(v55) = 1;
        v9 = ((v51 + v55) << 16) | 5;
      }
      if (v131 <= v9 >> 14)
        goto LABEL_151;
    }
    v17 = v135;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v136 = a1;
      v137 = v130;
    }
    else if ((a1 & 0x1000000000000000) == 0)
    {
      sub_1BB873D80();
    }
    LODWORD(v11) = sub_1BB873D8C();
    if ((int)v11 > 44)
      goto LABEL_31;
LABEL_53:
    if ((_DWORD)v11 != 35)
    {
      if ((_DWORD)v11 != 10)
        goto LABEL_70;
      v136 = v17;
      v137 = v16;
      sub_1BB872A6C();
      v68 = v136;
      v67 = v137;
      swift_bridgeObjectRetain();
      v69 = sub_1BB04500C(v68, v67);
      v71 = v70;
      v73 = v72;
      sub_1BB0460EC(v69, v70, v72);
      swift_bridgeObjectRelease();
      v74 = v126;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v74 = sub_1BB3921D4(0, v74[2] + 1, 1, v74);
      v77 = v74[2];
      v76 = v74[3];
      v126 = v74;
      if (v77 >= v76 >> 1)
        v126 = sub_1BB3921D4((_QWORD *)(v76 > 1), v77 + 1, 1, v126);
      v78 = v126;
      v126[2] = v77 + 1;
      v79 = &v78[3 * v77];
      v79[4] = v69;
      v79[5] = v71;
      *((_BYTE *)v79 + 48) = v73;
      result = swift_bridgeObjectRelease();
      if (v134)
      {
        v8 = v132;
        a1 = v121;
        v6 = v128;
        if (v133 == v132)
        {
          result = sub_1BB80CBC0(v9, v121, a2);
          v9 = result;
          if (v6 > result >> 16)
          {
LABEL_104:
            if ((v9 & 1) == 0)
              v9 = v9 & 0xC | sub_1BB80CD40(v9, a1, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
            goto LABEL_120;
          }
        }
        else if (v128 > v9 >> 16)
        {
          goto LABEL_104;
        }
      }
      else
      {
        v6 = v128;
        a1 = v121;
        v8 = v132;
        if (v128 > v9 >> 16)
        {
LABEL_120:
          if ((a2 & 0x1000000000000000) == 0)
          {
            v65 = v9 >> 16;
            if ((a2 & 0x2000000000000000) != 0)
            {
              v136 = a1;
              v137 = v130;
              v90 = *((unsigned __int8 *)&v136 + v65);
            }
            else
            {
              v91 = v129;
              if ((a1 & 0x1000000000000000) == 0)
                v91 = sub_1BB873D80();
              v90 = *(unsigned __int8 *)(v91 + v65);
            }
            goto LABEL_138;
          }
          v9 = sub_1BB872A54();
          v135 = 0;
          goto LABEL_141;
        }
        __break(1u);
      }
      __break(1u);
      return result;
    }
    v37 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v37 = v17 & 0xFFFFFFFFFFFFLL;
    if (!v37)
      goto LABEL_70;
    swift_bridgeObjectRetain();
    sub_1BB872ACC();
    v38 = sub_1BB872B74();
    v40 = v39;
    swift_bridgeObjectRelease();
    if (v38 == 32 && v40 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      v17 = v135;
    }
    else
    {
      v41 = sub_1BB874398();
      swift_bridgeObjectRelease();
      v17 = v135;
      if ((v41 & 1) == 0)
        goto LABEL_70;
    }
    v136 = v17;
    v137 = v16;
    swift_bridgeObjectRetain();
    v42 = v123;
    sub_1BB86BDA0();
    sub_1BA7114A0();
    v43 = sub_1BB873AEC();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v124 + 8))(v42, v125);
    swift_bridgeObjectRelease();
    v46 = HIBYTE(v45) & 0xF;
    if ((v45 & 0x2000000000000000) == 0)
      v46 = v43 & 0xFFFFFFFFFFFFLL;
    if (v46)
    {
      v47 = sub_1BB872B74();
      v49 = v48;
      swift_bridgeObjectRelease();
      if (v47 == 34 && v49 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v6 = v128;
      }
      else
      {
        v50 = sub_1BB874398();
        swift_bridgeObjectRelease();
        v6 = v128;
        if ((v50 & 1) == 0)
          goto LABEL_127;
      }
      goto LABEL_70;
    }
    swift_bridgeObjectRelease();
LABEL_127:
    swift_bridgeObjectRetain();
    v92 = sub_1BB04500C(v17, v16);
    v94 = v93;
    v96 = v95;
    sub_1BB0460EC(v92, v93, v95);
    swift_bridgeObjectRelease();
    v97 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v97 = sub_1BB3921D4(0, v97[2] + 1, 1, v97);
    v99 = v97[2];
    v98 = v97[3];
    v126 = v97;
    if (v99 >= v98 >> 1)
      v126 = sub_1BB3921D4((_QWORD *)(v98 > 1), v99 + 1, 1, v126);
    v100 = v126;
    v126[2] = v99 + 1;
    v101 = &v100[3 * v99];
    v101[4] = v92;
    v101[5] = v94;
    *((_BYTE *)v101 + 48) = v96;
    swift_bridgeObjectRelease();
    v102 = sub_1BB80CC38(v9, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v9 = sub_1BB872A54();
      v10 = 0xE100000000000000;
      v135 = 35;
      v6 = v128;
      v8 = v132;
    }
    else
    {
      v103 = v102 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v136 = a1;
        v137 = v130;
        v105 = *((unsigned __int8 *)&v136 + v103);
      }
      else
      {
        v104 = v129;
        if ((a1 & 0x1000000000000000) == 0)
          v104 = sub_1BB873D80();
        v105 = *(unsigned __int8 *)(v104 + v103);
      }
      v6 = v128;
      v8 = v132;
      v108 = (char)v105;
      v109 = __clz(v105 ^ 0xFF) - 24;
      if (v108 >= 0)
        LOBYTE(v109) = 1;
      v9 = ((v103 + v109) << 16) | 5;
      v10 = 0xE100000000000000;
      v135 = 35;
    }
LABEL_142:
    if (v131 > v9 >> 14)
      continue;
    break;
  }
LABEL_151:
  v110 = HIBYTE(v10) & 0xF;
  v111 = v135;
  if ((v10 & 0x2000000000000000) == 0)
    v110 = v135 & 0xFFFFFFFFFFFFLL;
  if (v110)
  {
    swift_bridgeObjectRetain();
    v15 = (uint64_t *)sub_1BB04500C(v111, v10);
    v112 = v126;
    a1 = v113;
    LOBYTE(v11) = v114;
    sub_1BB0460EC((uint64_t)v15, v113, v114);
    swift_bridgeObjectRelease();
    v6 = (unint64_t)v112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_164:
      v6 = (unint64_t)sub_1BB3921D4(0, *(_QWORD *)(v6 + 16) + 1, 1, (_QWORD *)v6);
    v116 = *(_QWORD *)(v6 + 16);
    v115 = *(_QWORD *)(v6 + 24);
    if (v116 >= v115 >> 1)
      v6 = (unint64_t)sub_1BB3921D4((_QWORD *)(v115 > 1), v116 + 1, 1, (_QWORD *)v6);
    *(_QWORD *)(v6 + 16) = v116 + 1;
    v117 = v6 + 24 * v116;
    *(_QWORD *)(v117 + 32) = v15;
    *(_QWORD *)(v117 + 40) = a1;
    *(_BYTE *)(v117 + 48) = v11;
  }
  else
  {
    v6 = (unint64_t)v126;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BB0460EC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BB046104(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

_BYTE *sub_1BB04611C@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

_QWORD *sub_1BB046188@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA9F28FC(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t destroy for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1)
{
  return sub_1BB046104(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed36DebugFormatDebuggerSourceHighlighterC5TokenOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB0460EC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB0460EC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BB046104(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BB046104(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatDebuggerSourceHighlighter.Token(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatDebuggerSourceHighlighter.Token(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerSourceHighlighter.Token()
{
  return &type metadata for DebugFormatDebuggerSourceHighlighter.Token;
}

id SportsInjuryReportDataVisualization.leagueTag.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
}

uint64_t SportsInjuryReportDataVisualization.competitorTags.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t SportsInjuryReportDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsInjuryReportDataVisualization.umcCanonicalId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsInjuryReportDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsInjuryReportDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, a1);
}

uint64_t SportsInjuryReportDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsInjuryReportDataVisualization.roster.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsInjuryReportDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 32);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BA99178C(v2, v3);
}

uint64_t SportsInjuryReportDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl, a1);
}

uint64_t SportsInjuryReportDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

char *SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  char *v7;
  char *v8;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, double);
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v8 = v7;
  v54 = a5;
  v15 = sub_1BB86C67C();
  v16 = MEMORY[0x1E0C80A78](v15);
  v49 = a1;
  v50 = (uint64_t)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a6;
  v19 = *a7;
  v20 = a7[1];
  v21 = a7[2];
  v22 = a7[3];
  v23 = a7[5];
  v24 = a7[4];
  *((_QWORD *)v8 + 4) = a1;
  *((_QWORD *)v8 + 5) = a2;
  v25 = v19;
  v55 = a3;
  *((_QWORD *)v8 + 6) = a3;
  v26 = v21;
  v51 = a4;
  v52 = v27;
  v28 = *(void (**)(char *, uint64_t, double))(v27 + 16);
  v53 = v29;
  v28(&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl], a4, v16);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources] = v54;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster] = v18;
  v30 = v20;
  v31 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config];
  v32 = v25;
  *v31 = v25;
  v31[1] = v30;
  v54 = v26;
  v31[2] = v26;
  v31[3] = v22;
  v31[4] = v24;
  v31[5] = v23;
  v48 = v23;
  if (v30)
  {
    v56 = 14906;
    v57 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BA99178C(v25, v30);
    v33 = v24;
    sub_1BB872AFC(v34);
    v35 = v30;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v35 = 0;
    v33 = v24;
  }
  v47[1] = v33;
  v36 = v51;
  v56 = sub_1BB86C538();
  v57 = v37;
  sub_1BB872AFC(v38);
  sub_1BB872AFC(v39);
  sub_1BB872AFC(v40);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v41);
  swift_bridgeObjectRelease();
  v42 = v57;
  *((_QWORD *)v8 + 2) = v56;
  *((_QWORD *)v8 + 3) = v42;
  v56 = v32;
  v57 = v35;
  v58 = v54;
  v59 = v22;
  v60 = v33;
  v61 = v48;
  v43 = v50;
  sub_1BB0FA6B8(v36, &v56, 0xD00000000000001DLL, 0x80000001BB9771D0, v50);
  swift_unknownObjectRelease();
  v45 = v52;
  v44 = v53;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v36, v53);
  sub_1BA993900(v32, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(&v8[OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl], v43, v44);
  return v8;
}

uint64_t SportsInjuryReportDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[6];
  uint64_t v25;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = a1[5];
  v13 = v1[4];
  v21 = v1[5];
  v22 = v1[6];
  v23 = v13;
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, v4);
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
  v24[5] = v11;
  v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v21;
  swift_bridgeObjectRetain();
  v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsInjuryReportDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsInjuryReportDataVisualization.init(from:)(a1);
  return v2;
}

uint64_t *SportsInjuryReportDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[3];
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;

  v39 = a1;
  v2 = v1;
  v4 = *v2;
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v30 - v7;
  sub_1BA99395C();
  v35 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB048528(0, &qword_1EF2B9828, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v36 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0484E4();
  v37 = v15;
  v16 = v38;
  sub_1BB87468C();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v4;
    v18 = v35;
    v38 = v13;
    v30[2] = v17;
    LOBYTE(v40) = 0;
    v2[4] = sub_1BB874098();
    v2[5] = v19;
    LOBYTE(v40) = 1;
    sub_1BA4A2870(&qword_1ED3A3BA0, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB50A0]);
    sub_1BB8740D4();
    sub_1BB86ED1C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    v2[6] = v40;
    LOBYTE(v40) = 2;
    v20 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v21 = v33;
    v22 = v34;
    sub_1BB8740D4();
    v30[1] = v20;
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    v23(OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, v21, v22);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v43 = 3;
    sub_1BA993B04(&qword_1ED3AB090, &qword_1ED3AA680, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF40]);
    v35 = 0;
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources) = v40;
    v43 = 6;
    sub_1BA993A04();
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster) = v40;
    v43 = 5;
    sub_1BA993A48();
    sub_1BB874068();
    v24 = OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config;
    v25 = v41;
    *(_OWORD *)OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config = v40;
    *(_OWORD *)(v24 + 16) = v25;
    *(_OWORD *)(v24 + 32) = v42;
    LOBYTE(v40) = 4;
    MEMORY[0x10] = sub_1BB874098();
    MEMORY[0x18] = v26;
    LOBYTE(v40) = 7;
    v27 = v31;
    v28 = v34;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v36);
    v23(OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl, v27, v28);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v2;
}

uint64_t SportsInjuryReportDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;

  v2 = sub_1BB86E008();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA99395C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB048528(0, &qword_1EF2B9840, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0484E4();
  v14 = v10;
  v15 = v36;
  sub_1BB8746C8();
  LOBYTE(v37) = 0;
  v16 = v35;
  sub_1BB87417C();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = v11;
  v30 = 0;
  v18 = v32;
  v35 = v6;
  v31 = v13;
  *(_QWORD *)&v37 = *(_QWORD *)(v15 + 48);
  v19 = qword_1ED3A3888;
  swift_unknownObjectRetain_n();
  if (v19 != -1)
    swift_once();
  v20 = v34;
  v21 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED3A3868);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v18, v21, v20);
  MEMORY[0x1E0C80A78](v22);
  *(&v29 - 2) = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF9B0);
  swift_getKeyPath();
  sub_1BB86ED10();
  swift_unknownObjectRelease();
  LOBYTE(v37) = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3B90, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB5098]);
  v24 = v30;
  v23 = v31;
  sub_1BB8741AC();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
  if (v24)
  {
    v26 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
  }
  else
  {
    v25 = v36;
    LOBYTE(v37) = 2;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    *(_QWORD *)&v37 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources);
    v40 = 3;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA993B04((unint64_t *)&qword_1ED3AB080, (unint64_t *)&unk_1ED3AA670, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v37 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
    v40 = 6;
    sub_1BA993C00();
    sub_1BB8741AC();
    v27 = v29;
    v28 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 16);
    v37 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config);
    v38 = v28;
    v39 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 32);
    v40 = 5;
    sub_1BA993C44();
    sub_1BB87414C();
    LOBYTE(v37) = 4;
    sub_1BB87417C();
    LOBYTE(v37) = 7;
    sub_1BB8741AC();
    v26 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
  }
  return v26(v23, v14);
}

uint64_t sub_1BB047454(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB047494 + 4 * byte_1BB8E3DE0[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB047494()
{
  return 0x746E657665;
}

uint64_t sub_1BB0474A8()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BB0474C0()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB0474E4()
{
  return 0x696669746E656469;
}

uint64_t sub_1BB047500()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BB047514()
{
  return 0x726574736F72;
}

unint64_t sub_1BB047528()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB047544(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB047584 + 4 * byte_1BB8E3DE8[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB047584()
{
  return 0x746E657665;
}

uint64_t sub_1BB047598()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BB0475B0()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB0475D4()
{
  return 0x696669746E656469;
}

uint64_t sub_1BB0475F0()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BB047604()
{
  return 0x726574736F72;
}

unint64_t sub_1BB047618()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB047634@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB048854();
  *a1 = result;
  return result;
}

uint64_t sub_1BB047660@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB047454(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB047688()
{
  unsigned __int8 *v0;

  return sub_1BB047544(*v0);
}

uint64_t sub_1BB047690@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB048854();
  *a1 = result;
  return result;
}

uint64_t sub_1BB0476B4()
{
  sub_1BB0484E4();
  return sub_1BB874710();
}

uint64_t sub_1BB0476DC()
{
  sub_1BB0484E4();
  return sub_1BB87471C();
}

uint64_t SportsInjuryReportDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl;
  v2 = sub_1BB86C67C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA993900(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsInjuryReportDataVisualization.__deallocating_deinit()
{
  SportsInjuryReportDataVisualization.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_1BB0477E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = SportsInjuryReportDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB047834(_QWORD *a1)
{
  return SportsInjuryReportDataVisualization.encode(to:)(a1);
}

uint64_t static SportsInjuryReportDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

_QWORD *sub_1BB047884(uint64_t a1)
{
  char *v2;
  uint64_t (*v3)(uint64_t);
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  _QWORD *result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  _QWORD *v62;
  char *v63;
  void (*v64)(char *, uint64_t, char *);
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  __int128 v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  __int128 v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t inited;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  __int128 v93;
  __int128 v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, _QWORD, uint64_t, char *);
  void (*v102)(char *, uint64_t, char *);
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD v118[4];
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  _UNKNOWN **v123;
  _OWORD v124[2];
  uint64_t v125;

  v2 = (char *)sub_1BB86C67C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v4 = (_QWORD *)*((_QWORD *)v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v92 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v91 = (_QWORD **)((char *)&v87 - v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v3, v6);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v109 = (char *)&v87 - v11;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v87 - v14;
  if (!a1)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v100 = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v16);
  v18 = v17;
  sub_1BA8C88C8(0);
  v110 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v107 = v18;
  v105 = v23 + 3 * v21;
  v104 = v22 | 7;
  v24 = swift_allocObject();
  v103 = xmmword_1BB87FC80;
  *(_OWORD *)(v24 + 16) = xmmword_1BB87FC80;
  v88 = v24;
  v106 = v23;
  v25 = (_QWORD *)(v24 + v23);
  v27 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 40);
  v28 = type metadata accessor for FormatInspectionItem(0);
  v29 = *(int *)(v28 + 24);
  v90 = a1;
  v30 = (char *)v25 + v29;
  *(_QWORD *)v30 = v27;
  *((_QWORD *)v30 + 1) = v26;
  v31 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v115 = v31;
  v114 = v32;
  v32(v30, 0, 1, v31);
  *v25 = 0xD000000000000010;
  v25[1] = 0x80000001BB9658C0;
  v25[2] = 0;
  v25[3] = 0;
  v33 = (char *)v25 + *(int *)(v28 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v34(v25, 0, 1, v28);
  v87 = v25;
  v111 = v21;
  v102 = (void (*)(char *, uint64_t, char *))v4[2];
  v102(v15, v90 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl, v2);
  v101 = (void (*)(char *, _QWORD, uint64_t, char *))v4[7];
  v101(v15, 0, 1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF770C(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v15, (_QWORD *)((char *)v25 + v21));
  v116 = v28;
  v117 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v34;
  v34((_QWORD *)((char *)v25 + v21), 0, 1, v28);
  v35 = *(_QWORD *)(v90 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_urlDataSources);
  if (v35 >> 62)
    goto LABEL_22;
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v36)
  {
    while (1)
    {
      v120 = MEMORY[0x1E0DEE9D8];
      result = (_QWORD *)sub_1BAC7A388(0, v36 & ~(v36 >> 63), 0);
      if (v36 < 0)
        break;
      v38 = 0;
      v39 = v120;
      v95 = v35 & 0xC000000000000001;
      v108 = 2 * v111;
      v40 = MEMORY[0x1E0DEA968];
      v94 = xmmword_1BB88A7F0;
      v93 = xmmword_1BB88A800;
      v99 = v2;
      v98 = v4;
      v97 = v35;
      v96 = v36;
      while (v36 != v38)
      {
        v113 = v38;
        v112 = v39;
        if (v95)
        {
          v41 = (_QWORD *)MEMORY[0x1BCCE4630](v38, v35);
        }
        else
        {
          v41 = *(_QWORD **)(v35 + 8 * v38 + 32);
          swift_retain();
        }
        v42 = (uint64_t)v109;
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v103;
        v44 = (_QWORD *)(v43 + v106);
        v45 = v41[2];
        v46 = v41[3];
        sub_1BA993F8C(v45, v46);
        sub_1BAAF9A70(0x20746E65746E6F43, 0xEC00000065707954, v45, v46, (char *)v44);
        v47 = v116;
        v117((char *)v44, 0, 1, v116);
        v48 = (char *)v44 + v111;
        v49 = v41[5];
        *(_QWORD *)&v119 = v41[4];
        *((_QWORD *)&v119 + 1) = v49;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          v50 = &v48[*(int *)(v47 + 24)];
          *(_QWORD *)v50 = v121;
          v51 = v115;
          swift_storeEnumTagMultiPayload();
          v114(v50, 0, 1, v51);
          *(_OWORD *)v48 = v94;
          *((_QWORD *)v48 + 2) = 0;
          *((_QWORD *)v48 + 3) = 0;
          v52 = &v48[*(int *)(v47 + 28)];
          *(_QWORD *)v52 = 0;
          *((_QWORD *)v52 + 1) = 0;
          v52[16] = -1;
        }
        else
        {
          *((_QWORD *)&v122 + 1) = v40;
          v123 = (_UNKNOWN **)MEMORY[0x1E0DEA9D8];
          v121 = v119;
          sub_1BA4CECCC(&v121, (uint64_t)v118);
          v53 = __swift_project_boxed_opaque_existential_1(v118, v118[3]);
          v54 = *v53;
          v55 = v53[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v56 = (uint64_t)v91;
          *v91 = v54;
          *(_QWORD *)(v56 + 8) = v55;
          v57 = v115;
          swift_storeEnumTagMultiPayload();
          v114((char *)v56, 0, 1, v57);
          *(_OWORD *)v48 = v94;
          *((_QWORD *)v48 + 2) = 0;
          *((_QWORD *)v48 + 3) = 0;
          sub_1BA993F9C(v56, (uint64_t)&v48[*(int *)(v47 + 24)]);
          v58 = &v48[*(int *)(v47 + 28)];
          *(_QWORD *)v58 = 0;
          *((_QWORD *)v58 + 1) = 0;
          v58[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
        }
        v59 = v100;
        swift_bridgeObjectRelease();
        v117(v48, 0, 1, v47);
        v60 = (char *)v44 + v108;
        v61 = v99;
        v4 = v102;
        v102((char *)v42, (uint64_t)v41 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v99);
        v101((char *)v42, 0, 1, v61);
        sub_1BA7E8428(v42, v59);
        v62 = v98;
        if (((unsigned int (*)(uint64_t, uint64_t, char *))v98[6])(v59, 1, v61) == 1)
        {
          sub_1BA7F0A80(v42);
          v114(&v60[*(int *)(v47 + 24)], 1, 1, v115);
          *(_OWORD *)v60 = v93;
          *((_QWORD *)v60 + 2) = 0;
          *((_QWORD *)v60 + 3) = 0;
          v63 = &v60[*(int *)(v47 + 28)];
          *(_QWORD *)v63 = 0;
          *((_QWORD *)v63 + 1) = 0;
          v63[16] = -1;
        }
        else
        {
          v64 = (void (*)(char *, uint64_t, char *))v4;
          v65 = v92;
          v64(v92, v59, v61);
          sub_1BA7F0A80(v42);
          v66 = v59;
          v67 = &v60[*(int *)(v116 + 24)];
          v47 = v116;
          ((void (*)(char *, char *, char *))v62[4])(v67, v65, v61);
          v4 = (_QWORD *)v115;
          swift_storeEnumTagMultiPayload();
          v114(v67, 0, 1, (uint64_t)v4);
          *(_OWORD *)v60 = v93;
          *((_QWORD *)v60 + 2) = 0;
          *((_QWORD *)v60 + 3) = 0;
          v68 = &v60[*(int *)(v47 + 28)];
          *(_QWORD *)v68 = 0;
          *((_QWORD *)v68 + 1) = 0;
          v68[16] = -1;
          ((void (*)(uint64_t, char *))v62[1])(v66, v61);
        }
        v117(v60, 0, 1, v47);
        sub_1BAF89090(0, 0xE000000000000000, 0, 0, v43, v124);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((_QWORD *)&v122 + 1) = &type metadata for FormatInspectionGroup;
        v123 = &off_1E72D2F60;
        v69 = swift_allocObject();
        *(_QWORD *)&v121 = v69;
        swift_release();
        *(_QWORD *)(v69 + 48) = v125;
        v70 = v124[1];
        *(_OWORD *)(v69 + 16) = v124[0];
        *(_OWORD *)(v69 + 32) = v70;
        v120 = v112;
        v72 = *(_QWORD *)(v112 + 16);
        v71 = *(_QWORD *)(v112 + 24);
        if (v72 >= v71 >> 1)
          sub_1BAC7A388(v71 > 1, v72 + 1, 1);
        v38 = v113 + 1;
        v73 = *((_QWORD *)&v122 + 1);
        v74 = (uint64_t)v123;
        v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v121, *((uint64_t *)&v122 + 1));
        v76 = MEMORY[0x1E0C80A78](v75);
        v2 = (char *)&v87 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v78 + 16))(v2, v76);
        sub_1BA6AC628(v72, (uint64_t)v2, &v120, v73, v74);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
        v39 = v120;
        v36 = v96;
        v35 = v97;
        v40 = MEMORY[0x1E0DEA968];
        if (v96 == v38)
        {
          swift_bridgeObjectRelease();
          v79 = v108;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v36 = sub_1BB873F30();
      if (!v36)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v79 = 2 * v111;
    v39 = MEMORY[0x1E0DEE9D8];
LABEL_24:
    v80 = (_QWORD *)inited;
    v81 = (_QWORD *)((char *)v87 + v79);
    v82 = sub_1BA9747FC(v39);
    swift_bridgeObjectRelease();
    v83 = sub_1BB6DF010(v82);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x756F532061746144, 0xEC00000073656372, (uint64_t)v83, 0, 0, (char *)v81);
    v117((char *)v81, 0, 1, v116);
    sub_1BAF89090(0x726F635320786F42, 0xE900000000000065, 0, 0, v88, &v121);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v80[7] = &type metadata for FormatInspectionGroup;
    v80[8] = &off_1E72D2F60;
    v84 = swift_allocObject();
    v80[4] = v84;
    *(_QWORD *)(v84 + 48) = v123;
    v85 = v122;
    *(_OWORD *)(v84 + 16) = v121;
    *(_OWORD *)(v84 + 32) = v85;
    v86 = sub_1BB6DF010((uint64_t)v80);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    swift_release();
    return v86;
  }
  return result;
}

unint64_t sub_1BB0484E4()
{
  unint64_t result;

  result = qword_1EF2B9830;
  if (!qword_1EF2B9830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4074, &type metadata for SportsInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9830);
  }
  return result;
}

void sub_1BB048528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0484E4();
    v7 = a3(a1, &type metadata for SportsInjuryReportDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB048588()
{
  return 8;
}

_QWORD *sub_1BB048594(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB0485A0()
{
  return type metadata accessor for SportsInjuryReportDataVisualization();
}

uint64_t type metadata accessor for SportsInjuryReportDataVisualization()
{
  uint64_t result;

  result = qword_1EF2B9870;
  if (!qword_1EF2B9870)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB0485E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SportsInjuryReportDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsInjuryReportDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsInjuryReportDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for SportsInjuryReportDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB0486FC + 4 * byte_1BB8E3DF5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB048730 + 4 * byte_1BB8E3DF0[v4]))();
}

uint64_t sub_1BB048730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB048738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB048740);
  return result;
}

uint64_t sub_1BB04874C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB048754);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB048758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB048760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsInjuryReportDataVisualization.CodingKeys()
{
  return &type metadata for SportsInjuryReportDataVisualization.CodingKeys;
}

unint64_t sub_1BB048780()
{
  unint64_t result;

  result = qword_1EF2B9938;
  if (!qword_1EF2B9938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E404C, &type metadata for SportsInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9938);
  }
  return result;
}

unint64_t sub_1BB0487C8()
{
  unint64_t result;

  result = qword_1EF2B9940;
  if (!qword_1EF2B9940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E3F84, &type metadata for SportsInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9940);
  }
  return result;
}

unint64_t sub_1BB048810()
{
  unint64_t result;

  result = qword_1EF2B9948;
  if (!qword_1EF2B9948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E3FAC, &type metadata for SportsInjuryReportDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9948);
  }
  return result;
}

uint64_t sub_1BB048854()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1BB04889C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0488D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA803B54(*a1);
  v5 = v4;
  if (v3 == sub_1BA803B54(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB048958()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA803B54(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0489B8()
{
  unsigned __int8 *v0;

  sub_1BA803B54(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB0489F8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA803B54(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB048A54(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724C250;
}

void FormatNodeStyle.class.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB048A9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB048AC4()
{
  JUMPOUT(0x1BB048AA4);
}

void _s8NewsFeed15FormatNodeStyleO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB048B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[29];

  if (v7 >> 59)
  {
    v16 = v11;
    v17 = v4;
    v18 = v10;
    v19 = v3;
    v20 = v6;
    v21 = v2;
    v22 = v1;
    sub_1BA76B724(a1, v16, v18, v20, v9, v5, v7);
    sub_1BA76B724(v27, v12, v17, v19, v21, v22, v8);
    sub_1BB049840(v28);
    return 0;
  }
  else
  {
    v23 = v3;
    v24 = v2;
    v25 = v1;
    v26 = v4;
    type metadata accessor for FormatViewNodeStyle();
    sub_1BA76B724(a1, v11, v10, v6, v9, v5, v7);
    sub_1BA76B724(v27, v12, v26, v23, v24, v25, v8);
    v14 = ((uint64_t (*)(uint64_t))static FormatViewNodeStyle.== infix(_:_:))(a1);
    sub_1BB049840(v28);
    return v14 & 1;
  }
}

unint64_t sub_1BB04951C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB049540();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB049540()
{
  unint64_t result;

  result = qword_1EF2B9950;
  if (!qword_1EF2B9950)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeStyle, &type metadata for FormatNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B9950);
  }
  return result;
}

unint64_t sub_1BB049584(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA76BC58();
  a1[2] = sub_1BA833E3C();
  result = sub_1BB0495B8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0495B8()
{
  unint64_t result;

  result = qword_1EF2B9958;
  if (!qword_1EF2B9958)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeStyle, &type metadata for FormatNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B9958);
  }
  return result;
}

unint64_t sub_1BB0495FC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BA76BC58();
  result = sub_1BA833E3C();
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t *assignWithCopy for FormatNodeStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  sub_1BA76B724(*a2, v4, v5, v6, v7, v8, v9);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v15 = a1[4];
  v16 = a1[5];
  v17 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_1BA76B698(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

uint64_t *assignWithTake for FormatNodeStyle(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_1BA76B698(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1BB04970C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48) >> 59;
}

uint64_t sub_1BB049718(uint64_t result)
{
  *(_QWORD *)(result + 48) &= 0x7FFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1BB049728(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = *(unsigned __int16 *)(result + 48) | (unint64_t)(a2 << 59);
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeStyle()
{
  return &type metadata for FormatNodeStyle;
}

ValueMetadata *type metadata accessor for FormatNodeStyle.CodingType()
{
  return &type metadata for FormatNodeStyle.CodingType;
}

unint64_t sub_1BB04975C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B9960;
  if (!qword_1EF2B9960)
  {
    sub_1BB0497A4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B9960);
  }
  return result;
}

void sub_1BB0497A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B9968)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B9968);
  }
}

unint64_t sub_1BB0497FC()
{
  unint64_t result;

  result = qword_1EF2B9970;
  if (!qword_1EF2B9970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4360, &type metadata for FormatNodeStyle.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B9970);
  }
  return result;
}

uint64_t *sub_1BB049840(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  sub_1BA76B698(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_1BA76B698(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t ProcessedImageRequestType.isDownloaded.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD v16[4];
  __int128 v17[2];

  v0 = sub_1BB870B34();
  v1 = v0;
  v2 = v0 + 64;
  v3 = 1 << *(_BYTE *)(v0 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v0 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_5:
    sub_1BA4C010C(*(_QWORD *)(v1 + 56) + 40 * v10, (uint64_t)v17);
    sub_1BA4CECCC(v17, (uint64_t)v16);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1BB86FA78();
    v12 = v11;
    swift_bridgeObjectRelease();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if (!v12)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v6)
    goto LABEL_26;
  v14 = *(_QWORD *)(v2 + 8 * v13);
  ++v8;
  if (v14)
    goto LABEL_24;
  v8 = v13 + 1;
  if (v13 + 1 >= v6)
    goto LABEL_26;
  v14 = *(_QWORD *)(v2 + 8 * v8);
  if (v14)
    goto LABEL_24;
  v8 = v13 + 2;
  if (v13 + 2 >= v6)
    goto LABEL_26;
  v14 = *(_QWORD *)(v2 + 8 * v8);
  if (v14)
    goto LABEL_24;
  v8 = v13 + 3;
  if (v13 + 3 >= v6)
    goto LABEL_26;
  v14 = *(_QWORD *)(v2 + 8 * v8);
  if (v14)
    goto LABEL_24;
  v8 = v13 + 4;
  if (v13 + 4 >= v6)
    goto LABEL_26;
  v14 = *(_QWORD *)(v2 + 8 * v8);
  if (v14)
  {
LABEL_24:
    v5 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
    goto LABEL_5;
  }
  v15 = v13 + 5;
  if (v15 >= v6)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v14 = *(_QWORD *)(v2 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for A6_V2()
{
  return &type metadata for A6_V2;
}

uint64_t sub_1BB049AC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B9A90, (uint64_t (*)(void))sub_1BB04B544, (uint64_t)&type metadata for A6_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB04B544();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB049C74()
{
  sub_1BB04B544();
  return sub_1BB874710();
}

uint64_t sub_1BB049C9C()
{
  sub_1BB04B544();
  return sub_1BB87471C();
}

double sub_1BB049CC4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB04B330(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB049D08(_QWORD *a1)
{
  return sub_1BB049AC0(a1);
}

uint64_t sub_1BB049D1C()
{
  sub_1BB04B0D0();
  return sub_1BB86D96C();
}

uint64_t sub_1BB049D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __int128 v68;
  unsigned __int8 v69;
  ValueMetadata *v70;
  unint64_t v71;
  uint64_t v72;

  v57 = a2;
  v50 = a3;
  v51 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v60 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  v56 = type metadata accessor for GroupLayoutBindingContext();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v61 = a1;
  sub_1BA4C2DD8(a1, v54, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v53 = sub_1BB86C8C8();
  v52 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v51);
  v70 = &type metadata for A6_V2;
  v20 = sub_1BA6B3D6C();
  v71 = v20;
  LOBYTE(v68) = v15;
  *((_QWORD *)&v68 + 1) = v16;
  LOBYTE(v6) = v17;
  v69 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  v22 = v16;
  v23 = v16;
  LOBYTE(v16) = v6;
  sub_1BA7C26A0(v22, v6);
  v62 = sub_1BB874734();
  v63 = v24;
  v66 = 95;
  v67 = 0xE100000000000000;
  v64 = 45;
  v65 = 0xE100000000000000;
  sub_1BA7114A0();
  v25 = sub_1BB873B04();
  v27 = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 24) = v27;
  v28 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v29 = v52;
  *v28 = v53;
  v28[1] = v29;
  sub_1BA4C010C((uint64_t)&v68, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v54, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v30, 0, 1, v56);
  v31 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v31, 0, 1, v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  sub_1BA7C2538(v23, v16);
  v70 = &type metadata for A6_V2;
  v71 = v20;
  v32 = v60;
  LOBYTE(v68) = v15;
  *((_QWORD *)&v68 + 1) = v23;
  v69 = v16;
  sub_1BA4C2DD8(v57, v60, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = 4;
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = MEMORY[0x1E0DEE9D8];
  v35 = (_QWORD *)(v34 + 16);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1BA7F069C;
  *(_QWORD *)(v36 + 24) = v33;
  swift_beginAccess();
  v37 = *(_QWORD **)(v34 + 16);
  sub_1BA7C26A0(v23, v16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v34 + 16) = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v37 = sub_1BA7892A0(0, v37[2] + 1, 1, v37);
    *v35 = v37;
  }
  v40 = v37[2];
  v39 = v37[3];
  if (v40 >= v39 >> 1)
  {
    v37 = sub_1BA7892A0((_QWORD *)(v39 > 1), v40 + 1, 1, v37);
    *v35 = v37;
  }
  v37[2] = v40 + 1;
  v41 = &v37[2 * v40];
  v41[4] = sub_1BA7F05A8;
  v41[5] = v36;
  swift_endAccess();
  swift_release();
  v42 = v72;
  v43 = sub_1BA7E2658(1, 6, 0, 0, v34, 0, 0, 0, 0);
  if (v42)
  {
    sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  }
  else
  {
    v45 = v43;
    swift_release();
    v46 = type metadata accessor for A6_V2.Bound();
    v47 = v50;
    v50[3] = v46;
    v47[4] = sub_1BA4A2870(qword_1EF2B9978, (uint64_t (*)(uint64_t))type metadata accessor for A6_V2.Bound, (uint64_t)&unk_1BB8E4480);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v47);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v68, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v32, (uint64_t)boxed_opaque_existential_0 + *(int *)(v46 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v46 + 28)) = v45;
  }
  return result;
}

uint64_t sub_1BB04A300@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _QWORD v29[4];
  uint64_t v30;
  char v31[105];
  __int128 v32[2];
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];

  v2 = v1;
  v27 = a1;
  v26 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A6_V2.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v33);
  sub_1BA4C010C(v9 + 56, (uint64_t)v32);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v33, inited + 16);
  sub_1BA4CECCC(v32, inited + 56);
  *(double *)(inited + 96) = v11;
  v31[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v31, v37);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v29[2] = v2;
  v29[3] = v37;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v29, v13, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  v15 = *MEMORY[0x1E0DB5D88];
  v16 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v26);
  v28 = v14;
  sub_1BB04B174(0, &qword_1EF2B9A20, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v26 = sub_1BB86DB34();
  v17 = sub_1BB86DB40();
  v25 = v33;
  v18 = v34;
  v19 = v35;
  *(_QWORD *)&v33 = v14;
  *(_QWORD *)&v32[0] = v36;
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v20 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = v20;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v21 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v22 = v27;
  *v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((_QWORD *)v22 + 3) = v18;
  *((_QWORD *)v22 + 4) = v19;
  v23 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v22 + 5) = v21;
  *((_QWORD *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1BB04A6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2B9A38, (uint64_t (*)(void))sub_1BB04B08C, (uint64_t)&type metadata for A6_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB04B174(0, &qword_1EF2B9A40, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB04B134(&qword_1EF2B9A48, &qword_1EF2B9A40, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BB04A834(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *, _QWORD, uint64_t);
  char *v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  double v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unsigned int v44;
  void *v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = a1;
  v3 = sub_1BB86DA38();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x1E0C80A78](v3);
  v56 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v52);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B9A38, (uint64_t (*)(void))sub_1BB04B08C, (uint64_t)&type metadata for A6_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v10 = v9;
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v41 - v11);
  v13 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a2 + 16);
  if (v17)
  {
    v18 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v50 = *(_QWORD *)(v14 + 72);
    v49 = *MEMORY[0x1E0DB5A38];
    v48 = *MEMORY[0x1E0DB6318];
    v47 = *MEMORY[0x1E0DB6410];
    v46 = *MEMORY[0x1E0DB61C8];
    v45 = (void *)*MEMORY[0x1E0DC4918];
    v44 = *MEMORY[0x1E0DB6208];
    v41 = a2;
    swift_bridgeObjectRetain();
    v42 = v10;
    v43 = v16;
    do
    {
      v61 = v17;
      sub_1BA4C2DD8(v18, (uint64_t)v16, type metadata accessor for HeadlineViewLayout.Context);
      v19 = v59;
      v63 = v59;
      v20 = sub_1BB86D438();
      v21 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, v49, v20);
      *v12 = v21;
      v23 = v51;
      v24 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v51 + 104);
      v24(v12, v48, v10);
      v25 = v8;
      v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB04B174(0, &qword_1EF2B9A50, MEMORY[0x1E0DB5A10]);
      v28 = v27;
      v29 = v26;
      v8 = v25;
      sub_1BB04B134(&qword_1EF2B9A58, &qword_1EF2B9A50, v29, MEMORY[0x1E0DB5A18]);
      v62 = v28;
      sub_1BB86D4EC();
      v60 = *(void (**)(uint64_t *, uint64_t))(v23 + 8);
      v60(v12, v10);
      v63 = v19;
      swift_getKeyPath();
      v24(v12, v47, v10);
      v30 = v52;
      v31 = &v25[*(int *)(v52 + 20)];
      v32 = sub_1BB86DA20();
      v33 = *(_QWORD *)(v32 - 8);
      (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v31, v46, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v32);
      *(_QWORD *)v25 = 0;
      *(_QWORD *)&v25[*(int *)(v30 + 24)] = 0;
      v34 = v45;
      *(_QWORD *)&v25[*(int *)(v30 + 28)] = v45;
      v35 = qword_1ED3BC390;
      v36 = v34;
      if (v35 != -1)
        swift_once();
      swift_retain();
      v37 = v53;
      sub_1BB86D2B8();
      v38 = swift_release();
      v39 = MEMORY[0x1E0C80A78](v38);
      v16 = v43;
      *(&v41 - 4) = (uint64_t)v43;
      *(&v41 - 3) = (uint64_t)v8;
      v40 = (unint64_t)v37;
      (*(void (**)(char *, _QWORD, uint64_t, double))(v57 + 104))(v56, v44, v58, v39);
      sub_1BA8F1F64();
      swift_allocObject();
      sub_1BB86DB34();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v55);
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for HeadlineViewLayout.Options);
      v40 = sub_1BA595D14();
      sub_1BB86D4C8();
      swift_release();
      swift_release();
      v10 = v42;
      v60(v12, v42);
      sub_1BA4A2E80((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Context);
      v18 += v50;
      v17 = v61 - 1;
    }
    while (v61 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB04AD40@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A6_V2.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB04AE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB049D84(a1, a2, a3);
}

uint64_t sub_1BB04AE34()
{
  return sub_1BB690BD8();
}

uint64_t sub_1BB04AE44()
{
  return swift_deallocObject();
}

uint64_t sub_1BB04AE54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for A6_V2.Bound()
{
  uint64_t result;

  result = qword_1EF2B99D8;
  if (!qword_1EF2B99D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB04AEB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB04AEC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB04AF3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB04AF48(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB04AFBC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB04B048(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B9A18, (uint64_t (*)(uint64_t))type metadata accessor for A6_V2.Bound, (uint64_t)&unk_1BB8E4458);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB04B084(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB04A6DC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB04B08C()
{
  unint64_t result;

  result = qword_1EF2B9A28;
  if (!qword_1EF2B9A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E45B0, &type metadata for A6_V2.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A28);
  }
  return result;
}

unint64_t sub_1BB04B0D0()
{
  unint64_t result;

  result = qword_1EF2B9A30;
  if (!qword_1EF2B9A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4580, &type metadata for A6_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A30);
  }
  return result;
}

uint64_t sub_1BB04B114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB04AD40(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB04B11C()
{
  return swift_deallocObject();
}

void sub_1BB04B12C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB04A834(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB04B134(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB04B174(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB04B174(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A6_V2.Layout;
    v8[1] = &type metadata for A6_V2.Layout.Attributes;
    v8[2] = sub_1BB04B08C();
    v8[3] = sub_1BB04B0D0();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *type metadata accessor for A6_V2.Layout.Attributes()
{
  return &type metadata for A6_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A6_V2.Layout()
{
  return &type metadata for A6_V2.Layout;
}

unint64_t sub_1BB04B214()
{
  unint64_t result;

  result = qword_1EF2B9A60;
  if (!qword_1EF2B9A60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4520, &type metadata for A6_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A60);
  }
  return result;
}

unint64_t sub_1BB04B25C()
{
  unint64_t result;

  result = qword_1EF2B9A68;
  if (!qword_1EF2B9A68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E44F8, &type metadata for A6_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A68);
  }
  return result;
}

unint64_t sub_1BB04B2A4()
{
  unint64_t result;

  result = qword_1EF2B9A70;
  if (!qword_1EF2B9A70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E44D0, &type metadata for A6_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A70);
  }
  return result;
}

unint64_t sub_1BB04B2EC()
{
  unint64_t result;

  result = qword_1EF2B9A78;
  if (!qword_1EF2B9A78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4548, &type metadata for A6_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A78);
  }
  return result;
}

uint64_t sub_1BB04B330@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B9A80, (uint64_t (*)(void))sub_1BB04B544, (uint64_t)&type metadata for A6_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB04B544();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB04B544()
{
  unint64_t result;

  result = qword_1EF2B9A88;
  if (!qword_1EF2B9A88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E46A4, &type metadata for A6_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A6_V2.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB04B5D4 + 4 * byte_1BB8E43BD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB04B608 + 4 * byte_1BB8E43B8[v4]))();
}

uint64_t sub_1BB04B608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04B610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB04B618);
  return result;
}

uint64_t sub_1BB04B624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB04B62CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB04B630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04B638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A6_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for A6_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB04B658()
{
  unint64_t result;

  result = qword_1EF2B9A98;
  if (!qword_1EF2B9A98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E467C, &type metadata for A6_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9A98);
  }
  return result;
}

unint64_t sub_1BB04B6A0()
{
  unint64_t result;

  result = qword_1EF2B9AA0;
  if (!qword_1EF2B9AA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E45EC, &type metadata for A6_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9AA0);
  }
  return result;
}

unint64_t sub_1BB04B6E8()
{
  unint64_t result;

  result = qword_1EF2B9AA8;
  if (!qword_1EF2B9AA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4614, &type metadata for A6_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9AA8);
  }
  return result;
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional __swiftcall SportsDataVisualizationResponseEmbedType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::SportsDataVisualizationResponseEmbedType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SportsDataVisualizationResponseEmbedType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB04B7BC + 4 * byte_1BB8E4700[*v0]))(0x535F5354524F5053, 0xEC00000045524F43);
}

unint64_t sub_1BB04B7BC()
{
  return 0xD000000000000015;
}

void sub_1BB04B87C(char *a1)
{
  sub_1BB7ED2B8(*a1);
}

void sub_1BB04B888()
{
  char *v0;

  sub_1BAB071B8(0, *v0);
}

void sub_1BB04B894(uint64_t a1)
{
  char *v1;

  sub_1BA9D0C54(a1, *v1);
}

void sub_1BB04B89C(uint64_t a1)
{
  char *v1;

  sub_1BAB071B8(a1, *v1);
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional sub_1BB04B8A4(Swift::String *a1)
{
  return SportsDataVisualizationResponseEmbedType.init(rawValue:)(*a1);
}

uint64_t sub_1BB04B8B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SportsDataVisualizationResponseEmbedType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB04B8D4()
{
  sub_1BB04BA48();
  return sub_1BB872D60();
}

uint64_t sub_1BB04B930()
{
  sub_1BB04BA48();
  return sub_1BB872D0C();
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseEmbedType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB04B9C8 + 4 * byte_1BB8E470D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB04B9FC + 4 * byte_1BB8E4708[v4]))();
}

uint64_t sub_1BB04B9FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04BA04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB04BA0CLL);
  return result;
}

uint64_t sub_1BB04BA18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB04BA20);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB04BA24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04BA2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseEmbedType()
{
  return &type metadata for SportsDataVisualizationResponseEmbedType;
}

unint64_t sub_1BB04BA48()
{
  unint64_t result;

  result = qword_1EF2B9AB0;
  if (!qword_1EF2B9AB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationResponseEmbedType, &type metadata for SportsDataVisualizationResponseEmbedType);
    atomic_store(result, (unint64_t *)&qword_1EF2B9AB0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatProgressViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  sub_1BA897950(v3);
  *(_QWORD *)(a1 + 8) = v3;
  return a1;
}

uint64_t destroy for FormatProgressViewData(uint64_t a1)
{
  return sub_1BA8979BC(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for FormatProgressViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  sub_1BA897950(v3);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  sub_1BA8979BC(v4);
  return a1;
}

uint64_t assignWithTake for FormatProgressViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1BA8979BC(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressViewData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 15);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 3) & 0xFFFFFFF1 | (2 * ((*(_QWORD *)(a1 + 8) >> 60) & 7))) ^ 0xF;
  if (v3 >= 0xE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatProgressViewData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(_QWORD *)result = a2 - 15;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 1) & 7) - 8 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewData()
{
  return &type metadata for FormatProgressViewData;
}

uint64_t FeedUserInfo.__allocating_init(userInfo:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t FeedUserInfo.init(userInfo:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t FeedUserInfo.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FeedUserInfo.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of FeedUserInfoType.layoutSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedUserInfoType.contextSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for FeedUserInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedUserInfo.__allocating_init(userInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id PuzzleActivityItemsConfiguration.__allocating_init(puzzle:puzzleImageShareAttributeProvider:puzzleRankProvider:userHasAccess:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  objc_class *v4;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  objc_class *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v29;
  id v30;
  uint64_t v31;
  objc_super v32;
  _QWORD v33[5];
  objc_super v34;

  v9 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v9);
  if ((a4 & 1) != 0)
  {
    v30 = objc_allocWithZone(v4);
    sub_1BA65E330();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB895110;
    v11 = (objc_class *)type metadata accessor for SharingPuzzleImageActivityItemSource();
    v12 = (char *)objc_allocWithZone(v11);
    *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image] = 0;
    v34.receiver = v12;
    v34.super_class = v11;
    v13 = objc_msgSendSuper2(&v34, sel_init);
    v31 = a3;
    MEMORY[0x1E0C80A78](v13);
    *(&v29 - 2) = v14;
    *(&v29 - 1) = (uint64_t)a1;
    sub_1BB04C524();
    v15 = v13;
    sub_1BB86EC14();
    v16 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    *(_QWORD *)(v10 + 32) = v15;
    sub_1BA8EDB4C(v31, (uint64_t)v33, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250);
    v17 = (objc_class *)type metadata accessor for SharingPuzzleTextActivityItemSource();
    v18 = (char *)objc_allocWithZone(v17);
    v19 = &v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___defaultText];
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    *(_OWORD *)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithTimeText] = xmmword_1BB87FC90;
    *(_OWORD *)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithRankText] = xmmword_1BB87FC90;
    *(_OWORD *)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedPuzzleTypeText] = xmmword_1BB87FC90;
    *(_OWORD *)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithTimeText] = xmmword_1BB87FC90;
    *(_OWORD *)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithRank] = xmmword_1BB87FC90;
    *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle] = a1;
    sub_1BA8EDB4C((uint64_t)v33, (uint64_t)&v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzleRankProvider], &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250);
    v20 = &v18[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData];
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = 0;
    *((_QWORD *)v20 + 2) = 0;
    *((_QWORD *)v20 + 3) = 1;
    v20[32] = 0;
    v32.receiver = v18;
    v32.super_class = v17;
    swift_unknownObjectRetain();
    v21 = objc_msgSendSuper2(&v32, sel_init);
    sub_1BA65DB80((uint64_t)v33, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250);
    *(_QWORD *)(v10 + 40) = v21;
    sub_1BA8EDB4C(a2, (uint64_t)v33, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a1;
    sub_1BB04C5BC((uint64_t)v33, v22 + 24);
    v33[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA5D1B18();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9240, (uint64_t (*)(uint64_t))sub_1BA5D1B18, MEMORY[0x1E0DEAF38]);
    swift_unknownObjectRetain_n();
    sub_1BB873BC4();
    sub_1BB04C624();
    swift_allocObject();
    v23 = sub_1BB86E740();
    v24 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleURLActivityItemSource());
    v25 = sub_1BB00517C(a1, v23);
    swift_unknownObjectRelease();
    swift_release();
    *(_QWORD *)(v10 + 48) = v25;
    v33[0] = v10;
    sub_1BB872DCC();
    sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2B6C20);
    v26 = (void *)sub_1BB872D9C();
    a3 = v31;
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v30, sel_initNAWithActivityItemSources_, v26);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v27 = 0;
  }
  sub_1BA65DB80(a3, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250);
  sub_1BA65DB80(a2, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  return v27;
}

id PuzzleActivityItemsConfiguration.__allocating_init(objects:)(uint64_t a1)
{
  return sub_1BB04C1C4(a1, (uint64_t)&unk_1EF2AE2D0, (uint64_t)&protocolRef_NSItemProviderWriting, (void (*)(_QWORD, uint64_t, uint64_t))sub_1BA4EFE00, (SEL *)&selRef_initWithObjects_);
}

id PuzzleActivityItemsConfiguration.init(objects:)(uint64_t a1)
{
  return sub_1BB04C274(a1, (uint64_t)&unk_1EF2AE2D0, (uint64_t)&protocolRef_NSItemProviderWriting, (void (*)(_QWORD, uint64_t, uint64_t))sub_1BA4EFE00, (SEL *)&selRef_initWithObjects_);
}

id PuzzleActivityItemsConfiguration.__allocating_init(itemProviders:)(uint64_t a1)
{
  return sub_1BB04C1C4(a1, (uint64_t)&qword_1EF2B6C30, 0x1E0CB36C8, (void (*)(_QWORD, uint64_t, uint64_t))sub_1BA49A224, (SEL *)&selRef_initWithItemProviders_);
}

id sub_1BB04C1C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), SEL *a5)
{
  objc_class *v5;
  id v10;
  void *v11;
  id v12;

  v10 = objc_allocWithZone(v5);
  a4(0, a2, a3);
  v11 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, *a5, v11);

  return v12;
}

id PuzzleActivityItemsConfiguration.init(itemProviders:)(uint64_t a1)
{
  return sub_1BB04C274(a1, (uint64_t)&qword_1EF2B6C30, 0x1E0CB36C8, (void (*)(_QWORD, uint64_t, uint64_t))sub_1BA49A224, (SEL *)&selRef_initWithItemProviders_);
}

id sub_1BB04C274(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), SEL *a5)
{
  void *v5;
  objc_class *ObjectType;
  void *v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  a4(0, a2, a3);
  v11 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v14.receiver = v5;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, *a5, v11);

  return v12;
}

id sub_1BB04C338(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, uint64_t, uint64_t), SEL *a7)
{
  objc_class *ObjectType;
  void *v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  a6(0, a4, a5);
  sub_1BB872DB4();
  v13 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v16.receiver = a1;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, *a7, v13);

  return v14;
}

id PuzzleActivityItemsConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB04C41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v5;
  char *v6;
  id v7;
  uint64_t result;
  objc_super v9;
  _BYTE v10[40];

  sub_1BA8EDB4C(a2, (uint64_t)v10, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  v5 = (objc_class *)type metadata accessor for PuzzleLinkPresentationSource();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzle] = a1;
  sub_1BA8EDB4C((uint64_t)v10, (uint64_t)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider], &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_unknownObjectRetain();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  result = sub_1BA65DB80((uint64_t)v10, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  *a3 = v7;
  return result;
}

uint64_t sub_1BB04C50C()
{
  uint64_t v0;

  return sub_1BB3828FC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1BB04C524()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B9AB8)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99A0);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B9AB8);
  }
}

uint64_t sub_1BB04C588()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1BB04C5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA65DC00(0, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB04C618@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB04C41C(*(_QWORD *)(v1 + 16), v1 + 24, a1);
}

void sub_1BB04C624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC9B0)
  {
    sub_1BA4EFE00(255, (unint64_t *)&qword_1ED3ACAA0);
    v0 = sub_1BB86E74C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC9B0);
  }
}

uint64_t type metadata accessor for PuzzleActivityItemsConfiguration()
{
  return objc_opt_self();
}

void FormatLayoutModel.frame.getter()
{
  FeedItemLayoutAttributes.frame.getter();
}

uint64_t FormatLayoutModel.resizingIdentifier.getter()
{
  return sub_1BB04C7A4(FeedItemLayoutAttributes.resizingIdentifier.getter);
}

uint64_t FormatLayoutModel.resizingGroupIdentifier.getter()
{
  return sub_1BB04C7A4(FeedItemLayoutAttributes.resizingGroupIdentifier.getter);
}

uint64_t FormatLayoutModel.layoutData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  a1[3] = &type metadata for FeedItemLayoutAttributes;
  *a1 = v2;
  return swift_retain();
}

void sub_1BB04C70C()
{
  FeedItemLayoutAttributes.frame.getter();
}

uint64_t sub_1BB04C73C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  a1[3] = &type metadata for FeedItemLayoutAttributes;
  *a1 = v2;
  return swift_retain();
}

uint64_t sub_1BB04C758(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, FeedItemLayoutAttributes.resizingIdentifier.getter);
}

uint64_t sub_1BB04C764(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, FeedItemLayoutAttributes.resizingGroupIdentifier.getter);
}

uint64_t sub_1BB04C770()
{
  sub_1BB04CD3C();
  return sub_1BB870FF0();
}

uint64_t FormatLayoutModel.identifier.getter()
{
  return sub_1BB04C7A4((uint64_t (*)(void))FeedItemLayoutAttributes.identifier.getter);
}

uint64_t sub_1BB04C7A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BB04C7D4(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.identifier.getter);
}

uint64_t sub_1BB04C7E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t FormatLayoutModel.visualRankValue.getter()
{
  return sub_1BB04CB94((uint64_t (*)(void))FeedItemLayoutAttributes.visualRankValue.getter);
}

uint64_t sub_1BB04C81C(uint64_t a1, uint64_t a2)
{
  return sub_1BB04CBD4(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.visualRankValue.getter);
}

uint64_t FormatLayoutModel.dragBackgroundColor.getter()
{
  return sub_1BB04C7A4((uint64_t (*)(void))FeedItemLayoutAttributes.dragBackgroundColor.getter);
}

uint64_t FormatLayoutModel.dragPreviewClipping.getter()
{
  return sub_1BB04CB94((uint64_t (*)(void))FeedItemLayoutAttributes.dragPreviewClipping.getter);
}

uint64_t sub_1BB04C840(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.dragBackgroundColor.getter);
}

uint64_t sub_1BB04C84C(uint64_t a1, uint64_t a2)
{
  return sub_1BB04CBD4(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.dragPreviewClipping.getter);
}

uint64_t FormatLayoutModel.contextMenuItemOptions.getter()
{
  return sub_1BB04C7A4(FeedItemLayoutAttributes.contextMenuItemOptions.getter);
}

uint64_t sub_1BB04C864(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, FeedItemLayoutAttributes.contextMenuItemOptions.getter);
}

void FormatLayoutModel.adFrame.getter(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[5];
  char v15;

  v3 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 60 == 3)
  {
    sub_1BA64109C();
    v7 = v6;
    v8 = swift_projectBox();
    sub_1BB04C974(v8 + *(int *)(v7 + 48), (uint64_t)v5);
    swift_retain();
    sub_1BB872094();
    v9 = v14[1];
    v10 = v14[2];
    v11 = v14[3];
    v12 = v14[4];
    v13 = v15;
    sub_1BB04C9B8((uint64_t)v5);
    swift_release();
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 1;
  }
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v13;
}

uint64_t sub_1BB04C974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB04C9B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatLayoutModel.prerollPlacements.getter()
{
  return sub_1BB04C7A4((uint64_t (*)(void))FeedItemLayoutAttributes.prerollPlacements.getter);
}

void sub_1BB04CA00(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[5];
  char v15;

  v3 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 >> 60 == 3)
  {
    sub_1BA64109C();
    v7 = v6;
    v8 = swift_projectBox();
    sub_1BB04C974(v8 + *(int *)(v7 + 48), (uint64_t)v5);
    swift_retain();
    sub_1BB872094();
    v9 = v14[1];
    v10 = v14[2];
    v11 = v14[3];
    v12 = v14[4];
    v13 = v15;
    sub_1BB04C9B8((uint64_t)v5);
    swift_release();
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 1;
  }
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v13;
}

uint64_t sub_1BB04CB04(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.prerollPlacements.getter);
}

uint64_t FormatLayoutModel.groupLayoutKey.getter()
{
  return sub_1BB04C7A4((uint64_t (*)(void))FeedItemLayoutAttributes.groupLayoutKey.getter);
}

uint64_t sub_1BB04CB1C(uint64_t a1, uint64_t a2)
{
  return sub_1BB04C7E0(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.groupLayoutKey.getter);
}

uint64_t FormatLayoutModel.formatImageRequests(options:)(uint64_t a1)
{
  return FeedItemLayoutAttributes.formatImageRequests(options:)(a1);
}

uint64_t sub_1BB04CB58(uint64_t a1)
{
  return FeedItemLayoutAttributes.formatImageRequests(options:)(a1);
}

uint64_t FormatLayoutModel.layoutSelectionStyle.getter()
{
  return sub_1BB04CB94((uint64_t (*)(void))FeedItemLayoutAttributes.layoutSelectionStyle.getter);
}

uint64_t sub_1BB04CB94(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BB04CBC8(uint64_t a1, uint64_t a2)
{
  return sub_1BB04CBD4(a1, a2, (uint64_t (*)(void))FeedItemLayoutAttributes.layoutSelectionStyle.getter);
}

uint64_t sub_1BB04CBD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t destroy for FormatLayoutModel()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed17FormatLayoutModelOwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatLayoutModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLayoutModel(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayoutModel()
{
  return &type metadata for FormatLayoutModel;
}

unint64_t sub_1BB04CD3C()
{
  unint64_t result;

  result = qword_1ED3A5C40;
  if (!qword_1ED3A5C40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayoutModel, &type metadata for FormatLayoutModel);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C40);
  }
  return result;
}

id FormatFixedColor.color.getter()
{
  char *v0;

  return objc_msgSend((id)objc_opt_self(), *off_1E72DEB70[*v0]);
}

unint64_t sub_1BB04CDC4()
{
  unint64_t result;

  result = qword_1ED3AD4D0;
  if (!qword_1ED3AD4D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFixedColor, &type metadata for FormatFixedColor);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4D0);
  }
  return result;
}

uint64_t sub_1BB04CE08()
{
  sub_1BB8745CC();
  FormatFixedColor.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB04CE6C()
{
  FormatFixedColor.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB04CEBC()
{
  sub_1BB8745CC();
  FormatFixedColor.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB04CF1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatFixedColor.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BB04CF40(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB04CF6C();
  result = sub_1BA49AFEC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB04CF6C()
{
  unint64_t result;

  result = qword_1EF2B9AF0;
  if (!qword_1EF2B9AF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFixedColor, &type metadata for FormatFixedColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B9AF0);
  }
  return result;
}

uint64_t sub_1BB04CFB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB801114(*a1, *a2);
}

unint64_t sub_1BB04CFBC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE8860C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB04CFE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4D41EC();
  a1[2] = sub_1BA832ACC();
  result = sub_1BB04CDC4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatFixedColor()
{
  return &type metadata for FormatFixedColor;
}

BOOL static FormatFocusPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatFocusPosition.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatFocusPosition.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB04D0A4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatFocusPosition.init(from:)(a1, a2);
}

uint64_t sub_1BB04D0B8(_QWORD *a1)
{
  return FormatFocusPosition.encode(to:)(a1);
}

uint64_t FormatFocusPosition.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6564697374754FLL;
  if (*v0 != 1)
    v1 = 0x656469736E49;
  if (*v0)
    return v1;
  else
    return 0x6974616D6F747541;
}

unint64_t sub_1BB04D12C()
{
  unint64_t result;

  result = qword_1EF2B9AF8;
  if (!qword_1EF2B9AF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusPosition, &type metadata for FormatFocusPosition);
    atomic_store(result, (unint64_t *)&qword_1EF2B9AF8);
  }
  return result;
}

unint64_t sub_1BB04D170(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB04D194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB04D194()
{
  unint64_t result;

  result = qword_1EF2B9B00;
  if (!qword_1EF2B9B00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusPosition, &type metadata for FormatFocusPosition);
    atomic_store(result, (unint64_t *)&qword_1EF2B9B00);
  }
  return result;
}

unint64_t sub_1BB04D1D8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE905F8();
  a1[2] = sub_1BAEF36C8();
  result = sub_1BB04D12C();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB04D20C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6564697374754FLL;
  if (*v0 != 1)
    v1 = 0x656469736E49;
  if (*v0)
    return v1;
  else
    return 0x6974616D6F747541;
}

uint64_t storeEnumTagSinglePayload for FormatFocusPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB04D2B4 + 4 * byte_1BB8E4C75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB04D2E8 + 4 * byte_1BB8E4C70[v4]))();
}

uint64_t sub_1BB04D2E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04D2F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB04D2F8);
  return result;
}

uint64_t sub_1BB04D304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB04D30CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB04D310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04D318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatFocusPosition()
{
  return &type metadata for FormatFocusPosition;
}

ValueMetadata *type metadata accessor for G_V2()
{
  return &type metadata for G_V2;
}

uint64_t sub_1BB04D344(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B9C58, (uint64_t (*)(void))sub_1BB04FAB8, (uint64_t)&type metadata for G_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB04FAB8();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA916364(&qword_1EF2AA7D8, (uint64_t (*)(void))sub_1BA9163E0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 40);
    v13 = 2;
    sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB04FAFC(&qword_1EF2B9C60, &qword_1EF2A9A18, MEMORY[0x1E0C9B9C0], MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB04D580()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ALL;
  if (*v0 != 1)
    v1 = 0x6F74617261706573;
  if (*v0)
    return v1;
  else
    return 0x656D617266;
}

uint64_t sub_1BB04D5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB04FD38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB04D60C()
{
  sub_1BB04FAB8();
  return sub_1BB874710();
}

uint64_t sub_1BB04D634()
{
  sub_1BB04FAB8();
  return sub_1BB87471C();
}

double sub_1BB04D65C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BB04F7CC(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BB04D69C(_QWORD *a1)
{
  return sub_1BB04D344(a1);
}

uint64_t sub_1BB04D6B0()
{
  sub_1BB04F12C();
  return sub_1BB86D96C();
}

uint64_t sub_1BB04D718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1BA62D7D8(0, (unint64_t *)&qword_1ED3B0628, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1ED39C2D8, (uint64_t (*)(void))sub_1BA915E58, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  swift_allocObject();
  v3 = sub_1BB86D7C8();
  sub_1BB04F4A4(0);
  swift_allocObject();
  result = sub_1BB86D7C8();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = result;
  return result;
}

uint64_t sub_1BB04D7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[8];
  void *v52;
  unsigned __int8 v53;
  ValueMetadata *v54;
  unint64_t v55;

  v42 = a2;
  v43 = a1;
  v44 = a3;
  v37 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for GroupLayoutBindingContext();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v35 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  v38 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  sub_1BA4C2DD8(a1, v35, v16);
  sub_1BA4C2DD8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v17 = sub_1BB86C8C8();
  v34 = v18;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v37);
  v54 = &type metadata for G_V2;
  v37 = sub_1BA8EDF84();
  v55 = v37;
  v51[0] = v13;
  v52 = v14;
  v53 = v15;
  type metadata accessor for GroupLayoutKey();
  v19 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v49 = sub_1BB874734();
  v50 = v20;
  v47 = 95;
  v48 = 0xE100000000000000;
  v45 = 45;
  v46 = 0xE100000000000000;
  sub_1BA7114A0();
  v21 = sub_1BB873B04();
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 24) = v23;
  v24 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v25 = v34;
  *v24 = v17;
  v24[1] = v25;
  sub_1BA4C010C((uint64_t)v51, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v26 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v35, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v39);
  v27 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v11, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v27, 0, 1, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  sub_1BA7C2538(v14, v15);
  v28 = type metadata accessor for G_V2.Bound();
  v29 = v44;
  v44[3] = v28;
  v29[4] = sub_1BA4A2870(qword_1EF2B9B18, (uint64_t (*)(uint64_t))type metadata accessor for G_V2.Bound, (uint64_t)&unk_1BB8E4E88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  v31 = v37;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for G_V2;
  boxed_opaque_existential_0[5] = v31;
  *((_BYTE *)boxed_opaque_existential_0 + 8) = v38;
  boxed_opaque_existential_0[2] = (uint64_t)v14;
  *((_BYTE *)boxed_opaque_existential_0 + 24) = v15;
  sub_1BA4C2DD8(v42, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  result = sub_1BB3E0828(0, 0, 0, 0, 0);
  *boxed_opaque_existential_0 = v19;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

uint64_t sub_1BB04DB84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for G_V2.Bound();
  v9 = *(_QWORD *)(v2 + *(int *)(v8 + 28));
  v29 = v2;
  swift_bridgeObjectRetain();
  v10 = sub_1BA8A1F94((void (*)(_QWORD *__return_ptr, _OWORD *))sub_1BB04F0C0, (uint64_t)v28, v9);
  swift_bridgeObjectRelease();
  v11 = v2 + *(int *)(v8 + 24);
  v12 = *(_QWORD *)(v11 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 24);
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v25 = v10;
  v26 = v2;
  v27 = v12;
  sub_1BB04F428(0, &qword_1EF2B9BC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v24 = sub_1BB86DB34();
  v15 = sub_1BB86DB40();
  v22[1] = v22;
  v35 = v32;
  v36 = v33;
  v34 = v31;
  v23 = v31;
  v16 = v32;
  v37 = v33;
  v30 = v33;
  *(_QWORD *)&v31 = v10;
  MEMORY[0x1E0C80A78](v15);
  v17 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))v17);
  sub_1BA6B5A14(&qword_1ED39D9E0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  sub_1BA6B5A14(&qword_1ED39D9C8, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
  swift_bridgeObjectRetain();
  v18 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31 = v18;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BA6B39A0();
  v19 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  sub_1BA4F6CCC((uint64_t)&v37);
  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 8) = v23;
  *(_OWORD *)(a1 + 24) = v16;
  v20 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v20;
  *(_QWORD *)&v31 = *((_QWORD *)&v36 + 1);
  sub_1BA4F6CCC((uint64_t)&v31);
  return swift_release();
}

uint64_t sub_1BB04DF48@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t inited;
  __int128 v21[2];
  __int128 v22[2];
  uint64_t v23[5];
  _BYTE v24[10];
  __int128 v25[7];
  _OWORD v26[2];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _OWORD v34[9];

  v5 = a1[5];
  v6 = a1[7];
  v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  v7 = a1[1];
  v8 = a1[3];
  v28 = a1[2];
  v29 = v8;
  v9 = a1[3];
  v10 = a1[5];
  v30 = a1[4];
  v31 = v10;
  v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1BA90EFB8(v34);
  sub_1BB04F360((uint64_t)v34, (uint64_t)v24, (uint64_t)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  v14 = (char *)a2 + *(int *)(type metadata accessor for G_V2.Bound() + 24);
  v15 = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
  v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BA4C010C(v16 + 16, (uint64_t)v22);
  sub_1BA4C010C(v16 + 56, (uint64_t)v21);
  v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v22, inited + 16);
  sub_1BA4CECCC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1BA8D1F08((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

uint64_t sub_1BB04E0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BA4CDF6C(0, &qword_1EF2B9BD8, (uint64_t (*)(void))sub_1BB04F0E8, (uint64_t)&type metadata for G_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v21[-v12];
  v25 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v10 + 104))(&v21[-v12], *MEMORY[0x1E0DB6410], v9, v11);
  sub_1BB04F2A0();
  sub_1BA4CDF6C(0, &qword_1EF2B9BE8, (uint64_t (*)(void))sub_1BB04F0E8, (uint64_t)&type metadata for G_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0DB5C80], v15);
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v19 = MEMORY[0x1E0DB5DD0];
  sub_1BB04F428(0, &qword_1EF2B9BF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB04F320(&qword_1EF2B9BF8, &qword_1EF2B9BF0, (uint64_t (*)(uint64_t, _QWORD *))v19, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1BB04E2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t result;
  unint64_t v15;
  void (*v16)(uint64_t *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t);
  uint64_t (*v53)(uint64_t, _QWORD *);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  double v68;
  void (*v69)(uint64_t, _QWORD, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD v78[2];
  __int128 v79;
  unsigned int v80;
  unsigned int v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  uint64_t *v100;
  uint64_t v101;
  void (*v102)(uint64_t, _QWORD, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t *, uint64_t, uint64_t);
  unint64_t v112;
  uint64_t KeyPath;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[51];
  uint64_t v122;
  uint64_t v123;

  v101 = a4;
  v109 = a3;
  v117 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2B9BD8, (uint64_t (*)(void))sub_1BB04F0E8, (uint64_t)&type metadata for G_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v6 = *(_QWORD *)(v5 - 8);
  v114 = v5;
  v115 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v78 - v7);
  v9 = sub_1BB86DA38();
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v85 = a2 + 32;
  v90 = *MEMORY[0x1E0DB6208];
  v83 = &v121[1];
  v84 = &v120;
  v100 = &v123;
  v12 = *MEMORY[0x1E0DB5FB8];
  v98 = *MEMORY[0x1E0DB63D0];
  v99 = v12;
  v13 = *MEMORY[0x1E0DB5C30];
  v96 = *MEMORY[0x1E0DB5C68];
  v97 = v13;
  v82 = v11 - 1;
  v89 = *MEMORY[0x1E0DB5A30];
  v88 = *MEMORY[0x1E0DB6318];
  v87 = *MEMORY[0x1E0DB63E8];
  v81 = *MEMORY[0x1E0DB5BA8];
  v80 = *MEMORY[0x1E0DB5B90];
  v78[1] = a2;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v95 = xmmword_1BB87CE70;
  v79 = xmmword_1BB87A390;
  v91 = v11;
  while (1)
  {
    if (v15 == v11)
    {
      v24 = v11;
      memset(v121, 0, 400);
      goto LABEL_8;
    }
    if (v15 >= v11)
      break;
    v24 = v15 + 1;
    v25 = v84;
    sub_1BA915B28(v85 + 392 * v15, (uint64_t)v84);
    v121[0] = v15;
    memcpy(v83, v25, 0x188uLL);
LABEL_8:
    sub_1BB04F360((uint64_t)v121, (uint64_t)&v122, (uint64_t)&unk_1EF2B9C00, (uint64_t)sub_1BB04F3B8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    if (!v123)
      return swift_bridgeObjectRelease();
    v26 = v122;
    memcpy(v121, v100, 0x188uLL);
    v27 = v121[7];
    v28 = type metadata accessor for G_V2.Bound();
    v29 = v109 + *(int *)(v28 + 24);
    v30 = type metadata accessor for GroupLayoutContext();
    v31 = *(_QWORD *)(*(_QWORD *)(v29 + *(int *)(v30 + 40)) + 24);
    v112 = v24;
    v108 = v28;
    v110 = v26;
    v33 = MEMORY[0x1E0C80A78](v30);
    if ((v27 & 0x10) != 0)
    {
      v78[-4] = v121;
      v78[-3] = v31;
      v76 = v32;
    }
    else
    {
      v76 = v121;
      v77 = v31;
    }
    (*(void (**)(char *, _QWORD, uint64_t, double))(v93 + 104))(v92, v90, v94, v33);
    sub_1BA915C74();
    swift_allocObject();
    swift_retain();
    v118 = sub_1BB86DB34();
    swift_release();
    v119 = v117;
    KeyPath = swift_getKeyPath();
    sub_1BA71C838();
    v35 = v34;
    v36 = swift_allocBox();
    v38 = v37 + *(int *)(v35 + 48);
    sub_1BB86D888();
    v39 = sub_1BB86D894();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v38, v99, v39);
    *v8 = v36;
    v40 = v114;
    v111 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v115 + 104);
    v111(v8, v98, v114);
    sub_1BB04F2A0();
    v42 = v41;
    sub_1BA4CDF6C(0, &qword_1EF2B9BE8, (uint64_t (*)(void))sub_1BB04F0E8, (uint64_t)&type metadata for G_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v44 = v43;
    v45 = *(_QWORD *)(v43 - 8);
    v46 = *(_QWORD *)(v45 + 72);
    v47 = *(unsigned __int8 *)(v45 + 80);
    v48 = (v47 + 32) & ~v47;
    v105 = v42;
    v106 = v46;
    v103 = v47 | 7;
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v95;
    v104 = v48;
    v50 = v49 + v48;
    sub_1BA4CDF6C(0, &qword_1EF2B9C10, (uint64_t (*)(void))sub_1BB04F0E8, (uint64_t)&type metadata for G_V2.Layout, MEMORY[0x1E0DB5C60]);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v50, v97, v51);
    v52 = *(void (**)(_QWORD, _QWORD, _QWORD))(v45 + 104);
    v107 = v44;
    v102 = v52;
    v52(v50, v96, v44);
    v53 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB04F428(0, &qword_1EF2B9C18, MEMORY[0x1E0DB5A10]);
    v55 = v54;
    v56 = sub_1BB04F320(&qword_1EF2B9C20, &qword_1EF2B9C18, v53, MEMORY[0x1E0DB5A18]);
    v76 = (_QWORD *)sub_1BA915DF0();
    v57 = v118;
    v58 = v55;
    v116 = v56;
    sub_1BB86D4C8();
    swift_release();
    swift_bridgeObjectRelease();
    v59 = *(void (**)(uint64_t *, uint64_t))(v115 + 8);
    v59(v8, v40);
    v60 = v57;
    if (!v101)
    {
LABEL_2:
      v16 = v59;
      v17 = v117;
      v119 = v117;
      swift_getKeyPath();
      sub_1BB04F0E8();
      sub_1BB86DB70();
      sub_1BA4A2870(&qword_1ED39C2E0, (uint64_t (*)(uint64_t))sub_1BB04F4A4, MEMORY[0x1E0DB5EB8]);
      sub_1BB86D4E0();
      swift_release();
      v18 = v114;
      v16(v8, v114);
      v119 = v17;
      v19 = sub_1BB86D438();
      v20 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, v89, v19);
      *v8 = v20;
      v111(v8, v88, v18);
      sub_1BB86D4EC();
      swift_release();
      v22 = v8;
      v23 = v18;
      goto LABEL_3;
    }
    if (v101 == 1)
    {
      if (v110 == v82)
        goto LABEL_2;
    }
    else if (!sub_1BA79296C(v110, v101))
    {
      goto LABEL_2;
    }
    v119 = v117;
    v61 = v117;
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = 0x4034000000000000;
    *v8 = v62;
    v63 = v87;
    v64 = v114;
    v65 = v111;
    v111(v8, v87, v114);
    v86 = v58;
    sub_1BB86D4EC();
    v59(v8, v64);
    v119 = v61;
    KeyPath = swift_getKeyPath();
    v66 = swift_allocObject();
    v118 = v60;
    v67 = v66;
    sub_1BB86D774();
    *(double *)(v67 + 16) = 1.0 / v68;
    *v8 = v67;
    v65(v8, v63, v64);
    v69 = v102;
    v16 = v59;
    v70 = v106;
    v71 = v104;
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v79;
    v73 = v72 + v71;
    sub_1BB86D9A8();
    v74 = v107;
    v69(v73, v81, v107);
    v69(v73 + v70, v80, v74);
    sub_1BA4A2870(&qword_1ED39C2E0, (uint64_t (*)(uint64_t))sub_1BB04F4A4, MEMORY[0x1E0DB5EB8]);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    v16(v8, v64);
    v119 = v117;
    v75 = swift_allocObject();
    *(_QWORD *)(v75 + 16) = 0x4034000000000000;
    *v8 = v75;
    v65(v8, v87, v64);
    sub_1BB86D4EC();
    swift_release();
    v22 = v8;
    v23 = v64;
LABEL_3:
    v16(v22, v23);
    result = sub_1BA915C30((uint64_t)v121);
    v11 = v91;
    v15 = v112;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB04EC50@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD *v25;

  v12 = swift_allocObject();
  v13 = swift_allocObject();
  sub_1BA915B28(a2, v13 + 16);
  memcpy((void *)(v13 + 408), a3, 0x180uLL);
  v14 = a4 + *(int *)(type metadata accessor for G_V2.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(v14 + *(int *)(result + 28));
  v17 = __OFADD__(v16, a1);
  v18 = v16 + a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v13 + 792) = v18;
  *(_QWORD *)(v12 + 16) = v13 | 0x5000000000000000;
  sub_1BA4B07F0(0, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8) + 80);
  v20 = (v19 + 32) & ~v19;
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v21 = *(_QWORD *)(a5 + 40);
  if (*(_QWORD *)(v21 + 16) > a1)
  {
    v22 = result;
    v23 = v21 + 32 * a1;
    v24 = *(_OWORD *)(v23 + 48);
    v25 = (_OWORD *)(result + v20);
    *v25 = *(_OWORD *)(v23 + 32);
    v25[1] = v24;
    result = swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v12 + 24) = v22;
    *a6 = v12 | 0xB000000000000000;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB04EDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB04D7EC(a1, a2, a3);
}

uint64_t sub_1BB04EDF0()
{
  return sub_1BB690BF0();
}

unint64_t sub_1BB04EE00(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB04EE2C();
  result = sub_1BB04EE70();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB04EE2C()
{
  unint64_t result;

  result = qword_1EF2B9B08;
  if (!qword_1EF2B9B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4DD0, &type metadata for G_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2B9B08);
  }
  return result;
}

unint64_t sub_1BB04EE70()
{
  unint64_t result;

  result = qword_1EF2B9B10;
  if (!qword_1EF2B9B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4DF8, &type metadata for G_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2B9B10);
  }
  return result;
}

uint64_t type metadata accessor for G_V2.Bound()
{
  uint64_t result;

  result = qword_1EF2B9B78;
  if (!qword_1EF2B9B78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB04EEF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB04EEFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB04EF78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB04EF84(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB04EFF8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB04F084(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B9BB8, (uint64_t (*)(uint64_t))type metadata accessor for G_V2.Bound, (uint64_t)&unk_1BB8E4E60);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB04F0C0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB04DF48(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1BB04F0DC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB04E0F0(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BB04F0E8()
{
  unint64_t result;

  result = qword_1EF2B9BC8;
  if (!qword_1EF2B9BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4FD8, &type metadata for G_V2.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B9BC8);
  }
  return result;
}

unint64_t sub_1BB04F12C()
{
  unint64_t result;

  result = qword_1EF2B9BD0;
  if (!qword_1EF2B9BD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4FA8, &type metadata for G_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9BD0);
  }
  return result;
}

uint64_t sub_1BB04F170@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB04EC50(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BB04F178()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB04F1A8()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB04F2A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B9BE0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B9BE8, (uint64_t (*)(void))sub_1BB04F0E8, (uint64_t)&type metadata for G_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B9BE0);
  }
}

uint64_t sub_1BB04F314(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB04E2D0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BB04F320(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB04F428(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB04F360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;

  v7 = a5(0, a3, a4, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BB04F3B8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B9C08)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B9C08);
  }
}

uint64_t sub_1BB04F420(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB6534E8(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB04F428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for G_V2.Layout;
    v8[1] = &type metadata for G_V2.Layout.Attributes;
    v8[2] = sub_1BB04F0E8();
    v8[3] = sub_1BB04F12C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB04F4A4(uint64_t a1)
{
  sub_1BA62D7D8(a1, &qword_1ED39C2E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
}

uint64_t sub_1BB04F4B8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB04F4C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB168048(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t destroy for G_V2.Layout.Attributes()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for G_V2.Layout.Attributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for G_V2.Layout.Attributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for G_V2.Layout.Attributes(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for G_V2.Layout.Attributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for G_V2.Layout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for G_V2.Layout.Attributes()
{
  return &type metadata for G_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for G_V2.Layout()
{
  return &type metadata for G_V2.Layout;
}

unint64_t sub_1BB04F6B0()
{
  unint64_t result;

  result = qword_1EF2B9C28;
  if (!qword_1EF2B9C28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4F48, &type metadata for G_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C28);
  }
  return result;
}

unint64_t sub_1BB04F6F8()
{
  unint64_t result;

  result = qword_1EF2B9C30;
  if (!qword_1EF2B9C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4F20, &type metadata for G_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C30);
  }
  return result;
}

unint64_t sub_1BB04F740()
{
  unint64_t result;

  result = qword_1EF2B9C38;
  if (!qword_1EF2B9C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4EF8, &type metadata for G_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C38);
  }
  return result;
}

unint64_t sub_1BB04F788()
{
  unint64_t result;

  result = qword_1EF2B9C40;
  if (!qword_1EF2B9C40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4F70, &type metadata for G_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C40);
  }
  return result;
}

uint64_t sub_1BB04F7CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_1BA4CDF6C(0, &qword_1EF2B9C48, (uint64_t (*)(void))sub_1BB04FAB8, (uint64_t)&type metadata for G_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v19 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB04FAB8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  type metadata accessor for CGRect(0);
  v24 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  v10 = v19;
  sub_1BB8740D4();
  v11 = v20;
  v12 = v21;
  v13 = v22;
  v14 = v23;
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v24 = 1;
  sub_1BA916364(&qword_1ED39D9D0, (uint64_t (*)(void))sub_1BA916320, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v15 = v20;
  sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v24 = 2;
  sub_1BB04FAFC((unint64_t *)&unk_1ED39DA20, (unint64_t *)&unk_1ED3B9910, MEMORY[0x1E0C9B9E0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v16 = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  return result;
}

unint64_t sub_1BB04FAB8()
{
  unint64_t result;

  result = qword_1EF2B9C50;
  if (!qword_1EF2B9C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E50CC, &type metadata for G_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C50);
  }
  return result;
}

uint64_t sub_1BB04FAFC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for G_V2.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB04FBE0 + 4 * byte_1BB8E4DC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB04FC14 + 4 * byte_1BB8E4DC0[v4]))();
}

uint64_t sub_1BB04FC14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04FC1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB04FC24);
  return result;
}

uint64_t sub_1BB04FC30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB04FC38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB04FC3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB04FC44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for G_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for G_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB04FC64()
{
  unint64_t result;

  result = qword_1EF2B9C68;
  if (!qword_1EF2B9C68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E50A4, &type metadata for G_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C68);
  }
  return result;
}

unint64_t sub_1BB04FCAC()
{
  unint64_t result;

  result = qword_1EF2B9C70;
  if (!qword_1EF2B9C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E5014, &type metadata for G_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C70);
  }
  return result;
}

unint64_t sub_1BB04FCF4()
{
  unint64_t result;

  result = qword_1EF2B9C78;
  if (!qword_1EF2B9C78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E503C, &type metadata for G_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C78);
  }
  return result;
}

uint64_t sub_1BB04FD38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BB963010 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F74617261706573 && a2 == 0xEF73656D61724672)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BB04FEA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for WebEmbedDataVisualization();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6CAB4C(0);
  v6 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedWebEmbed();
  sub_1BA4C2DD8(a1 + *(int *)(v10 + 52), (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) != 1)
  {
    sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v12 = *v5;
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      __asm { BR              X10 }
    }
    v6 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  sub_1BA4A2E80((uint64_t)v9, v6);
  type metadata accessor for FormatAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FormatWebEmbedBinding.Action.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatWebEmbedBinding.Action.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatWebEmbedBinding.Action.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB050258()
{
  unint64_t result;

  result = qword_1EF2B9C80;
  if (!qword_1EF2B9C80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Action, &type metadata for FormatWebEmbedBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C80);
  }
  return result;
}

unint64_t sub_1BB05029C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0502C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0502C0()
{
  unint64_t result;

  result = qword_1EF2B9C88;
  if (!qword_1EF2B9C88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Action, &type metadata for FormatWebEmbedBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C88);
  }
  return result;
}

unint64_t sub_1BB050304(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82A960();
  a1[2] = sub_1BAEF52AC();
  result = sub_1BB050258();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB050338(_QWORD *a1)
{
  return FormatWebEmbedBinding.Action.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Action()
{
  return &type metadata for FormatWebEmbedBinding.Action;
}

uint64_t FormatFileKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB05038C
                                                            + 4 * asc_1BB8E5240[*v0]))(0x746E65746E6F63, 0xE700000000000000);
}

uint64_t sub_1BB05038C()
{
  return 0x70756F7267;
}

uint64_t sub_1BB0503A0()
{
  return 1835365481;
}

uint64_t sub_1BB0503B0()
{
  return 0x6567616B636170;
}

uint64_t sub_1BB0503C4()
{
  return 0x4C6567616B636170;
}

uint64_t sub_1BB0503E4()
{
  return 0x74657070696E73;
}

uint64_t sub_1BB0503F8()
{
  return 0x656C797473;
}

uint64_t sub_1BB05040C()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BB050430()
{
  return 1701869940;
}

uint64_t sub_1BB050440()
{
  return 0x697461726F636564;
}

uint64_t sub_1BB05045C()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_1BB05047C()
{
  return 0x676E69646E6962;
}

NewsFeed::FormatFileKind_optional __swiftcall FormatFileKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFileKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static FormatFileKind.allCases.getter()
{
  return &unk_1E7250A78;
}

uint64_t sub_1BB0504F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB8028DC(*a1, *a2);
}

unint64_t sub_1BB050504()
{
  unint64_t result;

  result = qword_1EF2B9C90;
  if (!qword_1EF2B9C90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileKind, &type metadata for FormatFileKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C90);
  }
  return result;
}

uint64_t sub_1BB050548()
{
  sub_1BB8745CC();
  FormatFileKind.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0505AC()
{
  FormatFileKind.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB0505FC()
{
  sub_1BB8745CC();
  FormatFileKind.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatFileKind_optional sub_1BB05065C(Swift::String *a1)
{
  return FormatFileKind.init(rawValue:)(*a1);
}

uint64_t sub_1BB050668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatFileKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BB05068C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB0506B8();
  result = sub_1BB0506FC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB0506B8()
{
  unint64_t result;

  result = qword_1EF2B9C98;
  if (!qword_1EF2B9C98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileKind, &type metadata for FormatFileKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B9C98);
  }
  return result;
}

unint64_t sub_1BB0506FC()
{
  unint64_t result;

  result = qword_1ED3B4030;
  if (!qword_1ED3B4030)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileKind, &type metadata for FormatFileKind);
    atomic_store(result, (unint64_t *)&qword_1ED3B4030);
  }
  return result;
}

unint64_t sub_1BB050744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B9CA0;
  if (!qword_1EF2B9CA0)
  {
    sub_1BB05078C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B9CA0);
  }
  return result;
}

void sub_1BB05078C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B9CA8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B9CA8);
  }
}

void sub_1BB0507E0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250A78;
}

unint64_t sub_1BB0507F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB050814();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB050814()
{
  unint64_t result;

  result = qword_1EF2B9CB0;
  if (!qword_1EF2B9CB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileKind, &type metadata for FormatFileKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B9CB0);
  }
  return result;
}

unint64_t sub_1BB050858(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8FEC8();
  a1[2] = sub_1BAEF38FC();
  result = sub_1BB050504();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB05088C()
{
  sub_1BB0506FC();
  return sub_1BB872D60();
}

uint64_t sub_1BB0508E8(_QWORD *a1)
{
  return FormatFileKind.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatFileKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB050948 + 4 * byte_1BB8E5251[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB05097C + 4 * byte_1BB8E524C[v4]))();
}

uint64_t sub_1BB05097C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB050984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB05098CLL);
  return result;
}

uint64_t sub_1BB050998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0509A0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB0509A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0509AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatFileKind()
{
  return &type metadata for FormatFileKind;
}

uint64_t sub_1BB0509C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;

  v61 = a4;
  v62 = a5;
  v65 = a6;
  v66 = a1;
  v9 = *v6;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A3E60, (void (*)(uint64_t))MEMORY[0x1E0DB8408]);
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v58 - v11;
  v12 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v12);
  v59 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v9;
  v15 = *(_QWORD *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v19 = (char *)&v58 - v18;
  v20 = *(_OWORD *)(a3 + 80);
  v21 = *(_OWORD *)(a3 + 112);
  v78 = *(_OWORD *)(a3 + 96);
  v79 = v21;
  v22 = *(_OWORD *)(a3 + 16);
  v23 = *(_OWORD *)(a3 + 48);
  v74 = *(_OWORD *)(a3 + 32);
  v75 = v23;
  v24 = *(_OWORD *)(a3 + 48);
  v25 = *(_OWORD *)(a3 + 80);
  v76 = *(_OWORD *)(a3 + 64);
  v77 = v25;
  v26 = *(_OWORD *)(a3 + 16);
  v72 = *(_OWORD *)a3;
  v73 = v26;
  v27 = *(_OWORD *)(a3 + 112);
  v87 = v78;
  v88 = v27;
  v83 = v74;
  v84 = v24;
  v85 = v76;
  v86 = v20;
  v28 = *(_QWORD *)(a3 + 136);
  v80 = *(_QWORD *)(a3 + 128);
  v29 = *(_QWORD *)(a3 + 128);
  v81 = v72;
  v82 = v22;
  v89 = v29;
  v90 = v28;
  v63 = v28;
  v64 = a2;
  type metadata accessor for FeedPluginFactoryContext(0, v15, v14, v30);
  v31 = FeedPluginFactoryContext.plugin(identifier:)();
  if (v31)
  {
    v32 = v31;
    v33 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v66, AssociatedTypeWitness);
    sub_1BA4D9CE8(0, &qword_1ED3AC110);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BA4CECCC(&v81, (uint64_t)v68);
      v34 = (void *)sub_1BB871404();
      type metadata accessor for FormatViewController();
      v35 = swift_dynamicCastClass();
      if (v35)
      {
        v36 = v35;
        v87 = v78;
        v88 = v79;
        v83 = v74;
        v84 = v75;
        v85 = v76;
        v86 = v77;
        v81 = v72;
        v82 = v73;
        v89 = v80;
        v90 = v63;
        v37 = v59;
        sub_1BB050EFC(v33, v64, (uint64_t)&v81, v59);
        v38 = v69;
        v39 = v70;
        __swift_project_boxed_opaque_existential_1(v68, v69);
        v40 = (uint64_t)v58;
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
        v41 = *(_QWORD *)(*(_QWORD *)(v36 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 40))(v37, v40, ObjectType, v41);

        sub_1BA502AD0(v40, (unint64_t *)&qword_1ED3A3E60, (void (*)(uint64_t))MEMORY[0x1E0DB8408]);
        sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      }
      else
      {

      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    }
    else
    {
      *(_QWORD *)&v83 = 0;
      v81 = 0u;
      v82 = 0u;
      sub_1BA4A2E80((uint64_t)&v81, (uint64_t (*)(_QWORD))sub_1BB0514FC);
    }
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v32;
  }
  else
  {
    v44 = v66;
    v43 = v67;
    swift_beginAccess();
    v45 = *(_QWORD *)(v43 + 72);
    v68[0] = v61;
    v68[1] = v62;
    v46 = type metadata accessor for FormatFeedPluginFactory.FactoryWrapper(0, v15, v14, *(_QWORD *)(v60 + 96));
    swift_bridgeObjectRetain();
    MEMORY[0x1BCCE3148](&v71, v68, v45, MEMORY[0x1E0DEA968], v46, MEMORY[0x1E0DEA978]);
    swift_bridgeObjectRelease();
    v47 = v71;
    if (v71)
    {
      swift_endAccess();
      v48 = swift_allocObject();
      v87 = v78;
      v88 = v79;
      v83 = v74;
      v84 = v75;
      v85 = v76;
      v86 = v77;
      v81 = v72;
      v82 = v73;
      v89 = v80;
      v90 = v63;
      v49 = (*(uint64_t (**)(uint64_t, _BYTE *, __int128 *))(v47 + 16))(v44, v64, &v81);
      swift_release();
      *(_QWORD *)(v48 + 16) = v49;
      result = v48 | 0x4000000000000000;
    }
    else
    {
      v51 = v43;
      swift_endAccess();
      v87 = v78;
      v88 = v79;
      v83 = v74;
      v84 = v75;
      v85 = v76;
      v86 = v77;
      v81 = v72;
      v82 = v73;
      v52 = v63;
      v89 = v80;
      v90 = v63;
      v53 = v59;
      sub_1BB050EFC(v44, v64, (uint64_t)&v81, v59);
      v54 = *(_QWORD *)(v51 + 56);
      v55 = swift_getObjectType();
      v56 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 64))(v53, v52, MEMORY[0x1E0DBA9F0], v55, v54);
      sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = v56;
      result = v57 | 0x4000000000000000;
    }
  }
  *v65 = result;
  return result;
}

uint64_t sub_1BB050EFC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  _BYTE v31[4];
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  id v36;
  int v37;
  id v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t AssociatedConformanceWitness;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _OWORD v49[2];
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  uint64_t v63;
  uint64_t v64;

  v44 = a2;
  v42 = a1;
  v47 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v46 = AssociatedTypeWitness;
  v41 = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v48 = &v31[-v8];
  v9 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v9);
  v37 = *(unsigned __int8 *)(a3 + 33);
  v36 = *(id *)(a3 + 40);
  v11 = (uint64_t)v36;
  v34 = *(unsigned __int8 *)(a3 + 48);
  v12 = *(_BYTE *)(a3 + 49);
  v13 = *(_BYTE *)(a3 + 50);
  v33 = *(unsigned __int8 *)(a3 + 51);
  v15 = *(_QWORD *)(a3 + 64);
  v35 = *(_QWORD *)(a3 + 56);
  v14 = v35;
  v16 = *(_QWORD *)(a3 + 72);
  v17 = *(_QWORD *)(a3 + 80);
  v32 = *(unsigned __int8 *)(a3 + 88);
  v19 = *(_QWORD *)(a3 + 104);
  v38 = *(id *)(a3 + 96);
  v18 = v38;
  v20 = *(_QWORD *)(a3 + 112);
  v21 = v44;
  v44 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA5E34EC((uint64_t)v21, (uint64_t)v44);
  v52 = v11;
  v53 = v34;
  v54 = v12;
  v55 = v13;
  v56 = v33;
  v57 = v14;
  v58 = v15;
  v59 = v16;
  v60 = v17;
  v61 = v32;
  v62 = v18;
  v63 = v19;
  v64 = v20;
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v39 + 16);
  v23 = v42;
  v24 = v41;
  v22(v48, v42, v41);
  v25 = *(void **)(v43 + 64);
  v51 = v37;
  v22(v40, v23, v24);
  v26 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v16, v17);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3A1418);
  v27 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v25;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v50 = 0;
    memset(v49, 0, sizeof(v49));
  }
  v29 = swift_getAssociatedConformanceWitness();
  return FormatPluginData.init<A>(formatContent:feedContext:feedGroup:feedDescriptor:feedKind:dataProvider:)((uint64_t)v44, &v52, (uint64_t)v48, v25, &v51, (uint64_t)v49, v24, *(_QWORD *)(v29 + 8), v47);
}

uint64_t sub_1BB051248()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  sub_1BA8FD860(v0 + 32);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB051284()
{
  sub_1BB051248();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0512A4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_1BA562848(a1, a2, a3);
}

uint64_t sub_1BB0512C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  result = MEMORY[0x1BCCE5D40](v2 + 16);
  if (result)
  {
    v6 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB051340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;

  result = MEMORY[0x1BCCE5D40](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, ObjectType, v8);
    swift_unknownObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1BB0513BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;

  result = MEMORY[0x1BCCE5D40](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB05144C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[9];

  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_OWORD **)(v4 + 32);
  v9 = v8[7];
  v14[6] = v8[6];
  v14[7] = v9;
  v14[8] = v8[8];
  v10 = v8[3];
  v14[2] = v8[2];
  v14[3] = v10;
  v11 = v8[5];
  v14[4] = v8[4];
  v14[5] = v11;
  v12 = v8[1];
  v14[0] = *v8;
  v14[1] = v12;
  return sub_1BB0509C8(v7, a1, (uint64_t)v14, a2, a3, a4);
}

uint64_t sub_1BB0514B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0514D8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB0514FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B9CD8)
  {
    sub_1BA4D9CE8(255, &qword_1ED3AC110);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B9CD8);
  }
}

uint64_t sub_1BB051560()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BB0515B8(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[9];

  v4 = *(_QWORD *)(v3 + 32);
  v5 = a3[7];
  v10[6] = a3[6];
  v10[7] = v5;
  v10[8] = a3[8];
  v6 = a3[3];
  v10[2] = a3[2];
  v10[3] = v6;
  v7 = a3[5];
  v10[4] = a3[4];
  v10[5] = v7;
  v8 = a3[1];
  v10[0] = *a3;
  v10[1] = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *))(v4 + 32))(a1, a2, v10);
}

BOOL static FormatCodingEmptySetStrategy.shouldEncode(wrappedValue:)()
{
  return (sub_1BB873078() & 1) == 0;
}

uint64_t static FormatCodingEmptySetStrategy.decode(rawValue:)()
{
  return sub_1BB05189C();
}

BOOL sub_1BB05165C()
{
  return static FormatCodingEmptySetStrategy.shouldEncode(wrappedValue:)();
}

uint64_t sub_1BB051670@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = static FormatCodingEmptySetStrategy.encode(wrappedValue:)(*a1, a2[2], a2[3], a3, a4, a2[6]);
  *a5 = result;
  return result;
}

uint64_t sub_1BB0516A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BB0517A8(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))static FormatCodingEmptySetStrategy.decode(rawValue:), a4);
}

uint64_t static FormatCodingNotEmptySetStrategy.decode(rawValue:)()
{
  char v0;
  _QWORD *v1;

  sub_1BB86DD14();
  sub_1BB86DD08();
  v0 = sub_1BB873078();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    return sub_1BB86DD08();
  sub_1BA98D1F0();
  swift_allocError();
  *v1 = 1;
  v1[1] = 0;
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0xF000000000000000;
  return swift_willThrow();
}

uint64_t sub_1BB05178C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BB0517A8(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))static FormatCodingNotEmptySetStrategy.decode(rawValue:), a4);
}

uint64_t sub_1BB0517A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD)@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = a4(a1, a2[2], a3, a2[4], a2[5], a2[6]);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t static FormatCodingColumnSetStrategy.decode(rawValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1BA4987FC(a1);
  if (!v1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BB05180C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA4987FC(a1);
  if (!v2)
  {
    *a2 = result;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static FormatCodingSafeishSetStrategy.decode(rawValue:)()
{
  return sub_1BB05189C();
}

uint64_t sub_1BB051860@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BB0517A8(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))static FormatCodingSafeishSetStrategy.decode(rawValue:), a4);
}

uint64_t static FormatCodingIgnoreSetStrategy.shouldEncode(wrappedValue:)()
{
  return 0;
}

uint64_t static FormatCodingIgnoreSetStrategy.decode(rawValue:)()
{
  return sub_1BB05189C();
}

uint64_t sub_1BB05189C()
{
  sub_1BB86DD14();
  return sub_1BB86DD08();
}

uint64_t _s8NewsFeed28FormatCodingEmptySetStrategyV6encode12wrappedValueSayxGShyxG_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BB87309C();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D0], v0);
  sub_1BB872EF8();
  v1 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
  v2 = sub_1BB872CA0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BB0519A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BB0517A8(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))static FormatCodingIgnoreSetStrategy.decode(rawValue:), a4);
}

uint64_t sub_1BB0519C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v37 - v9;
  v37 = v10;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1BCCE37B4](v12))
  {
    sub_1BB873C84();
    v15 = sub_1BB873C78();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1BCCE37F0](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1BB872E80();
    sub_1BB872E38();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1BB873D08();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1BB87285C();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v7, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1BB872958();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v7, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BB051CC8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptySetStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BB051CF4()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB051D04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 40);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], a1, &v3);
}

uint64_t sub_1BB051D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 32);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D8], a1, &v3);
}

uint64_t sub_1BB051D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 40);
  return MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3B8], a1, &v3);
}

uint64_t sub_1BB051DAC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptySetStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB051DD8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingColumnSetStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BB051E04()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB051E14(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingSafeishSetStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void type metadata accessor for FormatCodingEmptySetStrategy()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FormatCodingNotEmptySetStrategy()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FormatCodingColumnSetStrategy()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FormatCodingSafeishSetStrategy()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t FeedItemVisibility.description.getter()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  if (*v0 == 2)
    return 0x656C6269736976;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v3 + 32) = 0x6E6564646968;
  *(_QWORD *)(v3 + 40) = 0xE600000000000000;
  sub_1BA9057BC(v1);
  *(_QWORD *)(v3 + 48) = FeedItemHiddenReason.description.getter();
  *(_QWORD *)(v3 + 56) = v4;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v2 = sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB009A80(v1);
  return v2;
}

uint64_t FeedItemHiddenReason.description.getter()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  if (!*v0)
    return 0xD000000000000011;
  if (v1 == 1)
    return 0x646574656C6564;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v3 + 32) = 0x64656B636F6C62;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = v7;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v2 = sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB009A90(v1);
  return v2;
}

uint64_t sub_1BB0520E0()
{
  void **v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *v0;
  if (*v0 && v1 != (void *)1)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v7 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    sub_1BA7AA598();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
    v10 = objc_msgSend(v1, sel_name, 0x80000001BB977520);
    v11 = sub_1BB8729A0();
    v13 = v12;

    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    v14 = sub_1BB87297C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB009A90((unint64_t)v1);
    return v14;
  }
  else
  {
    type metadata accessor for Localized();
    v2 = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v2);
    v4 = sub_1BB86C340();

    return v4;
  }
}

uint64_t sub_1BB052384()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  if (*v0 == 1)
    return 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v1 = sub_1BB86C340();

  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedItemVisibility(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_unknownObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for FeedItemVisibility(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t *assignWithCopy for FeedItemVisibility(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  else
    v3 = *a1;
  v4 = v3 + 1;
  v5 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = *a2;
  v7 = v6 + 1;
  if (v4 > 2)
  {
    if (v7 <= 2 && (_DWORD)v6 == -1)
      v5 = swift_unknownObjectRetain();
    goto LABEL_17;
  }
  if (v7 > 2)
  {
    if (!v4)
    {
      swift_unknownObjectRelease();
      v5 = *a2;
    }
    goto LABEL_17;
  }
  if (v4)
  {
    if ((_DWORD)v6 == -1)
    {
      *a1 = v5;
      swift_unknownObjectRetain();
      return a1;
    }
LABEL_17:
    *a1 = v5;
    return a1;
  }
  if ((_DWORD)v6 == -1)
  {
    *a1 = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    *a1 = *a2;
  }
  return a1;
}

unint64_t *assignWithTake for FeedItemVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = v3;
  v6 = v5 + 1;
  v7 = *a2;
  if (*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (v6 > 2)
    goto LABEL_13;
  v8 = v4 + 1;
  if (v8 > 2)
  {
    if (!v6)
      goto LABEL_12;
LABEL_13:
    *a1 = v7;
    return a1;
  }
  if (v6)
    goto LABEL_13;
  if (v8)
  {
LABEL_12:
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  *a1 = v7;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemVisibility(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 < 3)
    v5 = 0;
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1BB0526D4(uint64_t *a1)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 + 1;
  v3 = v1 - 1;
  if (v2 >= 3)
    return v3;
  else
    return 0;
}

_QWORD *sub_1BB0526F8(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFD)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 2147483646;
  }
  else if (a2)
  {
    *result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemVisibility()
{
  return &type metadata for FeedItemVisibility;
}

unint64_t *assignWithCopy for FeedItemHiddenReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_unknownObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_unknownObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for FeedItemHiddenReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v3 < 0xFFFFFFFF)
  {
    swift_unknownObjectRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemHiddenReason()
{
  return &type metadata for FeedItemHiddenReason;
}

uint64_t FormatColorComponent.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB052870 + 4 * byte_1BB8E5860[*v0]))(6649192, 0xE300000000000000);
}

uint64_t sub_1BB052870()
{
  return 0x6974617275746173;
}

uint64_t sub_1BB05288C()
{
  return 0x656E746867697262;
}

uint64_t sub_1BB0528AC()
{
  return 0x6168706C61;
}

uint64_t sub_1BB0528C0()
{
  return 6579570;
}

uint64_t sub_1BB0528CC()
{
  return 0x6E65657267;
}

uint64_t sub_1BB0528E0()
{
  return 1702194274;
}

unint64_t sub_1BB0528F4()
{
  unint64_t result;

  result = qword_1EF2B9F40;
  if (!qword_1EF2B9F40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponent, &type metadata for FormatColorComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B9F40);
  }
  return result;
}

void sub_1BB052938()
{
  char *v0;

  sub_1BAB09EF4(0, *v0);
}

void sub_1BB052944()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB052978()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB052A0C(uint64_t a1)
{
  char *v1;

  sub_1BAB09EF4(a1, *v1);
}

uint64_t sub_1BB052A14()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB052A3C + 4 * byte_1BB8E5875[*v0]))();
}

void sub_1BB052A3C(_QWORD *a1@<X8>)
{
  *a1 = 0x6974617275746173;
  a1[1] = 0xEA00000000006E6FLL;
}

void sub_1BB052A5C(_QWORD *a1@<X8>)
{
  *a1 = 0x656E746867697262;
  a1[1] = 0xEA00000000007373;
}

void sub_1BB052A80(_QWORD *a1@<X8>)
{
  *a1 = 0x6168706C61;
  a1[1] = 0xE500000000000000;
}

void sub_1BB052A98(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 6579570;
  a1[1] = v1;
}

void sub_1BB052AA8(_QWORD *a1@<X8>)
{
  *a1 = 0x6E65657267;
  a1[1] = 0xE500000000000000;
}

void sub_1BB052AC0(_QWORD *a1@<X8>)
{
  *a1 = 1702194274;
  a1[1] = 0xE400000000000000;
}

unint64_t sub_1BB052AD4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB052B00();
  result = sub_1BA55177C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB052B00()
{
  unint64_t result;

  result = qword_1EF2B9F48;
  if (!qword_1EF2B9F48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponent, &type metadata for FormatColorComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B9F48);
  }
  return result;
}

void sub_1BB052B44(char *a1)
{
  sub_1BB7ED8CC(*a1);
}

unint64_t sub_1BB052B50(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB052B74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB052B74()
{
  unint64_t result;

  result = qword_1EF2B9F50;
  if (!qword_1EF2B9F50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponent, &type metadata for FormatColorComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B9F50);
  }
  return result;
}

unint64_t sub_1BB052BB8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA609508();
  a1[2] = sub_1BA60F76C();
  result = sub_1BB0528F4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatColorComponent()
{
  return &type metadata for FormatColorComponent;
}

uint64_t sub_1BB052C18()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1BA6E43EC((uint64_t)&unk_1E724C010);
  result = swift_arrayDestroy();
  qword_1EF2B9F58 = v0;
  return result;
}

uint64_t type metadata accessor for FormatDOMElement()
{
  return objc_opt_self();
}

uint64_t sub_1BB052C80(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB052E34(*a1, *a2);
}

uint64_t sub_1BB052C8C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1BAF2440C();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v2, 0);
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
      {
        v6 = *(_QWORD *)(v4 + 16);
        v8 = *(_QWORD *)(v4 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        v5 = swift_retain();
        v6 = sub_1BB052C8C(v5);
        v8 = v7;
        swift_release();
      }
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      if (v10 >= v9 >> 1)
        sub_1BA7447E8(v9 > 1, v10 + 1, 1);
      ++v3;
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v12);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1BB052E14()
{
  return sub_1BB052C8C();
}

uint64_t sub_1BB052E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (sub_1BAF24630(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)))
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(a1 + 24);
    swift_beginAccess();
    v5 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1BA8802C0(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1BB052EE0(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v2 << 6);
      goto LABEL_22;
    }
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v7)
      goto LABEL_30;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      v2 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_30;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (!v12)
      {
        v2 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_30;
        v12 = *(_QWORD *)(v3 + 8 * v2);
        if (!v12)
        {
          v2 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_30;
          v12 = *(_QWORD *)(v3 + 8 * v2);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_22:
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v10);
    swift_retain();
    FeedItemLayoutAttributes.frame.getter();
    if (v16 == 0.0 && v15 == 0.0)
    {
      result = swift_release();
    }
    else
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      v20 = v8;
      if ((result & 1) == 0)
        result = sub_1BA6A4CDC(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v17 = v8;
      v18 = *(_QWORD *)(v8 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v18 >= v19 >> 1)
      {
        result = sub_1BA6A4CDC(v19 > 1, v18 + 1, 1);
        v17 = v20;
      }
      *(_QWORD *)(v17 + 16) = v18 + 1;
      *(_QWORD *)(v17 + 8 * v18 + 32) = v14;
      v8 = v17;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_30:
    swift_release();
    return v8;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v2 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v7)
      goto LABEL_30;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1BB0530F0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  id *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  unsigned __int8 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  id v66;
  uint64_t v68;
  char *v69;
  uint64_t ObjectType;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  id *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int128 v82;
  _QWORD *v83[35];
  unsigned __int8 v84;

  v3 = v2;
  v71 = a1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v5);
  v76 = (uint64_t *)((char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v81);
  v75 = (id *)((char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v79 = (id *)((char *)&v68 - v9);
  v77 = 0;
  v74 = type metadata accessor for DebugFormatTestCaseResult(0);
  v72 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v80 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v78 = (uint64_t)&v68 - v12;
  v13 = *(_QWORD *)(a2 + 8);
  v73 = *(_QWORD *)a2;
  v14 = *(_BYTE *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_BYTE *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_tableView;
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v20 = v3;
  *(_QWORD *)&v3[v18] = objc_msgSend(v19, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_editor] = v71;
  v69 = v20;
  v21 = &v20[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result];
  *(_QWORD *)v21 = v73;
  *((_QWORD *)v21 + 1) = v13;
  v21[16] = v14;
  *((_QWORD *)v21 + 3) = v15;
  v21[32] = v16;
  *((_QWORD *)v21 + 5) = v17;
  v22 = *(_QWORD *)(v13 + 16);
  if (!v22)
  {
    swift_retain();
    v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_30;
  }
  v73 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v23 = v13 + v73;
  v24 = *(_QWORD *)(v72 + 72);
  swift_retain();
  v68 = v13;
  swift_bridgeObjectRetain();
  v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v27 = v78;
  v26 = v79;
  v72 = v24;
  do
  {
    sub_1BA4C2DD8(v23, v27, type metadata accessor for DebugFormatTestCaseResult);
    v29 = v27 + *(int *)(v74 + 24);
    sub_1BA4C2DD8(v29, (uint64_t)v26, type metadata accessor for DebugFormatTestCaseResult.Result);
    if (swift_getEnumCaseMultiPayload() - 2 < 2)
    {

      memcpy(v83, v26, sizeof(v83));
      __asm { BR              X9 }
    }
    v30 = v76;
    sub_1BA5193C4((uint64_t)v26, (uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
    v31 = v30[3];
    v32 = v30[4];
    __swift_project_boxed_opaque_existential_1(v30, v31);
    sub_1BA7C0D48(v31, v32);
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
    if (v25[2])
    {
      v33 = sub_1BA7C25B0(v84);
      v34 = MEMORY[0x1E0DEE9D8];
      if ((v35 & 1) != 0)
      {
        v34 = *(_QWORD *)(v25[7] + 8 * v33);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v34 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BA4C2DD8(v27, v80, type metadata accessor for DebugFormatTestCaseResult);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v34 = sub_1BB392490(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
    v37 = *(_QWORD *)(v34 + 16);
    v36 = *(_QWORD *)(v34 + 24);
    if (v37 >= v36 >> 1)
      v34 = sub_1BB392490(v36 > 1, v37 + 1, 1, v34);
    *(_QWORD *)(v34 + 16) = v37 + 1;
    sub_1BA5193C4(v80, v34 + v73 + v37 * v24, type metadata accessor for DebugFormatTestCaseResult);
    v38 = v75;
    sub_1BA4C2DD8(v29, (uint64_t)v75, type metadata accessor for DebugFormatTestCaseResult.Result);
    if (swift_getEnumCaseMultiPayload() - 2 < 2)
    {

      memcpy(v83, v38, sizeof(v83));
      __asm { BR              X9 }
    }
    v39 = v76;
    sub_1BA5193C4((uint64_t)v38, (uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
    v40 = v39[3];
    v41 = v39[4];
    __swift_project_boxed_opaque_existential_1(v39, v40);
    sub_1BA7C0D48(v40, v41);
    sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
    v42 = v84;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v83[0] = v25;
    v45 = sub_1BA7C25B0(v42);
    v46 = v25[2];
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      sub_1BB874560();
      __break(1u);
LABEL_44:
      swift_release();
      __break(1u);
      JUMPOUT(0x1BB05387CLL);
    }
    v49 = v44;
    if (v25[3] >= v48)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v25 = v83[0];
        if ((v44 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C908C();
        v25 = v83[0];
        if ((v49 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4B9E68(v48, isUniquelyReferenced_nonNull_native);
      v50 = sub_1BA7C25B0(v42);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_43;
      v45 = v50;
      v25 = v83[0];
      if ((v49 & 1) != 0)
      {
LABEL_3:
        v28 = v25[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v28 + 8 * v45) = v34;
        goto LABEL_4;
      }
    }
    v25[(v45 >> 6) + 8] |= 1 << v45;
    *(_BYTE *)(v25[6] + v45) = v42;
    *(_QWORD *)(v25[7] + 8 * v45) = v34;
    v52 = v25[2];
    v53 = __OFADD__(v52, 1);
    v54 = v52 + 1;
    if (v53)
      goto LABEL_42;
    v25[2] = v54;
LABEL_4:
    swift_bridgeObjectRelease();
    v27 = v78;
    sub_1BA4A2E80(v78, type metadata accessor for DebugFormatTestCaseResult);
    v24 = v72;
    v23 += v72;
    --v22;
    v26 = v79;
  }
  while (v22);
  swift_bridgeObjectRelease();
LABEL_30:
  v55 = 0;
  v56 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (v25[2])
    {
      v58 = byte_1E7270598[v55 + 32];
      v59 = sub_1BA7C25B0(v58);
      if ((v60 & 1) != 0)
      {
        v83[0] = *(_QWORD **)(v25[7] + 8 * v59);
        swift_bridgeObjectRetain_n();
        v61 = v77;
        sub_1BB054F50(v83);
        v77 = v61;
        if (v61)
          goto LABEL_44;
        swift_bridgeObjectRelease();
        v62 = v83[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v56 = sub_1BB392770(0, v56[2] + 1, 1, v56);
        v64 = v56[2];
        v63 = v56[3];
        if (v64 >= v63 >> 1)
          v56 = sub_1BB392770((_QWORD *)(v63 > 1), v64 + 1, 1, v56);
        v56[2] = v64 + 1;
        v57 = &v56[2 * v64];
        *((_BYTE *)v57 + 32) = v58;
        v57[5] = v62;
      }
    }
    ++v55;
  }
  while (v55 != 4);
  v65 = v69;
  *(_QWORD *)&v69[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections] = v56;

  v82 = __PAIR128__(ObjectType, (unint64_t)v65);
  v66 = objc_msgSendSuper2((objc_super *)&v82, sel_initWithNibName_bundle_, 0, 0);
  swift_bridgeObjectRelease();
  swift_release();
  return v66;
}

void sub_1BB05394C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_tableView];
    objc_msgSend(v5, sel_setDataSource_, v1);
    objc_msgSend(v5, sel_setDelegate_, v1);
    objc_msgSend(v5, sel_setAlwaysBounceVertical_, 1);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setTableFooterView_, v6);

    type metadata accessor for SubtitleTableViewCell();
    sub_1BB873234();
    v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_addSubview_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatTestCaseMultiResultViewController()
{
  return objc_opt_self();
}

unint64_t sub_1BB053CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  char v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  char v48;
  id v49;
  _QWORD v50[2];
  __int128 v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v1 = v0;
  v2 = type metadata accessor for DebugFormatTestCaseResult(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections);
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (result >= *(_QWORD *)(v6 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v8 = *(_QWORD *)(v6 + 16 * result + 40);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (result >= *(_QWORD *)(v8 + 16))
  {
LABEL_35:
    __break(1u);
    return result;
  }
  v50[1] = v2;
  sub_1BA4C2DD8(v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * result, (uint64_t)v5, type metadata accessor for DebugFormatTestCaseResult);
  swift_bridgeObjectRelease();
  type metadata accessor for SubtitleTableViewCell();
  v9 = (void *)sub_1BB87321C();
  v10 = objc_msgSend(v9, sel_textLabel);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_setNumberOfLines_, 0);

  }
  v12 = objc_msgSend(v9, sel_textLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v13, sel_setFont_, v14);

  }
  v15 = objc_msgSend(v9, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_setNumberOfLines_, 0);

  }
  v17 = objc_msgSend(v9, sel_detailTextLabel);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v18, sel_setTextColor_, v19);

  }
  v20 = objc_msgSend(v9, sel_detailTextLabel);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
    objc_msgSend(v21, sel_setFont_, v22);

  }
  objc_msgSend(v9, sel_setAccessoryType_, 1);
  v23 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 16);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 24);
  v25 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 32);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result + 40);
  v51 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_result);
  v52 = v23;
  v53 = v24;
  v54 = v25;
  v55 = v26;
  v27 = sub_1BB7CA284((uint64_t)v5);
  v28 = objc_msgSend(v9, sel_textLabel);
  v29 = v28;
  if (v27)
  {
    if (v28)
    {
      v30 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
      objc_msgSend(v29, sel_setTextColor_, v30);

    }
    v31 = objc_msgSend(v9, sel_textLabel);
    if (!v31)
      goto LABEL_23;
    v29 = v31;
    v32 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E0DC1420]);
    objc_msgSend(v29, sel_setFont_, v32);
    goto LABEL_22;
  }
  if (v28)
  {
    v32 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v29, sel_setTextColor_, v32);
LABEL_22:

  }
LABEL_23:
  v33 = objc_msgSend(v9, sel_textLabel);
  if (v33)
  {
    v34 = v33;
    swift_bridgeObjectRetain();
    v35 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setText_, v35);

  }
  v36 = objc_msgSend(v9, sel_detailTextLabel);
  if (v36)
  {
    v37 = v36;
    sub_1BA9228E0();
    v38 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_setText_, v38);

  }
  v39 = objc_msgSend(v9, sel_imageView);
  if (v39)
  {
    v40 = v39;
    sub_1BA922EA4();
    sub_1BB55E8D0(v41);
    v43 = v42;
    v44 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
    v45 = objc_msgSend(v43, sel_imageWithConfiguration_, v44);

    objc_msgSend(v40, sel_setImage_, v45);
  }
  v46 = objc_msgSend(v9, sel_imageView);
  if (v46)
  {
    v47 = v46;
    sub_1BA922EA4();
    v49 = sub_1BB55EAC0(v48);
    objc_msgSend(v47, sel_setTintColor_, v49);

  }
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for DebugFormatTestCaseResult);
  return (unint64_t)v9;
}

unint64_t sub_1BB0543A0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  unint64_t result;
  uint64_t v19;
  unsigned int EnumCaseMultiPayload;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *v49;
  _BYTE *v50;
  _QWORD *v51;
  uint64_t v52;
  id v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  objc_class *v62;
  _BYTE *v63;
  _QWORD *v64;
  uint64_t v65;
  id v66;
  char *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  void *v72;
  void *v73;
  objc_super v74;
  objc_super v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v3 = v2;
  v6 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DebugFormatTestCaseResult(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)sub_1BB86CB8C();
  v73 = a1;
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v16, 1);

  v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections];
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >= *(_QWORD *)(v17 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v19 = *(_QWORD *)(v17 + 16 * result + 40);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result >= *(_QWORD *)(v19 + 16))
  {
LABEL_25:
    __break(1u);
    return result;
  }
  sub_1BA4C2DD8(v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * result, (uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8((uint64_t)&v15[*(int *)(v12 + 24)], (uint64_t)v8, type metadata accessor for DebugFormatTestCaseResult.Result);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    v72 = v3;
    if (EnumCaseMultiPayload == 2)
    {
      v23 = *((_QWORD *)v8 + 35);
      v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      v71 = xmmword_1BB87CE70;
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      v70 = inited + 32;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v24);
      sub_1BA8C88C8(0);
      v27 = *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80);
      v28 = (v27 + 32) & ~v27;
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v71;
      v30 = (_QWORD *)(v29 + v28);
      *(_QWORD *)&v77 = 0;
      *((_QWORD *)&v77 + 1) = 0xE000000000000000;
      *(_QWORD *)&v71 = v23;
      v76 = v23;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      sub_1BB873E34();
      v31 = HIBYTE(*((_QWORD *)&v77 + 1)) & 0xFLL;
      if ((*((_QWORD *)&v77 + 1) & 0x2000000000000000) == 0)
        v31 = v77 & 0xFFFFFFFFFFFFLL;
      if (v31)
      {
        *((_QWORD *)&v78 + 1) = MEMORY[0x1E0DEA968];
      }
      else
      {
        swift_bridgeObjectRelease();
        v77 = 0u;
        v78 = 0u;
      }
      sub_1BAAF40BC(0, 0xE000000000000000, (uint64_t)&v77, v30);
      v43 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v30, 0, 1, v43);
      sub_1BAF89090(0x72724520646E6942, 0xEA0000000000726FLL, 0, 0, v29, &v77);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(inited + 64) = &off_1E72D2F60;
      v44 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v44;
      *(_QWORD *)(v44 + 48) = v79;
      v45 = v78;
      *(_OWORD *)(v44 + 16) = v77;
      *(_OWORD *)(v44 + 32) = v45;
      v46 = sub_1BB6DF010(inited);
      swift_setDeallocating();
      sub_1BA89EA04(0);
      swift_arrayDestroy();
      v47 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_editor];
      swift_retain();
      v48 = sub_1BB6DED58((uint64_t)v46);
      swift_bridgeObjectRelease();
      v49 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
      v50 = objc_allocWithZone(v49);
      v50[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
      v50[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
      *(_QWORD *)&v50[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
      *(_OWORD *)&v50[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
      v51 = &v50[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
      *v51 = 0;
      v51[1] = 0xE000000000000000;
      v52 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
      v53 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
      v54 = v50;
      *(_QWORD *)&v50[v52] = objc_msgSend(v53, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
      *(_QWORD *)&v54[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
      *(_QWORD *)&v54[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v47;
      *(_QWORD *)&v54[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v48;
      *(_QWORD *)&v54[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v48;
      *(_QWORD *)&v54[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
      swift_retain();
      swift_bridgeObjectRetain();

      v74.receiver = v54;
      v74.super_class = v49;
      v55 = objc_msgSendSuper2(&v74, sel_initWithNibName_bundle_, 0, 0);
    }
    else
    {
      v32 = v3;
      v33 = *((_QWORD *)v8 + 35);
      v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v35 = swift_initStackObject();
      v71 = xmmword_1BB87CE70;
      *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
      v70 = v35 + 32;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v34);
      sub_1BA8C88C8(0);
      v37 = *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
      v38 = (v37 + 32) & ~v37;
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v71;
      v40 = (_QWORD *)(v39 + v38);
      *(_QWORD *)&v77 = 0;
      *((_QWORD *)&v77 + 1) = 0xE000000000000000;
      *(_QWORD *)&v71 = v33;
      v76 = v33;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      sub_1BB873E34();
      v41 = HIBYTE(*((_QWORD *)&v77 + 1)) & 0xFLL;
      if ((*((_QWORD *)&v77 + 1) & 0x2000000000000000) == 0)
        v41 = v77 & 0xFFFFFFFFFFFFLL;
      if (v41)
      {
        *((_QWORD *)&v78 + 1) = MEMORY[0x1E0DEA968];
      }
      else
      {
        swift_bridgeObjectRelease();
        v77 = 0u;
        v78 = 0u;
      }
      v42 = v32;
      sub_1BAAF40BC(0, 0xE000000000000000, (uint64_t)&v77, v40);
      v56 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v40, 0, 1, v56);
      sub_1BAF89090(0x2064696C61766E49, 0xEE0074756F79614CLL, 0, 0, v39, &v77);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v35 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v35 + 64) = &off_1E72D2F60;
      v57 = swift_allocObject();
      *(_QWORD *)(v35 + 32) = v57;
      *(_QWORD *)(v57 + 48) = v79;
      v58 = v78;
      *(_OWORD *)(v57 + 16) = v77;
      *(_OWORD *)(v57 + 32) = v58;
      v59 = sub_1BB6DF010(v35);
      swift_setDeallocating();
      sub_1BA89EA04(0);
      swift_arrayDestroy();
      v60 = *(_QWORD *)&v42[OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_editor];
      swift_retain();
      v61 = sub_1BB6DED58((uint64_t)v59);
      swift_bridgeObjectRelease();
      v62 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
      v63 = objc_allocWithZone(v62);
      v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
      v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
      *(_QWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
      *(_OWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
      v64 = &v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
      *v64 = 0;
      v64[1] = 0xE000000000000000;
      v65 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
      v66 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
      v67 = v63;
      *(_QWORD *)&v63[v65] = objc_msgSend(v66, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
      *(_QWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
      *(_QWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v60;
      *(_QWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v61;
      *(_QWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v61;
      *(_QWORD *)&v67[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
      swift_retain();
      swift_bridgeObjectRetain();

      v75.receiver = v67;
      v75.super_class = v62;
      v55 = objc_msgSendSuper2(&v75, sel_initWithNibName_bundle_, 0, 0);
    }
    v68 = v55;
    objc_msgSend(v55, sel_setTitle_, 0);
    swift_release();
    sub_1BB054DA8(v68, v73, a2, v72);

    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
    return sub_1BA79E0D0((uint64_t)v8);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
    objc_allocWithZone((Class)type metadata accessor for DebugFormatTestCasePreviewNavigationController());
    v21 = swift_retain();
    v22 = sub_1BB82066C(v21, (uint64_t)v11);
    sub_1BB054DA8(v22, v73, a2, v3);

    return sub_1BA4A2E80((uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
  }
}

id sub_1BB054DA8(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;

  objc_msgSend(a1, sel_setModalPresentationStyle_, 7);
  v7 = objc_msgSend(a1, sel_popoverPresentationController);
  if (v7)
  {
    v8 = v7;
    v9 = (void *)sub_1BB86CB8C();
    v10 = objc_msgSend(a2, sel_cellForRowAtIndexPath_, v9);

    objc_msgSend(v8, sel_setSourceView_, v10);
  }
  v11 = objc_msgSend(a1, sel_popoverPresentationController);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_setPermittedArrowDirections_, 4);

  }
  return objc_msgSend(a4, sel_presentViewController_animated_completion_, a1, 1, 0);
}

void sub_1BB054F50(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for DebugFormatTestCaseResult(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BACAB9D8(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BB054FD0(v5);
  *a1 = v3;
}

void sub_1BB054FD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;

  v2 = v1;
  v128 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v128);
  v127 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v5);
  v134 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v133 = (char *)&v109 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v109 - v10;
  MEMORY[0x1E0C80A78](v12);
  v122 = (char *)&v109 - v13;
  MEMORY[0x1E0C80A78](v14);
  v115 = (char *)&v109 - v15;
  MEMORY[0x1E0C80A78](v16);
  v114 = (uint64_t)&v109 - v17;
  v136 = type metadata accessor for DebugFormatTestCaseResult(0);
  v124 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v119 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v131 = (char *)&v109 - v20;
  MEMORY[0x1E0C80A78](v21);
  v137 = (char *)&v109 - v22;
  MEMORY[0x1E0C80A78](v23);
  v132 = (char *)&v109 - v24;
  MEMORY[0x1E0C80A78](v25);
  v125 = (char *)&v109 - v26;
  MEMORY[0x1E0C80A78](v27);
  v121 = (char *)&v109 - v28;
  MEMORY[0x1E0C80A78](v29);
  v116 = (uint64_t)&v109 - v30;
  MEMORY[0x1E0C80A78](v31);
  v113 = (uint64_t)&v109 - v32;
  v33 = a1[1];
  v34 = sub_1BB8741F4();
  if (v34 >= v33)
  {
    if (v33 < 0)
      goto LABEL_101;
    if (v33)
      sub_1BB05628C(0, v33, 1, a1);
    return;
  }
  if (v33 >= 0)
    v35 = v33;
  else
    v35 = v33 + 1;
  if (v33 < -1)
    goto LABEL_104;
  v112 = v11;
  v111 = v34;
  if (v33 >= 2)
  {
    v130 = v1;
    v36 = v35 >> 1;
    v37 = sub_1BB872E74();
    *(_QWORD *)(v37 + 16) = v36;
    v38 = *(unsigned __int8 *)(v124 + 80);
    v110 = v37;
    v123 = v37 + ((v38 + 32) & ~v38);
    v39 = v33;
    goto LABEL_13;
  }
  v40 = MEMORY[0x1E0DEE9D8];
  v123 = MEMORY[0x1E0DEE9D8]
       + ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80));
  if (v33 == 1)
  {
    v39 = 1;
    v130 = v1;
    v110 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v41 = 0;
    v42 = (char *)MEMORY[0x1E0DEE9D8];
    v129 = a1;
    v126 = v5;
    do
    {
      v44 = v41;
      v45 = v41 + 1;
      v120 = v41;
      if (v41 + 1 < v39)
      {
        v118 = v39;
        v46 = *a1;
        v47 = *(_QWORD *)(v124 + 72);
        v48 = v113;
        sub_1BA4C2DD8(*a1 + v47 * v45, v113, type metadata accessor for DebugFormatTestCaseResult);
        v135 = v47;
        sub_1BA4C2DD8(v46 + v47 * v41, v116, type metadata accessor for DebugFormatTestCaseResult);
        sub_1BA4C2DD8(v48 + *(int *)(v136 + 24), v114, type metadata accessor for DebugFormatTestCaseResult.Result);
        v49 = (char *)&loc_1BB0553E4 + dword_1BB05622C[swift_getEnumCaseMultiPayload()];
        v117 = v46;
        __asm { BR              X9 }
      }
      ++v41;
      if (v45 < v44)
        goto LABEL_96;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_1BACAA368(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
      v51 = *((_QWORD *)v42 + 2);
      v50 = *((_QWORD *)v42 + 3);
      v43 = v51 + 1;
      if (v51 >= v50 >> 1)
        v42 = sub_1BACAA368((char *)(v50 > 1), v51 + 1, 1, v42);
      *((_QWORD *)v42 + 2) = v43;
      v52 = v42 + 32;
      v53 = &v42[16 * v51 + 32];
      *(_QWORD *)v53 = v44;
      *((_QWORD *)v53 + 1) = v45;
      if (v51)
      {
        while (1)
        {
          v54 = v43 - 1;
          if (v43 >= 4)
          {
            v59 = &v52[16 * v43];
            v60 = *((_QWORD *)v59 - 8);
            v61 = *((_QWORD *)v59 - 7);
            v65 = __OFSUB__(v61, v60);
            v62 = v61 - v60;
            if (v65)
              goto LABEL_85;
            v64 = *((_QWORD *)v59 - 6);
            v63 = *((_QWORD *)v59 - 5);
            v65 = __OFSUB__(v63, v64);
            v57 = v63 - v64;
            v58 = v65;
            if (v65)
              goto LABEL_86;
            v66 = v43 - 2;
            v67 = &v52[16 * v43 - 32];
            v69 = *(_QWORD *)v67;
            v68 = *((_QWORD *)v67 + 1);
            v65 = __OFSUB__(v68, v69);
            v70 = v68 - v69;
            if (v65)
              goto LABEL_88;
            v65 = __OFADD__(v57, v70);
            v71 = v57 + v70;
            if (v65)
              goto LABEL_91;
            if (v71 >= v62)
            {
              v89 = &v52[16 * v54];
              v91 = *(_QWORD *)v89;
              v90 = *((_QWORD *)v89 + 1);
              v65 = __OFSUB__(v90, v91);
              v92 = v90 - v91;
              if (v65)
                goto LABEL_95;
              v82 = v57 < v92;
              goto LABEL_55;
            }
          }
          else
          {
            if (v43 != 3)
            {
              v83 = *((_QWORD *)v42 + 4);
              v84 = *((_QWORD *)v42 + 5);
              v65 = __OFSUB__(v84, v83);
              v76 = v84 - v83;
              v77 = v65;
              goto LABEL_49;
            }
            v56 = *((_QWORD *)v42 + 4);
            v55 = *((_QWORD *)v42 + 5);
            v65 = __OFSUB__(v55, v56);
            v57 = v55 - v56;
            v58 = v65;
          }
          if ((v58 & 1) != 0)
            goto LABEL_87;
          v66 = v43 - 2;
          v72 = &v52[16 * v43 - 32];
          v74 = *(_QWORD *)v72;
          v73 = *((_QWORD *)v72 + 1);
          v75 = __OFSUB__(v73, v74);
          v76 = v73 - v74;
          v77 = v75;
          if (v75)
            goto LABEL_90;
          v78 = &v52[16 * v54];
          v80 = *(_QWORD *)v78;
          v79 = *((_QWORD *)v78 + 1);
          v65 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          if (v65)
            goto LABEL_93;
          if (__OFADD__(v76, v81))
            goto LABEL_94;
          if (v76 + v81 >= v57)
          {
            v82 = v57 < v81;
LABEL_55:
            if (v82)
              v54 = v66;
            goto LABEL_57;
          }
LABEL_49:
          if ((v77 & 1) != 0)
            goto LABEL_89;
          v85 = &v52[16 * v54];
          v87 = *(_QWORD *)v85;
          v86 = *((_QWORD *)v85 + 1);
          v65 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          if (v65)
            goto LABEL_92;
          if (v88 < v76)
            goto LABEL_15;
LABEL_57:
          v93 = v41;
          v94 = v54 - 1;
          if (v54 - 1 >= v43)
          {
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
            __break(1u);
LABEL_101:
            __break(1u);
            JUMPOUT(0x1BB0561C0);
          }
          v95 = *a1;
          if (!*a1)
          {
            __break(1u);
            JUMPOUT(0x1BB0561D4);
          }
          v96 = v42;
          v97 = &v52[16 * v94];
          v98 = *(_QWORD *)v97;
          v99 = &v52[16 * v54];
          v100 = *((_QWORD *)v99 + 1);
          v101 = v130;
          sub_1BB05676C(v95 + *(_QWORD *)(v124 + 72) * *(_QWORD *)v97, v95 + *(_QWORD *)(v124 + 72) * *(_QWORD *)v99, v95 + *(_QWORD *)(v124 + 72) * v100, v123);
          v130 = v101;
          if (v101)
            goto LABEL_78;
          if (v100 < v98)
            goto LABEL_82;
          if (v54 > *((_QWORD *)v96 + 2))
            goto LABEL_83;
          *(_QWORD *)v97 = v98;
          *(_QWORD *)&v52[16 * v94 + 8] = v100;
          v102 = *((_QWORD *)v96 + 2);
          if (v54 >= v102)
            goto LABEL_84;
          v42 = v96;
          v43 = v102 - 1;
          memmove(&v52[16 * v54], v99 + 16, 16 * (v102 - 1 - v54));
          *((_QWORD *)v96 + 2) = v102 - 1;
          v82 = v102 > 2;
          a1 = v129;
          v41 = v93;
          if (!v82)
            goto LABEL_15;
        }
      }
      v43 = 1;
LABEL_15:
      v39 = a1[1];
    }
    while (v41 < v39);
    v40 = v110;
    v2 = v130;
    goto LABEL_67;
  }
  v43 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v42 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_67:
  v110 = v40;
  if (v43 >= 2)
  {
    v103 = *a1;
    while (1)
    {
      v104 = v43 - 2;
      if (v43 < 2)
        goto LABEL_97;
      if (!v103)
        break;
      v105 = *(_QWORD *)&v42[16 * v104 + 32];
      v106 = *(_QWORD *)&v42[16 * v43 + 24];
      sub_1BB05676C(v103 + *(_QWORD *)(v124 + 72) * v105, v103 + *(_QWORD *)(v124 + 72) * *(_QWORD *)&v42[16 * v43 + 16], v103 + *(_QWORD *)(v124 + 72) * v106, v123);
      if (v2)
        goto LABEL_78;
      if (v106 < v105)
        goto LABEL_98;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_1BACAB464((uint64_t)v42);
      if (v104 >= *((_QWORD *)v42 + 2))
        goto LABEL_99;
      v107 = &v42[16 * v104 + 32];
      *(_QWORD *)v107 = v105;
      *((_QWORD *)v107 + 1) = v106;
      v108 = *((_QWORD *)v42 + 2);
      if (v43 > v108)
        goto LABEL_100;
      memmove(&v42[16 * v43 + 16], &v42[16 * v43 + 32], 16 * (v108 - v43));
      *((_QWORD *)v42 + 2) = v108 - 1;
      v43 = v108 - 1;
      if (v108 <= 2)
        goto LABEL_78;
    }
    __break(1u);
LABEL_104:
    sub_1BB873EA0();
    __break(1u);
    JUMPOUT(0x1BB05622CLL);
  }
LABEL_78:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v110 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1BB05628C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[2];
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v23[1] = a1;
  v27 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v27);
  v26 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v24);
  v36 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - v10;
  v39 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1E0C80A78](v39);
  v33 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v23 - v14;
  MEMORY[0x1E0C80A78](v16);
  v37 = (uint64_t)v23 - v18;
  v23[0] = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v17 + 72);
    v38 = v19 * (a3 - 1);
    v29 = v19;
    v25 = a4;
    v28 = v11;
    v32 = v15;
    v30 = a3;
    v31 = v19 * a3;
    v20 = *a4;
    v35 = v31;
    v21 = v37;
    sub_1BA4C2DD8(v31 + v20, v37, type metadata accessor for DebugFormatTestCaseResult);
    v34 = v38;
    sub_1BA4C2DD8(v38 + v20, (uint64_t)v15, type metadata accessor for DebugFormatTestCaseResult);
    sub_1BA4C2DD8(v21 + *(int *)(v39 + 24), (uint64_t)v11, type metadata accessor for DebugFormatTestCaseResult.Result);
    v22 = (char *)&loc_1BB056518 + dword_1BB05674C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
}

uint64_t sub_1BB056528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;

  sub_1BA79E0D0(v0);
  sub_1BA4C2DD8(v1 + *(int *)(*(_QWORD *)(v2 - 72) + 24), *(_QWORD *)(v2 - 104), type metadata accessor for DebugFormatTestCaseResult.Result);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1BB056610 + dword_1BB05675C[EnumCaseMultiPayload]))();
}

void sub_1BB056620()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v5 - 104);

  sub_1BA79E0D0(v6);
  sub_1BA4A2E80(v3, v2);
  sub_1BA4A2E80(*(_QWORD *)(v5 - 96), v2);
  if (v4)
  {
    if (*v1)
    {
      sub_1BA5193C4(*v1 + *(_QWORD *)(v5 - 144) + v0, *(_QWORD *)(v5 - 128), v2);
      JUMPOUT(0x1BB05646CLL);
    }
    __break(1u);
    JUMPOUT(0x1BB05674CLL);
  }
  JUMPOUT(0x1BB056430);
}

uint64_t sub_1BB05676C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  v43 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v43);
  v42 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v52 = (uint64_t)&v42 - v12;
  MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v42 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - v16;
  v18 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1E0C80A78](v18);
  v54 = (uint64_t)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v50 = (uint64_t)&v42 - v21;
  MEMORY[0x1E0C80A78](v22);
  v47 = (unint64_t)&v42 - v23;
  MEMORY[0x1E0C80A78](v24);
  v49 = (uint64_t)&v42 - v25;
  v27 = *(_QWORD *)(v26 + 72);
  if (!v27)
  {
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v44 = a1;
  if (a2 - a1 == 0x8000000000000000 && v27 == -1)
    goto LABEL_31;
  v28 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v27 == -1)
    goto LABEL_32;
  v29 = (uint64_t)(a2 - a1) / v27;
  v57 = v44;
  v56 = a4;
  v30 = v28 / v27;
  v45 = v9;
  v48 = v18;
  if (v29 < v28 / v27)
  {
    if ((v29 & 0x8000000000000000) == 0)
    {
      v31 = v29 * v27;
      if (a4 < v44 || v44 + v31 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != v44)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v54 = a4 + v31;
      v55 = a4 + v31;
      if (v31 >= 1 && a2 < a3)
      {
        v46 = a3;
        v34 = v49;
        sub_1BA4C2DD8(a2, v49, type metadata accessor for DebugFormatTestCaseResult);
        sub_1BA4C2DD8(a4, v47, type metadata accessor for DebugFormatTestCaseResult);
        sub_1BA4C2DD8(v34 + *(int *)(v18 + 24), (uint64_t)v17, type metadata accessor for DebugFormatTestCaseResult.Result);
        v35 = (char *)&loc_1BB056A70 + dword_1BB057164[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      goto LABEL_29;
    }
LABEL_33:
    sub_1BB873F84();
    __break(1u);
    JUMPOUT(0x1BB057144);
  }
  if (v30 < 0)
    goto LABEL_33;
  v32 = v30 * v27;
  if (a4 < a2 || a2 + v32 <= a4)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a4 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v36 = a4 + v32;
  v55 = a4 + v32;
  v57 = a2;
  if (v32 >= 1 && v44 < a2)
  {
    v38 = -v27;
    v47 = a4;
    v51 = (char *)v38;
    v39 = v50;
    sub_1BA4C2DD8(v36 + v38, v50, type metadata accessor for DebugFormatTestCaseResult);
    sub_1BA4C2DD8(a2 + v38, v54, type metadata accessor for DebugFormatTestCaseResult);
    sub_1BA4C2DD8(v39 + *(int *)(v18 + 24), v52, type metadata accessor for DebugFormatTestCaseResult.Result);
    v40 = (char *)&loc_1BB056DCC + dword_1BB057144[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
LABEL_29:
  sub_1BACAB2CC(&v57, &v56, (uint64_t *)&v55);
  return 1;
}

uint64_t sub_1BB057184()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB0571B8(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed44DebugFormatTestCaseMultiResultViewController_sections);
    if (*(_QWORD *)(v2 + 16) > result)
      return *(_QWORD *)&aNone_27[8 * *(char *)(v2 + 16 * result + 32)];
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB057204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  __int128 v36[2];
  uint64_t v37;

  v3 = type metadata accessor for FeedGroupItem();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v32 = (uint64_t)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return v6;
  v28[1] = v1;
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B00C(0, v5, 0);
  result = sub_1BA65EFE4(a1);
  v9 = result;
  v10 = 0;
  v11 = a1 + 64;
  v12 = *(_BYTE *)(a1 + 32);
  v28[0] = a1 + 88;
  v13 = a1;
  v29 = v5;
  v30 = v8;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << v12)
  {
    v16 = (unint64_t)v9 >> 6;
    if ((*(_QWORD *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(v13 + 36) != (_DWORD)v8)
      goto LABEL_28;
    v17 = v11;
    v18 = v13;
    sub_1BA4C010C(*(_QWORD *)(v13 + 56) + 40 * v9, (uint64_t)v36);
    sub_1BA4CECCC(v36, (uint64_t)v33);
    v20 = v34;
    v19 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    v6 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7B00C(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v6 = v37;
    }
    v22 = *(_QWORD *)(v6 + 16);
    v21 = *(_QWORD *)(v6 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1BAC7B00C(v21 > 1, v22 + 1, 1);
      v6 = v37;
    }
    *(_QWORD *)(v6 + 16) = v22 + 1;
    result = sub_1BA5193C4(v32, v6+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v12 = *(_BYTE *)(v18 + 32);
    v14 = 1 << v12;
    if (v9 >= 1 << v12)
      goto LABEL_29;
    v23 = *(_QWORD *)(v17 + 8 * v16);
    if ((v23 & (1 << v9)) == 0)
      goto LABEL_30;
    v13 = v18;
    LODWORD(v8) = v30;
    if (*(_DWORD *)(v18 + 36) != (_DWORD)v30)
      goto LABEL_31;
    v11 = v17;
    v24 = v23 & (-2 << (v9 & 0x3F));
    if (v24)
    {
      v14 = __clz(__rbit64(v24)) | v9 & 0xFFFFFFFFFFFFFFC0;
      v15 = v29;
    }
    else
    {
      v25 = v16 + 1;
      v26 = (v14 + 63) >> 6;
      v15 = v29;
      if (v16 + 1 < v26)
      {
        v27 = *(_QWORD *)(v17 + 8 * v25);
        if (!v27)
        {
          v25 = v16 + 2;
          if (v16 + 2 >= v26)
            goto LABEL_4;
          v27 = *(_QWORD *)(v17 + 8 * v25);
          if (!v27)
          {
            while (v26 - 3 != v16)
            {
              v27 = *(_QWORD *)(v28[0] + 8 * v16++);
              if (v27)
              {
                v25 = v16 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        v14 = __clz(__rbit64(v27)) + (v25 << 6);
      }
    }
LABEL_4:
    ++v10;
    v9 = v14;
    if (v10 == v15)
      return v6;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BB0574F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1E0C80A78](v19);
  v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)(v1 + 16) = 0x676E69646E6962;
  *(_QWORD *)(v1 + 24) = 0xE700000000000000;
  v5 = a1[4];
  v6 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1 + 1, v5);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 64))(&v20, v5, v6);
  v7 = v22;
  if (v22)
  {
    v8 = v23;
    __swift_project_boxed_opaque_existential_1(&v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)&v20, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
  }
  v9 = a1[4];
  v10 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1 + 1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v9, v10);
  v13 = v12;
  v20 = 0x646574726F707845;
  v21 = 0xEA0000000000203ALL;
  sub_1BB872AFC((_QWORD *)0x646574726F707845);
  v15 = v20;
  v14 = v21;
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000016;
  v21 = 0x80000001BB9777D0;
  sub_1BB872AFC((_QWORD *)0xD000000000000016);
  swift_bridgeObjectRelease();
  v16 = v20;
  v17 = v21;
  sub_1BB05771C((char *)v4 + *(int *)(v19 + 28));
  *v4 = v11;
  v4[1] = v13;
  v4[2] = v15;
  v4[3] = v14;
  v4[4] = v16;
  v4[5] = v17;
  sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA5193C4((uint64_t)v4, v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatBindingExportRequest_data, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
  return v1;
}

uint64_t sub_1BB05771C@<X0>(char *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  int *v61;
  int64_t *v62;
  char *v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t result;
  uint64_t v88;
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  void (*v103)(_QWORD, _QWORD, _QWORD);
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  int64_t v121;
  uint64_t v122;
  _QWORD v123[3];
  uint64_t v124;
  uint64_t v125;
  __int128 v126[2];
  uint64_t v127;
  int64_t v128;

  v100 = a1;
  v2 = sub_1BB86C8B0();
  v98 = *(_QWORD *)(v2 - 8);
  v99 = v2;
  MEMORY[0x1E0C80A78](v2);
  v97 = (char *)v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v101 = (char *)v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v89[1] = v6;
  v90 = v7;
  MEMORY[0x1E0C80A78](v6);
  v92 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCC70(0);
  v91 = v9;
  MEMORY[0x1E0C80A78](v9);
  v93 = (uint64_t)v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatContentSubgroup();
  v12 = *(_QWORD *)(v11 - 8);
  v94 = (int *)v11;
  v95 = v12;
  MEMORY[0x1E0C80A78](v11);
  v96 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = (_QWORD *)type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1E0C80A78](v108);
  v107 = (char *)v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)&v106 = (char *)v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v17);
  v115 = (char *)v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v19);
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v20);
  v114 = (uint64_t)v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v89 - v23;
  v25 = sub_1BB871E24();
  v104 = *(_QWORD *)(v25 - 8);
  v105 = v25;
  v26 = *(void (**)(_QWORD, _QWORD, _QWORD))(v104 + 56);
  v113 = v24;
  v103 = v26;
  v26(v24, 1, 1);
  v127 = MEMORY[0x1E0DEE9D8];
  v128 = MEMORY[0x1E0DEE9D8];
  v27 = v1[8];
  v28 = 1 << *(_BYTE *)(v27 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & *(_QWORD *)(v27 + 64);
  v120 = v1;
  v121 = (unint64_t)(v28 + 63) >> 6;
  swift_bridgeObjectRetain();
  v111 = 0;
  v112 = 0;
  v118 = 0;
  v119 = 0;
  v109 = 0;
  v110 = 0;
  v116 = 0;
  v117 = 0;
  v102 = v27;
  if (v30)
  {
    v31 = __clz(__rbit64(v30));
    goto LABEL_20;
  }
  v32 = v120;
  if (v121 > 1)
  {
    v33 = *(_QWORD *)(v27 + 72);
    v34 = 1;
    if (v33)
      goto LABEL_19;
    v34 = 2;
    if (v121 <= 2)
      goto LABEL_21;
    v33 = *(_QWORD *)(v27 + 80);
    if (v33)
      goto LABEL_19;
    v34 = 3;
    if (v121 <= 3)
      goto LABEL_21;
    v33 = *(_QWORD *)(v27 + 88);
    if (v33)
      goto LABEL_19;
    v34 = 4;
    if (v121 <= 4)
      goto LABEL_21;
    v33 = *(_QWORD *)(v27 + 96);
    if (v33)
    {
LABEL_19:
      v31 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_20:
      sub_1BA4C010C(*(_QWORD *)(v27 + 56) + 40 * v31, (uint64_t)v126);
      sub_1BA4CECCC(v126, (uint64_t)v123);
      v37 = v124;
      v36 = v125;
      __swift_project_boxed_opaque_existential_1(v123, v124);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v36);
      v38 = (char *)&loc_1BB057B8C + dword_1BB0583EC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    v35 = 5;
    if (v121 > 5)
    {
      v33 = *(_QWORD *)(v27 + 104);
      if (v33)
      {
        v34 = 5;
        goto LABEL_19;
      }
      while (1)
      {
        v34 = v35 + 1;
        if (__OFADD__(v35, 1))
          break;
        if (v34 >= v121)
          goto LABEL_21;
        v33 = *(_QWORD *)(v27 + 64 + 8 * v34);
        ++v35;
        if (v33)
          goto LABEL_19;
      }
      __break(1u);
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x1BB0583ECLL);
    }
  }
LABEL_21:
  swift_release();
  v39 = swift_bridgeObjectRetain();
  v40 = sub_1BB057204(v39);
  v107 = 0;
  swift_bridgeObjectRelease();
  v41 = sub_1BAC86D28(v40);
  swift_bridgeObjectRelease();
  v42 = v32[4];
  v43 = v32[5];
  __swift_project_boxed_opaque_existential_1(v32 + 1, v42);
  v122 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
  sub_1BB05B3E0(0);
  sub_1BA4A2870((unint64_t *)&qword_1EF2BA090, (uint64_t (*)(uint64_t))sub_1BB05B3E0, MEMORY[0x1E0DEAF38]);
  sub_1BA4A2870((unint64_t *)&qword_1ED3BA6E8, type metadata accessor for FeedItem, (uint64_t)&protocol conformance descriptor for FeedItem);
  v44 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v45 = v32[4];
  v46 = v32[5];
  v108 = v32 + 1;
  __swift_project_boxed_opaque_existential_1(v32 + 1, v45);
  v121 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 88))(v45, v46);
  v115 = v47;
  v48 = v101;
  sub_1BB86C634();
  v49 = sub_1BB86C67C();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49) == 1)
    goto LABEL_24;
  sub_1BA6BE23C();
  v52 = (uint64_t)v92;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, &v92[*(int *)(v51 + 48)], 0, 0, 0, 0);
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v52, v48, v49);
  swift_storeEnumTagMultiPayload();
  v53 = v93;
  sub_1BA4C2DD8(v52, v93, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  sub_1BA4B07F0(0, &qword_1ED3B9E80, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v54 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  v55 = swift_allocObject();
  v106 = xmmword_1BB87CE70;
  *(_OWORD *)(v55 + 16) = xmmword_1BB87CE70;
  sub_1BA5193C4(v52, v55 + v54, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  *(_QWORD *)(v53 + *(int *)(v91 + 36)) = v55;
  v56 = v127;
  swift_bridgeObjectRetain();
  v57 = sub_1BA7718D4(v41);
  swift_bridgeObjectRelease();
  v58 = v32;
  swift_bridgeObjectRetain();
  v59 = swift_bridgeObjectRetain();
  v60 = sub_1BB05B030(v59, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v61 = v94;
  v62 = (int64_t *)v96;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, &v96[v94[10]], 0, 0, 0, 0);
  v63 = v115;
  *v62 = v121;
  v62[1] = (int64_t)v63;
  sub_1BA5193C4(v53, (uint64_t)v62 + v61[5], (uint64_t (*)(_QWORD))sub_1BA6BCC70);
  *(int64_t *)((char *)v62 + v61[6]) = v56;
  *(int64_t *)((char *)v62 + v61[7]) = v57;
  v64 = MEMORY[0x1E0DEE9D8];
  *(int64_t *)((char *)v62 + v61[9]) = MEMORY[0x1E0DEE9D8];
  *(int64_t *)((char *)v62 + v61[8]) = v60;
  *(int64_t *)((char *)v62 + v61[12]) = v64;
  *(int64_t *)((char *)v62 + v61[11]) = v64;
  v65 = v58[4];
  v66 = v58[5];
  v67 = v108;
  __swift_project_boxed_opaque_existential_1(v108, v65);
  v115 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v66 + 88))(v65, v66);
  v107 = v68;
  v69 = v97;
  sub_1BB86C8A4();
  v70 = (uint64_t)v113;
  sub_1BA4C2DD8((uint64_t)v113, v114, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9EC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v71 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = v106;
  sub_1BA4C2DD8((uint64_t)v62, v72 + v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v121 = v128;
  v73 = v58[4];
  v74 = v58[5];
  __swift_project_boxed_opaque_existential_1(v67, v73);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 80))(v73, v74);
  sub_1BA4A2E80((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  v76 = v100;
  v77 = v107;
  *(_QWORD *)v100 = v115;
  *((_QWORD *)v76 + 1) = v77;
  v78 = (int *)type metadata accessor for FormatContent(0);
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v76[v78[5]], v69, v99);
  v79 = &v76[v78[6]];
  v80 = v117;
  *(_QWORD *)v79 = v111;
  *((_QWORD *)v79 + 1) = v80;
  v81 = &v76[v78[7]];
  v82 = v116;
  *(_QWORD *)v81 = v109;
  *((_QWORD *)v81 + 1) = v82;
  v83 = &v76[v78[8]];
  v84 = v118;
  *(_QWORD *)v83 = v110;
  *((_QWORD *)v83 + 1) = v84;
  v85 = &v76[v78[9]];
  v86 = v119;
  *(_QWORD *)v85 = v112;
  *((_QWORD *)v85 + 1) = v86;
  result = sub_1BA5193C4(v114, (uint64_t)&v76[v78[10]], (uint64_t (*)(_QWORD))sub_1BA6D940C);
  v88 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v76[v78[11]] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v76[v78[12]] = v88;
  *(_QWORD *)&v76[v78[13]] = v88;
  *(_QWORD *)&v76[v78[14]] = v88;
  *(_QWORD *)&v76[v78[15]] = v72;
  *(_QWORD *)&v76[v78[16]] = v121;
  *(_QWORD *)&v76[v78[17]] = v75;
  return result;
}

uint64_t sub_1BB058420()
{
  sub_1BB058688();
  return sub_1BB874710();
}

uint64_t sub_1BB058448()
{
  sub_1BB058688();
  return sub_1BB87471C();
}

uint64_t DebugFormatBindingExportRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatBindingExportRequest_data, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
  return v0;
}

uint64_t DebugFormatBindingExportRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatBindingExportRequest_data, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
  return swift_deallocClassInstance();
}

uint64_t DebugFormatBindingExportRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB058630();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB058688();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB87417C();
  if (!v1)
  {
    v9[14] = 1;
    type metadata accessor for FormatBindingContent();
    sub_1BA4A2870(&qword_1EF2ADDA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBindingContent, (uint64_t)&protocol conformance descriptor for FormatBindingContent);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BB058630()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B9FB0)
  {
    sub_1BB058688();
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B9FB0);
  }
}

unint64_t sub_1BB058688()
{
  unint64_t result;

  result = qword_1EF2B9FB8;
  if (!qword_1EF2B9FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E5C5C, &type metadata for DebugFormatBindingExportRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B9FB8);
  }
  return result;
}

uint64_t sub_1BB0586CC(_QWORD *a1)
{
  return DebugFormatBindingExportRequest.encode(to:)(a1);
}

uint64_t sub_1BB0586EC()
{
  return type metadata accessor for DebugFormatBindingExportRequest();
}

uint64_t type metadata accessor for DebugFormatBindingExportRequest()
{
  uint64_t result;

  result = qword_1EF2B9FE8;
  if (!qword_1EF2B9FE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB058730()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatBindingContent();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DebugFormatBindingExportRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for DebugFormatBindingExportRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB058800 + 4 * byte_1BB8E5B15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB058834 + 4 * byte_1BB8E5B10[v4]))();
}

uint64_t sub_1BB058834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05883C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB058844);
  return result;
}

uint64_t sub_1BB058850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB058858);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB05885C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB058864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatBindingExportRequest.CodingKeys()
{
  return &type metadata for DebugFormatBindingExportRequest.CodingKeys;
}

unint64_t sub_1BB058884()
{
  unint64_t result;

  result = qword_1EF2BA078;
  if (!qword_1EF2BA078)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E5C34, &type metadata for DebugFormatBindingExportRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA078);
  }
  return result;
}

unint64_t sub_1BB0588CC()
{
  unint64_t result;

  result = qword_1EF2BA080;
  if (!qword_1EF2BA080)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E5BA4, &type metadata for DebugFormatBindingExportRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA080);
  }
  return result;
}

unint64_t sub_1BB058914()
{
  unint64_t result;

  result = qword_1EF2BA088;
  if (!qword_1EF2BA088)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E5BCC, &type metadata for DebugFormatBindingExportRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA088);
  }
  return result;
}

uint64_t sub_1BB058958(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for FormatOption();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AFD4(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v16 = *(_QWORD *)(v3 + 72);
    v7 = v17;
    do
    {
      sub_1BA4C2DD8(v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v10 = *v5;
      v9 = v5[1];
      v11 = v5[2];
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AFD4(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v17;
      }
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC7AFD4(v12 > 1, v13 + 1, 1);
        v7 = v17;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = (_QWORD *)(v7 + 24 * v13);
      v14[4] = v10;
      v14[5] = v9;
      v14[6] = v11;
      v8 += v16;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void sub_1BB058AD4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v57 = a2;
  v49 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v49);
  v52 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v41);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  v56 = v14;
  MEMORY[0x1E0C80A78](v13);
  v43 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v16);
  v42 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA62A270(0);
  MEMORY[0x1E0C80A78](v18);
  v40 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v39);
  v46 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v21);
  v47 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(a1 + 24);
  v27 = *(_QWORD *)(a1 + 32);
  FeedItem.identifier.getter();
  if (*(_QWORD *)(v26 + 16))
  {
    v30 = sub_1BA6E35A8(v28, v29);
    if ((v31 & 1) != 0)
    {
      v58 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v30);
      swift_bridgeObjectRetain();
    }
    else
    {
      v58 = MEMORY[0x1E0DEE9E8];
    }
  }
  else
  {
    v58 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  FeedItem.identifier.getter();
  if (*(_QWORD *)(v27 + 16))
  {
    v34 = sub_1BA6E35A8(v32, v33);
    if ((v35 & 1) != 0)
    {
      v36 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v34);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB058958(v36);
    }
  }
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(v3, (uint64_t)v25, type metadata accessor for FeedItem);
  v37 = (char *)&loc_1BB058EC0 + dword_1BB059AB4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB058ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v1, type metadata accessor for FeedItem);
  v2 = type metadata accessor for FormatContentSlotItemObject();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(*(_QWORD *)(v0 + 152), 1, 1, v2);
}

uint64_t sub_1BB059B20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for FormatContentSlotItemObject();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B038(0, v6, 0);
    v7 = v15;
    v8 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_1BB059C6C(v9, (uint64_t)v5);
      v15 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BAC7B038(v11 > 1, v12 + 1, 1);
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      sub_1BA5193C4((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void sub_1BB059C6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  char *v20;
  _QWORD v21[3];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1E0C80A78](v22);
  v23 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v24);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v8);
  v21[2] = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  v31 = v11;
  MEMORY[0x1E0C80A78](v10);
  v21[0] = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v13);
  sub_1BA62A270(0);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v15);
  v21[1] = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v17);
  v32 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
  v20 = (char *)&loc_1BB059F4C + dword_1BB05AA74[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB059F5C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;

  v5 = objc_msgSend(*v0, sel_articleID);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = (void *)swift_unknownObjectRetain();
  sub_1BA6274D8(v9, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v10 = *(_QWORD *)(v4 - 280);
    if (qword_1ED3A6D88 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A6D68);
    sub_1BA4C2DD8(v11, v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))sub_1BA62A270);
  }
  else
  {
    v10 = *(_QWORD *)(v4 - 280);
    sub_1BA5193C4(v3, v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  }
  v12 = type metadata accessor for FormatContentSlotItemResolution();
  v13 = *(_QWORD *)(v4 - 184);
  v14 = *(_QWORD *)(v13 + *(int *)(v12 + 24));
  v15 = *(_QWORD *)(v13 + *(int *)(v12 + 28));
  swift_bridgeObjectRetain();
  v16 = sub_1BB058958(v15);
  swift_unknownObjectRelease();
  type metadata accessor for FormatArticle();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v6;
  *(_QWORD *)(v17 + 24) = v8;
  v18 = v17 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BA5193C4(v10, v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  v19 = (_QWORD *)(v17 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  *v19 = v14;
  v20 = (uint64_t *)(v17 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  *v20 = v16;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
  **(_QWORD **)(v4 - 168) = v17;
  type metadata accessor for FormatContentSlotItemObject();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB05AABC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;

  v57 = *(_QWORD *)(a3 + 16);
  v5 = *(_OWORD *)(a3 + 24);
  v58 = *(_OWORD *)(a3 + 40);
  v59 = v5;
  v61 = *(_OWORD *)(a3 + 56);
  v6 = *(_QWORD *)(a3 + 72);
  v49 = type metadata accessor for FormatContentSlotItem();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v53 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB05B3FC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatContentSlotItemObject();
  v56 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v67 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeedItem(0);
  v55 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v54 = (uint64_t)&v44 - v17;
  v18 = *(_QWORD *)(a2 + 64);
  v51 = a2 + 64;
  v19 = 1 << *(_BYTE *)(a2 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v52 = (unint64_t)(v19 + 63) >> 6;
  v46 = v61;
  v60 = a2;
  result = swift_bridgeObjectRetain();
  v23 = 0;
  v47 = v11;
  v50 = v6;
  while (1)
  {
    if (v21)
    {
      v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v25 = v24 | (v23 << 6);
      goto LABEL_24;
    }
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v26 >= v52)
      goto LABEL_34;
    v27 = *(_QWORD *)(v51 + 8 * v26);
    ++v23;
    if (!v27)
    {
      v23 = v26 + 1;
      if (v26 + 1 >= v52)
        goto LABEL_34;
      v27 = *(_QWORD *)(v51 + 8 * v23);
      if (!v27)
      {
        v23 = v26 + 2;
        if (v26 + 2 >= v52)
          goto LABEL_34;
        v27 = *(_QWORD *)(v51 + 8 * v23);
        if (!v27)
        {
          v23 = v26 + 3;
          if (v26 + 3 >= v52)
            goto LABEL_34;
          v27 = *(_QWORD *)(v51 + 8 * v23);
          if (!v27)
            break;
        }
      }
    }
LABEL_23:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_24:
    v29 = v54;
    sub_1BA4C2DD8(*(_QWORD *)(v60 + 56) + *(_QWORD *)(v55 + 72) * v25, v54, type metadata accessor for FeedItem);
    sub_1BA5193C4(v29, (uint64_t)v15, type metadata accessor for FeedItem);
    v62 = v57;
    v63 = v59;
    v64 = v58;
    v65 = v61;
    v66 = v6;
    sub_1BB058AD4((uint64_t)&v62, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v10, 1, v11) == 1)
    {
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB05B3FC);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v10, v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      FeedItem.identifier.getter();
      v32 = v46;
      if (*(_QWORD *)(v46 + 16) && (v33 = sub_1BA6E35A8(v30, v31), (v34 & 1) != 0))
      {
        v35 = (uint64_t *)(*(_QWORD *)(v32 + 56) + 16 * v33);
        v45 = a1;
        v36 = *v35;
        v37 = v35[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v38 = sub_1BB058958(v37);
        v39 = sub_1BB059B20(v36);
        swift_bridgeObjectRelease();
        a1 = v45;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v38 = 0;
        v39 = 0;
      }
      v40 = v53;
      sub_1BA4C2DD8(v67, v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      v41 = (uint64_t *)(v40 + *(int *)(v49 + 20));
      *v41 = v38;
      v41[1] = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_1BB3928A4(0, *(_QWORD *)(a1 + 16) + 1, 1, a1);
      v43 = *(_QWORD *)(a1 + 16);
      v42 = *(_QWORD *)(a1 + 24);
      v11 = v47;
      if (v43 >= v42 >> 1)
        a1 = sub_1BB3928A4(v42 > 1, v43 + 1, 1, a1);
      *(_QWORD *)(a1 + 16) = v43 + 1;
      sub_1BA5193C4(v53, a1+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
      sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      v6 = v50;
    }
    result = sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FeedItem);
  }
  v28 = v26 + 4;
  if (v28 >= v52)
  {
LABEL_34:
    swift_release();
    return a1;
  }
  v27 = *(_QWORD *)(v51 + 8 * v28);
  if (v27)
  {
    v23 = v28;
    goto LABEL_23;
  }
  while (1)
  {
    v23 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v23 >= v52)
      goto LABEL_34;
    v27 = *(_QWORD *)(v51 + 8 * v23);
    ++v28;
    if (v27)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1BB05B030(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[11];
  uint64_t v45;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v4 = a1;
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7AFF0(0, v2, 0);
  v3 = v45;
  result = sub_1BA6AFD6C(v4);
  v7 = 0;
  v8 = v4 + 64;
  v29 = v4 + 80;
  v30 = v2;
  v31 = v6;
  v32 = v4 + 64;
  v33 = v4;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(v4 + 32))
  {
    v11 = result >> 6;
    if ((*(_QWORD *)(v8 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v4 + 36) != v6)
      goto LABEL_24;
    v35 = v7;
    v36 = 1 << result;
    v12 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * result);
    v13 = v12[1];
    v41 = *v12;
    v42 = v3;
    v14 = (uint64_t *)(*(_QWORD *)(v4 + 56) + (result << 6));
    v15 = *v14;
    v43 = v14[1];
    v16 = v14[3];
    v37 = v14[2];
    v17 = v14[4];
    v18 = v14[5];
    v19 = v14[6];
    v20 = v14[7];
    v39 = result;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = sub_1BB058958(v19);
    v44[0] = v41;
    v44[1] = v13;
    v44[2] = v15;
    v44[3] = v43;
    v44[4] = v37;
    v44[5] = v16;
    v44[6] = v17;
    v44[7] = v18;
    v44[8] = v19;
    v44[9] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = sub_1BB05AABC(MEMORY[0x1E0DEE9D8], a2, (uint64_t)v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v3 = v42;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease_n();
    v45 = v42;
    v22 = *(_QWORD *)(v42 + 16);
    v21 = *(_QWORD *)(v42 + 24);
    if (v22 >= v21 >> 1)
    {
      result = sub_1BAC7AFF0(v21 > 1, v22 + 1, 1);
      v3 = v45;
    }
    *(_QWORD *)(v3 + 16) = v22 + 1;
    v23 = (_QWORD *)(v3 + 48 * v22);
    v23[4] = v15;
    v23[5] = v43;
    v23[6] = v40;
    v23[7] = MEMORY[0x1E0DEE9D8];
    v23[8] = v38;
    v23[9] = v20;
    v4 = v33;
    v9 = 1 << *(_BYTE *)(v33 + 32);
    if (v39 >= v9)
      goto LABEL_25;
    v8 = v32;
    v24 = *(_QWORD *)(v32 + 8 * v11);
    if ((v24 & v36) == 0)
      goto LABEL_26;
    v6 = v31;
    if (*(_DWORD *)(v33 + 36) != v31)
      goto LABEL_27;
    v25 = v24 & (-2 << (v39 & 0x3F));
    if (v25)
    {
      v9 = __clz(__rbit64(v25)) | v39 & 0xFFFFFFFFFFFFFFC0;
      v10 = v30;
    }
    else
    {
      v26 = v11 + 1;
      v27 = (unint64_t)(v9 + 63) >> 6;
      v10 = v30;
      if (v11 + 1 < v27)
      {
        v28 = *(_QWORD *)(v32 + 8 * v26);
        if (v28)
        {
LABEL_20:
          v9 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v11)
          {
            v28 = *(_QWORD *)(v29 + 8 * v11++);
            if (v28)
            {
              v26 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v35 + 1;
    result = v9;
    if (v35 + 1 == v10)
      return v3;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1BB05B3E0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C3570, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BB05B3FC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BA098, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FeedPaywall.debugSourceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPaywall.debugTitle.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return 0x206C6C6177796150;
}

uint64_t FeedPaywall.debugAssetHandle.getter()
{
  return 0;
}

BOOL static SubscriptionActivationEligibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SubscriptionActivationEligibility.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SubscriptionActivationEligibility.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t SubscriptionActivationEligibility.selectors.getter()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;

  if (*v0)
    v1 = &unk_1E7269C20;
  else
    v1 = &unk_1E7269BF0;
  v2 = sub_1BA862444((uint64_t)v1);
  swift_arrayDestroy();
  return v2;
}

uint64_t FeedPaywall.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FeedPaywall.traits.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 208);
}

_QWORD *FeedPaywall.traits.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = *result;
  return result;
}

uint64_t (*FeedPaywall.traits.modify())(_QWORD)
{
  return nullsub_1;
}

void FeedPaywall.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 224);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 216);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedPaywall.layoutDirection.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 216) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 224) = v2;
  return result;
}

uint64_t (*FeedPaywall.layoutDirection.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FeedPaywall.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 232);
  v3 = *(_QWORD *)(v1 + 240);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t FeedPaywall.kind.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BA6E0CBC(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
  *(_QWORD *)(v1 + 232) = v2;
  *(_QWORD *)(v1 + 240) = v3;
  return result;
}

uint64_t (*FeedPaywall.kind.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 FeedPaywall.init(identifier:paywallType:paywallHost:isBundleFreeTrialEligible:isWebAccessAvailable:channelName:numberOfOffers:buttonText:servicesBundlePrice:servicesBundlePriceDelta:servicesBundleTrialEligible:servicesBundleUpsellScenario:activationEligibility:articleRole:personalizedTopChannelsClause:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, __int128 a14, __n128 a15, char a16, uint64_t a17, uint64_t a18, char *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  __n128 result;
  uint64_t v24;
  uint64_t v25;
  char v26;

  result = a15;
  v24 = *a13;
  v25 = a13[1];
  v26 = *a19;
  *(_QWORD *)(a9 + 208) = 0x2000000000000;
  *(_QWORD *)(a9 + 216) = 0;
  *(_BYTE *)(a9 + 224) = 1;
  *(_OWORD *)(a9 + 232) = xmmword_1BB8E2830;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 49) = a8;
  *(_QWORD *)(a9 + 56) = a12;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_QWORD *)(a9 + 80) = v24;
  *(_QWORD *)(a9 + 88) = v25;
  *(_OWORD *)(a9 + 96) = *((_OWORD *)a13 + 1);
  *(_OWORD *)(a9 + 144) = a14;
  *(__n128 *)(a9 + 160) = a15;
  *(_BYTE *)(a9 + 112) = a16;
  *(_QWORD *)(a9 + 120) = a17;
  *(_QWORD *)(a9 + 128) = a18;
  *(_BYTE *)(a9 + 136) = v26;
  *(_QWORD *)(a9 + 176) = a20;
  *(_BYTE *)(a9 + 184) = a21 & 1;
  *(_QWORD *)(a9 + 192) = a22;
  *(_QWORD *)(a9 + 200) = a23;
  return result;
}

void sub_1BB05B780(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 208);
}

void sub_1BB05B78C(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 224);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 216);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1BB05B7A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPaywall.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPaywall.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1[13];
  v3 = v1[11];
  v34 = v1[12];
  v35 = v2;
  v4 = v1[13];
  v36 = v1[14];
  v5 = v1[9];
  v7 = v1[7];
  v30 = v1[8];
  v6 = v30;
  v31 = v5;
  v8 = v1[9];
  v9 = v1[11];
  v32 = v1[10];
  v10 = v32;
  v33 = v9;
  v11 = v1[5];
  v13 = v1[3];
  v26 = v1[4];
  v12 = v26;
  v27 = v11;
  v14 = v1[5];
  v15 = v1[7];
  v28 = v1[6];
  v16 = v28;
  v29 = v15;
  v17 = v1[1];
  v23[0] = *v1;
  v23[1] = v17;
  v18 = v1[3];
  v20 = *v1;
  v19 = v1[1];
  v24 = v1[2];
  v21 = v24;
  v25 = v18;
  *(_OWORD *)(a1 + 192) = v34;
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 224) = v1[14];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v19;
  v37 = *((_QWORD *)v1 + 30);
  *(_QWORD *)(a1 + 240) = *((_QWORD *)v1 + 30);
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v13;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return sub_1BACB5C48((uint64_t)v23);
}

uint64_t sub_1BB05B8AC@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1[13];
  v3 = v1[11];
  v34 = v1[12];
  v35 = v2;
  v4 = v1[13];
  v36 = v1[14];
  v5 = v1[9];
  v7 = v1[7];
  v30 = v1[8];
  v6 = v30;
  v31 = v5;
  v8 = v1[9];
  v9 = v1[11];
  v32 = v1[10];
  v10 = v32;
  v33 = v9;
  v11 = v1[5];
  v13 = v1[3];
  v26 = v1[4];
  v12 = v26;
  v27 = v11;
  v14 = v1[5];
  v15 = v1[7];
  v28 = v1[6];
  v16 = v28;
  v29 = v15;
  v17 = v1[1];
  v23[0] = *v1;
  v23[1] = v17;
  v18 = v1[3];
  v20 = *v1;
  v19 = v1[1];
  v24 = v1[2];
  v21 = v24;
  v25 = v18;
  *(_OWORD *)(a1 + 192) = v34;
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 224) = v1[14];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v19;
  v37 = *((_QWORD *)v1 + 30);
  *(_QWORD *)(a1 + 240) = *((_QWORD *)v1 + 30);
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v13;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return sub_1BACB5C48((uint64_t)v23);
}

uint64_t static FeedPaywall.groupContentSelectors(isBundleFreeTrialEligible:servicesBundleTrialEligible:servicesBundleUpsellScenario:isWebAccessAvailable:articleRole:numberOfOffers:activationEligibility:personalizedTopChannelsClause:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, unsigned __int8 *a9, uint64_t a10, unint64_t a11)
{
  return sub_1BB05BA14(a1, a2, a3, a4, a5, a6, a7 & 1, a8, a9, a10, a11);
}

_QWORD *sub_1BB05B998()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unsigned __int8 v13;

  v1 = *(unsigned __int8 *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 49);
  v3 = *(unsigned __int8 *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_BYTE *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 200);
  v13 = *(_BYTE *)(v0 + 136);
  v10 = sub_1BB05BA14(v1, v3, v4, v5, v2, v6, v7, 1, &v13, v8, v9);
  v11 = sub_1BA67F4CC(v10);
  swift_bridgeObjectRelease();
  return v11;
}

NewsFeed::FeedPaywallButton __swiftcall FeedPaywallButton.init(primaryText:secondaryText:)(Swift::String primaryText, Swift::String_optional secondaryText)
{
  Swift::String_optional *v2;
  NewsFeed::FeedPaywallButton result;

  v2->value = primaryText;
  v2[1] = secondaryText;
  result.secondaryText = secondaryText;
  result.primaryText = primaryText;
  return result;
}

uint64_t sub_1BB05BA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, unsigned __int8 *a9, uint64_t a10, unint64_t a11)
{
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  const char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v46;
  unint64_t v47;
  char v48;
  const char *v49;
  unint64_t v50;
  _QWORD *v51;
  int v57;
  _QWORD *v59;

  v57 = *a9;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872AFC((_QWORD *)0xD000000000000012);
  swift_bridgeObjectRelease();
  v11 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[2 * v13];
  v14[4] = 0xD000000000000012;
  v14[5] = 0x80000001BB977810;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872AFC((_QWORD *)0xEA0000000000656CLL);
  swift_bridgeObjectRelease();
  v16 = v11[2];
  v15 = v11[3];
  v17 = v16 + 1;
  if (v16 >= v15 >> 1)
    v11 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
  v11[2] = v17;
  v18 = &v11[2 * v16];
  v18[4] = 0xD00000000000001BLL;
  v18[5] = 0x80000001BB977830;
  v59 = v11;
  if (a3 == 0x73676E69766173 && a4 == 0xE700000000000000)
    goto LABEL_9;
  if ((sub_1BB874398() & 1) != 0)
  {
    v17 = v11[2];
LABEL_9:
    v19 = v11[3];
    if (v17 >= v19 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v19 > 1), v17 + 1, 1, v11);
    v11[2] = v17 + 1;
    v20 = &v11[2 * v17];
    v21 = "services-bundle-upsell-scenario-savings";
    v22 = 0xD000000000000027;
LABEL_18:
    v20[4] = v22;
    v20[5] = (unint64_t)(v21 - 32) | 0x8000000000000000;
    v59 = v11;
    goto LABEL_19;
  }
  if (a3 == 0x6465726563697270 && a4 == 0xEE006E6F69746375 || (sub_1BB874398() & 1) != 0)
  {
    v24 = v11[2];
    v23 = v11[3];
    if (v24 >= v23 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v23 > 1), v24 + 1, 1, v11);
    v11[2] = v24 + 1;
    v20 = &v11[2 * v24];
    v21 = "services-bundle-upsell-scenario-price-reduction";
    v22 = 0xD00000000000002FLL;
    goto LABEL_18;
  }
  if (a3 == 0x756C617674736562 && a4 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    v47 = v11[2];
    v46 = v11[3];
    if (v47 >= v46 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v46 > 1), v47 + 1, 1, v11);
    v48 = a5;
    v11[2] = v47 + 1;
    v49 = "services-bundle-upsell-scenario-best-value";
    goto LABEL_59;
  }
  if (a3 == 0x6974736567677573 && a4 == 0xEA00000000006E6FLL || (sub_1BB874398() & 1) != 0)
  {
    v47 = v11[2];
    v50 = v11[3];
    if (v47 >= v50 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v50 > 1), v47 + 1, 1, v11);
    v48 = a5;
    v11[2] = v47 + 1;
    v49 = "services-bundle-upsell-scenario-suggestion";
LABEL_59:
    v51 = &v11[2 * v47];
    v51[4] = 0xD00000000000002ALL;
    v51[5] = (unint64_t)(v49 - 32) | 0x8000000000000000;
    v59 = v11;
    if ((v48 & 1) == 0)
      goto LABEL_23;
    goto LABEL_20;
  }
LABEL_19:
  if ((a5 & 1) == 0)
    goto LABEL_23;
LABEL_20:
  v26 = v11[2];
  v25 = v11[3];
  if (v26 >= v25 >> 1)
    v11 = sub_1BA6EA0D0((_QWORD *)(v25 > 1), v26 + 1, 1, v11);
  v11[2] = v26 + 1;
  v27 = &v11[2 * v26];
  v27[4] = 0xD000000000000014;
  v27[5] = 0x80000001BB9778B0;
  v59 = v11;
LABEL_23:
  if ((a7 & 1) == 0)
  {
    v28 = FCArticleRole.selector.getter(a6);
    v30 = v29;
    v32 = v11[2];
    v31 = v11[3];
    if (v32 >= v31 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v31 > 1), v32 + 1, 1, v11);
    v11[2] = v32 + 1;
    v33 = &v11[2 * v32];
    v33[4] = v28;
    v33[5] = v30;
    v59 = v11;
  }
  if (a8 < 2)
  {
    if (v57 != 2)
      goto LABEL_31;
  }
  else
  {
    v35 = v11[2];
    v34 = v11[3];
    if (v35 >= v34 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v34 > 1), v35 + 1, 1, v11);
    v11[2] = v35 + 1;
    v36 = &v11[2 * v35];
    v36[4] = 0xD000000000000019;
    v36[5] = 0x80000001BB977890;
    v59 = v11;
    if (v57 != 2)
    {
LABEL_31:
      if ((v57 & 1) != 0)
        v37 = &unk_1E7269C20;
      else
        v37 = &unk_1E7269BF0;
      v38 = sub_1BA862444((uint64_t)v37);
      swift_arrayDestroy();
      sub_1BA67FB48(v38);
      if (!a11)
        goto LABEL_35;
      goto LABEL_38;
    }
  }
  if (!a11)
  {
LABEL_35:
    v39 = v59;
    goto LABEL_46;
  }
LABEL_38:
  v40 = a10 & 0xFFFFFFFFFFFFLL;
  if ((a11 & 0x2000000000000000) != 0)
    v40 = HIBYTE(a11) & 0xF;
  v39 = v59;
  if (v40)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v39 = sub_1BA6EA0D0(0, v59[2] + 1, 1, v59);
    v42 = v39[2];
    v41 = v39[3];
    if (v42 >= v41 >> 1)
      v39 = sub_1BA6EA0D0((_QWORD *)(v41 > 1), v42 + 1, 1, v39);
    v39[2] = v42 + 1;
    v43 = &v39[2 * v42];
    v43[4] = 0xD000000000000032;
    v43[5] = 0x80000001BB977850;
  }
LABEL_46:
  v44 = sub_1BA6E43EC((uint64_t)v39);
  swift_bridgeObjectRelease();
  return v44;
}

unint64_t sub_1BB05C0E0()
{
  unint64_t result;

  result = qword_1EF2BA0A0;
  if (!qword_1EF2BA0A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SubscriptionActivationEligibility, &type metadata for SubscriptionActivationEligibility);
    atomic_store(result, (unint64_t *)&qword_1EF2BA0A0);
  }
  return result;
}

unint64_t sub_1BB05C124(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05C148();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB05C148()
{
  unint64_t result;

  result = qword_1EF2BA0A8;
  if (!qword_1EF2BA0A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPaywall, &type metadata for FeedPaywall);
    atomic_store(result, (unint64_t *)&qword_1EF2BA0A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriptionActivationEligibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB05C1D8 + 4 * byte_1BB8E5CB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB05C20C + 4 * byte_1BB8E5CB0[v4]))();
}

uint64_t sub_1BB05C20C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05C214(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB05C21CLL);
  return result;
}

uint64_t sub_1BB05C228(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB05C230);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB05C234(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05C23C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionActivationEligibility()
{
  return &type metadata for SubscriptionActivationEligibility;
}

unint64_t destroy for FeedPaywall(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 240);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for FeedPaywall(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v15;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v12 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v12;
  v15 = (_QWORD *)(a2 + 232);
  v13 = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 >= 0x11)
  {
    *(_QWORD *)(a1 + 232) = *v15;
    *(_QWORD *)(a1 + 240) = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 232) = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t assignWithCopy for FeedPaywall(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v4;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v5 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v5;
  v6 = *(_QWORD *)(a2 + 240);
  if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
  {
    if (v6 >= 0x11)
    {
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68(a1 + 232);
    goto LABEL_6;
  }
  if (v6 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    return a1;
  }
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FeedPaywall(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v13;
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v14 = (_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
  {
    v15 = *(_QWORD *)(a2 + 240);
    if (v15 >= 0x11)
    {
      *(_QWORD *)(a1 + 232) = *v14;
      *(_QWORD *)(a1 + 240) = v15;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68(a1 + 232);
  }
  *(_OWORD *)(a1 + 232) = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPaywall(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 248))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPaywall(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 248) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 248) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPaywall()
{
  return &type metadata for FeedPaywall;
}

ValueMetadata *type metadata accessor for FeedPaywallButton()
{
  return &type metadata for FeedPaywallButton;
}

uint64_t dispatch thunk of FormatError.errorDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FormatError.errorHint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id sub_1BB05C8C0()
{
  id result;

  result = sub_1BA4D7C14(0xD00000000000001ALL, 0x80000001BB9779C0);
  qword_1ED4763C8 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for FeedConfigCoderFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1BB05C914(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRetain();
      sub_1BA67035C(a2);
LABEL_3:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BB05C988(uint64_t a1)
{
  return sub_1BB05C99C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1BB05C99C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1BA5B18CC(a2);
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BB05CA10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB05C914(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1BB05CA70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB05C914(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BB05C99C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1BB05CAE0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BB05C99C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1BB05CB28(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1BB05CB70(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB05CBB8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 5u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1BB05CBD0(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

uint64_t type metadata accessor for FeedServiceError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedServiceError);
}

uint64_t FormatBindExpression.init(identifier:kinds:count:traits:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t FormatBindExpression.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindExpression.kinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBindExpression.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FormatBindExpression.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBindExpression.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatBindExpression.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBindExpression.kinds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatBindExpression.kinds.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBindExpression.count.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*FormatBindExpression.count.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBindExpression.traits.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatBindExpression.traits.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed20FormatBindExpressionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  char v10;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1BB874398() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1BA857E18(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0 || v4 != v6)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1BA88E0F8(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

unint64_t sub_1BB05CEC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05CEEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB05CEEC()
{
  unint64_t result;

  result = qword_1EF2BA148;
  if (!qword_1EF2BA148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindExpression, &type metadata for FormatBindExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BA148);
  }
  return result;
}

unint64_t sub_1BB05CF30(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6751E4();
  a1[2] = sub_1BA652844();
  result = sub_1BB05CF64();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB05CF64()
{
  unint64_t result;

  result = qword_1EF2BA150;
  if (!qword_1EF2BA150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindExpression, &type metadata for FormatBindExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BA150);
  }
  return result;
}

uint64_t sub_1BB05CFA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB05CFB4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BB05CFF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB05D000(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1BB05D040@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 24);
  return result;
}

_QWORD *sub_1BB05D04C(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 24) = *result;
  return result;
}

uint64_t sub_1BB05D058@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB05D064(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

_QWORD *assignWithCopy for FormatBindExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatBindExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindExpression()
{
  return &type metadata for FormatBindExpression;
}

uint64_t sub_1BB05D18C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedDataVisualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatPaywallBinding.Bool.BOOL(from:)(uint64_t a1)
{
  _BYTE *v1;

  if (!*v1)
    return *(unsigned __int8 *)(a1 + 48);
  if (*v1 == 1)
    return *(unsigned __int8 *)(a1 + 49);
  return *(_QWORD *)(a1 + 56) > 1;
}

unint64_t sub_1BB05D200(char a1)
{
  unint64_t result;

  result = 0xD000000000000019;
  if (a1 == 1)
    return 0xD000000000000014;
  return result;
}

uint64_t sub_1BB05D25C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FAEE4(*a1, *a2);
}

uint64_t sub_1BB05D268()
{
  return sub_1BA8D3D94();
}

uint64_t sub_1BB05D270()
{
  return sub_1BA9D3084();
}

uint64_t sub_1BB05D278()
{
  return sub_1BAB09AFC();
}

uint64_t sub_1BB05D280@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB05D724();
  *a1 = result;
  return result;
}

unint64_t sub_1BB05D2AC@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1BB05D200(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB05D2D4()
{
  sub_1BB05D6E0();
  return sub_1BB872D60();
}

uint64_t sub_1BB05D330()
{
  sub_1BB05D6E0();
  return sub_1BB872D0C();
}

void sub_1BB05D37C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251EF8;
}

BOOL static FormatPaywallBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPaywallBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPaywallBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB05D410()
{
  unint64_t result;

  result = qword_1EF2BA158;
  if (!qword_1EF2BA158)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Bool, &type metadata for FormatPaywallBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2BA158);
  }
  return result;
}

unint64_t sub_1BB05D454(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05D478();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB05D478()
{
  unint64_t result;

  result = qword_1EF2BA160;
  if (!qword_1EF2BA160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Bool, &type metadata for FormatPaywallBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2BA160);
  }
  return result;
}

unint64_t sub_1BB05D4BC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE9527C();
  a1[2] = sub_1BAEF2E18();
  result = sub_1BB05D410();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB05D4F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPaywallBinding.Bool.init(from:)(a1, a2);
}

uint64_t sub_1BB05D504(_QWORD *a1)
{
  return FormatPaywallBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPaywallBinding.Bool()
{
  return &type metadata for FormatPaywallBinding.Bool;
}

uint64_t _s4BoolOwst_2_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB05D578 + 4 * byte_1BB8E601D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB05D5AC + 4 * asc_1BB8E6018[v4]))();
}

uint64_t sub_1BB05D5AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05D5B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB05D5BCLL);
  return result;
}

uint64_t sub_1BB05D5C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB05D5D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB05D5D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05D5DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_2()
{
  return &_s4BoolO10CodingTypeON_2;
}

unint64_t sub_1BB05D5FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BA168;
  if (!qword_1EF2BA168)
  {
    sub_1BB05D644();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BA168);
  }
  return result;
}

void sub_1BB05D644()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BA170)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BA170);
  }
}

unint64_t sub_1BB05D69C()
{
  unint64_t result;

  result = qword_1EF2BA178;
  if (!qword_1EF2BA178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6220, &_s4BoolO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2BA178);
  }
  return result;
}

unint64_t sub_1BB05D6E0()
{
  unint64_t result;

  result = qword_1EF2BA180;
  if (!qword_1EF2BA180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E61A8, &_s4BoolO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2BA180);
  }
  return result;
}

uint64_t sub_1BB05D724()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

char *sub_1BB05D76C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  objc_class *ObjectType;
  id v50;
  objc_super v51;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v12 = v4;
  v13 = objc_msgSend(v11, sel_init);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E0DC1420]);
  objc_msgSend(v13, sel_setFont_, v15);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v5[v10] = v13;
  v16 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v18 = objc_msgSend(v14, sel_systemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1440]);
  objc_msgSend(v17, sel_setFont_, v18);

  v19 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v17, sel_setTextColor_, v19);

  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v12[v16] = v17;

  v51.receiver = v12;
  v51.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v51, sel_initWithFrame_, a1, a2, a3, a4);
  v21 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel;
  v22 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel];
  v23 = v20;
  objc_msgSend(v23, sel_addSubview_, v22);
  v24 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel;
  objc_msgSend(v23, sel_addSubview_, *(_QWORD *)&v23[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel]);
  v50 = (id)objc_opt_self();
  sub_1BA65E330();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB882990;
  v26 = objc_msgSend(v22, sel_topAnchor);
  v27 = objc_msgSend(v23, (SEL)&selRef_setContentsGravity_ + 4);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 8.0);

  *(_QWORD *)(v25 + 32) = v28;
  v29 = objc_msgSend(*(id *)&v20[v21], sel_leadingAnchor);
  v30 = objc_msgSend(v23, (SEL)&selRef_absoluteTimeInterval + 6);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, 4.0);

  *(_QWORD *)(v25 + 40) = v31;
  v32 = objc_msgSend(*(id *)&v20[v21], sel_trailingAnchor);
  v33 = objc_msgSend(v23, sel_trailingAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -16.0);

  *(_QWORD *)(v25 + 48) = v34;
  v35 = objc_msgSend(*(id *)&v23[v24], sel_topAnchor);
  v36 = objc_msgSend(*(id *)&v20[v21], sel_bottomAnchor);
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, 2.0);

  *(_QWORD *)(v25 + 56) = v37;
  v38 = objc_msgSend(*(id *)&v23[v24], sel_leadingAnchor);
  v39 = objc_msgSend(v23, sel_leadingAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, 4.0);

  *(_QWORD *)(v25 + 64) = v40;
  v41 = objc_msgSend(*(id *)&v23[v24], sel_trailingAnchor);
  v42 = objc_msgSend(v23, sel_trailingAnchor);
  v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v42, -16.0);

  *(_QWORD *)(v25 + 72) = v43;
  v44 = objc_msgSend(*(id *)&v23[v24], sel_bottomAnchor);
  v45 = objc_msgSend(v23, sel_bottomAnchor);
  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, -8.0);

  *(_QWORD *)(v25 + 80) = v46;
  sub_1BB872DCC();
  sub_1BAA659B8();
  v47 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v47);

  return v23;
}

id sub_1BB05DCD8(void *a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_class *ObjectType;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v4 = v1;
  v5 = objc_msgSend(v3, sel_init);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E0DC1420]);
  objc_msgSend(v5, sel_setFont_, v7);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v2] = v5;
  v8 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v10 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1440]);
  objc_msgSend(v9, sel_setFont_, v10);

  v11 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v9, sel_setTextColor_, v11);

  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v4[v8] = v9;

  v16.receiver = v4;
  v16.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v16, sel_initWithCoder_, a1);

  return v12;
}

uint64_t type metadata accessor for DebugPersonalizationHeaderView()
{
  return objc_opt_self();
}

void sub_1BB05DF18()
{
  sub_1BB05DF74((unint64_t *)&unk_1EF2CD090, (uint64_t)&unk_1BB8E62C8);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB05DF50()
{
  return sub_1BB05DF74(&qword_1EF2BA1C0, (uint64_t)&unk_1BB8E6290);
}

uint64_t sub_1BB05DF74(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugPersonalizationHeaderView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static FormatIssueCoverBinding.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if ((*a1 & 1) != 0)
  {
    if ((*a2 & 1) == 0)
      return 0;
  }
  else if ((*a2 & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BB05DFD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05DFF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB05DFF8()
{
  unint64_t result;

  result = qword_1EF2BA1C8;
  if (!qword_1EF2BA1C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverBinding, &type metadata for FormatIssueCoverBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1C8);
  }
  return result;
}

unint64_t sub_1BB05E03C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4E4868();
  a1[2] = sub_1BA8293C0();
  result = sub_1BB05E070();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB05E070()
{
  unint64_t result;

  result = qword_1EF2BA1D0;
  if (!qword_1EF2BA1D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverBinding, &type metadata for FormatIssueCoverBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueCoverBinding()
{
  return &type metadata for FormatIssueCoverBinding;
}

double FormatShadow.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 FormatShadow.init(radius:opacity:offset:color:motion:)@<Q0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, float a6@<S1>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  __n128 result;
  __int128 v10;

  v6 = *a2;
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_BYTE *)(a3 + 40);
  *(double *)a4 = a5;
  *(float *)(a4 + 8) = a6;
  *(_OWORD *)(a4 + 16) = *a1;
  *(_QWORD *)(a4 + 32) = v6;
  result = *(__n128 *)a3;
  v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 56) = v10;
  *(_QWORD *)(a4 + 72) = v7;
  *(_BYTE *)(a4 + 80) = v8;
  return result;
}

float FormatShadow.opacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

__n128 FormatShadow.offset.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[1];
  *a1 = result;
  return result;
}

void FormatShadow.Offset.init(height:width:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

double FormatShadow.Offset.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void FormatShadow.radius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FormatShadow.radius.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatShadow.opacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*FormatShadow.opacity.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 FormatShadow.offset.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*FormatShadow.offset.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatShadow.color.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_release();
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*FormatShadow.color.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 FormatShadow.motion.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_BYTE *)(v1 + 80);
  result = *(__n128 *)(v1 + 40);
  v5 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  return result;
}

BOOL static FormatShadow.Offset.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double _s8NewsFeed12FormatShadowV6OffsetV4zeroAEvgZ_0@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_1ED3C1168 != -1)
    swift_once();
  result = *(double *)&xmmword_1ED3D25A0;
  *a1 = xmmword_1ED3D25A0;
  return result;
}

BOOL static FormatCodingZeroOffsetStrategy.shouldEncode(wrappedValue:)(double *a1)
{
  double v1;
  double v2;

  v1 = *a1;
  v2 = a1[1];
  if (qword_1ED3C1168 != -1)
    swift_once();
  return v2 != *((double *)&xmmword_1ED3D25A0 + 1) || v1 != *(double *)&xmmword_1ED3D25A0;
}

BOOL sub_1BB05E2C0(double *a1)
{
  double v1;
  double v2;

  v1 = *a1;
  v2 = a1[1];
  if (qword_1ED3C1168 != -1)
    swift_once();
  return v2 != *((double *)&xmmword_1ED3D25A0 + 1) || v1 != *(double *)&xmmword_1ED3D25A0;
}

uint64_t _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  char v10;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16[2];
  uint64_t v17;
  char v18;
  __n128 v19[2];
  uint64_t v20;
  char v21;

  if (*(double *)a1 != *(double *)a2
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24))
  {
    return 0;
  }
  v14 = *(__n128 *)(a1 + 56);
  v15 = *(__n128 *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(unsigned __int8 *)(a1 + 80);
  v12 = *(__n128 *)(a2 + 56);
  v13 = *(__n128 *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(unsigned __int8 *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 32);
  v19[0].n128_u64[0] = *(_QWORD *)(a1 + 32);
  v16[0].n128_u64[0] = v9;
  static FormatColor.== infix(_:_:)((uint64_t)v19);
  if ((v10 & 1) == 0)
    return 0;
  if (v6 == 255)
  {
    if (v8 != 255)
      return 0;
  }
  else
  {
    v19[0] = v15;
    v19[1] = v14;
    v20 = v5;
    v21 = v6;
    if (v8 == 255)
      return 0;
    v16[0] = v13;
    v16[1] = v12;
    v17 = v7;
    v18 = v8;
    if ((_s8NewsFeed12FormatMotionO2eeoiySbAC_ACtFZ_0(v19, v16) & 1) == 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1BB05E418(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05E43C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB05E43C()
{
  unint64_t result;

  result = qword_1EF2BA1D8;
  if (!qword_1EF2BA1D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow.Offset, &type metadata for FormatShadow.Offset);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1D8);
  }
  return result;
}

uint64_t sub_1BB05E480(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA58DEF0, (uint64_t (*)(void))sub_1BA5BD86C, (uint64_t (*)(void))sub_1BB05E49C);
}

unint64_t sub_1BB05E49C()
{
  unint64_t result;

  result = qword_1EF2BA1E0;
  if (!qword_1EF2BA1E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow.Offset, &type metadata for FormatShadow.Offset);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1E0);
  }
  return result;
}

unint64_t sub_1BB05E4E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05E504();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB05E504()
{
  unint64_t result;

  result = qword_1EF2BA1E8;
  if (!qword_1EF2BA1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow, &type metadata for FormatShadow);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1E8);
  }
  return result;
}

uint64_t sub_1BB05E548(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA69C080, (uint64_t (*)(void))sub_1BA796C88, (uint64_t (*)(void))sub_1BB05E564);
}

unint64_t sub_1BB05E564()
{
  unint64_t result;

  result = qword_1EF2BA1F0;
  if (!qword_1EF2BA1F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow, &type metadata for FormatShadow);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1F0);
  }
  return result;
}

unint64_t sub_1BB05E5A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB05E5CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB05E5CC()
{
  unint64_t result;

  result = qword_1EF2BA1F8;
  if (!qword_1EF2BA1F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingZeroOffsetStrategy, &type metadata for FormatCodingZeroOffsetStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2BA1F8);
  }
  return result;
}

double sub_1BB05E618@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

double sub_1BB05E624(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

float sub_1BB05E630@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 8);
  *a2 = result;
  return result;
}

float sub_1BB05E63C(float *a1, uint64_t a2)
{
  float result;

  result = *a1;
  *(float *)(a2 + 8) = *a1;
  return result;
}

__n128 sub_1BB05E648@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[1];
  *a2 = result;
  return result;
}

__n128 sub_1BB05E654(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1] = *a1;
  return result;
}

uint64_t sub_1BB05E660@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_retain();
}

uint64_t sub_1BB05E670(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t destroy for FormatShadow()
{
  return swift_release();
}

uint64_t initializeWithCopy for FormatShadow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatShadow(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  v4 = *(_OWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithTake for FormatShadow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  return a1;
}

ValueMetadata *type metadata accessor for FormatShadow()
{
  return &type metadata for FormatShadow;
}

ValueMetadata *type metadata accessor for FormatShadow.Offset()
{
  return &type metadata for FormatShadow.Offset;
}

ValueMetadata *type metadata accessor for FormatCodingZeroOffsetStrategy()
{
  return &type metadata for FormatCodingZeroOffsetStrategy;
}

_QWORD *sub_1BB05E83C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  _QWORD *v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t inited;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char v56;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v46 = *(_QWORD *)(a1 + 48);
  v47 = *(_QWORD *)(a1 + 40);
  v44 = *(_QWORD *)(a1 + 64);
  v45 = *(_QWORD *)(a1 + 56);
  v43 = *(_QWORD *)(a1 + 72);
  v6 = *(unsigned __int8 *)(a1 + 80);
  v42 = v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v7);
  sub_1BA8C88C8(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  v13 = v6 == 254;
  *(_OWORD *)(v12 + 16) = xmmword_1BB8827B0;
  v14 = (_QWORD *)(v12 + v11);
  v50 = v2;
  v51 = v1;
  if (v6 == 254)
    v15 = 0;
  else
    v15 = v1;
  if (v6 == 254)
    v16 = 0;
  else
    v16 = v2;
  v17 = 0xF000000000000007;
  v48 = v5;
  if (v6 != 254)
    v17 = v5;
  v41 = v17;
  if (v6 == 254)
    v18 = 0;
  else
    v18 = v4;
  v49 = v3;
  if (v6 == 254)
    v3 = 0;
  sub_1BAAF3A18(0x737569646152, 0xE600000000000000, v15, v6 == 254, v14);
  v19 = type metadata accessor for FormatInspectionItem(0);
  v20 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v14, 0, 1, v19);
  LOBYTE(v53) = v13;
  sub_1BAAFA30C(0x7974696361704FLL, 0xE700000000000000, v16 | ((unint64_t)v13 << 32), (_QWORD *)((char *)v14 + v10));
  v20((_QWORD *)((char *)v14 + v10), 0, 1, v19);
  sub_1BAAFA530(0x74657366664FLL, 0xE600000000000000, v18, v3, v13, (_QWORD *)((char *)v14 + 2 * v10));
  v20((_QWORD *)((char *)v14 + 2 * v10), 0, 1, v19);
  sub_1BAAF7724(0x726F6C6F43, 0xE500000000000000, v41, (_QWORD *)((char *)v14 + 3 * v10));
  v20((_QWORD *)((char *)v14 + 3 * v10), 0, 1, v19);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  if (v42 == 254)
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = -1;
    v29 = v46;
    v28 = v47;
    v31 = v44;
    v30 = v45;
    v32 = v43;
  }
  else
  {
    v29 = v46;
    v28 = v47;
    v22 = v47;
    v23 = v46;
    v31 = v44;
    v30 = v45;
    v24 = v45;
    v25 = v44;
    v32 = v43;
    v26 = v43;
    v27 = v42;
  }
  *(_QWORD *)&v53 = v22;
  *((_QWORD *)&v53 + 1) = v23;
  v33 = (_QWORD *)((char *)v14 + 4 * v10);
  *(_QWORD *)&v54 = v24;
  *((_QWORD *)&v54 + 1) = v25;
  v55 = v26;
  v56 = v27;
  sub_1BA6E8A48(v51, v50, v49, v4, v48, v28, v29, v30, v31, v32, v42);
  v34 = sub_1BB102EBC((uint64_t)&v53);
  *(_QWORD *)(v21 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v21 + 64) = &off_1E7335C38;
  *(_QWORD *)(v21 + 32) = v34;
  v35 = sub_1BA9747FC(v21);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v36 = sub_1BB6DF010(v35);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0xD000000000000013, 0x80000001BB977A50, (uint64_t)v36, 0, 0, v33);
  v20(v33, 0, 1, v19);
  sub_1BAF89090(0x776F64616853, 0xE600000000000000, 0, 0, v12, &v53);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v37 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v37;
  *(_QWORD *)(v37 + 48) = v55;
  v38 = v54;
  *(_OWORD *)(v37 + 16) = v53;
  *(_OWORD *)(v37 + 32) = v38;
  v39 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v39;
}

uint64_t sub_1BB05ECA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id StubImageDownloader.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StubImageDownloader.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StubImageDownloader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.__allocating_init(layoutAttributes:style:resizing:contextLayoutOptions:zIndex:pinTrait:rubberbandTrait:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  v17 = *a3;
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = a4;
  *(_QWORD *)(v16 + 48) = a5;
  *(_BYTE *)(v16 + 56) = a6 & 1;
  sub_1BA5D5518(a7, v16 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA5D5518(a8, v16 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  return v16;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.pinTrait.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, a1, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.rubberbandTrait.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, a1, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.init(layoutAttributes:style:resizing:contextLayoutOptions:zIndex:pinTrait:rubberbandTrait:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  v10 = *a3;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_BYTE *)(v8 + 56) = a6 & 1;
  sub_1BA5D5518(a7, v8 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA5D5518(a8, v8 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  return v8;
}

double FormatSupplementaryNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.layoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.accessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatSupplementaryNodeLayoutAttributes.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + 128);
}

uint64_t sub_1BB05F048(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB05F080 + 4 * byte_1BB8E6640[a1]))(0xD000000000000010, 0x80000001BB965740);
}

uint64_t sub_1BB05F080()
{
  return 0x656C797473;
}

uint64_t sub_1BB05F094()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB05F0AC(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_1BB05F0C4()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB05F0D8()
{
  return 0x74696172546E6970;
}

uint64_t sub_1BB05F0F0()
{
  return 0x6162726562627572;
}

uint64_t sub_1BB05F114()
{
  unsigned __int8 *v0;

  return sub_1BB05F048(*v0);
}

uint64_t sub_1BB05F11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0600B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB05F140()
{
  sub_1BB05F524();
  return sub_1BB874710();
}

uint64_t sub_1BB05F168()
{
  sub_1BB05F524();
  return sub_1BB87471C();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  return v0;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BB05FB10(0, &qword_1EF2BA288, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB05F524();
  sub_1BB8746C8();
  v12 = v3[2];
  HIBYTE(v11) = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA4A2870(&qword_1ED3C9F28, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = v3[3];
    HIBYTE(v11) = 1;
    type metadata accessor for FormatSupplementaryNodeStyle();
    sub_1BA4A2870(&qword_1ED3A8470, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeStyle);
    sub_1BB87414C();
    v12 = v3[4];
    HIBYTE(v11) = 2;
    sub_1BA994B40();
    sub_1BB87414C();
    v12 = v3[5];
    HIBYTE(v11) = 3;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA4A2870(&qword_1EF2AC0C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    LOBYTE(v12) = 4;
    sub_1BB874140();
    LOBYTE(v12) = 5;
    sub_1BB870FA8();
    sub_1BA4A2870(&qword_1EF2BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640], MEMORY[0x1E0DBB650]);
    sub_1BB87414C();
    LOBYTE(v12) = 6;
    sub_1BB871200();
    sub_1BA4A2870(&qword_1EF2BA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8], MEMORY[0x1E0DBBEC8]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB05F524()
{
  unint64_t result;

  result = qword_1EF2BA290;
  if (!qword_1EF2BA290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E68CC, &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA290);
  }
  return result;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatSupplementaryNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

_QWORD *FormatSupplementaryNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[2];
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v2 = v1;
  v27 = *v1;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - v5;
  sub_1BA4A3FB4(0, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - v8;
  sub_1BB05FB10(0, &qword_1EF2BA2A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v25 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB05F524();
  v24 = v13;
  v14 = v26;
  sub_1BB87468C();
  if (v14)
  {
    swift_deallocPartialClassInstance();
    v21 = (uint64_t)a1;
  }
  else
  {
    v23 = v9;
    v26 = v11;
    type metadata accessor for FormatLayoutAttributes();
    v28 = 0;
    sub_1BA4A2870(&qword_1ED3C9F30, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v15 = v25;
    v16 = v24;
    sub_1BB8740D4();
    v2[2] = v29;
    type metadata accessor for FormatSupplementaryNodeStyle();
    v28 = 1;
    sub_1BA4A2870(&qword_1ED3CC718, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeStyle);
    sub_1BB874068();
    v2[3] = v29;
    v28 = 2;
    sub_1BA995268();
    sub_1BB874068();
    v2[4] = v29;
    type metadata accessor for FormatContextLayoutOptions();
    v28 = 3;
    sub_1BA4A2870(&qword_1EF2AC0F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    v22[1] = 0;
    sub_1BB8740D4();
    v2[5] = v29;
    LOBYTE(v29) = 4;
    v17 = sub_1BB874050();
    v22[0] = a1;
    v2[6] = v17;
    *((_BYTE *)v2 + 56) = v18 & 1;
    sub_1BB870FA8();
    LOBYTE(v29) = 5;
    sub_1BA4A2870(&qword_1EF2BA2B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640], MEMORY[0x1E0DBB658]);
    v19 = (uint64_t)v23;
    sub_1BB874068();
    sub_1BA5D5518(v19, (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
    sub_1BB871200();
    LOBYTE(v29) = 6;
    sub_1BA4A2870(&qword_1EF2BA2B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBBEB8], MEMORY[0x1E0DBBED0]);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v15);
    sub_1BA5D5518((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
    v21 = v22[0];
  }
  __swift_destroy_boxed_opaque_existential_1(v21);
  return v2;
}

void sub_1BB05FB10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB05F524();
    v7 = a3(a1, &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1BB05FB6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatSupplementaryNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB05FBC0(_QWORD *a1)
{
  return FormatSupplementaryNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB05FBE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FormatSupplementaryNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD v16[2];

  v1 = v0;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v16 - v3;
  sub_1BA4A3FB4(0, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v16 - v6;
  v16[0] = *(_QWORD *)(v0 + 16);
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA4A2870(&qword_1ED3C9F20, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB86D96C();
  v8 = v16[1];
  v10 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v13 = *(_BYTE *)(v1 + 56);
  sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, (uint64_t)v7, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (uint64_t)v4, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v10;
  *(_QWORD *)(v14 + 32) = v9;
  *(_QWORD *)(v14 + 40) = v12;
  *(_QWORD *)(v14 + 48) = v11;
  *(_BYTE *)(v14 + 56) = v13;
  sub_1BA5D5518((uint64_t)v7, v14 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA5D5518((uint64_t)v4, v14 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  swift_retain();
  swift_retain();
  swift_retain();
  return v14;
}

uint64_t sub_1BB05FE24()
{
  return sub_1BA4A2870(&qword_1EF2BA2C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1BB05FE50()
{
  return sub_1BA4A2870(&qword_1EF2BA2C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1BB05FE7C()
{
  return sub_1BA4A2870(&qword_1EF2BA2D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1BB05FEA8()
{
  return sub_1BA4A2870(&qword_1EF2BA2D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1BB05FED4()
{
  return type metadata accessor for FormatSupplementaryNodeLayoutAttributes();
}

uint64_t method lookup function for FormatSupplementaryNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSupplementaryNodeLayoutAttributes.__allocating_init(layoutAttributes:style:resizing:contextLayoutOptions:zIndex:pinTrait:rubberbandTrait:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 136))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of FormatSupplementaryNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t storeEnumTagSinglePayload for FormatSupplementaryNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB05FF58 + 4 * byte_1BB8E664C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB05FF8C + 4 * byte_1BB8E6647[v4]))();
}

uint64_t sub_1BB05FF8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05FF94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB05FF9CLL);
  return result;
}

uint64_t sub_1BB05FFA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB05FFB0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB05FFB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB05FFBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB05FFDC()
{
  unint64_t result;

  result = qword_1EF2BA2E0;
  if (!qword_1EF2BA2E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E68A4, &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA2E0);
  }
  return result;
}

unint64_t sub_1BB060024()
{
  unint64_t result;

  result = qword_1EF2BA2E8;
  if (!qword_1EF2BA2E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6814, &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA2E8);
  }
  return result;
}

unint64_t sub_1BB06006C()
{
  unint64_t result;

  result = qword_1EF2BA2F0;
  if (!qword_1EF2BA2F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E683C, &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA2F0);
  }
  return result;
}

uint64_t sub_1BB0600B0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB965740 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74696172546E6970 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6162726562627572 && a2 == 0xEF7469617254646ELL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t getEnumTagSinglePayload for WebEmbedDataVisualizationURLDataSourceContentType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

ValueMetadata *type metadata accessor for FormatCodingKeys()
{
  return &type metadata for FormatCodingKeys;
}

uint64_t sub_1BB060404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1BB0604AC(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

double sub_1BB060428@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB8E2880;
  return result;
}

uint64_t sub_1BB060438()
{
  sub_1BA6B8518();
  return sub_1BB874710();
}

uint64_t sub_1BB060460()
{
  sub_1BA6B8518();
  return sub_1BB87471C();
}

unint64_t sub_1BB060488(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA6B8518();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB0604AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  uint64_t v4;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2
    || (v4 = a1, (sub_1BB874398() & 1) != 0)
    || v4 == 1635017060 && a2 == 0xE400000000000000
    || (sub_1BB874398() & 1) != 0
    || v4 == 0x617461646174656DLL && a2 == 0xE800000000000000
    || (sub_1BB874398() & 1) != 0
    || v4 == 1885433183 && a2 == 0xE400000000000000
    || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_1BB06063C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t inited;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _BYTE v25[48];

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v25[-v8];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v25[-v11];
  v13 = type metadata accessor for FormatDerivedDataBindingItemResult();
  sub_1BAA44168((uint64_t)a1 + *(int *)(v13 + 20), (uint64_t)v12);
  v14 = type metadata accessor for FormatSlotDefinitionItemSet();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
  sub_1BAA441BC((uint64_t)v12);
  if (v16 == 1)
  {
    sub_1BB060880();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v18 = *a1;
    v19 = a1[1];
    *(_QWORD *)(inited + 32) = *a1;
    *(_QWORD *)(inited + 40) = v19;
    sub_1BA682148(v18, v19);
    v20 = sub_1BA8639BC(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v21 = (char *)v6 + *(int *)(v14 + 36);
    v22 = sub_1BB86E710();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v23 = MEMORY[0x1E0DEE9D8];
    *v6 = 0x100000001;
    v6[1] = v20;
    v6[2] = v23;
    v6[3] = 0;
    v6[4] = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
    sub_1BB41F6DC(v1, (uint64_t)v6, (uint64_t)v9);
    result = sub_1BAA441BC((uint64_t)v6);
    if (!v2)
      return sub_1BAA442C4((uint64_t)v9, v1);
  }
  else
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

void sub_1BB060880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C0550)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C0550);
  }
}

uint64_t *sub_1BB0608D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for FormatSlotDefinitionItemSet();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      v11 = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11)
      {
        v12 = a2[4];
        a1[3] = v11;
        a1[4] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      }
      v13 = *(int *)(v7 + 36);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1BB86E710();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1BB060A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for FormatSlotDefinitionItemSet();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v4 = a1 + *(int *)(v2 + 36);
    v5 = sub_1BB86E710();
    v6 = *(_QWORD *)(v5 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_1BB060B44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      v9 = a2[4];
      a1[3] = v8;
      a1[4] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    }
    v10 = *(int *)(v4 + 36);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1BB86E710();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_1BB060CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;

  v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BAA44288(a1);
      goto LABEL_7;
    }
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(a1 + 24))
    {
      if (v13)
      {
        *(_QWORD *)(a1 + 24) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        v21 = *(int *)(v4 + 36);
        v22 = (void *)(a1 + v21);
        a2 += v21;
        v23 = sub_1BB86E710();
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
        v26 = v25(v22, 1, v23);
        v27 = v25((void *)a2, 1, v23);
        if (v26)
        {
          if (!v27)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v24 + 16))(v22, a2, v23);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
            return a1;
          }
        }
        else
        {
          if (!v27)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v24 + 24))(v22, a2, v23);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v24 + 8))(v22, v23);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v11 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
        v12 = v22;
        goto LABEL_8;
      }
      sub_1BAA44B5C(a1 + 24);
    }
    else if (v13)
    {
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
    v12 = (void *)a1;
LABEL_8:
    memcpy(v12, (const void *)a2, v11);
    return a1;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  v14 = *(int *)(v4 + 36);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_1BB86E710();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

_QWORD *sub_1BB061014(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    v7 = *(int *)(v4 + 36);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86E710();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1BB061168(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BAA44288((uint64_t)a1);
      goto LABEL_7;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRelease();
    v18 = a2[3];
    if (a1[3])
    {
      if (v18)
      {
        a1[3] = v18;
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        swift_bridgeObjectRelease();
LABEL_17:
        v20 = *(int *)(v4 + 36);
        v21 = (char *)a1 + v20;
        a2 = (_QWORD *)((char *)a2 + v20);
        v22 = sub_1BB86E710();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
        v25 = v24(v21, 1, v22);
        v26 = v24((char *)a2, 1, v22);
        if (v25)
        {
          if (!v26)
          {
            (*(void (**)(char *, _QWORD *, uint64_t))(v23 + 32))(v21, a2, v22);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
            return a1;
          }
        }
        else
        {
          if (!v26)
          {
            (*(void (**)(char *, _QWORD *, uint64_t))(v23 + 40))(v21, a2, v22);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v16 = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64);
        v17 = v21;
        goto LABEL_8;
      }
      sub_1BAA44B5C((uint64_t)(a1 + 3));
    }
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
    v17 = (char *)a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  *a1 = *a2;
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v9 = *(int *)(v4 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1BB061418()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB061424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB061470()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB06147C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatDerivedDataBindingAuxiliaryResult()
{
  uint64_t result;

  result = qword_1EF2BA350;
  if (!qword_1EF2BA350)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB061508()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

BOOL static SportsEmbedConfigurationManager.RequestKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SportsEmbedConfigurationManager.RequestKind.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SportsEmbedConfigurationManager.RequestKind.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t SportsEmbedConfigurationManager.embedConfiguration(for:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)())((char *)sub_1BB06161C + 4 * byte_1BB8E6A30[*a1]))();
}

uint64_t sub_1BB061638()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB061710()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB0617E8()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB0618C0()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB061998()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB061A70()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB061B48()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BB06312C(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB061C20()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch box score configuration resource", 78, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB061D70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB061E1C(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB061EC8(uint64_t a1)
{
  return sub_1BB062F18(a1, "Sports embed configuration manager failed to create sports box scores configuration; error=%{public}@",
           101);
}

uint64_t sub_1BB061ED8()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch bracket configuration resource", 76, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB062028(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB0620D4(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB062180(uint64_t a1)
{
  return sub_1BB062F18(a1, "Sports embed configuration manager failed to create sports bracket configuration; error=%{public}@",
           98);
}

uint64_t sub_1BB062190()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch key player configuration resource", 79, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB0622E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB06238C(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB062438(uint64_t a1)
{
  return sub_1BB062F18(a1, "Sports embed configuration manager failed to create sports key player configuration; error=%{public}@",
           101);
}

uint64_t sub_1BB062448()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch line score configuration resource", 79, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB062598(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB062644(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB0626F0()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch injury report configuration resource", 82, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB062840(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB0628EC(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB062998(uint64_t a1)
{
  return sub_1BB062F18(a1, "Sports embed configuration manager failed to create sports injury reports configuration; error=%{public}@",
           105);
}

uint64_t sub_1BB0629A8()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch standing configuration resource", 77, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB062AF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB062BA4(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB062C50(uint64_t a1)
{
  return sub_1BB062F18(a1, "Sports embed configuration manager failed to create sports standing configuration; error=%{public}@",
           99);
}

uint64_t sub_1BB062C60()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v0 = (id)qword_1ED476750;
  v1 = sub_1BB87330C();
  sub_1BB86EF44("Sports embed configuration manager will fetch score configuration resource", 74, 2, &dword_1BA493000, v0, v1, MEMORY[0x1E0DEE9D8]);

  sub_1BB86EC14();
  v2 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();

  v3 = (void *)sub_1BB86E854();
  sub_1BB86EA28();
  swift_release();

  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E9A4();
  swift_release();

  return v5;
}

uint64_t sub_1BB062DB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1BAA32174(&v5, &v3);
  v1 = v3;
  v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v3 = v1;
  sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB062E5C(void *a1)
{
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1BA8248D4(0, &qword_1ED3A3A58, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return (id)sub_1BB86E9E0();
  }
}

uint64_t sub_1BB062F08(uint64_t a1)
{
  return sub_1BB062F18(a1, "Sports embed configuration manager failed to create sports score configuration; error=%{public}@",
           96);
}

uint64_t sub_1BB062F18(uint64_t a1, const char *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED3AAC10 != -1)
    swift_once();
  v5 = (id)qword_1ED476750;
  v6 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  swift_getErrorValue();
  v8 = sub_1BB87456C();
  v10 = v9;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  sub_1BB86EF44(a2, a3, 2, &dword_1BA493000, v5, v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t SportsEmbedConfigurationManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SportsEmbedConfigurationManager.__deallocating_deinit()
{
  SportsEmbedConfigurationManager.deinit();
  return swift_deallocClassInstance();
}

void sub_1BB0630C0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB0630EC()
{
  return sub_1BB061638();
}

uint64_t sub_1BB06312C(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return j__swift_bridgeObjectRelease_0(result);
  return result;
}

unint64_t sub_1BB06314C()
{
  unint64_t result;

  result = qword_1EF2BA388;
  if (!qword_1EF2BA388)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigurationManager.RequestKind, &type metadata for SportsEmbedConfigurationManager.RequestKind);
    atomic_store(result, (unint64_t *)&qword_1EF2BA388);
  }
  return result;
}

uint64_t dispatch thunk of SportsEmbedConfigurationManagerType.embedConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for SportsEmbedConfigurationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for SportsEmbedConfigurationManager.RequestKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB0631F0 + 4 * byte_1BB8E6A43[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB063224 + 4 * byte_1BB8E6A3E[v4]))();
}

uint64_t sub_1BB063224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB06322C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB063234);
  return result;
}

uint64_t sub_1BB063240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB063248);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB06324C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB063254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigurationManager.RequestKind()
{
  return &type metadata for SportsEmbedConfigurationManager.RequestKind;
}

_QWORD *sub_1BB063270(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v11;
  char v12;

  v7 = sub_1BB86E50C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v7);
  sub_1BA50AD30(&qword_1ED3B07F0, 255, v8, MEMORY[0x1E0DB41A8]);
  sub_1BA4B07F0(0, &qword_1ED3B9248, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA81DD10();
  sub_1BB873BC4();
  sub_1BA841860();
  swift_allocObject();
  v3[4] = sub_1BB86E0E0();
  sub_1BA4B07F0(0, &qword_1ED3A39F8, (uint64_t (*)(uint64_t))sub_1BA824870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v3[5] = sub_1BB86E86C();
  swift_allocObject();
  v3[6] = sub_1BB86E86C();
  swift_allocObject();
  v3[7] = sub_1BB86E86C();
  swift_allocObject();
  v3[8] = sub_1BB86E86C();
  swift_allocObject();
  v3[9] = sub_1BB86E86C();
  swift_allocObject();
  v3[10] = sub_1BB86E86C();
  v11 = 0;
  v12 = -1;
  swift_allocObject();
  v3[11] = sub_1BB86E86C();
  v3[2] = a1;
  v3[3] = a2;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1BA50AD30(&qword_1ED3A9318, v9, (uint64_t (*)(uint64_t))type metadata accessor for SportsEmbedConfigurationManager, (uint64_t)&protocol conformance descriptor for SportsEmbedConfigurationManager);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB86E5F0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v3;
}

uint64_t sub_1BB063544()
{
  return sub_1BB061C20();
}

uint64_t sub_1BB06354C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t sub_1BB063590()
{
  return sub_1BB061ED8();
}

uint64_t sub_1BB063598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

uint64_t sub_1BB0635DC()
{
  return sub_1BB062190();
}

uint64_t sub_1BB0635E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

uint64_t sub_1BB063628()
{
  return sub_1BB062448();
}

uint64_t sub_1BB063630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t sub_1BB063674()
{
  return sub_1BB0626F0();
}

uint64_t sub_1BB06367C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(ObjectType, v1);
}

uint64_t sub_1BB0636C0()
{
  return sub_1BB0629A8();
}

uint64_t sub_1BB0636C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

uint64_t sub_1BB06370C()
{
  return sub_1BB062C60();
}

uint64_t sub_1BB063714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1);
}

uint64_t sub_1BB063758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BB064150(0, &qword_1ED39EBE8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BB064150(0, (unint64_t *)&unk_1ED39EE90, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED39EBF0 = result;
  return result;
}

uint64_t static Commands.openInNewWindow.getter()
{
  if (qword_1ED39EC00 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static ContextMenuItem.openInNewWindow(tag:feedConfiguration:)(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1BB063B10(a1, a2);
}

uint64_t static KeyCommandItem.openInNewWindow(headline:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  uint64_t v12;

  if (objc_msgSend(a1, sel_contentType) == (id)1)
  {
    if (qword_1EF2A7380 != -1)
      swift_once();
    v3 = sub_1BB86EFEC();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EF3D0960);
    v4 = sub_1BB86EFC8();
    v5 = sub_1BB87330C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1BA493000, v4, v5, "Key Command item 'openInNewWindow' not available for web articles", v6, 2u);
      MEMORY[0x1BCCE5C38](v6, -1, -1);
    }

    v7 = sub_1BB86F97C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
  else
  {
    if (qword_1ED39EC00 != -1)
      swift_once();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v10 = (void *)objc_opt_self();
    swift_retain();
    swift_unknownObjectRetain();
    v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    sub_1BB86F970();
    v12 = sub_1BB86F97C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
}

uint64_t sub_1BB063B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  _QWORD v12[3];
  char v13;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39EC00 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB8713C8();
  sub_1BB8713BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  v12[1] = a1;
  v12[2] = a2;
  v13 = 2;
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow5issueACSgSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[3];
  char v12;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39EC00 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  v8 = a1;
  v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB8713C8();
  sub_1BB8713BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v11[1] = a1;
  v11[2] = 0;
  v12 = 0;
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t ObjCClassFromMetadata;
  void *v13;
  id v14;
  _QWORD v15[3];
  char v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_contentType, v4) == (id)1)
  {
    if (qword_1EF2A7380 != -1)
      swift_once();
    v7 = sub_1BB86EFEC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EF3D0960);
    v8 = sub_1BB86EFC8();
    v9 = sub_1BB87330C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1BA493000, v8, v9, "Context menu item 'openInNewWindow' not available for web articles", v10, 2u);
      MEMORY[0x1BCCE5C38](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1ED39EC00 != -1)
      swift_once();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v13 = (void *)objc_opt_self();
    swift_retain();
    swift_unknownObjectRetain();
    v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    sub_1BB8713C8();
    sub_1BB8713BC();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0DB8530], v2);
    v15[1] = a1;
    v15[2] = 0;
    v16 = 1;
    sub_1BB86FB38();
    swift_allocObject();
    return sub_1BB86FB20();
  }
}

void sub_1BB064150(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for OpenCommandContext);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t FormatPackage.packages.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.groups.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.items.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.snippets.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.styles.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.supplementaries.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.types.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.decorations.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.localizations.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB064204(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t i;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v21 = (unint64_t)(v4 + 63) >> 6;
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v7 | (v2 << 6); ; i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    v9 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v11 = *v9;
    v10 = v9[1];
    sub_1BA8EC684();
    sub_1BA8EC6C8();
    swift_bridgeObjectRetain();
    if ((sub_1BB8728C8() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_4;
    }
    else
    {
      v15 = v20;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1BA7447E8(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v15 = v20;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        result = sub_1BA7447E8(v16 > 1, v17 + 1, 1);
        v18 = v17 + 1;
        v15 = v20;
      }
      *(_QWORD *)(v15 + 16) = v18;
      v20 = v15;
      v19 = v15 + 16 * v17;
      *(_QWORD *)(v19 + 32) = v11;
      *(_QWORD *)(v19 + 40) = v10;
      if (v6)
        goto LABEL_4;
    }
LABEL_7:
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v21)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v21)
        goto LABEL_29;
      v13 = *(_QWORD *)(v3 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v21)
          goto LABEL_29;
        v13 = *(_QWORD *)(v3 + 8 * v2);
        if (!v13)
        {
          v2 = v12 + 3;
          if (v12 + 3 >= v21)
            goto LABEL_29;
          v13 = *(_QWORD *)(v3 + 8 * v2);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v21)
  {
LABEL_29:
    swift_release();
    return v20;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v21)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BB064474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t v35;
  int64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  int64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  int64_t v92;
  uint64_t *v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  int64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  int64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t result;
  _QWORD v188[2];
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  __int128 v217;
  uint64_t v218;
  uint64_t v219;
  __int128 v220;
  uint64_t v221;
  int64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _OWORD v227[2];
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;

  v215 = a5;
  v193 = a3;
  v194 = a4;
  v192 = a2;
  v196 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v212 = v7;
  v191 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v211 = (uint64_t)v188 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v209 = *(_QWORD *)(v9 - 8);
  v210 = v9;
  MEMORY[0x1E0C80A78](v9);
  v214 = (uint64_t)v188 - v10;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v199 = *(_QWORD *)(v11 - 8);
  v200 = v11;
  MEMORY[0x1E0C80A78](v11);
  v216 = (uint64_t)v188 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v198 = (_QWORD *)((char *)v188 - v14);
  MEMORY[0x1E0C80A78](v15);
  v197 = (uint64_t)v188 - v16;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v208 = v17;
  v190 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v207 = (uint64_t)v188 - v18;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v205 = *(_QWORD *)(v19 - 8);
  v206 = v19;
  MEMORY[0x1E0C80A78](v19);
  v213 = (uint64_t)v188 - v20;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v219 = v21;
  v189 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v218 = (uint64_t)v188 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  *(_QWORD *)&v217 = v23;
  v204 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v188 - v24;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v26);
  v223 = (uint64_t)v188 - v27;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)&v220 = v28;
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (_OWORD *)((char *)v188 - v30);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v202 = *(_QWORD *)(v32 - 8);
  v203 = v32;
  MEMORY[0x1E0C80A78](v32);
  v34 = (_OWORD *)((char *)v188 - v33);
  *(_OWORD *)(a6 + 160) = xmmword_1BB886E80;
  v35 = v196;
  v36 = *(_QWORD *)(v196 + 24);
  *(_QWORD *)a6 = *(_QWORD *)(v196 + 16);
  *(_QWORD *)(a6 + 8) = v36;
  v222 = v36;
  *(_BYTE *)(a6 + 48) = *(_BYTE *)(v35 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
  v37 = (_BYTE *)(v35 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  v38 = v35;
  swift_beginAccess();
  *(_BYTE *)(a6 + 49) = *v37;
  v39 = (_QWORD *)(v38 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  v40 = v39[1];
  *(_QWORD *)(a6 + 16) = *v39;
  *(_QWORD *)(a6 + 24) = v40;
  v41 = (uint64_t *)(v38 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  swift_beginAccess();
  v42 = *v41;
  v43 = v41[1];
  *(_QWORD *)(a6 + 32) = v42;
  *(_QWORD *)(a6 + 40) = v43;
  v44 = MEMORY[0x1E0DEE9D8];
  v195 = (char *)a6;
  *(_QWORD *)(a6 + 56) = MEMORY[0x1E0DEE9D8];
  v45 = (uint64_t *)(v38 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  v46 = *v45;
  v47 = *(_QWORD *)(v46 + 16);
  if (v47)
  {
    v226 = v44;
    v48 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC7A970(0, v48, 0);
    v49 = *(unsigned __int8 *)(v29 + 80);
    v188[1] = v46;
    v50 = v46 + ((v49 + 32) & ~v49);
    v201 = *(_QWORD *)(v29 + 72);
    v222 = v48 - 1;
    while (1)
    {
      v221 = v50;
      sub_1BA8CAF1C(v50, (uint64_t)v31, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1BA8CF138(0, qword_1ED3B3268);
      v52 = *(int *)(v51 + 48);
      v53 = v31[5];
      v54 = v31[7];
      v232 = v31[6];
      v233 = v54;
      v55 = v31[7];
      v234 = v31[8];
      v56 = v31[3];
      v57 = v31[5];
      v230 = v31[4];
      v58 = v230;
      v231 = v57;
      v59 = v31[3];
      v61 = v31[1];
      v228 = v31[2];
      v60 = v228;
      v229 = v59;
      v62 = v31[1];
      v227[0] = *v31;
      v63 = v227[0];
      v227[1] = v62;
      v34[6] = v232;
      v34[7] = v55;
      v34[8] = v31[8];
      v34[2] = v60;
      v34[3] = v56;
      v34[4] = v58;
      v34[5] = v53;
      v64 = (uint64_t)v34 + v52;
      v65 = (uint64_t)v31 + *(int *)(v220 + 36);
      *v34 = v63;
      v34[1] = v61;
      v66 = v223;
      sub_1BA8CAF1C(v65, v223, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1BA5193C4(v66, v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      sub_1BA8C88FC((uint64_t)v227);
      sub_1BB06B59C((uint64_t)v31, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v67 = v226;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A970(0, *(_QWORD *)(v67 + 16) + 1, 1);
        v67 = v226;
      }
      v69 = *(_QWORD *)(v67 + 16);
      v68 = *(_QWORD *)(v67 + 24);
      if (v69 >= v68 >> 1)
      {
        sub_1BAC7A970(v68 > 1, v69 + 1, 1);
        v67 = v226;
      }
      *(_QWORD *)(v67 + 16) = v69 + 1;
      sub_1BB06CEAC((uint64_t)v34, v67+ ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80))+ *(_QWORD *)(v202 + 72) * v69, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
      if (!v222)
        break;
      --v222;
      v50 = v221 + v201;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67 = MEMORY[0x1E0DEE9D8];
  }
  v70 = v195;
  v71 = v196;
  *((_QWORD *)v195 + 8) = v67;
  v72 = (uint64_t *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v73 = *v72;
  v74 = *(_QWORD *)(*v72 + 16);
  v75 = MEMORY[0x1E0DEE9D8];
  if (v74)
  {
    v226 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A954(0, v74, 0);
    v76 = v73 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
    v77 = *(_QWORD *)(v189 + 72);
    v202 = v73;
    v203 = v77;
    v78 = v218;
    do
    {
      v221 = v76;
      v222 = v74;
      sub_1BA8CAF1C(v76, v78, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1BA8CF138(0, &qword_1ED3B3338);
      v80 = (uint64_t)&v25[*(int *)(v79 + 48)];
      v81 = *(_QWORD *)(v78 + 8);
      v82 = *(_QWORD *)(v78 + 16);
      v84 = *(_QWORD *)(v78 + 40);
      v83 = *(_QWORD *)(v78 + 48);
      v85 = *(_QWORD *)(v78 + 56);
      v86 = *(_QWORD *)(v78 + 64);
      *(_QWORD *)v25 = *(_QWORD *)v78;
      *((_QWORD *)v25 + 1) = v81;
      *((_QWORD *)v25 + 2) = v82;
      v220 = *(_OWORD *)(v78 + 24);
      *(_OWORD *)(v25 + 24) = v220;
      *((_QWORD *)v25 + 5) = v84;
      *((_QWORD *)v25 + 6) = v83;
      *((_QWORD *)v25 + 7) = v85;
      *((_QWORD *)v25 + 8) = v86;
      v87 = v25;
      v88 = v223;
      sub_1BA8CAF1C(v78 + *(int *)(v219 + 36), v223, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      v89 = v88;
      v25 = v87;
      sub_1BA5193C4(v89, v80, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB06B59C(v78, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v75 = v226;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A954(0, *(_QWORD *)(v75 + 16) + 1, 1);
        v75 = v226;
      }
      v91 = *(_QWORD *)(v75 + 16);
      v90 = *(_QWORD *)(v75 + 24);
      v92 = v222;
      if (v91 >= v90 >> 1)
      {
        sub_1BAC7A954(v90 > 1, v91 + 1, 1);
        v75 = v226;
      }
      *(_QWORD *)(v75 + 16) = v91 + 1;
      sub_1BB06CEAC((uint64_t)v25, v75+ ((*(unsigned __int8 *)(v204 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 80))+ *(_QWORD *)(v204 + 72) * v91, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
      v76 = v221 + v203;
      v74 = v92 - 1;
    }
    while (v74);
    swift_bridgeObjectRelease();
    v70 = v195;
    v71 = v196;
  }
  *((_QWORD *)v70 + 10) = v75;
  v93 = (uint64_t *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  v94 = *v93;
  v95 = *(_QWORD *)(*v93 + 16);
  v96 = MEMORY[0x1E0DEE9D8];
  if (v95)
  {
    v225 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A938(0, v95, 0);
    v97 = v94 + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80));
    v98 = *(_QWORD *)(v190 + 72);
    v203 = v94;
    v204 = v98;
    v99 = v213;
    do
    {
      v221 = v97;
      v222 = v95;
      v100 = v207;
      sub_1BA8CAF1C(v97, v207, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1BA8CF138(0, &qword_1ED3B3168);
      *(_QWORD *)&v217 = v99 + *(int *)(v101 + 48);
      v102 = *(_QWORD *)v100;
      v103 = *(_QWORD *)(v100 + 8);
      v104 = *(_QWORD *)(v100 + 16);
      v105 = *(_QWORD *)(v100 + 24);
      v107 = *(_QWORD *)(v100 + 32);
      v106 = *(_QWORD *)(v100 + 40);
      v109 = *(_QWORD *)(v100 + 48);
      v108 = *(_QWORD *)(v100 + 56);
      v111 = *(_QWORD *)(v100 + 72);
      v218 = *(_QWORD *)(v100 + 64);
      v110 = v218;
      v219 = v108;
      *(_QWORD *)&v220 = v111;
      *(_QWORD *)v99 = v102;
      *(_QWORD *)(v99 + 8) = v103;
      *(_QWORD *)(v99 + 32) = v107;
      *(_QWORD *)(v99 + 40) = v106;
      *(_QWORD *)(v99 + 48) = v109;
      *(_QWORD *)(v99 + 56) = v108;
      *(_QWORD *)(v99 + 64) = v110;
      *(_QWORD *)(v99 + 72) = v111;
      v112 = *(_BYTE *)(v100 + 80);
      *(_BYTE *)(v99 + 80) = v112;
      v113 = v100 + *(int *)(v208 + 36);
      *(_QWORD *)(v99 + 16) = v104;
      *(_QWORD *)(v99 + 24) = v105;
      v114 = v223;
      sub_1BA8CAF1C(v113, v223, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1BA5193C4(v114, v217, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA709DE8(v107, v106, v109, v219, v218, v220, v112);
      sub_1BB06B59C(v100, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v96 = v225;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A938(0, *(_QWORD *)(v96 + 16) + 1, 1);
        v96 = v225;
      }
      v116 = *(_QWORD *)(v96 + 16);
      v115 = *(_QWORD *)(v96 + 24);
      v117 = v222;
      if (v116 >= v115 >> 1)
      {
        sub_1BAC7A938(v115 > 1, v116 + 1, 1);
        v96 = v225;
      }
      *(_QWORD *)(v96 + 16) = v116 + 1;
      v118 = v96
           + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))
           + *(_QWORD *)(v205 + 72) * v116;
      v99 = v213;
      sub_1BB06CEAC(v213, v118, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
      v97 = v221 + v204;
      v95 = v117 - 1;
    }
    while (v95);
    swift_bridgeObjectRelease();
    v70 = v195;
    v71 = v196;
  }
  *((_QWORD *)v70 + 13) = v96;
  v119 = (uint64_t *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  v120 = *v119;
  v121 = *(_QWORD *)(*v119 + 16);
  v122 = MEMORY[0x1E0DEE9D8];
  if (v121)
  {
    v224 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A91C(0, v121, 0);
    v123 = *(unsigned __int8 *)(v191 + 80);
    v208 = v120;
    v124 = v120 + ((v123 + 32) & ~v123);
    v213 = *(_QWORD *)(v191 + 72);
    v125 = v214;
    do
    {
      v221 = v124;
      v222 = v121;
      v126 = v211;
      sub_1BA8CAF1C(v124, v211, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1BA8CF138(0, &qword_1ED3B4850);
      v218 = v125 + *(int *)(v127 + 48);
      v128 = *(_QWORD *)v126;
      v129 = *(_QWORD *)(v126 + 8);
      v130 = *(_QWORD *)(v126 + 16);
      v132 = *(_QWORD *)(v126 + 48);
      v219 = *(_QWORD *)(v126 + 40);
      v131 = v219;
      v134 = *(_QWORD *)(v126 + 56);
      v133 = *(_QWORD *)(v126 + 64);
      v135 = *(_BYTE *)(v126 + 72);
      v136 = *(_QWORD *)(v126 + 80);
      v137 = *(_QWORD *)(v126 + 88);
      v138 = *(_QWORD *)(v126 + 96);
      v139 = *(unsigned __int8 *)(v126 + 106);
      v140 = *(unsigned __int16 *)(v126 + 104);
      LODWORD(v220) = v140 | (v139 << 16);
      *(_QWORD *)v125 = v128;
      *(_QWORD *)(v125 + 8) = v129;
      v217 = *(_OWORD *)(v126 + 24);
      *(_OWORD *)(v125 + 24) = v217;
      *(_QWORD *)(v125 + 40) = v131;
      *(_QWORD *)(v125 + 48) = v132;
      *(_QWORD *)(v125 + 56) = v134;
      *(_QWORD *)(v125 + 64) = v133;
      *(_BYTE *)(v125 + 72) = v135;
      *(_QWORD *)(v125 + 80) = v136;
      *(_QWORD *)(v125 + 88) = v137;
      *(_QWORD *)(v125 + 96) = v138;
      *(_BYTE *)(v125 + 106) = v139;
      *(_WORD *)(v125 + 104) = v140;
      v141 = v126 + *(int *)(v212 + 36);
      *(_QWORD *)(v125 + 16) = v130;
      v142 = v223;
      sub_1BA8CAF1C(v141, v223, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1BA5193C4(v142, v218, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA771834(v138, v220);
      sub_1BB06B59C(v126, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v122 = v224;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A91C(0, *(_QWORD *)(v122 + 16) + 1, 1);
        v122 = v224;
      }
      v144 = *(_QWORD *)(v122 + 16);
      v143 = *(_QWORD *)(v122 + 24);
      v145 = v222;
      if (v144 >= v143 >> 1)
      {
        sub_1BAC7A91C(v143 > 1, v144 + 1, 1);
        v122 = v224;
      }
      *(_QWORD *)(v122 + 16) = v144 + 1;
      v125 = v214;
      sub_1BB06CEAC(v214, v122+ ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80))+ *(_QWORD *)(v209 + 72) * v144, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
      v124 = v221 + v213;
      v121 = v145 - 1;
    }
    while (v121);
    swift_bridgeObjectRelease();
    v70 = v195;
    v71 = v196;
  }
  v146 = v192;
  *((_QWORD *)v70 + 14) = v122;
  *((_QWORD *)v70 + 15) = v146;
  *((_QWORD *)v70 + 16) = v193;
  v147 = (_QWORD *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  *((_QWORD *)v70 + 17) = *v147;
  v148 = (_QWORD *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  *((_QWORD *)v70 + 18) = *v148;
  v149 = *(_QWORD *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  v150 = *(_QWORD *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
  v151 = *((_QWORD *)v70 + 20);
  v152 = *((_QWORD *)v70 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6BAD2C(v149, v150);
  sub_1BA79DDC8(v151, v152);
  *((_QWORD *)v70 + 20) = v149;
  *((_QWORD *)v70 + 21) = v150;
  v153 = v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v154 = (int *)type metadata accessor for FormatPackage();
  sub_1BA4C2DD8(v153, (uint64_t)&v70[v154[23]], type metadata accessor for FormatCompilerOptions);
  if (qword_1ED3BB468 != -1)
    swift_once();
  v155 = sub_1BB86EB84();
  v156 = __swift_project_value_buffer(v155, (uint64_t)qword_1ED3B8FC8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(&v70[v154[24]], v156, v155);
  v157 = type metadata accessor for FormatCompilerOptions(0);
  sub_1BA6E70E4(v153 + *(int *)(v157 + 28), (uint64_t)&v70[v154[25]]);
  swift_beginAccess();
  v158 = v194;
  swift_bridgeObjectRetain();
  v159 = swift_bridgeObjectRetain();
  v160 = 0;
  v161 = sub_1BB06C188(v159, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)v70 + 9) = v161;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v162 = swift_bridgeObjectRetain();
  v163 = sub_1BB06C4A4(v162, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)v70 + 11) = v163;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v164 = swift_bridgeObjectRetain();
  v165 = sub_1BB06C8C4(v164, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *((_QWORD *)v70 + 12) = v165;
  v166 = (uint64_t *)(v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  v213 = *v166;
  v167 = *(_QWORD *)(v213 + 16);
  v168 = v215;
  if (v167)
  {
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v214 = v169;
    v170 = *(_QWORD *)(v169 - 8);
    v171 = (uint64_t *)(v213
                     + ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80)));
    *(_QWORD *)&v217 = *(_QWORD *)(v170 + 72);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v172 = MEMORY[0x1E0DEE9D8];
    do
    {
      v173 = v171[1];
      v221 = *v171;
      v222 = v172;
      v174 = v171[2];
      v175 = v171[3];
      v176 = v171[5];
      v219 = v171[4];
      *(_QWORD *)&v220 = v174;
      v177 = v171[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v178 = sub_1BB06CBE0(v177, v168);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v179 = *(_QWORD *)(v178 + 16);
      swift_bridgeObjectRelease();
      if (v179)
      {
        v218 = v160;
        sub_1BA8CF138(0, &qword_1ED3B55A8);
        v181 = v198;
        v182 = (uint64_t)v198 + *(int *)(v180 + 48);
        *v198 = v221;
        v181[1] = v173;
        v181[2] = v220;
        v181[3] = v175;
        v181[4] = v219;
        v181[5] = v176;
        v181[6] = v178;
        v183 = v223;
        sub_1BA8CAF1C((uint64_t)v171 + *(int *)(v214 + 36), v223, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
        sub_1BA5193C4(v183, v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        swift_storeEnumTagMultiPayload();
        v184 = v197;
        sub_1BB06CEAC((uint64_t)v181, v197, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
        sub_1BB06CEAC(v184, v216, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
        v172 = v222;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v172 = sub_1BB390D60(0, *(_QWORD *)(v172 + 16) + 1, 1, v172);
        v168 = v215;
        v186 = *(_QWORD *)(v172 + 16);
        v185 = *(_QWORD *)(v172 + 24);
        v160 = v218;
        if (v186 >= v185 >> 1)
          v172 = sub_1BB390D60(v185 > 1, v186 + 1, 1, v172);
        *(_QWORD *)(v172 + 16) = v186 + 1;
        sub_1BB06CEAC(v216, v172+ ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80))+ *(_QWORD *)(v199 + 72) * v186, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v168 = v215;
        v172 = v222;
      }
      v171 = (uint64_t *)((char *)v171 + v217);
      --v167;
    }
    while (v167);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_release();
    v172 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *((_QWORD *)v195 + 19) = v172;
  return result;
}

uint64_t FormatPackage.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackage.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackage.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatPackage.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatPackage.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackage.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatPackage.description.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatPackage.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *FormatPackage.role.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*FormatPackage.role.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatPackage.direction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

_BYTE *FormatPackage.direction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = *result;
  return result;
}

uint64_t (*FormatPackage.direction.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.packages.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  return result;
}

uint64_t (*FormatPackage.packages.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.groups.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = v2;
  return result;
}

uint64_t (*FormatPackage.groups.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.items.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v2;
  return result;
}

uint64_t (*FormatPackage.items.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.styles.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = v2;
  return result;
}

uint64_t (*FormatPackage.styles.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.snippets.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = v2;
  return result;
}

uint64_t (*FormatPackage.snippets.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.supplementaries.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = v2;
  return result;
}

uint64_t (*FormatPackage.supplementaries.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.types.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = v2;
  return result;
}

uint64_t (*FormatPackage.types.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.decorations.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = v2;
  return result;
}

uint64_t (*FormatPackage.decorations.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.slots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.slots.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*FormatPackage.slots.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 128) = a1;
  return result;
}

uint64_t (*FormatPackage.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 136) = a1;
  return result;
}

uint64_t (*FormatPackage.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 144) = a1;
  return result;
}

uint64_t (*FormatPackage.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.localizations.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = v2;
  return result;
}

uint64_t (*FormatPackage.localizations.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.columnSystem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_QWORD *)(v1 + 168);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6BAD2C(v2, v3);
}

uint64_t FormatPackage.columnSystem.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BA79DDC8(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168));
  *(_QWORD *)(v1 + 160) = v2;
  *(_QWORD *)(v1 + 168) = v3;
  return result;
}

uint64_t (*FormatPackage.columnSystem.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPackage.compilerOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatPackage();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 92), a1, type metadata accessor for FormatCompilerOptions);
}

uint64_t FormatPackage.compilerOptions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 92);
  return sub_1BB065E60(a1, v3);
}

uint64_t sub_1BB065E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCompilerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FormatPackage.compilerOptions.modify())()
{
  type metadata accessor for FormatPackage();
  return nullsub_1;
}

uint64_t FormatPackage.formatVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 96);
  v4 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatPackage.formatVersion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 96);
  v4 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FormatPackage.formatVersion.modify())()
{
  type metadata accessor for FormatPackage();
  return nullsub_1;
}

uint64_t FormatPackage.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 100);
  return sub_1BA6E70E4(v3, a1);
}

uint64_t sub_1BB065FB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[41];
  uint64_t v45;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v7);
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_13;
  v38 = (uint64_t)&v37 - v8;
  v45 = v3;
  v10 = *a1;
  v9 = a1[1];
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v11 = sub_1BB874608();
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = v11 & ~v12;
  v14 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a3, 1, 1, v36);
  }
  v15 = ~v12;
  v16 = *(_QWORD *)(a2 + 48);
  while (1)
  {
    v17 = v16 + 24 * v13;
    if (*(_BYTE *)(v17 + 16) == 1)
    {
      v18 = *(_QWORD *)v17 == v10 && *(_QWORD *)(v17 + 8) == v9;
      if (v18 || (sub_1BB874398() & 1) != 0)
        break;
    }
    v13 = (v13 + 1) & v15;
    if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  sub_1BA8CF138(0, &qword_1ED3B3108);
  v20 = (uint64_t)a3 + *(int *)(v19 + 48);
  v21 = a1[10];
  v22 = *((_BYTE *)a1 + 120);
  *(_QWORD *)&v39 = v10;
  *((_QWORD *)&v39 + 1) = v9;
  v23 = *((_OWORD *)a1 + 2);
  v40 = *((_OWORD *)a1 + 1);
  v41 = v23;
  v24 = *((_OWORD *)a1 + 4);
  v42 = *((_OWORD *)a1 + 3);
  v43 = v24;
  *(_QWORD *)v44 = v21;
  *(_OWORD *)&v44[8] = *(_OWORD *)(a1 + 11);
  *(_OWORD *)&v44[24] = *(_OWORD *)(a1 + 13);
  v44[40] = v22;
  v25 = v39;
  v26 = v40;
  v27 = v42;
  a3[2] = v41;
  a3[3] = v27;
  *a3 = v25;
  a3[1] = v26;
  v28 = v43;
  v29 = *(_OWORD *)v44;
  v30 = *(_OWORD *)&v44[16];
  *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)&v44[25];
  a3[5] = v29;
  a3[6] = v30;
  a3[4] = v28;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v32 = v38;
  sub_1BA8CAF1C((uint64_t)a1 + *(int *)(v31 + 36), v38, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4(v32, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v34 = v33;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a3, 0, 1, v34);
  return sub_1BA8CED9C((uint64_t)&v39);
}

uint64_t sub_1BB0662D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v7);
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_13;
  v42 = (uint64_t)&v36 - v8;
  v43 = v3;
  v10 = *a1;
  v9 = a1[1];
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v11 = sub_1BB874608();
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = v11 & ~v12;
  v14 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  v15 = ~v12;
  v16 = *(_QWORD *)(a2 + 48);
  while (1)
  {
    v17 = v16 + 24 * v13;
    if (*(unsigned __int8 *)(v17 + 16) >= 2u)
    {
      v18 = *(_QWORD *)v17 == v10 && *(_QWORD *)(v17 + 8) == v9;
      if (v18 || (sub_1BB874398() & 1) != 0)
        break;
    }
    v13 = (v13 + 1) & v15;
    if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  sub_1BA8CF138(0, &qword_1ED3B5F60);
  v37 = a3 + *(int *)(v19 + 48);
  v20 = a1[2];
  v21 = a1[5];
  v22 = a1[6];
  v23 = a1[7];
  v24 = a1[8];
  v25 = a1[9];
  v26 = *((_BYTE *)a1 + 80);
  v27 = a1[12];
  v39 = a1[11];
  v28 = v39;
  v40 = v27;
  v41 = v21;
  v29 = *((_BYTE *)a1 + 104);
  *(_QWORD *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)(a3 + 16) = v20;
  v38 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(a3 + 24) = v38;
  *(_QWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 48) = v22;
  *(_QWORD *)(a3 + 56) = v23;
  *(_QWORD *)(a3 + 64) = v24;
  *(_QWORD *)(a3 + 72) = v25;
  *(_BYTE *)(a3 + 80) = v26;
  *(_QWORD *)(a3 + 88) = v28;
  *(_QWORD *)(a3 + 96) = v27;
  *(_BYTE *)(a3 + 104) = v29;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v31 = v42;
  sub_1BA8CAF1C((uint64_t)a1 + *(int *)(v30 + 36), v42, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4(v31, v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v33 = v32;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a3, 0, 1, v33);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  _BOOL4 v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _BOOL4 v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int *v114;
  uint64_t v115;
  uint64_t *v116;
  _QWORD v117[4];
  char v118;

  v111 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v110 = (uint64_t)&v101 - v5;
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], v3);
  MEMORY[0x1E0C80A78](v6);
  v108 = (uint64_t)&v101 - v7;
  v8 = sub_1BB86EB84();
  v104 = *(_QWORD *)(v8 - 8);
  v105 = v8;
  MEMORY[0x1E0C80A78](v8);
  v109 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C9550, type metadata accessor for FormatCompilerOptions, v3);
  MEMORY[0x1E0C80A78](v10);
  v106 = (uint64_t)&v101 - v11;
  v12 = type metadata accessor for FormatCompilerOptions(0);
  v102 = *(_QWORD *)(v12 - 8);
  v103 = v12;
  MEMORY[0x1E0C80A78](v12);
  v107 = (uint64_t *)((char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v112 = sub_1BB86C8E0();
  v14 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v16 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9BE0, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v101 - v20;
  v114 = (int *)type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v114);
  v23 = (uint64_t *)((char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  v116 = v23;
  *((_OWORD *)v23 + 10) = xmmword_1BB886E80;
  v24 = a1[3];
  v113 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1BAEE74F0();
  v25 = v115;
  sub_1BB87468C();
  if (v25)
  {
    v115 = v25;
    v30 = 4456454;
    goto LABEL_4;
  }
  v26 = v16;
  v27 = v112;
  LOBYTE(v117[0]) = 0;
  v28 = sub_1BB87402C();
  v48 = v29;
  v101 = v21;
  if (v29)
  {
    v49 = v28;
  }
  else
  {
    sub_1BB86C8D4();
    v49 = sub_1BB86C8C8();
    v48 = v50;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v27);
  }
  v51 = v116;
  *v116 = v49;
  v51[1] = v48;
  v118 = 3;
  sub_1BA5BBB9C();
  sub_1BB8740D4();
  *((_BYTE *)v51 + 48) = v117[0];
  v118 = 4;
  sub_1BA5BBA8C();
  sub_1BB874068();
  v52 = v117[0];
  if (LOBYTE(v117[0]) == 5)
    v52 = 4;
  *((_BYTE *)v51 + 49) = v52;
  LOBYTE(v117[0]) = 1;
  v53 = sub_1BB87402C();
  v55 = v54;
  swift_bridgeObjectRelease();
  v51[2] = v53;
  v51[3] = v55;
  LOBYTE(v117[0]) = 2;
  v56 = sub_1BB87402C();
  v58 = v57;
  swift_bridgeObjectRelease();
  v51[4] = v56;
  v51[5] = v58;
  sub_1BA64D5B0(0);
  v118 = 5;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B8400, (uint64_t (*)(uint64_t))sub_1BA64D5B0, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
  sub_1BB874068();
  v59 = v117[0];
  v60 = MEMORY[0x1E0DEE9D8];
  if (!v117[0])
    v59 = MEMORY[0x1E0DEE9D8];
  v51[7] = v59;
  sub_1BA4CDF6C(0, &qword_1ED3B83E8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 6;
  sub_1BB06955C();
  sub_1BB874068();
  v61 = v117[0];
  if (!v117[0])
    v61 = v60;
  v51[8] = v61;
  sub_1BA4CDF6C(0, &qword_1ED3B83C8, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 7;
  sub_1BB0695C4();
  sub_1BB874068();
  v62 = v117[0];
  if (!v117[0])
    v62 = v60;
  v51[9] = v62;
  sub_1BA4CDF6C(0, &qword_1ED3B83F8, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 8;
  sub_1BB06962C();
  sub_1BB874068();
  v63 = v117[0];
  if (!v117[0])
    v63 = v60;
  v116[10] = v63;
  sub_1BAEE7804(0);
  v118 = 9;
  sub_1BA4A2870(&qword_1ED3BFA80, (uint64_t (*)(uint64_t))sub_1BAEE7804, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
  v64 = v18;
  sub_1BB874068();
  v115 = 0;
  v65 = v117[0];
  if (!v117[0])
    v65 = v60;
  v116[11] = v65;
  sub_1BA4CDF6C(0, &qword_1ED3B83B8, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 10;
  sub_1BB069694();
  v66 = v115;
  sub_1BB874068();
  v115 = v66;
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v18);
    v30 = 263159;
    goto LABEL_4;
  }
  v67 = v117[0];
  if (!v117[0])
    v67 = v60;
  v116[12] = v67;
  sub_1BA4CDF6C(0, &qword_1ED3B83D8, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 11;
  sub_1BB0696FC();
  v68 = v115;
  sub_1BB874068();
  v115 = v68;
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v18);
    v30 = 264183;
    goto LABEL_4;
  }
  v69 = v117[0];
  if (!v117[0])
    v69 = v60;
  v116[13] = v69;
  sub_1BA4CDF6C(0, &qword_1ED3B8398, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 12;
  sub_1BB069764();
  v70 = v115;
  sub_1BB874068();
  v115 = v70;
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v18);
    v30 = 266231;
    goto LABEL_4;
  }
  v71 = v117[0];
  if (!v117[0])
    v71 = v60;
  v116[14] = v71;
  sub_1BA4B07F0(0, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v118 = 13;
  sub_1BA51E1E8(&qword_1ED3B94F8, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, sub_1BB0697CC);
  v72 = v115;
  sub_1BB874068();
  v115 = v72;
  if (v72)
  {
    v30 = 270327;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v18);
    goto LABEL_4;
  }
  v73 = v117[0];
  if (!v117[0])
    v73 = v60;
  v116[15] = v73;
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v118 = 14;
  sub_1BA51E1E8((unint64_t *)&qword_1ED3B9588, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, sub_1BB0697E8);
  v74 = v115;
  sub_1BB874068();
  v115 = v74;
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v18);
    v30 = 278519;
    goto LABEL_4;
  }
  v75 = v117[0];
  if (!v117[0])
    v75 = v60;
  v116[16] = v75;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v118 = 15;
  sub_1BA51E1E8((unint64_t *)&qword_1ED3B9450, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, sub_1BA836304);
  v76 = v115;
  sub_1BB874068();
  v115 = v76;
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v18);
    v30 = 294903;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = (v30 >> 5) & 1;
    v42 = (v30 >> 6) & 1;
    v43 = (v30 >> 7) & 1;
    LODWORD(v106) = (v30 >> 8) & 1;
    LODWORD(v107) = (v30 >> 9) & 1;
    LODWORD(v108) = (v30 >> 10) & 1;
    LODWORD(v109) = (v30 >> 11) & 1;
    LODWORD(v110) = (v30 >> 12) & 1;
    LODWORD(v111) = (v30 >> 13) & 1;
    LODWORD(v112) = (v30 >> 14) & 1;
    if ((v30 & 1) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  v77 = v117[0];
  if (!v117[0])
    v77 = v60;
  v116[17] = v77;
  sub_1BA6BCC84();
  v118 = 16;
  sub_1BA637DF8((unint64_t *)&qword_1ED3B96D0, (uint64_t (*)(uint64_t))sub_1BA6BCC84, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  v78 = v115;
  sub_1BB874068();
  v79 = v78 == 0;
  v115 = v78;
  if (v78)
    goto LABEL_81;
  v80 = v117[0];
  v81 = MEMORY[0x1E0DEE9E8];
  if (!v117[0])
    v80 = MEMORY[0x1E0DEE9E8];
  v116[18] = v80;
  sub_1BA4CDF6C(0, &qword_1ED3B83A8, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  v118 = 17;
  sub_1BB069804();
  v82 = v115;
  sub_1BB874068();
  v115 = v82;
  if (v82)
  {
LABEL_81:
    (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v64);
    v83 = 0;
    v34 = 0;
    v84 = 0;
  }
  else
  {
    v85 = v117[0];
    if (!v117[0])
      v85 = v60;
    v116[19] = v85;
    v118 = 18;
    sub_1BA5EF7E4();
    v86 = v115;
    sub_1BB874068();
    v115 = v86;
    if (v86)
      goto LABEL_87;
    v87 = v117[0];
    v88 = v117[1];
    v89 = v116;
    sub_1BA79DDC8(v116[20], v116[21]);
    v89[20] = v87;
    v89[21] = v88;
    LOBYTE(v117[0]) = 19;
    sub_1BA4A2870(&qword_1ED3B6518, type metadata accessor for FormatCompilerOptions, (uint64_t)&protocol conformance descriptor for FormatCompilerOptions);
    v90 = v115;
    sub_1BB874068();
    v115 = v90;
    if (v90)
    {
LABEL_87:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v64);
      v34 = 0;
      v84 = 0;
      v83 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v106, 1, v103) == 1)
      {
        if (qword_1EF2A6C88 != -1)
          swift_once();
        v91 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
        v92 = __swift_project_value_buffer(v91, (uint64_t)qword_1EF2AC5B8);
        v93 = v103;
        v94 = v107;
        sub_1BA4C2DD8(v92, (uint64_t)v107 + *(int *)(v103 + 24), type metadata accessor for FormatCompilerOptions.Newsroom);
        v95 = (char *)v94 + *(int *)(v93 + 28);
        v96 = sub_1BB86E710();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v95, 1, 1, v96);
        *v94 = v60;
        v94[1] = v60;
        *(uint64_t *)((char *)v94 + *(int *)(v93 + 32)) = v81;
        sub_1BA5C699C(v106, &qword_1ED3C9550, type metadata accessor for FormatCompilerOptions);
      }
      else
      {
        sub_1BA5193C4(v106, (uint64_t)v107, type metadata accessor for FormatCompilerOptions);
      }
      sub_1BA5193C4((uint64_t)v107, (uint64_t)v116 + v114[23], type metadata accessor for FormatCompilerOptions);
      LOBYTE(v117[0]) = 20;
      sub_1BA4A2870(&qword_1ED3B0918, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF0]);
      v97 = v115;
      sub_1BB874068();
      v115 = v97;
      if (v97)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v64);
        v84 = 0;
        v83 = 1;
        v34 = 1;
      }
      else
      {
        sub_1BA4C010C((uint64_t)v113, (uint64_t)v117);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v108, 1, v105) == 1)
        {
          __swift_project_boxed_opaque_existential_1(v117, v117[3]);
          v98 = sub_1BB872874();
          Dictionary<>.formatVersion.getter(v98, v109);
          swift_bridgeObjectRelease();
          sub_1BA5C699C(v108, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32))(v109, v108, v105);
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))((char *)v116 + v114[24], v109, v105);
        sub_1BB86E710();
        v118 = 21;
        sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
        v99 = v115;
        sub_1BB874068();
        v115 = v99;
        if (!v99)
        {
          (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v64);
          v100 = (uint64_t)v116;
          sub_1BA6E7324(v110, (uint64_t)v116 + v114[25]);
          sub_1BA4C2DD8(v100, v111, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
          return sub_1BA4A2E80(v100, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
        }
        (*(void (**)(char *, uint64_t))(v19 + 8))(v101, v64);
        v83 = 1;
        v34 = 1;
        v84 = 1;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  v41 = 1;
  v42 = 1;
  v43 = 1;
  LODWORD(v106) = 1;
  LODWORD(v107) = 1;
  LODWORD(v108) = 1;
  LODWORD(v109) = 1;
  LODWORD(v110) = 1;
  LODWORD(v111) = 1;
  LODWORD(v112) = 1;
  v31 = 1;
  v32 = v79;
  v33 = v83;
  v35 = v84;
LABEL_5:
  v37 = v32;
  v38 = v33;
  v44 = v35;
  swift_bridgeObjectRelease();
  v36 = v31;
  v39 = v34;
  v40 = v44;
LABEL_6:
  LODWORD(v113) = v40;
  v45 = v39;
  v46 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41)
  {
    swift_bridgeObjectRelease();
    if (!v42)
    {
LABEL_8:
      if (!v43)
        goto LABEL_9;
      goto LABEL_27;
    }
  }
  else if (!v42)
  {
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  if (!v43)
  {
LABEL_9:
    if (!(_DWORD)v106)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v106)
  {
LABEL_10:
    if (!(_DWORD)v107)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v107)
  {
LABEL_11:
    if (!(_DWORD)v108)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v108)
  {
LABEL_12:
    if (!(_DWORD)v109)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v109)
  {
LABEL_13:
    if (!(_DWORD)v110)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v110)
  {
LABEL_14:
    if (!(_DWORD)v111)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v111)
  {
LABEL_15:
    if (!(_DWORD)v112)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  if (!(_DWORD)v112)
  {
LABEL_16:
    if (!v36)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  if (!v36)
  {
LABEL_17:
    if (!v37)
      goto LABEL_18;
LABEL_36:
    swift_bridgeObjectRelease();
    if (!v38)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  if (v37)
    goto LABEL_36;
LABEL_18:
  if (v38)
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
  result = sub_1BA79DDC8(v46[20], v46[21]);
  if (v45)
    result = sub_1BA4A2E80((uint64_t)v46 + v114[23], type metadata accessor for FormatCompilerOptions);
  if ((_DWORD)v113)
    return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))((char *)v46 + v114[24], v105);
  return result;
}

uint64_t FormatPackage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)();
  uint64_t v149;
  uint64_t v150;
  int *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  char *v171;
  char *v172;
  uint64_t *v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  char v177;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v154 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v153 = (uint64_t)&v150 - v7;
  MEMORY[0x1E0C80A78](v8);
  v152 = (uint64_t)&v150 - v9;
  MEMORY[0x1E0C80A78](v10);
  v155 = (uint64_t)&v150 - v11;
  MEMORY[0x1E0C80A78](v12);
  v157 = (uint64_t)&v150 - v13;
  MEMORY[0x1E0C80A78](v14);
  v158 = (uint64_t)&v150 - v15;
  MEMORY[0x1E0C80A78](v16);
  v159 = (uint64_t)&v150 - v17;
  MEMORY[0x1E0C80A78](v18);
  v160 = (uint64_t)&v150 - v19;
  MEMORY[0x1E0C80A78](v20);
  v161 = (uint64_t)&v150 - v21;
  MEMORY[0x1E0C80A78](v22);
  v162 = (uint64_t)&v150 - v23;
  MEMORY[0x1E0C80A78](v24);
  v163 = (char *)&v150 - v25;
  MEMORY[0x1E0C80A78](v26);
  v164 = (char *)&v150 - v27;
  MEMORY[0x1E0C80A78](v28);
  v165 = (char *)&v150 - v29;
  MEMORY[0x1E0C80A78](v30);
  v166 = (char *)&v150 - v31;
  MEMORY[0x1E0C80A78](v32);
  v167 = (char *)&v150 - v33;
  MEMORY[0x1E0C80A78](v34);
  v168 = (uint64_t)&v150 - v35;
  MEMORY[0x1E0C80A78](v36);
  v169 = (uint64_t)&v150 - v37;
  MEMORY[0x1E0C80A78](v38);
  v170 = (uint64_t *)((char *)&v150 - v39);
  MEMORY[0x1E0C80A78](v40);
  v171 = (char *)&v150 - v41;
  MEMORY[0x1E0C80A78](v42);
  v172 = (char *)&v150 - v43;
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v150 - v45;
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v150 - v48;
  sub_1BAEE7470(0);
  v156 = v50;
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v150 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a1[3];
  v54 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v53);
  v55 = type metadata accessor for FormatPackage();
  v56 = sub_1BAEE74F0();
  v151 = (int *)v55;
  sub_1BA6EC1EC(v55, v57, v53, v55, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v54, (uint64_t)v52, v56, (uint64_t)&off_1E734BD80);
  v58 = *v2;
  v59 = v2[1];
  v173 = v2;
  v60 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v60 != -1)
    swift_once();
  v61 = sub_1BB86EB84();
  v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1ED476C20);
  v63 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
  v63(v49, v62, v61);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v64 = v174;
  sub_1BAD231DC(v58, v59, 0, (uint64_t)v49, (uint64_t)sub_1BA90CF04, 0);
  if (v64)
  {
    sub_1BA4A2E80((uint64_t)v49, type metadata accessor for FormatVersionRequirement);
LABEL_7:
    swift_bridgeObjectRelease();
    v70 = (uint64_t)v52;
    return sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))sub_1BAEE7470);
  }
  v174 = 0;
  sub_1BA4A2E80((uint64_t)v49, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v63(v46, v62, v61);
  swift_storeEnumTagMultiPayload();
  sub_1BA4A2E80((uint64_t)v46, type metadata accessor for FormatVersionRequirement);
  v65 = (uint64_t)v172;
  v66 = v173;
  v67 = v173[4];
  v68 = v173[5];
  v63(v172, v62, v61);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v69 = v174;
  sub_1BAD6CA3C(v67, v68, 2, v65, (uint64_t)sub_1BA90CF04, 0);
  if (v69)
  {
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    goto LABEL_7;
  }
  sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v72 = *((_BYTE *)v66 + 48);
  v73 = (uint64_t)v171;
  v63(v171, v62, v61);
  swift_storeEnumTagMultiPayload();
  sub_1BAD23308(v72, 3, v73, (uint64_t)sub_1BA90CF04, 0);
  v172 = (char *)v61;
  sub_1BA4A2E80(v73, type metadata accessor for FormatVersionRequirement);
  v74 = *((unsigned __int8 *)v66 + 49);
  if (qword_1ED3C6D78 != -1)
    swift_once();
  v75 = (uint64_t)v172;
  v76 = __swift_project_value_buffer((uint64_t)v172, (uint64_t)qword_1ED476C68);
  v77 = (uint64_t)v170;
  v63((char *)v170, v76, v75);
  swift_storeEnumTagMultiPayload();
  if (v74 == 4)
  {
    v78 = (void (*)(uint64_t, uint64_t, uint64_t))v63;
  }
  else
  {
    v94 = sub_1BAE570BC(v77, 4, (uint64_t)sub_1BA90CF04, 0);
    v78 = (void (*)(uint64_t, uint64_t, uint64_t))v63;
    if ((v94 & 1) != 0)
    {
      LOBYTE(v176) = 4;
      LOBYTE(v175) = v74;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BAB26FC0();
      sub_1BB874464();
    }
  }
  sub_1BA4A2E80((uint64_t)v170, type metadata accessor for FormatVersionRequirement);
  v79 = v169;
  v78(v169, v62, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  v80 = swift_bridgeObjectRetain();
  sub_1BAD2E444(v80, 5, v79, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v79, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v81 = v168;
  v82 = (char *)v62;
  v83 = v62;
  v84 = (uint64_t)v172;
  v78(v168, v83, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  v85 = swift_bridgeObjectRetain();
  sub_1BAD2E470(v85, 6);
  sub_1BA4A2E80(v81, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v86 = (uint64_t)v167;
  v78((uint64_t)v167, (uint64_t)v82, v84);
  swift_storeEnumTagMultiPayload();
  v87 = swift_bridgeObjectRetain();
  sub_1BAD2E590(v87, 7);
  sub_1BA4A2E80(v86, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v88 = (uint64_t)v166;
  v78((uint64_t)v166, (uint64_t)v82, v84);
  swift_storeEnumTagMultiPayload();
  v89 = swift_bridgeObjectRetain();
  sub_1BAD2E6B0(v89, 8);
  sub_1BA4A2E80(v88, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v90 = (uint64_t)v165;
  v78((uint64_t)v165, (uint64_t)v82, v84);
  swift_storeEnumTagMultiPayload();
  v91 = swift_bridgeObjectRetain();
  sub_1BAD2E7D0(v91, 9, v90, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v90, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v92 = (uint64_t)v164;
  v78((uint64_t)v164, (uint64_t)v82, v84);
  swift_storeEnumTagMultiPayload();
  v93 = swift_bridgeObjectRetain();
  sub_1BAD2E914(v93, 10);
  sub_1BA4A2E80(v92, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v95 = v66[13];
  v96 = (uint64_t)v163;
  v78((uint64_t)v163, (uint64_t)v82, v84);
  swift_storeEnumTagMultiPayload();
  v97 = swift_bridgeObjectRetain();
  v174 = v95;
  sub_1BAD2EA34(v97, 11);
  sub_1BA4A2E80(v96, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v171 = v82;
  v78(v162, (uint64_t)v82, v84);
  swift_storeEnumTagMultiPayload();
  v98 = swift_bridgeObjectRetain();
  v99 = (uint64_t)v52;
  sub_1BAD2EB54(v98, 12);
  sub_1BA4A2E80(v162, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v100 = v161;
  v78(v161, (uint64_t)v171, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  v101 = swift_bridgeObjectRetain();
  sub_1BAD23438(v101, 13, v100, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v161, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v102 = v160;
  v78(v160, (uint64_t)v171, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  v103 = swift_bridgeObjectRetain();
  sub_1BAD23588(v103, 14, v102, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v160, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v78(v159, (uint64_t)v171, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  v104 = swift_bridgeObjectRetain();
  sub_1BAD2EC74(v104, 15);
  sub_1BA4A2E80(v159, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v105 = &v52[*(int *)(v156 + 36)];
  v106 = *((_QWORD *)v105 + 3);
  v107 = *((_QWORD *)v105 + 4);
  v108 = __swift_project_boxed_opaque_existential_1(v105, v106);
  v109 = sub_1BA5F45FC((uint64_t)v108, v106, (uint64_t)&type metadata for FormatVersions.SydroC, v107, (uint64_t)&off_1E734BC00);
  v110 = v173[18];
  swift_bridgeObjectRetain();
  if ((v109 & 1) == 0)
  {
    v111 = swift_bridgeObjectRetain();
    v112 = sub_1BB064204(v111);
    v113 = sub_1BA6E43EC(v112);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v110 = v113;
  }
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v114 = (uint64_t)v172;
  v115 = __swift_project_value_buffer((uint64_t)v172, (uint64_t)qword_1ED476C08);
  v78(v158, v115, v114);
  v116 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1E0C80A78](v116);
  v148 = (uint64_t (*)())v110;
  if (*(_QWORD *)(v110 + 16))
  {
    MEMORY[0x1E0C80A78](v117);
    v148 = sub_1BB06A084;
    v149 = v118;
    if ((sub_1BAE570BC(v158, 16, (uint64_t)sub_1BA4D7948, (uint64_t)(&v150 - 4)) & 1) != 0)
    {
      v177 = 16;
      v119 = swift_bridgeObjectRetain();
      v120 = sub_1BA67F4CC(v119);
      swift_bridgeObjectRelease();
      v175 = v120;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v175);
      v174 = 0;
      swift_release();
      v176 = (uint64_t)v175;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      v170 = (uint64_t *)v121;
      sub_1BAEE7534();
      sub_1BA6D249C();
      sub_1BA637DF8((unint64_t *)&qword_1ED39DA10, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
      v122 = v174;
      sub_1BB874464();
      if (v122)
      {
        swift_release();
        sub_1BA4A2E80(v158, type metadata accessor for FormatVersionRequirement);
        sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))sub_1BAEE7470);
        return swift_bridgeObjectRelease();
      }
      swift_release();
    }
  }
  sub_1BA4A2E80(v158, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v78(v157, (uint64_t)v171, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  v123 = swift_bridgeObjectRetain();
  sub_1BAD2ED8C(v123, 17);
  sub_1BA4A2E80(v157, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v124 = v173[20];
  v125 = v173[21];
  v126 = v155;
  v78(v155, v115, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  sub_1BA6BAD2C(v124, v125);
  sub_1BAD6CBF4(v124, v125, 18, v126, (uint64_t)sub_1BA90CF04, 0);
  v174 = 0;
  sub_1BA4A2E80(v155, type metadata accessor for FormatVersionRequirement);
  sub_1BA79DDC8(v124, v125);
  v169 = v151[23];
  v127 = v152;
  v78(v152, (uint64_t)v171, (uint64_t)v172);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v176) = 19;
  v128 = (uint64_t *)(v99 + *(int *)(v156 + 44));
  v130 = *v128;
  v129 = v128[1];
  v131 = swift_allocObject();
  v170 = &v150;
  *(_BYTE *)(v131 + 16) = 19;
  *(_QWORD *)(v131 + 24) = v130;
  *(_QWORD *)(v131 + 32) = v129;
  MEMORY[0x1E0C80A78](v131);
  *(&v150 - 4) = (uint64_t)sub_1BA90CF04;
  *(&v150 - 3) = 0;
  v148 = sub_1BB06A0B0;
  v149 = v132;
  swift_retain();
  v133 = v174;
  sub_1BAE2F9C0(v127, 19, (uint64_t)sub_1BAE76064, (uint64_t)(&v150 - 6));
  v174 = v133;
  if (v133)
    goto LABEL_27;
  sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v135 = v134;
  v136 = sub_1BAEE7534();
  type metadata accessor for FormatCompilerOptions(0);
  sub_1BA4A2870(&qword_1ED39B770, type metadata accessor for FormatCompilerOptions, (uint64_t)&protocol conformance descriptor for FormatCompilerOptions);
  v137 = v174;
  v169 = (uint64_t)v135;
  v170 = (uint64_t *)v136;
  sub_1BB874464();
  v174 = v137;
  if (v137)
  {
LABEL_27:
    swift_release();
    sub_1BA4A2E80(v152, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))sub_1BAEE7470);
  }
  else
  {
    swift_release();
    sub_1BA4A2E80(v152, type metadata accessor for FormatVersionRequirement);
    v168 = v151[24];
    v138 = v153;
    v78(v153, (uint64_t)v171, (uint64_t)v172);
    swift_storeEnumTagMultiPayload();
    LOBYTE(v176) = 20;
    v140 = *v128;
    v139 = v128[1];
    v141 = swift_allocObject();
    *(_BYTE *)(v141 + 16) = 20;
    *(_QWORD *)(v141 + 24) = v140;
    *(_QWORD *)(v141 + 32) = v139;
    MEMORY[0x1E0C80A78](v141);
    *(&v150 - 4) = (uint64_t)sub_1BA90CF04;
    *(&v150 - 3) = 0;
    v148 = sub_1BB06A0B0;
    v149 = v142;
    swift_retain();
    v143 = v174;
    sub_1BAE2F9C0(v138, 20, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v150 - 6));
    if (!v143)
    {
      sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
      sub_1BB874464();
      swift_release();
      sub_1BA4A2E80(v153, type metadata accessor for FormatVersionRequirement);
      v144 = (uint64_t)v173 + v151[25];
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v145 = (uint64_t)v172;
      v146 = __swift_project_value_buffer((uint64_t)v172, (uint64_t)qword_1ED476BF0);
      v147 = (uint64_t)v154;
      v78((uint64_t)v154, v146, v145);
      swift_storeEnumTagMultiPayload();
      sub_1BAD6CDB4(v144, 21, v147, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v147, type metadata accessor for FormatVersionRequirement);
      v70 = v99;
      return sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))sub_1BAEE7470);
    }
    swift_release();
    sub_1BA4A2E80(v153, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))sub_1BAEE7470);
  }
}

uint64_t sub_1BB068D1C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  sub_1BB872AFC("NewsFeed/FormatPackage.swift");
  sub_1BB87303C();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return 0;
}

uint64_t sub_1BB068DBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB068DF4 + 4 * byte_1BB8E6BF8[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB068DF4()
{
  return 1701667182;
}

uint64_t sub_1BB068E04()
{
  return 0x7470697263736564;
}

uint64_t sub_1BB068E24()
{
  return 1701605234;
}

uint64_t sub_1BB068E34()
{
  return 0x6F69746365726964;
}

uint64_t sub_1BB068E50()
{
  return 0x736567616B636170;
}

uint64_t sub_1BB068E68()
{
  return 0x7370756F7267;
}

uint64_t sub_1BB068E7C()
{
  return 0x736D657469;
}

uint64_t sub_1BB068E90()
{
  return 0x73656C797473;
}

uint64_t sub_1BB068EA4()
{
  return 0x7374657070696E73;
}

uint64_t sub_1BB068EBC()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BB068EE0()
{
  return 0x7365707974;
}

uint64_t sub_1BB068EF4()
{
  return 0x697461726F636564;
}

uint64_t sub_1BB068F14()
{
  return 0x73746F6C73;
}

uint64_t sub_1BB068F28()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB068F40()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BB068F58()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB068F78()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_1BB068F9C()
{
  return 0x79536E6D756C6F63;
}

uint64_t sub_1BB068FBC()
{
  return 0x72656C69706D6F63;
}

uint64_t sub_1BB068FE0()
{
  return 0x655674616D726F66;
}

unint64_t sub_1BB069004()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB069020(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB068DBC(*a1);
  v5 = v4;
  if (v3 == sub_1BB068DBC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB0690A8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB068DBC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB069108()
{
  unsigned __int8 *v0;

  sub_1BB068DBC(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB069148()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB068DBC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB0691A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB06CE5C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB0691D0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB068DBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB0691F8()
{
  unsigned __int8 *v0;

  return sub_1BB068DBC(*v0);
}

uint64_t sub_1BB069200@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB06CE5C();
  *a1 = result;
  return result;
}

void sub_1BB069224(_BYTE *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_1BB069230()
{
  sub_1BAEE74F0();
  return sub_1BB874710();
}

uint64_t sub_1BB069258()
{
  sub_1BAEE74F0();
  return sub_1BB87471C();
}

uint64_t sub_1BB069280@<X0>(uint64_t a1@<X8>)
{
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  __int128 v27;
  unsigned __int8 v28;

  v25 = a1;
  v1 = (int *)type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1BB86EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C8E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v12 = sub_1BB86C8C8();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1ED3BB468 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED3B8FC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
  v28 = 0;
  if (qword_1EF2A6C88 != -1)
    swift_once();
  v16 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EF2AC5B8);
  sub_1BA4C2DD8(v17, (uint64_t)v3 + v1[6], type metadata accessor for FormatCompilerOptions.Newsroom);
  v18 = (char *)v3 + v1[7];
  v19 = sub_1BB86E710();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = MEMORY[0x1E0DEE9D8];
  *v3 = MEMORY[0x1E0DEE9D8];
  v3[1] = v20;
  v21 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)((char *)v3 + v1[8]) = MEMORY[0x1E0DEE9E8];
  v27 = xmmword_1BB886E80;
  v26 = 4;
  v22 = sub_1BB5765C0(v12, v14, (uint64_t)v7, &v28, &v26, 0, 0, 0, 0, v20, v20, v20, v20, v20, v20, v20, v20, v20, v21,
          v20,
          (uint64_t)v3,
          (uint64_t *)&v27,
          v20);
  return sub_1BB064474((uint64_t)v22, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9E8], MEMORY[0x1E0DEE9E8], v25);
}

uint64_t sub_1BB069530@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPackage.init(from:)(a1, a2);
}

uint64_t sub_1BB069544(_QWORD *a1)
{
  return FormatPackage.encode(to:)(a1);
}

unint64_t sub_1BB06955C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B83E0;
  if (!qword_1ED3B83E0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83E8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B83E0);
  }
  return result;
}

unint64_t sub_1BB0695C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B83C0;
  if (!qword_1ED3B83C0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83C8, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B83C0);
  }
  return result;
}

unint64_t sub_1BB06962C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B83F0;
  if (!qword_1ED3B83F0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83F8, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B83F0);
  }
  return result;
}

unint64_t sub_1BB069694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B83B0;
  if (!qword_1ED3B83B0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83B8, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B83B0);
  }
  return result;
}

unint64_t sub_1BB0696FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B83D0;
  if (!qword_1ED3B83D0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83D8, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B83D0);
  }
  return result;
}

unint64_t sub_1BB069764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B8390;
  if (!qword_1ED3B8390)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B8398, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B8390);
  }
  return result;
}

uint64_t sub_1BB0697CC()
{
  return sub_1BA4A2870(&qword_1ED3B6288, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
}

uint64_t sub_1BB0697E8()
{
  return sub_1BA4A2870(&qword_1ED3B7880, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
}

unint64_t sub_1BB069804()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B83A0;
  if (!qword_1ED3B83A0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83A8, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B83A0);
  }
  return result;
}

BOOL _s8NewsFeed13FormatPackageV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v64)(uint64_t);
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;
  unint64_t v76;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA793CE8();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v70 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v70 - v20;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    v24 = *(_QWORD *)(a1 + 24);
    v25 = *(_QWORD *)(a2 + 24);
    if (v24)
    {
      if (!v25)
        return 0;
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v24 != v25)
      {
        v26 = sub_1BB874398();
        result = 0;
        if ((v26 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    v27 = *(_QWORD *)(a1 + 40);
    v28 = *(_QWORD *)(a2 + 40);
    if (v27)
    {
      if (!v28)
        return 0;
      if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v27 != v28)
      {
        v29 = sub_1BB874398();
        result = 0;
        if ((v29 & 1) == 0)
          return result;
      }
    }
    else if (v28)
    {
      return 0;
    }
    sub_1BB7F2C48(*(_BYTE *)(a1 + 48));
    if ((v30 & 1) == 0)
      return 0;
    v31 = *(unsigned __int8 *)(a1 + 49);
    v32 = *(unsigned __int8 *)(a2 + 49);
    if (v31 == 4)
    {
      if (v32 != 4)
        return 0;
    }
    else
    {
      result = 0;
      if (v32 == 4 || v31 != v32)
        return result;
    }
    v71 = v12;
    v72 = v4;
    v33 = *(_QWORD *)(a1 + 56);
    v34 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA888320(v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v35 = *(_QWORD *)(a1 + 64);
    v36 = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA891CFC(v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v37 = *(_QWORD *)(a1 + 72);
    v38 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA891B54(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v39 = *(_QWORD *)(a1 + 80);
    v40 = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA891B30(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v41 = *(_QWORD *)(a1 + 88);
    v42 = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA89197C(v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v43 = *(_QWORD *)(a1 + 96);
    v44 = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA891958(v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v45 = *(_QWORD *)(a1 + 104);
    v46 = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA891934(v45, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v47 = *(_QWORD *)(a1 + 112);
    v48 = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA891910(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    if ((sub_1BA8918D8(*(_QWORD *)(a1 + 120), *(_QWORD *)(a2 + 120)) & 1) == 0)
      return 0;
    if ((sub_1BA882880(*(_QWORD *)(a1 + 128), *(_QWORD *)(a2 + 128)) & 1) == 0)
      return 0;
    v49 = *(_QWORD *)(a1 + 136);
    v50 = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA883260(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v51 = *(_QWORD *)(a1 + 144);
    v52 = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA6EB330(v51, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v53 = *(_QWORD *)(a1 + 152);
    v54 = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v73) = sub_1BA8918EC(v53, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) == 0)
      return 0;
    v55 = *(_QWORD *)(a1 + 168);
    v73 = *(_QWORD *)(a1 + 160);
    v56 = *(_QWORD *)(a2 + 168);
    v70 = *(_QWORD *)(a2 + 160);
    if (v55 == 2)
    {
      if (v56 == 2)
      {
LABEL_44:
        v60 = type metadata accessor for FormatPackage();
        if ((_s8NewsFeed21FormatCompilerOptionsV2eeoiySbAC_ACtFZ_0((uint64_t *)(a1 + *(int *)(v60 + 92)), (uint64_t *)(a2 + *(int *)(v60 + 92))) & 1) == 0|| (sub_1BB86EB3C() & 1) == 0)
        {
          return 0;
        }
        sub_1BA6E70E4(a1 + *(int *)(v60 + 100), (uint64_t)v21);
        sub_1BA6E70E4(a2 + *(int *)(v60 + 100), (uint64_t)v18);
        v61 = (uint64_t)v71;
        v62 = (uint64_t)&v71[*(int *)(v10 + 48)];
        sub_1BA6E70E4((uint64_t)v21, (uint64_t)v71);
        sub_1BA6E70E4((uint64_t)v18, v62);
        v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        if (v63(v61, 1, v72) == 1)
        {
          v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v64);
          if (v63(v62, 1, v72) == 1)
          {
            sub_1BA5C699C((uint64_t)v71, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 1;
          }
          goto LABEL_51;
        }
        sub_1BA6E70E4((uint64_t)v71, (uint64_t)v15);
        if (v63(v62, 1, v72) == 1)
        {
          v65 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v65);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v72);
LABEL_51:
          sub_1BA4A2E80((uint64_t)v71, (uint64_t (*)(_QWORD))sub_1BA793CE8);
          return 0;
        }
        v66 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v62, v72);
        v67 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
        sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
        v68 = sub_1BB872958();
        v69 = *(void (**)(char *, uint64_t))(v6 + 8);
        v69(v8, v66);
        sub_1BA5C699C((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v67);
        sub_1BA5C699C((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v67);
        v69(v15, v66);
        sub_1BA5C699C((uint64_t)v71, (unint64_t *)&qword_1ED3C47E8, v67);
        return (v68 & 1) != 0;
      }
    }
    else
    {
      v75 = v73;
      v76 = v55;
      if (v56 != 2)
      {
        v74[0] = v70;
        v74[1] = v56;
        v59 = v73;
        sub_1BA6BAD2C(v73, v55);
        sub_1BA8C89D0(v59, v55);
        LODWORD(v70) = _s8NewsFeed23FormatGroupColumnSystemO2eeoiySbAC_ACtFZ_0(&v75, (uint64_t)v74);
        sub_1BA78DE14(v75, v76);
        sub_1BA79DDC8(v59, v55);
        if ((v70 & 1) == 0)
          return 0;
        goto LABEL_44;
      }
      v57 = v73;
      sub_1BA8C89D0(v73, v55);
      sub_1BA8C89D0(v57, v55);
      sub_1BA78DE14(v57, v55);
    }
    v58 = v70;
    sub_1BA6BAD2C(v70, v56);
    sub_1BA79DDC8(v73, v55);
    sub_1BA79DDC8(v58, v56);
    return 0;
  }
  return result;
}

uint64_t sub_1BB06A084()
{
  return sub_1BB068D1C();
}

uint64_t sub_1BB06A08C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB06A0B4()
{
  uint64_t v0;

  return sub_1BAE3EFA4(*(_BYTE *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_1BB06A0C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A0CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BB06A10C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 49);
  return result;
}

_BYTE *sub_1BB06A118(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 49) = *result;
  return result;
}

uint64_t sub_1BB06A124@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A130(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1BB06A170@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A17C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1BB06A1BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A1C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 72) = v3;
  return result;
}

uint64_t sub_1BB06A208@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A214(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1BB06A254@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A260(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1BB06A2A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A2AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_1BB06A2EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A2F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 104) = v3;
  return result;
}

uint64_t sub_1BB06A338@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A344(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_1BB06A384@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A390(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 136) = v3;
  return result;
}

uint64_t sub_1BB06A3D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A3DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 144) = v3;
  return result;
}

uint64_t sub_1BB06A41C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06A428(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 152) = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatPackage(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    v11 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v11;
    v49 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v49;
    v50 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v50;
    v51 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v51;
    *(_QWORD *)(a1 + 152) = a2[19];
    v47 = a2 + 20;
    v48 = (_OWORD *)(a1 + 160);
    v52 = a2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52 >= 2)
    {
      v12 = a3;
      if (v52 == 2)
      {
        *v48 = *v47;
      }
      else
      {
        *(_BYTE *)(a1 + 160) = *(_BYTE *)v47;
        *(_QWORD *)(a1 + 168) = v52;
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      *v48 = *v47;
      v12 = a3;
    }
    v14 = *(int *)(v12 + 92);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *v15 = *(uint64_t *)((char *)a2 + v14);
    v15[1] = v17;
    v18 = (int *)type metadata accessor for FormatCompilerOptions(0);
    v19 = v18[6];
    v20 = (char *)v15 + v19;
    v21 = v16 + v19;
    v22 = *(_QWORD *)(v16 + v19 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 == 1)
    {
      v23 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v23;
      *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
    }
    else
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v24 = *(_QWORD *)(v21 + 24);
      *((_QWORD *)v20 + 2) = *(_QWORD *)(v21 + 16);
      *((_QWORD *)v20 + 3) = v24;
      v25 = *(_QWORD *)(v21 + 40);
      *((_QWORD *)v20 + 4) = *(_QWORD *)(v21 + 32);
      *((_QWORD *)v20 + 5) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v26 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v27 = &v20[v26];
    v28 = (const void *)(v21 + v26);
    v29 = sub_1BB86E710();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    if (v31(v28, 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = v18[7];
    v34 = (char *)v15 + v33;
    v35 = (const void *)(v16 + v33);
    v53 = v30;
    if (v31((const void *)(v16 + v33), 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v30 + 16))(v34, v35, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    }
    *(_QWORD *)((char *)v15 + v18[8]) = *(_QWORD *)(v16 + v18[8]);
    v37 = *(int *)(a3 + 96);
    v38 = a1 + v37;
    v39 = (uint64_t)a2 + v37;
    v40 = sub_1BB86EB84();
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v41(v38, v39, v40);
    v42 = *(int *)(a3 + 100);
    v43 = (void *)(a1 + v42);
    v44 = (char *)a2 + v42;
    if (v31(v44, 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v43, v44, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v43, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t destroy for FormatPackage(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 168) >= 3uLL)
    swift_bridgeObjectRelease();
  v4 = a1 + a2[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for FormatCompilerOptions(0);
  v6 = v4 + *(int *)(v5 + 24);
  if (*(_QWORD *)(v6 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = v6 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v8 = sub_1BB86E710();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = v4 + *(int *)(v5 + 28);
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  v12 = a1 + a2[24];
  v13 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = a1 + a2[25];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v14, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  return result;
}

uint64_t initializeWithCopy for FormatPackage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  v46 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v46;
  v47 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v47;
  v48 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v48;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v50 = (_BYTE *)(a2 + 160);
  v49 = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49 >= 2)
  {
    v12 = (_OWORD *)(a1 + 160);
    if (v49 != 2)
    {
      *(_BYTE *)(a1 + 160) = *v50;
      *(_QWORD *)(a1 + 168) = v49;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
    v11 = *(_OWORD *)v50;
  }
  else
  {
    v11 = *(_OWORD *)v50;
    v12 = (_OWORD *)(a1 + 160);
  }
  *v12 = v11;
LABEL_7:
  v13 = a3[23];
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  v17 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v18 = v17[6];
  v19 = (char *)v14 + v18;
  v20 = v15 + v18;
  v21 = *(_QWORD *)(v15 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 == 1)
  {
    v22 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v22;
    *((_OWORD *)v19 + 2) = *(_OWORD *)(v20 + 32);
  }
  else
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v23 = *(_QWORD *)(v20 + 24);
    *((_QWORD *)v19 + 2) = *(_QWORD *)(v20 + 16);
    *((_QWORD *)v19 + 3) = v23;
    v24 = *(_QWORD *)(v20 + 40);
    *((_QWORD *)v19 + 4) = *(_QWORD *)(v20 + 32);
    *((_QWORD *)v19 + 5) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v25 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v26 = &v19[v25];
  v27 = (const void *)(v20 + v25);
  v28 = sub_1BB86E710();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v32 = v17[7];
  v33 = (char *)v14 + v32;
  v34 = (const void *)(v15 + v32);
  v51 = v29;
  if (v30((const void *)(v15 + v32), 1, v28))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v33, v34, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  *(_QWORD *)((char *)v14 + v17[8]) = *(_QWORD *)(v15 + v17[8]);
  v36 = a3[24];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_1BB86EB84();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  v40(v37, v38, v39);
  v41 = a3[25];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  if (v30(v43, 1, v28))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v42, v43, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v42, 0, 1, v28);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a2 + 168);
  if (v6 == 2)
  {
    if (v7 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v7 == 2)
  {
    sub_1BA92760C(a1 + 160);
LABEL_11:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    goto LABEL_12;
  }
  if (v6 < 2)
  {
    if (v7 >= 2)
    {
LABEL_8:
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v7 < 2)
  {
    sub_1BB06B59C(a1 + 160, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_11;
  }
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  v8 = *(int *)(a3 + 92);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v12 = v11[6];
  v13 = v9 + v12;
  v14 = (__int128 *)(v10 + v12);
  v15 = *(_QWORD *)(v9 + v12 + 8);
  v16 = *(_QWORD *)(v10 + v12 + 8);
  v45 = a3;
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      v17 = *v14;
      v18 = v14[2];
      *(_OWORD *)(v13 + 16) = v14[1];
      *(_OWORD *)(v13 + 32) = v18;
      *(_OWORD *)v13 = v17;
    }
    else
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      *(_QWORD *)(v13 + 24) = *((_QWORD *)v14 + 3);
      *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
      *(_QWORD *)(v13 + 40) = *((_QWORD *)v14 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_1BA9B798C(v13);
    v20 = v14[1];
    v19 = v14[2];
    *(_OWORD *)v13 = *v14;
    *(_OWORD *)(v13 + 16) = v20;
    *(_OWORD *)(v13 + 32) = v19;
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
    *(_QWORD *)(v13 + 24) = *((_QWORD *)v14 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
    *(_QWORD *)(v13 + 40) = *((_QWORD *)v14 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v21 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v22 = (void *)(v13 + v21);
  v23 = (char *)v14 + v21;
  v24 = sub_1BB86E710();
  v46 = *(_QWORD *)(v24 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  v26 = v25(v22, 1, v24);
  v27 = v25(v23, 1, v24);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v22, 0, 1, v24);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v22, v24);
LABEL_24:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v46 + 24))(v22, v23, v24);
LABEL_25:
  v29 = v11[7];
  v30 = (void *)(v9 + v29);
  v31 = (void *)(v10 + v29);
  v32 = v25((void *)(v9 + v29), 1, v24);
  v33 = v25(v31, 1, v24);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v30, v31, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v30, 0, 1, v24);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v30, v24);
LABEL_30:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v30, v31, v24);
LABEL_31:
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = *(int *)(v45 + 96);
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = *(int *)(v45 + 100);
  v40 = (void *)(a1 + v39);
  v41 = (void *)(a2 + v39);
  LODWORD(v36) = v25((void *)(a1 + v39), 1, v24);
  v42 = v25(v41, 1, v24);
  if (!(_DWORD)v36)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v40, v41, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v40, v24);
    goto LABEL_36;
  }
  if (v42)
  {
LABEL_36:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v40, v41, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v40, 0, 1, v24);
  return a1;
}

uint64_t sub_1BB06B59C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA4CDF6C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t initializeWithTake for FormatPackage(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v6 = a3[23];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v10 = v9[6];
  v11 = (_OWORD *)(v7 + v10);
  v12 = v8 + v10;
  v13 = *(_OWORD *)(v8 + v10 + 16);
  *v11 = *(_OWORD *)(v8 + v10);
  v11[1] = v13;
  v11[2] = *(_OWORD *)(v8 + v10 + 32);
  v14 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v15 = (char *)v11 + v14;
  v16 = (const void *)(v12 + v14);
  v17 = sub_1BB86E710();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = v9[7];
  v22 = (void *)(v7 + v21);
  v23 = (const void *)(v8 + v21);
  if (v19((const void *)(v8 + v21), 1, v17))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    v25 = v18;
  }
  else
  {
    v26 = v23;
    v25 = v18;
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v22, v26, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  *(_QWORD *)(v7 + v9[8]) = *(_QWORD *)(v8 + v9[8]);
  v27 = a3[24];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[25];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  if (v19(v33, 1, v17))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v32, v33, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for FormatPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  v9 = (_OWORD *)(a2 + 160);
  v10 = *(_QWORD *)(a1 + 168);
  v11 = *(_QWORD *)(a2 + 168);
  if (v10 == 2)
    goto LABEL_7;
  if (v11 == 2)
  {
    sub_1BA92760C(a1 + 160);
LABEL_7:
    *(_OWORD *)(a1 + 160) = *v9;
    goto LABEL_8;
  }
  if (v10 < 2)
    goto LABEL_7;
  if (v11 < 2)
  {
    sub_1BB06B59C(a1 + 160, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_7;
  }
  *(_BYTE *)(a1 + 160) = *(_BYTE *)v9;
  *(_QWORD *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
LABEL_8:
  v47 = a3;
  v12 = *(int *)(a3 + 92);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v16 = v15[6];
  v17 = v13 + v16;
  v18 = v14 + v16;
  if (*(_QWORD *)(v13 + v16 + 8) == 1)
  {
LABEL_11:
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v20;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    goto LABEL_13;
  }
  v19 = *(_QWORD *)(v18 + 8);
  if (v19 == 1)
  {
    sub_1BA9B798C(v17);
    goto LABEL_11;
  }
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v22;
  swift_bridgeObjectRelease();
LABEL_13:
  v23 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v24 = (void *)(v17 + v23);
  v25 = (void *)(v18 + v23);
  v26 = sub_1BB86E710();
  v48 = *(_QWORD *)(v26 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  v28 = v27(v24, 1, v26);
  v29 = v27(v25, 1, v26);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v24, v25, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v24, v26);
LABEL_18:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v24, v25, v26);
LABEL_19:
  v31 = v15[7];
  v32 = (void *)(v13 + v31);
  v33 = (void *)(v14 + v31);
  v34 = v27((void *)(v13 + v31), 1, v26);
  v35 = v27(v33, 1, v26);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v32, v33, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v32, 0, 1, v26);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v32, v26);
LABEL_24:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v32, v33, v26);
LABEL_25:
  *(_QWORD *)(v13 + v15[8]) = *(_QWORD *)(v14 + v15[8]);
  swift_bridgeObjectRelease();
  v37 = *(int *)(v47 + 96);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = *(int *)(v47 + 100);
  v42 = (void *)(a1 + v41);
  v43 = (void *)(a2 + v41);
  LODWORD(v38) = v27((void *)(a1 + v41), 1, v26);
  v44 = v27(v43, 1, v26);
  if (!(_DWORD)v38)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v42, v43, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v42, v26);
    goto LABEL_30;
  }
  if (v44)
  {
LABEL_30:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v42, v43, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v42, 0, 1, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPackage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB06BE24(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatCompilerOptions(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[23];
    }
    else
    {
      v12 = sub_1BB86EB84();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[24];
      }
      else
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[25];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPackage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB06BF0C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for FormatCompilerOptions(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[23];
    }
    else
    {
      v12 = sub_1BB86EB84();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[24];
      }
      else
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[25];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatPackage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_1BB06C030 + 4 * byte_1BB8E6C13[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_1BB06C064 + 4 * byte_1BB8E6C0E[v4]))();
}

uint64_t sub_1BB06C064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB06C06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB06C074);
  return result;
}

uint64_t sub_1BB06C080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB06C088);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_1BB06C08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB06C094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPackage.CodingKeys()
{
  return &type metadata for FormatPackage.CodingKeys;
}

unint64_t sub_1BB06C0B4()
{
  unint64_t result;

  result = qword_1EF2BA390;
  if (!qword_1EF2BA390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6E64, &type metadata for FormatPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA390);
  }
  return result;
}

unint64_t sub_1BB06C0FC()
{
  unint64_t result;

  result = qword_1ED3B3AF8;
  if (!qword_1ED3B3AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6D9C, &type metadata for FormatPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3AF8);
  }
  return result;
}

unint64_t sub_1BB06C144()
{
  unint64_t result;

  result = qword_1ED3B3AF0;
  if (!qword_1ED3B3AF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6DC4, &type metadata for FormatPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3AF0);
  }
  return result;
}

unint64_t sub_1BB06C188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BB06CF08(0, &qword_1EF2BA3A0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_OWORD *)((char *)&v25 - v6);
  v8 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v31 = (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v30 = (uint64_t)&v25 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x1E0DEE9D8];
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (uint64_t *)(v8 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)));
  v19 = *(_QWORD *)(v17 + 72);
  v25 = v8;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  v28 = v10;
  v29 = a2;
  v26 = v19;
  v27 = v11;
  do
  {
    sub_1BB065FB4(v18, a2, v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
    {
      sub_1BB06D054((uint64_t)v7, &qword_1EF2BA3A0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    }
    else
    {
      v21 = v30;
      sub_1BB06CEAC((uint64_t)v7, v30, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
      sub_1BB06CEAC(v21, v31, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB39123C(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v23 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      v19 = v26;
      if (v23 >= v22 >> 1)
        v20 = sub_1BB39123C(v22 > 1, v23 + 1, 1, v20);
      v11 = v27;
      *(_QWORD *)(v20 + 16) = v23 + 1;
      sub_1BB06CEAC(v31, v20+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v23, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
      v10 = v28;
      a2 = v29;
    }
    v18 = (uint64_t *)((char *)v18 + v19);
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1BB06C4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v5);
  v45 = (uint64_t)v39 - v6;
  sub_1BA8CED28(0);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v42 = (_QWORD *)((char *)v39 - v10);
  MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)v39 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v39[1] = v2;
  sub_1BB06CF6C(0, &qword_1ED3BCCC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v40 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v51 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v50 = *(_QWORD *)(v15 + 72);
  v16 = a2 + 56;
  v39[0] = a1;
  swift_bridgeObjectRetain();
  v17 = 0;
  v48 = a2;
  v49 = MEMORY[0x1E0DEE9D8];
  v47 = v13;
  do
  {
    v18 = (uint64_t *)(v51 + v50 * v17);
    v19 = *v18;
    swift_beginAccess();
    if (*(_QWORD *)(a2 + 16))
    {
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      sub_1BB8745CC();
      sub_1BB8745D8();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v22 = sub_1BB874608();
      v23 = -1 << *(_BYTE *)(a2 + 32);
      v24 = v22 & ~v23;
      if (((*(_QWORD *)(v16 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
      {
        v25 = ~v23;
        v26 = *(_QWORD *)(a2 + 48);
        while (1)
        {
          v27 = v26 + 24 * v24;
          if (!*(_BYTE *)(v27 + 16))
          {
            v28 = *(_QWORD *)v27 == v21 && *(_QWORD *)(v27 + 8) == v20;
            if (v28 || (sub_1BB874398() & 1) != 0)
              break;
          }
          v24 = (v24 + 1) & v25;
          if (((*(_QWORD *)(v16 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v13 = v47;
            a2 = v48;
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRelease();
        sub_1BB06CFE8();
        v30 = (uint64_t)v42;
        v31 = (uint64_t)v42 + *(int *)(v29 + 48);
        *v42 = v19;
        v32 = v45;
        sub_1BA8CAF1C((uint64_t)v18 + *(int *)(v40 + 36), v45, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
        sub_1BA5193C4(v32, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        swift_storeEnumTagMultiPayload();
        v33 = v41;
        sub_1BA5193C4(v30, v41, (uint64_t (*)(_QWORD))sub_1BA8CED28);
        sub_1BA5193C4(v33, v46, (uint64_t (*)(_QWORD))sub_1BA8CED28);
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v13 = v47;
          a2 = v48;
          v34 = v49;
        }
        else
        {
          v34 = sub_1BB391228(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
          v13 = v47;
          a2 = v48;
        }
        v36 = *(_QWORD *)(v34 + 16);
        v35 = *(_QWORD *)(v34 + 24);
        if (v36 >= v35 >> 1)
          v34 = sub_1BB391228(v35 > 1, v36 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v36 + 1;
        v37 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
        v49 = v34;
        sub_1BA5193C4(v46, v34 + v37 + *(_QWORD *)(v43 + 72) * v36, (uint64_t (*)(_QWORD))sub_1BA8CED28);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
LABEL_4:
    ++v17;
  }
  while (v17 != v13);
  swift_bridgeObjectRelease();
  return v49;
}

unint64_t sub_1BB06C8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BB06CF08(0, &qword_1EF2BA398, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v31 = (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v30 = (uint64_t)&v25 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x1E0DEE9D8];
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (uint64_t *)(v8 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)));
  v19 = *(_QWORD *)(v17 + 72);
  v25 = v8;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  v28 = v10;
  v29 = a2;
  v26 = v19;
  v27 = v11;
  do
  {
    sub_1BB0662D0(v18, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
    {
      sub_1BB06D054((uint64_t)v7, &qword_1EF2BA398, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    }
    else
    {
      v21 = v30;
      sub_1BB06CEAC((uint64_t)v7, v30, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
      sub_1BB06CEAC(v21, v31, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB390FC4(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v23 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      v19 = v26;
      if (v23 >= v22 >> 1)
        v20 = sub_1BB390FC4(v22 > 1, v23 + 1, 1, v20);
      v11 = v27;
      *(_QWORD *)(v20 + 16) = v23 + 1;
      sub_1BB06CEAC(v31, v20+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v23, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
      v10 = v28;
      a2 = v29;
    }
    v18 = (uint64_t *)((char *)v18 + v19);
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BB06CBE0(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  unint64_t i;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v30 = result + 32;
    v5 = a2 + 56;
    v28 = MEMORY[0x1E0DEE9D8];
    v31 = *(_QWORD *)(result + 16);
    while (1)
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v7 = v4;
      v29 = v6;
      while (1)
      {
        if (v7 == v6)
        {
          __break(1u);
          return result;
        }
        v4 = v7 + 1;
        if (*(_QWORD *)(a2 + 16))
          break;
LABEL_8:
        v7 = v4;
        if (v4 == v2)
          return v28;
      }
      v8 = (uint64_t *)(v30 + 40 * v7);
      v10 = *v8;
      v9 = v8[1];
      v11 = v8[3];
      v32 = v8[2];
      v12 = v8[4];
      sub_1BB8745CC();
      v34 = v11;
      swift_bridgeObjectRetain();
      v33 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1BB872A90();
      v13 = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(a2 + 32);
      v15 = v13 & ~v14;
      if (((*(_QWORD *)(v5 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_7;
      v16 = *(_QWORD *)(a2 + 48);
      v17 = (_QWORD *)(v16 + 16 * v15);
      v18 = *v17 == v10 && v17[1] == v9;
      if (!v18 && (sub_1BB874398() & 1) == 0)
        break;
LABEL_25:
      swift_bridgeObjectRelease();
      v24 = v28;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1BAC7AA44(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v24 = v28;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        result = sub_1BAC7AA44(v25 > 1, v26 + 1, 1);
        v24 = v28;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v28 = v24;
      v27 = (_QWORD *)(v24 + 40 * v26);
      v27[4] = v10;
      v27[5] = v9;
      v2 = v31;
      v27[6] = v32;
      v27[7] = v34;
      v27[8] = v33;
      if (v4 == v31)
        return v28;
    }
    v19 = ~v14;
    for (i = v15 + 1; ; i = v21 + 1)
    {
      v21 = i & v19;
      if (((*(_QWORD *)(v5 + (((i & v19) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v19)) & 1) == 0)
        break;
      v22 = (_QWORD *)(v16 + 16 * v21);
      v23 = *v22 == v10 && v22[1] == v9;
      if (v23 || (sub_1BB874398() & 1) != 0)
        goto LABEL_25;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease_n();
    v2 = v31;
    v6 = v29;
    goto LABEL_8;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB06CE5C()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16)
    return 22;
  else
    return v0;
}

uint64_t sub_1BB06CEAC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BB06CF08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4CDF6C(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v6 = sub_1BB873A2C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB06CF6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatSnippet();
    v7 = sub_1BA4A2870(&qword_1ED3D0280, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, (uint64_t)&protocol conformance descriptor for FormatSnippet);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BB06CFE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3BCE70)
  {
    type metadata accessor for FormatSnippet();
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3BCE70);
  }
}

uint64_t sub_1BB06D054(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6;

  sub_1BB06CF08(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t FormatLineScoreDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatLineScoreDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatLineScoreDataVisualization.eventIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLineScoreDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLineScoreDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLineScoreDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatLineScoreDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLineScoreDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatLineScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

_QWORD *FormatLineScoreDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1BB06D360()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB06D39C + 4 * byte_1BB8E6EE0[*v0]))(0x656449746E657665, 0xEF7265696669746ELL);
}

uint64_t sub_1BB06D39C()
{
  return 0x746E656449676174;
}

uint64_t sub_1BB06D3C0()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB06D3DC()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB06D3F8()
{
  sub_1BB06D758();
  return sub_1BB874710();
}

uint64_t sub_1BB06D420()
{
  sub_1BB06D758();
  return sub_1BB87471C();
}

uint64_t FormatLineScoreDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLineScoreDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatLineScoreDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD *v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1BB06DC84(0, &qword_1EF2BA3A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB06D758();
  sub_1BB8746C8();
  v16 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v16 = 1;
    sub_1BB87417C();
    swift_beginAccess();
    v11 = *(_QWORD *)(v3 + 48);
    if (*(_QWORD *)(v11 + 16))
    {
      v17 = 2;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v15 = v12;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1BB06DC2C();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 56);
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = 3;
      v15 = (_QWORD *)v13;
      sub_1BB06DC2C();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB06D758()
{
  unint64_t result;

  result = qword_1EF2BA3B0;
  if (!qword_1EF2BA3B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E70AC, &type metadata for FormatLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA3B0);
  }
  return result;
}

uint64_t FormatLineScoreDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatLineScoreDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatLineScoreDataVisualization.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v38 = *v1;
  sub_1BA89B794();
  v34 = v3;
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v36 = v5;
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB06DC84(0, &qword_1EF2BA3C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB06D758();
  v13 = v37;
  v14 = v1;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    v18 = (uint64_t)a1;
  }
  else
  {
    v15 = v7;
    v16 = v36;
    v37 = a1;
    v44 = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v17;
    v43 = 1;
    v1[4] = sub_1BB874098();
    v1[5] = v20;
    v30 = v1;
    v42 = 2;
    v21 = sub_1BB8740F8();
    v31 = v12;
    if ((v21 & 1) != 0)
    {
      v39 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      sub_1BB8740D4();
      v22 = v9;
      v23 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v16);
    }
    else
    {
      v22 = v9;
      v23 = MEMORY[0x1E0DEE9E8];
    }
    v14 = v30;
    v30[6] = v23;
    v41 = 3;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v40 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v24 = v34;
      v25 = v35;
      sub_1BB8740D4();
      v26 = v22;
      v27 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v24);
    }
    else
    {
      v27 = MEMORY[0x1E0DEE9D8];
      v26 = v22;
    }
    v28 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v26);
    v14[7] = v27;
    v18 = v28;
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v14;
}

_QWORD *sub_1BB06DBAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatLineScoreDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB06DC00(_QWORD *a1)
{
  return FormatLineScoreDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BB06DC20(_QWORD **a1, _QWORD **a2)
{
  return static FormatLineScoreDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BB06DC2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BA3B8;
  if (!qword_1EF2BA3B8)
  {
    sub_1BB06DC84(255, &qword_1EF2BA3A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BA3B8);
  }
  return result;
}

void sub_1BB06DC84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB06D758();
    v7 = a3(a1, &type metadata for FormatLineScoreDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB06DCE0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1EF2B1C28, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatLineScoreDataVisualization);
  a1[2] = sub_1BA50AD30(&qword_1EF2B1C68, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatLineScoreDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2BA3C8, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatLineScoreDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatLineScoreDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BB06DD78@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB06DDC4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatLineScoreDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLineScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatLineScoreDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for FormatLineScoreDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB06DE88 + 4 * byte_1BB8E6EE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB06DEBC + 4 * byte_1BB8E6EE4[v4]))();
}

uint64_t sub_1BB06DEBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB06DEC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB06DECCLL);
  return result;
}

uint64_t sub_1BB06DED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB06DEE0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB06DEE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB06DEEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatLineScoreDataVisualization.CodingKeys()
{
  return &type metadata for FormatLineScoreDataVisualization.CodingKeys;
}

unint64_t sub_1BB06DF0C()
{
  unint64_t result;

  result = qword_1EF2BA490;
  if (!qword_1EF2BA490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E7084, &type metadata for FormatLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA490);
  }
  return result;
}

unint64_t sub_1BB06DF54()
{
  unint64_t result;

  result = qword_1EF2BA498;
  if (!qword_1EF2BA498)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6FF4, &type metadata for FormatLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA498);
  }
  return result;
}

unint64_t sub_1BB06DF9C()
{
  unint64_t result;

  result = qword_1EF2BA4A0;
  if (!qword_1EF2BA4A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E701C, &type metadata for FormatLineScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA4A0);
  }
  return result;
}

uint64_t FormatAnchor.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB06E008 + 4 * byte_1BB8E70FC[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_1BB06E008()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB06E01C()
{
  return 0x676E696461656CLL;
}

uint64_t sub_1BB06E034()
{
  return 0x676E696C69617274;
}

uint64_t sub_1BB06E04C()
{
  return 0x7265746E6563;
}

uint64_t sub_1BB06E060()
{
  return 0x7265746E656368;
}

uint64_t sub_1BB06E078()
{
  return 0x7265746E656376;
}

void sub_1BB06E094(char *a1)
{
  sub_1BB8014C0(*a1);
}

unint64_t sub_1BB06E0A4()
{
  unint64_t result;

  result = qword_1ED3D01E8;
  if (!qword_1ED3D01E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnchor, &type metadata for FormatAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED3D01E8);
  }
  return result;
}

void sub_1BB06E0E8()
{
  char *v0;

  sub_1BAB0B2A4(0, *v0);
}

void sub_1BB06E0F4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB06E128()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB06E1C8(uint64_t a1)
{
  char *v1;

  sub_1BAB0B2A4(a1, *v1);
}

uint64_t sub_1BB06E1D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB06E1F8 + 4 * byte_1BB8E710A[*v0]))();
}

void sub_1BB06E1F8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74746F62;
  a1[1] = 0xE600000000000000;
}

void sub_1BB06E210(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696461656CLL;
  a1[1] = 0xE700000000000000;
}

void sub_1BB06E22C(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696C69617274;
  a1[1] = 0xE800000000000000;
}

void sub_1BB06E248(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E6563;
  a1[1] = 0xE600000000000000;
}

void sub_1BB06E260(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E656368;
  a1[1] = 0xE700000000000000;
}

void sub_1BB06E27C(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E656376;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1BB06E29C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB06E2C8();
  result = sub_1BA5264A0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB06E2C8()
{
  unint64_t result;

  result = qword_1EF2BA4A8;
  if (!qword_1EF2BA4A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnchor, &type metadata for FormatAnchor);
    atomic_store(result, (unint64_t *)&qword_1EF2BA4A8);
  }
  return result;
}

unint64_t sub_1BB06E30C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE7B3E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB06E330(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8366BC();
  a1[2] = sub_1BA836700();
  result = sub_1BB06E0A4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatAnchor()
{
  return &type metadata for FormatAnchor;
}

uint64_t FormatVideoNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB06E3F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _QWORD *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  __int128 v105;
  unsigned __int8 v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  __int128 v110;
  char v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  char v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  _BOOL8 v125;
  uint64_t v126;
  char v127;
  unint64_t v128;
  char v129;
  _QWORD *v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  _QWORD *v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t *v158;
  uint64_t v159;
  char v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  _QWORD *v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  unint64_t v203;
  unint64_t v204;
  _QWORD *v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  uint64_t result;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  int64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t v297;
  _OWORD v298[10];
  char v299;
  _QWORD *v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  char v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  char v322;
  unint64_t v323;

  swift_beginAccess();
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  swift_beginAccess();
  v238 = v1;
  v7 = v1[6];
  swift_beginAccess();
  v237 = a1;
  v8 = *(_QWORD *)(a1 + 48);
  v323 = MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v8 + 16);
  if (__OFADD__(v9, v10))
    goto LABEL_102;
  v234 = v5;
  v236 = v4;
  sub_1BB0715C0();
  v235 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  sub_1BB8727C0();
  v296 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v7 + 16);
  v233 = v6;
  v239 = v8;
  if (!v12)
    goto LABEL_20;
  v293 = v10;
  swift_bridgeObjectRetain();
  v13 = *(_OWORD *)(v11 + 160);
  v319 = *(_OWORD *)(v11 + 144);
  v320 = v13;
  v321 = *(_OWORD *)(v11 + 176);
  v322 = *(_BYTE *)(v11 + 192);
  v14 = *(_OWORD *)(v11 + 96);
  v315 = *(_OWORD *)(v11 + 80);
  v316 = v14;
  v15 = *(_OWORD *)(v11 + 128);
  v317 = *(_OWORD *)(v11 + 112);
  v318 = v15;
  v16 = *(_OWORD *)(v11 + 48);
  v312 = *(_OWORD *)(v11 + 32);
  v313 = v16;
  v314 = *(_OWORD *)(v11 + 64);
  v17 = *((_QWORD *)&v312 + 1);
  v18 = v12 - 1;
  for (i = 200; ; i += 168)
  {
    v20 = v312;
    sub_1BAC6926C((uint64_t)&v312);
    sub_1BAC6926C((uint64_t)&v312);
    swift_bridgeObjectRetain();
    v21 = v323;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v298[0] = v21;
    v24 = sub_1BA6E35A8(v20, v17);
    v25 = *(_QWORD *)(v21 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v28 = v23;
    if (*(_QWORD *)(v21 + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C89E8();
        if ((v28 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B9234(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_1BA6E35A8(v20, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_103;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_11:
        v31 = *(_QWORD **)&v298[0];
        v32 = *(_QWORD *)(*(_QWORD *)&v298[0] + 56) + 168 * v24;
        v34 = *(_OWORD *)(v32 + 16);
        v33 = *(_OWORD *)(v32 + 32);
        v301 = *(_OWORD *)v32;
        v302 = v34;
        v303 = v33;
        v35 = *(_OWORD *)(v32 + 96);
        v37 = *(_OWORD *)(v32 + 48);
        v36 = *(_OWORD *)(v32 + 64);
        v306 = *(_OWORD *)(v32 + 80);
        v307 = v35;
        v304 = v37;
        v305 = v36;
        v39 = *(_OWORD *)(v32 + 128);
        v38 = *(_OWORD *)(v32 + 144);
        v40 = *(_OWORD *)(v32 + 112);
        v311 = *(_BYTE *)(v32 + 160);
        v309 = v39;
        v310 = v38;
        v308 = v40;
        sub_1BAC69354((uint64_t)&v301);
        v42 = v313;
        v41 = v314;
        *(_OWORD *)v32 = v312;
        *(_OWORD *)(v32 + 16) = v42;
        *(_OWORD *)(v32 + 32) = v41;
        v43 = v318;
        v45 = v315;
        v44 = v316;
        *(_OWORD *)(v32 + 80) = v317;
        *(_OWORD *)(v32 + 96) = v43;
        *(_OWORD *)(v32 + 48) = v45;
        *(_OWORD *)(v32 + 64) = v44;
        v47 = v320;
        v46 = v321;
        v48 = v319;
        *(_BYTE *)(v32 + 160) = v322;
        *(_OWORD *)(v32 + 128) = v47;
        *(_OWORD *)(v32 + 144) = v46;
        *(_OWORD *)(v32 + 112) = v48;
        goto LABEL_15;
      }
    }
    v31 = *(_QWORD **)&v298[0];
    *(_QWORD *)(*(_QWORD *)&v298[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v49 = (uint64_t *)(v31[6] + 16 * v24);
    *v49 = v20;
    v49[1] = v17;
    v50 = v31[7] + 168 * v24;
    v51 = v322;
    v53 = v320;
    v52 = v321;
    *(_OWORD *)(v50 + 112) = v319;
    *(_OWORD *)(v50 + 128) = v53;
    *(_OWORD *)(v50 + 144) = v52;
    *(_BYTE *)(v50 + 160) = v51;
    v55 = v317;
    v54 = v318;
    v56 = v316;
    *(_OWORD *)(v50 + 48) = v315;
    *(_OWORD *)(v50 + 64) = v56;
    *(_OWORD *)(v50 + 80) = v55;
    *(_OWORD *)(v50 + 96) = v54;
    v58 = v313;
    v57 = v314;
    *(_OWORD *)v50 = v312;
    *(_OWORD *)(v50 + 16) = v58;
    *(_OWORD *)(v50 + 32) = v57;
    v59 = v31[2];
    v60 = __OFADD__(v59, 1);
    v61 = v59 + 1;
    if (v60)
      goto LABEL_98;
    v31[2] = v61;
    swift_bridgeObjectRetain();
LABEL_15:
    v323 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v296[2];
    v63 = v296[3];
    swift_bridgeObjectRetain();
    if (v62 >= v63 >> 1)
      v296 = sub_1BA6E6D30((_QWORD *)(v63 > 1), v62 + 1, 1, v296);
    v296[2] = v62 + 1;
    v64 = &v296[2 * v62];
    v64[4] = v20;
    v64[5] = v17;
    sub_1BAC69354((uint64_t)&v312);
    if (!v18)
      break;
    v65 = *(_OWORD *)(v11 + i);
    v66 = *(_OWORD *)(v11 + i + 32);
    v313 = *(_OWORD *)(v11 + i + 16);
    v314 = v66;
    v312 = v65;
    v67 = *(_OWORD *)(v11 + i + 48);
    v68 = *(_OWORD *)(v11 + i + 64);
    v69 = *(_OWORD *)(v11 + i + 96);
    v317 = *(_OWORD *)(v11 + i + 80);
    v318 = v69;
    v315 = v67;
    v316 = v68;
    v70 = *(_OWORD *)(v11 + i + 112);
    v71 = *(_OWORD *)(v11 + i + 128);
    v72 = *(_OWORD *)(v11 + i + 144);
    v322 = *(_BYTE *)(v11 + i + 160);
    v320 = v71;
    v321 = v72;
    v319 = v70;
    v17 = *((_QWORD *)&v312 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  v8 = v239;
  v10 = v293;
LABEL_20:
  v73 = sub_1BA6E6D30(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v74 = *(_QWORD *)(v8 + 16);
  if (!v74)
    goto LABEL_68;
  swift_bridgeObjectRetain();
  v75 = *(_OWORD *)(v8 + 160);
  v319 = *(_OWORD *)(v8 + 144);
  v320 = v75;
  v321 = *(_OWORD *)(v8 + 176);
  v322 = *(_BYTE *)(v8 + 192);
  v76 = *(_OWORD *)(v8 + 96);
  v315 = *(_OWORD *)(v8 + 80);
  v316 = v76;
  v77 = *(_OWORD *)(v8 + 128);
  v317 = *(_OWORD *)(v8 + 112);
  v318 = v77;
  v78 = *(_OWORD *)(v8 + 48);
  v312 = *(_OWORD *)(v8 + 32);
  v313 = v78;
  v314 = *(_OWORD *)(v8 + 64);
  v79 = v74 - 1;
  v80 = 200;
  v81 = *((_QWORD *)&v312 + 1);
  while (2)
  {
    v82 = v312;
    v83 = (_QWORD *)v323;
    v84 = *(_QWORD *)(v323 + 16);
    sub_1BAC6926C((uint64_t)&v312);
    if (v84)
    {
      swift_bridgeObjectRetain();
      v85 = sub_1BA6E35A8(v82, v81);
      if ((v86 & 1) != 0)
      {
        v87 = v83[7] + 168 * v85;
        v89 = *(_OWORD *)(v87 + 16);
        v88 = *(_OWORD *)(v87 + 32);
        v301 = *(_OWORD *)v87;
        v302 = v89;
        v303 = v88;
        v90 = *(_OWORD *)(v87 + 48);
        v91 = *(_OWORD *)(v87 + 64);
        v92 = *(_OWORD *)(v87 + 96);
        v306 = *(_OWORD *)(v87 + 80);
        v307 = v92;
        v304 = v90;
        v305 = v91;
        v93 = *(_OWORD *)(v87 + 112);
        v94 = *(_OWORD *)(v87 + 128);
        v95 = *(_OWORD *)(v87 + 144);
        v311 = *(_BYTE *)(v87 + 160);
        v309 = v94;
        v310 = v95;
        v308 = v93;
        sub_1BAC6926C((uint64_t)&v301);
        swift_bridgeObjectRelease();
        v96 = v302;
        if (!(_QWORD)v302)
        {
          v96 = v313;
          swift_bridgeObjectRetain();
        }
        v97 = *((_QWORD *)&v302 + 1);
        v98 = *((_QWORD *)&v302 + 1);
        if ((~*((_QWORD *)&v302 + 1) & 0xF000000000000007) == 0)
        {
          v98 = *((_QWORD *)&v313 + 1);
          sub_1BA6E6C68(*((uint64_t *)&v313 + 1));
        }
        v249 = v98;
        v251 = v80;
        v99 = v303;
        if (!(_QWORD)v303)
        {
          v99 = v314;
          swift_bridgeObjectRetain();
        }
        v253 = v79;
        v100 = *((_QWORD *)&v303 + 1);
        v101 = v304;
        v102 = BYTE8(v304);
        v272 = v304;
        v274 = *((_QWORD *)&v303 + 1);
        v103 = BYTE8(v304);
        if (BYTE8(v304) >= 0xFEu)
        {
          v100 = *((_QWORD *)&v314 + 1);
          v101 = v315;
          v103 = BYTE8(v315);
          sub_1BA6E6C54(*((uint64_t *)&v314 + 1), v315, SBYTE8(v315));
        }
        v243 = v101;
        v245 = v100;
        v240 = v96;
        v104 = v305;
        v105 = v309;
        v268 = *((_QWORD *)&v305 + 1);
        v270 = v305;
        v291 = v306;
        v294 = *((_QWORD *)&v305 + 1);
        v264 = *((_QWORD *)&v306 + 1);
        v266 = v306;
        v287 = v307;
        v289 = *((_QWORD *)&v306 + 1);
        v260 = *((_QWORD *)&v307 + 1);
        v262 = v307;
        v284 = v308;
        v286 = *((_QWORD *)&v307 + 1);
        v256 = *((_QWORD *)&v308 + 1);
        v258 = v308;
        v281 = v309;
        v282 = *((_QWORD *)&v308 + 1);
        v279 = *((_QWORD *)&v309 + 1);
        v106 = v310;
        v277 = v310;
        if (v310 == 254)
        {
          v104 = v316;
          v277 = v321;
          v279 = *((_QWORD *)&v320 + 1);
          v281 = v320;
          v291 = v317;
          v294 = *((_QWORD *)&v316 + 1);
          v287 = v318;
          v289 = *((_QWORD *)&v317 + 1);
          v284 = v319;
          v286 = *((_QWORD *)&v318 + 1);
          v282 = *((_QWORD *)&v319 + 1);
          sub_1BA6E8A48(v316, *((uint64_t *)&v316 + 1), v317, *((uint64_t *)&v317 + 1), v318, *((uint64_t *)&v318 + 1), v319, *((uint64_t *)&v319 + 1), v320, *((uint64_t *)&v320 + 1), v321);
        }
        v242 = v104;
        v247 = v99;
        v107 = *((_QWORD *)&v310 + 1);
        v108 = *((_QWORD *)&v310 + 1);
        if ((~*((_QWORD *)&v310 + 1) & 0xF000000000000007) == 0)
        {
          v108 = *((_QWORD *)&v321 + 1);
          sub_1BA5E7FF4(*((uint64_t *)&v321 + 1));
        }
        v109 = v311;
        if (v311 == 2)
          v109 = v322;
        v241 = v109;
        v110 = v301;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1BA6E6C68(v97);
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v274, v272, v102);
        sub_1BA6E8A48(v270, v268, v266, v264, v262, v260, v258, v256, v105, *((uint64_t *)&v105 + 1), v106);
        sub_1BA5E7FF4(v107);
        v111 = swift_isUniquelyReferenced_nonNull_native();
        v300 = v83;
        v323 = 0x8000000000000000;
        v113 = sub_1BA6E35A8(v110, *((uint64_t *)&v110 + 1));
        v114 = v83[2];
        v115 = (v112 & 1) == 0;
        v116 = v114 + v115;
        if (__OFADD__(v114, v115))
          goto LABEL_100;
        v117 = v112;
        if (v83[3] >= v116)
        {
          v79 = v253;
          v80 = v251;
          if ((v111 & 1) != 0)
          {
            v120 = v240;
            if ((v112 & 1) == 0)
              goto LABEL_63;
          }
          else
          {
            sub_1BB4C89E8();
            v120 = v240;
            if ((v117 & 1) == 0)
              goto LABEL_63;
          }
        }
        else
        {
          sub_1BB4B9234(v116, v111);
          v118 = sub_1BA6E35A8(v110, *((uint64_t *)&v110 + 1));
          v79 = v253;
          v80 = v251;
          if ((v117 & 1) != (v119 & 1))
            goto LABEL_103;
          v113 = v118;
          v120 = v240;
          if ((v117 & 1) == 0)
          {
LABEL_63:
            v148 = v300;
            v300[(v113 >> 6) + 8] |= 1 << v113;
            *(_OWORD *)(v148[6] + 16 * v113) = v110;
            v173 = v148[7] + 168 * v113;
            *(_OWORD *)v173 = v110;
            *(_QWORD *)(v173 + 16) = v120;
            *(_QWORD *)(v173 + 24) = v249;
            *(_QWORD *)(v173 + 32) = v247;
            *(_QWORD *)(v173 + 40) = v245;
            *(_QWORD *)(v173 + 48) = v243;
            *(_BYTE *)(v173 + 56) = v103;
            *(_QWORD *)(v173 + 64) = v242;
            *(_QWORD *)(v173 + 72) = v294;
            *(_QWORD *)(v173 + 80) = v291;
            *(_QWORD *)(v173 + 88) = v289;
            *(_QWORD *)(v173 + 96) = v287;
            *(_QWORD *)(v173 + 104) = v286;
            *(_QWORD *)(v173 + 112) = v284;
            *(_QWORD *)(v173 + 120) = v282;
            *(_QWORD *)(v173 + 128) = v281;
            *(_QWORD *)(v173 + 136) = v279;
            *(_BYTE *)(v173 + 144) = v277;
            *(_QWORD *)(v173 + 152) = v108;
            *(_BYTE *)(v173 + 160) = v241;
            v174 = v148[2];
            v60 = __OFADD__(v174, 1);
            v175 = v174 + 1;
            if (v60)
              goto LABEL_101;
            v148[2] = v175;
            swift_bridgeObjectRetain();
            goto LABEL_65;
          }
        }
        v148 = v300;
        v149 = v300[7] + 168 * v113;
        v151 = *(_OWORD *)(v149 + 16);
        v150 = *(_OWORD *)(v149 + 32);
        v298[0] = *(_OWORD *)v149;
        v298[1] = v151;
        v298[2] = v150;
        v152 = *(_OWORD *)(v149 + 96);
        v154 = *(_OWORD *)(v149 + 48);
        v153 = *(_OWORD *)(v149 + 64);
        v298[5] = *(_OWORD *)(v149 + 80);
        v298[6] = v152;
        v298[3] = v154;
        v298[4] = v153;
        v156 = *(_OWORD *)(v149 + 128);
        v155 = *(_OWORD *)(v149 + 144);
        v157 = *(_OWORD *)(v149 + 112);
        v299 = *(_BYTE *)(v149 + 160);
        v298[8] = v156;
        v298[9] = v155;
        v298[7] = v157;
        sub_1BAC69354((uint64_t)v298);
        *(_OWORD *)v149 = v110;
        *(_QWORD *)(v149 + 16) = v120;
        *(_QWORD *)(v149 + 24) = v249;
        *(_QWORD *)(v149 + 32) = v247;
        *(_QWORD *)(v149 + 40) = v245;
        *(_QWORD *)(v149 + 48) = v243;
        *(_BYTE *)(v149 + 56) = v103;
        *(_QWORD *)(v149 + 64) = v242;
        *(_QWORD *)(v149 + 72) = v294;
        *(_QWORD *)(v149 + 80) = v291;
        *(_QWORD *)(v149 + 88) = v289;
        *(_QWORD *)(v149 + 96) = v287;
        *(_QWORD *)(v149 + 104) = v286;
        *(_QWORD *)(v149 + 112) = v284;
        *(_QWORD *)(v149 + 120) = v282;
        *(_QWORD *)(v149 + 128) = v281;
        *(_QWORD *)(v149 + 136) = v279;
        *(_BYTE *)(v149 + 144) = v277;
        *(_QWORD *)(v149 + 152) = v108;
        *(_BYTE *)(v149 + 160) = v241;
LABEL_65:
        v323 = (unint64_t)v148;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC69354((uint64_t)&v301);
        sub_1BAC69354((uint64_t)&v312);
        v8 = v239;
        if (!v79)
          goto LABEL_67;
LABEL_66:
        v176 = *(_OWORD *)(v8 + v80);
        v177 = *(_OWORD *)(v8 + v80 + 32);
        v313 = *(_OWORD *)(v8 + v80 + 16);
        v314 = v177;
        v312 = v176;
        v178 = *(_OWORD *)(v8 + v80 + 48);
        v179 = *(_OWORD *)(v8 + v80 + 64);
        v180 = *(_OWORD *)(v8 + v80 + 96);
        v317 = *(_OWORD *)(v8 + v80 + 80);
        v318 = v180;
        v315 = v178;
        v316 = v179;
        v181 = *(_OWORD *)(v8 + v80 + 112);
        v182 = *(_OWORD *)(v8 + v80 + 128);
        v183 = *(_OWORD *)(v8 + v80 + 144);
        v322 = *(_BYTE *)(v8 + v80 + 160);
        v320 = v182;
        v321 = v183;
        v319 = v181;
        v81 = *((_QWORD *)&v312 + 1);
        v80 += 168;
        --v79;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1BAC6926C((uint64_t)&v312);
  swift_bridgeObjectRetain();
  v121 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v298[0] = v83;
  v123 = sub_1BA6E35A8(v82, v81);
  v124 = v83[2];
  v125 = (v122 & 1) == 0;
  v126 = v124 + v125;
  if (__OFADD__(v124, v125))
    goto LABEL_97;
  v127 = v122;
  if (v83[3] >= v126)
  {
    if ((v121 & 1) != 0)
    {
      if ((v122 & 1) == 0)
        goto LABEL_56;
    }
    else
    {
      sub_1BB4C89E8();
      if ((v127 & 1) == 0)
        goto LABEL_56;
    }
    goto LABEL_51;
  }
  sub_1BB4B9234(v126, v121);
  v128 = sub_1BA6E35A8(v82, v81);
  if ((v127 & 1) != (v129 & 1))
    goto LABEL_103;
  v123 = v128;
  if ((v127 & 1) != 0)
  {
LABEL_51:
    v130 = *(_QWORD **)&v298[0];
    v131 = *(_QWORD *)(*(_QWORD *)&v298[0] + 56) + 168 * v123;
    v133 = *(_OWORD *)(v131 + 16);
    v132 = *(_OWORD *)(v131 + 32);
    v301 = *(_OWORD *)v131;
    v302 = v133;
    v303 = v132;
    v134 = *(_OWORD *)(v131 + 96);
    v136 = *(_OWORD *)(v131 + 48);
    v135 = *(_OWORD *)(v131 + 64);
    v306 = *(_OWORD *)(v131 + 80);
    v307 = v134;
    v304 = v136;
    v305 = v135;
    v138 = *(_OWORD *)(v131 + 128);
    v137 = *(_OWORD *)(v131 + 144);
    v139 = *(_OWORD *)(v131 + 112);
    v311 = *(_BYTE *)(v131 + 160);
    v309 = v138;
    v310 = v137;
    v308 = v139;
    sub_1BAC69354((uint64_t)&v301);
    v141 = v313;
    v140 = v314;
    *(_OWORD *)v131 = v312;
    *(_OWORD *)(v131 + 16) = v141;
    *(_OWORD *)(v131 + 32) = v140;
    v142 = v318;
    v144 = v315;
    v143 = v316;
    *(_OWORD *)(v131 + 80) = v317;
    *(_OWORD *)(v131 + 96) = v142;
    *(_OWORD *)(v131 + 48) = v144;
    *(_OWORD *)(v131 + 64) = v143;
    v146 = v320;
    v145 = v321;
    v147 = v319;
    *(_BYTE *)(v131 + 160) = v322;
    *(_OWORD *)(v131 + 128) = v146;
    *(_OWORD *)(v131 + 144) = v145;
    *(_OWORD *)(v131 + 112) = v147;
    goto LABEL_58;
  }
LABEL_56:
  v130 = *(_QWORD **)&v298[0];
  *(_QWORD *)(*(_QWORD *)&v298[0] + 8 * (v123 >> 6) + 64) |= 1 << v123;
  v158 = (uint64_t *)(v130[6] + 16 * v123);
  *v158 = v82;
  v158[1] = v81;
  v159 = v130[7] + 168 * v123;
  v160 = v322;
  v162 = v320;
  v161 = v321;
  *(_OWORD *)(v159 + 112) = v319;
  *(_OWORD *)(v159 + 128) = v162;
  *(_OWORD *)(v159 + 144) = v161;
  *(_BYTE *)(v159 + 160) = v160;
  v164 = v317;
  v163 = v318;
  v165 = v316;
  *(_OWORD *)(v159 + 48) = v315;
  *(_OWORD *)(v159 + 64) = v165;
  *(_OWORD *)(v159 + 80) = v164;
  *(_OWORD *)(v159 + 96) = v163;
  v167 = v313;
  v166 = v314;
  *(_OWORD *)v159 = v312;
  *(_OWORD *)(v159 + 16) = v167;
  *(_OWORD *)(v159 + 32) = v166;
  v168 = v130[2];
  v60 = __OFADD__(v168, 1);
  v169 = v168 + 1;
  if (v60)
    goto LABEL_99;
  v130[2] = v169;
  swift_bridgeObjectRetain();
LABEL_58:
  v323 = (unint64_t)v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v170 = v73[2];
  v171 = v73[3];
  swift_bridgeObjectRetain();
  if (v170 >= v171 >> 1)
    v73 = sub_1BA6E6D30((_QWORD *)(v171 > 1), v170 + 1, 1, v73);
  v73[2] = v170 + 1;
  v172 = &v73[2 * v170];
  v172[4] = v82;
  v172[5] = v81;
  sub_1BAC69354((uint64_t)&v312);
  if (v79)
    goto LABEL_66;
LABEL_67:
  swift_bridgeObjectRelease();
LABEL_68:
  *(_QWORD *)&v312 = v73;
  swift_bridgeObjectRetain();
  v184 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v184);
  v185 = v312;
  v186 = *(_QWORD *)(v312 + 16);
  if (v186)
  {
    swift_bridgeObjectRetain();
    v187 = (uint64_t *)(v185 + 40);
    v188 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v189 = v323;
      if (*(_QWORD *)(v323 + 16))
      {
        v191 = *(v187 - 1);
        v190 = *v187;
        swift_bridgeObjectRetain_n();
        v192 = sub_1BA6E35A8(v191, v190);
        if ((v193 & 1) != 0)
        {
          v194 = *(_QWORD *)(v189 + 56) + 168 * v192;
          v196 = *(_OWORD *)(v194 + 16);
          v195 = *(_OWORD *)(v194 + 32);
          v312 = *(_OWORD *)v194;
          v313 = v196;
          v314 = v195;
          v197 = *(_OWORD *)(v194 + 48);
          v198 = *(_OWORD *)(v194 + 64);
          v199 = *(_OWORD *)(v194 + 96);
          v317 = *(_OWORD *)(v194 + 80);
          v318 = v199;
          v315 = v197;
          v316 = v198;
          v200 = *(_OWORD *)(v194 + 112);
          v201 = *(_OWORD *)(v194 + 128);
          v202 = *(_OWORD *)(v194 + 144);
          v322 = *(_BYTE *)(v194 + 160);
          v320 = v201;
          v321 = v202;
          v319 = v200;
          sub_1BAC6926C((uint64_t)&v312);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v188 = sub_1BB38DBB0(0, v188[2] + 1, 1, v188);
          v204 = v188[2];
          v203 = v188[3];
          if (v204 >= v203 >> 1)
            v188 = sub_1BB38DBB0((_QWORD *)(v203 > 1), v204 + 1, 1, v188);
          v188[2] = v204 + 1;
          v205 = &v188[21 * v204];
          v206 = v312;
          v207 = v314;
          *((_OWORD *)v205 + 3) = v313;
          *((_OWORD *)v205 + 4) = v207;
          *((_OWORD *)v205 + 2) = v206;
          v208 = v315;
          v209 = v316;
          v210 = v318;
          *((_OWORD *)v205 + 7) = v317;
          *((_OWORD *)v205 + 8) = v210;
          *((_OWORD *)v205 + 5) = v208;
          *((_OWORD *)v205 + 6) = v209;
          v211 = v319;
          v212 = v320;
          v213 = v321;
          *((_BYTE *)v205 + 192) = v322;
          *((_OWORD *)v205 + 10) = v212;
          *((_OWORD *)v205 + 11) = v213;
          *((_OWORD *)v205 + 9) = v211;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v187 += 2;
      --v186;
    }
    while (v186);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v188 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v214 = v238[7];
  if (!v214)
  {
    v214 = *(_QWORD *)(v237 + 56);
    swift_bridgeObjectRetain();
  }
  v285 = v238[8];
  v215 = v285;
  if ((~v285 & 0xF000000000000007) == 0)
  {
    v215 = *(_QWORD *)(v237 + 64);
    sub_1BA6E6C68(v215);
  }
  v216 = v238[9];
  if (!v216)
    v216 = swift_bridgeObjectRetain();
  v273 = v216;
  v275 = v215;
  v283 = v214;
  v217 = v238[10];
  v218 = v238[11];
  v278 = v218;
  v280 = v217;
  v219 = *((unsigned __int8 *)v238 + 96);
  v276 = *((_BYTE *)v238 + 96);
  if (v219 >= 0xFE)
  {
    v217 = *(_QWORD *)(v237 + 80);
    v218 = *(_QWORD *)(v237 + 88);
    LOBYTE(v219) = *(_BYTE *)(v237 + 96);
    sub_1BA6E6C54(v217, v218, v219);
  }
  v248 = v219;
  v252 = v218;
  v255 = v217;
  v220 = v238[13];
  v221 = v238[14];
  v222 = v238[20];
  v223 = v238[21];
  v224 = v238[22];
  v269 = v221;
  v271 = v220;
  v265 = v238[16];
  v267 = v238[15];
  v295 = v265;
  v297 = v267;
  v261 = v238[18];
  v263 = v238[17];
  v290 = v261;
  v292 = v263;
  v257 = v222;
  v259 = v238[19];
  v288 = v259;
  v254 = v223;
  v250 = v224;
  v225 = *((unsigned __int8 *)v238 + 184);
  v226 = *((_BYTE *)v238 + 184);
  if (v225 == 254)
  {
    v220 = *(_QWORD *)(v237 + 104);
    v221 = *(_QWORD *)(v237 + 112);
    v222 = *(_QWORD *)(v237 + 160);
    v223 = *(_QWORD *)(v237 + 168);
    v224 = *(_QWORD *)(v237 + 176);
    v226 = *(_BYTE *)(v237 + 184);
    v295 = *(_QWORD *)(v237 + 128);
    v297 = *(_QWORD *)(v237 + 120);
    v290 = *(_QWORD *)(v237 + 144);
    v292 = *(_QWORD *)(v237 + 136);
    v288 = *(_QWORD *)(v237 + 152);
    sub_1BA6E8A48(v220, v221, v297, v295, v292, v290, v288, v222, v223, v224, v226);
  }
  v244 = v222;
  v246 = v220;
  v227 = v238[24];
  v228 = v227;
  if ((~v227 & 0xF000000000000007) == 0)
  {
    v228 = *(_QWORD *)(v237 + 192);
    sub_1BA5E7FF4(v228);
  }
  v229 = v221;
  v230 = *((unsigned __int8 *)v238 + 200);
  if (v230 == 2)
    LOBYTE(v230) = *(_BYTE *)(v237 + 200);
  v231 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v231 + 16) = v236;
  *(_QWORD *)(v231 + 24) = v235;
  *(_QWORD *)(v231 + 32) = v234;
  *(_QWORD *)(v231 + 40) = v233;
  swift_beginAccess();
  *(_QWORD *)(v231 + 48) = v188;
  *(_QWORD *)(v231 + 56) = v283;
  *(_QWORD *)(v231 + 64) = v275;
  *(_QWORD *)(v231 + 72) = v273;
  *(_QWORD *)(v231 + 80) = v255;
  *(_QWORD *)(v231 + 88) = v252;
  *(_BYTE *)(v231 + 96) = v248;
  *(_QWORD *)(v231 + 104) = v246;
  *(_QWORD *)(v231 + 112) = v229;
  *(_QWORD *)(v231 + 120) = v297;
  *(_QWORD *)(v231 + 128) = v295;
  *(_QWORD *)(v231 + 136) = v292;
  *(_QWORD *)(v231 + 144) = v290;
  *(_QWORD *)(v231 + 152) = v288;
  *(_QWORD *)(v231 + 160) = v244;
  *(_QWORD *)(v231 + 168) = v223;
  *(_QWORD *)(v231 + 176) = v224;
  *(_BYTE *)(v231 + 184) = v226;
  *(_QWORD *)(v231 + 192) = v228;
  *(_BYTE *)(v231 + 200) = v230;
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v285);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v280, v278, v276);
  sub_1BA6E8A48(v271, v269, v267, v265, v263, v261, v259, v257, v254, v250, v225);
  sub_1BA5E7FF4(v227);
  return v231;
}

uint64_t sub_1BB06F444(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  size_t v26;
  uint64_t isStackAllocationSafe;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t i;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t j;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t result;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  void *v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  char v129;
  uint64_t v130;

  v106 = a1;
  v107 = 0;
  v130 = *MEMORY[0x1E0C80C00];
  v100 = *v1;
  swift_beginAccess();
  v95 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = sub_1BB38DBB0(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v96 = sub_1BB38DB8C(0, v3, 0, v4);
  v98 = *(_QWORD *)(v2 + 16);
  v99 = v2;
  if (!v98)
  {
LABEL_31:
    sub_1BB071620(0);
    v58 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v59 = *(_QWORD *)(v58 + 16);
    if (v59)
    {
      v60 = v59 - 1;
      for (i = 32; ; i += 176)
      {
        v62 = *(_OWORD *)(v58 + i);
        v63 = *(_OWORD *)(v58 + i + 32);
        v109 = *(_OWORD *)(v58 + i + 16);
        v110 = v63;
        v108 = v62;
        v64 = *(_OWORD *)(v58 + i + 48);
        v65 = *(_OWORD *)(v58 + i + 64);
        v66 = *(_OWORD *)(v58 + i + 96);
        v113 = *(_OWORD *)(v58 + i + 80);
        v114 = v66;
        v111 = v64;
        v112 = v65;
        v67 = *(_OWORD *)(v58 + i + 112);
        v68 = *(_OWORD *)(v58 + i + 128);
        v69 = *(_OWORD *)(v58 + i + 160);
        v117 = *(_OWORD *)(v58 + i + 144);
        v118 = v69;
        v116 = v68;
        v115 = v67;
        sub_1BAC6926C((uint64_t)&v108);
        v71 = v5[2];
        v70 = v5[3];
        if (v71 >= v70 >> 1)
          v5 = sub_1BB38DBB0((_QWORD *)(v70 > 1), v71 + 1, 1, v5);
        v5[2] = v71 + 1;
        v72 = &v5[21 * v71];
        v73 = v108;
        v74 = v110;
        *((_OWORD *)v72 + 3) = v109;
        *((_OWORD *)v72 + 4) = v74;
        *((_OWORD *)v72 + 2) = v73;
        v75 = v111;
        v76 = v112;
        v77 = v114;
        *((_OWORD *)v72 + 7) = v113;
        *((_OWORD *)v72 + 8) = v77;
        *((_OWORD *)v72 + 5) = v75;
        *((_OWORD *)v72 + 6) = v76;
        v78 = v115;
        v79 = v116;
        v80 = v117;
        *((_BYTE *)v72 + 192) = v118;
        *((_OWORD *)v72 + 10) = v79;
        *((_OWORD *)v72 + 11) = v80;
        *((_OWORD *)v72 + 9) = v78;
        if (!v60)
          break;
        --v60;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v81 = v5[2];
    if (v81)
    {
      v82 = (uint64_t)v95;
      swift_retain();
      swift_bridgeObjectRetain();
      v83 = v81 - 1;
      v84 = v82;
      for (j = 4; ; j += 21)
      {
        v86 = *(_OWORD *)&v5[j];
        v87 = *(_OWORD *)&v5[j + 4];
        v109 = *(_OWORD *)&v5[j + 2];
        v110 = v87;
        v108 = v86;
        v88 = *(_OWORD *)&v5[j + 6];
        v89 = *(_OWORD *)&v5[j + 8];
        v90 = *(_OWORD *)&v5[j + 12];
        v113 = *(_OWORD *)&v5[j + 10];
        v114 = v90;
        v111 = v88;
        v112 = v89;
        v91 = *(_OWORD *)&v5[j + 14];
        v92 = *(_OWORD *)&v5[j + 16];
        v93 = *(_OWORD *)&v5[j + 18];
        LOBYTE(v118) = v5[j + 20];
        v116 = v92;
        v117 = v93;
        v115 = v91;
        v127 = v92;
        v128 = v93;
        v129 = v118;
        v123 = v112;
        v124 = v113;
        v125 = v90;
        v126 = v91;
        v119 = v108;
        v120 = v109;
        v121 = v110;
        v122 = v111;
        swift_allocObject();
        sub_1BAC6926C((uint64_t)&v108);
        v84 = sub_1BB070B04(v84, &v119);
        swift_release();
        if (!v83)
          break;
        --v83;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v84 = (uint64_t)v95;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v84;
  }
  v97 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
LABEL_3:
  v102 = v6;
  v7 = v97 + 168 * v6;
  v8 = *(_OWORD *)v7;
  v9 = *(_OWORD *)(v7 + 32);
  v120 = *(_OWORD *)(v7 + 16);
  v121 = v9;
  v119 = v8;
  v10 = *(_OWORD *)(v7 + 48);
  v11 = *(_OWORD *)(v7 + 64);
  v12 = *(_OWORD *)(v7 + 96);
  v124 = *(_OWORD *)(v7 + 80);
  v125 = v12;
  v122 = v10;
  v123 = v11;
  v13 = *(_OWORD *)(v7 + 112);
  v14 = *(_OWORD *)(v7 + 128);
  v15 = *(_OWORD *)(v7 + 144);
  v129 = *(_BYTE *)(v7 + 160);
  v127 = v14;
  v128 = v15;
  v126 = v13;
  v16 = v119;
  sub_1BAC6926C((uint64_t)&v119);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v108 = v16;
  swift_bridgeObjectRetain();
  v17 = sub_1BA6E583C((uint64_t *)&v108);
  swift_bridgeObjectRelease();
  v104 = *(_QWORD *)(v17 + 16);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v101 = v5;
  v18 = 0;
  v19 = (uint64_t *)(v17 + 64);
  v20 = v17;
  while (1)
  {
    if (v18 >= *(_QWORD *)(v20 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    v103 = *(v19 - 2);
    v21 = *(v19 - 1);
    v22 = *v19;
    v23 = *(_BYTE *)(v21 + 32);
    v24 = v23 & 0x3F;
    v25 = (unint64_t)((1 << v23) + 63) >> 6;
    v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v28 = (char *)swift_slowAlloc();
    bzero(v28, v26);
    v32 = v25;
    v30 = v107;
    v31 = sub_1BA6EB5B4((uint64_t)v28, v32, v21, v106);
    swift_bridgeObjectRelease();
    if (v30)
      goto LABEL_47;
    v107 = 0;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
LABEL_15:
    v33 = sub_1BA6EB330(v31, v21);
    swift_release();
    if ((v33 & 1) != 0 && (sub_1BA6EBD20(v106, v22) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v34 = v103;
      if (v103 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC6926C((uint64_t)&v119);
        v5 = v101;
        v48 = v101[2];
        v47 = v101[3];
        if (v48 >= v47 >> 1)
          v5 = sub_1BB38DBB0((_QWORD *)(v47 > 1), v48 + 1, 1, v101);
        v5[2] = v48 + 1;
        v49 = &v5[21 * v48];
        v50 = v119;
        v51 = v121;
        *((_OWORD *)v49 + 3) = v120;
        *((_OWORD *)v49 + 4) = v51;
        *((_OWORD *)v49 + 2) = v50;
        v52 = v122;
        v53 = v123;
        v54 = v125;
        *((_OWORD *)v49 + 7) = v124;
        *((_OWORD *)v49 + 8) = v54;
        *((_OWORD *)v49 + 5) = v52;
        *((_OWORD *)v49 + 6) = v53;
        v55 = v126;
        v56 = v127;
        v57 = v128;
        *((_BYTE *)v49 + 192) = v129;
        *((_OWORD *)v49 + 10) = v56;
        *((_OWORD *)v49 + 11) = v57;
        *((_OWORD *)v49 + 9) = v55;
      }
      else
      {
        sub_1BAC6926C((uint64_t)&v119);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = v96;
        v37 = v96[2];
        v36 = v96[3];
        v5 = v101;
        if (v37 >= v36 >> 1)
          v35 = sub_1BB38DB8C((_QWORD *)(v36 > 1), v37 + 1, 1, v96);
        v112 = v123;
        v113 = v124;
        v110 = v121;
        v111 = v122;
        LOBYTE(v118) = v129;
        v116 = v127;
        v117 = v128;
        v114 = v125;
        v115 = v126;
        v108 = v119;
        v109 = v120;
        v35[2] = v37 + 1;
        v96 = v35;
        v38 = &v35[22 * v37];
        v39 = v108;
        v40 = v110;
        *((_OWORD *)v38 + 3) = v109;
        *((_OWORD *)v38 + 4) = v40;
        *((_OWORD *)v38 + 2) = v39;
        v41 = v111;
        v42 = v112;
        v43 = v114;
        *((_OWORD *)v38 + 7) = v113;
        *((_OWORD *)v38 + 8) = v43;
        *((_OWORD *)v38 + 5) = v41;
        *((_OWORD *)v38 + 6) = v42;
        v44 = v115;
        v45 = v117;
        v46 = v118;
        *((_OWORD *)v38 + 10) = v116;
        *((_OWORD *)v38 + 11) = v45;
        *((_OWORD *)v38 + 9) = v44;
        v38[24] = v46;
        v38[25] = v34;
      }
LABEL_26:
      sub_1BAC69354((uint64_t)&v119);
LABEL_27:
      v6 = v102 + 1;
      if (v102 + 1 == v98)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(_QWORD *)(v99 + 16))
LABEL_45:
        __break(1u);
      goto LABEL_3;
    }
    ++v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 += 5;
    if (v104 == v18)
    {
      swift_bridgeObjectRelease();
      sub_1BAC69354((uint64_t)&v119);
      v5 = v101;
      goto LABEL_27;
    }
  }
  v105 = &v95;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v28 = (char *)&v95 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v28, v26);
  v29 = v25;
  v30 = v107;
  v31 = sub_1BA6EB5B4((uint64_t)v28, v29, v21, v106);
  swift_bridgeObjectRelease();
  if (!v30)
  {
    v107 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  result = MEMORY[0x1BCCE5C38](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BB06FBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 64);
  v32 = v3;
  v33 = v2;
  v28 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
  {
    sub_1BB39D8E4();
    v7 = v34;
  }
  v8 = *(_QWORD *)(v1 + 72);
  v29 = v6;
  v30 = v4;
  if (v8)
    v8 = sub_1BAF49D98(v8);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v11 = *(_BYTE *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 112);
  v13 = *(_QWORD *)(v1 + 136);
  v14 = *(unsigned __int8 *)(v1 + 184);
  v31 = v5;
  v26 = *(_QWORD *)(v1 + 104);
  v27 = v8;
  v24 = *(_QWORD *)(v1 + 128);
  v25 = *(_QWORD *)(v1 + 120);
  v22 = *(_QWORD *)(v1 + 152);
  v23 = *(_QWORD *)(v1 + 144);
  v20 = *(_QWORD *)(v1 + 168);
  v21 = *(_QWORD *)(v1 + 160);
  v19 = *(_QWORD *)(v1 + 176);
  sub_1BA6E6C54(v9, v10, v11);
  if (v14 != 254)
  {
    sub_1BB525134();
    v13 = v34;
    v12 = v12;
  }
  v15 = *(_QWORD *)(v1 + 192);
  if ((~v15 & 0xF000000000000007) != 0)
  {
    sub_1BB525134();
    v15 = v34;
  }
  v16 = *(_BYTE *)(v1 + 200);
  v17 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v17 + 16) = v33;
  *(_QWORD *)(v17 + 24) = v32;
  *(_QWORD *)(v17 + 32) = v31;
  *(_QWORD *)(v17 + 40) = v30;
  swift_beginAccess();
  *(_QWORD *)(v17 + 48) = v29;
  *(_QWORD *)(v17 + 56) = v28;
  *(_QWORD *)(v17 + 64) = v7;
  *(_QWORD *)(v17 + 72) = v27;
  *(_QWORD *)(v17 + 80) = v9;
  *(_QWORD *)(v17 + 88) = v10;
  *(_BYTE *)(v17 + 96) = v11;
  *(_QWORD *)(v17 + 104) = v26;
  *(_QWORD *)(v17 + 112) = v12;
  *(_QWORD *)(v17 + 120) = v25;
  *(_QWORD *)(v17 + 128) = v24;
  *(_QWORD *)(v17 + 136) = v13;
  *(_QWORD *)(v17 + 144) = v23;
  *(_QWORD *)(v17 + 152) = v22;
  *(_QWORD *)(v17 + 160) = v21;
  *(_QWORD *)(v17 + 168) = v20;
  *(_QWORD *)(v17 + 176) = v19;
  *(_BYTE *)(v17 + 184) = v14;
  *(_QWORD *)(v17 + 192) = v15;
  *(_BYTE *)(v17 + 200) = v16;
  return v17;
}

uint64_t FormatVideoNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatVideoNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatVideoNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatVideoNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatVideoNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 144);
  v8 = *(_QWORD *)(v1 + 152);
  v9 = *(_QWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 168);
  v11 = *(_QWORD *)(v1 + 176);
  v12 = *(_BYTE *)(v1 + 184);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatVideoNodeStyle.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 192);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatVideoNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t FormatVideoNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:tintColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, __int128 *a10, uint64_t *a11, char a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v14 = swift_allocObject();
  v15 = *a6;
  v16 = *a7;
  v17 = *a9;
  v18 = a9[1];
  v19 = *((_BYTE *)a9 + 16);
  v27 = a10[1];
  v28 = *a10;
  v25 = a10[3];
  v26 = a10[2];
  v20 = *((_QWORD *)a10 + 8);
  v21 = *((_QWORD *)a10 + 9);
  v22 = *((_BYTE *)a10 + 80);
  v23 = *a11;
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 72) = a8;
  *(_QWORD *)(v14 + 80) = v17;
  *(_QWORD *)(v14 + 88) = v18;
  *(_BYTE *)(v14 + 96) = v19;
  *(_OWORD *)(v14 + 104) = v28;
  *(_OWORD *)(v14 + 120) = v27;
  *(_OWORD *)(v14 + 136) = v26;
  *(_OWORD *)(v14 + 152) = v25;
  *(_QWORD *)(v14 + 168) = v20;
  *(_QWORD *)(v14 + 176) = v21;
  *(_BYTE *)(v14 + 184) = v22;
  *(_QWORD *)(v14 + 192) = v23;
  *(_BYTE *)(v14 + 200) = a12;
  return v14;
}

uint64_t FormatVideoNodeStyle.init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:tintColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, __int128 *a10, uint64_t *a11, char a12)
{
  uint64_t v12;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v17 = *a6;
  v18 = *a7;
  v19 = *a9;
  v30 = a9[1];
  v20 = *((_BYTE *)a9 + 16);
  v28 = a10[1];
  v29 = *a10;
  v26 = a10[3];
  v27 = a10[2];
  v24 = *((_QWORD *)a10 + 9);
  v25 = *((_QWORD *)a10 + 8);
  v23 = *((_BYTE *)a10 + 80);
  v21 = *a11;
  swift_beginAccess();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = v17;
  *(_QWORD *)(v12 + 64) = v18;
  *(_QWORD *)(v12 + 72) = a8;
  *(_QWORD *)(v12 + 80) = v19;
  *(_QWORD *)(v12 + 88) = v30;
  *(_BYTE *)(v12 + 96) = v20;
  *(_OWORD *)(v12 + 104) = v29;
  *(_OWORD *)(v12 + 120) = v28;
  *(_OWORD *)(v12 + 136) = v27;
  *(_OWORD *)(v12 + 152) = v26;
  *(_QWORD *)(v12 + 168) = v25;
  *(_QWORD *)(v12 + 176) = v24;
  *(_BYTE *)(v12 + 184) = v23;
  *(_QWORD *)(v12 + 192) = v21;
  *(_BYTE *)(v12 + 200) = a12;
  return v12;
}

uint64_t FormatVideoNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  sub_1BA6E8A78(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  sub_1BA5E800C(*(_QWORD *)(v0 + 192));
  return v0;
}

uint64_t FormatVideoNodeStyle.__deallocating_deinit()
{
  FormatVideoNodeStyle.deinit();
  return swift_deallocClassInstance();
}

_BYTE *sub_1BB0702FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _BYTE *result;

  result = sub_1BAECC7C0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB070324(_QWORD *a1)
{
  return FormatVideoNodeStyle.encode(to:)(a1);
}

uint64_t sub_1BB070344(uint64_t *a1, uint64_t *a2)
{
  return static FormatVideoNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatVideoNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatVideoNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatVideoNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 120);
  v10 = *(_QWORD *)(v1 + 128);
  v11 = *(_QWORD *)(v1 + 136);
  v12 = *(_BYTE *)(v1 + 144);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatVideoNodeStyle.Selector.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 152);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatVideoNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t sub_1BB0703FC@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatVideoNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BB070410(_QWORD *a1)
{
  return FormatVideoNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatVideoNodeStyle.auxViewRequirements.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  ValueMetadata *v4;
  _UNKNOWN **v5;
  uint64_t v6;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v2 = *(_QWORD *)(v0 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    v5 = &protocol witness table for FormatBackground;
    v4 = &type metadata for FormatBackground;
    v3 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = v5;
  sub_1BA6E6C68(v2);
  v6 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v6;
}

uint64_t sub_1BB070524@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 168);
  return result;
}

uint64_t _s8NewsFeed20FormatVideoNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  int v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v63 = *(_QWORD *)(a1 + 32);
  v58 = *(_QWORD *)(a1 + 40);
  v59 = *(_QWORD *)(a1 + 48);
  v57 = *(unsigned __int8 *)(a1 + 56);
  v50 = *(_QWORD *)(a1 + 64);
  v51 = *(_QWORD *)(a1 + 72);
  v52 = *(_QWORD *)(a1 + 80);
  v53 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 112);
  v48 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 120);
  v49 = *(_QWORD *)(a1 + 128);
  v47 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(unsigned __int8 *)(a1 + 160);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v62 = *(_QWORD *)(a2 + 32);
  v54 = *(_QWORD *)(a1 + 96);
  v55 = *(_QWORD *)(a2 + 40);
  v56 = *(_QWORD *)(a2 + 48);
  v60 = *(unsigned __int8 *)(a1 + 144);
  v61 = *(unsigned __int8 *)(a2 + 56);
  v39 = *(_QWORD *)(a2 + 64);
  v40 = *(_QWORD *)(a2 + 72);
  v41 = *(_QWORD *)(a2 + 80);
  v42 = *(_QWORD *)(a2 + 88);
  v43 = *(_QWORD *)(a2 + 96);
  v44 = *(_QWORD *)(a2 + 104);
  v45 = *(_QWORD *)(a2 + 112);
  v46 = *(_QWORD *)(a2 + 120);
  v37 = *(_QWORD *)(a2 + 136);
  v38 = *(_QWORD *)(a2 + 128);
  v10 = *(unsigned __int8 *)(a2 + 144);
  v36 = *(_QWORD *)(a2 + 152);
  v11 = *(unsigned __int8 *)(a2 + 160);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v2)
    {
      if (!v8)
        return 0;
      v35 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA881EAC(v2, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        return 0;
    }
    else
    {
      v35 = v4;
      if (v8)
        return 0;
    }
    if ((~v3 & 0xF000000000000007) != 0)
    {
      v75 = v3;
      if ((~v9 & 0xF000000000000007) != 0)
      {
        v64 = v9;
        swift_retain_n();
        static FormatBackground.== infix(_:_:)((uint64_t)&v75);
        v16 = v15;
        swift_release();
        sub_1BA6E6CD8(v3);
        if ((v16 & 1) == 0)
          return 0;
LABEL_18:
        if (v63)
        {
          v17 = v6;
          v18 = v7;
          v19 = v11;
          v20 = v5;
          v21 = v35;
          if (!v62)
            return 0;
          v22 = v10;
          swift_bridgeObjectRetain();
          v23 = swift_bridgeObjectRetain();
          v24 = sub_1BA882894(v23, v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v24)
            return 0;
        }
        else
        {
          v17 = v6;
          v18 = v7;
          v19 = v11;
          v20 = v5;
          v21 = v35;
          v22 = v10;
          if (v62)
            return 0;
        }
        if (v57 <= 0xFD)
        {
          v75 = v58;
          v76 = v59;
          LOBYTE(v77) = v57;
          v26 = v60;
          if (v61 <= 0xFD)
          {
            v64 = v55;
            v65 = v56;
            LOBYTE(v66) = v61;
            sub_1BA6E6C54(v58, v59, v57);
            sub_1BA6F2B04(v58, v59, v57);
            v28 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v75, (uint64_t)&v64);
            sub_1BA6F2B88(v75, v76, v77);
            sub_1BA6E6CC4(v58, v59, v57);
            if ((v28 & 1) == 0)
              return 0;
LABEL_30:
            if (v26 == 254)
            {
              v29 = v48;
              v30 = v54;
              if (v22 == 254)
              {
LABEL_37:
                if ((~v17 & 0xF000000000000007) == 0)
                {
                  v32 = v36;
                  if ((~v36 & 0xF000000000000007) == 0)
                  {
LABEL_44:
                    if (v18 == 2)
                    {
                      if (v19 == 2)
                        return 1;
                    }
                    else if (v19 != 2 && ((((v18 & 1) == 0) ^ v19) & 1) != 0)
                    {
                      return 1;
                    }
                    return 0;
                  }
                  goto LABEL_42;
                }
                v75 = v17;
                v32 = v36;
                if ((~v36 & 0xF000000000000007) == 0)
                {
                  swift_retain();
LABEL_42:
                  sub_1BA5E7FF4(v32);
                  sub_1BA5E800C(v17);
                  sub_1BA5E800C(v32);
                  return 0;
                }
                v64 = v36;
                swift_retain_n();
                static FormatColor.== infix(_:_:)((uint64_t)&v75);
                v34 = v33;
                swift_release();
                sub_1BA5E800C(v17);
                if ((v34 & 1) != 0)
                  goto LABEL_44;
                return 0;
              }
            }
            else
            {
              v75 = v50;
              v76 = v51;
              v77 = v52;
              v78 = v53;
              v29 = v48;
              v79 = v54;
              v80 = v48;
              v81 = v21;
              v82 = v20;
              v83 = v49;
              v84 = v47;
              v85 = v26;
              if (v22 != 254)
              {
                v64 = v39;
                LODWORD(v65) = v40;
                v66 = v41;
                v67 = v42;
                v68 = v43;
                v69 = v44;
                v70 = v45;
                v71 = v46;
                v72 = v38;
                v73 = v37;
                v74 = v22;
                sub_1BA6E8A48(v50, v51, v52, v53, v54, v48, v21, v20, v49, v47, v26);
                swift_retain();
                v31 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v75, (uint64_t)&v64);
                swift_release();
                sub_1BA6E8A78(v50, v51, v52, v53, v54, v48, v21, v20, v49, v47, v26);
                if ((v31 & 1) == 0)
                  return 0;
                goto LABEL_37;
              }
              swift_retain();
              v30 = v54;
            }
            v75 = v50;
            v76 = v51;
            v77 = v52;
            v78 = v53;
            v79 = v30;
            v80 = v29;
            v81 = v21;
            v82 = v20;
            v83 = v49;
            v84 = v47;
            v85 = v26;
            v86 = v39;
            v87 = v40;
            v88 = v41;
            v89 = v42;
            v90 = v43;
            v91 = v44;
            v92 = v45;
            v93 = v46;
            v94 = v38;
            v95 = v37;
            v96 = v22;
            sub_1BA6E8A48(v39, v40, v41, v42, v43, v44, v45, v46, v38, v37, v22);
            sub_1BA9F10E8((uint64_t)&v75);
            return 0;
          }
          sub_1BA6F2B04(v58, v59, v57);
          sub_1BA6F2B04(v58, v59, v57);
          sub_1BA6F2B88(v58, v59, v57);
          v25 = v61;
        }
        else
        {
          v26 = v60;
          v25 = v61;
          if (v61 > 0xFD)
            goto LABEL_30;
        }
        v27 = v25;
        sub_1BA6E6C54(v55, v56, v25);
        sub_1BA6E6CC4(v58, v59, v57);
        sub_1BA6E6CC4(v55, v56, v27);
        return 0;
      }
      swift_retain();
    }
    else if ((~v9 & 0xF000000000000007) == 0)
    {
      goto LABEL_18;
    }
    sub_1BA6E6C68(v9);
    sub_1BA6E6CD8(v3);
    sub_1BA6E6CD8(v9);
    return 0;
  }
  return result;
}

uint64_t sub_1BB070B04(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int128 v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  char v64;

  v4 = a2[9];
  v62 = a2[8];
  v63 = v4;
  v64 = *((_BYTE *)a2 + 160);
  v5 = a2[5];
  v58 = a2[4];
  v59 = v5;
  v6 = a2[7];
  v60 = a2[6];
  v61 = v6;
  v7 = a2[1];
  v54 = *a2;
  v55 = v7;
  v8 = a2[3];
  v56 = a2[2];
  v57 = v8;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v9;
  *(_QWORD *)(v2 + 24) = v10;
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 40) = v11;
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v12;
  v13 = v55;
  if (!(_QWORD)v55)
    v13 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 56) = v13;
  v53 = *((_QWORD *)&v55 + 1);
  v14 = *((_QWORD *)&v55 + 1);
  if ((~*((_QWORD *)&v55 + 1) & 0xF000000000000007) == 0)
  {
    v14 = *(_QWORD *)(a1 + 64);
    sub_1BA6E6C68(v14);
  }
  *(_QWORD *)(v2 + 64) = v14;
  v15 = v56;
  if (!(_QWORD)v56)
    v15 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 72) = v15;
  v16 = *((_QWORD *)&v56 + 1);
  v17 = v57;
  v51 = v57;
  v52 = *((_QWORD *)&v56 + 1);
  v18 = BYTE8(v57);
  v50 = BYTE8(v57);
  if (BYTE8(v57) >= 0xFEu)
  {
    v16 = *(_QWORD *)(a1 + 80);
    v17 = *(_QWORD *)(a1 + 88);
    v18 = *(_BYTE *)(a1 + 96);
    sub_1BA6E6C54(v16, v17, v18);
  }
  *(_QWORD *)(v2 + 80) = v16;
  *(_QWORD *)(v2 + 88) = v17;
  v19 = *((_QWORD *)&v58 + 1);
  v21 = *((_QWORD *)&v59 + 1);
  v20 = v59;
  v23 = *((_QWORD *)&v60 + 1);
  v22 = v60;
  v24 = *((_QWORD *)&v61 + 1);
  v25 = v61;
  v48 = *((_QWORD *)&v58 + 1);
  v49 = v58;
  v26 = v58;
  v46 = *((_QWORD *)&v59 + 1);
  v47 = v59;
  v44 = *((_QWORD *)&v60 + 1);
  v45 = v60;
  v42 = *((_QWORD *)&v61 + 1);
  v43 = v61;
  v27 = *((_QWORD *)&v62 + 1);
  v29 = v62;
  v40 = v29 >> 64;
  v28 = v29;
  v41 = v62;
  *(_BYTE *)(v2 + 96) = v18;
  v30 = v63;
  v39 = v63;
  if (v63 == 254)
  {
    v37 = *(_QWORD *)(a1 + 112);
    v38 = *(_QWORD *)(a1 + 104);
    v31 = *(_QWORD *)(a1 + 128);
    v36 = *(_QWORD *)(a1 + 120);
    v22 = *(_QWORD *)(a1 + 136);
    v23 = *(_QWORD *)(a1 + 144);
    v25 = *(_QWORD *)(a1 + 152);
    v24 = *(_QWORD *)(a1 + 160);
    v28 = *(_QWORD *)(a1 + 168);
    v27 = *(_QWORD *)(a1 + 176);
    v30 = *(_BYTE *)(a1 + 184);
    sub_1BA6E8A48(v38, v37, v36, v31, v22, v23, v25, v24, v28, v27, v30);
    v21 = v31;
    v20 = v36;
    v19 = v37;
    v26 = v38;
  }
  *(_QWORD *)(v2 + 104) = v26;
  *(_QWORD *)(v2 + 112) = v19;
  *(_QWORD *)(v2 + 120) = v20;
  *(_QWORD *)(v2 + 128) = v21;
  *(_QWORD *)(v2 + 136) = v22;
  *(_QWORD *)(v2 + 144) = v23;
  *(_QWORD *)(v2 + 152) = v25;
  *(_QWORD *)(v2 + 160) = v24;
  *(_QWORD *)(v2 + 168) = v28;
  *(_QWORD *)(v2 + 176) = v27;
  v32 = *((_QWORD *)&v63 + 1);
  v33 = *((_QWORD *)&v63 + 1);
  *(_BYTE *)(v2 + 184) = v30;
  if ((~v33 & 0xF000000000000007) == 0)
  {
    v33 = *(_QWORD *)(a1 + 192);
    sub_1BA5E7FF4(v33);
  }
  *(_QWORD *)(v2 + 192) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v53);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v52, v51, v50);
  sub_1BA6E8A48(v49, v48, v47, v46, v45, v44, v43, v42, v41, v40, v39);
  sub_1BA5E7FF4(v32);
  sub_1BAC69354((uint64_t)&v54);
  v34 = v64;
  if (v64 == 2)
    v34 = *(_BYTE *)(a1 + 200);
  *(_BYTE *)(v2 + 200) = v34;
  return v2;
}

uint64_t sub_1BB070DD4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB070ED8(&qword_1EF2BA4B0, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatVideoNodeStyle()
{
  return objc_opt_self();
}

uint64_t sub_1BB070E28(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BB070ED8(&qword_1ED3A6890, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  result = sub_1BB070ED8(&qword_1EF2B5A68, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB070E74(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB070ED8(&qword_1ED3A6890, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  a1[2] = sub_1BB070ED8(&qword_1EF2B5A68, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  result = sub_1BB070ED8(&qword_1EF2BA4B8, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB070ED8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatVideoNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB070F14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB070F38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB070F38()
{
  unint64_t result;

  result = qword_1EF2BA4C0;
  if (!qword_1EF2BA4C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeStyle.Selector, &type metadata for FormatVideoNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2BA4C0);
  }
  return result;
}

unint64_t sub_1BB070F7C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAEE8E68();
  result = sub_1BAEE8E00();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB070FA8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEE8E68();
  a1[2] = sub_1BAEE8E00();
  result = sub_1BB070FDC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB070FDC()
{
  unint64_t result;

  result = qword_1EF2BA4C8;
  if (!qword_1EF2BA4C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeStyle.Selector, &type metadata for FormatVideoNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2BA4C8);
  }
  return result;
}

uint64_t sub_1BB071020@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB07106C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatVideoNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatVideoNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:tintColor:ignoresSmartInvertColors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t assignWithCopy for FormatVideoNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unsigned int v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  _OWORD *v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BAF913AC(a1 + 24);
    v5 = *(_QWORD *)(a2 + 24);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      v14 = *(_QWORD *)(a2 + 40);
      v15 = *(_QWORD *)(a2 + 48);
      sub_1BA6F2B04(v14, v15, *(_BYTE *)(a2 + 56));
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v14;
      *(_QWORD *)(a1 + 48) = v15;
      v18 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v9;
      sub_1BA6F2B88(v16, v17, v18);
    }
    else
    {
      sub_1BA9F0244(a1 + 40);
      v11 = *(_BYTE *)(a2 + 56);
      *v7 = *v8;
      *(_BYTE *)(a1 + 56) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    sub_1BA6F2B04(v12, v13, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = v9;
  }
  else
  {
    v10 = *v8;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *v7 = v10;
  }
  v19 = (_OWORD *)(a1 + 64);
  v20 = (_OWORD *)(a2 + 64);
  v21 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
    if (v21 == 254)
    {
      v22 = *(_OWORD *)(a2 + 80);
      *v19 = *v20;
      *(_OWORD *)(a1 + 80) = v22;
      v23 = *(_OWORD *)(a2 + 96);
      v24 = *(_OWORD *)(a2 + 112);
      v25 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v24;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v23;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v30 = *(_OWORD *)(a2 + 104);
      v31 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 120) = v31;
      *(_OWORD *)(a1 + 104) = v30;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1BA9F0278(a1 + 64);
    v26 = *(_OWORD *)(a2 + 80);
    *v19 = *v20;
    *(_OWORD *)(a1 + 80) = v26;
    v28 = *(_OWORD *)(a2 + 112);
    v27 = *(_OWORD *)(a2 + 128);
    v29 = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v28;
    *(_OWORD *)(a1 + 128) = v27;
    *(_OWORD *)(a1 + 96) = v29;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_retain();
    swift_release();
    v32 = *(_OWORD *)(a2 + 104);
    v33 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 120) = v33;
    *(_OWORD *)(a1 + 104) = v32;
  }
  v34 = (_QWORD *)(a1 + 152);
  v35 = *(_QWORD *)(a2 + 152);
  v36 = v35 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 152) & 0xF000000000000007) != 0)
  {
    if (v36 != 0xF000000000000007)
    {
      *v34 = v35;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    sub_1BAA5FA24(a1 + 152);
    v35 = *(_QWORD *)(a2 + 152);
    goto LABEL_27;
  }
  if (v36 == 0xF000000000000007)
  {
LABEL_27:
    *v34 = v35;
    goto LABEL_29;
  }
  *v34 = v35;
  swift_retain();
LABEL_29:
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  return a1;
}

uint64_t assignWithTake for FormatVideoNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAF913AC(a1 + 24);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *v7;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    goto LABEL_11;
  }
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 > 0xFD)
  {
    sub_1BA9F0244(a1 + 40);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *v7;
  *(_BYTE *)(a1 + 56) = v9;
  sub_1BA6F2B88(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
LABEL_14:
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    sub_1BA9F0278(a1 + 64);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
LABEL_16:
  v14 = (_QWORD *)(a1 + 152);
  v15 = *(_QWORD *)(a2 + 152);
  if ((~*(_QWORD *)(a1 + 152) & 0xF000000000000007) != 0)
  {
    if ((~v15 & 0xF000000000000007) != 0)
    {
      *v14 = v15;
      swift_release();
      goto LABEL_21;
    }
    sub_1BAA5FA24(a1 + 152);
  }
  *v14 = v15;
LABEL_21:
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoNodeStyle.Selector()
{
  return &type metadata for FormatVideoNodeStyle.Selector;
}

void sub_1BB0715C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BA4D0)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BA4D0);
  }
}

void sub_1BB071620(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2BA4D8)
  {
    v2 = sub_1BB071678();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2BA4D8);
  }
}

unint64_t sub_1BB071678()
{
  unint64_t result;

  result = qword_1EF2C2390;
  if (!qword_1EF2C2390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E73C4, &type metadata for FormatVideoNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C2390);
  }
  return result;
}

_QWORD *sub_1BB0716BC(double *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v14;
  char *v15;
  void (*v16)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  _OWORD v55[2];
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1EF2A9CF0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v42 = *(_QWORD *)(v4 + 72);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = (_QWORD *)(v6 + v5);
  if (a2)
  {
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    v47 = sub_1BB06FBC0();
    v48 = 0u;
    v49 = 0u;
    v50 = 0;
    v51 = xmmword_1BB8E7290;
    v10 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v47, v10 + 16);
    v11 = sub_1BA9F10D0;
  }
  else
  {
    v10 = 0;
    v8 = 0;
    v9 = 0xE000000000000000;
    v11 = sub_1BB739F50;
  }
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = (uint64_t (**)())((char *)v7 + *(int *)(v12 + 24));
  *v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(_QWORD *)(v6 + v5) = v8;
  v7[2] = 0;
  v7[3] = 0;
  v7[1] = v9;
  v15 = (char *)v7 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = -1;
  v16 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v16(v7, 0, 1, v12);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v55);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(v17 + 48) = v56;
  v18 = v55[1];
  *(_OWORD *)(v17 + 16) = v55[0];
  *(_OWORD *)(v17 + 32) = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB8827B0;
  v20 = v19 + v5;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6F65646956, 0xE500000000000000, (_QWORD *)(v19 + v5));
  v16((_QWORD *)(v19 + v5), 0, 1, v12);
  if (a2)
  {
    v21 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v21, (_QWORD *)(v20 + v42));
    v16((_QWORD *)(v20 + v42), 0, 1, v12);
    v22 = *(_QWORD *)(a2 + 64);
    sub_1BA6E6C68(v22);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v20 + v42));
    v16((_QWORD *)(v20 + v42), 0, 1, v12);
    v22 = 0xF000000000000007;
  }
  sub_1BAAFC1B0(0x756F72676B636142, 0xEA0000000000646ELL, v22, (_QWORD *)(v20 + 2 * v42));
  v16((_QWORD *)(v20 + 2 * v42), 0, 1, v12);
  if (a2)
  {
    v23 = *(_QWORD *)(a2 + 192);
    sub_1BA5E7FF4(v23);
    sub_1BAAF7724(0x6C6F4320746E6954, 0xEA0000000000726FLL, v23, (_QWORD *)(v20 + 3 * v42));
    v16((_QWORD *)(v20 + 3 * v42), 0, 1, v12);
    v24 = *(_BYTE *)(a2 + 200);
  }
  else
  {
    sub_1BAAF7724(0x6C6F4320746E6954, 0xEA0000000000726FLL, 0xF000000000000007, (_QWORD *)(v20 + 3 * v42));
    v16((_QWORD *)(v20 + 3 * v42), 0, 1, v12);
    v24 = 2;
  }
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v24, (_QWORD *)(v20 + 4 * v42));
  v16((_QWORD *)(v20 + 4 * v42), 0, 1, v12);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v19, v57);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(v25 + 48) = v58;
  v26 = v57[1];
  *(_OWORD *)(v25 + 16) = v57[0];
  *(_OWORD *)(v25 + 32) = v26;
  if (a2)
  {
    v27 = *(_QWORD *)(a2 + 80);
    v28 = *(_QWORD *)(a2 + 88);
    v29 = *(_BYTE *)(a2 + 96);
    sub_1BA6E6C54(v27, v28, v29);
  }
  else
  {
    v27 = 0;
    v28 = 0;
    v29 = -2;
  }
  v47 = v27;
  *(_QWORD *)&v48 = v28;
  BYTE8(v48) = v29;
  v30 = sub_1BB4D88A0(a1, (uint64_t)&v47);
  sub_1BA6E6CC4(v27, v28, v29);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v30;
  if (a2)
  {
    v41 = *(_BYTE *)(a2 + 184);
    v44 = *(_QWORD *)(a2 + 176);
    v45 = *(_QWORD *)(a2 + 168);
    v31 = *(_QWORD *)(a2 + 104);
    v32 = *(_QWORD *)(a2 + 112);
    v33 = *(_QWORD *)(a2 + 120);
    v34 = *(_QWORD *)(a2 + 128);
    v35 = *(_QWORD *)(a2 + 136);
    v36 = *(_QWORD *)(a2 + 144);
    v37 = *(_QWORD *)(a2 + 152);
    a2 = *(_QWORD *)(a2 + 160);
    sub_1BA6E8A48(v31, v32, v33, v34, v35, v36, v37, a2, v45, v44, v41);
  }
  else
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v44 = 0;
    v45 = 0;
    v41 = -2;
  }
  v47 = v31;
  *(_QWORD *)&v48 = v32;
  *((_QWORD *)&v48 + 1) = v33;
  *(_QWORD *)&v49 = v34;
  *((_QWORD *)&v49 + 1) = v35;
  v50 = v36;
  *(_QWORD *)&v51 = v37;
  *((_QWORD *)&v51 + 1) = a2;
  v52 = v45;
  v53 = v44;
  v54 = v41;
  v40 = sub_1BB05E83C((uint64_t)&v47);
  sub_1BA6E8A78(v31, v32, v33, v34, v35, v36, v37, a2, v45, v44, v41);
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 184) = &off_1E7335C38;
  *(_QWORD *)(inited + 152) = v40;
  v38 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  return v38;
}

uint64_t sub_1BB071D98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB071DCC()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1BB071DFC(uint64_t a1, uint64_t a2)
{
  if (!a2)
    return 0x776F6C6C61736944;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872AFC((_QWORD *)0xD00000000000001FLL);
  return 0xD00000000000001FLL;
}

uint64_t sub_1BB071E98()
{
  uint64_t *v0;

  return sub_1BB071DFC(*v0, v0[1]);
}

ValueMetadata *type metadata accessor for FeedGroupFreezeError()
{
  return &type metadata for FeedGroupFreezeError;
}

uint64_t *sub_1BB071EB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  char *__dsta;
  char *__dst;
  char *v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for FormatBindingContent();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v48 = v8;
      v49 = v7;
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      v13 = *(int *)(v7 + 28);
      v14 = (uint64_t *)((char *)a1 + v13);
      v15 = (char *)a2 + v13;
      v16 = *(uint64_t *)((char *)a2 + v13 + 8);
      *v14 = *(uint64_t *)((char *)a2 + v13);
      v14[1] = v16;
      v17 = (int *)type metadata accessor for FormatContent(0);
      v18 = v17[5];
      __dsta = &v15[v18];
      v46 = (char *)v14 + v18;
      v19 = sub_1BB86C8B0();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v46, __dsta, v19);
      v21 = v17[6];
      v22 = (_QWORD *)((char *)v14 + v21);
      v23 = &v15[v21];
      v24 = *((_QWORD *)v23 + 1);
      *v22 = *(_QWORD *)v23;
      v22[1] = v24;
      v25 = v17[7];
      v26 = (_QWORD *)((char *)v14 + v25);
      v27 = &v15[v25];
      v28 = *((_QWORD *)v27 + 1);
      *v26 = *(_QWORD *)v27;
      v26[1] = v28;
      v29 = v17[8];
      v30 = (_QWORD *)((char *)v14 + v29);
      v31 = &v15[v29];
      v32 = *((_QWORD *)v31 + 1);
      *v30 = *(_QWORD *)v31;
      v30[1] = v32;
      v33 = v17[9];
      v34 = (_QWORD *)((char *)v14 + v33);
      v35 = &v15[v33];
      v36 = *((_QWORD *)v35 + 1);
      *v34 = *(_QWORD *)v35;
      v34[1] = v36;
      v37 = v17[10];
      __dst = (char *)v14 + v37;
      v38 = &v15[v37];
      v39 = sub_1BB871E24();
      v43 = *(_QWORD *)(v39 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v47(v38, 1, v39))
      {
        sub_1BA6D940C(0);
        memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v39);
      }
      *(_QWORD *)((char *)v14 + v17[11]) = *(_QWORD *)&v15[v17[11]];
      *(_QWORD *)((char *)v14 + v17[12]) = *(_QWORD *)&v15[v17[12]];
      *(_QWORD *)((char *)v14 + v17[13]) = *(_QWORD *)&v15[v17[13]];
      *(_QWORD *)((char *)v14 + v17[14]) = *(_QWORD *)&v15[v17[14]];
      *(_QWORD *)((char *)v14 + v17[15]) = *(_QWORD *)&v15[v17[15]];
      *(_QWORD *)((char *)v14 + v17[16]) = *(_QWORD *)&v15[v17[16]];
      *(_QWORD *)((char *)v14 + v17[17]) = *(_QWORD *)&v15[v17[17]];
      v41 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v48 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41(a1, 0, 1, v49);
    }
  }
  return a1;
}

uint64_t sub_1BB072198(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for FormatBindingContent();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 28);
    swift_bridgeObjectRelease();
    v5 = type metadata accessor for FormatContent(0);
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v4 + *(int *)(v5 + 40);
    v9 = sub_1BB871E24();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BB072328(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  char *__dsta;
  char *__dst;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v6 = type metadata accessor for FormatBindingContent();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v46 = v7;
    v47 = v6;
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = *(int *)(v6 + 28);
    v48 = a1;
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)((char *)a2 + v11 + 8);
    *v12 = *(_QWORD *)((char *)a2 + v11);
    v12[1] = v14;
    v15 = (int *)type metadata accessor for FormatContent(0);
    v16 = v15[5];
    __dsta = (char *)v12 + v16;
    v17 = &v13[v16];
    v18 = sub_1BB86C8B0();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(__dsta, v17, v18);
    v20 = v15[6];
    v21 = (_QWORD *)((char *)v12 + v20);
    v22 = &v13[v20];
    v23 = *((_QWORD *)v22 + 1);
    *v21 = *(_QWORD *)v22;
    v21[1] = v23;
    v24 = v15[7];
    v25 = (_QWORD *)((char *)v12 + v24);
    v26 = &v13[v24];
    v27 = *((_QWORD *)v26 + 1);
    *v25 = *(_QWORD *)v26;
    v25[1] = v27;
    v28 = v15[8];
    v29 = (_QWORD *)((char *)v12 + v28);
    v30 = &v13[v28];
    v31 = *((_QWORD *)v30 + 1);
    *v29 = *(_QWORD *)v30;
    v29[1] = v31;
    v32 = v15[9];
    v33 = (_QWORD *)((char *)v12 + v32);
    v34 = &v13[v32];
    v35 = *((_QWORD *)v34 + 1);
    *v33 = *(_QWORD *)v34;
    v33[1] = v35;
    v36 = v15[10];
    __dst = (char *)v12 + v36;
    v37 = &v13[v36];
    v38 = sub_1BB871E24();
    v39 = *(_QWORD *)(v38 - 8);
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43(v37, 1, v38))
    {
      sub_1BA6D940C(0);
      memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    *(_QWORD *)((char *)v12 + v15[11]) = *(_QWORD *)&v13[v15[11]];
    *(_QWORD *)((char *)v12 + v15[12]) = *(_QWORD *)&v13[v15[12]];
    *(_QWORD *)((char *)v12 + v15[13]) = *(_QWORD *)&v13[v15[13]];
    *(_QWORD *)((char *)v12 + v15[14]) = *(_QWORD *)&v13[v15[14]];
    *(_QWORD *)((char *)v12 + v15[15]) = *(_QWORD *)&v13[v15[15]];
    *(_QWORD *)((char *)v12 + v15[16]) = *(_QWORD *)&v13[v15[16]];
    *(_QWORD *)((char *)v12 + v15[17]) = *(_QWORD *)&v13[v15[17]];
    v41 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = v48;
    v41(v48, 0, 1, v47);
  }
  return a1;
}

_QWORD *sub_1BB0725F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  void (*v62)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v65;
  char *v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  char *__dsta;
  char *__dst;
  uint64_t v70;
  _QWORD *v71;

  v6 = type metadata accessor for FormatBindingContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BB072C20((uint64_t)a1);
      goto LABEL_7;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34 = *(int *)(v6 + 28);
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (char *)a2 + v34;
    *v35 = *(_QWORD *)((char *)a2 + v34);
    v35[1] = *(_QWORD *)((char *)a2 + v34 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v37 = (int *)type metadata accessor for FormatContent(0);
    v38 = v37[5];
    v39 = (char *)v35 + v38;
    v40 = &v36[v38];
    v41 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
    v42 = v37[6];
    v43 = (_QWORD *)((char *)v35 + v42);
    v44 = &v36[v42];
    *v43 = *(_QWORD *)v44;
    v43[1] = *((_QWORD *)v44 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v45 = v37[7];
    v46 = (_QWORD *)((char *)v35 + v45);
    v47 = &v36[v45];
    *v46 = *(_QWORD *)v47;
    v46[1] = *((_QWORD *)v47 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v48 = v37[8];
    v49 = (_QWORD *)((char *)v35 + v48);
    v50 = &v36[v48];
    *v49 = *(_QWORD *)v50;
    v49[1] = *((_QWORD *)v50 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v51 = v37[9];
    v52 = (_QWORD *)((char *)v35 + v51);
    v53 = &v36[v51];
    *v52 = *(_QWORD *)v53;
    v52[1] = *((_QWORD *)v53 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v54 = v37[10];
    v55 = (char *)v35 + v54;
    v56 = &v36[v54];
    v57 = sub_1BB871E24();
    v58 = *(_QWORD *)(v57 - 8);
    v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
    v60 = v59(v55, 1, v57);
    v61 = v59(v56, 1, v57);
    if (v60)
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_16:
        *(_QWORD *)((char *)v35 + v37[11]) = *(_QWORD *)&v36[v37[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v35 + v37[12]) = *(_QWORD *)&v36[v37[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v35 + v37[13]) = *(_QWORD *)&v36[v37[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v35 + v37[14]) = *(_QWORD *)&v36[v37[14]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v35 + v37[15]) = *(_QWORD *)&v36[v37[15]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v35 + v37[16]) = *(_QWORD *)&v36[v37[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v35 + v37[17]) = *(_QWORD *)&v36[v37[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v55, v56, v57);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    }
    sub_1BA6D940C(0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v70 = v7;
  v71 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v11 = *(int *)(v6 + 28);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (char *)a2 + v11;
  *v12 = *(_QWORD *)((char *)a2 + v11);
  v12[1] = *(_QWORD *)((char *)a2 + v11 + 8);
  v14 = (int *)type metadata accessor for FormatContent(0);
  v15 = v14[5];
  v66 = &v13[v15];
  __dsta = (char *)v12 + v15;
  v16 = sub_1BB86C8B0();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(__dsta, v66, v16);
  v18 = v14[6];
  v19 = (_QWORD *)((char *)v12 + v18);
  v20 = &v13[v18];
  *v19 = *(_QWORD *)v20;
  v19[1] = *((_QWORD *)v20 + 1);
  v21 = v14[7];
  v22 = (_QWORD *)((char *)v12 + v21);
  v23 = &v13[v21];
  *v22 = *(_QWORD *)v23;
  v22[1] = *((_QWORD *)v23 + 1);
  v24 = v14[8];
  v25 = (_QWORD *)((char *)v12 + v24);
  v26 = &v13[v24];
  *v25 = *(_QWORD *)v26;
  v25[1] = *((_QWORD *)v26 + 1);
  v27 = v14[9];
  v28 = (_QWORD *)((char *)v12 + v27);
  v29 = &v13[v27];
  *v28 = *(_QWORD *)v29;
  v28[1] = *((_QWORD *)v29 + 1);
  v30 = v14[10];
  __dst = (char *)v12 + v30;
  v31 = &v13[v30];
  v32 = sub_1BB871E24();
  v65 = *(_QWORD *)(v32 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67(v31, 1, v32))
  {
    sub_1BA6D940C(0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(__dst, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(__dst, 0, 1, v32);
  }
  *(_QWORD *)((char *)v12 + v14[11]) = *(_QWORD *)&v13[v14[11]];
  *(_QWORD *)((char *)v12 + v14[12]) = *(_QWORD *)&v13[v14[12]];
  *(_QWORD *)((char *)v12 + v14[13]) = *(_QWORD *)&v13[v14[13]];
  *(_QWORD *)((char *)v12 + v14[14]) = *(_QWORD *)&v13[v14[14]];
  *(_QWORD *)((char *)v12 + v14[15]) = *(_QWORD *)&v13[v14[15]];
  *(_QWORD *)((char *)v12 + v14[16]) = *(_QWORD *)&v13[v14[16]];
  *(_QWORD *)((char *)v12 + v14[17]) = *(_QWORD *)&v13[v14[17]];
  v62 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1 = v71;
  v62(v71, 0, 1, v6);
  return a1;
}

uint64_t sub_1BB072C20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatBindingContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1BB072C5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for FormatBindingContent();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    v9 = *(int *)(v6 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for FormatContent(0);
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
    *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
    *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
    *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
    v17 = v12[10];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = sub_1BB871E24();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1BA6D940C(0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
    *(_QWORD *)&v10[v12[12]] = *(_QWORD *)&v11[v12[12]];
    *(_QWORD *)&v10[v12[13]] = *(_QWORD *)&v11[v12[13]];
    *(_QWORD *)&v10[v12[14]] = *(_QWORD *)&v11[v12[14]];
    *(_QWORD *)&v10[v12[15]] = *(_QWORD *)&v11[v12[15]];
    *(_QWORD *)&v10[v12[16]] = *(_QWORD *)&v11[v12[16]];
    *(_QWORD *)&v10[v12[17]] = *(_QWORD *)&v11[v12[17]];
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_1BB072E5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;

  v6 = type metadata accessor for FormatBindingContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BB072C20((uint64_t)a1);
      goto LABEL_7;
    }
    v26 = a2[1];
    *a1 = *a2;
    a1[1] = v26;
    swift_bridgeObjectRelease();
    v27 = a2[3];
    a1[2] = a2[2];
    a1[3] = v27;
    swift_bridgeObjectRelease();
    v28 = a2[5];
    a1[4] = a2[4];
    a1[5] = v28;
    swift_bridgeObjectRelease();
    v29 = *(int *)(v6 + 28);
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (char *)a2 + v29;
    v32 = *(_QWORD *)((char *)a2 + v29 + 8);
    *v30 = *(_QWORD *)((char *)a2 + v29);
    v30[1] = v32;
    swift_bridgeObjectRelease();
    v33 = (int *)type metadata accessor for FormatContent(0);
    v34 = v33[5];
    v35 = (char *)v30 + v34;
    v36 = &v31[v34];
    v37 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
    v38 = v33[6];
    v39 = (_QWORD *)((char *)v30 + v38);
    v40 = &v31[v38];
    v42 = *(_QWORD *)v40;
    v41 = *((_QWORD *)v40 + 1);
    *v39 = v42;
    v39[1] = v41;
    swift_bridgeObjectRelease();
    v43 = v33[7];
    v44 = (_QWORD *)((char *)v30 + v43);
    v45 = &v31[v43];
    v47 = *(_QWORD *)v45;
    v46 = *((_QWORD *)v45 + 1);
    *v44 = v47;
    v44[1] = v46;
    swift_bridgeObjectRelease();
    v48 = v33[8];
    v49 = (_QWORD *)((char *)v30 + v48);
    v50 = &v31[v48];
    v52 = *(_QWORD *)v50;
    v51 = *((_QWORD *)v50 + 1);
    *v49 = v52;
    v49[1] = v51;
    swift_bridgeObjectRelease();
    v53 = v33[9];
    v54 = (_QWORD *)((char *)v30 + v53);
    v55 = &v31[v53];
    v57 = *(_QWORD *)v55;
    v56 = *((_QWORD *)v55 + 1);
    *v54 = v57;
    v54[1] = v56;
    swift_bridgeObjectRelease();
    v58 = v33[10];
    v59 = (char *)v30 + v58;
    v60 = &v31[v58];
    v61 = sub_1BB871E24();
    v62 = *(_QWORD *)(v61 - 8);
    v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
    v64 = v63(v59, 1, v61);
    v65 = v63(v60, 1, v61);
    if (v64)
    {
      if (!v65)
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_16:
        *(_QWORD *)((char *)v30 + v33[11]) = *(_QWORD *)&v31[v33[11]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v30 + v33[12]) = *(_QWORD *)&v31[v33[12]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v30 + v33[13]) = *(_QWORD *)&v31[v33[13]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v30 + v33[14]) = *(_QWORD *)&v31[v33[14]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v30 + v33[15]) = *(_QWORD *)&v31[v33[15]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v30 + v33[16]) = *(_QWORD *)&v31[v33[16]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v30 + v33[17]) = *(_QWORD *)&v31[v33[17]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v65)
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v59, v60, v61);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
    }
    sub_1BA6D940C(0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = *(int *)(v6 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v15 = (int *)type metadata accessor for FormatContent(0);
  v16 = v15[5];
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)&v13[v15[6]] = *(_OWORD *)&v14[v15[6]];
  *(_OWORD *)&v13[v15[7]] = *(_OWORD *)&v14[v15[7]];
  *(_OWORD *)&v13[v15[8]] = *(_OWORD *)&v14[v15[8]];
  *(_OWORD *)&v13[v15[9]] = *(_OWORD *)&v14[v15[9]];
  v20 = v15[10];
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = sub_1BB871E24();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BA6D940C(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_QWORD *)&v13[v15[11]] = *(_QWORD *)&v14[v15[11]];
  *(_QWORD *)&v13[v15[12]] = *(_QWORD *)&v14[v15[12]];
  *(_QWORD *)&v13[v15[13]] = *(_QWORD *)&v14[v15[13]];
  *(_QWORD *)&v13[v15[14]] = *(_QWORD *)&v14[v15[14]];
  *(_QWORD *)&v13[v15[15]] = *(_QWORD *)&v14[v15[15]];
  *(_QWORD *)&v13[v15[16]] = *(_QWORD *)&v14[v15[16]];
  *(_QWORD *)&v13[v15[17]] = *(_QWORD *)&v14[v15[17]];
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1BB0732C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0732D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for FormatBindingContent();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1BB073320()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB07332C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for FormatBindingContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BB07337C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatBindingContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BB0733B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatBindingContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DebugFormatBindingItem()
{
  uint64_t result;

  result = qword_1EF2BA550;
  if (!qword_1EF2BA550)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB073430()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatBindingContent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t FeedSponsorshipBannerAd.init(identifier:sponsoredBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v6 = sub_1BB871E24();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t FeedSponsorshipBannerAd.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedSponsorshipBannerAd.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeedSponsorshipBannerAd.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FeedSponsorshipBannerAd.sponsoredBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v4 = sub_1BB871E24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedSponsorshipBannerAd.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BB0735C8(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB0735C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB07360C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BB0735C8(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeedSponsorshipBannerAd.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BB073678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  const char *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;

  v1 = sub_1BB871E24();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 20), v1);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v6 == *MEMORY[0x1E0D52E38])
  {
    v7 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_1BA6EA0D0((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    v10 = &v7[2 * v9];
    v10[4] = 0xD00000000000001DLL;
    v11 = v10 + 4;
    v12 = "sponsored-banner-ad-fulfilled";
LABEL_9:
    v11[1] = (unint64_t)(v12 - 32) | 0x8000000000000000;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return (uint64_t)v7;
  }
  if (v6 == *MEMORY[0x1E0D52E18])
  {
    v7 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v14 = v7[2];
    v13 = v7[3];
    if (v14 >= v13 >> 1)
      v7 = sub_1BA6EA0D0((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
    v7[2] = v14 + 1;
    v15 = &v7[2 * v14];
    v15[4] = 0xD00000000000001CLL;
    v11 = v15 + 4;
    v12 = "sponsored-banner-ad-unfilled";
    goto LABEL_9;
  }
  result = sub_1BB87438C();
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedSponsorshipBannerAd(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB871E24();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FeedSponsorshipBannerAd(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB871E24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for FeedSponsorshipBannerAd(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB871E24();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for FeedSponsorshipBannerAd(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB871E24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FeedSponsorshipBannerAd(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB871E24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for FeedSponsorshipBannerAd(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB871E24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedSponsorshipBannerAd()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB073AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB871E24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedSponsorshipBannerAd()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB073B6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB871E24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_1BB073BE0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1BB073C44(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB073C8C()
{
  return swift_initClassMetadata2();
}

void sub_1BB073CE4()
{
  sub_1BB073F70();
}

uint64_t sub_1BB073D10(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_1BB073D28(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BB073FC8((uint64_t)v5);

}

void sub_1BB073D74()
{
  sub_1BB074194();
}

uint64_t sub_1BB073D90(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return sub_1BA49EBE0(*(_QWORD *)(a1 + qword_1EF2BA578));
}

uint64_t type metadata accessor for DebugFormatEditorBarButtonItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatEditorBarButtonItem);
}

uint64_t type metadata accessor for DebugFormatEditorBarButtonItem.Property(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatEditorBarButtonItem.Property);
}

_BYTE *sub_1BB073E10@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

void sub_1BB073E24(_BYTE *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  if (*a1 == 1)
  {
    swift_bridgeObjectRetain();
    v1 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v2 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v1);

    if (v2)
      return;
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  if (!v4)
    __break(1u);
}

void sub_1BB073F10(char *a1, char *a2)
{
  id v3;
  char v4;

  v4 = *a2;
  v3 = (id)(*(uint64_t (**)(char *))&a1[qword_1EF2BA568])(&v4);
  objc_msgSend(a1, sel_setImage_, v3);

}

void sub_1BB073F70()
{
  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB073FC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *);
  void (*v10)(char *, uint64_t);
  void (*v11)(char *);
  void (*v12)(char *);
  uint64_t v14;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  if ((*(_QWORD *)((char *)v1 + qword_1EF2BA560) & 0x8000000000000000) != 0)
  {
    v12 = *(void (**)(char *))((char *)v1 + qword_1EF2BA570);
    swift_retain();
    sub_1BB86D2B8();
    v12(v5);
    v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    sub_1BB86D2C4();
    v11 = *(void (**)(char *))((char *)v1 + qword_1EF2BA578);
    if (v11)
    {
      sub_1BB86D2B8();
      goto LABEL_6;
    }
  }
  else
  {
    v9 = *(void (**)(char *))((char *)v1 + qword_1EF2BA570);
    swift_retain();
    sub_1BB86E494();
    v9(v5);
    v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    sub_1BB86E4A0();
    v11 = *(void (**)(char *))((char *)v1 + qword_1EF2BA578);
    if (v11)
    {
      sub_1BB86E494();
LABEL_6:
      v11(v8);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
    }
  }
  return swift_release();
}

void sub_1BB074194()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BB0741C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  objc_class *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  char v24;
  objc_super v25;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  sub_1BB074434(0, v11, v12, v13);
  v15 = v14;
  v16 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v16[qword_1EF2BA560] = a1 | 0x8000000000000000;
  v17 = &v16[qword_1EF2BA568];
  *(_QWORD *)v17 = sub_1BB074418;
  *((_QWORD *)v17 + 1) = v10;
  v18 = &v16[qword_1EF2BA570];
  *(_QWORD *)v18 = sub_1BB073E10;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v16[qword_1EF2BA578];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v25.receiver = v16;
  v25.super_class = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v20 = objc_msgSendSuper2(&v25, sel_init);
  sub_1BB86D2B8();
  if (v24 == 1)
  {
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v21);

    if (v22)
    {
LABEL_5:
      objc_msgSend(v20, sel_setImage_, v22);

      objc_msgSend(v20, sel_setTarget_, v20);
      objc_msgSend(v20, sel_setAction_, sel_onActionWithSender_);
      sub_1BB86D2DC();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v23 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v23);

  if (v22)
    goto LABEL_5;
  __break(1u);
}

void sub_1BB074418(_BYTE *a1)
{
  sub_1BB073E24(a1);
}

void sub_1BB074434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2BA680)
  {
    v4 = type metadata accessor for DebugFormatEditorBarButtonItem(0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2BA680);
  }
}

void sub_1BB074490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  objc_class *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  char v24;
  objc_super v25;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  sub_1BB074434(0, v11, v12, v13);
  v15 = v14;
  v16 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v16[qword_1EF2BA560] = a1;
  v17 = &v16[qword_1EF2BA568];
  *(_QWORD *)v17 = sub_1BB0746E4;
  *((_QWORD *)v17 + 1) = v10;
  v18 = &v16[qword_1EF2BA570];
  *(_QWORD *)v18 = sub_1BB0746E8;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v16[qword_1EF2BA578];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v25.receiver = v16;
  v25.super_class = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v20 = objc_msgSendSuper2(&v25, sel_init);
  sub_1BB86E494();
  if (v24 == 1)
  {
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v21);

    if (v22)
    {
LABEL_5:
      objc_msgSend(v20, sel_setImage_, v22);

      objc_msgSend(v20, sel_setTarget_, v20);
      objc_msgSend(v20, sel_setAction_, sel_onActionWithSender_);
      sub_1BB86E4B8();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v23 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v23);

  if (v22)
    goto LABEL_5;
  __break(1u);
}

void sub_1BB0746EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B01A0)
  {
    type metadata accessor for InternalErrorViewLayout.Context();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B01A0);
  }
}

uint64_t FeedItemSupplementaryAttributes.shouldIntegral.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t (*v5)();
  uint64_t v7;

  v1 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
      v5 = type metadata accessor for FeedItemSupplementaryAttributes;
    else
      v5 = type metadata accessor for InternalErrorViewLayout.Context;
    sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))v5);
  }
  return 0;
}

uint64_t sub_1BB0747EC()
{
  sub_1BA65DCB8(&qword_1ED3B2810, (uint64_t)&protocol conformance descriptor for FeedItemSupplementaryAttributes);
  return sub_1BB870FF0();
}

uint64_t FeedItemSupplementaryAttributes.formatImageRequests(options:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v1, (uint64_t)v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = 0;
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      v6 = sub_1BA79B7B8();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1BB074930@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, unsigned int *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v10 = v5;
  sub_1BA4B07F0(0, a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  v15 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A81A0(v10, (uint64_t)v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
    goto LABEL_6;
  if (EnumCaseMultiPayload != 2)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_6:
    v23 = *a3;
    v24 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(a5, v23, v24);
  }
  v19 = *((_QWORD *)v17 + 14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5E01A4(v19 + *a4, (uint64_t)v14, a1, a2);
  swift_release();
  v20 = a2(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(a5, v14, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(a5, *a3, v20);
  return sub_1BA5C699C((uint64_t)v14, a1, a2);
}

void sub_1BB074B08()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1ED3D2050)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3B03C0, (uint64_t (*)(uint64_t))sub_1BA829AA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    type metadata accessor for GroupLayoutBindingContext();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED3D2050);
  }
}

_QWORD *assignWithCopy for FeedItemSupplementaryAttributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  int *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char *v52;
  char *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  _QWORD *v57;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v9 = (void *)a2[3];
      a1[3] = v9;
      v10 = (void *)a2[4];
      a1[4] = v10;
      v11 = (void *)a2[5];
      a1[5] = v11;
      v12 = (void *)a2[6];
      a1[6] = v12;
      v54 = (void *)a2[7];
      a1[7] = v54;
      v56 = (void *)a2[8];
      a1[8] = v56;
      v13 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v57 = (_QWORD *)((char *)a1 + v13);
      v14 = (char *)a2 + v13;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
      v19 = v54;
      v20 = v56;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v57 = *(_QWORD *)v14;
        v57[1] = *((_QWORD *)v14 + 1);
        v21 = *((_QWORD *)v14 + 2);
        swift_bridgeObjectRetain();
        if (v21 >= 0xB)
        {
          v57[2] = v21;
          v57[3] = *((_QWORD *)v14 + 3);
          v57[4] = *((_QWORD *)v14 + 4);
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v22 = *((_OWORD *)v14 + 1);
          v57[4] = *((_QWORD *)v14 + 4);
          *((_OWORD *)v57 + 1) = v22;
        }
        v57[5] = *((_QWORD *)v14 + 5);
        v57[6] = *((_QWORD *)v14 + 6);
        v57[7] = *((_QWORD *)v14 + 7);
        sub_1BB074B08();
        v26 = *(int *)(v25 + 80);
        v27 = (char *)v57 + v26;
        v28 = &v14[v26];
        *v27 = *v28;
        v55 = (uint64_t)v57 + v26 + 8;
        v29 = *((_QWORD *)v28 + 4);
        *((_QWORD *)v27 + 4) = v29;
        *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
        v30 = **(void (***)(uint64_t, char *, uint64_t))(v29 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(v55, v28 + 8, v29);
        *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
        *((_QWORD *)v27 + 7) = *((_QWORD *)v28 + 7);
        *((_QWORD *)v27 + 8) = *((_QWORD *)v28 + 8);
        *((_QWORD *)v27 + 9) = *((_QWORD *)v28 + 9);
        *((_QWORD *)v27 + 10) = *((_QWORD *)v28 + 10);
        v27[88] = v28[88];
        *((_QWORD *)v27 + 12) = *((_QWORD *)v28 + 12);
        v31 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v32 = v31[13];
        v52 = &v28[v32];
        v53 = &v27[v32];
        v33 = sub_1BB86D8A0();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v53, v52, v33);
        *(_QWORD *)&v27[v31[14]] = *(_QWORD *)&v28[v31[14]];
        *(_QWORD *)&v27[v31[15]] = *(_QWORD *)&v28[v31[15]];
        v27[v31[16]] = v28[v31[16]];
        *(_QWORD *)&v27[v31[17]] = *(_QWORD *)&v28[v31[17]];
        *(_QWORD *)&v27[v31[18]] = *(_QWORD *)&v28[v31[18]];
        *(_QWORD *)&v27[v31[19]] = *(_QWORD *)&v28[v31[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v23 = *(_QWORD *)v14;
        v24 = *(id *)v14;
        *v57 = v23;
        v57[1] = *((_QWORD *)v14 + 1);
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v36 = *(int *)(v35 + 48);
      v37 = (_OWORD *)((char *)a1 + v36);
      v38 = (__int128 *)((char *)a2 + v36);
      v39 = v38[12];
      v40 = v38[13];
      v41 = v38[15];
      v37[14] = v38[14];
      v37[15] = v41;
      v37[12] = v39;
      v37[13] = v40;
      v42 = v38[8];
      v43 = v38[9];
      v44 = v38[11];
      v37[10] = v38[10];
      v37[11] = v44;
      v37[8] = v42;
      v37[9] = v43;
      v45 = v38[4];
      v46 = v38[5];
      v47 = v38[7];
      v37[6] = v38[6];
      v37[7] = v47;
      v37[4] = v45;
      v37[5] = v46;
      v48 = *v38;
      v49 = v38[1];
      v50 = v38[3];
      v37[2] = v38[2];
      v37[3] = v50;
      *v37 = v48;
      v37[1] = v49;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v7 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v7;
      v8 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v8;
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for FeedItemSupplementaryAttributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
    v8 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      v13 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = v13;
      *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
      sub_1BB074B08();
      v15 = *(int *)(v14 + 80);
      v16 = &v9[v15];
      v17 = &v10[v15];
      *v16 = v10[v15];
      *((_QWORD *)v16 + 5) = *(_QWORD *)&v10[v15 + 40];
      *(_OWORD *)(v16 + 24) = *(_OWORD *)&v10[v15 + 24];
      *(_OWORD *)(v16 + 8) = *(_OWORD *)&v10[v15 + 8];
      v18 = *(_OWORD *)&v10[v15 + 64];
      *((_OWORD *)v16 + 3) = *(_OWORD *)&v10[v15 + 48];
      *((_OWORD *)v16 + 4) = v18;
      *((_QWORD *)v16 + 10) = *(_QWORD *)&v10[v15 + 80];
      v16[88] = v10[v15 + 88];
      *((_QWORD *)v16 + 12) = *(_QWORD *)&v10[v15 + 96];
      v19 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v20 = v19[13];
      v21 = &v16[v20];
      v22 = &v17[v20];
      v23 = sub_1BB86D8A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      *(_QWORD *)&v16[v19[14]] = *(_QWORD *)&v17[v19[14]];
      *(_QWORD *)&v16[v19[15]] = *(_QWORD *)&v17[v19[15]];
      v16[v19[16]] = v17[v19[16]];
      *(_QWORD *)&v16[v19[17]] = *(_QWORD *)&v17[v19[17]];
      *(_QWORD *)&v16[v19[18]] = *(_QWORD *)&v17[v19[18]];
      *(_QWORD *)&v16[v19[19]] = *(_QWORD *)&v17[v19[19]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    sub_1BB0746EC();
    v25 = *(int *)(v24 + 48);
    v26 = (_OWORD *)((char *)a1 + v25);
    v27 = (_OWORD *)((char *)a2 + v25);
    v28 = v27[13];
    v26[12] = v27[12];
    v26[13] = v28;
    v29 = v27[15];
    v26[14] = v27[14];
    v26[15] = v29;
    v30 = v27[9];
    v26[8] = v27[8];
    v26[9] = v30;
    v31 = v27[11];
    v26[10] = v27[10];
    v26[11] = v31;
    v32 = v27[5];
    v26[4] = v27[4];
    v26[5] = v32;
    v33 = v27[7];
    v26[6] = v27[6];
    v26[7] = v33;
    v34 = v27[1];
    *v26 = *v27;
    v26[1] = v34;
    v35 = v27[3];
    v26[2] = v27[2];
    v26[3] = v35;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FeedItemSupplementaryAttributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v8 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for InternalErrorViewModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v12;
        v13 = *((_QWORD *)v10 + 5);
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        *((_QWORD *)v9 + 5) = v13;
        *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
        sub_1BB074B08();
        v15 = *(int *)(v14 + 80);
        v16 = &v9[v15];
        v17 = &v10[v15];
        *v16 = v10[v15];
        *((_QWORD *)v16 + 5) = *(_QWORD *)&v10[v15 + 40];
        *(_OWORD *)(v16 + 24) = *(_OWORD *)&v10[v15 + 24];
        *(_OWORD *)(v16 + 8) = *(_OWORD *)&v10[v15 + 8];
        v18 = *(_OWORD *)&v10[v15 + 64];
        *((_OWORD *)v16 + 3) = *(_OWORD *)&v10[v15 + 48];
        *((_OWORD *)v16 + 4) = v18;
        *((_QWORD *)v16 + 10) = *(_QWORD *)&v10[v15 + 80];
        v16[88] = v10[v15 + 88];
        *((_QWORD *)v16 + 12) = *(_QWORD *)&v10[v15 + 96];
        v19 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v20 = v19[13];
        v21 = &v16[v20];
        v22 = &v17[v20];
        v23 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        *(_QWORD *)&v16[v19[14]] = *(_QWORD *)&v17[v19[14]];
        *(_QWORD *)&v16[v19[15]] = *(_QWORD *)&v17[v19[15]];
        v16[v19[16]] = v17[v19[16]];
        *(_QWORD *)&v16[v19[17]] = *(_QWORD *)&v17[v19[17]];
        *(_QWORD *)&v16[v19[18]] = *(_QWORD *)&v17[v19[18]];
        *(_QWORD *)&v16[v19[19]] = *(_QWORD *)&v17[v19[19]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      sub_1BB0746EC();
      v25 = *(int *)(v24 + 48);
      v26 = (_OWORD *)((char *)a1 + v25);
      v27 = (_OWORD *)((char *)a2 + v25);
      v28 = v27[13];
      v26[12] = v27[12];
      v26[13] = v28;
      v29 = v27[15];
      v26[14] = v27[14];
      v26[15] = v29;
      v30 = v27[9];
      v26[8] = v27[8];
      v26[9] = v30;
      v31 = v27[11];
      v26[10] = v27[10];
      v26[11] = v31;
      v32 = v27[5];
      v26[4] = v27[4];
      v26[5] = v32;
      v33 = v27[7];
      v26[6] = v27[6];
      v26[7] = v33;
      v34 = v27[1];
      *v26 = *v27;
      v26[1] = v34;
      v35 = v27[3];
      v26[2] = v27[2];
      v26[3] = v35;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_1BB075514(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_1BB86C8E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView;
  v15 = objc_allocWithZone((Class)sub_1BB871548());
  v16 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = (uint64_t *)&v16[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
  sub_1BB86C8D4();
  v18 = sub_1BB86C8C8();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *v17 = v18;
  v17[1] = v20;
  v21 = &v16[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model];
  v22 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);

  v25.receiver = v16;
  v25.super_class = ObjectType;
  v23 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v23, sel_addSubview_, *(_QWORD *)&v23[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView]);
  return v23;
}

uint64_t sub_1BB075850(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34[5];
  objc_super v35;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for FormatMicaSectionDecorationItem();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v32 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3BB3E8, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - v12;
  v14 = sub_1BB86C8E0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35.receiver = v2;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, sel_applyLayoutAttributes_, a1, v16);
  sub_1BB86C8D4();
  v19 = sub_1BB86C8C8();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v22 = (uint64_t *)&v2[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
  *v22 = v19;
  v22[1] = v21;
  swift_bridgeObjectRelease();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v23(v13, 1, 1, v5);
  v24 = (uint64_t)&v2[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model];
  swift_beginAccess();
  sub_1BB076AE0((uint64_t)v13, v24);
  swift_endAccess();
  sub_1BB873744();
  sub_1BB86F418();
  result = swift_dynamicCastClass();
  if (result)
  {
    v26 = a1;
    sub_1BB86F3F4();
    if (v34[3])
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BA6A0);
      v27 = (uint64_t)v33;
      v28 = swift_dynamicCast();
      v23((char *)v27, v28 ^ 1u, 1, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v27, 1, v5) != 1)
      {
        v29 = v32;
        sub_1BB0767E0(v27, (uint64_t)v32);
        sub_1BB076B98((uint64_t)v29, (uint64_t)v13);
        v23(v13, 0, 1, v5);
        swift_beginAccess();
        sub_1BB076AE0((uint64_t)v13, v24);
        swift_endAccess();
        sub_1BB871524();
        v34[0] = *v29;
        v30 = (uint64_t)v29 + *(int *)(v5 + 20);
        swift_retain();
        sub_1BB075BA4(v34, v30);
        swift_release();

        return sub_1BB076824((uint64_t)v29);
      }
    }
    else
    {
      sub_1BB076B3C((uint64_t)v34);
      v27 = (uint64_t)v33;
      v23(v33, 1, 1, v5);
    }

    return sub_1BB07678C(v27);
  }
  return result;
}

void sub_1BB075BA4(uint64_t *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v3 = v2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - v8;
  v10 = sub_1BB87261C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  if (*a1 < 0)
  {
    v27 = a2;
    v28 = *(_QWORD *)(v14 + 16);
    v29 = *(_QWORD *)(v14 + 24);
    swift_retain();
    swift_retain();
    v30 = objc_msgSend(v3, sel_traitCollection);
    v31 = objc_msgSend(v30, sel_userInterfaceStyle);

    if (v31 == (id)2)
      aBlock[0] = v29;
    else
      aBlock[0] = v28;
    sub_1BB075BA4(aBlock, v27);
    swift_release();
    swift_release();
  }
  else
  {
    v15 = *(void **)(v14 + 16);
    v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token + 8];
    v35 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
    v34 = v15;
    swift_bridgeObjectRetain();
    v17 = objc_msgSend(v3, sel_traitCollection);
    v33 = objc_msgSend(v17, sel_userInterfaceStyle);

    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF530], v10);
    v18 = (void *)sub_1BB873498();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BA5E01A4(a2, (uint64_t)v9, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898]);
    v20 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v21 = (_QWORD *)swift_allocObject();
    v23 = v34;
    v22 = v35;
    v21[2] = v34;
    v21[3] = v19;
    v21[4] = v22;
    v21[5] = v16;
    v21[6] = v33;
    sub_1BB076948((uint64_t)v9, (uint64_t)v21 + v20);
    aBlock[4] = sub_1BB0769A4;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_37;
    v24 = _Block_copy(aBlock);
    v25 = v23;
    swift_release();
    v26 = objc_msgSend(v25, sel_downloadIfNeededWithCompletionQueue_completion_, v18, v24);
    _Block_release(v24);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1BB075F44(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4B07F0(0, &qword_1ED3BB3E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - v5;
  v7 = type metadata accessor for FormatMicaSectionDecorationItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16.receiver = v1;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, sel_traitCollectionDidChange_, a1, v9);
  v12 = (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model;
  swift_beginAccess();
  sub_1BA5E01A4(v12, (uint64_t)v6, &qword_1ED3BB3E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1BB07678C((uint64_t)v6);
  sub_1BB0767E0((uint64_t)v6, (uint64_t)v11);
  v15 = *v11;
  v14 = (uint64_t)v11 + *(int *)(v7 + 20);
  swift_retain();
  sub_1BB075BA4(&v15, v14);
  swift_release();
  return sub_1BB076824((uint64_t)v11);
}

uint64_t sub_1BB076160(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v31 = a6;
  v32 = a3;
  v33 = a5;
  v34 = a2;
  v35 = a4;
  v7 = sub_1BB86C67C();
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1BB872610();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB872664();
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - v15;
  sub_1BA49A224(0, &qword_1ED39EA78);
  v17 = sub_1BB8729A0();
  v18 = sub_1BAB6B7F0(a1, v17);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v19 = (void *)sub_1BB87345C();
  sub_1BA5E01A4(v31, (uint64_t)v16, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898]);
  v20 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v21 = (_QWORD *)swift_allocObject();
  v22 = v35;
  v23 = v32;
  v21[2] = v34;
  v21[3] = v23;
  v24 = v33;
  v21[4] = v22;
  v21[5] = v24;
  v21[6] = v18;
  sub_1BB076948((uint64_t)v16, (uint64_t)v21 + v20);
  aBlock[4] = sub_1BB076A74;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_10;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  v26 = v18;
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA571CB8();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA571C58();
  v27 = v38;
  v28 = v40;
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v12, v27, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v37);
}

void sub_1BB076620(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  char *v15;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](v7);
  if (v8)
  {
    v9 = (char *)v8;
    v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token) == a2
       && *(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token + 8) == a3;
    if (v10 || (sub_1BB874398() & 1) != 0)
    {
      v11 = objc_msgSend(v9, sel_traitCollection);
      v12 = objc_msgSend(v11, sel_userInterfaceStyle);

      if (v12 == a4)
      {
        v13 = OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView;
        v14 = *(id *)&v9[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView];
        sub_1BB871530();

        v15 = (char *)*(id *)&v9[v13];
        sub_1BB87153C();

        v9 = v15;
      }
    }

  }
}

uint64_t sub_1BB076784()
{
  return type metadata accessor for FormatMicaSectionDecorationView();
}

uint64_t sub_1BB07678C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3BB3E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB0767E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB076824(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB076860()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB076884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 56) & ~v2;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = sub_1BB86FBD4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BB076948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB0769A4()
{
  return sub_1BB076A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_1BB076160);
}

uint64_t sub_1BB0769B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 56) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();

  v4 = sub_1BB86FBD4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BB076A74()
{
  return sub_1BB076A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_1BB076620);
}

uint64_t sub_1BB076A80(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), *((_QWORD *)v1 + 5), *((_QWORD *)v1 + 6), &v1[(v3 + 56) & ~v3]);
}

uint64_t sub_1BB076AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3BB3E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB076B3C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1EF2BA698, (unint64_t *)&unk_1EF2BA6A0, MEMORY[0x1E0DBBED8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB076B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB076BDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_1BB86C8E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)sub_1BB871548()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
  sub_1BB86C8D4();
  v8 = sub_1BB86C8C8();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *v7 = v8;
  v7[1] = v10;
  v11 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model];
  v12 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB076D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t *v17;
  uint64_t *v18;

  v11 = *(void **)(a1 + 16);
  if (!(a6 >> 6))
  {
    sub_1BA856DD0(a3, a4, a5);
    sub_1BA7ED5D0(v11, a2, a3, a4, a5);
    goto LABEL_16;
  }
  if (a6 >> 6 == 1)
  {
    sub_1BA856DD0(a3, a4, a5);
    sub_1BA7ED5D0(objc_msgSend(v11, sel_eventLeagueTag), a2, a3, a4, a5);
    swift_unknownObjectRelease();
LABEL_16:
    sub_1BA856F00(a3, a4, a5, a6, (uint64_t (*)(void))sub_1BA7EDFFC);
    return;
  }
  sub_1BA856DD0(a4, a5, a6 & 0x3F);
  v12 = objc_msgSend(v11, sel_eventCompetitorTags);
  if (v12)
  {
    v13 = v12;
    sub_1BA8EB1C8();
    v14 = sub_1BB872DB4();

    if (!(v14 >> 62))
      goto LABEL_7;
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
    {
LABEL_7:
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v15 > a3)
        goto LABEL_8;
LABEL_15:
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      v18 = v17;
      swift_bridgeObjectRelease();
      *v18 = v15;
      v18[1] = a3;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  v15 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v15 <= a3)
    goto LABEL_15;
LABEL_8:
  if ((v14 & 0xC000000000000001) != 0)
  {
    sub_1BA856DD0(a4, a5, a6 & 0x3F);
    v16 = (void *)MEMORY[0x1BCCE4630](a3, v14);
    goto LABEL_12;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a3)
  {
    v16 = *(void **)(v14 + 8 * a3 + 32);
    sub_1BA856F00(a3, a4, a5, a6, (uint64_t (*)(void))sub_1BA856DD0);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1BA7ED5D0(v16, a2, a4, a5, a6 & 0x3F);
    swift_unknownObjectRelease();
    sub_1BA856F00(a3, a4, a5, a6, (uint64_t (*)(void))sub_1BA7EDFFC);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1BB077044()
{
  sub_1BA73AA74();
}

uint64_t sub_1BB07705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v25 = a4;
  v27 = a1;
  v8 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - v12;
  v14 = type metadata accessor for FormatOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a5 & 1) != 0)
  {
    FormatOptionCollection.subscript.getter(a2, a3, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1BA98DC18((uint64_t)v13);
      *v10 = a2;
      v10[1] = a3;
      swift_storeEnumTagMultiPayload();
      sub_1BA689E84();
      swift_allocError();
      sub_1BA4C2DD8((uint64_t)v10, v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
      swift_bridgeObjectRetain();
      swift_willThrow();
      v19 = (uint64_t)v10;
      v20 = type metadata accessor for FormatLayoutError;
    }
    else
    {
      sub_1BA8569CC((uint64_t)v13, (uint64_t)v17);
      swift_retain();
      v21 = v26;
      sub_1BA711ECC();
      swift_release();
      if (!v21)
      {
        sub_1BA7469BC(v28, a2, a3, v25, v27);
        a2 = v23;
        swift_release();
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        return a2;
      }
      v20 = type metadata accessor for FormatOption;
      v19 = (uint64_t)v17;
    }
    sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))v20);
    return a2;
  }
  swift_bridgeObjectRetain();
  return a2;
}

void _s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 25))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BB07732C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  char v20;

  if (v4)
    v10 = 4;
  else
    v10 = 0;
  if (v10 & 0xFFFFFFFC | (v6 >> 2) & 3)
  {
    v11 = v0;
    sub_1BA856ECC(v7, v0, v8, v5, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BB077AE8(v2, v9, v1, v6, v4, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BB077AE8(v7, v11, v8, v5, v3, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    sub_1BB077AE8(v2, v9, v1, v6, v4, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    v12 = 0;
  }
  else
  {
    v19[0] = v7;
    v19[1] = v0;
    v19[2] = v8;
    v20 = v5;
    v17 = v1;
    v18 = v0;
    v13 = v1;
    v14 = v0;
    sub_1BB077AE8(v2, v9, v13, v6, v4, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BB077AE8(v7, v14, v8, v5, v3, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BB077AE8(v7, v14, v8, v5, v3, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BB077AE8(v2, v9, v17, v6, v4, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    _s8NewsFeed18FormatGroupBindingV7CommandO2eeoiySbAE_AEtFZ_0((uint64_t)v19);
    v12 = v15;
    sub_1BB077AE8(v7, v18, v8, v5, v3, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    sub_1BB077AE8(v2, v9, v17, v6, v4, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    sub_1BB077AE8(v2, v9, v17, v6, v4, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    sub_1BB077AE8(v7, v18, v8, v5, v3, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  }
  return v12 & 1;
}

unint64_t sub_1BB0779D0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0779F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0779F4()
{
  unint64_t result;

  result = qword_1EF2BA6B0;
  if (!qword_1EF2BA6B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandBinding, &type metadata for FormatCommandBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2BA6B0);
  }
  return result;
}

unint64_t sub_1BB077A38(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5A28CC();
  a1[2] = sub_1BA5CC22C();
  result = sub_1BB077A6C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB077A6C()
{
  unint64_t result;

  result = qword_1EF2BA6B8;
  if (!qword_1EF2BA6B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandBinding, &type metadata for FormatCommandBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2BA6B8);
  }
  return result;
}

uint64_t destroy for FormatCommandBinding(uint64_t a1)
{
  return sub_1BB077AE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25), (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BB077AE8(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatCommandBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1BB077AE8(*(_QWORD *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatCommandBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1BB077AE8(*(_QWORD *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v12 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v6;
  sub_1BB077AE8(v8, v9, v10, v12, v11, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return a1;
}

uint64_t assignWithTake for FormatCommandBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 25);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 25);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v10 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  sub_1BB077AE8(v6, v8, v7, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return a1;
}

uint64_t sub_1BB077CD4(uint64_t a1)
{
  unsigned int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 25))
    v2 = 4;
  else
    v2 = 0;
  return v2 & 0xFFFFFFFC | (v1 >> 2) & 3;
}

uint64_t sub_1BB077CF0(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0xF3u;
  return result;
}

uint64_t sub_1BB077D00(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 0xF3 | (4 * (a2 & 3));
  *(_BYTE *)(result + 25) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatCommandBinding()
{
  return &type metadata for FormatCommandBinding;
}

void sub_1BB077D30(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB077D6C()
{
  void *v0;
  uint64_t v1;
  id v2;

  if (qword_1ED3ABAF0 != -1)
    swift_once();
  v1 = qword_1ED3ABAE0;
  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  swift_retain();
  v2 = v0;
  return sub_1BAFE88F4(v1, v0, 0, 0);
}

void sub_1BB078328(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB078360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[216];

  if (qword_1ED3A4058 != -1)
    swift_once();
  sub_1BA93EB58(v0, (uint64_t)v4);
  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  v1 = swift_retain();
  v2 = sub_1BAFECBE0(v1, (uint64_t)v4);
  swift_release();
  return v2;
}

void static FormatSlotExpireContent.default.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t static FormatSlotExpireContent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1BB0785C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotExpireContent.init(from:)(a1, a2);
}

uint64_t sub_1BB0785DC(_QWORD *a1)
{
  return FormatSlotExpireContent.encode(to:)(a1);
}

uint64_t FormatSlotExpireContent.expireContent(resolutions:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[16];

  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - v10;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    sub_1BA82C56C(a2, (uint64_t)v17);
    if (v17[0])
    {
      FormatTransformKnobs.expireContentThreshold.getter();
      sub_1BAFD9668((uint64_t)v17);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA82C5B0);
    }
  }
  sub_1BB86C8A4();
  sub_1BB86C82C();
  v12 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v13 = v12(v8, v5);
  MEMORY[0x1E0C80A78](v13);
  v17[-2] = v11;
  swift_bridgeObjectRetain();
  sub_1BAC9C798((uint64_t (*)(char *))sub_1BB078A0C, (uint64_t)&v17[-4], a1);
  v15 = v14;
  v12(v11, v5);
  return v15;
}

uint64_t sub_1BB078760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  char v23;
  uint64_t v25;
  _QWORD v26[4];

  v26[1] = a2;
  sub_1BA76D78C();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7F0A6C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - v12;
  v14 = sub_1BB86C8B0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v26[0] = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB60AD58();
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
LABEL_10:
    v22 = (uint64_t (*)(_QWORD))sub_1BA7F0A6C;
    goto LABEL_11;
  }
  v18 = v17;
  v26[3] = v2;
  if ((objc_msgSend(v17, sel_respondsToSelector_, sel_globalExpirationTime) & 1) != 0)
  {
    v19 = objc_msgSend(v18, sel_globalExpirationTime);
    swift_unknownObjectRelease();
    if (v19)
    {
      sub_1BB86C874();

      v20 = 0;
    }
    else
    {
      v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v7, v20, 1, v14);
    sub_1BA5193C4((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    v21 = 0;
  }
  else
  {
    swift_unknownObjectRelease();
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, v21, 1, v4);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7F0A6C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
    goto LABEL_10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    v25 = v26[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v15 + 32))(v26[0], v13, v14);
    sub_1BB078C54();
    v23 = sub_1BB87291C() ^ 1;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v25, v14);
    return v23 & 1;
  }
  v22 = (uint64_t (*)(_QWORD))sub_1BA76D78C;
LABEL_11:
  sub_1BA4A2E80((uint64_t)v13, v22);
  v23 = 1;
  return v23 & 1;
}

uint64_t sub_1BB078A0C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB078760(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t FormatSlotExpireContent.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if ((*(_BYTE *)(v4 + 8) & 1) != 0)
    return 0x73626F6E6BLL;
  sub_1BB078A98(0, a2, a3, a4);
  sub_1BB873E34();
  return 0;
}

void sub_1BB078A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2B3158)
  {
    v4 = type metadata accessor for FormatValue(0, MEMORY[0x1E0DEB070], (uint64_t)&protocol witness table for Double, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2B3158);
  }
}

unint64_t sub_1BB078AF4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB078B18();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB078B18()
{
  unint64_t result;

  result = qword_1EF2BA6C0;
  if (!qword_1EF2BA6C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotExpireContent, &type metadata for FormatSlotExpireContent);
    atomic_store(result, (unint64_t *)&qword_1EF2BA6C0);
  }
  return result;
}

unint64_t sub_1BB078B5C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEBABB0();
  a1[2] = sub_1BAEEBF08();
  result = sub_1BB078B90();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB078B90()
{
  unint64_t result;

  result = qword_1EF2BA6C8;
  if (!qword_1EF2BA6C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotExpireContent, &type metadata for FormatSlotExpireContent);
    atomic_store(result, (unint64_t *)&qword_1EF2BA6C8);
  }
  return result;
}

uint64_t sub_1BB078BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if ((*(_BYTE *)(v4 + 8) & 1) != 0)
    return 0x73626F6E6BLL;
  sub_1BB078A98(0, a2, a3, a4);
  sub_1BB873E34();
  return 0;
}

ValueMetadata *type metadata accessor for FormatSlotExpireContent()
{
  return &type metadata for FormatSlotExpireContent;
}

unint64_t sub_1BB078C54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AFBB0;
  if (!qword_1ED3AFBB0)
  {
    v1 = sub_1BB86C8B0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AFBB0);
  }
  return result;
}

id IssueCoverViewButton.onTap.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_onTap);
}

id IssueCoverViewButton.coverView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView);
}

id IssueCoverViewButton.isHighlighted.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_isHighlighted);
}

void IssueCoverViewButton.isHighlighted.setter(char a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_setHighlighted_, a1 & 1);
  v3 = (void *)objc_opt_self();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = sub_1BB079020;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BA4F1DD8;
  v6[3] = &block_descriptor_38;
  v5 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_, v5, 0.2);
  _Block_release(v5);
}

uint64_t sub_1BB078F1C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB078F40(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  CGAffineTransform v9;
  objc_super v10;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (char *)MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView];
    v10.receiver = v2;
    v10.super_class = (Class)type metadata accessor for IssueCoverViewButton();
    v5 = v4;
    if (objc_msgSendSuper2(&v10, sel_isHighlighted))
    {
      CGAffineTransformMakeScale(&v9, 0.95, 0.95);
      v7 = *(_OWORD *)&v9.a;
      v6 = *(_OWORD *)&v9.c;
      v8 = *(_OWORD *)&v9.tx;
    }
    else
    {
      v6 = xmmword_1BB8E7BA0;
      v7 = xmmword_1BB8E7BB0;
      v8 = 0uLL;
    }
    *(_OWORD *)&v9.a = v7;
    *(_OWORD *)&v9.c = v6;
    *(_OWORD *)&v9.tx = v8;
    objc_msgSend(v5, sel_setTransform_, &v9);

  }
}

void sub_1BB079020()
{
  uint64_t v0;

  sub_1BB078F40(v0);
}

void (*IssueCoverViewButton.isHighlighted.modify(objc_super **a1))(objc_super **a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;

  v3 = (objc_super *)malloc(0x70uLL);
  *a1 = v3;
  v3[6].receiver = v1;
  ObjectType = swift_getObjectType();
  v3[6].super_class = (Class)ObjectType;
  v3[3].receiver = v1;
  v3[3].super_class = (Class)ObjectType;
  LOBYTE(v3->receiver) = objc_msgSendSuper2(v3 + 3, sel_isHighlighted);
  return sub_1BB079098;
}

void sub_1BB079098(objc_super **a1, char a2)
{
  objc_super *v2;
  uint64_t receiver_low;
  objc_class *super_class;
  id receiver;
  objc_super *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v2 = *a1;
  receiver_low = LOBYTE((*a1)->receiver);
  receiver = (*a1)[6].receiver;
  super_class = (*a1)[6].super_class;
  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v6[4].receiver = receiver;
    v6[4].super_class = super_class;
    objc_msgSendSuper2(v6 + 4, sel_setHighlighted_, receiver_low);
  }
  else
  {
    v6[5].receiver = receiver;
    v2[5].super_class = super_class;
    objc_msgSendSuper2(v6 + 5, sel_setHighlighted_, receiver_low);
    v7 = (void *)objc_opt_self();
    v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v2[2].receiver = sub_1BB079020;
    v2[2].super_class = (Class)v8;
    v2->receiver = (id)MEMORY[0x1E0C809B0];
    v2->super_class = (Class)1107296256;
    v2[1].receiver = sub_1BA4F1DD8;
    v2[1].super_class = (Class)&block_descriptor_5;
    v9 = _Block_copy(v2);
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.2);
    _Block_release(v9);
  }
  free(v2);
}

id IssueCoverViewButton.frame.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_frame);
}

id IssueCoverViewButton.frame.setter(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v9;
  objc_super v11;

  v11.receiver = v4;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_setFrame_, a1, a2, a3, a4);
  v9 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView];
  objc_msgSend(v4, sel_bounds);
  return objc_msgSend(v9, sel_setFrame_);
}

void (*IssueCoverViewButton.frame.modify(objc_super **a1))(double **a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;
  void *v5;
  objc_class *v6;
  void *v7;
  objc_class *v8;

  v3 = (objc_super *)malloc(0x60uLL);
  *a1 = v3;
  v3[5].receiver = v1;
  ObjectType = swift_getObjectType();
  v3[5].super_class = (Class)ObjectType;
  v3[2].receiver = v1;
  v3[2].super_class = (Class)ObjectType;
  objc_msgSendSuper2(v3 + 2, sel_frame);
  v3->receiver = v5;
  v3->super_class = v6;
  v3[1].receiver = v7;
  v3[1].super_class = v8;
  return sub_1BB0793C8;
}

void sub_1BB0793C8(double **a1, char a2)
{
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  objc_class *v7;
  char *v8;
  objc_super *v9;
  void *v10;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v8 = (char *)*((_QWORD *)*a1 + 10);
  v7 = (objc_class *)*((_QWORD *)*a1 + 11);
  v9 = (objc_super *)*a1;
  if ((a2 & 1) != 0)
  {
    v9[3].receiver = v8;
    v9[3].super_class = v7;
    objc_msgSendSuper2(v9 + 3, sel_setFrame_, v3, v4, v5, v6);
  }
  else
  {
    v9[4].receiver = v8;
    v9[4].super_class = v7;
    objc_msgSendSuper2(v9 + 4, sel_setFrame_, v3, v4, v5, v6);
    v10 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView];
    objc_msgSend(v8, sel_bounds);
    objc_msgSend(v10, sel_setFrame_);
  }
  free(v2);
}

char *IssueCoverViewButton.__allocating_init(coverView:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return IssueCoverViewButton.init(coverView:)(a1);
}

char *IssueCoverViewButton.init(coverView:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  Class v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_onTap;
  sub_1BA563554();
  v6 = objc_allocWithZone(v5);
  v7 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView] = a1;
  v8 = a1;

  objc_msgSend(v8, sel_frame);
  sub_1BB873594();
  v15.receiver = v7;
  v15.super_class = ObjectType;
  v9 = (char *)objc_msgSendSuper2(&v15, sel_initWithFrame_);
  objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
  v10 = v8;
  objc_msgSend(v10, sel_setClipsToBounds_, objc_msgSend(v9, sel_clipsToBounds));

  objc_msgSend(v9, sel_addSubview_, v10);
  v11 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_onTap];
  v12 = v9;
  v13 = v11;
  sub_1BB871368();

  return v12;
}

id IssueCoverViewButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void IssueCoverViewButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id IssueCoverViewButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall IssueCoverViewButton.prepareForReuse()()
{

}

void sub_1BB0797D4()
{

}

void sub_1BB079800()
{
  sub_1BB079890(qword_1EF2BA710, (uint64_t)&protocol conformance descriptor for IssueCoverViewButton);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB079838()
{
  return sub_1BB079890(&qword_1EF2BA6E0, (uint64_t)&protocol conformance descriptor for IssueCoverViewButton);
}

uint64_t type metadata accessor for IssueCoverViewButton()
{
  return objc_opt_self();
}

uint64_t method lookup function for IssueCoverViewButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IssueCoverViewButton.__allocating_init(coverView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BB079890(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IssueCoverViewButton();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0798DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];

  v4 = a1[2];
  v5 = v4 >> 60;
  if (v4 >> 60 == 1 || (_DWORD)v5 == 5)
  {
    v7 = *a1;
    v8 = a1[1];
    swift_bridgeObjectRetain();
    sub_1BA747A4C();
    sub_1BAAF40BC(v7, v8, (uint64_t)v19, a2);
  }
  else
  {
    if ((_DWORD)v5 == 8)
    {
      v9 = *(_QWORD *)(v4 + 24);
      v19[0] = v9;
      swift_retain();
      swift_retain();
      swift_retain();
      FormatOptionValue.type.getter();
      if (FormatOptionType.rawValue.getter() == 0x676E69727473 && v10 == 0xE600000000000000)
        goto LABEL_10;
      v11 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_15;
      v19[0] = v9;
      FormatOptionValue.type.getter();
      if (FormatOptionType.rawValue.getter() == 1836412517 && v12 == 0xE400000000000000)
      {
LABEL_10:
        swift_bridgeObjectRelease();
LABEL_15:
        v14 = *a1;
        v15 = a1[1];
        swift_bridgeObjectRetain();
        sub_1BA747A4C();
        sub_1BAAF40BC(v14, v15, (uint64_t)v19, a2);
        swift_release();
        swift_release();
        sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        return swift_release();
      }
      v13 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_15;
      swift_release();
      swift_release();
      swift_release();
    }
    v17 = *a1;
    v18 = a1[1];
    swift_bridgeObjectRetain();
    sub_1BA747A4C();
    sub_1BAAF422C(v17, v18, (uint64_t)v19, a2);
  }
  return sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
}

uint64_t sub_1BB079B30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = sub_1BB6DED58(a2);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AE78(0, v4, 0);
    v6 = 64;
    v7 = v16;
    do
    {
      v8 = *(_QWORD *)(v3 + v6);
      v10 = *(_QWORD *)(v16 + 16);
      v9 = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_1BAC7AE78(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v16 + 16) = v10 + 1;
      *(_QWORD *)(v16 + 8 * v10 + 32) = v8;
      v6 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v11 = *(_QWORD *)(v7 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v11; ++i)
    {
      v13 = swift_bridgeObjectRetain();
      sub_1BB383BA8(v13);
    }
    swift_bridgeObjectRelease_n();
    v14 = v5;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  sub_1BB383BA8(v14);
  return a1;
}

uint64_t sub_1BB079CA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1BA65D2C0(a1);
  v2 = 0x724F737961776C61;
  v3 = 0x6E776F6E6B6E75;
  if (v1 == 2)
    v3 = 0x6554737961776C61;
  if (v1 != 1)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x6974616D6F747561;
}

char *sub_1BB079D5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  __int128 v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void *__dst;
  uint64_t v83;
  uint64_t v84;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
      case 0xFu:
        v37 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v37;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        v10 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v10;
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        v11 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v11;
        v12 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v12;
        v13 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v13)
        {
          v14 = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 6) = v13;
          *((_QWORD *)a1 + 7) = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        }
        goto LABEL_34;
      case 7u:
        v15 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v15;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        a1[104] = a2[104];
        v16 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 8u:
        v38 = *(_QWORD *)a2;
        sub_1BA7566C0(*(_QWORD *)a2);
        *(_QWORD *)a1 = v38;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        v39 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v39;
        v40 = *((_QWORD *)a2 + 2);
        v41 = *((_QWORD *)a2 + 3);
        v42 = *((_QWORD *)a2 + 4);
        v43 = *((_QWORD *)a2 + 5);
        v83 = *((_QWORD *)a2 + 6);
        v44 = *((_QWORD *)a2 + 8);
        __dst = (void *)*((_QWORD *)a2 + 7);
        v84 = *((_QWORD *)a2 + 9);
        v45 = a2[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BAA8C5C0(v40, v41, v42, v43, v83, (uint64_t)__dst, v44, v84, v45);
        *((_QWORD *)a1 + 2) = v40;
        *((_QWORD *)a1 + 3) = v41;
        *((_QWORD *)a1 + 4) = v42;
        *((_QWORD *)a1 + 5) = v43;
        *((_QWORD *)a1 + 6) = v83;
        *((_QWORD *)a1 + 7) = __dst;
        *((_QWORD *)a1 + 8) = v44;
        *((_QWORD *)a1 + 9) = v84;
        a1[80] = v45;
        v46 = *((_QWORD *)a2 + 11);
        v47 = *((_QWORD *)a2 + 12);
        v48 = *((_QWORD *)a2 + 13);
        v49 = *((_QWORD *)a2 + 14);
        v50 = *((_QWORD *)a2 + 15);
        v51 = *((_QWORD *)a2 + 16);
        v52 = *((_QWORD *)a2 + 17);
        v53 = *((_QWORD *)a2 + 18);
        v54 = a2[152];
        sub_1BAA8C5C0(v46, v47, v48, v49, v50, v51, v52, v53, v54);
        *((_QWORD *)a1 + 11) = v46;
        *((_QWORD *)a1 + 12) = v47;
        *((_QWORD *)a1 + 13) = v48;
        *((_QWORD *)a1 + 14) = v49;
        *((_QWORD *)a1 + 15) = v50;
        *((_QWORD *)a1 + 16) = v51;
        *((_QWORD *)a1 + 17) = v52;
        *((_QWORD *)a1 + 18) = v53;
        a1[152] = v54;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xAu:
        v17 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v17;
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xCu:
        v18 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        v19 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v19;
        v20 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v20;
        a1[48] = a2[48];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xEu:
        v21 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v21;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x10u:
        v55 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v55;
        (**(void (***)(void *, char *))(v55 - 8))(a1, a2);
        v56 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v56;
        v57 = *((_QWORD *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v57)
        {
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 8) = v57;
          v58 = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v58;
          v59 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v59;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v68 = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 72) = v68;
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        }
        a1[104] = a2[104];
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        v60 = (char *)&loc_1BB07A4B8 + 4 * word_1BB8E7CB8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v61 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v61;
        (**(void (***)(void *, char *))(v61 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x13u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v22 = *((_QWORD *)a2 + 1);
        swift_retain();
        if (v22 == 1)
        {
          v23 = *(_OWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 120) = v23;
          *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
          v24 = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(_OWORD *)(a1 + 56) = v24;
          v25 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v25;
          v26 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 24) = v26;
        }
        else
        {
          v63 = *((_QWORD *)a2 + 2);
          v64 = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 1) = v22;
          *((_QWORD *)a1 + 2) = v63;
          v65 = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 3) = v64;
          *((_QWORD *)a1 + 4) = v65;
          a1[40] = a2[40];
          v66 = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = v66;
          v67 = a2[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v67 == 255)
          {
            *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
            a1[80] = a2[80];
          }
          else
          {
            v69 = *((_QWORD *)a2 + 8);
            v70 = *((_QWORD *)a2 + 9);
            sub_1BA69C808(v69, v70, v67 & 1);
            *((_QWORD *)a1 + 8) = v69;
            *((_QWORD *)a1 + 9) = v70;
            a1[80] = v67 & 1;
          }
          v71 = a2[120];
          if (v71 == 255)
          {
            v72 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v72;
            a1[120] = a2[120];
          }
          else
          {
            v73 = v71 & 1;
            v74 = *((_QWORD *)a2 + 11);
            v75 = *((_QWORD *)a2 + 12);
            v76 = *((_QWORD *)a2 + 13);
            v77 = *((_QWORD *)a2 + 14);
            sub_1BA896394(v74, v75, v76, v77, v71 & 1);
            *((_QWORD *)a1 + 11) = v74;
            *((_QWORD *)a1 + 12) = v75;
            *((_QWORD *)a1 + 13) = v76;
            *((_QWORD *)a1 + 14) = v77;
            a1[120] = v73;
          }
          v78 = a2[144];
          if (v78 == 255)
          {
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
          }
          else
          {
            v79 = v78 & 1;
            v80 = *((_QWORD *)a2 + 16);
            v81 = *((_QWORD *)a2 + 17);
            sub_1BA69C808(v80, v81, v78 & 1);
            *((_QWORD *)a1 + 16) = v80;
            *((_QWORD *)a1 + 17) = v81;
            a1[144] = v79;
          }
        }
LABEL_34:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x14u:
        v27 = *(void **)a2;
        v28 = (void *)*((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v28;
        v29 = v27;
        v30 = v28;
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        *a1 = *a2;
        v31 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v31;
        v32 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v33 = (char *)&loc_1BB07A0F0 + 4 * word_1BB8E7CA0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v34 = sub_1BB8714E8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Cu:
        v62 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v62;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        v35 = *(_QWORD *)a2;
        v36 = *(id *)a2;
        *(_QWORD *)a1 = v35;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1BB07A718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(v0 + 72) = v7;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  v9 = *(int *)(v8 + 64);
  v10 = (void *)(v0 + v9);
  v11 = (const void *)(v1 + v9);
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  JUMPOUT(0x1BB07B5C0);
}

void sub_1BB07A7A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__dst, int a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int *v30;
  uint64_t v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v39)(const void *, uint64_t, uint64_t);
  void *__dsta;

  *(_QWORD *)(v24 - 88) = v23;
  v25 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v25;
  v26 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = v26;
  v27 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v27;
  v28 = *(_QWORD *)(v22 + 56);
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
  *(_QWORD *)(v21 + 56) = v28;
  *(_BYTE *)(v21 + 64) = *(_BYTE *)(v22 + 64);
  sub_1BA68D668(0, (unint64_t *)&qword_1ED3B8A38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  v30 = v29;
  v31 = v29[13];
  __dsta = (void *)(v21 + v31);
  v32 = (const void *)(v22 + v31);
  v33 = sub_1BB86C8B0();
  v34 = *(_QWORD *)(v33 - 8);
  v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39(v32, 1, v33))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dsta, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(__dsta, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dsta, 0, 1, v33);
  }
  *(_BYTE *)(v21 + v30[14]) = *(_BYTE *)(v22 + v30[14]);
  *(_QWORD *)(v21 + v30[15]) = *(_QWORD *)(v22 + v30[15]);
  v36 = v22 + v30[16];
  v37 = sub_1BB86E710();
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
  swift_bridgeObjectRetain();
  if (!v38(v36, 1, v37))
    JUMPOUT(0x1BB07B534);
  JUMPOUT(0x1BB07AF5CLL);
}

void sub_1BB07A878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  *(_QWORD *)(v3 - 88) = v2;
  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v6;
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v7;
  v8 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 72) = v8;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v0 + 96) = v9;
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(v0 + 112) = *(_BYTE *)(v1 + 112);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 120);
  v10 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
  v15 = v0 + v10;
  v11 = v1 + v10;
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    JUMPOUT(0x1BB07ABECLL);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v11, v12);
  JUMPOUT(0x1BB07B5A0);
}

void sub_1BB07A960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  *(_QWORD *)(v3 - 88) = v2;
  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v6;
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v7;
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_QWORD *)(v0 + 72) = v8;
  *(_BYTE *)(v0 + 81) = *(_BYTE *)(v1 + 81);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  sub_1BA74E17C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040]);
  v10 = *(int *)(v9 + 64);
  v15 = v0 + v10;
  v11 = v1 + v10;
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
    JUMPOUT(0x1BB07AAACLL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v11, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07AAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 - 88) = v2;
  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v6;
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v7;
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 80) = v8;
  *(_BYTE *)(v0 + 88) = *(_BYTE *)(v1 + 88);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + 96);
  sub_1BA74E1D4(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String);
  sub_1BB86E710();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  JUMPOUT(0x1BB07ABB4);
}

void sub_1BB07ABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  *(_QWORD *)(v3 - 88) = v2;
  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v6;
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v7;
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  sub_1BA68D668(0, (unint64_t *)&qword_1ED3B8A30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  v9 = v8;
  v10 = v8[13];
  v18 = v0 + v10;
  v11 = v1 + v10;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v11, 1, v12))
    JUMPOUT(0x1BB07ACC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v18, v11, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
  *(_BYTE *)(v0 + v9[14]) = *(_BYTE *)(v1 + v9[14]);
  *(_QWORD *)(v0 + v9[15]) = *(_QWORD *)(v1 + v9[15]);
  v14 = v1 + v9[16];
  v15 = sub_1BB86E710();
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  swift_bridgeObjectRetain();
  if (!v16(v14, 1, v15))
    JUMPOUT(0x1BB07B534);
  JUMPOUT(0x1BB07AF5CLL);
}

void sub_1BB07ACEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(v0 + 72) = v7;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  v9 = *(int *)(v8 + 64);
  v10 = (void *)(v0 + v9);
  v11 = (const void *)(v1 + v9);
  v12 = sub_1BB86E710();
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  swift_bridgeObjectRetain();
  if (v13(v11, 1, v12))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    JUMPOUT(0x1BB07B5C0);
  }
  JUMPOUT(0x1BB07B534);
}

void sub_1BB07AD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(v0 + 72) = v7;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  v9 = *(int *)(v8 + 64);
  v10 = (void *)(v0 + v9);
  v11 = (const void *)(v1 + v9);
  v12 = sub_1BB86E710();
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  swift_bridgeObjectRetain();
  if (v13(v11, 1, v12))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    JUMPOUT(0x1BB07B5C0);
  }
  JUMPOUT(0x1BB07B534);
}

void sub_1BB07AE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(v0 + 72) = v7;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  v9 = *(int *)(v8 + 64);
  v10 = (void *)(v0 + v9);
  v11 = (const void *)(v1 + v9);
  v12 = sub_1BB86E710();
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  swift_bridgeObjectRetain();
  if (v13(v11, 1, v12))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    JUMPOUT(0x1BB07B5C0);
  }
  JUMPOUT(0x1BB07B534);
}

void sub_1BB07AE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(v0 + 72) = v7;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  JUMPOUT(0x1BB07AF18);
}

void sub_1BB07AF94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_WORD *)(v0 + 24) = *(_WORD *)(v1 + 24);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 40) = *(_BYTE *)(v1 + 40);
  v4 = *(void **)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v4;
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = v2;
  swift_bridgeObjectRetain();
  v7 = v4;
  if (v5 == 1)
  {
    v8 = *(_OWORD *)(v1 + 88);
    *(_OWORD *)(v0 + 72) = *(_OWORD *)(v1 + 72);
    *(_OWORD *)(v0 + 88) = v8;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v1 + 104);
  }
  else
  {
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v0 + 80) = v5;
    v9 = *(_QWORD *)(v1 + 96);
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v0 + 96) = v9;
    v11 = *(void **)(v1 + 104);
    v10 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 104) = v11;
    *(_QWORD *)(v0 + 112) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v11;
  }
  v13 = (_QWORD *)(v1 + 120);
  v14 = *(_QWORD *)(v1 + 128);
  if (v14 >= 0x11)
  {
    *(_QWORD *)(v0 + 120) = *v13;
    *(_QWORD *)(v0 + 128) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v0 + 120) = *(_OWORD *)v13;
  }
  *(_BYTE *)(v0 + 136) = *(_BYTE *)(v1 + 136);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B004()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *(_OWORD *)v0 = *(_OWORD *)v1;
  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v1 + 32);
  v3 = (int *)type metadata accessor for FeedWeather(0);
  v4 = v3[7];
  v5 = v0 + v4;
  v6 = v1 + v4;
  v7 = sub_1BB87270C();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  *(_BYTE *)(v0 + v3[8]) = *(_BYTE *)(v1 + v3[8]);
  v9 = v3[9];
  v10 = v0 + v9;
  v11 = v1 + v9;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
  v13 = v12;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v10, v11, v12);
  v15 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v14(v10 + v15[5], v11 + v15[5], v13);
  v14(v10 + v15[6], v11 + v15[6], v13);
  v14(v10 + v15[7], v11 + v15[7], v13);
  v16 = v3[10];
  v17 = (_QWORD *)(v0 + v16);
  v18 = (_QWORD *)(v1 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  *(_QWORD *)(v3 - 88) = v2;
  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v6;
  *(_WORD *)(v0 + 48) = *(_WORD *)(v1 + 48);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 80) = v7;
  v8 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(v0 + 112) = *(_BYTE *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v0 + 128) = v9;
  *(_BYTE *)(v0 + 136) = *(_BYTE *)(v1 + 136);
  v10 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v0 + 152) = v10;
  v11 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v0 + 168) = v11;
  *(_BYTE *)(v0 + 184) = *(_BYTE *)(v1 + 184);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v1 + 176);
  v12 = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v0 + 200) = v12;
  *(_BYTE *)(v0 + 224) = *(_BYTE *)(v1 + 224);
  v13 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v0 + 216) = v13;
  v15 = (_QWORD *)(v1 + 232);
  v14 = *(_QWORD *)(v1 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 >= 0x11)
  {
    *(_QWORD *)(v0 + 232) = *v15;
    *(_QWORD *)(v0 + 240) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v0 + 232) = *(_OWORD *)v15;
  }
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B258(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__dst, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  int *v33;
  unsigned int (*v34)(char *, uint64_t, int *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *__dsta;
  uint64_t v61;
  int *v62;

  *(_QWORD *)(v24 - 88) = v23;
  v25 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v25;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  v26 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v26;
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
  *(_BYTE *)(v21 + 56) = *(_BYTE *)(v22 + 56);
  v62 = (int *)type metadata accessor for FeedHeadline(0);
  v27 = v62[10];
  v28 = (_BYTE *)(v21 + v27);
  v29 = v22 + v27;
  *v28 = *(_BYTE *)(v22 + v27);
  v28[1] = *(_BYTE *)(v22 + v27 + 1);
  v30 = (int *)type metadata accessor for FeedHeadline.State(0);
  v31 = v30[6];
  __dsta = &v28[v31];
  v32 = (char *)(v29 + v31);
  v33 = (int *)type metadata accessor for SharedItem();
  v59 = *((_QWORD *)v33 - 1);
  v34 = *(unsigned int (**)(char *, uint64_t, int *))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v34(v32, 1, v33))
  {
    v35 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dsta, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v36 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(__dsta, v32, v36);
    __dsta[v33[5]] = v32[v33[5]];
    v37 = v33[6];
    v38 = *(void **)&v32[v37];
    *(_QWORD *)&__dsta[v37] = v38;
    v39 = v33[7];
    v61 = (uint64_t)&__dsta[v39];
    v58 = (uint64_t)&v32[v39];
    v40 = sub_1BB86C67C();
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
    v42 = v38;
    v41(v61, v58, v40);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56))(__dsta, 0, 1, v33);
  }
  v28[v30[7]] = *(_BYTE *)(v29 + v30[7]);
  v28[v30[8]] = *(_BYTE *)(v29 + v30[8]);
  v28[v30[9]] = *(_BYTE *)(v29 + v30[9]);
  v28[v30[10]] = *(_BYTE *)(v29 + v30[10]);
  v43 = v62[11];
  v44 = (void *)(v21 + v43);
  v45 = (const void *)(v22 + v43);
  v46 = sub_1BB871B24();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = v62[12];
  v50 = (_QWORD *)(v21 + v49);
  v51 = (_QWORD *)(v22 + v49);
  v52 = v51[1];
  if (v52 >= 0x11)
  {
    *v50 = *v51;
    v50[1] = v52;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
  }
  v53 = v62[13];
  v54 = *(_QWORD *)(v22 + v53);
  if (v54 >= 2)
  {
    if (v54 == 2)
    {
      *(_QWORD *)(v21 + v53) = 2;
    }
    else
    {
      *(_QWORD *)(v21 + v53) = v54;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)(v21 + v53) = v54;
  }
  v55 = v62[14];
  v56 = *(void **)(v22 + v55);
  *(_QWORD *)(v21 + v55) = v56;
  v57 = v56;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B33C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__dst, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(_QWORD *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  int *v54;
  unsigned int (*v55)(char *, uint64_t, int *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  id v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t, int *);
  id v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int EnumCaseMultiPayload;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *__dsta;
  uint64_t v95;
  int *v96;
  int *v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  int *v100;

  v25 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v25;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v26 = (_QWORD *)(v22 + 24);
  v27 = *(_QWORD *)(v22 + 32);
  if (v27 >= 0x11)
  {
    *(_QWORD *)(v21 + 24) = *v26;
    *(_QWORD *)(v21 + 32) = v27;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v21 + 24) = *(_OWORD *)v26;
  }
  v28 = *(_QWORD *)(v22 + 48);
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 48) = v28;
  v29 = type metadata accessor for FeedWebEmbed();
  v30 = *(int *)(v29 + 32);
  v31 = v21 + v30;
  v32 = v22 + v30;
  v33 = sub_1BB86C67C();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  swift_bridgeObjectRetain();
  v35(v31, v32, v33);
  v100 = (int *)v29;
  v36 = *(int *)(v29 + 36);
  v37 = (void *)(v21 + v36);
  v38 = (const void *)(v22 + v36);
  v98 = (void (*)(char *, char *, uint64_t))v35;
  v99 = v33;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v22 + v36, 1, v33))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v35((uint64_t)v37, (uint64_t)v38, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
  }
  *(_QWORD *)(v24 - 88) = v23;
  *(_QWORD *)(v21 + v100[10]) = *(_QWORD *)(v22 + v100[10]);
  *(_QWORD *)(v21 + v100[11]) = *(_QWORD *)(v22 + v100[11]);
  v40 = v100[12];
  v41 = (_QWORD *)(v21 + v40);
  v42 = (_QWORD *)(v22 + v40);
  v43 = type metadata accessor for FeedHeadline(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48);
  swift_retain();
  swift_retain();
  if (v45(v42, 1, v43))
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = v42[1];
    *v41 = *v42;
    v41[1] = v47;
    v41[2] = v42[2];
    *((_BYTE *)v41 + 24) = *((_BYTE *)v42 + 24);
    v48 = v42[5];
    v41[4] = v42[4];
    v41[5] = v48;
    v95 = v44;
    v41[6] = v42[6];
    *((_BYTE *)v41 + 56) = *((_BYTE *)v42 + 56);
    v97 = (int *)v43;
    v49 = *(int *)(v43 + 40);
    v50 = (char *)v41 + v49;
    v51 = (char *)v42 + v49;
    *v50 = *((_BYTE *)v42 + v49);
    v50[1] = *((_BYTE *)v42 + v49 + 1);
    v96 = (int *)type metadata accessor for FeedHeadline.State(0);
    v52 = v96[6];
    __dsta = &v50[v52];
    v53 = &v51[v52];
    v54 = (int *)type metadata accessor for SharedItem();
    v93 = *((_QWORD *)v54 - 1);
    v55 = *(unsigned int (**)(char *, uint64_t, int *))(v93 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v55(v53, 1, v54))
    {
      v56 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dsta, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(__dsta, v53, v57);
      __dsta[v54[5]] = v53[v54[5]];
      v58 = v54[6];
      v59 = *(void **)&v53[v58];
      *(_QWORD *)&__dsta[v58] = v59;
      v60 = v54[7];
      v61 = &__dsta[v60];
      v62 = &v53[v60];
      v63 = v59;
      v98(v61, v62, v99);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v93 + 56))(__dsta, 0, 1, v54);
    }
    v50[v96[7]] = v51[v96[7]];
    v50[v96[8]] = v51[v96[8]];
    v50[v96[9]] = v51[v96[9]];
    v50[v96[10]] = v51[v96[10]];
    v64 = v97[11];
    v65 = (char *)v41 + v64;
    v66 = (char *)v42 + v64;
    v67 = sub_1BB871B24();
    v68 = *(_QWORD *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    v70 = v97[12];
    v71 = (_QWORD *)((char *)v41 + v70);
    v72 = (_QWORD *)((char *)v42 + v70);
    v73 = v72[1];
    if (v73 >= 0x11)
    {
      *v71 = *v72;
      v71[1] = v73;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v71 = *(_OWORD *)v72;
    }
    v74 = v97[13];
    v75 = *(_QWORD *)((char *)v42 + v74);
    if (v75 >= 2)
    {
      if (v75 == 2)
      {
        *(_QWORD *)((char *)v41 + v74) = 2;
      }
      else
      {
        *(_QWORD *)((char *)v41 + v74) = v75;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)((char *)v41 + v74) = v75;
    }
    v76 = v97[14];
    v77 = *(void **)((char *)v42 + v76);
    *(_QWORD *)((char *)v41 + v76) = v77;
    v78 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v95 + 56);
    v79 = v77;
    v78(v41, 0, 1, v97);
  }
  v80 = v100[13];
  v81 = (_QWORD *)(v21 + v80);
  v82 = (uint64_t *)(v22 + v80);
  v83 = type metadata accessor for WebEmbedDataVisualization();
  v84 = *(_QWORD *)(v83 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v87 = *v82;
    if (EnumCaseMultiPayload == 1)
    {
      v88 = v82[1];
      *v81 = v87;
      v81[1] = v88;
      v89 = type metadata accessor for GenericDataVisualization();
      v90 = *(int *)(v89 + 20);
      v91 = (char *)v81 + v90;
      v92 = (char *)v82 + v90;
      swift_bridgeObjectRetain();
      v98(v91, v92, v99);
      *(_QWORD *)((char *)v81 + *(int *)(v89 + 24)) = *(uint64_t *)((char *)v82 + *(int *)(v89 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *v81 = v87;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
  }
  *(_BYTE *)(v21 + v100[14]) = *(_BYTE *)(v22 + v100[14]);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB07C90CLL);
}

void sub_1BB07B36C()
{
  void **v0;
  void **v1;
  void *v2;
  id v3;

  v2 = *v1;
  *v0 = *v1;
  v3 = v2;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v1 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v3 = (_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  if (v4 >= 0x11)
  {
    *(_QWORD *)(v0 + 24) = *v3;
    *(_QWORD *)(v0 + 32) = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v0 + 24) = *(_OWORD *)v3;
  }
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = v5;
  v6 = *(void **)(v1 + 64);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 64) = v6;
  *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 112);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v8 = v6;
  swift_bridgeObjectRetain();
  if (v7)
  {
    v9 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v0 + 112) = v7;
    *(_QWORD *)(v0 + 120) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(v0 + 88, v1 + 88, v7);
  }
  else
  {
    v10 = *(_OWORD *)(v1 + 104);
    *(_OWORD *)(v0 + 88) = *(_OWORD *)(v1 + 88);
    *(_OWORD *)(v0 + 104) = v10;
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 120);
  }
  v11 = (_OWORD *)(v0 + 128);
  v12 = (_OWORD *)(v1 + 128);
  v13 = *(_QWORD *)(v1 + 152);
  if (v13)
  {
    v14 = *(_QWORD *)(v1 + 160);
    *(_QWORD *)(v0 + 152) = v13;
    *(_QWORD *)(v0 + 160) = v14;
    (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
  }
  else
  {
    v15 = *(_OWORD *)(v1 + 144);
    *v11 = *v12;
    *(_OWORD *)(v0 + 144) = v15;
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v1 + 160);
  }
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v3 = (_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  if (v4 >= 0x11)
  {
    *(_QWORD *)(v0 + 24) = *v3;
    *(_QWORD *)(v0 + 32) = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v0 + 24) = *(_OWORD *)v3;
  }
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

uint64_t sub_1BB07B41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v3 = (_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  if (v4 >= 0x11)
  {
    *(_QWORD *)(v0 + 24) = *v3;
    *(_QWORD *)(v0 + 32) = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v0 + 24) = *(_OWORD *)v3;
  }
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = v5;
  v6 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  *(_QWORD *)(v0 + v6) = *(_QWORD *)(v1 + v6);
  type metadata accessor for PuzzleStatistic();
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  LODWORD(v5) = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_1BB07B854 + 4 * word_1BB8E7CD2[v5]))();
}

void sub_1BB07B44C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_1BB871E24();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB079E00);
}

void sub_1BB07B854()
{
  void *v0;
  const void *v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for PuzzleStatisticValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v4 = type metadata accessor for PuzzleStreak();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4))
    {
LABEL_6:
      sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
LABEL_10:
      swift_storeEnumTagMultiPayload();
      JUMPOUT(0x1BB07C908);
    }
    v4 = type metadata accessor for PuzzleStreak();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4))
      goto LABEL_6;
  }
  v7 = sub_1BB86BEC0();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v0, v1, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v0, 0, 1, v4);
  goto LABEL_9;
}

void sub_1BB07BCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t, uint64_t);

  v4 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4))
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4390, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    JUMPOUT(0x1BB07C398);
  }
  *(_QWORD *)(v3 - 88) = v2;
  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v0, v1, v6);
  v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  v8 = v7[5];
  v9 = (_QWORD *)(v0 + v8);
  v10 = (_QWORD *)(v1 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v7[6];
  v13 = v0 + v12;
  v14 = (_QWORD *)(v1 + v12);
  v15 = v14[1];
  *(_QWORD *)v13 = *v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = v14 + 2;
  v17 = v14[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(v13 + 16) = *(_OWORD *)v16;
  }
  else
  {
    v18 = *v16;
    sub_1BA69D44C(*v16, v17);
    *(_QWORD *)(v13 + 16) = v18;
    *(_QWORD *)(v13 + 24) = v17;
  }
  *(_QWORD *)(v0 + v7[7]) = *(_QWORD *)(v1 + v7[7]);
  *(_QWORD *)(v0 + v7[8]) = *(_QWORD *)(v1 + v7[8]);
  *(_QWORD *)(v0 + *(int *)(v4 + 20)) = *(_QWORD *)(v1 + *(int *)(v4 + 20));
  *(_QWORD *)(v0 + *(int *)(v4 + 24)) = *(_QWORD *)(v1 + *(int *)(v4 + 24));
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  v19(v0, 0, 1, v4);
  JUMPOUT(0x1BB07C8ECLL);
}

void sub_1BB07BD0C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for PuzzleStatisticValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v4 = type metadata accessor for PuzzleStreak();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4))
    {
LABEL_6:
      sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
LABEL_10:
      v8 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      v9 = *(int *)(v8 + 20);
      v10 = &v0[v9];
      v11 = &v1[v9];
      v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 5)
      {
        v13 = type metadata accessor for PuzzleStreak();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
        {
LABEL_15:
          sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_18:
          swift_storeEnumTagMultiPayload();
LABEL_19:
          v17 = *(int *)(v8 + 24);
          v18 = &v0[v17];
          v19 = &v1[v17];
          v20 = swift_getEnumCaseMultiPayload();
          if (v20 == 5)
          {
            v21 = type metadata accessor for PuzzleStreak();
            v22 = *(_QWORD *)(v21 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
            {
LABEL_24:
              sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_27:
              swift_storeEnumTagMultiPayload();
LABEL_28:
              JUMPOUT(0x1BB07C8E4);
            }
          }
          else
          {
            if (v20 != 4)
            {
              memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
              goto LABEL_28;
            }
            v21 = type metadata accessor for PuzzleStreak();
            v22 = *(_QWORD *)(v21 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
              goto LABEL_24;
          }
          v24 = sub_1BB86BEC0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
          goto LABEL_27;
        }
      }
      else
      {
        if (v12 != 4)
        {
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
          goto LABEL_19;
        }
        v13 = type metadata accessor for PuzzleStreak();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
          goto LABEL_15;
      }
      v16 = sub_1BB86BEC0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      goto LABEL_18;
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
      goto LABEL_10;
    }
    v4 = type metadata accessor for PuzzleStreak();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4))
      goto LABEL_6;
  }
  v7 = sub_1BB86BEC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v0, v1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v0, 0, 1, v4);
  goto LABEL_9;
}

void sub_1BB07BDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v3 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
  v4 = v3[6];
  v5 = (void *)(v0 + v4);
  v6 = (const void *)(v1 + v4);
  v7 = type metadata accessor for PuzzleStreak();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v5, v6, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v12 = v3[7];
  v13 = (void *)(v0 + v12);
  v14 = (const void *)(v1 + v12);
  if (v9((const void *)(v1 + v12), 1, v7))
  {
    sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  v17 = v3[8];
  v18 = (_OWORD *)(v0 + v17);
  v19 = (_OWORD *)(v1 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_OWORD *)((char *)v18 + 25) = *(_OWORD *)((char *)v19 + 25);
  v21 = v3[9];
  v22 = (_OWORD *)(v0 + v21);
  v23 = (_OWORD *)(v1 + v21);
  *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v3[10];
  v26 = (_OWORD *)(v0 + v25);
  v27 = (_OWORD *)(v1 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_OWORD *)((char *)v26 + 25) = *(_OWORD *)((char *)v27 + 25);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x1BB07C908);
}

void sub_1BB07C920(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  _UNKNOWN **v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  unint64_t *v12;
  unint64_t (*v13)();
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  int *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 0xDu:
    case 0x1Cu:
      goto LABEL_2;
    case 3u:
    case 4u:
    case 0xFu:
    case 0x16u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
      goto LABEL_92;
    case 5u:
    case 0xAu:
      swift_release();
LABEL_92:
      swift_release();
      return;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48))
        goto LABEL_5;
      return;
    case 7u:
    case 0xEu:
    case 0x17u:
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 8u:
      sub_1BA756FBC(*(_QWORD *)a1);
      return;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      sub_1BAA4E044(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
      return;
    case 0xCu:
      v2 = sub_1BB86C67C();
      goto LABEL_26;
    case 0x10u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a1 + 64))
        return;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      swift_bridgeObjectRelease();
      break;
    case 0x11u:
      type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_unknownObjectRelease();
          goto LABEL_22;
        case 1u:

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          v27 = *(_QWORD *)(a1 + 128);
          goto LABEL_64;
        case 2u:
          goto LABEL_5;
        case 3u:
          swift_bridgeObjectRelease();
          v28 = type metadata accessor for FeedWeather(0);
          v29 = a1 + *(int *)(v28 + 28);
          v30 = sub_1BB87270C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
          v31 = a1 + *(int *)(v28 + 36);
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
          v33 = v32;
          v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8);
          v34(v31, v32);
          v35 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v34(v31 + v35[5], v33);
          v34(v31 + v35[6], v33);
          v34(v31 + v35[7], v33);
          goto LABEL_2;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v27 = *(_QWORD *)(a1 + 240);
LABEL_64:
          if (v27 < 0x11)
            return;
          goto LABEL_2;
        case 5u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v36 = (int *)type metadata accessor for FeedHeadline(0);
          v37 = a1 + v36[10];
          v38 = v37 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v39 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
          {
            v40 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v38, v40);

            v41 = v38 + *(int *)(v39 + 28);
            v42 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          }
          v43 = a1 + v36[11];
          v44 = sub_1BB871B24();
          v45 = *(_QWORD *)(v44 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
            (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
          if (*(_QWORD *)(a1 + v36[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + v36[13]) >= 3uLL)
            swift_unknownObjectRelease();

          return;
        case 6u:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v46 = (int *)type metadata accessor for FeedWebEmbed();
          v47 = a1 + v46[8];
          v48 = sub_1BB86C67C();
          v49 = *(_QWORD *)(v48 - 8);
          v50 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
          v50(v47, v48);
          v51 = a1 + v46[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v48))
            v50(v51, v48);
          swift_release();
          swift_release();
          v52 = a1 + v46[12];
          v53 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v53 - 1) + 48))(v52, 1, v53))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            v54 = v53[10];
            v55 = v52 + v54 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            v56 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
            {
              v57 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v55, v57);

              v50(v55 + *(int *)(v56 + 28), v48);
            }
            v58 = v52 + v53[11];
            v59 = sub_1BB871B24();
            v60 = *(_QWORD *)(v59 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
              (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
            if (*(_QWORD *)(v52 + v53[12] + 8) >= 0x11uLL)
              swift_bridgeObjectRelease();
            if (*(_QWORD *)(v52 + v53[13]) >= 3uLL)
              swift_unknownObjectRelease();

          }
          v61 = a1 + v46[13];
          v62 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
            return;
          if (swift_getEnumCaseMultiPayload() != 1)
            goto LABEL_92;
          swift_bridgeObjectRelease();
          v63 = type metadata accessor for GenericDataVisualization();
          v50(v61 + *(int *)(v63 + 20), v48);
          break;
        case 7u:
          goto LABEL_28;
        case 8u:
          goto LABEL_101;
        case 9u:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 112))
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          if (*(_QWORD *)(a1 + 152))
            __swift_destroy_boxed_opaque_existential_1(a1 + 128);
          return;
        case 0xAu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
LABEL_101:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return;
        case 0xBu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v64 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          a1 = v64 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_116;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                v66 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(a1, 1, v66))
                {
                  v67 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(a1, v67);
                }
              }
              v68 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              v69 = a1 + *(int *)(v68 + 20);
              v70 = swift_getEnumCaseMultiPayload();
              if (v70 == 5 || v70 == 4)
              {
                v71 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v69, 1, v71))
                {
                  v72 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v69, v72);
                }
              }
              a1 += *(int *)(v68 + 24);
LABEL_116:
              v73 = swift_getEnumCaseMultiPayload();
              if (v73 == 5 || v73 == 4)
              {
                v74 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(a1, 1, v74))goto LABEL_127;
              }
              return;
            case 2u:
              v75 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(a1, 1, v75))
              {
                return;
              }
              v76 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(a1, v76);
              v77 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              v78 = a1 + *(int *)(v77 + 24);
              swift_bridgeObjectRelease();
              v79 = *(_QWORD *)(v78 + 24);
              if (v79 >> 60 != 15)
                sub_1BA69D314(*(_QWORD *)(v78 + 16), v79);
              goto LABEL_2;
            case 3u:
              v80 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              v81 = a1 + *(int *)(v80 + 24);
              v82 = type metadata accessor for PuzzleStreak();
              v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48);
              if (!v83(v81, 1, v82))
              {
                v84 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(v81, v84);
              }
              a1 += *(int *)(v80 + 28);
              if (v83(a1, 1, v82))
                return;
LABEL_127:
              v2 = sub_1BB86BEC0();
              break;
            default:
              return;
          }
          goto LABEL_26;
        case 0xCu:
          swift_bridgeObjectRelease();
          a1 += *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          v2 = sub_1BB871E24();
          goto LABEL_26;
        default:
          return;
      }
      goto LABEL_2;
    case 0x12u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      return;
    case 0x13u:
      swift_release();
      if (*(_QWORD *)(a1 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = *(unsigned __int8 *)(a1 + 80);
        if (v3 != 255)
          sub_1BA69C828(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v3 & 1);
        v4 = *(unsigned __int8 *)(a1 + 120);
        if (v4 != 255)
          sub_1BA8964E0(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4 & 1);
        v5 = *(unsigned __int8 *)(a1 + 144);
        if (v5 != 255)
          sub_1BA69C828(*(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), v5 & 1);
      }
      return;
    case 0x14u:

LABEL_22:
      return;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = &qword_1ED3CE138;
          v7 = MEMORY[0x1E0DEAFA0];
          v8 = &protocol witness table for Bool;
          goto LABEL_37;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v12 = &qword_1ED3CE128;
          v13 = sub_1BA7FDD98;
          v14 = &type metadata for FormatColor;
          goto LABEL_54;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA68D668(0, (unint64_t *)&qword_1ED3B8A38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
          v16 = v15;
          v17 = a1 + *(int *)(v15 + 52);
          v18 = sub_1BB86C8B0();
          goto LABEL_39;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v19 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          goto LABEL_56;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = &qword_1ED3CE100;
          v13 = sub_1BA841CF4;
          v14 = (ValueMetadata *)MEMORY[0x1E0DEF040];
          goto LABEL_54;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = &qword_1ED3CE140;
          v7 = MEMORY[0x1E0DEB418];
          v8 = &protocol witness table for Int;
          goto LABEL_37;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = &qword_1ED3CE130;
          v7 = MEMORY[0x1E0DEA968];
          v8 = &protocol witness table for String;
LABEL_37:
          sub_1BA74E1D4(0, v6, v7, (uint64_t)v8);
          goto LABEL_55;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA68D668(0, (unint64_t *)&qword_1ED3B8A30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
          v16 = v21;
          v17 = a1 + *(int *)(v21 + 52);
          v18 = sub_1BB86C67C();
LABEL_39:
          v22 = v18;
          v23 = *(_QWORD *)(v18 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v17, 1, v18))
            (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v22);
          swift_bridgeObjectRelease();
          v19 = *(int *)(v16 + 64);
          goto LABEL_56;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v12 = &qword_1ED3CE110;
          v13 = sub_1BA7F6E24;
          v14 = &type metadata for FormatAsyncImageContent;
          goto LABEL_54;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v12 = &qword_1ED3CE108;
          v13 = sub_1BA829B34;
          v14 = &type metadata for FormatVideoNodeContent;
          goto LABEL_54;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v12 = &qword_1ED3CE120;
          v13 = sub_1BA8378F4;
          v14 = &type metadata for FormatFont;
          goto LABEL_54;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(_QWORD *)(a1 + 72) & 0xF000000000000007) != 0)
            swift_release();
          swift_bridgeObjectRelease();
          v12 = &qword_1ED3CE118;
          v13 = sub_1BA8266B0;
          v14 = &type metadata for FormatVideoPlayerContent;
LABEL_54:
          sub_1BA74E17C(0, v12, (uint64_t (*)(void))v13, (uint64_t)v14);
LABEL_55:
          v19 = *(int *)(v20 + 64);
LABEL_56:
          v24 = a1 + v19;
          v25 = sub_1BB86E710();
          v26 = *(_QWORD *)(v25 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
            return;
          v10 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
          v11 = v24;
          v9 = v25;
          break;
        default:
          return;
      }
      goto LABEL_27;
    case 0x1Au:
      v2 = sub_1BB8714E8();
LABEL_26:
      v9 = v2;
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
      v11 = a1;
LABEL_27:
      v10(v11, v9);
      break;
    case 0x1Fu:
LABEL_28:

      break;
    default:
      return;
  }
}

char *sub_1BB07D9C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char *result;
  uint64_t v81;
  uint64_t v82;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 3u:
    case 0xFu:
      v34 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v34;
      swift_retain();
      goto LABEL_40;
    case 4u:
    case 0x16u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      goto LABEL_40;
    case 5u:
      v7 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v7;
      swift_retain();
      swift_retain();
      goto LABEL_40;
    case 6u:
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v8;
      v9 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v9;
      v10 = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10)
      {
        v11 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = v10;
        *((_QWORD *)a1 + 7) = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      }
      goto LABEL_40;
    case 7u:
      v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      a1[104] = a2[104];
      v13 = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
      *((_QWORD *)a1 + 15) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 8u:
      v35 = *(_QWORD *)a2;
      sub_1BA7566C0(*(_QWORD *)a2);
      *(_QWORD *)a1 = v35;
      goto LABEL_40;
    case 9u:
      v36 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v36;
      v37 = *((_QWORD *)a2 + 2);
      v38 = *((_QWORD *)a2 + 3);
      v39 = *((_QWORD *)a2 + 4);
      v40 = *((_QWORD *)a2 + 5);
      v41 = *((_QWORD *)a2 + 8);
      v81 = *((_QWORD *)a2 + 6);
      v82 = *((_QWORD *)a2 + 7);
      v42 = *((_QWORD *)a2 + 9);
      v43 = a2[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BAA8C5C0(v37, v38, v39, v40, v81, v82, v41, v42, v43);
      *((_QWORD *)a1 + 2) = v37;
      *((_QWORD *)a1 + 3) = v38;
      *((_QWORD *)a1 + 4) = v39;
      *((_QWORD *)a1 + 5) = v40;
      *((_QWORD *)a1 + 6) = v81;
      *((_QWORD *)a1 + 7) = v82;
      *((_QWORD *)a1 + 8) = v41;
      *((_QWORD *)a1 + 9) = v42;
      a1[80] = v43;
      v44 = *((_QWORD *)a2 + 11);
      v45 = *((_QWORD *)a2 + 12);
      v46 = *((_QWORD *)a2 + 13);
      v47 = *((_QWORD *)a2 + 14);
      v48 = *((_QWORD *)a2 + 15);
      v49 = *((_QWORD *)a2 + 16);
      v50 = *((_QWORD *)a2 + 17);
      v51 = *((_QWORD *)a2 + 18);
      v52 = a2[152];
      sub_1BAA8C5C0(v44, v45, v46, v47, v48, v49, v50, v51, v52);
      *((_QWORD *)a1 + 11) = v44;
      *((_QWORD *)a1 + 12) = v45;
      *((_QWORD *)a1 + 13) = v46;
      *((_QWORD *)a1 + 14) = v47;
      *((_QWORD *)a1 + 15) = v48;
      *((_QWORD *)a1 + 16) = v49;
      *((_QWORD *)a1 + 17) = v50;
      *((_QWORD *)a1 + 18) = v51;
      a1[152] = v52;
      goto LABEL_40;
    case 0xAu:
      v14 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v14;
      swift_retain();
      swift_retain();
      goto LABEL_40;
    case 0xCu:
      v15 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_40;
    case 0xDu:
      v16 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v16;
      v17 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v17;
      a1[48] = a2[48];
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 0xEu:
      v18 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v18;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 0x10u:
      v53 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v53;
      (**(void (***)(void *, char *))(v53 - 8))(a1, a2);
      v54 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v54;
      v55 = *((_QWORD *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55)
      {
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v55;
        v56 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v56;
        v57 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v57;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v66 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = v66;
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      }
      a1[104] = a2[104];
      goto LABEL_40;
    case 0x11u:
      type metadata accessor for FeedGroupItem();
      v58 = (char *)&loc_1BB07E07C + 4 * word_1BB8E7DA8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x12u:
      v59 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 3) = v59;
      (**(void (***)(void *, char *))(v59 - 8))(a1, a2);
      goto LABEL_40;
    case 0x13u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v19 = *((_QWORD *)a2 + 1);
      swift_retain();
      if (v19 == 1)
      {
        v20 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v20;
        *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
        v21 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = v21;
        v22 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v22;
        v23 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = v23;
      }
      else
      {
        v61 = *((_QWORD *)a2 + 2);
        v62 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 1) = v19;
        *((_QWORD *)a1 + 2) = v61;
        v63 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = v62;
        *((_QWORD *)a1 + 4) = v63;
        a1[40] = a2[40];
        v64 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v64;
        v65 = a2[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v65 == 255)
        {
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          a1[80] = a2[80];
        }
        else
        {
          v67 = *((_QWORD *)a2 + 8);
          v68 = *((_QWORD *)a2 + 9);
          sub_1BA69C808(v67, v68, v65 & 1);
          *((_QWORD *)a1 + 8) = v67;
          *((_QWORD *)a1 + 9) = v68;
          a1[80] = v65 & 1;
        }
        v69 = a2[120];
        if (v69 == 255)
        {
          v70 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v70;
          a1[120] = a2[120];
        }
        else
        {
          v71 = v69 & 1;
          v72 = *((_QWORD *)a2 + 11);
          v73 = *((_QWORD *)a2 + 12);
          v74 = *((_QWORD *)a2 + 13);
          v75 = *((_QWORD *)a2 + 14);
          sub_1BA896394(v72, v73, v74, v75, v69 & 1);
          *((_QWORD *)a1 + 11) = v72;
          *((_QWORD *)a1 + 12) = v73;
          *((_QWORD *)a1 + 13) = v74;
          *((_QWORD *)a1 + 14) = v75;
          a1[120] = v71;
        }
        v76 = a2[144];
        if (v76 == 255)
        {
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          a1[144] = a2[144];
        }
        else
        {
          v77 = v76 & 1;
          v78 = *((_QWORD *)a2 + 16);
          v79 = *((_QWORD *)a2 + 17);
          sub_1BA69C808(v78, v79, v76 & 1);
          *((_QWORD *)a1 + 16) = v78;
          *((_QWORD *)a1 + 17) = v79;
          a1[144] = v77;
        }
      }
      goto LABEL_40;
    case 0x14u:
      v24 = *(void **)a2;
      v25 = (void *)*((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v25;
      v26 = v24;
      v27 = v25;
      goto LABEL_40;
    case 0x17u:
      *a1 = *a2;
      v28 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = v28;
      v29 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      v30 = (char *)&loc_1BB07DCE8 + 4 * word_1BB8E7D90[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x1Au:
      v31 = sub_1BB8714E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
      goto LABEL_40;
    case 0x1Cu:
      v60 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v60;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 0x1Fu:
      v32 = *(_QWORD *)a2;
      v33 = *(id *)a2;
      *(_QWORD *)a1 = v32;
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1BB080548(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  __int128 v60;
  __int128 v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char *result;
  uint64_t v73;
  uint64_t v74;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 3u:
      case 0xFu:
        v31 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v31;
        swift_retain();
        goto LABEL_40;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        goto LABEL_40;
      case 5u:
      case 0xAu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        swift_retain();
        swift_retain();
        goto LABEL_40;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v6 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v6;
        v7 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          *((_QWORD *)a1 + 6) = v7;
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        }
        goto LABEL_40;
      case 7u:
        v8 = *(_OWORD *)a2;
        v9 = *((_OWORD *)a2 + 1);
        v10 = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
        *((_OWORD *)a1 + 1) = v9;
        *((_OWORD *)a1 + 2) = v10;
        *(_OWORD *)a1 = v8;
        v11 = *(_OWORD *)(a2 + 56);
        v12 = *(_OWORD *)(a2 + 72);
        v13 = *(_OWORD *)(a2 + 88);
        a1[104] = a2[104];
        *(_OWORD *)(a1 + 88) = v13;
        *(_OWORD *)(a1 + 72) = v12;
        *(_OWORD *)(a1 + 56) = v11;
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 8u:
        v32 = *(_QWORD *)a2;
        sub_1BA7566C0(*(_QWORD *)a2);
        *(_QWORD *)a1 = v32;
        goto LABEL_40;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v33 = *((_QWORD *)a2 + 2);
        v34 = *((_QWORD *)a2 + 3);
        v35 = *((_QWORD *)a2 + 4);
        v36 = *((_QWORD *)a2 + 5);
        v37 = *((_QWORD *)a2 + 6);
        v38 = *((_QWORD *)a2 + 8);
        v73 = *((_QWORD *)a2 + 7);
        v74 = *((_QWORD *)a2 + 9);
        v39 = a2[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BAA8C5C0(v33, v34, v35, v36, v37, v73, v38, v74, v39);
        *((_QWORD *)a1 + 2) = v33;
        *((_QWORD *)a1 + 3) = v34;
        *((_QWORD *)a1 + 4) = v35;
        *((_QWORD *)a1 + 5) = v36;
        *((_QWORD *)a1 + 6) = v37;
        *((_QWORD *)a1 + 7) = v73;
        *((_QWORD *)a1 + 8) = v38;
        *((_QWORD *)a1 + 9) = v74;
        a1[80] = v39;
        v40 = *((_QWORD *)a2 + 11);
        v41 = *((_QWORD *)a2 + 12);
        v42 = *((_QWORD *)a2 + 13);
        v43 = *((_QWORD *)a2 + 14);
        v44 = *((_QWORD *)a2 + 15);
        v45 = *((_QWORD *)a2 + 16);
        v46 = *((_QWORD *)a2 + 17);
        v47 = *((_QWORD *)a2 + 18);
        v48 = a2[152];
        sub_1BAA8C5C0(v40, v41, v42, v43, v44, v45, v46, v47, v48);
        *((_QWORD *)a1 + 11) = v40;
        *((_QWORD *)a1 + 12) = v41;
        *((_QWORD *)a1 + 13) = v42;
        *((_QWORD *)a1 + 14) = v43;
        *((_QWORD *)a1 + 15) = v44;
        *((_QWORD *)a1 + 16) = v45;
        *((_QWORD *)a1 + 17) = v46;
        *((_QWORD *)a1 + 18) = v47;
        a1[152] = v48;
        goto LABEL_40;
      case 0xCu:
        v14 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_40;
      case 0xDu:
        v15 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v15;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 0x10u:
        v49 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v49;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, char *))(v49 - 8))(a1, a2);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v50 = *((_QWORD *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v50)
        {
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v55 = *(_OWORD *)(a2 + 56);
          v56 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v56;
          *(_OWORD *)(a1 + 56) = v55;
        }
        a1[104] = a2[104];
        goto LABEL_40;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        v51 = (char *)&loc_1BB080CC8 + 4 * word_1BB8E7E22[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v52 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v52;
        (**(void (***)(void *, char *))(v52 - 8))(a1, a2);
        goto LABEL_40;
      case 0x13u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v16 = *((_QWORD *)a2 + 1);
        swift_retain();
        if (v16 == 1)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          v17 = *(_OWORD *)(a2 + 24);
          v18 = *(_OWORD *)(a2 + 40);
          v19 = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 72) = v19;
          *(_OWORD *)(a1 + 24) = v17;
          *(_OWORD *)(a1 + 40) = v18;
          v20 = *(_OWORD *)(a2 + 88);
          v21 = *(_OWORD *)(a2 + 104);
          v22 = *(_OWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
          *(_OWORD *)(a1 + 104) = v21;
          *(_OWORD *)(a1 + 120) = v22;
          *(_OWORD *)(a1 + 88) = v20;
        }
        else
        {
          *((_QWORD *)a1 + 1) = v16;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          v53 = a2[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v53 == 255)
          {
            v54 = *((_OWORD *)a2 + 4);
            a1[80] = a2[80];
            *((_OWORD *)a1 + 4) = v54;
          }
          else
          {
            v57 = *((_QWORD *)a2 + 8);
            v58 = *((_QWORD *)a2 + 9);
            sub_1BA69C808(v57, v58, v53 & 1);
            *((_QWORD *)a1 + 8) = v57;
            *((_QWORD *)a1 + 9) = v58;
            a1[80] = v53 & 1;
          }
          v59 = a2[120];
          if (v59 == 255)
          {
            v60 = *(_OWORD *)(a2 + 88);
            v61 = *(_OWORD *)(a2 + 104);
            a1[120] = a2[120];
            *(_OWORD *)(a1 + 88) = v60;
            *(_OWORD *)(a1 + 104) = v61;
          }
          else
          {
            v62 = v59 & 1;
            v63 = *((_QWORD *)a2 + 11);
            v64 = *((_QWORD *)a2 + 12);
            v65 = *((_QWORD *)a2 + 13);
            v66 = *((_QWORD *)a2 + 14);
            sub_1BA896394(v63, v64, v65, v66, v59 & 1);
            *((_QWORD *)a1 + 11) = v63;
            *((_QWORD *)a1 + 12) = v64;
            *((_QWORD *)a1 + 13) = v65;
            *((_QWORD *)a1 + 14) = v66;
            a1[120] = v62;
          }
          v67 = a2[144];
          if (v67 == 255)
          {
            v68 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 8) = v68;
          }
          else
          {
            v69 = v67 & 1;
            v70 = *((_QWORD *)a2 + 16);
            v71 = *((_QWORD *)a2 + 17);
            sub_1BA69C808(v70, v71, v67 & 1);
            *((_QWORD *)a1 + 16) = v70;
            *((_QWORD *)a1 + 17) = v71;
            a1[144] = v69;
          }
        }
        goto LABEL_40;
      case 0x14u:
        v23 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v24 = (void *)*((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 1) = v24;
        v25 = v23;
        v26 = v24;
        goto LABEL_40;
      case 0x17u:
        *a1 = *a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v27 = (char *)&loc_1BB0808EC + 4 * word_1BB8E7E0A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v28 = sub_1BB8714E8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        goto LABEL_40;
      case 0x1Cu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 0x1Fu:
        v29 = *(_QWORD *)a2;
        v30 = *(id *)a2;
        *(_QWORD *)a1 = v29;
LABEL_40:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormatInspectionItem.Value(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2BA788);
}

_OWORD *sub_1BB0834A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  _OWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD *result;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  char *__dst;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  int *v102;
  int *v103;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xCu:
      v6 = sub_1BB86C67C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_42;
    case 0x11u:
      v7 = type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          v8 = a2[1];
          *a1 = *a2;
          a1[1] = v8;
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
          v9 = (int *)type metadata accessor for FeedWeather(0);
          v10 = v9[7];
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_1BB87270C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
          *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
          v14 = v9[9];
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
          v18 = v17;
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
          v19(v15, v16, v17);
          v20 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v19(&v15[v20[5]], &v16[v20[5]], v18);
          v19(&v15[v20[6]], &v16[v20[6]], v18);
          v19(&v15[v20[7]], &v16[v20[7]], v18);
          *(_OWORD *)((char *)a1 + v9[10]) = *(_OWORD *)((char *)a2 + v9[10]);
          goto LABEL_41;
        case 5u:
          *a1 = *a2;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
          v102 = (int *)type metadata accessor for FeedHeadline(0);
          v23 = v102[10];
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          *v24 = *((_BYTE *)a2 + v23);
          v24[1] = *((_BYTE *)a2 + v23 + 1);
          v26 = (int *)type metadata accessor for FeedHeadline.State(0);
          v27 = v26[6];
          v28 = &v24[v27];
          v29 = &v25[v27];
          v30 = (int *)type metadata accessor for SharedItem();
          v31 = *((_QWORD *)v30 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
          {
            v32 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v52 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v28, v29, v52);
            v28[v30[5]] = v29[v30[5]];
            *(_QWORD *)&v28[v30[6]] = *(_QWORD *)&v29[v30[6]];
            v53 = v30[7];
            v101 = &v28[v53];
            v54 = &v29[v53];
            v55 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v101, v54, v55);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
          }
          v24[v26[7]] = v25[v26[7]];
          v24[v26[8]] = v25[v26[8]];
          v24[v26[9]] = v25[v26[9]];
          v24[v26[10]] = v25[v26[10]];
          v56 = v102[11];
          v57 = (char *)a1 + v56;
          v58 = (char *)a2 + v56;
          v59 = sub_1BB871B24();
          v60 = *(_QWORD *)(v59 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          }
          *(_OWORD *)((char *)a1 + v102[12]) = *(_OWORD *)((char *)a2 + v102[12]);
          v69 = v102[13];
          v70 = *(_QWORD *)((char *)a2 + v69);
          if (v70 == 2)
            v70 = 2;
          *(_QWORD *)((char *)a1 + v69) = v70;
          *(_QWORD *)((char *)a1 + v102[14]) = *(_QWORD *)((char *)a2 + v102[14]);
          goto LABEL_41;
        case 6u:
          v33 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v33;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          v34 = (int *)type metadata accessor for FeedWebEmbed();
          v35 = v34[8];
          v36 = (char *)a1 + v35;
          v37 = (char *)a2 + v35;
          v38 = sub_1BB86C67C();
          v39 = *(_QWORD *)(v38 - 8);
          v40 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
          v40(v36, v37, v38);
          v103 = v34;
          v41 = v34[9];
          v42 = (char *)a1 + v41;
          v43 = (char *)a2 + v41;
          v99 = v40;
          v100 = v38;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))((char *)a2 + v41, 1, v38))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            v40(v42, v43, v38);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v42, 0, 1, v38);
          }
          v62 = v34;
          *(_QWORD *)((char *)a1 + v34[10]) = *(_QWORD *)((char *)a2 + v34[10]);
          *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
          v63 = v34[12];
          v64 = (_OWORD *)((char *)a1 + v63);
          v65 = (_OWORD *)((char *)a2 + v63);
          v66 = (int *)type metadata accessor for FeedHeadline(0);
          v67 = *((_QWORD *)v66 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v67 + 48))(v65, 1, v66))
          {
            sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            v97 = v67;
            *v64 = *v65;
            *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
            *((_BYTE *)v64 + 24) = *((_BYTE *)v65 + 24);
            *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
            *(_OWORD *)((char *)v64 + 40) = *(_OWORD *)((char *)v65 + 40);
            *((_BYTE *)v64 + 56) = *((_BYTE *)v65 + 56);
            v71 = v66[10];
            v72 = (char *)v64 + v71;
            v73 = (char *)v65 + v71;
            *v72 = *((_BYTE *)v65 + v71);
            v72[1] = *((_BYTE *)v65 + v71 + 1);
            v96 = (int *)type metadata accessor for FeedHeadline.State(0);
            v74 = v96[6];
            __dst = &v72[v74];
            v75 = &v73[v74];
            v76 = (int *)type metadata accessor for SharedItem();
            v95 = *((_QWORD *)v76 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v95 + 48))(v75, 1, v76))
            {
              v77 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            }
            else
            {
              v78 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(__dst, v75, v78);
              __dst[v76[5]] = v75[v76[5]];
              *(_QWORD *)&__dst[v76[6]] = *(_QWORD *)&v75[v76[6]];
              v99(&__dst[v76[7]], &v75[v76[7]], v100);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(__dst, 0, 1, v76);
            }
            v72[v96[7]] = v73[v96[7]];
            v72[v96[8]] = v73[v96[8]];
            v72[v96[9]] = v73[v96[9]];
            v72[v96[10]] = v73[v96[10]];
            v79 = v66[11];
            v80 = (char *)v64 + v79;
            v81 = (char *)v65 + v79;
            v82 = sub_1BB871B24();
            v83 = *(_QWORD *)(v82 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
            }
            v62 = v103;
            *(_OWORD *)((char *)v64 + v66[12]) = *(_OWORD *)((char *)v65 + v66[12]);
            v85 = v66[13];
            v86 = *(_QWORD *)((char *)v65 + v85);
            if (v86 == 2)
              v86 = 2;
            *(_QWORD *)((char *)v64 + v85) = v86;
            *(_QWORD *)((char *)v64 + v66[14]) = *(_QWORD *)((char *)v65 + v66[14]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v97 + 56))(v64, 0, 1, v66);
          }
          v87 = v62[13];
          v88 = (_OWORD *)((char *)a1 + v87);
          v89 = (_OWORD *)((char *)a2 + v87);
          v90 = type metadata accessor for WebEmbedDataVisualization();
          v91 = *(_QWORD *)(v90 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
          {
            sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *v88 = *v89;
              v93 = type metadata accessor for GenericDataVisualization();
              v99((char *)v88 + *(int *)(v93 + 20), (char *)v89 + *(int *)(v93 + 20), v100);
              *(_QWORD *)((char *)v88 + *(int *)(v93 + 24)) = *(_QWORD *)((char *)v89 + *(int *)(v93 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v88, v89, *(_QWORD *)(v91 + 64));
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
          }
          *((_BYTE *)a1 + v62[14]) = *((_BYTE *)a2 + v62[14]);
          goto LABEL_41;
        case 0xBu:
          v45 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v45;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          v46 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v47 = (char *)&loc_1BB083950 + 4 * word_1BB8E7E80[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0xCu:
          *a1 = *a2;
          v48 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          v49 = (char *)a1 + v48;
          v50 = (char *)a2 + v48;
          v51 = sub_1BB871E24();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
LABEL_41:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_42;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      v21 = (char *)&loc_1BB0836A8 + 4 * word_1BB8E7E54[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x1Au:
      v22 = sub_1BB8714E8();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
LABEL_42:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1BB084D84(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  _OWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD *result;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  char *__dst;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  int *v102;
  int *v103;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xCu:
        v6 = sub_1BB86C67C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_43;
      case 0x11u:
        v7 = type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
            v8 = a2[1];
            *a1 = *a2;
            a1[1] = v8;
            *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
            v9 = (int *)type metadata accessor for FeedWeather(0);
            v10 = v9[7];
            v11 = (char *)a1 + v10;
            v12 = (char *)a2 + v10;
            v13 = sub_1BB87270C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
            *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
            v14 = v9[9];
            v15 = (char *)a1 + v14;
            v16 = (char *)a2 + v14;
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
            v18 = v17;
            v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
            v19(v15, v16, v17);
            v20 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v19(&v15[v20[5]], &v16[v20[5]], v18);
            v19(&v15[v20[6]], &v16[v20[6]], v18);
            v19(&v15[v20[7]], &v16[v20[7]], v18);
            *(_OWORD *)((char *)a1 + v9[10]) = *(_OWORD *)((char *)a2 + v9[10]);
            goto LABEL_42;
          case 5u:
            *a1 = *a2;
            *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
            *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
            *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
            *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
            *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
            v102 = (int *)type metadata accessor for FeedHeadline(0);
            v23 = v102[10];
            v24 = (char *)a1 + v23;
            v25 = (char *)a2 + v23;
            *v24 = *((_BYTE *)a2 + v23);
            v24[1] = *((_BYTE *)a2 + v23 + 1);
            v26 = (int *)type metadata accessor for FeedHeadline.State(0);
            v27 = v26[6];
            v28 = &v24[v27];
            v29 = &v25[v27];
            v30 = (int *)type metadata accessor for SharedItem();
            v31 = *((_QWORD *)v30 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
            {
              v32 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
            }
            else
            {
              v52 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v28, v29, v52);
              v28[v30[5]] = v29[v30[5]];
              *(_QWORD *)&v28[v30[6]] = *(_QWORD *)&v29[v30[6]];
              v53 = v30[7];
              v101 = &v28[v53];
              v54 = &v29[v53];
              v55 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v101, v54, v55);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
            }
            v24[v26[7]] = v25[v26[7]];
            v24[v26[8]] = v25[v26[8]];
            v24[v26[9]] = v25[v26[9]];
            v24[v26[10]] = v25[v26[10]];
            v56 = v102[11];
            v57 = (char *)a1 + v56;
            v58 = (char *)a2 + v56;
            v59 = sub_1BB871B24();
            v60 = *(_QWORD *)(v59 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
            }
            *(_OWORD *)((char *)a1 + v102[12]) = *(_OWORD *)((char *)a2 + v102[12]);
            v69 = v102[13];
            v70 = *(_QWORD *)((char *)a2 + v69);
            if (v70 == 2)
              v70 = 2;
            *(_QWORD *)((char *)a1 + v69) = v70;
            *(_QWORD *)((char *)a1 + v102[14]) = *(_QWORD *)((char *)a2 + v102[14]);
            goto LABEL_42;
          case 6u:
            v33 = *((_QWORD *)a2 + 1);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *((_QWORD *)a1 + 1) = v33;
            *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
            *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
            *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
            v34 = (int *)type metadata accessor for FeedWebEmbed();
            v35 = v34[8];
            v36 = (char *)a1 + v35;
            v37 = (char *)a2 + v35;
            v38 = sub_1BB86C67C();
            v39 = *(_QWORD *)(v38 - 8);
            v40 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
            v40(v36, v37, v38);
            v103 = v34;
            v41 = v34[9];
            v42 = (char *)a1 + v41;
            v43 = (char *)a2 + v41;
            v99 = v40;
            v100 = v38;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))((char *)a2 + v41, 1, v38))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
            }
            else
            {
              v40(v42, v43, v38);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v42, 0, 1, v38);
            }
            v62 = v34;
            *(_QWORD *)((char *)a1 + v34[10]) = *(_QWORD *)((char *)a2 + v34[10]);
            *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
            v63 = v34[12];
            v64 = (_OWORD *)((char *)a1 + v63);
            v65 = (_OWORD *)((char *)a2 + v63);
            v66 = (int *)type metadata accessor for FeedHeadline(0);
            v67 = *((_QWORD *)v66 - 1);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v67 + 48))(v65, 1, v66))
            {
              sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            }
            else
            {
              v97 = v67;
              *v64 = *v65;
              *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
              *((_BYTE *)v64 + 24) = *((_BYTE *)v65 + 24);
              *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
              *(_OWORD *)((char *)v64 + 40) = *(_OWORD *)((char *)v65 + 40);
              *((_BYTE *)v64 + 56) = *((_BYTE *)v65 + 56);
              v71 = v66[10];
              v72 = (char *)v64 + v71;
              v73 = (char *)v65 + v71;
              *v72 = *((_BYTE *)v65 + v71);
              v72[1] = *((_BYTE *)v65 + v71 + 1);
              v96 = (int *)type metadata accessor for FeedHeadline.State(0);
              v74 = v96[6];
              __dst = &v72[v74];
              v75 = &v73[v74];
              v76 = (int *)type metadata accessor for SharedItem();
              v95 = *((_QWORD *)v76 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v95 + 48))(v75, 1, v76))
              {
                v77 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
              }
              else
              {
                v78 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(__dst, v75, v78);
                __dst[v76[5]] = v75[v76[5]];
                *(_QWORD *)&__dst[v76[6]] = *(_QWORD *)&v75[v76[6]];
                v99(&__dst[v76[7]], &v75[v76[7]], v100);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(__dst, 0, 1, v76);
              }
              v72[v96[7]] = v73[v96[7]];
              v72[v96[8]] = v73[v96[8]];
              v72[v96[9]] = v73[v96[9]];
              v72[v96[10]] = v73[v96[10]];
              v79 = v66[11];
              v80 = (char *)v64 + v79;
              v81 = (char *)v65 + v79;
              v82 = sub_1BB871B24();
              v83 = *(_QWORD *)(v82 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
              {
                sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
              }
              v62 = v103;
              *(_OWORD *)((char *)v64 + v66[12]) = *(_OWORD *)((char *)v65 + v66[12]);
              v85 = v66[13];
              v86 = *(_QWORD *)((char *)v65 + v85);
              if (v86 == 2)
                v86 = 2;
              *(_QWORD *)((char *)v64 + v85) = v86;
              *(_QWORD *)((char *)v64 + v66[14]) = *(_QWORD *)((char *)v65 + v66[14]);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v97 + 56))(v64, 0, 1, v66);
            }
            v87 = v62[13];
            v88 = (_OWORD *)((char *)a1 + v87);
            v89 = (_OWORD *)((char *)a2 + v87);
            v90 = type metadata accessor for WebEmbedDataVisualization();
            v91 = *(_QWORD *)(v90 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
            {
              sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *v88 = *v89;
                v93 = type metadata accessor for GenericDataVisualization();
                v99((char *)v88 + *(int *)(v93 + 20), (char *)v89 + *(int *)(v93 + 20), v100);
                *(_QWORD *)((char *)v88 + *(int *)(v93 + 24)) = *(_QWORD *)((char *)v89 + *(int *)(v93 + 24));
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v88, v89, *(_QWORD *)(v91 + 64));
              }
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
            }
            *((_BYTE *)a1 + v62[14]) = *((_BYTE *)a2 + v62[14]);
            goto LABEL_42;
          case 0xBu:
            v45 = *((_QWORD *)a2 + 1);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *((_QWORD *)a1 + 1) = v45;
            *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
            *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
            *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
            v46 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
            type metadata accessor for PuzzleStatistic();
            type metadata accessor for PuzzleStatisticCategory(0);
            v47 = (char *)&loc_1BB085244 + 4 * word_1BB8E7EC4[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
            return result;
          case 0xCu:
            *a1 = *a2;
            v48 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            v49 = (char *)a1 + v48;
            v50 = (char *)a2 + v48;
            v51 = sub_1BB871E24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_43;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v21 = (char *)&loc_1BB084F9C + 4 * word_1BB8E7E98[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v22 = sub_1BB8714E8();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB086678()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeedGroupItem();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for FormatPropertyDefinition(319);
      if (v3 <= 0x3F)
      {
        result = sub_1BB8714E8();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1BB086820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *result;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *__dst;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
          v17 = v11[1];
          *v10 = *v11;
          v10[1] = v17;
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 3u:
        case 0xFu:
          v45 = v11[1];
          *v10 = *v11;
          v10[1] = v45;
          swift_retain();
          goto LABEL_44;
        case 4u:
        case 0x16u:
        case 0x19u:
        case 0x1Bu:
        case 0x1Du:
        case 0x1Eu:
          *v10 = *v11;
          swift_retain();
          goto LABEL_44;
        case 5u:
          v18 = v11[1];
          *v10 = *v11;
          v10[1] = v18;
          swift_retain();
          swift_retain();
          goto LABEL_44;
        case 6u:
          v19 = v11[1];
          *v10 = *v11;
          v10[1] = v19;
          v20 = *((_OWORD *)v11 + 2);
          *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
          *((_OWORD *)v10 + 2) = v20;
          v21 = v11[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v21)
          {
            v22 = v11[7];
            v10[6] = v21;
            v10[7] = v22;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v10 + 3) = *((_OWORD *)v11 + 3);
          }
          goto LABEL_44;
        case 7u:
          v23 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v23;
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          *((_BYTE *)v10 + 48) = *((_BYTE *)v11 + 48);
          *(_OWORD *)(v10 + 7) = *(_OWORD *)(v11 + 7);
          *(_OWORD *)(v10 + 9) = *(_OWORD *)(v11 + 9);
          *(_OWORD *)(v10 + 11) = *(_OWORD *)(v11 + 11);
          *((_BYTE *)v10 + 104) = *((_BYTE *)v11 + 104);
          v24 = v11[15];
          v10[14] = v11[14];
          v10[15] = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 8u:
          v46 = *v11;
          sub_1BA7566C0(*v11);
          *v10 = v46;
          goto LABEL_44;
        case 9u:
          v47 = v11[1];
          *v10 = *v11;
          v10[1] = v47;
          v92 = v11[2];
          v104 = v13;
          __dst = (void *)v12;
          v48 = v11[3];
          v49 = v11[4];
          v50 = v11[6];
          v94 = v11[5];
          v91 = v11[7];
          v100 = v11[8];
          v97 = v11[9];
          v51 = *((_BYTE *)v11 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAA8C5C0(v92, v48, v49, v94, v50, v91, v100, v97, v51);
          v10[2] = v92;
          v10[3] = v48;
          v10[4] = v49;
          v10[5] = v94;
          v10[6] = v50;
          v10[7] = v91;
          v12 = (uint64_t)__dst;
          v10[8] = v100;
          v10[9] = v97;
          *((_BYTE *)v10 + 80) = v51;
          v52 = v11[11];
          v53 = v11[12];
          v54 = v11[13];
          v101 = v11[14];
          v56 = v11[15];
          v55 = v11[16];
          v98 = v55;
          v57 = v11[18];
          v93 = v57;
          v95 = v11[17];
          v58 = *((_BYTE *)v11 + 152);
          sub_1BAA8C5C0(v52, v53, v54, v101, v56, v55, v95, v57, v58);
          v10[11] = v52;
          v10[12] = v53;
          v10[13] = v54;
          v13 = v104;
          v10[14] = v101;
          v10[15] = v56;
          v10[16] = v98;
          v10[17] = v95;
          v10[18] = v93;
          *((_BYTE *)v10 + 152) = v58;
          goto LABEL_44;
        case 0xAu:
          v25 = v11[1];
          *v10 = *v11;
          v10[1] = v25;
          swift_retain();
          swift_retain();
          goto LABEL_44;
        case 0xCu:
          v26 = sub_1BB86C67C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v11, v26);
          goto LABEL_44;
        case 0xDu:
          v27 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v27;
          v28 = v11[5];
          v10[4] = v11[4];
          v10[5] = v28;
          *((_BYTE *)v10 + 48) = *((_BYTE *)v11 + 48);
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0xEu:
          v29 = v11[1];
          *v10 = *v11;
          v10[1] = v29;
          v10[2] = v11[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0x10u:
          v59 = *(_OWORD *)(v11 + 3);
          *(_OWORD *)(v10 + 3) = v59;
          (**(void (***)(_QWORD *, _QWORD *))(v59 - 8))(v10, v11);
          v60 = v11[6];
          v10[5] = v11[5];
          v10[6] = v60;
          v61 = v11[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v61)
          {
            v10[7] = v11[7];
            v10[8] = v61;
            v62 = v11[10];
            v10[9] = v11[9];
            v10[10] = v62;
            v105 = v13;
            v63 = v11[12];
            v10[11] = v11[11];
            v10[12] = v63;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v13 = v105;
            swift_bridgeObjectRetain();
          }
          else
          {
            v70 = *(_OWORD *)(v11 + 9);
            *(_OWORD *)(v10 + 7) = *(_OWORD *)(v11 + 7);
            *(_OWORD *)(v10 + 9) = v70;
            *(_OWORD *)(v10 + 11) = *(_OWORD *)(v11 + 11);
          }
          *((_BYTE *)v10 + 104) = *((_BYTE *)v11 + 104);
          goto LABEL_44;
        case 0x11u:
          type metadata accessor for FeedGroupItem();
          v64 = (char *)&loc_1BB086F58 + 4 * word_1BB8E7F24[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x12u:
          v65 = v11[3];
          v10[3] = v65;
          (**(void (***)(_QWORD *, _QWORD *))(v65 - 8))(v10, v11);
          goto LABEL_44;
        case 0x13u:
          *v10 = *v11;
          v30 = v11[1];
          swift_retain();
          if (v30 == 1)
          {
            v31 = *(_OWORD *)(v11 + 15);
            *(_OWORD *)(v10 + 13) = *(_OWORD *)(v11 + 13);
            *(_OWORD *)(v10 + 15) = v31;
            *(_OWORD *)((char *)v10 + 129) = *(_OWORD *)((char *)v11 + 129);
            v32 = *(_OWORD *)(v11 + 7);
            *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
            *(_OWORD *)(v10 + 7) = v32;
            v33 = *(_OWORD *)(v11 + 11);
            *(_OWORD *)(v10 + 9) = *(_OWORD *)(v11 + 9);
            *(_OWORD *)(v10 + 11) = v33;
            v34 = *(_OWORD *)(v11 + 3);
            *(_OWORD *)(v10 + 1) = *(_OWORD *)(v11 + 1);
            *(_OWORD *)(v10 + 3) = v34;
          }
          else
          {
            v106 = v13;
            v67 = v11[2];
            v68 = v11[3];
            v10[1] = v30;
            v10[2] = v67;
            v69 = v11[4];
            v10[3] = v68;
            v10[4] = v69;
            *((_BYTE *)v10 + 40) = *((_BYTE *)v11 + 40);
            v99 = v11[7];
            v10[6] = v11[6];
            v10[7] = v99;
            v102 = *((unsigned __int8 *)v11 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v102 == 255)
            {
              *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
              *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
            }
            else
            {
              v71 = v11[8];
              v72 = v11[9];
              sub_1BA69C808(v71, v72, v102 & 1);
              v10[8] = v71;
              v10[9] = v72;
              *((_BYTE *)v10 + 80) = v102 & 1;
            }
            v73 = *((unsigned __int8 *)v11 + 120);
            if (v73 == 255)
            {
              v74 = *(_OWORD *)(v11 + 13);
              *(_OWORD *)(v10 + 11) = *(_OWORD *)(v11 + 11);
              *(_OWORD *)(v10 + 13) = v74;
              *((_BYTE *)v10 + 120) = *((_BYTE *)v11 + 120);
            }
            else
            {
              v103 = v73 & 1;
              v75 = v11[11];
              v76 = v11[12];
              v78 = v11[13];
              v77 = v11[14];
              sub_1BA896394(v75, v76, v78, v77, v73 & 1);
              v10[11] = v75;
              v10[12] = v76;
              v10[13] = v78;
              v10[14] = v77;
              *((_BYTE *)v10 + 120) = v103;
            }
            v13 = v106;
            v79 = *((unsigned __int8 *)v11 + 144);
            if (v79 == 255)
            {
              *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
              *((_BYTE *)v10 + 144) = *((_BYTE *)v11 + 144);
            }
            else
            {
              v80 = v79 & 1;
              v81 = v11[16];
              v82 = v11[17];
              sub_1BA69C808(v81, v82, v79 & 1);
              v10[16] = v81;
              v10[17] = v82;
              *((_BYTE *)v10 + 144) = v80;
            }
          }
          goto LABEL_44;
        case 0x14u:
          v35 = (void *)*v11;
          v36 = (void *)v11[1];
          *v10 = *v11;
          v10[1] = v36;
          v37 = v35;
          v38 = v36;
          goto LABEL_44;
        case 0x17u:
          *(_BYTE *)v10 = *(_BYTE *)v11;
          v39 = v11[2];
          v10[1] = v11[1];
          v10[2] = v39;
          v40 = v11[4];
          v10[3] = v11[3];
          v10[4] = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0x18u:
          type metadata accessor for FormatPropertyDefinition(0);
          v41 = (char *)&loc_1BB086BFC + 4 * word_1BB8E7F0C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x1Au:
          v42 = sub_1BB8714E8();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v10, v11, v42);
          goto LABEL_44;
        case 0x1Cu:
          v66 = v11[1];
          *v10 = *v11;
          v10[1] = v66;
          *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0x1Fu:
          v43 = *v11;
          v44 = (id)*v11;
          *v10 = v43;
LABEL_44:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v83 = *(int *)(a3 + 28);
    v84 = (char *)v4 + v83;
    v85 = (char *)a2 + v83;
    v86 = v85[16];
    if (v86 == 255)
    {
      *(_OWORD *)v84 = *(_OWORD *)v85;
      v84[16] = v85[16];
    }
    else
    {
      v87 = v86 & 1;
      v88 = *(_QWORD *)v85;
      v89 = *((_QWORD *)v85 + 1);
      sub_1BAF92B74();
      *(_QWORD *)v84 = v88;
      *((_QWORD *)v84 + 1) = v89;
      v84[16] = v87;
    }
  }
  return v4;
}

void sub_1BB08951C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  unint64_t *v10;
  uint64_t v11;
  _UNKNOWN **v12;
  unint64_t *v13;
  unint64_t (*v14)();
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  int *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for FormatInspectionItem.Value(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 0xDu:
      case 0x1Cu:
        goto LABEL_67;
      case 3u:
      case 4u:
      case 0xFu:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        goto LABEL_10;
      case 5u:
      case 0xAu:
        swift_release();
LABEL_10:
        swift_release();
        break;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v4 + 48))
          goto LABEL_6;
        break;
      case 7u:
      case 0xEu:
      case 0x17u:
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 8u:
        sub_1BA756FBC(*(_QWORD *)v4);
        break;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAA4E044(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_BYTE *)(v4 + 80));
        sub_1BAA4E044(*(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 136), *(_QWORD *)(v4 + 144), *(_BYTE *)(v4 + 152));
        break;
      case 0xCu:
        v6 = sub_1BB86C67C();
        goto LABEL_29;
      case 0x10u:
        __swift_destroy_boxed_opaque_existential_1(v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v4 + 64))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_unknownObjectRelease();
            goto LABEL_25;
          case 1u:

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v4 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(v4 + 128) >= 0x11uLL)
              break;
            goto LABEL_2;
          case 2u:
            swift_bridgeObjectRelease();
            break;
          case 3u:
            swift_bridgeObjectRelease();
            v28 = type metadata accessor for FeedWeather(0);
            v29 = v4 + *(int *)(v28 + 28);
            v30 = sub_1BB87270C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
            v31 = v4 + *(int *)(v28 + 36);
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
            v33 = v32;
            v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8);
            v34(v31, v32);
            v35 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v34(v31 + v35[5], v33);
            v34(v31 + v35[6], v33);
            v34(v31 + v35[7], v33);
            swift_bridgeObjectRelease();
            goto LABEL_2;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v4 + 240) >= 0x11uLL)
              break;
            goto LABEL_2;
          case 5u:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            v36 = (int *)type metadata accessor for FeedHeadline(0);
            v37 = v4 + v36[10];
            v38 = v37 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            v39 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
            {
              v40 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v38, v40);

              v41 = v38 + *(int *)(v39 + 28);
              v42 = sub_1BB86C67C();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
            }
            v43 = v4 + v36[11];
            v44 = sub_1BB871B24();
            v45 = *(_QWORD *)(v44 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
              (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
            if (*(_QWORD *)(v4 + v36[12] + 8) >= 0x11uLL)
              swift_bridgeObjectRelease();
            if (*(_QWORD *)(v4 + v36[13]) >= 3uLL)
              swift_unknownObjectRelease();

            goto LABEL_2;
          case 6u:
            if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
              swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v46 = (int *)type metadata accessor for FeedWebEmbed();
            v47 = v4 + v46[8];
            v48 = sub_1BB86C67C();
            v49 = *(_QWORD *)(v48 - 8);
            v50 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
            v50(v47, v48);
            v51 = v4 + v46[9];
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v48))
              v50(v51, v48);
            swift_release();
            swift_release();
            v52 = v4 + v46[12];
            v53 = (int *)type metadata accessor for FeedHeadline(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v53 - 1) + 48))(v52, 1, v53))
            {
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              v54 = v53[10];
              v55 = v52 + v54 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
              v56 = type metadata accessor for SharedItem();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
              {
                v57 = sub_1BB86C8B0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v55, v57);

                v50(v55 + *(int *)(v56 + 28), v48);
              }
              v85 = v50;
              v58 = v52 + v53[11];
              v59 = sub_1BB871B24();
              v60 = *(_QWORD *)(v59 - 8);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
                (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
              if (*(_QWORD *)(v52 + v53[12] + 8) >= 0x11uLL)
                swift_bridgeObjectRelease();
              v50 = v85;
              if (*(_QWORD *)(v52 + v53[13]) >= 3uLL)
                swift_unknownObjectRelease();

            }
            v61 = v4 + v46[13];
            v62 = type metadata accessor for WebEmbedDataVisualization();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
            {
              goto LABEL_2;
            }
            if (swift_getEnumCaseMultiPayload() != 1)
              goto LABEL_10;
            swift_bridgeObjectRelease();
            v63 = type metadata accessor for GenericDataVisualization();
            v50(v61 + *(int *)(v63 + 20), v48);
            break;
          case 7u:
            goto LABEL_30;
          case 8u:
            goto LABEL_103;
          case 9u:
            if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
              swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v4 + 112))
              __swift_destroy_boxed_opaque_existential_1(v4 + 88);
            if (*(_QWORD *)(v4 + 152))
              __swift_destroy_boxed_opaque_existential_1(v4 + 128);
            goto LABEL_2;
          case 0xAu:
            if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
              swift_bridgeObjectRelease();
LABEL_103:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            goto LABEL_2;
          case 0xBu:
            if (*(_QWORD *)(v4 + 32) >= 0x11uLL)
              swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v64 = v4 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            swift_unknownObjectRelease();
            v4 = v64 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            type metadata accessor for PuzzleStatisticCategory(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                type metadata accessor for PuzzleStatisticValue(0);
                goto LABEL_118;
              case 1u:
                type metadata accessor for PuzzleStatisticValue(0);
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
                {
                  v66 = type metadata accessor for PuzzleStreak();
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v4, 1, v66))
                  {
                    v67 = sub_1BB86BEC0();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v4, v67);
                  }
                }
                v68 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                v69 = v4 + *(int *)(v68 + 20);
                v70 = swift_getEnumCaseMultiPayload();
                if (v70 == 5 || v70 == 4)
                {
                  v71 = type metadata accessor for PuzzleStreak();
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v69, 1, v71))
                  {
                    v72 = sub_1BB86BEC0();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v69, v72);
                  }
                }
                v4 += *(int *)(v68 + 24);
LABEL_118:
                v73 = swift_getEnumCaseMultiPayload();
                if (v73 == 5 || v73 == 4)
                {
                  v74 = type metadata accessor for PuzzleStreak();
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v4, 1, v74))goto LABEL_129;
                }
                goto LABEL_2;
              case 2u:
                v75 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v4, 1, v75))
                {
                  goto LABEL_2;
                }
                v76 = sub_1BB86C8B0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v4, v76);
                v77 = type metadata accessor for PuzzleLeaderboardEntry();
                swift_bridgeObjectRelease();
                v78 = v4 + *(int *)(v77 + 24);
                swift_bridgeObjectRelease();
                v79 = *(_QWORD *)(v78 + 24);
                if (v79 >> 60 != 15)
                  sub_1BA69D314(*(_QWORD *)(v78 + 16), v79);
                goto LABEL_67;
              case 3u:
                v80 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
                v81 = v4 + *(int *)(v80 + 24);
                v82 = type metadata accessor for PuzzleStreak();
                v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48);
                if (!v83(v81, 1, v82))
                {
                  v84 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(v81, v84);
                }
                v4 += *(int *)(v80 + 28);
                if (v83(v4, 1, v82))
                  goto LABEL_2;
LABEL_129:
                v6 = sub_1BB86BEC0();
                break;
              default:
                goto LABEL_2;
            }
            goto LABEL_29;
          case 0xCu:
            swift_bridgeObjectRelease();
            v4 += *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            v6 = sub_1BB871E24();
            goto LABEL_29;
          default:
            goto LABEL_2;
        }
LABEL_67:
        swift_bridgeObjectRelease();
        break;
      case 0x12u:
        __swift_destroy_boxed_opaque_existential_1(v4);
        break;
      case 0x13u:
        swift_release();
        if (*(_QWORD *)(v4 + 8) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v7 = *(unsigned __int8 *)(v4 + 80);
          if (v7 != 255)
            sub_1BA69C828(*(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), v7 & 1);
          v8 = *(unsigned __int8 *)(v4 + 120);
          if (v8 != 255)
            sub_1BA8964E0(*(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), v8 & 1);
          v9 = *(unsigned __int8 *)(v4 + 144);
          if (v9 != 255)
            sub_1BA69C828(*(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 136), v9 & 1);
        }
        break;
      case 0x14u:

LABEL_25:
        break;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = &qword_1ED3CE138;
            v11 = MEMORY[0x1E0DEAFA0];
            v12 = &protocol witness table for Bool;
            goto LABEL_39;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
              swift_release();
            swift_bridgeObjectRelease();
            v13 = &qword_1ED3CE128;
            v14 = sub_1BA7FDD98;
            v15 = &type metadata for FormatColor;
            goto LABEL_56;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA68D668(0, (unint64_t *)&qword_1ED3B8A38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
            v17 = v16;
            v18 = v4 + *(int *)(v16 + 52);
            v19 = sub_1BB86C8B0();
            goto LABEL_41;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v20 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            goto LABEL_58;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v13 = &qword_1ED3CE100;
            v14 = sub_1BA841CF4;
            v15 = (ValueMetadata *)MEMORY[0x1E0DEF040];
            goto LABEL_56;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = &qword_1ED3CE140;
            v11 = MEMORY[0x1E0DEB418];
            v12 = &protocol witness table for Int;
            goto LABEL_39;
          case 6u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = &qword_1ED3CE130;
            v11 = MEMORY[0x1E0DEA968];
            v12 = &protocol witness table for String;
LABEL_39:
            sub_1BA74E1D4(0, v10, v11, (uint64_t)v12);
            goto LABEL_57;
          case 7u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA68D668(0, (unint64_t *)&qword_1ED3B8A30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
            v17 = v22;
            v18 = v4 + *(int *)(v22 + 52);
            v19 = sub_1BB86C67C();
LABEL_41:
            v23 = v19;
            v24 = *(_QWORD *)(v19 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v18, 1, v19))
              (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v18, v23);
            swift_bridgeObjectRelease();
            v20 = *(int *)(v17 + 64);
            goto LABEL_58;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
              swift_release();
            swift_bridgeObjectRelease();
            v13 = &qword_1ED3CE110;
            v14 = sub_1BA7F6E24;
            v15 = &type metadata for FormatAsyncImageContent;
            goto LABEL_56;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
              swift_release();
            swift_bridgeObjectRelease();
            v13 = &qword_1ED3CE108;
            v14 = sub_1BA829B34;
            v15 = &type metadata for FormatVideoNodeContent;
            goto LABEL_56;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
              swift_release();
            swift_bridgeObjectRelease();
            v13 = &qword_1ED3CE120;
            v14 = sub_1BA8378F4;
            v15 = &type metadata for FormatFont;
            goto LABEL_56;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
              swift_release();
            swift_bridgeObjectRelease();
            v13 = &qword_1ED3CE118;
            v14 = sub_1BA8266B0;
            v15 = &type metadata for FormatVideoPlayerContent;
LABEL_56:
            sub_1BA74E17C(0, v13, (uint64_t (*)(void))v14, (uint64_t)v15);
LABEL_57:
            v20 = *(int *)(v21 + 64);
LABEL_58:
            v25 = v4 + v20;
            v26 = sub_1BB86E710();
            v27 = *(_QWORD *)(v26 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
              (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
            break;
          default:
            goto LABEL_2;
        }
        break;
      case 0x1Au:
        v6 = sub_1BB8714E8();
LABEL_29:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
        break;
      case 0x1Fu:
LABEL_30:

        break;
      default:
        break;
    }
  }
LABEL_2:
  if (*(unsigned __int8 *)(a1 + *(int *)(a2 + 28) + 16) != 255)
    sub_1BAA49EA8();
}

_QWORD *sub_1BB08A5D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *result;
  uint64_t v91;
  void *v92;
  void *v93;
  void *__dst;
  void *__dsta;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for FormatInspectionItem.Value(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 3u:
      case 0xFu:
        v43 = v10[1];
        *v9 = *v10;
        v9[1] = v43;
        swift_retain();
        goto LABEL_43;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *v9 = *v10;
        swift_retain();
        goto LABEL_43;
      case 5u:
        v16 = v10[1];
        *v9 = *v10;
        v9[1] = v16;
        swift_retain();
        swift_retain();
        goto LABEL_43;
      case 6u:
        v17 = v10[1];
        *v9 = *v10;
        v9[1] = v17;
        v18 = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        *((_OWORD *)v9 + 2) = v18;
        v19 = v10[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
        {
          v20 = v10[7];
          v9[6] = v19;
          v9[7] = v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
        }
        goto LABEL_43;
      case 7u:
        v21 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v21;
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_BYTE *)v9 + 48) = *((_BYTE *)v10 + 48);
        *(_OWORD *)(v9 + 7) = *(_OWORD *)(v10 + 7);
        *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
        *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 11);
        *((_BYTE *)v9 + 104) = *((_BYTE *)v10 + 104);
        v22 = v10[15];
        v9[14] = v10[14];
        v9[15] = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 8u:
        v44 = *v10;
        sub_1BA7566C0(*v10);
        *v9 = v44;
        goto LABEL_43;
      case 9u:
        v45 = v10[1];
        *v9 = *v10;
        v9[1] = v45;
        v46 = v10[3];
        __dst = (void *)v10[2];
        v101 = v3;
        v103 = v12;
        v98 = v11;
        v48 = v10[4];
        v47 = v10[5];
        v49 = v10[7];
        v96 = v10[6];
        v91 = v10[9];
        v92 = (void *)v10[8];
        v50 = *((_BYTE *)v10 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BAA8C5C0((uint64_t)__dst, v46, v48, v47, v96, v49, (uint64_t)v92, v91, v50);
        v9[2] = __dst;
        v9[3] = v46;
        v9[4] = v48;
        v9[5] = v47;
        v9[6] = v96;
        v9[7] = v49;
        v9[8] = v92;
        v9[9] = v91;
        v11 = v98;
        *((_BYTE *)v9 + 80) = v50;
        v51 = v10[11];
        v52 = v10[12];
        v53 = v10[13];
        v55 = v10[15];
        v54 = v10[16];
        v56 = v10[17];
        __dsta = (void *)v56;
        v97 = v10[14];
        v93 = (void *)v10[18];
        v57 = *((_BYTE *)v10 + 152);
        sub_1BAA8C5C0(v51, v52, v53, v97, v55, v54, v56, (uint64_t)v93, v57);
        v9[11] = v51;
        v9[12] = v52;
        v9[13] = v53;
        v9[14] = v97;
        v9[15] = v55;
        v9[16] = v54;
        v3 = v101;
        v12 = v103;
        v9[17] = __dsta;
        v9[18] = v93;
        *((_BYTE *)v9 + 152) = v57;
        goto LABEL_43;
      case 0xAu:
        v23 = v10[1];
        *v9 = *v10;
        v9[1] = v23;
        swift_retain();
        swift_retain();
        goto LABEL_43;
      case 0xCu:
        v24 = sub_1BB86C67C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v9, v10, v24);
        goto LABEL_43;
      case 0xDu:
        v25 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v25;
        v26 = v10[5];
        v9[4] = v10[4];
        v9[5] = v26;
        *((_BYTE *)v9 + 48) = *((_BYTE *)v10 + 48);
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0xEu:
        v27 = v10[1];
        *v9 = *v10;
        v9[1] = v27;
        v9[2] = v10[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0x10u:
        v58 = *(_OWORD *)(v10 + 3);
        *(_OWORD *)(v9 + 3) = v58;
        (**(void (***)(_QWORD *, _QWORD *))(v58 - 8))(v9, v10);
        v59 = v10[6];
        v9[5] = v10[5];
        v9[6] = v59;
        v60 = v10[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v60)
        {
          v9[7] = v10[7];
          v9[8] = v60;
          v104 = v12;
          v61 = v10[10];
          v9[9] = v10[9];
          v9[10] = v61;
          v62 = v10[12];
          v9[11] = v10[11];
          v9[12] = v62;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v12 = v104;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v70 = *(_OWORD *)(v10 + 9);
          *(_OWORD *)(v9 + 7) = *(_OWORD *)(v10 + 7);
          *(_OWORD *)(v9 + 9) = v70;
          *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 11);
        }
        *((_BYTE *)v9 + 104) = *((_BYTE *)v10 + 104);
        goto LABEL_43;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        v63 = (char *)&loc_1BB08ACD8 + 4 * word_1BB8E8014[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v64 = v10[3];
        v9[3] = v64;
        (**(void (***)(_QWORD *, _QWORD *))(v64 - 8))(v9, v10);
        goto LABEL_43;
      case 0x13u:
        v102 = v12;
        *v9 = *v10;
        v28 = v10[1];
        swift_retain();
        if (v28 == 1)
        {
          v29 = *(_OWORD *)(v10 + 15);
          *(_OWORD *)(v9 + 13) = *(_OWORD *)(v10 + 13);
          *(_OWORD *)(v9 + 15) = v29;
          *(_OWORD *)((char *)v9 + 129) = *(_OWORD *)((char *)v10 + 129);
          v30 = *(_OWORD *)(v10 + 7);
          *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
          *(_OWORD *)(v9 + 7) = v30;
          v31 = *(_OWORD *)(v10 + 11);
          *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
          *(_OWORD *)(v9 + 11) = v31;
          v32 = *(_OWORD *)(v10 + 3);
          *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
          *(_OWORD *)(v9 + 3) = v32;
        }
        else
        {
          v66 = v10[2];
          v67 = v10[3];
          v9[1] = v28;
          v9[2] = v66;
          v68 = v10[4];
          v9[3] = v67;
          v9[4] = v68;
          *((_BYTE *)v9 + 40) = *((_BYTE *)v10 + 40);
          v69 = v10[7];
          v9[6] = v10[6];
          v9[7] = v69;
          v99 = *((unsigned __int8 *)v10 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v99 == 255)
          {
            *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
            *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
          }
          else
          {
            v71 = v10[8];
            v72 = v10[9];
            sub_1BA69C808(v71, v72, v99 & 1);
            v9[8] = v71;
            v9[9] = v72;
            *((_BYTE *)v9 + 80) = v99 & 1;
          }
          v73 = *((unsigned __int8 *)v10 + 120);
          if (v73 == 255)
          {
            v74 = *(_OWORD *)(v10 + 13);
            *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 11);
            *(_OWORD *)(v9 + 13) = v74;
            *((_BYTE *)v9 + 120) = *((_BYTE *)v10 + 120);
          }
          else
          {
            v100 = v73 & 1;
            v75 = v10[11];
            v76 = v10[12];
            v78 = v10[13];
            v77 = v10[14];
            sub_1BA896394(v75, v76, v78, v77, v73 & 1);
            v9[11] = v75;
            v9[12] = v76;
            v9[13] = v78;
            v9[14] = v77;
            *((_BYTE *)v9 + 120) = v100;
          }
          v79 = *((unsigned __int8 *)v10 + 144);
          if (v79 == 255)
          {
            *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
            *((_BYTE *)v9 + 144) = *((_BYTE *)v10 + 144);
          }
          else
          {
            v80 = v79 & 1;
            v81 = v10[16];
            v82 = v10[17];
            sub_1BA69C808(v81, v82, v79 & 1);
            v9[16] = v81;
            v9[17] = v82;
            *((_BYTE *)v9 + 144) = v80;
          }
        }
        v12 = v102;
        goto LABEL_43;
      case 0x14u:
        v33 = (void *)*v10;
        v34 = (void *)v10[1];
        *v9 = *v10;
        v9[1] = v34;
        v35 = v33;
        v36 = v34;
        goto LABEL_43;
      case 0x17u:
        *(_BYTE *)v9 = *(_BYTE *)v10;
        v37 = v10[2];
        v9[1] = v10[1];
        v9[2] = v37;
        v38 = v10[4];
        v9[3] = v10[3];
        v9[4] = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v39 = (char *)&loc_1BB08A990 + 4 * word_1BB8E7FFC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v40 = sub_1BB8714E8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v9, v10, v40);
        goto LABEL_43;
      case 0x1Cu:
        v65 = v10[1];
        *v9 = *v10;
        v9[1] = v65;
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0x1Fu:
        v41 = *v10;
        v42 = (id)*v10;
        *v9 = v41;
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v83 = *(int *)(v3 + 28);
  v84 = (char *)a1 + v83;
  v85 = (char *)a2 + v83;
  v86 = v85[16];
  if (v86 == 255)
  {
    *(_OWORD *)v84 = *(_OWORD *)v85;
    v84[16] = v85[16];
  }
  else
  {
    v87 = v86 & 1;
    v88 = *(_QWORD *)v85;
    v89 = *((_QWORD *)v85 + 1);
    sub_1BAF92B74();
    *(_QWORD *)v84 = v88;
    *((_QWORD *)v84 + 1) = v89;
    v84[16] = v87;
  }
  return a1;
}

_QWORD *sub_1BB08D304(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  char *v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  __int128 v109;
  __int128 v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  __int128 v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  __int128 v130;
  __int128 v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  __int128 v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  int v145;
  int v146;
  char v147;
  __int128 v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *result;
  void *__dst;
  void *__dsta;
  void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FormatInspectionItem.Value(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_87;
        case 3u:
        case 0xFu:
          v17 = *((_QWORD *)v8 + 1);
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = v17;
          swift_retain();
          goto LABEL_87;
        case 4u:
        case 0x16u:
        case 0x19u:
        case 0x1Bu:
        case 0x1Du:
        case 0x1Eu:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          swift_retain();
          goto LABEL_87;
        case 5u:
        case 0xAu:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          swift_retain();
          swift_retain();
          goto LABEL_87;
        case 6u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          v18 = *((_OWORD *)v8 + 2);
          *(_OWORD *)(v7 + 16) = *((_OWORD *)v8 + 1);
          *(_OWORD *)(v7 + 32) = v18;
          v19 = *((_QWORD *)v8 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v19)
          {
            *(_QWORD *)(v7 + 48) = v19;
            *(_QWORD *)(v7 + 56) = *((_QWORD *)v8 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 48) = *((_OWORD *)v8 + 3);
          }
          goto LABEL_87;
        case 7u:
          v20 = *(_OWORD *)v8;
          v21 = *((_OWORD *)v8 + 1);
          v22 = *((_OWORD *)v8 + 2);
          *(_BYTE *)(v7 + 48) = v8[48];
          *(_OWORD *)(v7 + 16) = v21;
          *(_OWORD *)(v7 + 32) = v22;
          *(_OWORD *)v7 = v20;
          v23 = *(_OWORD *)(v8 + 56);
          v24 = *(_OWORD *)(v8 + 72);
          v25 = *(_OWORD *)(v8 + 88);
          *(_BYTE *)(v7 + 104) = v8[104];
          *(_OWORD *)(v7 + 88) = v25;
          *(_OWORD *)(v7 + 72) = v24;
          *(_OWORD *)(v7 + 56) = v23;
          *(_QWORD *)(v7 + 112) = *((_QWORD *)v8 + 14);
          *(_QWORD *)(v7 + 120) = *((_QWORD *)v8 + 15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_87;
        case 8u:
          v26 = *(_QWORD *)v8;
          sub_1BA7566C0(v26);
          *(_QWORD *)v7 = v26;
          goto LABEL_87;
        case 9u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          v168 = v10;
          v27 = *((_QWORD *)v8 + 3);
          v158 = (void *)*((_QWORD *)v8 + 2);
          v172 = a3;
          v175 = v9;
          v28 = *((_QWORD *)v8 + 4);
          v29 = *((_QWORD *)v8 + 5);
          v30 = *((_QWORD *)v8 + 7);
          v160 = *((_QWORD *)v8 + 6);
          v163 = *((_QWORD *)v8 + 8);
          __dst = (void *)*((_QWORD *)v8 + 9);
          v31 = v8[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAA8C5C0((uint64_t)v158, v27, v28, v29, v160, v30, v163, (uint64_t)__dst, v31);
          *(_QWORD *)(v7 + 16) = v158;
          *(_QWORD *)(v7 + 24) = v27;
          *(_QWORD *)(v7 + 32) = v28;
          *(_QWORD *)(v7 + 40) = v29;
          *(_QWORD *)(v7 + 48) = v160;
          *(_QWORD *)(v7 + 56) = v30;
          *(_QWORD *)(v7 + 64) = v163;
          *(_QWORD *)(v7 + 72) = __dst;
          *(_BYTE *)(v7 + 80) = v31;
          v32 = *((_QWORD *)v8 + 11);
          v33 = *((_QWORD *)v8 + 12);
          v34 = *((_QWORD *)v8 + 13);
          v36 = *((_QWORD *)v8 + 15);
          v35 = *((_QWORD *)v8 + 16);
          v38 = *((_QWORD *)v8 + 17);
          v37 = *((_QWORD *)v8 + 18);
          v161 = v37;
          v164 = *((_QWORD *)v8 + 14);
          v39 = v8[152];
          sub_1BAA8C5C0(v32, v33, v34, v164, v36, v35, v38, v37, v39);
          *(_QWORD *)(v7 + 88) = v32;
          *(_QWORD *)(v7 + 96) = v33;
          *(_QWORD *)(v7 + 104) = v34;
          *(_QWORD *)(v7 + 112) = v164;
          *(_QWORD *)(v7 + 120) = v36;
          v10 = v168;
          a3 = v172;
          *(_QWORD *)(v7 + 128) = v35;
          *(_QWORD *)(v7 + 136) = v38;
          v9 = v175;
          *(_QWORD *)(v7 + 144) = v161;
          *(_BYTE *)(v7 + 152) = v39;
          goto LABEL_87;
        case 0xCu:
          v40 = sub_1BB86C67C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v7, v8, v40);
          goto LABEL_87;
        case 0xDu:
          v41 = *((_OWORD *)v8 + 1);
          *(_OWORD *)v7 = *(_OWORD *)v8;
          *(_OWORD *)(v7 + 16) = v41;
          *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
          *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
          *(_BYTE *)(v7 + 48) = v8[48];
          swift_bridgeObjectRetain();
          goto LABEL_87;
        case 0xEu:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_87;
        case 0x10u:
          v42 = *((_QWORD *)v8 + 3);
          *(_QWORD *)(v7 + 24) = v42;
          *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
          (**(void (***)(uint64_t, char *))(v42 - 8))(v7, v8);
          *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
          *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
          v43 = *((_QWORD *)v8 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v43)
          {
            *(_QWORD *)(v7 + 56) = *((_QWORD *)v8 + 7);
            *(_QWORD *)(v7 + 64) = *((_QWORD *)v8 + 8);
            *(_QWORD *)(v7 + 72) = *((_QWORD *)v8 + 9);
            *(_QWORD *)(v7 + 80) = *((_QWORD *)v8 + 10);
            *(_QWORD *)(v7 + 88) = *((_QWORD *)v8 + 11);
            *(_QWORD *)(v7 + 96) = *((_QWORD *)v8 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v104 = *(_OWORD *)(v8 + 56);
            v105 = *(_OWORD *)(v8 + 88);
            *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
            *(_OWORD *)(v7 + 88) = v105;
            *(_OWORD *)(v7 + 56) = v104;
          }
          *(_BYTE *)(v7 + 104) = v8[104];
          goto LABEL_87;
        case 0x11u:
          type metadata accessor for FeedGroupItem();
          v44 = (char *)&loc_1BB08D960 + 4 * word_1BB8E808E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x12u:
          v45 = *((_QWORD *)v8 + 3);
          *(_QWORD *)(v7 + 24) = v45;
          (**(void (***)(uint64_t, char *))(v45 - 8))(v7, v8);
          goto LABEL_87;
        case 0x13u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v46 = *((_QWORD *)v8 + 1);
          swift_retain();
          if (v46 == 1)
          {
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v47 = *(_OWORD *)(v8 + 24);
            v48 = *(_OWORD *)(v8 + 40);
            v49 = *(_OWORD *)(v8 + 72);
            *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
            *(_OWORD *)(v7 + 72) = v49;
            *(_OWORD *)(v7 + 24) = v47;
            *(_OWORD *)(v7 + 40) = v48;
            v50 = *(_OWORD *)(v8 + 88);
            v51 = *(_OWORD *)(v8 + 104);
            v52 = *(_OWORD *)(v8 + 120);
            *(_OWORD *)(v7 + 129) = *(_OWORD *)(v8 + 129);
            *(_OWORD *)(v7 + 104) = v51;
            *(_OWORD *)(v7 + 120) = v52;
            *(_OWORD *)(v7 + 88) = v50;
          }
          else
          {
            v169 = v10;
            v176 = v9;
            *(_QWORD *)(v7 + 8) = v46;
            *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
            *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
            *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
            *(_BYTE *)(v7 + 40) = v8[40];
            *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
            *(_QWORD *)(v7 + 56) = *((_QWORD *)v8 + 7);
            v165 = v8[80];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v165 == 255)
            {
              v61 = *((_OWORD *)v8 + 4);
              *(_BYTE *)(v7 + 80) = v8[80];
              *(_OWORD *)(v7 + 64) = v61;
            }
            else
            {
              v106 = *((_QWORD *)v8 + 8);
              v107 = *((_QWORD *)v8 + 9);
              sub_1BA69C808(v106, v107, v165 & 1);
              *(_QWORD *)(v7 + 64) = v106;
              *(_QWORD *)(v7 + 72) = v107;
              *(_BYTE *)(v7 + 80) = v165 & 1;
            }
            v108 = v8[120];
            if (v108 == 255)
            {
              v109 = *(_OWORD *)(v8 + 88);
              v110 = *(_OWORD *)(v8 + 104);
              *(_BYTE *)(v7 + 120) = v8[120];
              *(_OWORD *)(v7 + 88) = v109;
              *(_OWORD *)(v7 + 104) = v110;
            }
            else
            {
              v111 = v108 & 1;
              v112 = *((_QWORD *)v8 + 11);
              v113 = *((_QWORD *)v8 + 12);
              v114 = *((_QWORD *)v8 + 13);
              v115 = *((_QWORD *)v8 + 14);
              sub_1BA896394(v112, v113, v114, v115, v108 & 1);
              *(_QWORD *)(v7 + 88) = v112;
              *(_QWORD *)(v7 + 96) = v113;
              *(_QWORD *)(v7 + 104) = v114;
              *(_QWORD *)(v7 + 112) = v115;
              *(_BYTE *)(v7 + 120) = v111;
            }
            v10 = v169;
            v116 = v8[144];
            if (v116 == 255)
            {
              v117 = *((_OWORD *)v8 + 8);
              *(_BYTE *)(v7 + 144) = v8[144];
              *(_OWORD *)(v7 + 128) = v117;
            }
            else
            {
              v118 = v116 & 1;
              v119 = *((_QWORD *)v8 + 16);
              v120 = *((_QWORD *)v8 + 17);
              sub_1BA69C808(v119, v120, v116 & 1);
              *(_QWORD *)(v7 + 128) = v119;
              *(_QWORD *)(v7 + 136) = v120;
              *(_BYTE *)(v7 + 144) = v118;
            }
            v9 = v176;
          }
          goto LABEL_87;
        case 0x14u:
          v53 = *(void **)v8;
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v54 = (void *)*((_QWORD *)v8 + 1);
          *(_QWORD *)(v7 + 8) = v54;
          v55 = v53;
          v56 = v54;
          goto LABEL_87;
        case 0x17u:
          *(_BYTE *)v7 = *v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
          *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
          *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_87;
        case 0x18u:
          type metadata accessor for FormatPropertyDefinition(0);
          v57 = (char *)&loc_1BB08DAD4 + 4 * word_1BB8E8076[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x1Au:
          v58 = sub_1BB8714E8();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v7, v8, v58);
          goto LABEL_87;
        case 0x1Cu:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
          *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
          *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
          swift_bridgeObjectRetain();
          goto LABEL_87;
        case 0x1Fu:
          v59 = *(_QWORD *)v8;
          v60 = *(id *)v8;
          *(_QWORD *)v7 = v59;
LABEL_87:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v7, v8, *(_QWORD *)(v10 + 64));
          break;
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_89;
    }
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1BA4A2E80(v7, type metadata accessor for FormatInspectionItem.Value);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy((void *)v7, v8, v16);
    goto LABEL_89;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80(v7, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 0xFu:
        v87 = *((_QWORD *)v8 + 1);
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = v87;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 0xAu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        v62 = *((_OWORD *)v8 + 2);
        *(_OWORD *)(v7 + 16) = *((_OWORD *)v8 + 1);
        *(_OWORD *)(v7 + 32) = v62;
        v63 = *((_QWORD *)v8 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v63)
        {
          *(_QWORD *)(v7 + 48) = v63;
          *(_QWORD *)(v7 + 56) = *((_QWORD *)v8 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 48) = *((_OWORD *)v8 + 3);
        }
        goto LABEL_77;
      case 7u:
        v64 = *(_OWORD *)v8;
        v65 = *((_OWORD *)v8 + 1);
        v66 = *((_OWORD *)v8 + 2);
        *(_BYTE *)(v7 + 48) = v8[48];
        *(_OWORD *)(v7 + 16) = v65;
        *(_OWORD *)(v7 + 32) = v66;
        *(_OWORD *)v7 = v64;
        v67 = *(_OWORD *)(v8 + 56);
        v68 = *(_OWORD *)(v8 + 72);
        v69 = *(_OWORD *)(v8 + 88);
        *(_BYTE *)(v7 + 104) = v8[104];
        *(_OWORD *)(v7 + 88) = v69;
        *(_OWORD *)(v7 + 72) = v68;
        *(_OWORD *)(v7 + 56) = v67;
        *(_QWORD *)(v7 + 112) = *((_QWORD *)v8 + 14);
        *(_QWORD *)(v7 + 120) = *((_QWORD *)v8 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v88 = *(_QWORD *)v8;
        sub_1BA7566C0(v88);
        *(_QWORD *)v7 = v88;
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        v162 = *((_QWORD *)v8 + 2);
        v89 = v7;
        v90 = *((_QWORD *)v8 + 4);
        v159 = (void *)*((_QWORD *)v8 + 3);
        v173 = a3;
        v91 = *((_QWORD *)v8 + 6);
        v166 = *((_QWORD *)v8 + 5);
        v92 = *((_QWORD *)v8 + 8);
        v170 = *((_QWORD *)v8 + 7);
        __dsta = (void *)*((_QWORD *)v8 + 9);
        v93 = v8[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BAA8C5C0(v162, (uint64_t)v159, v90, v166, v91, v170, v92, (uint64_t)__dsta, v93);
        *(_QWORD *)(v89 + 16) = v162;
        *(_QWORD *)(v89 + 24) = v159;
        *(_QWORD *)(v89 + 32) = v90;
        *(_QWORD *)(v89 + 40) = v166;
        *(_QWORD *)(v89 + 48) = v91;
        *(_QWORD *)(v89 + 56) = v170;
        *(_QWORD *)(v89 + 64) = v92;
        *(_QWORD *)(v89 + 72) = __dsta;
        *(_BYTE *)(v89 + 80) = v93;
        v94 = *((_QWORD *)v8 + 11);
        v95 = *((_QWORD *)v8 + 12);
        v96 = *((_QWORD *)v8 + 13);
        v97 = *((_QWORD *)v8 + 14);
        v98 = *((_QWORD *)v8 + 15);
        v171 = *((_QWORD *)v8 + 17);
        v167 = *((_QWORD *)v8 + 18);
        LOBYTE(v90) = v8[152];
        v99 = *((_QWORD *)v8 + 16);
        sub_1BAA8C5C0(v94, v95, v96, v97, v98, v99, v171, v167, v90);
        *(_QWORD *)(v89 + 88) = v94;
        *(_QWORD *)(v89 + 96) = v95;
        *(_QWORD *)(v89 + 104) = v96;
        *(_QWORD *)(v89 + 112) = v97;
        a3 = v173;
        *(_QWORD *)(v89 + 120) = v98;
        *(_QWORD *)(v89 + 128) = v99;
        *(_QWORD *)(v89 + 136) = v171;
        *(_QWORD *)(v89 + 144) = v167;
        *(_BYTE *)(v89 + 152) = v90;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v70 = sub_1BB86C67C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v7, v8, v70);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v71 = *((_OWORD *)v8 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *(_OWORD *)(v7 + 16) = v71;
        *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
        *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
        *(_BYTE *)(v7 + 48) = v8[48];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        v100 = *((_QWORD *)v8 + 3);
        *(_QWORD *)(v7 + 24) = v100;
        *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
        (**(void (***)(uint64_t, char *))(v100 - 8))(v7, v8);
        *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
        *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
        v101 = *((_QWORD *)v8 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v101)
        {
          *(_QWORD *)(v7 + 56) = *((_QWORD *)v8 + 7);
          *(_QWORD *)(v7 + 64) = *((_QWORD *)v8 + 8);
          *(_QWORD *)(v7 + 72) = *((_QWORD *)v8 + 9);
          *(_QWORD *)(v7 + 80) = *((_QWORD *)v8 + 10);
          *(_QWORD *)(v7 + 88) = *((_QWORD *)v8 + 11);
          *(_QWORD *)(v7 + 96) = *((_QWORD *)v8 + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v124 = *(_OWORD *)(v8 + 56);
          v125 = *(_OWORD *)(v8 + 88);
          *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
          *(_OWORD *)(v7 + 88) = v125;
          *(_OWORD *)(v7 + 56) = v124;
        }
        *(_BYTE *)(v7 + 104) = v8[104];
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        v102 = (char *)&loc_1BB08E404 + 4 * word_1BB8E8108[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v103 = *((_QWORD *)v8 + 3);
        *(_QWORD *)(v7 + 24) = v103;
        (**(void (***)(uint64_t, char *))(v103 - 8))(v7, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v72 = *((_QWORD *)v8 + 1);
        swift_retain();
        if (v72 == 1)
        {
          *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
          v73 = *(_OWORD *)(v8 + 24);
          v74 = *(_OWORD *)(v8 + 40);
          v75 = *(_OWORD *)(v8 + 72);
          *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
          *(_OWORD *)(v7 + 72) = v75;
          *(_OWORD *)(v7 + 24) = v73;
          *(_OWORD *)(v7 + 40) = v74;
          v76 = *(_OWORD *)(v8 + 88);
          v77 = *(_OWORD *)(v8 + 104);
          v78 = *(_OWORD *)(v8 + 120);
          *(_OWORD *)(v7 + 129) = *(_OWORD *)(v8 + 129);
          *(_OWORD *)(v7 + 104) = v77;
          *(_OWORD *)(v7 + 120) = v78;
          *(_OWORD *)(v7 + 88) = v76;
        }
        else
        {
          v174 = a3;
          *(_QWORD *)(v7 + 8) = v72;
          *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
          v121 = v7;
          *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
          *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
          *(_BYTE *)(v7 + 40) = v8[40];
          *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
          *(_QWORD *)(v7 + 56) = *((_QWORD *)v8 + 7);
          v122 = v8[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v122 == 255)
          {
            v123 = *((_OWORD *)v8 + 4);
            *(_BYTE *)(v7 + 80) = v8[80];
            *(_OWORD *)(v7 + 64) = v123;
          }
          else
          {
            v126 = *((_QWORD *)v8 + 8);
            v127 = *((_QWORD *)v8 + 9);
            sub_1BA69C808(v126, v127, v122 & 1);
            *(_QWORD *)(v121 + 64) = v126;
            *(_QWORD *)(v121 + 72) = v127;
            *(_BYTE *)(v121 + 80) = v122 & 1;
          }
          v128 = v121;
          v129 = v8[120];
          if (v129 == 255)
          {
            v130 = *(_OWORD *)(v8 + 88);
            v131 = *(_OWORD *)(v8 + 104);
            *(_BYTE *)(v121 + 120) = v8[120];
            *(_OWORD *)(v121 + 88) = v130;
            *(_OWORD *)(v121 + 104) = v131;
          }
          else
          {
            v132 = v129 & 1;
            v133 = *((_QWORD *)v8 + 11);
            v134 = *((_QWORD *)v8 + 12);
            v136 = *((_QWORD *)v8 + 13);
            v135 = *((_QWORD *)v8 + 14);
            sub_1BA896394(v133, v134, v136, v135, v129 & 1);
            *(_QWORD *)(v121 + 88) = v133;
            *(_QWORD *)(v121 + 96) = v134;
            v128 = v121;
            *(_QWORD *)(v121 + 104) = v136;
            *(_QWORD *)(v121 + 112) = v135;
            *(_BYTE *)(v121 + 120) = v132;
          }
          a3 = v174;
          v137 = v8[144];
          if (v137 == 255)
          {
            v138 = *((_OWORD *)v8 + 8);
            *(_BYTE *)(v128 + 144) = v8[144];
            *(_OWORD *)(v128 + 128) = v138;
          }
          else
          {
            v139 = v137 & 1;
            v141 = *((_QWORD *)v8 + 16);
            v140 = *((_QWORD *)v8 + 17);
            sub_1BA69C808(v141, v140, v137 & 1);
            *(_QWORD *)(v128 + 128) = v141;
            *(_QWORD *)(v128 + 136) = v140;
            *(_BYTE *)(v128 + 144) = v139;
          }
        }
LABEL_77:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x14u:
        v79 = *(id *)v8;
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v80 = (void *)*((_QWORD *)v8 + 1);
        *(_QWORD *)(v7 + 8) = v80;
        v81 = v79;
        v82 = v80;
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        *(_BYTE *)v7 = *v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
        *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
        *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v83 = (char *)&loc_1BB08E018 + 4 * word_1BB8E80F0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v84 = sub_1BB8714E8();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v7, v8, v84);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Cu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
        *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
        *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        v85 = *(id *)v8;
        v86 = v85;
        *(_QWORD *)v7 = v85;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v16 = *(_QWORD *)(v10 + 64);
        goto LABEL_7;
    }
  }
LABEL_89:
  v142 = *(int *)(a3 + 28);
  v143 = (uint64_t)a1 + v142;
  v144 = (char *)a2 + v142;
  v145 = *((unsigned __int8 *)a1 + v142 + 16);
  v146 = *((unsigned __int8 *)a2 + v142 + 16);
  if (v145 == 255)
  {
    if (v146 == 255)
    {
      v148 = *(_OWORD *)v144;
      *(_BYTE *)(v143 + 16) = v144[16];
      *(_OWORD *)v143 = v148;
    }
    else
    {
      v152 = v146 & 1;
      v153 = *(_QWORD *)v144;
      v154 = *((_QWORD *)v144 + 1);
      sub_1BAF92B74();
      *(_QWORD *)v143 = v153;
      *(_QWORD *)(v143 + 8) = v154;
      *(_BYTE *)(v143 + 16) = v152;
    }
  }
  else if (v146 == 255)
  {
    sub_1BB0934E8(v143);
    v147 = v144[16];
    *(_OWORD *)v143 = *(_OWORD *)v144;
    *(_BYTE *)(v143 + 16) = v147;
  }
  else
  {
    v149 = v146 & 1;
    v150 = *(_QWORD *)v144;
    v151 = *((_QWORD *)v144 + 1);
    sub_1BAF92B74();
    *(_QWORD *)v143 = v150;
    *(_QWORD *)(v143 + 8) = v151;
    *(_BYTE *)(v143 + 16) = v149;
    sub_1BAA49EA8();
  }
  return a1;
}

uint64_t sub_1BB0934E8(uint64_t a1)
{
  sub_1BAA49EA8();
  return a1;
}

_OWORD *sub_1BB093518(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  size_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  _OWORD *result;
  uint64_t v98;
  int *v99;
  char *v100;
  int *v101;
  char *v102;
  uint64_t v103;
  _OWORD *v104;
  char *v105;
  _OWORD *v106;
  void (**v107)(void *, _QWORD, uint64_t, int *);
  void *v108;
  int *v109;
  int *v110;
  int *v111;
  int *__dstb;
  char *__dst;
  void (*__dsta)(char *, char *, uint64_t);
  size_t *v115;
  size_t *v116;
  char *v117;
  char *v118;
  size_t *v119;
  uint64_t v120;
  int *v121;
  char *v122;
  int *v123;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for FormatInspectionItem.Value(0);
  v11 = *(size_t **)(v10 - 8);
  if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v11[6])(v9, 1, v10))
  {
    sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xCu:
        v13 = sub_1BB86C67C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        goto LABEL_44;
      case 0x11u:
        v14 = type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
            v15 = v9[1];
            *v8 = *v9;
            v8[1] = v15;
            *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
            v16 = (int *)type metadata accessor for FeedWeather(0);
            v17 = v16[7];
            v18 = (char *)v8 + v17;
            v19 = (char *)v9 + v17;
            v20 = sub_1BB87270C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
            __dstb = v16;
            *((_BYTE *)v8 + v16[8]) = *((_BYTE *)v9 + v16[8]);
            v21 = v16[9];
            v22 = (char *)v8 + v21;
            v23 = (char *)v9 + v21;
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
            v115 = v11;
            v120 = v3;
            v25 = v24;
            v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
            v26(v22, v23, v24);
            v27 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v26(&v22[v27[5]], &v23[v27[5]], v25);
            v26(&v22[v27[6]], &v23[v27[6]], v25);
            v28 = v25;
            v11 = v115;
            v26(&v22[v27[7]], &v23[v27[7]], v28);
            v3 = v120;
            *(_OWORD *)((char *)v8 + __dstb[10]) = *(_OWORD *)((char *)v9 + __dstb[10]);
            goto LABEL_43;
          case 5u:
            v116 = v11;
            *v8 = *v9;
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            *((_BYTE *)v8 + 24) = *((_BYTE *)v9 + 24);
            *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
            *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
            *((_BYTE *)v8 + 56) = *((_BYTE *)v9 + 56);
            v121 = (int *)type metadata accessor for FeedHeadline(0);
            v31 = v121[10];
            v32 = (char *)v8 + v31;
            v33 = (char *)v9 + v31;
            *v32 = *((_BYTE *)v9 + v31);
            v32[1] = *((_BYTE *)v9 + v31 + 1);
            v34 = type metadata accessor for FeedHeadline.State(0);
            v35 = *(int *)(v34 + 24);
            v109 = (int *)v34;
            __dst = &v32[v35];
            v36 = &v33[v35];
            v37 = (int *)type metadata accessor for SharedItem();
            v107 = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v37 - 1);
            if (((unsigned int (*)(char *, uint64_t, int *))v107[6])(v36, 1, v37))
            {
              v38 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            }
            else
            {
              v54 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(__dst, v36, v54);
              __dst[v37[5]] = v36[v37[5]];
              *(_QWORD *)&__dst[v37[6]] = *(_QWORD *)&v36[v37[6]];
              v55 = v37[7];
              v105 = &__dst[v55];
              v56 = &v36[v55];
              v57 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v105, v56, v57);
              v107[7](__dst, 0, 1, v37);
            }
            v32[v109[7]] = v33[v109[7]];
            v32[v109[8]] = v33[v109[8]];
            v32[v109[9]] = v33[v109[9]];
            v32[v109[10]] = v33[v109[10]];
            v58 = v121[11];
            v59 = (char *)v8 + v58;
            v60 = (char *)v9 + v58;
            v61 = sub_1BB871B24();
            v62 = *(_QWORD *)(v61 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
            }
            v11 = v116;
            *(_OWORD *)((char *)v8 + v121[12]) = *(_OWORD *)((char *)v9 + v121[12]);
            v70 = v121[13];
            v71 = *(_QWORD *)((char *)v9 + v70);
            if (v71 == 2)
              v71 = 2;
            *(_QWORD *)((char *)v8 + v70) = v71;
            *(_QWORD *)((char *)v8 + v121[14]) = *(_QWORD *)((char *)v9 + v121[14]);
            goto LABEL_43;
          case 6u:
            v39 = *((_QWORD *)v9 + 1);
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_QWORD *)v8 + 1) = v39;
            *((_BYTE *)v8 + 16) = *((_BYTE *)v9 + 16);
            *(_OWORD *)((char *)v8 + 24) = *(_OWORD *)((char *)v9 + 24);
            *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
            v40 = type metadata accessor for FeedWebEmbed();
            v41 = *(int *)(v40 + 32);
            v117 = (char *)v9 + v41;
            v122 = (char *)v8 + v41;
            v42 = sub_1BB86C67C();
            v43 = *(_QWORD *)(v42 - 8);
            __dsta = *(void (**)(char *, char *, uint64_t))(v43 + 32);
            __dsta(v122, v117, v42);
            v44 = *(int *)(v40 + 36);
            v118 = (char *)v8 + v44;
            v123 = (int *)v40;
            v45 = (char *)v9 + v44;
            v108 = (void *)v42;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))((char *)v9 + v44, 1, v42))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v118, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
            }
            else
            {
              __dsta(v118, v45, v42);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v118, 0, 1, v42);
            }
            v119 = v11;
            *(_QWORD *)((char *)v8 + v123[10]) = *(_QWORD *)((char *)v9 + v123[10]);
            *(_QWORD *)((char *)v8 + v123[11]) = *(_QWORD *)((char *)v9 + v123[11]);
            v64 = v123[12];
            v65 = (_OWORD *)((char *)v8 + v64);
            v66 = (_OWORD *)((char *)v9 + v64);
            v67 = type metadata accessor for FeedHeadline(0);
            v68 = *(_QWORD *)(v67 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
            {
              sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            }
            else
            {
              v103 = v68;
              v104 = v65;
              *v65 = *v66;
              *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
              *((_BYTE *)v65 + 24) = *((_BYTE *)v66 + 24);
              *((_QWORD *)v65 + 4) = *((_QWORD *)v66 + 4);
              *(_OWORD *)((char *)v65 + 40) = *(_OWORD *)((char *)v66 + 40);
              *((_BYTE *)v65 + 56) = *((_BYTE *)v66 + 56);
              v110 = (int *)v67;
              v72 = *(int *)(v67 + 40);
              v73 = (char *)v65 + v72;
              v74 = (char *)v66 + v72;
              *v73 = *((_BYTE *)v66 + v72);
              v73[1] = *((_BYTE *)v66 + v72 + 1);
              v75 = type metadata accessor for FeedHeadline.State(0);
              v76 = *(int *)(v75 + 24);
              v100 = &v73[v76];
              v101 = (int *)v75;
              v77 = &v74[v76];
              v78 = type metadata accessor for SharedItem();
              v98 = *(_QWORD *)(v78 - 8);
              v99 = (int *)v78;
              v106 = v66;
              if ((*(unsigned int (**)(char *, uint64_t))(v98 + 48))(v77, 1))
              {
                v79 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v100, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
              }
              else
              {
                v80 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v100, v77, v80);
                v100[v99[5]] = v77[v99[5]];
                *(_QWORD *)&v100[v99[6]] = *(_QWORD *)&v77[v99[6]];
                __dsta(&v100[v99[7]], &v77[v99[7]], (uint64_t)v108);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v98 + 56))(v100, 0, 1, v99);
              }
              v73[v101[7]] = v74[v101[7]];
              v73[v101[8]] = v74[v101[8]];
              v73[v101[9]] = v74[v101[9]];
              v73[v101[10]] = v74[v101[10]];
              v81 = v110[11];
              v102 = (char *)v104 + v81;
              v82 = (char *)v66 + v81;
              v83 = sub_1BB871B24();
              v84 = *(_QWORD *)(v83 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
              {
                sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v102, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v102, v82, v83);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v102, 0, 1, v83);
              }
              *(_OWORD *)((char *)v104 + v110[12]) = *(_OWORD *)((char *)v106 + v110[12]);
              v86 = v110[13];
              v87 = *(_QWORD *)((char *)v106 + v86);
              if (v87 == 2)
                v87 = 2;
              *(_QWORD *)((char *)v104 + v86) = v87;
              *(_QWORD *)((char *)v104 + v110[14]) = *(_QWORD *)((char *)v106 + v110[14]);
              (*(void (**)(_OWORD *, _QWORD, uint64_t))(v103 + 56))(v104, 0, 1);
            }
            v88 = v123[13];
            v89 = (_OWORD *)((char *)v8 + v88);
            v90 = (_OWORD *)((char *)v9 + v88);
            v91 = type metadata accessor for WebEmbedDataVisualization();
            v92 = *(_QWORD *)(v91 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
            {
              sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *v89 = *v90;
                v111 = (int *)type metadata accessor for GenericDataVisualization();
                __dsta((char *)v89 + v111[5], (char *)v90 + v111[5], (uint64_t)v108);
                *(_QWORD *)((char *)v89 + v111[6]) = *(_QWORD *)((char *)v90 + v111[6]);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v89, v90, *(_QWORD *)(v92 + 64));
              }
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
            }
            *((_BYTE *)v8 + v123[14]) = *((_BYTE *)v9 + v123[14]);
            swift_storeEnumTagMultiPayload();
            v11 = v119;
            goto LABEL_44;
          case 0xBu:
            v47 = *((_QWORD *)v9 + 1);
            *(_QWORD *)v8 = *(_QWORD *)v9;
            *((_QWORD *)v8 + 1) = v47;
            *((_BYTE *)v8 + 16) = *((_BYTE *)v9 + 16);
            *(_OWORD *)((char *)v8 + 24) = *(_OWORD *)((char *)v9 + 24);
            *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
            v48 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            *(_QWORD *)((char *)v8 + v48) = *(_QWORD *)((char *)v9 + v48);
            type metadata accessor for PuzzleStatistic();
            type metadata accessor for PuzzleStatisticCategory(0);
            v49 = (char *)&loc_1BB093A70 + 4 * word_1BB8E8166[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
            return result;
          case 0xCu:
            *v8 = *v9;
            v50 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            v51 = (char *)v8 + v50;
            v52 = (char *)v9 + v50;
            v53 = sub_1BB871E24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        goto LABEL_44;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v29 = (char *)&loc_1BB0937A4 + 4 * word_1BB8E813A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v30 = sub_1BB8714E8();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
LABEL_44:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, v11[8]);
        break;
    }
    ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))v11[7])(v8, 0, 1, v10);
  }
  v94 = *(int *)(v3 + 28);
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  *(_OWORD *)v95 = *(_OWORD *)v96;
  v95[16] = v96[16];
  return a1;
}

_QWORD *sub_1BB0950A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  int *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  char *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  _OWORD *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _OWORD *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _OWORD *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  int v189;
  _QWORD *result;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  char *v194;
  int *v195;
  char *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  int *v200;
  _OWORD *v201;
  _OWORD *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  void (**v206)(void *, _QWORD, uint64_t, int *);
  char *v207;
  char *v208;
  int *v209;
  int *v210;
  void (*v211)(uint64_t, char *, uint64_t);
  void (**v212)(void *, _QWORD, uint64_t, int *);
  void *v213;
  int *__dste;
  char *__dst;
  char *__dstf;
  void *__dsta;
  char *__dstb;
  void *__dstg;
  void (*__dstc)(void *, char *, uint64_t);
  int *__dstd;
  int *__dsth;
  void (*v223)(uint64_t, char *, uint64_t);
  int *v224;
  int *v225;
  uint64_t v226;
  int *v227;
  int *v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FormatInspectionItem.Value(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0xCu:
          v19 = sub_1BB86C67C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v9, v10, v19);
          goto LABEL_90;
        case 0x11u:
          v21 = type metadata accessor for FeedGroupItem();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
              v22 = *((_OWORD *)v10 + 1);
              *(_OWORD *)v9 = *(_OWORD *)v10;
              *(_OWORD *)(v9 + 16) = v22;
              *(_BYTE *)(v9 + 32) = v10[32];
              v23 = (int *)type metadata accessor for FeedWeather(0);
              v24 = v23[7];
              v25 = v9 + v24;
              v26 = &v10[v24];
              v27 = sub_1BB87270C();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
              __dste = v23;
              *(_BYTE *)(v9 + v23[8]) = v10[v23[8]];
              v28 = v23[9];
              v29 = v9 + v28;
              v30 = &v10[v28];
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
              v230 = a3;
              v32 = v31;
              v223 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
              v223(v29, v30, v31);
              v33 = (int *)type metadata accessor for FeedWeather.Temperature(0);
              v223(v29 + v33[5], &v30[v33[5]], v32);
              v223(v29 + v33[6], &v30[v33[6]], v32);
              v34 = v32;
              a3 = v230;
              v223(v29 + v33[7], &v30[v33[7]], v34);
              *(_OWORD *)(v9 + __dste[10]) = *(_OWORD *)&v10[__dste[10]];
              goto LABEL_89;
            case 5u:
              v232 = a3;
              *(_OWORD *)v9 = *(_OWORD *)v10;
              *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
              *(_BYTE *)(v9 + 24) = v10[24];
              *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
              *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
              *(_BYTE *)(v9 + 56) = v10[56];
              v225 = (int *)type metadata accessor for FeedHeadline(0);
              v54 = v225[10];
              v55 = (_BYTE *)(v9 + v54);
              v56 = &v10[v54];
              *v55 = v10[v54];
              v55[1] = v10[v54 + 1];
              v57 = type metadata accessor for FeedHeadline.State(0);
              v58 = *(int *)(v57 + 24);
              v210 = (int *)v57;
              __dst = &v55[v58];
              v59 = &v56[v58];
              v60 = (int *)type metadata accessor for SharedItem();
              v206 = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v60 - 1);
              if (((unsigned int (*)(char *, uint64_t, int *))v206[6])(v59, 1, v60))
              {
                v61 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
              }
              else
              {
                v96 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(__dst, v59, v96);
                __dst[v60[5]] = v59[v60[5]];
                *(_QWORD *)&__dst[v60[6]] = *(_QWORD *)&v59[v60[6]];
                v97 = v60[7];
                v204 = &__dst[v97];
                v98 = &v59[v97];
                v99 = sub_1BB86C67C();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v204, v98, v99);
                v206[7](__dst, 0, 1, v60);
              }
              v55[v210[7]] = v56[v210[7]];
              v55[v210[8]] = v56[v210[8]];
              v55[v210[9]] = v56[v210[9]];
              v55[v210[10]] = v56[v210[10]];
              v100 = v225[11];
              v101 = (void *)(v9 + v100);
              v102 = &v10[v100];
              v103 = sub_1BB871B24();
              v104 = *(_QWORD *)(v103 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
              {
                sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v104 + 32))(v101, v102, v103);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
              }
              a3 = v232;
              *(_OWORD *)(v9 + v225[12]) = *(_OWORD *)&v10[v225[12]];
              v112 = v225[13];
              v113 = *(_QWORD *)&v10[v112];
              if (v113 == 2)
                v113 = 2;
              *(_QWORD *)(v9 + v112) = v113;
              *(_QWORD *)(v9 + v225[14]) = *(_QWORD *)&v10[v225[14]];
              goto LABEL_89;
            case 6u:
              v62 = *((_QWORD *)v10 + 1);
              *(_QWORD *)v9 = *(_QWORD *)v10;
              *(_QWORD *)(v9 + 8) = v62;
              *(_BYTE *)(v9 + 16) = v10[16];
              *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
              *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
              v63 = type metadata accessor for FeedWebEmbed();
              v64 = *(int *)(v63 + 32);
              __dstf = &v10[v64];
              v226 = v9 + v64;
              v65 = sub_1BB86C67C();
              v66 = *(_QWORD *)(v65 - 8);
              v211 = *(void (**)(uint64_t, char *, uint64_t))(v66 + 32);
              v211(v226, __dstf, v65);
              v67 = *(int *)(v63 + 36);
              __dsta = (void *)(v9 + v67);
              v227 = (int *)v63;
              v68 = &v10[v67];
              v203 = v65;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(&v10[v67], 1, v65))
              {
                sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(__dsta, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
              }
              else
              {
                v211((uint64_t)__dsta, v68, v65);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(__dsta, 0, 1, v65);
              }
              v235 = a3;
              *(_QWORD *)(v9 + v227[10]) = *(_QWORD *)&v10[v227[10]];
              *(_QWORD *)(v9 + v227[11]) = *(_QWORD *)&v10[v227[11]];
              v106 = v227[12];
              v107 = (_OWORD *)(v9 + v106);
              v108 = &v10[v106];
              v109 = type metadata accessor for FeedHeadline(0);
              v110 = *(_QWORD *)(v109 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
              {
                sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
              }
              else
              {
                v199 = v110;
                v201 = v107;
                *v107 = *(_OWORD *)v108;
                *((_QWORD *)v107 + 2) = *((_QWORD *)v108 + 2);
                *((_BYTE *)v107 + 24) = v108[24];
                *((_QWORD *)v107 + 4) = *((_QWORD *)v108 + 4);
                *(_OWORD *)((char *)v107 + 40) = *(_OWORD *)(v108 + 40);
                *((_BYTE *)v107 + 56) = v108[56];
                __dstd = (int *)v109;
                v114 = *(int *)(v109 + 40);
                v115 = (char *)v107 + v114;
                v116 = &v108[v114];
                *v115 = v108[v114];
                v115[1] = v108[v114 + 1];
                v117 = type metadata accessor for FeedHeadline.State(0);
                v118 = *(int *)(v117 + 24);
                v194 = &v115[v118];
                v195 = (int *)v117;
                v119 = &v116[v118];
                v120 = type metadata accessor for SharedItem();
                v191 = *(_QWORD *)(v120 - 8);
                v192 = (int *)v120;
                v207 = v108;
                if ((*(unsigned int (**)(char *, uint64_t))(v191 + 48))(v119, 1))
                {
                  v121 = type metadata accessor for FeedItem.SharedState(0);
                  memcpy(v194, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
                }
                else
                {
                  v146 = sub_1BB86C8B0();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v194, v119, v146);
                  v194[v192[5]] = v119[v192[5]];
                  *(_QWORD *)&v194[v192[6]] = *(_QWORD *)&v119[v192[6]];
                  v211((uint64_t)&v194[v192[7]], &v119[v192[7]], v203);
                  (*(void (**)(char *, _QWORD, uint64_t, int *))(v191 + 56))(v194, 0, 1, v192);
                }
                v115[v195[7]] = v116[v195[7]];
                v115[v195[8]] = v116[v195[8]];
                v115[v195[9]] = v116[v195[9]];
                v115[v195[10]] = v116[v195[10]];
                v147 = __dstd[11];
                v196 = (char *)v201 + v147;
                v148 = &v108[v147];
                v149 = sub_1BB871B24();
                v150 = *(_QWORD *)(v149 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v148, 1, v149))
                {
                  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                  memcpy(v196, v148, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v196, v148, v149);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v196, 0, 1, v149);
                }
                *(_OWORD *)((char *)v201 + __dstd[12]) = *(_OWORD *)&v207[__dstd[12]];
                v162 = __dstd[13];
                v163 = *(_QWORD *)&v207[v162];
                if (v163 == 2)
                  v163 = 2;
                *(_QWORD *)((char *)v201 + v162) = v163;
                *(_QWORD *)((char *)v201 + __dstd[14]) = *(_QWORD *)&v207[__dstd[14]];
                (*(void (**)(_OWORD *, _QWORD, uint64_t))(v199 + 56))(v201, 0, 1);
              }
              v164 = v227[13];
              v165 = (_OWORD *)(v9 + v164);
              v166 = &v10[v164];
              v167 = type metadata accessor for WebEmbedDataVisualization();
              v168 = *(_QWORD *)(v167 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v166, 1, v167))
              {
                sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
              }
              else
              {
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  *v165 = *(_OWORD *)v166;
                  __dsth = (int *)type metadata accessor for GenericDataVisualization();
                  v211((uint64_t)v165 + __dsth[5], &v166[__dsth[5]], v203);
                  *(_QWORD *)((char *)v165 + __dsth[6]) = *(_QWORD *)&v166[__dsth[6]];
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v165, v166, *(_QWORD *)(v168 + 64));
                }
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v165, 0, 1, v167);
              }
              *(_BYTE *)(v9 + v227[14]) = v10[v227[14]];
              swift_storeEnumTagMultiPayload();
              a3 = v235;
              goto LABEL_90;
            case 0xBu:
              v70 = *((_QWORD *)v10 + 1);
              *(_QWORD *)v9 = *(_QWORD *)v10;
              *(_QWORD *)(v9 + 8) = v70;
              *(_BYTE *)(v9 + 16) = v10[16];
              *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
              *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
              v71 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
              *(_QWORD *)(v9 + v71) = *(_QWORD *)&v10[v71];
              type metadata accessor for PuzzleStatistic();
              type metadata accessor for PuzzleStatisticCategory(0);
              v72 = (char *)&loc_1BB0958DC + 4 * word_1BB8E81AA[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
              return result;
            case 0xCu:
              *(_OWORD *)v9 = *(_OWORD *)v10;
              v73 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
              v74 = v9 + v73;
              v75 = &v10[v73];
              v76 = sub_1BB871E24();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
LABEL_89:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
              break;
          }
          goto LABEL_90;
        case 0x18u:
          type metadata accessor for FormatPropertyDefinition(0);
          v35 = (char *)&loc_1BB09541C + 4 * word_1BB8E817E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x1Au:
          v36 = sub_1BB8714E8();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v9, v10, v36);
LABEL_90:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v9, v10, *(_QWORD *)(v12 + 64));
          break;
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_92;
    }
    v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1BA4A2E80(v9, type metadata accessor for FormatInspectionItem.Value);
    v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64);
LABEL_7:
    memcpy((void *)v9, v10, v18);
    goto LABEL_92;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80(v9, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xCu:
        v20 = sub_1BB86C67C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v9, v10, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        v37 = type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
            v38 = *((_OWORD *)v10 + 1);
            *(_OWORD *)v9 = *(_OWORD *)v10;
            *(_OWORD *)(v9 + 16) = v38;
            *(_BYTE *)(v9 + 32) = v10[32];
            v39 = (int *)type metadata accessor for FeedWeather(0);
            v40 = v39[7];
            v41 = v9 + v40;
            v42 = &v10[v40];
            v43 = sub_1BB87270C();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
            v224 = v39;
            *(_BYTE *)(v9 + v39[8]) = v10[v39[8]];
            v44 = v39[9];
            v45 = v9 + v44;
            v46 = &v10[v44];
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
            v231 = a3;
            v48 = v47;
            v49 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32);
            v49(v45, v46, v47);
            v50 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v49(v45 + v50[5], &v46[v50[5]], v48);
            v49(v45 + v50[6], &v46[v50[6]], v48);
            v51 = v48;
            a3 = v231;
            v49(v45 + v50[7], &v46[v50[7]], v51);
            *(_OWORD *)(v9 + v224[10]) = *(_OWORD *)&v10[v224[10]];
            goto LABEL_98;
          case 5u:
            v233 = a3;
            *(_OWORD *)v9 = *(_OWORD *)v10;
            *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
            *(_BYTE *)(v9 + 24) = v10[24];
            *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
            *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
            *(_BYTE *)(v9 + 56) = v10[56];
            v228 = (int *)type metadata accessor for FeedHeadline(0);
            v77 = v228[10];
            v78 = (_BYTE *)(v9 + v77);
            v79 = &v10[v77];
            *v78 = v10[v77];
            v78[1] = v10[v77 + 1];
            v80 = (int *)type metadata accessor for FeedHeadline.State(0);
            v81 = v80[6];
            __dstb = &v78[v81];
            v82 = &v79[v81];
            v83 = (int *)type metadata accessor for SharedItem();
            v212 = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v83 - 1);
            if (((unsigned int (*)(char *, uint64_t, int *))v212[6])(v82, 1, v83))
            {
              v84 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dstb, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            }
            else
            {
              v129 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(__dstb, v82, v129);
              __dstb[v83[5]] = v82[v83[5]];
              *(_QWORD *)&__dstb[v83[6]] = *(_QWORD *)&v82[v83[6]];
              v130 = v83[7];
              v208 = &__dstb[v130];
              v131 = &v82[v130];
              v132 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v208, v131, v132);
              v212[7](__dstb, 0, 1, v83);
            }
            v78[v80[7]] = v79[v80[7]];
            v78[v80[8]] = v79[v80[8]];
            v78[v80[9]] = v79[v80[9]];
            v78[v80[10]] = v79[v80[10]];
            v133 = v228[11];
            v134 = (void *)(v9 + v133);
            v135 = &v10[v133];
            v136 = sub_1BB871B24();
            v137 = *(_QWORD *)(v136 - 8);
            a3 = v233;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v135, 1, v136))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v137 + 32))(v134, v135, v136);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
            }
            *(_OWORD *)(v9 + v228[12]) = *(_OWORD *)&v10[v228[12]];
            v152 = v228[13];
            v153 = *(_QWORD *)&v10[v152];
            if (v153 == 2)
              v153 = 2;
            *(_QWORD *)(v9 + v152) = v153;
            *(_QWORD *)(v9 + v228[14]) = *(_QWORD *)&v10[v228[14]];
            goto LABEL_98;
          case 6u:
            v85 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *(_QWORD *)(v9 + 8) = v85;
            *(_BYTE *)(v9 + 16) = v10[16];
            *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
            *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
            v86 = type metadata accessor for FeedWebEmbed();
            v87 = *(int *)(v86 + 32);
            __dstg = (void *)(v9 + v87);
            v88 = &v10[v87];
            v89 = sub_1BB86C67C();
            v90 = *(_QWORD *)(v89 - 8);
            v91 = __dstg;
            __dstc = *(void (**)(void *, char *, uint64_t))(v90 + 32);
            __dstc(v91, v88, v89);
            v229 = (int *)v86;
            v92 = *(int *)(v86 + 36);
            v93 = (void *)(v9 + v92);
            v94 = &v10[v92];
            v234 = a3;
            v213 = (void *)v89;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(&v10[v92], 1, v89))
            {
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            }
            else
            {
              __dstc(v93, v94, v89);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v93, 0, 1, v89);
            }
            v139 = v229;
            *(_QWORD *)(v9 + v229[10]) = *(_QWORD *)&v10[v229[10]];
            *(_QWORD *)(v9 + v229[11]) = *(_QWORD *)&v10[v229[11]];
            v140 = v229[12];
            v141 = (_OWORD *)(v9 + v140);
            v142 = &v10[v140];
            v143 = type metadata accessor for FeedHeadline(0);
            v144 = *(_QWORD *)(v143 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
            {
              sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
            }
            else
            {
              v205 = v144;
              v209 = (int *)v143;
              *v141 = *(_OWORD *)v142;
              *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
              *((_BYTE *)v141 + 24) = v142[24];
              *((_QWORD *)v141 + 4) = *((_QWORD *)v142 + 4);
              *(_OWORD *)((char *)v141 + 40) = *(_OWORD *)(v142 + 40);
              *((_BYTE *)v141 + 56) = v142[56];
              v154 = *(int *)(v143 + 40);
              v155 = (char *)v141 + v154;
              v202 = v142;
              v156 = &v142[v154];
              *v155 = *v156;
              v155[1] = v156[1];
              v157 = type metadata accessor for FeedHeadline.State(0);
              v158 = *(int *)(v157 + 24);
              v197 = &v155[v158];
              v200 = (int *)v157;
              v159 = &v156[v158];
              v160 = (int *)type metadata accessor for SharedItem();
              v193 = *((_QWORD *)v160 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v193 + 48))(v159, 1, v160))
              {
                v161 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v197, v159, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
              }
              else
              {
                v170 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v197, v159, v170);
                v197[v160[5]] = v159[v160[5]];
                *(_QWORD *)&v197[v160[6]] = *(_QWORD *)&v159[v160[6]];
                __dstc(&v197[v160[7]], &v159[v160[7]], (uint64_t)v213);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v193 + 56))(v197, 0, 1, v160);
              }
              v155[v200[7]] = v156[v200[7]];
              v155[v200[8]] = v156[v200[8]];
              v155[v200[9]] = v156[v200[9]];
              v155[v200[10]] = v156[v200[10]];
              v171 = v209[11];
              v198 = (char *)v141 + v171;
              v172 = (char *)v202 + v171;
              v173 = sub_1BB871B24();
              v174 = *(_QWORD *)(v173 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v172, 1, v173))
              {
                sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v198, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v198, v172, v173);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v198, 0, 1, v173);
              }
              v139 = v229;
              *(_OWORD *)((char *)v141 + v209[12]) = *(_OWORD *)((char *)v202 + v209[12]);
              v176 = v209[13];
              v177 = *(_QWORD *)((char *)v202 + v176);
              if (v177 == 2)
                v177 = 2;
              *(_QWORD *)((char *)v141 + v176) = v177;
              *(_QWORD *)((char *)v141 + v209[14]) = *(_QWORD *)((char *)v202 + v209[14]);
              (*(void (**)(_OWORD *, _QWORD, uint64_t))(v205 + 56))(v141, 0, 1);
            }
            v178 = v139[13];
            v179 = (_OWORD *)(v9 + v178);
            v180 = &v10[v178];
            v181 = type metadata accessor for WebEmbedDataVisualization();
            v182 = *(_QWORD *)(v181 - 8);
            a3 = v234;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v180, 1, v181))
            {
              sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *v179 = *(_OWORD *)v180;
                v184 = type metadata accessor for GenericDataVisualization();
                __dstc((char *)v179 + *(int *)(v184 + 20), &v180[*(int *)(v184 + 20)], (uint64_t)v213);
                v185 = *(int *)(v184 + 24);
                a3 = v234;
                *(_QWORD *)((char *)v179 + v185) = *(_QWORD *)&v180[v185];
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v179, v180, *(_QWORD *)(v182 + 64));
              }
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
            }
            *(_BYTE *)(v9 + v229[14]) = v10[v229[14]];
            goto LABEL_98;
          case 0xBu:
            v122 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *(_QWORD *)(v9 + 8) = v122;
            *(_BYTE *)(v9 + 16) = v10[16];
            *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
            *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
            v123 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            *(_QWORD *)(v9 + v123) = *(_QWORD *)&v10[v123];
            type metadata accessor for PuzzleStatistic();
            type metadata accessor for PuzzleStatisticCategory(0);
            v124 = (char *)&loc_1BB09641C + 4 * word_1BB8E81FC[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
            return result;
          case 0xCu:
            *(_OWORD *)v9 = *(_OWORD *)v10;
            v125 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            v126 = v9 + v125;
            v127 = &v10[v125];
            v128 = sub_1BB871E24();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v126, v127, v128);
LABEL_98:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v52 = (char *)&loc_1BB095628 + 4 * word_1BB8E81D0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Au:
        v53 = sub_1BB8714E8();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v9, v10, v53);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v18 = *(_QWORD *)(v12 + 64);
        goto LABEL_7;
    }
  }
LABEL_92:
  v186 = *(int *)(a3 + 28);
  v187 = (uint64_t)a1 + v186;
  v188 = (char *)a2 + v186;
  if (*((unsigned __int8 *)a1 + v186 + 16) != 255)
  {
    v189 = v188[16];
    if (v189 != 255)
    {
      *(_OWORD *)v187 = *(_OWORD *)v188;
      *(_BYTE *)(v187 + 16) = v189 & 1;
      sub_1BAA49EA8();
      return a1;
    }
    sub_1BB0934E8(v187);
  }
  *(_OWORD *)v187 = *(_OWORD *)v188;
  *(_BYTE *)(v187 + 16) = v188[16];
  return a1;
}

uint64_t sub_1BB098574()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB098580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_1BB098620()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB09862C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FormatInspectionItem(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2BA818);
}

void sub_1BB0986CC()
{
  unint64_t v0;

  sub_1BA4B07F0(319, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for FormatInspectionItemWatching()
{
  return &type metadata for FormatInspectionItemWatching;
}

char *sub_1BB098770(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for FormatFile();
      v10 = (char *)&loc_1BB098838 + 4 * word_1BB8E8430[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload != 1)
    {
      type metadata accessor for FormatFile();
      v11 = (char *)&loc_1BB0989A0 + 4 * word_1BB8E8448[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v7 = *a2;
    v8 = v7;
    *(_QWORD *)a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BB09A2B8(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for FormatContent(0);
          v10 = a1 + *(int *)(v9 + 20);
          v11 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = a1 + *(int *)(v9 + 40);
          v13 = sub_1BB871E24();
          v14 = *(_QWORD *)(v13 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
          goto LABEL_67;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned __int8 *)(a1 + 106) != 255)
          {
            v36 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
            sub_1BA77A170(*(_QWORD *)(a1 + 96), v36, SBYTE2(v36), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          }
          break;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 72) >= 3uLL)
            swift_bridgeObjectRelease();
          goto LABEL_67;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_68;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_68;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 168) >= 3uLL)
            swift_bridgeObjectRelease();
          v37 = (int *)type metadata accessor for FormatPackage();
          v38 = a1 + v37[23];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39 = type metadata accessor for FormatCompilerOptions(0);
          v40 = v38 + *(int *)(v39 + 24);
          if (*(_QWORD *)(v40 + 8) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v41 = v40 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          v42 = sub_1BB86E710();
          v43 = *(_QWORD *)(v42 - 8);
          v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
          if (!v44(v41, 1, v42))
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
          v45 = v38 + *(int *)(v39 + 28);
          if (!v44(v45, 1, v42))
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v42);
          swift_bridgeObjectRelease();
          v46 = a1 + v37[24];
          v47 = sub_1BB86EB84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
          v48 = a1 + v37[25];
          if (!v44(v48, 1, v42))
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v48, v42);
          break;
        case 6u:
          swift_bridgeObjectRelease();
          goto LABEL_68;
        case 7u:
          swift_release();
          break;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_68;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_68;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
          break;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v49 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
          swift_bridgeObjectRelease();
          v50 = type metadata accessor for FormatContent(0);
          v51 = v49 + *(int *)(v50 + 20);
          v52 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v53 = v49 + *(int *)(v50 + 40);
          v54 = sub_1BB871E24();
          v55 = *(_QWORD *)(v54 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
LABEL_67:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_68:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      sub_1BAF05E00();
      v15 = *(void **)(a1 + *(int *)(v56 + 48));
      goto LABEL_70;
    case 1:
      v15 = *(void **)a1;
LABEL_70:

      return;
    case 0:
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v3 = type metadata accessor for FormatContent(0);
          v4 = a1 + *(int *)(v3 + 20);
          v5 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = a1 + *(int *)(v3 + 40);
          v7 = sub_1BB871E24();
          v8 = *(_QWORD *)(v7 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
            (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
          goto LABEL_39;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned __int8 *)(a1 + 106) != 255)
          {
            v16 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
            sub_1BA77A170(*(_QWORD *)(a1 + 96), v16, SBYTE2(v16), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          }
          return;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 72) >= 3uLL)
            swift_bridgeObjectRelease();
          goto LABEL_39;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 168) >= 3uLL)
            swift_bridgeObjectRelease();
          v17 = (int *)type metadata accessor for FormatPackage();
          v18 = a1 + v17[23];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v19 = type metadata accessor for FormatCompilerOptions(0);
          v20 = v18 + *(int *)(v19 + 24);
          if (*(_QWORD *)(v20 + 8) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v21 = v20 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          v22 = sub_1BB86E710();
          v23 = *(_QWORD *)(v22 - 8);
          v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
          if (!v24(v21, 1, v22))
            (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
          v25 = v18 + *(int *)(v19 + 28);
          if (!v24(v25, 1, v22))
            (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
          swift_bridgeObjectRelease();
          v26 = a1 + v17[24];
          v27 = sub_1BB86EB84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
          v28 = a1 + v17[25];
          if (!v24(v28, 1, v22))
            (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v22);
          return;
        case 6u:
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 7u:
          swift_release();
          return;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
          return;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
          swift_bridgeObjectRelease();
          v30 = type metadata accessor for FormatContent(0);
          v31 = v29 + *(int *)(v30 + 20);
          v32 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = v29 + *(int *)(v30 + 40);
          v34 = sub_1BB871E24();
          v35 = *(_QWORD *)(v34 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
            (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_40:
          swift_bridgeObjectRelease();
          break;
        default:
          return;
      }
      break;
  }
}

_QWORD *sub_1BB09B010(_QWORD *a1, id *a2)
{
  int EnumCaseMultiPayload;
  id v5;
  id v6;
  char *v7;
  char *v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for FormatFile();
    v7 = (char *)&loc_1BB09B0AC + 4 * word_1BB8E8490[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload != 1)
  {
    type metadata accessor for FormatFile();
    v8 = (char *)&loc_1BB09B20C + 4 * word_1BB8E84A8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = *a2;
  v6 = *a2;
  *a1 = v5;
  swift_storeEnumTagMultiPayload();
  return a1;
}

id *sub_1BB09CADC(id *a1, id *a2)
{
  int EnumCaseMultiPayload;
  id v5;
  id v6;
  char *v7;
  char *v8;

  if (a1 != a2)
  {
    sub_1BB09E998((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for FormatFile();
      v7 = (char *)&loc_1BB09CB88 + 4 * word_1BB8E84C0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload != 1)
    {
      type metadata accessor for FormatFile();
      v8 = (char *)&loc_1BB09CD10 + 4 * word_1BB8E84D8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v5 = *a2;
    v6 = *a2;
    *a1 = v5;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB09E998(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatCompilerResultOutput()
{
  uint64_t result;

  result = qword_1EF2BA8C8;
  if (!qword_1EF2BA8C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB09EA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  const void *v100;
  uint64_t v101;
  uint64_t v102;
  const void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  const void *v110;
  uint64_t v111;
  const void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  const void *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v123)(const void *, uint64_t, uint64_t);
  unsigned int (*v124)(const void *, uint64_t, uint64_t);
  int *v125;
  int *v126;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v20 = type metadata accessor for FormatFile();
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 11)
    {
      v63 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v63;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v64 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v65 = a1 + v64;
      v66 = a2 + v64;
      *(_OWORD *)(a1 + v64) = *(_OWORD *)(a2 + v64);
      v67 = (int *)type metadata accessor for FormatContent(0);
      v68 = v67[5];
      v69 = v65 + v68;
      v70 = v66 + v68;
      v71 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
      *(_OWORD *)(v65 + v67[6]) = *(_OWORD *)(v66 + v67[6]);
      *(_OWORD *)(v65 + v67[7]) = *(_OWORD *)(v66 + v67[7]);
      *(_OWORD *)(v65 + v67[8]) = *(_OWORD *)(v66 + v67[8]);
      *(_OWORD *)(v65 + v67[9]) = *(_OWORD *)(v66 + v67[9]);
      v72 = v67[10];
      v73 = (void *)(v65 + v72);
      v74 = (const void *)(v66 + v72);
      v75 = sub_1BB871E24();
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_QWORD *)(v65 + v67[11]) = *(_QWORD *)(v66 + v67[11]);
      *(_QWORD *)(v65 + v67[12]) = *(_QWORD *)(v66 + v67[12]);
      *(_QWORD *)(v65 + v67[13]) = *(_QWORD *)(v66 + v67[13]);
      *(_QWORD *)(v65 + v67[14]) = *(_QWORD *)(v66 + v67[14]);
      *(_QWORD *)(v65 + v67[15]) = *(_QWORD *)(v66 + v67[15]);
      *(_QWORD *)(v65 + v67[16]) = *(_QWORD *)(v66 + v67[16]);
      *(_QWORD *)(v65 + v67[17]) = *(_QWORD *)(v66 + v67[17]);
    }
    else if (v21 == 5)
    {
      v78 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v78;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      v126 = (int *)type metadata accessor for FormatPackage();
      v79 = v126[23];
      v80 = a1 + v79;
      v81 = a2 + v79;
      *(_OWORD *)(a1 + v79) = *(_OWORD *)(a2 + v79);
      v82 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v83 = v82[6];
      v84 = (_OWORD *)(v80 + v83);
      v85 = v81 + v83;
      v86 = *(_OWORD *)(v81 + v83 + 16);
      *v84 = *(_OWORD *)(v81 + v83);
      v84[1] = v86;
      v84[2] = *(_OWORD *)(v81 + v83 + 32);
      v87 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v88 = (char *)v84 + v87;
      v89 = (const void *)(v85 + v87);
      v90 = sub_1BB86E710();
      v91 = *(_QWORD *)(v90 - 8);
      v124 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48);
      if (v124(v89, 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v91 + 32))(v88, v89, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
      v98 = v82[7];
      v99 = (void *)(v80 + v98);
      v100 = (const void *)(v81 + v98);
      if (v124((const void *)(v81 + v98), 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        v102 = v91;
      }
      else
      {
        v112 = v100;
        v102 = v91;
        (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v99, v112, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v99, 0, 1, v90);
      }
      *(_QWORD *)(v80 + v82[8]) = *(_QWORD *)(v81 + v82[8]);
      v113 = v126[24];
      v114 = a1 + v113;
      v115 = a2 + v113;
      v116 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      v117 = v126[25];
      v118 = (void *)(a1 + v117);
      v119 = (const void *)(a2 + v117);
      if (v124((const void *)(a2 + v117), 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v102 + 32))(v118, v119, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v118, 0, 1, v90);
      }
    }
    else
    {
      if (v21)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_48:
        sub_1BAF05E00();
        *(_QWORD *)(a1 + *(int *)(v121 + 48)) = *(_QWORD *)(a2 + *(int *)(v121 + 48));
        goto LABEL_49;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v22 = (int *)type metadata accessor for FormatContent(0);
      v23 = v22[5];
      v24 = a1 + v23;
      v25 = a2 + v23;
      v26 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)(a1 + v22[6]) = *(_OWORD *)(a2 + v22[6]);
      *(_OWORD *)(a1 + v22[7]) = *(_OWORD *)(a2 + v22[7]);
      *(_OWORD *)(a1 + v22[8]) = *(_OWORD *)(a2 + v22[8]);
      *(_OWORD *)(a1 + v22[9]) = *(_OWORD *)(a2 + v22[9]);
      v27 = v22[10];
      v28 = (void *)(a1 + v27);
      v29 = (const void *)(a2 + v27);
      v30 = sub_1BB871E24();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(_QWORD *)(a1 + v22[11]) = *(_QWORD *)(a2 + v22[11]);
      *(_QWORD *)(a1 + v22[12]) = *(_QWORD *)(a2 + v22[12]);
      *(_QWORD *)(a1 + v22[13]) = *(_QWORD *)(a2 + v22[13]);
      *(_QWORD *)(a1 + v22[14]) = *(_QWORD *)(a2 + v22[14]);
      *(_QWORD *)(a1 + v22[15]) = *(_QWORD *)(a2 + v22[15]);
      *(_QWORD *)(a1 + v22[16]) = *(_QWORD *)(a2 + v22[16]);
      *(_QWORD *)(a1 + v22[17]) = *(_QWORD *)(a2 + v22[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_48;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for FormatFile();
    v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 11)
    {
      v33 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v33;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v34 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v35 = a1 + v34;
      v36 = a2 + v34;
      *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
      v37 = (int *)type metadata accessor for FormatContent(0);
      v38 = v37[5];
      v39 = v35 + v38;
      v40 = v36 + v38;
      v41 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      *(_OWORD *)(v35 + v37[6]) = *(_OWORD *)(v36 + v37[6]);
      *(_OWORD *)(v35 + v37[7]) = *(_OWORD *)(v36 + v37[7]);
      *(_OWORD *)(v35 + v37[8]) = *(_OWORD *)(v36 + v37[8]);
      *(_OWORD *)(v35 + v37[9]) = *(_OWORD *)(v36 + v37[9]);
      v42 = v37[10];
      v43 = (void *)(v35 + v42);
      v44 = (const void *)(v36 + v42);
      v45 = sub_1BB871E24();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(_QWORD *)(v35 + v37[11]) = *(_QWORD *)(v36 + v37[11]);
      *(_QWORD *)(v35 + v37[12]) = *(_QWORD *)(v36 + v37[12]);
      *(_QWORD *)(v35 + v37[13]) = *(_QWORD *)(v36 + v37[13]);
      *(_QWORD *)(v35 + v37[14]) = *(_QWORD *)(v36 + v37[14]);
      *(_QWORD *)(v35 + v37[15]) = *(_QWORD *)(v36 + v37[15]);
      *(_QWORD *)(v35 + v37[16]) = *(_QWORD *)(v36 + v37[16]);
      *(_QWORD *)(v35 + v37[17]) = *(_QWORD *)(v36 + v37[17]);
    }
    else if (v8 == 5)
    {
      v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      v125 = (int *)type metadata accessor for FormatPackage();
      v49 = v125[23];
      v50 = a1 + v49;
      v51 = a2 + v49;
      *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
      v52 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v53 = v52[6];
      v54 = (_OWORD *)(v50 + v53);
      v55 = v51 + v53;
      v56 = *(_OWORD *)(v51 + v53 + 16);
      *v54 = *(_OWORD *)(v51 + v53);
      v54[1] = v56;
      v54[2] = *(_OWORD *)(v51 + v53 + 32);
      v57 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v58 = (char *)v54 + v57;
      v59 = (const void *)(v55 + v57);
      v60 = sub_1BB86E710();
      v61 = *(_QWORD *)(v60 - 8);
      v123 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
      if (v123(v59, 1, v60))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v61 + 32))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      v93 = v52[7];
      v94 = (void *)(v50 + v93);
      v95 = (const void *)(v51 + v93);
      if (v123((const void *)(v51 + v93), 1, v60))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        v97 = v61;
      }
      else
      {
        v103 = v95;
        v97 = v61;
        (*(void (**)(void *, const void *, uint64_t))(v61 + 32))(v94, v103, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v94, 0, 1, v60);
      }
      *(_QWORD *)(v50 + v52[8]) = *(_QWORD *)(v51 + v52[8]);
      v104 = v125[24];
      v105 = a1 + v104;
      v106 = a2 + v104;
      v107 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
      v108 = v125[25];
      v109 = (void *)(a1 + v108);
      v110 = (const void *)(a2 + v108);
      if (v123(v110, 1, v60))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v109, v110, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v109, 0, 1, v60);
      }
    }
    else
    {
      if (v8)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_49:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = (int *)type metadata accessor for FormatContent(0);
      v10 = v9[5];
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)(a1 + v9[6]) = *(_OWORD *)(a2 + v9[6]);
      *(_OWORD *)(a1 + v9[7]) = *(_OWORD *)(a2 + v9[7]);
      *(_OWORD *)(a1 + v9[8]) = *(_OWORD *)(a2 + v9[8]);
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      v14 = v9[10];
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      v17 = sub_1BB871E24();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(_QWORD *)(a1 + v9[11]) = *(_QWORD *)(a2 + v9[11]);
      *(_QWORD *)(a1 + v9[12]) = *(_QWORD *)(a2 + v9[12]);
      *(_QWORD *)(a1 + v9[13]) = *(_QWORD *)(a2 + v9[13]);
      *(_QWORD *)(a1 + v9[14]) = *(_QWORD *)(a2 + v9[14]);
      *(_QWORD *)(a1 + v9[15]) = *(_QWORD *)(a2 + v9[15]);
      *(_QWORD *)(a1 + v9[16]) = *(_QWORD *)(a2 + v9[16]);
      *(_QWORD *)(a1 + v9[17]) = *(_QWORD *)(a2 + v9[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_49;
  }
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1BB09F65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  const void *v100;
  uint64_t v101;
  uint64_t v102;
  const void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  const void *v110;
  uint64_t v111;
  const void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  const void *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v123)(const void *, uint64_t, uint64_t);
  unsigned int (*v124)(const void *, uint64_t, uint64_t);
  int *v125;
  int *v126;

  if (a1 == a2)
    return a1;
  sub_1BB09E998(a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v20 = type metadata accessor for FormatFile();
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 11)
    {
      v63 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v63;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v64 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v65 = a1 + v64;
      v66 = a2 + v64;
      *(_OWORD *)(a1 + v64) = *(_OWORD *)(a2 + v64);
      v67 = (int *)type metadata accessor for FormatContent(0);
      v68 = v67[5];
      v69 = v65 + v68;
      v70 = v66 + v68;
      v71 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
      *(_OWORD *)(v65 + v67[6]) = *(_OWORD *)(v66 + v67[6]);
      *(_OWORD *)(v65 + v67[7]) = *(_OWORD *)(v66 + v67[7]);
      *(_OWORD *)(v65 + v67[8]) = *(_OWORD *)(v66 + v67[8]);
      *(_OWORD *)(v65 + v67[9]) = *(_OWORD *)(v66 + v67[9]);
      v72 = v67[10];
      v73 = (void *)(v65 + v72);
      v74 = (const void *)(v66 + v72);
      v75 = sub_1BB871E24();
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_QWORD *)(v65 + v67[11]) = *(_QWORD *)(v66 + v67[11]);
      *(_QWORD *)(v65 + v67[12]) = *(_QWORD *)(v66 + v67[12]);
      *(_QWORD *)(v65 + v67[13]) = *(_QWORD *)(v66 + v67[13]);
      *(_QWORD *)(v65 + v67[14]) = *(_QWORD *)(v66 + v67[14]);
      *(_QWORD *)(v65 + v67[15]) = *(_QWORD *)(v66 + v67[15]);
      *(_QWORD *)(v65 + v67[16]) = *(_QWORD *)(v66 + v67[16]);
      *(_QWORD *)(v65 + v67[17]) = *(_QWORD *)(v66 + v67[17]);
    }
    else if (v21 == 5)
    {
      v78 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v78;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      v126 = (int *)type metadata accessor for FormatPackage();
      v79 = v126[23];
      v80 = a1 + v79;
      v81 = a2 + v79;
      *(_OWORD *)(a1 + v79) = *(_OWORD *)(a2 + v79);
      v82 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v83 = v82[6];
      v84 = (_OWORD *)(v80 + v83);
      v85 = v81 + v83;
      v86 = *(_OWORD *)(v81 + v83 + 16);
      *v84 = *(_OWORD *)(v81 + v83);
      v84[1] = v86;
      v84[2] = *(_OWORD *)(v81 + v83 + 32);
      v87 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v88 = (char *)v84 + v87;
      v89 = (const void *)(v85 + v87);
      v90 = sub_1BB86E710();
      v91 = *(_QWORD *)(v90 - 8);
      v124 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48);
      if (v124(v89, 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v91 + 32))(v88, v89, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
      v98 = v82[7];
      v99 = (void *)(v80 + v98);
      v100 = (const void *)(v81 + v98);
      if (v124((const void *)(v81 + v98), 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        v102 = v91;
      }
      else
      {
        v112 = v100;
        v102 = v91;
        (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v99, v112, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v99, 0, 1, v90);
      }
      *(_QWORD *)(v80 + v82[8]) = *(_QWORD *)(v81 + v82[8]);
      v113 = v126[24];
      v114 = a1 + v113;
      v115 = a2 + v113;
      v116 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      v117 = v126[25];
      v118 = (void *)(a1 + v117);
      v119 = (const void *)(a2 + v117);
      if (v124((const void *)(a2 + v117), 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v102 + 32))(v118, v119, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v118, 0, 1, v90);
      }
    }
    else
    {
      if (v21)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_49:
        sub_1BAF05E00();
        *(_QWORD *)(a1 + *(int *)(v121 + 48)) = *(_QWORD *)(a2 + *(int *)(v121 + 48));
        goto LABEL_50;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v22 = (int *)type metadata accessor for FormatContent(0);
      v23 = v22[5];
      v24 = a1 + v23;
      v25 = a2 + v23;
      v26 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)(a1 + v22[6]) = *(_OWORD *)(a2 + v22[6]);
      *(_OWORD *)(a1 + v22[7]) = *(_OWORD *)(a2 + v22[7]);
      *(_OWORD *)(a1 + v22[8]) = *(_OWORD *)(a2 + v22[8]);
      *(_OWORD *)(a1 + v22[9]) = *(_OWORD *)(a2 + v22[9]);
      v27 = v22[10];
      v28 = (void *)(a1 + v27);
      v29 = (const void *)(a2 + v27);
      v30 = sub_1BB871E24();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(_QWORD *)(a1 + v22[11]) = *(_QWORD *)(a2 + v22[11]);
      *(_QWORD *)(a1 + v22[12]) = *(_QWORD *)(a2 + v22[12]);
      *(_QWORD *)(a1 + v22[13]) = *(_QWORD *)(a2 + v22[13]);
      *(_QWORD *)(a1 + v22[14]) = *(_QWORD *)(a2 + v22[14]);
      *(_QWORD *)(a1 + v22[15]) = *(_QWORD *)(a2 + v22[15]);
      *(_QWORD *)(a1 + v22[16]) = *(_QWORD *)(a2 + v22[16]);
      *(_QWORD *)(a1 + v22[17]) = *(_QWORD *)(a2 + v22[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_49;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for FormatFile();
    v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 11)
    {
      v33 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v33;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v34 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v35 = a1 + v34;
      v36 = a2 + v34;
      *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
      v37 = (int *)type metadata accessor for FormatContent(0);
      v38 = v37[5];
      v39 = v35 + v38;
      v40 = v36 + v38;
      v41 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      *(_OWORD *)(v35 + v37[6]) = *(_OWORD *)(v36 + v37[6]);
      *(_OWORD *)(v35 + v37[7]) = *(_OWORD *)(v36 + v37[7]);
      *(_OWORD *)(v35 + v37[8]) = *(_OWORD *)(v36 + v37[8]);
      *(_OWORD *)(v35 + v37[9]) = *(_OWORD *)(v36 + v37[9]);
      v42 = v37[10];
      v43 = (void *)(v35 + v42);
      v44 = (const void *)(v36 + v42);
      v45 = sub_1BB871E24();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(_QWORD *)(v35 + v37[11]) = *(_QWORD *)(v36 + v37[11]);
      *(_QWORD *)(v35 + v37[12]) = *(_QWORD *)(v36 + v37[12]);
      *(_QWORD *)(v35 + v37[13]) = *(_QWORD *)(v36 + v37[13]);
      *(_QWORD *)(v35 + v37[14]) = *(_QWORD *)(v36 + v37[14]);
      *(_QWORD *)(v35 + v37[15]) = *(_QWORD *)(v36 + v37[15]);
      *(_QWORD *)(v35 + v37[16]) = *(_QWORD *)(v36 + v37[16]);
      *(_QWORD *)(v35 + v37[17]) = *(_QWORD *)(v36 + v37[17]);
    }
    else if (v8 == 5)
    {
      v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      v125 = (int *)type metadata accessor for FormatPackage();
      v49 = v125[23];
      v50 = a1 + v49;
      v51 = a2 + v49;
      *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
      v52 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v53 = v52[6];
      v54 = (_OWORD *)(v50 + v53);
      v55 = v51 + v53;
      v56 = *(_OWORD *)(v51 + v53 + 16);
      *v54 = *(_OWORD *)(v51 + v53);
      v54[1] = v56;
      v54[2] = *(_OWORD *)(v51 + v53 + 32);
      v57 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v58 = (char *)v54 + v57;
      v59 = (const void *)(v55 + v57);
      v60 = sub_1BB86E710();
      v61 = *(_QWORD *)(v60 - 8);
      v123 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
      if (v123(v59, 1, v60))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v61 + 32))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      v93 = v52[7];
      v94 = (void *)(v50 + v93);
      v95 = (const void *)(v51 + v93);
      if (v123((const void *)(v51 + v93), 1, v60))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        v97 = v61;
      }
      else
      {
        v103 = v95;
        v97 = v61;
        (*(void (**)(void *, const void *, uint64_t))(v61 + 32))(v94, v103, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v94, 0, 1, v60);
      }
      *(_QWORD *)(v50 + v52[8]) = *(_QWORD *)(v51 + v52[8]);
      v104 = v125[24];
      v105 = a1 + v104;
      v106 = a2 + v104;
      v107 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
      v108 = v125[25];
      v109 = (void *)(a1 + v108);
      v110 = (const void *)(a2 + v108);
      if (v123(v110, 1, v60))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v109, v110, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v109, 0, 1, v60);
      }
    }
    else
    {
      if (v8)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_50:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = (int *)type metadata accessor for FormatContent(0);
      v10 = v9[5];
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)(a1 + v9[6]) = *(_OWORD *)(a2 + v9[6]);
      *(_OWORD *)(a1 + v9[7]) = *(_OWORD *)(a2 + v9[7]);
      *(_OWORD *)(a1 + v9[8]) = *(_OWORD *)(a2 + v9[8]);
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      v14 = v9[10];
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      v17 = sub_1BB871E24();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(_QWORD *)(a1 + v9[11]) = *(_QWORD *)(a2 + v9[11]);
      *(_QWORD *)(a1 + v9[12]) = *(_QWORD *)(a2 + v9[12]);
      *(_QWORD *)(a1 + v9[13]) = *(_QWORD *)(a2 + v9[13]);
      *(_QWORD *)(a1 + v9[14]) = *(_QWORD *)(a2 + v9[14]);
      *(_QWORD *)(a1 + v9[15]) = *(_QWORD *)(a2 + v9[15]);
      *(_QWORD *)(a1 + v9[16]) = *(_QWORD *)(a2 + v9[16]);
      *(_QWORD *)(a1 + v9[17]) = *(_QWORD *)(a2 + v9[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1BB0A02B8()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  uint64_t v3;
  const char *v4;
  char *v5;

  result = type metadata accessor for FormatFile();
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    v4 = "\b";
    swift_getTupleTypeLayout2();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FeedGroupRepresentable.feedGroupItems.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BB0A0340(_BYTE *a1@<X8>)
{
  FeedGroupRepresentable.layoutOrder.getter(a1);
}

void FeedGroupRepresentable.layoutOrder.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

double sub_1BB0A035C@<D0>(uint64_t a1@<X8>)
{
  return FeedGroupRepresentable.feedGroupDebug.getter(a1);
}

double FeedGroupRepresentable.feedGroupDebug.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t FeedGroupRepresentable.feedSelectors.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.layoutOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupContextIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedSlots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupBindingOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t *sub_1BB0A03D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACCA574();
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      sub_1BA75C00C();
      v12 = v11;
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_retain();
      v13(v9, v10, v12);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB0A04C4(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACCA574();
    v5 = a1 + *(int *)(v4 + 48);
    sub_1BA75C00C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

_QWORD *sub_1BB0A052C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACCA574();
    v6 = *(int *)(v5 + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BA75C00C();
    v10 = v9;
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v11(v7, v8, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB0A05E8(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BB0A06B4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACCA574();
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      sub_1BA75C00C();
      v10 = v9;
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_retain();
      v11(v7, v8, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB0A06B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1BB0A06F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1BACCA574();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BA75C00C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BB0A0798(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BB0A06B4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BACCA574();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      sub_1BA75C00C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_QWORD *sub_1BB0A0850(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v5 = *(int *)(a3 + 24);
    v6 = (_QWORD *)(a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    swift_retain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACCA574();
      v10 = *(int *)(v9 + 48);
      v11 = (char *)v6 + v10;
      v12 = (char *)v7 + v10;
      sub_1BA75C00C();
      v14 = v13;
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_retain();
      v15(v11, v12, v14);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1BB0A0984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if ((_DWORD)a1 == 1)
  {
    sub_1BACCA574();
    v7 = v4 + *(int *)(v6 + 48);
    sub_1BA75C00C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  return result;
}

uint64_t sub_1BB0A0A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  swift_retain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v5 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACCA574();
    v9 = *(int *)(v8 + 48);
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    sub_1BA75C00C();
    v13 = v12;
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    v14(v10, v11, v13);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB0A0B20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1BB0A06B4((uint64_t)a1 + v6);
    type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BACCA574();
      v11 = *(int *)(v10 + 48);
      v12 = (char *)v7 + v11;
      v13 = (char *)v8 + v11;
      sub_1BA75C00C();
      v15 = v14;
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_retain();
      v16(v12, v13, v15);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB0A0C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v5 = *v6;
    sub_1BACCA574();
    v9 = *(int *)(v8 + 48);
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    sub_1BA75C00C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BB0A0D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_1BB0A06B4(a1 + v7);
    v10 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v8 = *v9;
      sub_1BACCA574();
      v12 = *(int *)(v11 + 48);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      sub_1BA75C00C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB0A0E3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0A0E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BB0A0EC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB0A0ED0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB0A0F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BACCA530(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BACCA574();
    v6 = &v4[*(int *)(v5 + 48)];
    sub_1BB86DD80();
    swift_release();
    v7 = v11;
    sub_1BA75C00C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_1BB86DD80();
    swift_release();
    return v11;
  }
  return v7;
}

uint64_t sub_1BB0A1040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BACCA530(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *v3;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BACCA574();
    v7 = (char *)v3 + *(int *)(v6 + 48);
    v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    sub_1BA75C00C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v8;
}

__n128 FormatRadialGradientCircle.center.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

__n128 FormatRadialGradientCircle.radius.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 48);
  result = *(__n128 *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_1BB0A1174@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRadialGradientCircle.init(from:)(a1, a2);
}

uint64_t sub_1BB0A1188(_QWORD *a1)
{
  return FormatRadialGradientCircle.encode(to:)(a1);
}

BOOL _s8NewsFeed26FormatRadialGradientCircleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  BOOL v6;
  BOOL v7;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v4 = *(double *)(a1 + 16);
  v5 = *(double *)(a2 + 16);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) == 0)
      return 0;
    v6 = v4 == v5 && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    v7 = v6 && *(double *)(a1 + 32) == *(double *)(a2 + 32);
    return v7 && *(double *)(a1 + 40) == *(double *)(a2 + 40);
  }
  else
  {
    return (*(_BYTE *)(a2 + 48) & 1) == 0 && v4 == v5;
  }
}

unint64_t sub_1BB0A1224(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0A1248();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0A1248()
{
  unint64_t result;

  result = qword_1EF2BA900;
  if (!qword_1EF2BA900)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircle, &type metadata for FormatRadialGradientCircle);
    atomic_store(result, (unint64_t *)&qword_1EF2BA900);
  }
  return result;
}

unint64_t sub_1BB0A128C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEB3188();
  a1[2] = sub_1BAEED1DC();
  result = sub_1BB0A12C0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0A12C0()
{
  unint64_t result;

  result = qword_1EF2BA908;
  if (!qword_1EF2BA908)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircle, &type metadata for FormatRadialGradientCircle);
    atomic_store(result, (unint64_t *)&qword_1EF2BA908);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatRadialGradientCircle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatRadialGradientCircle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatRadialGradientCircle()
{
  return &type metadata for FormatRadialGradientCircle;
}

_QWORD *sub_1BB0A13B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  _QWORD v25[4];
  char v26;
  _OWORD v27[2];
  uint64_t v28;

  v2 = *(_QWORD *)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v7);
  sub_1BA8C88C8(0);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
  v13 = (uint64_t *)(v12 + v11);
  if (v6 == 255)
    v14 = 0;
  else
    v14 = v2;
  if (v6 == 255)
    v15 = 0;
  else
    v15 = v1;
  sub_1BAAFBBF4(0x7265746E6543, 0xE600000000000000, v14, v15, v6 == 255, v13);
  v16 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 0, 1, v16);
  sub_1BAF89090(0x656C63726943, 0xE600000000000000, 0, 0, v12, v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(v17 + 48) = v28;
  v18 = v27[1];
  *(_OWORD *)(v17 + 16) = v27[0];
  *(_OWORD *)(v17 + 32) = v18;
  if (v6 == 255)
  {
    v19 = 0;
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v20 = -1;
  }
  else
  {
    v20 = v6 & 1;
    v19 = v24;
  }
  v25[0] = v19;
  v25[1] = v3;
  v25[2] = v4;
  v25[3] = v5;
  v26 = v20;
  v21 = sub_1BAB65D04((uint64_t)v25);
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 104) = &off_1E7335C38;
  *(_QWORD *)(inited + 72) = v21;
  v22 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v22;
}

uint64_t sub_1BB0A1608()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t FormatProgressViewNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

uint64_t FormatProgressViewNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNode.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  v6 = *(_QWORD *)(v1 + 144);
  v7 = *(_QWORD *)(v1 + 152);
  v8 = *(_QWORD *)(v1 + 160);
  v9 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(_BYTE *)(v1 + 176);
  *(_BYTE *)(a1 + 56) = v10;
  return sub_1BAEAF798(v3, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t FormatProgressViewNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 184);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatProgressViewNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 104);
}

uint64_t FormatProgressViewNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatProgressViewNode.size.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatProgressViewNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatProgressViewNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_BYTE *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_WORD *)(v1 + 96);
  *(_WORD *)(a1 + 40) = v7;
  sub_1BAC68B58(v2, v3);
  return sub_1BA856DA0(v4, v5, v6, v7);
}

uint64_t FormatProgressViewNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatProgressViewNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.style.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t FormatProgressViewNode.style.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*FormatProgressViewNode.style.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB0A1B28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 120);
  v5 = *(_QWORD *)(v3 + 128);
  v6 = *(_QWORD *)(v3 + 136);
  v7 = *(_QWORD *)(v3 + 144);
  v8 = *(_QWORD *)(v3 + 152);
  v9 = *(_QWORD *)(v3 + 160);
  v10 = *(_QWORD *)(v3 + 168);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  v11 = *(_BYTE *)(v3 + 176);
  *(_BYTE *)(a2 + 56) = v11;
  return sub_1BAEAF798(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1BB0A1B90(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *a2;
  v10 = *(_BYTE *)(a1 + 56);
  swift_beginAccess();
  v18 = *(_QWORD *)(v9 + 128);
  v19 = *(_QWORD *)(v9 + 120);
  v16 = *(_QWORD *)(v9 + 144);
  v17 = *(_QWORD *)(v9 + 136);
  v14 = *(_QWORD *)(v9 + 160);
  v15 = *(_QWORD *)(v9 + 152);
  v13 = *(_QWORD *)(v9 + 168);
  *(_QWORD *)(v9 + 120) = v2;
  *(_QWORD *)(v9 + 128) = v3;
  *(_QWORD *)(v9 + 136) = v4;
  *(_QWORD *)(v9 + 144) = v5;
  *(_QWORD *)(v9 + 152) = v6;
  *(_QWORD *)(v9 + 160) = v7;
  *(_QWORD *)(v9 + 168) = v8;
  v11 = *(_BYTE *)(v9 + 176);
  *(_BYTE *)(v9 + 176) = v10;
  sub_1BAEAF798(v2, v3, v4, v5, v6, v7, v8, v10);
  return sub_1BAC68B70(v19, v18, v17, v16, v15, v14, v13, v11);
}

uint64_t FormatProgressViewNode.kind.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;

  v2 = *a1;
  v3 = a1[3];
  v15 = *((_OWORD *)a1 + 2);
  v16 = *(_OWORD *)(a1 + 1);
  v4 = a1[6];
  v5 = *((_BYTE *)a1 + 56);
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 144);
  v10 = *(_QWORD *)(v1 + 152);
  v11 = *(_QWORD *)(v1 + 160);
  v12 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 120) = v2;
  *(_OWORD *)(v1 + 128) = v16;
  *(_QWORD *)(v1 + 144) = v3;
  *(_OWORD *)(v1 + 152) = v15;
  *(_QWORD *)(v1 + 168) = v4;
  v13 = *(_BYTE *)(v1 + 176);
  *(_BYTE *)(v1 + 176) = v5;
  return sub_1BAC68B70(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t (*FormatProgressViewNode.kind.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB0A1D58(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 184);
  *(_QWORD *)(v3 + 184) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatProgressViewNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v1 + 184) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatProgressViewNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB0A1E34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 192) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatProgressViewNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 192) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatProgressViewNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 208);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 200);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatProgressViewNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNode.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 216) = a1;
  *(_QWORD *)(v2 + 224) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.__allocating_init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t *a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;

  v21 = swift_allocObject();
  FormatProgressViewNode.init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v21;
}

uint64_t FormatProgressViewNode.init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t *a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v23;
  __int16 v24;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v17 = *a3;
  v18 = *a4;
  v19 = *a6;
  v20 = *((_BYTE *)a6 + 8);
  v23 = *((_OWORD *)a6 + 1);
  v21 = a6[4];
  v24 = *((_WORD *)a6 + 20);
  v29 = a9[1];
  v30 = *a9;
  v28 = a9[2];
  v27 = *((_QWORD *)a9 + 6);
  v31 = *((_BYTE *)a9 + 56);
  v33 = *a10;
  v35 = *a12;
  *(_QWORD *)(v14 + 112) = 0;
  v34 = *((_BYTE *)a12 + 8);
  *(_QWORD *)(v14 + 224) = 0;
  *(_QWORD *)(v14 + 216) = 0;
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v14 + 32) = v17;
  *(_QWORD *)(v14 + 40) = v18;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = v19;
  *(_BYTE *)(v14 + 64) = v20;
  *(_OWORD *)(v14 + 72) = v23;
  *(_QWORD *)(v14 + 88) = v21;
  *(_WORD *)(v14 + 96) = v24;
  swift_beginAccess();
  *(_QWORD *)(v14 + 104) = a7;
  swift_beginAccess();
  *(_QWORD *)(v14 + 112) = a8;
  swift_release();
  swift_beginAccess();
  *(_OWORD *)(v14 + 120) = v30;
  *(_OWORD *)(v14 + 136) = v29;
  *(_OWORD *)(v14 + 152) = v28;
  *(_QWORD *)(v14 + 168) = v27;
  *(_BYTE *)(v14 + 176) = v31;
  swift_beginAccess();
  *(_QWORD *)(v14 + 184) = v33;
  swift_beginAccess();
  *(_QWORD *)(v14 + 192) = a11;
  *(_QWORD *)(v14 + 200) = v35;
  *(_BYTE *)(v14 + 208) = v34;
  swift_beginAccess();
  *(_QWORD *)(v14 + 216) = a13;
  *(_QWORD *)(v14 + 224) = a14;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t FormatProgressViewNode.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_WORD *)(v0 + 96);
  sub_1BAC68B64(*(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_1BA856E2C(v1, v2, v3, v4);
  swift_release();
  sub_1BAC68B70(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatProgressViewNode.__deallocating_deinit()
{
  FormatProgressViewNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0A23C0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB0A2500(&qword_1EF2BA910, (uint64_t)&protocol conformance descriptor for FormatProgressViewNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatProgressViewNode()
{
  return objc_opt_self();
}

uint64_t sub_1BB0A2414(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB0A2500(&qword_1ED3A6EF0, (uint64_t)&protocol conformance descriptor for FormatProgressViewNode);
  a1[2] = sub_1BB0A2500(&qword_1ED3A6EE8, (uint64_t)&protocol conformance descriptor for FormatProgressViewNode);
  result = sub_1BB0A2500(&qword_1EF2BA918, (uint64_t)&protocol conformance descriptor for FormatProgressViewNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB0A2478@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEAE518(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB0A24A0(_QWORD *a1)
{
  return FormatProgressViewNode.encode(to:)(a1);
}

uint64_t sub_1BB0A24C0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed22FormatProgressViewNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB0A24CC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB0A2500(&qword_1EF2BA920, (uint64_t)&protocol conformance descriptor for FormatProgressViewNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB0A2500(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatProgressViewNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB0A253C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v36;
  char v37;
  unint64_t v38;
  _QWORD v39[6];
  uint64_t v40;

  v18 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v20 = *(_QWORD *)(a4 + 16);
  v19 = *(_QWORD *)(a4 + 24);
  v21 = *(_QWORD *)(v18 + 40);
  if (!v21)
  {
    swift_bridgeObjectRetain();
    v31 = v19;
    v32 = v20;
    v24 = *(_QWORD *)(a4 + 40);
    if (v24)
      goto LABEL_3;
LABEL_5:
    v25 = 0;
    goto LABEL_6;
  }
  v39[0] = *(_QWORD *)(v18 + 32);
  v39[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v22);
  sub_1BB872AFC(v23);
  swift_bridgeObjectRelease();
  v31 = v21;
  v32 = v39[0];
  v20 = *(_QWORD *)(a4 + 16);
  v19 = *(_QWORD *)(a4 + 24);
  v24 = *(_QWORD *)(a4 + 40);
  if (!v24)
    goto LABEL_5;
LABEL_3:
  v25 = *(_QWORD *)(v24 + 16);
  swift_retain();
LABEL_6:
  v26 = swift_allocObject();
  v40 = v25;
  sub_1BB0A29E4(a6, (uint64_t)v39);
  swift_beginAccess();
  v27 = *(_QWORD *)(a4 + 104);
  swift_beginAccess();
  v38 = *(_QWORD *)(a4 + 184);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v38);
  sub_1BB86DD80();
  v28 = v36;
  v29 = *(_BYTE *)(a4 + 208);
  v36 = *(_QWORD *)(a4 + 200);
  v37 = v29;
  type metadata accessor for FormatProgressViewLayoutAttributes();
  swift_allocObject();
  *(_QWORD *)(v26 + 16) = FormatProgressViewLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)(a1, a2, v32, v31, v20, v19, a5, &v40, a8, a9, a10, a11, (uint64_t)v39, v27, (uint64_t *)&v38, v28, &v36);
  *a7 = v26 | 0x9000000000000000;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0A2784@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BB0A27D0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = v4;
  return sub_1BA71CA6C(v4);
}

uint64_t sub_1BB0A281C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0A2868@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 104);
  return result;
}

uint64_t sub_1BB0A28AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 104) = v2;
  return result;
}

unint64_t sub_1BB0A28F4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 184);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB0A2940@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 192);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatProgressViewNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatProgressViewNode.__allocating_init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BB0A29C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0A29E4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t dispatch thunk of FeedCursorEmbeddable.feedJournal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1BB0A2A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  void (*v10)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];

  if (a2)
  {
    v10 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 24);
    swift_bridgeObjectRetain();
    v10(v18, a3, a4);
    v11 = v18[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB77E268(a1, a2, v11, a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 24))(v18, a3, a4);
    v12 = v18[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    if (!v13)
    {
      result = swift_bridgeObjectRelease();
      *a5 = 0;
      a5[1] = 0;
      a5[2] = 0;
      return result;
    }
    v14 = (_QWORD *)(v12 + 24 * v13);
    v15 = v14[2];
    v16 = v14[3];
    *a5 = v14[1];
    a5[1] = v15;
    a5[2] = v16;
    swift_bridgeObjectRetain();
    sub_1BA67035C(v15);
  }
  return swift_bridgeObjectRelease();
}

BOOL static FormatJSONOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatJSONOptions.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t sub_1BB0A2B78()
{
  sub_1BB0A3040();
  return sub_1BB874710();
}

uint64_t sub_1BB0A2BA0()
{
  sub_1BB0A3040();
  return sub_1BB87471C();
}

uint64_t sub_1BB0A2BC8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x756F53776F6C6C61;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x726F74696465;
}

uint64_t sub_1BB0A2C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0A39E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0A2C54()
{
  sub_1BB0A30C8();
  return sub_1BB874710();
}

uint64_t sub_1BB0A2C7C()
{
  sub_1BB0A30C8();
  return sub_1BB87471C();
}

uint64_t sub_1BB0A2CA4()
{
  sub_1BB0A3084();
  return sub_1BB874710();
}

uint64_t sub_1BB0A2CCC()
{
  sub_1BB0A3084();
  return sub_1BB87471C();
}

uint64_t sub_1BB0A2CF4()
{
  sub_1BB0A2FFC();
  return sub_1BB874710();
}

uint64_t sub_1BB0A2D1C()
{
  sub_1BB0A2FFC();
  return sub_1BB87471C();
}

uint64_t FormatJSONOptions.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1EF2BA928, (uint64_t (*)(void))sub_1BB0A2FFC, (uint64_t)&type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v20 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2BA938, (uint64_t (*)(void))sub_1BB0A3040, (uint64_t)&type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys, v3);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  MEMORY[0x1E0C80A78](v6);
  v22 = (char *)&v20 - v7;
  sub_1BA4CDF6C(0, &qword_1EF2BA948, (uint64_t (*)(void))sub_1BB0A3084, (uint64_t)&type metadata for FormatJSONOptions.EditorCodingKeys, v3);
  v20 = *(_QWORD *)(v8 - 8);
  v21 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  sub_1BA4CDF6C(0, &qword_1EF2BA958, (uint64_t (*)(void))sub_1BB0A30C8, (uint64_t)&type metadata for FormatJSONOptions.CodingKeys, v3);
  v12 = v11;
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - v13;
  v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0A30C8();
  sub_1BB8746C8();
  if (v15)
  {
    if (v15 == 1)
    {
      v30 = 1;
      sub_1BB0A3040();
      v16 = v22;
      sub_1BB874110();
      v18 = v23;
      v17 = v24;
    }
    else
    {
      v31 = 2;
      sub_1BB0A2FFC();
      v16 = v25;
      sub_1BB874110();
      v18 = v26;
      v17 = v27;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    v29 = 0;
    sub_1BB0A3084();
    sub_1BB874110();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
}

unint64_t sub_1BB0A2FFC()
{
  unint64_t result;

  result = qword_1EF2BA930;
  if (!qword_1EF2BA930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8CA8, &type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA930);
  }
  return result;
}

unint64_t sub_1BB0A3040()
{
  unint64_t result;

  result = qword_1EF2BA940;
  if (!qword_1EF2BA940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8C58, &type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA940);
  }
  return result;
}

unint64_t sub_1BB0A3084()
{
  unint64_t result;

  result = qword_1EF2BA950;
  if (!qword_1EF2BA950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8C08, &type metadata for FormatJSONOptions.EditorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA950);
  }
  return result;
}

unint64_t sub_1BB0A30C8()
{
  unint64_t result;

  result = qword_1EF2BA960;
  if (!qword_1EF2BA960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8BB8, &type metadata for FormatJSONOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA960);
  }
  return result;
}

uint64_t FormatJSONOptions.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t FormatJSONOptions.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;

  v36 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1EF2BA968, (uint64_t (*)(void))sub_1BB0A2FFC, (uint64_t)&type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v35 = v4;
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v30 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2BA970, (uint64_t (*)(void))sub_1BB0A3040, (uint64_t)&type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys, v3);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v30 - v7;
  sub_1BA4CDF6C(0, &qword_1EF2BA978, (uint64_t (*)(void))sub_1BB0A3084, (uint64_t)&type metadata for FormatJSONOptions.EditorCodingKeys, v3);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - v9;
  sub_1BA4CDF6C(0, &qword_1EF2BA980, (uint64_t (*)(void))sub_1BB0A30C8, (uint64_t)&type metadata for FormatJSONOptions.CodingKeys, v3);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0A30C8();
  v16 = v39;
  sub_1BB87468C();
  if (!v16)
  {
    v17 = v37;
    v18 = v38;
    v39 = v13;
    v19 = v15;
    v20 = sub_1BB8740EC();
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      v21 = *(unsigned __int8 *)(v20 + 32);
      if (*(_BYTE *)(v20 + 32))
      {
        v31 = v20;
        if (v21 == 1)
        {
          v41 = 1;
          sub_1BB0A3040();
          sub_1BB873FFC();
          v22 = v36;
          v23 = v39;
          (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v12);
          *v22 = 1;
        }
        else
        {
          v42 = 2;
          sub_1BB0A2FFC();
          sub_1BB873FFC();
          v28 = v36;
          v29 = v39;
          v37 = 0;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v35);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v12);
          *v28 = v21;
        }
      }
      else
      {
        v40 = 0;
        sub_1BB0A3084();
        sub_1BB873FFC();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v12);
        *v36 = v21;
      }
    }
    else
    {
      v24 = sub_1BB873D68();
      swift_allocError();
      v26 = v25;
      sub_1BA909FB4();
      *v26 = &type metadata for FormatJSONOptions;
      sub_1BB874008();
      sub_1BB873D38();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC450], v24);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v12);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB0A35DC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatJSONOptions.init(from:)(a1, a2);
}

uint64_t sub_1BB0A35F0(_QWORD *a1)
{
  return FormatJSONOptions.encode(to:)(a1);
}

unint64_t sub_1BB0A3608()
{
  unint64_t result;

  result = qword_1EF2BA988;
  if (!qword_1EF2BA988)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatJSONOptions, &type metadata for FormatJSONOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2BA988);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatJSONOptions()
{
  return &type metadata for FormatJSONOptions;
}

uint64_t _s8NewsFeed17FormatJSONOptionsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB0A36AC + 4 * byte_1BB8E88B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB0A36E0 + 4 * asc_1BB8E88B0[v4]))();
}

uint64_t sub_1BB0A36E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0A36E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0A36F0);
  return result;
}

uint64_t sub_1BB0A36FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0A3704);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB0A3708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0A3710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.CodingKeys()
{
  return &type metadata for FormatJSONOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.EditorCodingKeys()
{
  return &type metadata for FormatJSONOptions.EditorCodingKeys;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.AllowSourceMapsCodingKeys()
{
  return &type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys()
{
  return &type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys;
}

unint64_t sub_1BB0A3760()
{
  unint64_t result;

  result = qword_1EF2BA990;
  if (!qword_1EF2BA990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8B90, &type metadata for FormatJSONOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA990);
  }
  return result;
}

unint64_t sub_1BB0A37A8()
{
  unint64_t result;

  result = qword_1EF2BA998;
  if (!qword_1EF2BA998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8B00, &type metadata for FormatJSONOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA998);
  }
  return result;
}

unint64_t sub_1BB0A37F0()
{
  unint64_t result;

  result = qword_1EF2BA9A0;
  if (!qword_1EF2BA9A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8B28, &type metadata for FormatJSONOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9A0);
  }
  return result;
}

unint64_t sub_1BB0A3838()
{
  unint64_t result;

  result = qword_1EF2BA9A8;
  if (!qword_1EF2BA9A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8AB0, &type metadata for FormatJSONOptions.EditorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9A8);
  }
  return result;
}

unint64_t sub_1BB0A3880()
{
  unint64_t result;

  result = qword_1EF2BA9B0;
  if (!qword_1EF2BA9B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8AD8, &type metadata for FormatJSONOptions.EditorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9B0);
  }
  return result;
}

unint64_t sub_1BB0A38C8()
{
  unint64_t result;

  result = qword_1EF2BA9B8;
  if (!qword_1EF2BA9B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8A60, &type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9B8);
  }
  return result;
}

unint64_t sub_1BB0A3910()
{
  unint64_t result;

  result = qword_1EF2BA9C0;
  if (!qword_1EF2BA9C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8A88, &type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9C0);
  }
  return result;
}

unint64_t sub_1BB0A3958()
{
  unint64_t result;

  result = qword_1EF2BA9C8;
  if (!qword_1EF2BA9C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8A10, &type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9C8);
  }
  return result;
}

unint64_t sub_1BB0A39A0()
{
  unint64_t result;

  result = qword_1EF2BA9D0;
  if (!qword_1EF2BA9D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8A38, &type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9D0);
  }
  return result;
}

uint64_t sub_1BB0A39E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F74696465 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F53776F6C6C61 && a2 == 0xEF7370614D656372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB9786F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BB0A3B50(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  __int128 v24;
  __int128 v25;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v11 = *a6;
  v12 = a6[1];
  v13 = a6[2];
  v15 = a6[5];
  v14 = a6[6];
  v24 = *(_OWORD *)(a6 + 7);
  v25 = *(_OWORD *)(a6 + 3);
  v16 = a6[9];
  v17 = *((_BYTE *)a6 + 80);
  v18 = *(void **)(v10 + 64);
  v19 = (void *)sub_1BB86C58C();
  v20 = objc_msgSend(v18, sel_assetHandleForURL_lifetimeHint_, v19, 0);

  *((_QWORD *)&v33 + 1) = sub_1BA749984();
  *(_QWORD *)&v34 = sub_1BA4A2870((unint64_t *)&qword_1ED3CF8C0, (uint64_t (*)(uint64_t))sub_1BA749984, (uint64_t)&protocol conformance descriptor for FCAssetHandle);
  *(_QWORD *)&v32 = v20;
  v21 = swift_allocObject();
  sub_1BA4CECCC(&v32, v21 + 16);
  memset(v41, 0, sizeof(v41));
  LOBYTE(v42) = 1;
  *((_QWORD *)&v42 + 1) = v11;
  *(_QWORD *)&v43 = v12;
  *((_QWORD *)&v43 + 1) = v13;
  v44 = v25;
  *(_QWORD *)&v45 = v15;
  *((_QWORD *)&v45 + 1) = v14;
  v46 = v24;
  *(_QWORD *)&v47 = v16;
  BYTE8(v47) = v17;
  *(_QWORD *)&v48 = sub_1BAF33864;
  *((_QWORD *)&v48 + 1) = v21;
  v38 = v24;
  v39 = v47;
  v40 = v48;
  v34 = v42;
  v35 = v43;
  v36 = v25;
  v37 = v45;
  v32 = 0u;
  v33 = 0u;
  swift_bridgeObjectRetain();
  v22 = v20;
  sub_1BA678F10(a1, a2, (uint64_t)&v32, a4, a5, a7, a8, a9, a10);

  return sub_1BB0A41A0((uint64_t)v41);
}

uint64_t FormatImageRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatImageRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatImageRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB0A3D84(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  uint64_t v28;
  char v29;

  if (a3)
  {
    objc_msgSend(a1, sel_setContentMode_, qword_1BB8E8D90[*(char *)(a3 + 88)]);
    if ((~*(_QWORD *)(a3 + 224) & 0xF000000000000007) != 0)
    {
      v27 = *(_QWORD *)(a3 + 224);
      FormatColor.color.getter();
      v9 = v13;
    }
    else
    {
      v9 = 0;
    }
    sub_1BB873714();

    v10 = *(_QWORD *)(a3 + 96);
    v11 = *(_QWORD *)(a3 + 104);
    v12 = *(_BYTE *)(a3 + 112);
    sub_1BA6E6C54(v10, v11, v12);
  }
  else
  {
    objc_msgSend(a1, sel_setContentMode_, 4);
    sub_1BB873714();
    v10 = 0;
    v11 = 0;
    v12 = -2;
  }
  v14 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  v27 = v10;
  v28 = v11;
  v29 = v12;
  sub_1BA6787C4(v14, (uint64_t)&v27, v15, v16, v17, v18);

  v19 = *(_QWORD *)(a2 + 136);
  if (a3)
  {
    v20 = *(_QWORD *)(a3 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = 0;
  }
  v21 = objc_msgSend(a1, sel_layer);
  v27 = v10;
  v28 = v11;
  v29 = v12;
  sub_1BA67832C(v19, v21, a5, v20, &v27);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v10, v11, v12);
  if (a3)
  {
    v22 = *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = 0;
  }
  v27 = v22;
  sub_1BA6786EC(v19, a1, &v27, a4);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 96);
  if (v23)
  {
    v24 = *(_QWORD *)(v23 + 72);
    if ((~v24 & 0xF000000000000007) != 0)
      __asm { BR              X10 }
  }
  return sub_1BB873738();
}

uint64_t sub_1BB0A3FB0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  sub_1BA6E6C68(v0);
  swift_retain();
  FormatColor.color.getter();
  v2 = v1;
  sub_1BB873738();
  swift_release();

  return sub_1BA6E6CD8(v0);
}

uint64_t sub_1BB0A416C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BB0A41A0(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB0A41D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB0A41F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB0A421C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BB0A42DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB0A4308()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BB0A432C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *FormatTag.__allocating_init(identifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  swift_beginAccess();
  v8[4] = a3;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

uint64_t FormatTag.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatTag.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatTag.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTag.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTag.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatTag.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTag.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatTag.init(identifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  swift_beginAccess();
  v4[4] = a3;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t sub_1BB0A45F0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F7463656C6573;
  if (*v0 != 1)
    v1 = 0x69747265706F7270;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB0A4654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB0A51EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB0A4678()
{
  sub_1BB0A49A0();
  return sub_1BB874710();
}

uint64_t sub_1BB0A46A0()
{
  sub_1BB0A49A0();
  return sub_1BB87471C();
}

uint64_t FormatTag.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatTag.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatTag.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD *v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1BB0A4E90(0, (unint64_t *)&unk_1ED3AB7B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0A49A0();
  sub_1BB8746C8();
  v16 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    swift_beginAccess();
    v11 = *(_QWORD *)(v3 + 32);
    if (*(_QWORD *)(v11 + 16))
    {
      v17 = 1;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v15 = v12;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1BB0A4E38();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 40);
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = 2;
      v15 = (_QWORD *)v13;
      sub_1BB0A4E38();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB0A49A0()
{
  unint64_t result;

  result = qword_1ED3A0768;
  if (!qword_1ED3A0768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8F84, &type metadata for FormatTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0768);
  }
  return result;
}

uint64_t FormatTag.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatTag.init(from:)(a1);
  return v2;
}

_QWORD *FormatTag.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v39 = *v1;
  sub_1BA89B794();
  v4 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v36 = v4;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v37 = v6;
  v33 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0A4E90(0, &qword_1ED3A0990, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB0A49A0();
  v14 = v38;
  sub_1BB87468C();
  if (v14)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v1;
  }
  else
  {
    v31 = v8;
    v32 = a1;
    v15 = v37;
    v38 = v11;
    v44 = 0;
    v16 = v1;
    v1[2] = sub_1BB874098();
    v1[3] = v17;
    v18 = v10;
    v43 = 1;
    v19 = sub_1BB8740F8();
    v30 = v13;
    if ((v19 & 1) != 0)
    {
      v40 = 1;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      v20 = v31;
      v21 = v15;
      sub_1BB8740D4();
      v22 = v18;
      v23 = v36;
      v24 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v21);
    }
    else
    {
      v24 = MEMORY[0x1E0DEE9E8];
      v22 = v10;
      v23 = v36;
    }
    v16[4] = v24;
    v42 = 2;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v41 = 2;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v26 = v34;
      v25 = v35;
      sub_1BB8740D4();
      v28 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
    }
    else
    {
      v28 = MEMORY[0x1E0DEE9D8];
    }
    v29 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v22);
    v16[5] = v28;
    __swift_destroy_boxed_opaque_existential_1(v29);
  }
  return v16;
}

_QWORD *sub_1BB0A4DB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatTag.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB0A4E0C(_QWORD *a1)
{
  return FormatTag.encode(to:)(a1);
}

uint64_t sub_1BB0A4E2C(_QWORD *a1, _QWORD *a2)
{
  return static FormatTag.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BB0A4E38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB7A8;
  if (!qword_1ED3AB7A8)
  {
    sub_1BB0A4E90(255, (unint64_t *)&unk_1ED3AB7B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB7A8);
  }
  return result;
}

void sub_1BB0A4E90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB0A49A0();
    v7 = a3(a1, &type metadata for FormatTag.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB0A4EEC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30((unint64_t *)&unk_1ED3A0788, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTag, (uint64_t)&protocol conformance descriptor for FormatTag);
  a1[2] = sub_1BA50AD30(&qword_1ED3AAB58, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatTag, (uint64_t)&protocol conformance descriptor for FormatTag);
  result = sub_1BA50AD30(&qword_1EF2BA9D8, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatTag, (uint64_t)&protocol conformance descriptor for FormatTag);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatTag()
{
  return objc_opt_self();
}

uint64_t sub_1BB0A4F84@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB0A4FD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatTag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatTag.__allocating_init(identifier:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FormatTag.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for FormatTag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB0A5094 + 4 * byte_1BB8E8DE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB0A50C8 + 4 * byte_1BB8E8DE0[v4]))();
}

uint64_t sub_1BB0A50C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0A50D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB0A50D8);
  return result;
}

uint64_t sub_1BB0A50E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB0A50ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB0A50F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB0A50F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTag.CodingKeys()
{
  return &type metadata for FormatTag.CodingKeys;
}

unint64_t sub_1BB0A5118()
{
  unint64_t result;

  result = qword_1EF2BA9E0;
  if (!qword_1EF2BA9E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8F5C, &type metadata for FormatTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9E0);
  }
  return result;
}

unint64_t sub_1BB0A5160()
{
  unint64_t result;

  result = qword_1ED3A0778;
  if (!qword_1ED3A0778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8ECC, &type metadata for FormatTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0778);
  }
  return result;
}

unint64_t sub_1BB0A51A8()
{
  unint64_t result;

  result = qword_1ED3A0770;
  if (!qword_1ED3A0770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E8EF4, &type metadata for FormatTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0770);
  }
  return result;
}

uint64_t sub_1BB0A51EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_1BB0A535C(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD *v12;
  _OWORD v14[2];
  uint64_t v15;

  if ((~*a2 & 0xF000000000000007) != 0)
    __asm { BR              X11 }
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v8);
  v9 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_1BAF89090(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v7, v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v10 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(v10 + 48) = v15;
  v11 = v14[1];
  *(_OWORD *)(v10 + 16) = v14[0];
  *(_OWORD *)(v10 + 32) = v11;
  v12 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v12;
}

void FormatColorExpression.bind(binder:context:)()
{
  FormatColorExpression.bindChildren(binder:context:)();
}

void static FormatColorExpression.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB0A664C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  _QWORD v8[2];
  _QWORD v9[8];

  if (v1 >> 61)
    goto LABEL_6;
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v9[0] = *(_QWORD *)(a1 + 16);
  v8[0] = v3;
  swift_retain();
  swift_retain();
  if ((((uint64_t (*)(_QWORD *, _QWORD *))static FormatColorExpression.== infix(_:_:))(v9, v8) & 1) == 0)
  {
    swift_release();
    swift_release();
    goto LABEL_6;
  }
  v9[0] = v2;
  v8[0] = v4;
  v5 = ((uint64_t (*)(_QWORD *, _QWORD *))static FormatColorExpression.== infix(_:_:))(v9, v8);
  swift_release();
  swift_release();
  if ((v5 & 1) == 0)
  {
LABEL_6:
    v6 = 0;
    return v6 & 1;
  }
  v6 = 1;
  return v6 & 1;
}

void sub_1BB0A6860()
{
  FormatColorExpression.bindChildren(binder:context:)();
}

unint64_t sub_1BB0A6888(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0A68AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0A68AC()
{
  unint64_t result;

  result = qword_1EF2BA9E8;
  if (!qword_1EF2BA9E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorExpression, &type metadata for FormatColorExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9E8);
  }
  return result;
}

unint64_t sub_1BB0A68F0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5820C4();
  a1[2] = sub_1BA5A3D48();
  result = sub_1BB0A6924();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB0A6924()
{
  unint64_t result;

  result = qword_1EF2BA9F0;
  if (!qword_1EF2BA9F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorExpression, &type metadata for FormatColorExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorExpression()
{
  return &type metadata for FormatColorExpression;
}

uint64_t sub_1BB0A6978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB0A69AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  id v39;
  uint64_t v40;
  id v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a2;
  sub_1BA716D64();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatAttributedStringAttachment();
  v15 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  v47 = v15;
  MEMORY[0x1E0C80A78](v14);
  v43 = (_QWORD **)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v45 = (_QWORD **)((char *)&v43 - v18);
  swift_getKeyPath();
  sub_1BB0A6F6C();
  sub_1BB86C490();
  swift_release();
  if (v50)
  {
    sub_1BB86C634();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v23(v13, v9, v10);
      v22 = v45;
      v23((char *)v45, v13, v10);
      v21 = v46;
      goto LABEL_8;
    }
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  }
  swift_getKeyPath();
  sub_1BB0A6FB0();
  sub_1BB86C490();
  swift_release();
  if (!v50
    || (v19 = (void *)sub_1BB872970(),
        swift_bridgeObjectRelease(),
        v20 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v19),
        v19,
        !v20))
  {
    swift_getKeyPath();
    sub_1BB0A6FF4();
    sub_1BB86C490();
    swift_release();
    v27 = v50;
    if (v50)
    {
      v28 = v49;
      swift_getKeyPath();
      sub_1BB0A7038();
      sub_1BB86C490();
      swift_release();
      if (!v50)
        goto LABEL_19;
      if (qword_1ED3C7890 != -1)
        swift_once();
      v29 = sub_1BA76F5D8(v28, v27);
      swift_bridgeObjectRelease();
      if (v29)
      {
        v30 = v29;
        v31 = (void *)sub_1BB86D738();
        v32 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v33 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v32, v30, v31);

        if (v33)
        {
          v34 = (uint64_t)v44;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, a1, v4);
          v35 = sub_1BB0A707C(v34);
          if (v37 == -1)
          {
            v42 = objc_msgSend(v33, sel_imageWithRenderingMode_, 2);

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
            v40 = (uint64_t)v43;
            *v43 = v42;
          }
          else
          {
            v38 = sub_1BA76F7B0(v33, v35, v36, v37);
            v39 = objc_msgSend(v38, sel_imageWithRenderingMode_, 2);

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
            v40 = (uint64_t)v43;
            *v43 = v39;
          }
          v21 = v46;
          swift_storeEnumTagMultiPayload();
          v22 = v45;
          sub_1BB0A7198(v40, (uint64_t)v45);
          goto LABEL_9;
        }
        swift_release();

      }
      else
      {
LABEL_19:
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v25 = 1;
    v26 = v47;
    v24 = v48;
    v21 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, v25, 1, v21);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v22 = v45;
  v21 = v46;
  *v45 = v20;
LABEL_8:
  swift_storeEnumTagMultiPayload();
LABEL_9:
  v24 = v48;
  sub_1BB0A7198((uint64_t)v22, v48);
  v25 = 0;
  v26 = v47;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, v25, 1, v21);
}

unint64_t sub_1BB0A6F6C()
{
  unint64_t result;

  result = qword_1ED3A2AB0;
  if (!qword_1ED3A2AB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB955288, &type metadata for FormatAttributeScope.HrefAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AB0);
  }
  return result;
}

unint64_t sub_1BB0A6FB0()
{
  unint64_t result;

  result = qword_1ED3A2AA8;
  if (!qword_1ED3A2AA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB955238, &type metadata for FormatAttributeScope.SymbolImageAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AA8);
  }
  return result;
}

unint64_t sub_1BB0A6FF4()
{
  unint64_t result;

  result = qword_1ED3A2AC8;
  if (!qword_1ED3A2AC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9551E8, &type metadata for FormatAttributeScope.BundleAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AC8);
  }
  return result;
}

unint64_t sub_1BB0A7038()
{
  unint64_t result;

  result = qword_1ED3A2AB8;
  if (!qword_1ED3A2AB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB955198, &type metadata for FormatAttributeScope.NameAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AB8);
  }
  return result;
}

uint64_t sub_1BB0A707C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  double v5;
  double v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  swift_getKeyPath();
  sub_1BA716D64();
  v3 = v2;
  sub_1BB0A71DC();
  sub_1BB86C490();
  swift_release();
  swift_getKeyPath();
  sub_1BB0A7220();
  sub_1BB86C490();
  swift_release();
  if ((v9 & 1) != 0)
    v5 = 0.0;
  else
    v5 = (double)v8;
  if ((v11 & 1) != 0)
    v6 = v5;
  else
    v6 = (double)v10;
  v4.n128_f64[0] = (double)v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v3 - 8) + 8))(a1, v3, v4);
  return *(_QWORD *)&v6;
}

uint64_t sub_1BB0A7198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatAttributedStringAttachment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB0A71DC()
{
  unint64_t result;

  result = qword_1ED3A2AC0;
  if (!qword_1ED3A2AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB955148, &type metadata for FormatAttributeScope.WidthAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AC0);
  }
  return result;
}

unint64_t sub_1BB0A7220()
{
  unint64_t result;

  result = qword_1ED3A2AD0;
  if (!qword_1ED3A2AD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9550F8, &type metadata for FormatAttributeScope.HeightAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AD0);
  }
  return result;
}

char *sub_1BB0A7264(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
    }
    else
    {
      v10 = sub_1BB86C67C();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BB0A7344(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    v3 = sub_1BB86C67C();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void **sub_1BB0A73AC(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v5 = *a2;
    *a1 = *a2;
    v6 = v5;
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1BB0A7460(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatAttributedStringAttachment);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v5 = *a2;
      *a1 = *a2;
      v6 = v5;
    }
    else
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1BB0A752C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BB86C67C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1BB0A75B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatAttributedStringAttachment);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BB86C67C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t FormatImageNodeContext.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for FormatImageNodeContext()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatFontWeight.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB0A76B0 + 4 * byte_1BB8E92E0[*v0]))(0x6B63616C62, 0xE500000000000000);
}

uint64_t sub_1BB0A76B0()
{
  return 1684828002;
}

uint64_t sub_1BB0A76C0()
{
  return 0x7976616568;
}

uint64_t sub_1BB0A76D0()
{
  return 0x746867696CLL;
}

uint64_t sub_1BB0A76E0()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1BB0A76F4()
{
  return 0x72616C75676572;
}

uint64_t sub_1BB0A770C()
{
  return 0x646C6F62696D6573;
}

uint64_t sub_1BB0A7724()
{
  return 1852401780;
}

uint64_t sub_1BB0A7734()
{
  return 0x67694C6172746C75;
}

unint64_t sub_1BB0A7754()
{
  unint64_t result;

  result = qword_1EF2BA9F8;
  if (!qword_1EF2BA9F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWeight, &type metadata for FormatFontWeight);
    atomic_store(result, (unint64_t *)&qword_1EF2BA9F8);
  }
  return result;
}

uint64_t sub_1BB0A7798()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D3EE4((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB0A77DC(uint64_t a1)
{
  char *v1;

  sub_1BA9D3EE4(a1, *v1);
}

uint64_t sub_1BB0A77E4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D3EE4((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB0A7824@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatFontWeight.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BB0A7848(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB0A7874();
  result = sub_1BA539478();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB0A7874()
{
  unint64_t result;

  result = qword_1EF2BAA00;
  if (!qword_1EF2BAA00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWeight, &type metadata for FormatFontWeight);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA00);
  }
  return result;
}

void sub_1BB0A78B8(char *a1)
{
  sub_1BB800E44(*a1);
}

unint64_t sub_1BB0A78C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB0A78E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB0A78E8()
{
  unint64_t result;

  result = qword_1EF2BAA08;
  if (!qword_1EF2BAA08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWeight, &type metadata for FormatFontWeight);
    atomic_store(result, (unint64_t *)&qword_1EF2BAA08);
  }
  return result;
}

unint64_t sub_1BB0A792C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6102C0();
  a1[2] = sub_1BA674494();
  result = sub_1BB0A7754();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatFontWeight()
{
  return &type metadata for FormatFontWeight;
}

uint64_t FeedPluginManagerResult.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

