void sub_1BB3A882C(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v2 = (id)qword_1EF3D0928;
  v3 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Inspector tap to radar failed to generate inspections, error=%@", 63, 2, &dword_1BA493000, v2, v3, v4);

  swift_bridgeObjectRelease();
  sub_1BB873E34();
  v5 = (void *)sub_1BB872970();
  v6 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1);

  v8 = (void *)sub_1BB872970();
  v9 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v8, 0, 0);

  objc_msgSend(v7, sel_addAction_, v9);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
  v10 = objc_msgSend(a2, sel_navigationItem);
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB8856E0;
  v12 = (void *)sub_1BB872970();
  v13 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

  if (v13)
  {
    v14 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v15 = a2;
    v16 = objc_msgSend(v14, sel_initWithImage_style_target_action_, v13, 0, v15, sel_doTapToRadar);

    *(_QWORD *)(v11 + 32) = v16;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    v17 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setLeftBarButtonItems_, v17);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1BB3A8C80()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  _QWORD v31[3];
  uint64_t v32;
  _BYTE v33[40];
  void *v34;
  _BYTE v35[48];
  uint64_t v36[9];

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections);
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v3 = *(_QWORD *)(v2 + 24 * result + 48);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (result < *(_QWORD *)(v3 + 16))
  {
    sub_1BB3A9244((uint64_t *)(v3 + (result << 6) + 32), (uint64_t)v36);
    swift_bridgeObjectRelease();
    sub_1BB3A9244(v36, (uint64_t)&v34);
    if ((v35[40] & 1) != 0)
    {
      v4 = v34;
      sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
      v5 = (void *)sub_1BB87321C();
      v6 = objc_msgSend(v5, sel_textLabel);
      if (v6)
      {
        v7 = v6;
        sub_1BA907794(v4);
        v8 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setText_, v8);

      }
      v9 = objc_msgSend(v5, sel_textLabel);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
        objc_msgSend(v10, sel_setFont_, v11);

      }
      v12 = objc_msgSend(v5, sel_textLabel);
      if (!v12)
      {
        sub_1BB3A9280((uint64_t)v36);

        return (unint64_t)v5;
      }
      v13 = v12;
      objc_msgSend(v12, sel_setNumberOfLines_, 0);

    }
    else
    {
      sub_1BA92F1BC((uint64_t)v35, (uint64_t)v33);
      type metadata accessor for SubtitleTableViewCell();
      v5 = (void *)sub_1BB87321C();
      v14 = objc_msgSend(v5, sel_textLabel);
      if (v14)
      {
        v15 = v14;
        v16 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setText_, v16);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v17 = objc_msgSend(v5, sel_textLabel);
      if (v17)
      {
        v18 = v17;
        v19 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
        objc_msgSend(v18, sel_setFont_, v19);

      }
      v20 = objc_msgSend(v5, sel_detailTextLabel);
      if (v20)
      {
        v21 = v20;
        sub_1BA92F200((uint64_t)v33, (uint64_t)v31);
        if (v32)
        {
          __swift_project_boxed_opaque_existential_1(v31, v32);
          sub_1BB87420C();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        }
        else
        {
          sub_1BA92F11C((uint64_t)v31);
        }
        v22 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_setText_, v22);

      }
      v23 = objc_msgSend(v5, sel_detailTextLabel);
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
        objc_msgSend(v24, sel_setTextColor_, v25);

      }
      v26 = objc_msgSend(v5, sel_detailTextLabel);
      if (v26)
      {
        v27 = v26;
        objc_msgSend(v26, sel_setNumberOfLines_, 0);

      }
      v28 = objc_msgSend(v5, sel_detailTextLabel);
      if (v28)
      {
        v29 = v28;
        v30 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
        objc_msgSend(v29, sel_setFont_, v30);

      }
      sub_1BA92F11C((uint64_t)v33);
    }
    sub_1BB3A9280((uint64_t)v36);
    return (unint64_t)v5;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1BB3A9244(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for DebugInspectionDataItem(a2, a1);
  return a2;
}

uint64_t sub_1BB3A9280(uint64_t a1)
{
  destroy for DebugInspectionDataItem(a1);
  return a1;
}

uint64_t sub_1BB3A92B4()
{
  return sub_1BB3F5C54();
}

uint64_t sub_1BB3A92E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB3A930C(_QWORD *a1, void *a2)
{
  uint64_t v2;

  return sub_1BB3A74D0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BB3A9324()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB3A9350()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2930;
  if (!qword_1EF2C2930)
  {
    v1 = type metadata accessor for DebugInspectionItem();
    result = MEMORY[0x1BCCE5B24](&unk_1BB948D50, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2930);
  }
  return result;
}

uint64_t sub_1BB3A9398()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB3A93BC()
{
  unint64_t result;

  result = qword_1EF2C2940;
  if (!qword_1EF2C2940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914644, &type metadata for DebugInspectorError);
    atomic_store(result, (unint64_t *)&qword_1EF2C2940);
  }
  return result;
}

id sub_1BB3A9400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  objc_class *ObjectType;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  objc_super v26;
  uint64_t v27[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v27[3] = a7;
  v27[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_0, a2, a7);
  v18 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView;
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v20 = a6;
  *(_QWORD *)&a6[v18] = objc_msgSend(v19, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections] = MEMORY[0x1E0DEE9D8];
  v21 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v20[v21] = sub_1BB86FDD8();
  *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_inspector] = a1;
  sub_1BA4C010C((uint64_t)v27, (uint64_t)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem]);
  v22 = &v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_commandCenter];
  *(_QWORD *)v22 = a3;
  *((_QWORD *)v22 + 1) = a4;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_cloudContext] = a5;
  swift_retain();
  swift_unknownObjectRetain();
  v23 = a5;

  v26.receiver = v20;
  v26.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v24;
}

void sub_1BB3A9590()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections] = MEMORY[0x1E0DEE9D8];
  v3 = OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v1[v3] = sub_1BB86FDD8();

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB3A966C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;

  v4 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1BB4D52D0(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  v10 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a3, v4, a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, a2);
}

uint64_t FeedCursorGroup.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FeedCursorGroup.group.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t FeedCursorGroup.configIdentifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FeedCursorGroup.serviceConfig.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t static FeedCursorGroup.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for FeedCursorGroup(0, a3, a4, v6);
  swift_getAssociatedConformanceWitness();
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB3A99EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FeedCursorGroup.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t *sub_1BB3A99F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t *v32;

  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v7 + v11;
  v13 = *(_QWORD *)(v10 + 64) + 7;
  v14 = *(_QWORD *)(v8 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15 | *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  if (v16 > 7
    || ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((v15 + ((v13 + (v12 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v15) + *(_QWORD *)(v14 + 64) > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    v29 = v19 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7));
    swift_retain();
  }
  else
  {
    v20 = AssociatedTypeWitness;
    v32 = a1;
    v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(v32, a2, v5);
    v22 = ((unint64_t)v32 + v12) & v21;
    v23 = ((unint64_t)a2 + v12) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v22, v23, v20);
    v24 = (_QWORD *)((v13 + v22) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)((v13 + v23) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v25;
    v24[1] = v25[1];
    v26 = ((unint64_t)v24 + v15 + 16) & ~v15;
    v27 = ((unint64_t)v25 + v15 + 16) & ~v15;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    v28(v26, v27, v8);
    return v32;
  }
  return (uint64_t *)v29;
}

uint64_t sub_1BB3A9C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v12 + a1) & ~v12;
  v14 = (v8 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 24))(((unint64_t)v16 + *(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v17 + *(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), v9);
  return a1;
}

uint64_t sub_1BB3A9D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v12 + a1) & ~v12;
  v14 = (v8 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = *(_QWORD *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 32))(((unint64_t)v16 + *(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v17 + *(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), v9);
  return a1;
}

uint64_t sub_1BB3A9EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 + v12 + a1) & ~v12;
  v14 = (v8 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 40))(((unint64_t)v16 + *(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v17 + *(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), v9);
  return a1;
}

uint64_t sub_1BB3AA044()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRelease();
  sub_1BA7994F4(v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for FormatLayoutViewContainer.View(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x6D && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 109);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatLayoutViewContainer.View(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x6C)
  {
    *(_QWORD *)result = a2 - 109;
    if (a3 >= 0x6D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x6D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewContainer.View()
{
  return &type metadata for FormatLayoutViewContainer.View;
}

void sub_1BB3AA164(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1BB3AA1C8(uint64_t a1)
{
  id v1;

  v1 = *(id *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  FormatLayoutView.prepareForReuse()();

}

void sub_1BB3AA4E0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v1 = (char *)*(id *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  MEMORY[0x1BCCE1C6C]();

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController];
  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v4 = *v3;
  *v3 = 0;
  v3[1] = 0;
  sub_1BA49EBE0(v4);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
  JUMPOUT(0x1BB3AA558);
}

void sub_1BB3AA5FC()
{
  uint64_t *v0;

  sub_1BB3AA164(*v0);
}

void sub_1BB3AA604()
{
  sub_1BB3AA674();
  JUMPOUT(0x1BCCE1E7CLL);
}

unint64_t sub_1BB3AA630()
{
  unint64_t result;

  result = qword_1EF2C2950;
  if (!qword_1EF2C2950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F630, &type metadata for FormatLayoutViewContainer.View);
    atomic_store(result, (unint64_t *)&qword_1EF2C2950);
  }
  return result;
}

unint64_t sub_1BB3AA674()
{
  unint64_t result;

  result = qword_1EF2C2958;
  if (!qword_1EF2C2958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F668, &type metadata for FormatLayoutViewContainer.View);
    atomic_store(result, (unint64_t *)&qword_1EF2C2958);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDOMNode()
{
  return &type metadata for FormatDOMNode;
}

uint64_t sub_1BB3AA6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t i;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  for (i = 0; i != v1; ++i)
  {
    if ((*(_QWORD *)(a1 + 8 * i + 32) & 0x8000000000000000) != 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      v5 = swift_bridgeObjectRetain();
      sub_1BB3AA6C8(v5);
      swift_bridgeObjectRelease();
    }
    sub_1BB872AFC(v4);
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB3AA7D8(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB3AA844(*a1, *a2);
}

uint64_t sub_1BB3AA7E4()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_QWORD *)v0 & 0x8000000000000000) != 0)
  {
    v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v1 = sub_1BB052C8C();
    swift_release();
  }
  return v1;
}

uint64_t sub_1BB3AA844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (a1 < 0)
  {
    if (a2 < 0)
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
        return sub_1BB874398();
      return 1;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    v5 = *(_QWORD *)(a2 + 16);
    swift_retain();
    swift_retain();
    if (sub_1BAF24630(v4, v5))
    {
      swift_beginAccess();
      v6 = *(_QWORD *)(a1 + 24);
      swift_beginAccess();
      v7 = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = sub_1BA8802C0(v6, v7);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 1;
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  return 0;
}

uint64_t sub_1BB3AA974@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v28 = a2;
  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v5);
  v29 = (uint64_t)&v27 - v6;
  sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - v8;
  v11 = *(_QWORD *)v2;
  v10 = *(_QWORD *)(v2 + 8);
  v12 = *(_QWORD *)(v2 + 16);
  v13 = *(_BYTE *)(v2 + 24);
  sub_1BA60DF54(*(_QWORD *)v2, v10, v12, v13);
  v14 = a1;
  v15 = sub_1BB07705C(a1, v11, v10, v12, v13);
  v17 = v16;
  result = sub_1BA60DFC4(v11, v10, v12, v13);
  if (!v3)
  {
    v27 = 0;
    v19 = v28;
    v20 = v2 + *(int *)(type metadata accessor for FormatPurchaseLandingPage() + 20);
    v21 = v29;
    sub_1BB353D64(v20, v29);
    v22 = type metadata accessor for FormatPostPurchase();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22) == 1)
    {
      sub_1BB3ABF70(v21);
      v23 = type metadata accessor for FormatPostPurchaseData();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    }
    else
    {
      v24 = v27;
      sub_1BB5D5660(v14, (uint64_t)v9);
      if (v24)
      {
        swift_bridgeObjectRelease();
        return sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
      }
      sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
      v25 = type metadata accessor for FormatPostPurchaseData();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 0, 1, v25);
    }
    v26 = type metadata accessor for FormatPurchaseLandingPageData();
    result = sub_1BB3ABFBC((uint64_t)v9, (uint64_t)v19 + *(int *)(v26 + 20));
    *v19 = v15;
    v19[1] = v17;
  }
  return result;
}

uint64_t FormatPurchaseLandingPage.articleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return sub_1BA60DF54(v2, v3, v4, v5);
}

uint64_t FormatPurchaseLandingPage.postPurchase.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatPurchaseLandingPage() + 20);
  return sub_1BB353D64(v3, a1);
}

uint64_t sub_1BB3AAC00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPurchaseLandingPage.init(from:)(a1, a2);
}

uint64_t sub_1BB3AAC14(_QWORD *a1)
{
  return FormatPurchaseLandingPage.encode(to:)(a1);
}

BOOL _s8NewsFeed25FormatPurchaseLandingPageV2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;

  v4 = type metadata accessor for FormatPostPurchase();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB356B9C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v31 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v31 - v19;
  v21 = *((_QWORD *)a1 + 2);
  v22 = *((_BYTE *)a1 + 24);
  v36 = *a1;
  v37 = v21;
  v38 = v22;
  v23 = *((_QWORD *)a2 + 2);
  v24 = *((_BYTE *)a2 + 24);
  v33 = *a2;
  v34 = v23;
  v35 = v24;
  if ((_s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)&v33) & 1) == 0)
    return 0;
  v32 = v7;
  v25 = type metadata accessor for FormatPurchaseLandingPage();
  sub_1BB353D64((uint64_t)a1 + *(int *)(v25 + 20), (uint64_t)v20);
  sub_1BB353D64((uint64_t)a2 + *(int *)(v25 + 20), (uint64_t)v17);
  v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1BB353D64((uint64_t)v20, (uint64_t)v11);
  sub_1BB353D64((uint64_t)v17, v26);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v11, 1, v4) == 1)
  {
    sub_1BB3ABF70((uint64_t)v17);
    sub_1BB3ABF70((uint64_t)v20);
    if (v27(v26, 1, v4) == 1)
    {
      sub_1BB3ABF70((uint64_t)v11);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1BB353D64((uint64_t)v11, (uint64_t)v14);
  if (v27(v26, 1, v4) == 1)
  {
    sub_1BB3ABF70((uint64_t)v17);
    sub_1BB3ABF70((uint64_t)v20);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB356B9C);
    return 0;
  }
  v28 = (uint64_t)v32;
  sub_1BB3AC010(v26, (uint64_t)v32);
  v29 = _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0((uint64_t)v14, v28);
  sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  sub_1BB3ABF70((uint64_t)v17);
  sub_1BB3ABF70((uint64_t)v20);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  sub_1BB3ABF70((uint64_t)v11);
  return (v29 & 1) != 0;
}

uint64_t sub_1BB3AAF04(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB3AAF9C(&qword_1EF2C2970, (uint64_t)&protocol conformance descriptor for FormatPurchaseLandingPage);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3AAF38(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB3AAF9C(&qword_1ED3BF378, (uint64_t)&protocol conformance descriptor for FormatPurchaseLandingPage);
  a1[2] = sub_1BB3AAF9C(&qword_1EF2B5F78, (uint64_t)&protocol conformance descriptor for FormatPurchaseLandingPage);
  result = sub_1BB3AAF9C(&qword_1EF2C2978, (uint64_t)&protocol conformance descriptor for FormatPurchaseLandingPage);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB3AAF9C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatPurchaseLandingPage();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatPurchaseLandingPage(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_1BA60DF54(*(_QWORD *)a2, v8, v9, v10);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)(a2 + v11);
    v14 = type metadata accessor for FormatPostPurchase();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for FormatURL();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v13, 2, v18))
      {
        memcpy(v12, v13, *(_QWORD *)(v15 + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v22 = *v13;
          v23 = v13[1];
          v29 = *v13;
          v24 = v13[2];
          v25 = *((_BYTE *)v13 + 24);
          sub_1BA690C00(v22, v23, v24, v25);
          *v12 = v29;
          v12[1] = v23;
          v12[2] = v24;
          *((_BYTE *)v12 + 24) = v25;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            v21 = v13[1];
            *v12 = *v13;
            v12[1] = v21;
            v12[2] = v13[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v26 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v12, v13, v26);
            v27 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v12 + *(int *)(v27 + 20)) = *(uint64_t *)((char *)v13 + *(int *)(v27 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 2, v18);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  sub_1BA60DFC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatPostPurchase();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = type metadata accessor for FormatURL();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 2, v7);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        return sub_1BA5A7EF8(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
      if ((_DWORD)result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((_DWORD)result)
          return result;
        v8 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1BA60DF54(*(_QWORD *)a2, v7, v8, v9);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 20);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = type metadata accessor for FormatPostPurchase();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for FormatURL();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v12, 2, v16))
    {
      memcpy(v11, v12, *(_QWORD *)(v14 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v20 = *v12;
        v21 = v12[1];
        v27 = *v12;
        v22 = v12[2];
        v23 = *((_BYTE *)v12 + 24);
        sub_1BA690C00(v20, v21, v22, v23);
        *v11 = v27;
        v11[1] = v21;
        v11[2] = v22;
        *((_BYTE *)v11 + 24) = v23;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          v19 = v12[1];
          *v11 = *v12;
          v11[1] = v19;
          v11[2] = v12[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v24 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v12, v24);
          v25 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v11 + *(int *)(v25 + 20)) = *(uint64_t *)((char *)v12 + *(int *)(v25 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 2, v16);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t *, uint64_t, uint64_t);
  int v28;
  int v29;
  int EnumCaseMultiPayload;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1BA60DF54(*(_QWORD *)a2, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_1BA60DFC4(v10, v11, v12, v13);
  v14 = *(int *)(a3 + 20);
  v15 = (uint64_t *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v17 = type metadata accessor for FormatPostPurchase();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v8) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v8)
  {
    if (v20)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
LABEL_7:
      memcpy(v15, v16, v22);
      return a1;
    }
    v25 = type metadata accessor for FormatURL();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v15, 2, v25);
    v29 = v27(v16, 2, v25);
    if (v28)
    {
      if (!v29)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v40 = *v16;
          v41 = v16[1];
          v42 = v16[2];
          v43 = *((_BYTE *)v16 + 24);
          sub_1BA690C00(v40, v41, v42, v43);
          *v15 = v40;
          v15[1] = v41;
          v15[2] = v42;
          *((_BYTE *)v15 + 24) = v43;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            *v15 = *v16;
            v15[1] = v16[1];
            v15[2] = v16[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v44 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v15, v16, v44);
            v45 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v15 + *(int *)(v45 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v45 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v15, 0, 2, v25);
        return a1;
      }
    }
    else
    {
      if (!v29)
      {
        if (a1 != a2)
        {
          sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v39 = swift_getEnumCaseMultiPayload();
          if (v39 == 2)
          {
            v46 = *v16;
            v47 = v16[1];
            v48 = v16[2];
            v49 = *((_BYTE *)v16 + 24);
            sub_1BA690C00(v46, v47, v48, v49);
            *v15 = v46;
            v15[1] = v47;
            v15[2] = v48;
            *((_BYTE *)v15 + 24) = v49;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (v39 == 1)
            {
              *v15 = *v16;
              v15[1] = v16[1];
              v15[2] = v16[2];
              swift_bridgeObjectRetain();
            }
            else
            {
              v50 = sub_1BB86C67C();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v15, v16, v50);
              v51 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)v15 + *(int *)(v51 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v51 + 20));
            }
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
        }
        return a1;
      }
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v22 = *(_QWORD *)(v18 + 64);
    goto LABEL_7;
  }
  if (v20)
    goto LABEL_6;
  v23 = type metadata accessor for FormatURL();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v16, 2, v23))
  {
    memcpy(v15, v16, *(_QWORD *)(v18 + 64));
  }
  else
  {
    v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      v32 = *v16;
      v33 = v16[1];
      v52 = *v16;
      v34 = v16[2];
      v35 = *((_BYTE *)v16 + 24);
      sub_1BA690C00(v32, v33, v34, v35);
      *v15 = v52;
      v15[1] = v33;
      v15[2] = v34;
      *((_BYTE *)v15 + 24) = v35;
    }
    else
    {
      if (v31 == 1)
      {
        *v15 = *v16;
        v15[1] = v16[1];
        v15[2] = v16[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v36 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v15, v16, v36);
        v37 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v15 + *(int *)(v37 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v37 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v15, 0, 2, v23);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

_OWORD *initializeWithTake for FormatPurchaseLandingPage(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for FormatPostPurchase();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for FormatURL();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10))
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v5, v6, *(_QWORD *)(v11 + 64));
      }
      else
      {
        v12 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
        v13 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v5[*(int *)(v13 + 20)] = *(_QWORD *)&v6[*(int *)(v13 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, v10);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for FormatPurchaseLandingPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1BA60DFC4(v8, v9, v10, v11);
  v12 = *(int *)(a3 + 20);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for FormatPostPurchase();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      v21 = *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64);
LABEL_7:
      memcpy(v13, v14, v21);
      return a1;
    }
    v24 = type metadata accessor for FormatURL();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v27 = v26(v13, 2, v24);
    v28 = v26(v14, 2, v24);
    if (v27)
    {
      if (!v28)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v13, v14, *(_QWORD *)(v25 + 64));
        }
        else
        {
          v32 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v13, v14, v32);
          v33 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v13[*(int *)(v33 + 20)] = *(_QWORD *)&v14[*(int *)(v33 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 2, v24);
        return a1;
      }
    }
    else
    {
      if (!v28)
      {
        if (a1 == a2)
          return a1;
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        if (!swift_getEnumCaseMultiPayload())
        {
          v34 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v13, v14, v34);
          v35 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v13[*(int *)(v35 + 20)] = *(_QWORD *)&v14[*(int *)(v35 + 20)];
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v21 = *(_QWORD *)(v25 + 64);
        goto LABEL_7;
      }
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v21 = *(_QWORD *)(v16 + 64);
    goto LABEL_7;
  }
  if (v19)
    goto LABEL_6;
  v22 = type metadata accessor for FormatURL();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 2, v22))
  {
    memcpy(v13, v14, *(_QWORD *)(v16 + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v13, v14, *(_QWORD *)(v23 + 64));
    }
    else
    {
      v29 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v13, v14, v29);
      v30 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v13[*(int *)(v30 + 20)] = *(_QWORD *)&v14[*(int *)(v30 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v13, 0, 2, v22);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPurchaseLandingPage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3ABE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 24);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPurchaseLandingPage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3ABEF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 24) = -(char)a2;
  }
  else
  {
    sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB3ABF70(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB3ABFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3AC010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPostPurchase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedSponsorshipAdService.fetchSponsoredAdForTag(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v31 = a3;
  v32 = a4;
  v35 = a2;
  v36 = a1;
  v34 = *v4;
  v5 = sub_1BB871C08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB871FC8();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v33 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v33 + 64);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  sub_1BB3AC3C0();
  sub_1BB8719A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D52980], v5);
  swift_bridgeObjectRetain();
  sub_1BB871FBC();
  v37 = v31;
  v38 = v32;
  sub_1BB871CF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  sub_1BA657D64();
  v18 = (void *)sub_1BB87345C();
  v19 = swift_allocObject();
  swift_weakInit();
  sub_1BB3AC958((uint64_t)v17, (uint64_t)v14);
  v20 = *(unsigned __int8 *)(v33 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  sub_1BB3ACBB8((uint64_t)v14, v21 + ((v20 + 24) & ~v20));
  sub_1BB3ACC60();
  sub_1BB86EBFC();

  swift_release();
  sub_1BB3AC958((uint64_t)v17, (uint64_t)v14);
  v22 = swift_allocObject();
  sub_1BB3ACBB8((uint64_t)v14, v22 + ((v20 + 16) & ~v20));
  v23 = (void *)sub_1BB86E854();
  sub_1BB871E24();
  sub_1BB86E968();
  swift_release();
  swift_release();

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v36;
  *(_QWORD *)(v24 + 24) = v35;
  swift_bridgeObjectRetain();
  v25 = (void *)sub_1BB86E854();
  v26 = sub_1BB86E98C();
  swift_release();
  swift_release();

  sub_1BB3AD6DC((uint64_t)v17);
  return v26;
}

void sub_1BB3AC3C0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3AD250)
  {
    sub_1BB871F20();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8];
    sub_1BB871F98();
    sub_1BB871FC8();
    sub_1BA4A2870(qword_1ED3C0990, v0, MEMORY[0x1E0D530E0]);
    v1 = sub_1BB8720AC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3AD250);
  }
}

uint64_t sub_1BB3AC484(_QWORD *a1)
{
  uint64_t (*v1)(uint64_t);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3AC3C0();
  sub_1BB8719A4();
  sub_1BB871F20();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8];
  sub_1BB871F98();
  sub_1BB871FC8();
  sub_1BA4A2870(qword_1ED3C0990, v1, MEMORY[0x1E0D530E0]);
  sub_1BB871ED8();
  return swift_release();
}

uint64_t sub_1BB3AC584(_QWORD *a1)
{
  return sub_1BB3AC484(a1);
}

uint64_t sub_1BB3AC59C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB3AC5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BB3ACA80(0, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v13 = (_QWORD *)Strong;
    sub_1BB3AC958(a2, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      sub_1BA4B07F0(0, &qword_1ED3AD1D0, (uint64_t (*)(uint64_t))sub_1BB3ACC60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v14 = sub_1BB86E9C8();
      swift_release();
    }
    else
    {
      sub_1BB3ACB28();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      v25 = v2;
      v17 = v13[5];
      v21 = v13[6];
      v22 = __swift_project_boxed_opaque_existential_1(v13 + 2, v17);
      sub_1BB3AC3C0();
      sub_1BB8719A4();
      sub_1BB871F20();
      v18 = sub_1BB871F98();
      sub_1BB871FC8();
      sub_1BA4A2870(qword_1ED3C0990, (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8], MEMORY[0x1E0D530E0]);
      v14 = (uint64_t)v22;
      v19 = v25;
      sub_1BB871B30();
      if (!v19)
      {
        swift_release();
        v23 = v18;
        v24 = MEMORY[0x1E0D53208];
        sub_1BA4B07F0(0, &qword_1ED3AD1D0, (uint64_t (*)(uint64_t))sub_1BB3ACC60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        swift_retain();
        v14 = sub_1BB86E9E0();
      }
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    v15 = sub_1BB86DF00();
    sub_1BA4A2870((unint64_t *)&unk_1EF2C5B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v16, *MEMORY[0x1E0DB3590], v15);
    sub_1BA4B07F0(0, &qword_1ED3AD1D0, (uint64_t (*)(uint64_t))sub_1BB3ACC60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  return v14;
}

uint64_t sub_1BB3AC958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3AC9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    sub_1BB3ACA80(0, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
    sub_1BB3ACB28();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1BB3ACA80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  if (!*a2)
  {
    v6 = sub_1BB871F20();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530E8];
    v10[0] = v6;
    v10[1] = sub_1BB871FC8();
    v10[2] = sub_1BA4A2870(qword_1ED3C0990, v7, MEMORY[0x1E0D530E0]);
    v10[3] = MEMORY[0x1E0D532B8];
    v8 = a3(a1, v10);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BB3ACB28()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AD258)
  {
    sub_1BB3ACA80(255, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    sub_1BB3ACA80(255, (unint64_t *)&qword_1ED3C40B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D536E8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AD258);
  }
}

uint64_t sub_1BB3ACBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3ACC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1BB3AC5C0(*(_QWORD *)(v0 + 16), v0 + ((v2 + 24) & ~v2));
}

unint64_t sub_1BB3ACC60()
{
  unint64_t result;

  result = qword_1ED3AD248;
  if (!qword_1ED3AD248)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3AD248);
  }
  return result;
}

uint64_t sub_1BB3ACCB4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_1BB3ACA80(0, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - v7;
  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - v10;
  sub_1BB3AC958(a2, (uint64_t)v14 - v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1BA4B07F0(0, &qword_1EF2C2980, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  else
  {
    sub_1BB3ACB28();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_1BB872214();
    sub_1BB872124();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v12 = sub_1BB872058();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v12;
}

uint64_t sub_1BB3ACE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    sub_1BB3ACA80(0, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
    sub_1BB3ACB28();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB3ACF5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BB3ACCB4(a1, v1 + ((v4 + 16) & ~v4));
}

uint64_t sub_1BB3ACFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, double);
  unsigned int v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);

  v62 = a2;
  v56 = a3;
  v57 = a4;
  v61 = a5;
  v59 = sub_1BB871DF4();
  v51 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v55 = (void (*)(uint64_t, char *, uint64_t))((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3C2280, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v51 - v8;
  sub_1BB3AD7CC(0, &qword_1ED3AD238, &qword_1ED3AD230, MEMORY[0x1E0D52868]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - v10;
  v12 = MEMORY[0x1E0D53870];
  sub_1BB3AD7CC(0, &qword_1ED3AD268, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D53870]);
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - v16;
  sub_1BB3ACA80(0, &qword_1ED3AD260, (uint64_t (*)(uint64_t, _QWORD *))v12);
  v64 = v18;
  v63 = *((_QWORD *)v18 - 1);
  MEMORY[0x1E0C80A78](v18);
  v53 = (char *)&v51 - v19;
  v20 = sub_1BB871E18();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BB871E24();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, double))(v25 + 16);
  v58 = a1;
  v29(v28, a1, v24, v26);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v24);
  if (v30 == *MEMORY[0x1E0D52E38])
  {
    v60 = v30;
    (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v24);
    v31 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
    v59 = v20;
    v55 = v31;
    v31((uint64_t)v23, v28, v20);
    v32 = *MEMORY[0x1E0D52860];
    sub_1BB3ACA80(0, &qword_1ED3AD230, MEMORY[0x1E0D52868]);
    v34 = v33;
    v35 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v11, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v34);
    sub_1BB871B9C();
    sub_1BA604728((uint64_t)v11, (uint64_t)&qword_1ED3AD238, (uint64_t)&qword_1ED3AD230, MEMORY[0x1E0D52868], (uint64_t (*)(_QWORD))sub_1BB3AD7CC);
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v63 + 48))(v17, 1, v64) == 1)
    {
      sub_1BA604728((uint64_t)v17, (uint64_t)&qword_1ED3AD268, (uint64_t)&qword_1ED3AD260, (uint64_t)MEMORY[0x1E0D53870], (uint64_t (*)(_QWORD))sub_1BB3AD7CC);
    }
    else
    {
      v45 = v53;
      (*(void (**)(char *, char *, _QWORD))(v63 + 32))(v53, v17, v64);
      sub_1BB871DDC();
      v62 = sub_1BB871DE8();
      sub_1BB871E00();
      v46 = sub_1BB87216C();
      v47 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v54, 1, 1, v46);
      sub_1BB872118();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA604728(v47, (uint64_t)&qword_1ED3C2280, (uint64_t)MEMORY[0x1E0D53750], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v63 + 8))(v45, v64);
    }
    v44 = v61;
    v55((uint64_t)v61, v23, v59);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t))(v25 + 104))(v44, v60, v24);
  }
  v36 = v62;
  if (v30 == *MEMORY[0x1E0D52E18])
  {
    v60 = v30;
    (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v24);
    v64 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v37 = (char *)v55;
    v64((char *)v55, v28, v59);
    v63 = sub_1BB871DDC();
    sub_1BB3AD820();
    v58 = swift_allocError();
    v62 = *(_QWORD *)(v36 + 64);
    sub_1BB871DE8();
    v38 = *MEMORY[0x1E0D52860];
    sub_1BB3ACA80(0, &qword_1ED3AD230, MEMORY[0x1E0D52868]);
    v40 = v39;
    v41 = *(_QWORD *)(v39 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v11, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v11, 0, 1, v40);
    v42 = (uint64_t)v52;
    sub_1BB871B9C();
    swift_bridgeObjectRelease();
    sub_1BA604728((uint64_t)v11, (uint64_t)&qword_1ED3AD238, (uint64_t)&qword_1ED3AD230, MEMORY[0x1E0D52868], (uint64_t (*)(_QWORD))sub_1BB3AD7CC);
    sub_1BB871DE8();
    v43 = (void *)v58;
    sub_1BB872100();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA604728(v42, (uint64_t)&qword_1ED3AD268, (uint64_t)&qword_1ED3AD260, (uint64_t)MEMORY[0x1E0D53870], (uint64_t (*)(_QWORD))sub_1BB3AD7CC);

    v44 = v61;
    v64(v61, v37, v59);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t))(v25 + 104))(v44, v60, v24);
  }
  v49 = sub_1BB86DF00();
  sub_1BA4A2870((unint64_t *)&unk_1EF2C5B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v50, *MEMORY[0x1E0DB3580], v49);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v24);
}

uint64_t sub_1BB3AD6A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3AD6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;

  return sub_1BB3ACFB4(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1BB3AD6DC(uint64_t a1)
{
  uint64_t v2;

  sub_1BB3ACA80(0, &qword_1ED3AD240, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0D529B0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FeedSponsorshipAdService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t FeedSponsorshipAdService.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB3AD798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FeedSponsorshipAdService.fetchSponsoredAdForTag(placementIdentifier:build:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FeedSponsorshipAdServiceType.fetchSponsoredAdForTag(placementIdentifier:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for FeedSponsorshipAdService()
{
  return swift_lookUpClassMethod();
}

void sub_1BB3AD7CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB3ACA80(255, a3, a4);
    v5 = sub_1BB873A2C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BB3AD820()
{
  unint64_t result;

  result = qword_1ED3AD368;
  if (!qword_1ED3AD368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F900, &type metadata for FeedSponsorshipAdService.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED3AD368);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedSponsorshipAdService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB3AD8A4 + 4 * byte_1BB90F800[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB3AD8C4 + 4 * byte_1BB90F805[v4]))();
}

_BYTE *sub_1BB3AD8A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB3AD8C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3AD8CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3AD8D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3AD8DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3AD8E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedSponsorshipAdService.Errors()
{
  return &type metadata for FeedSponsorshipAdService.Errors;
}

unint64_t sub_1BB3AD904()
{
  unint64_t result;

  result = qword_1EF2C2988;
  if (!qword_1EF2C2988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F8D8, &type metadata for FeedSponsorshipAdService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2C2988);
  }
  return result;
}

uint64_t FormatColorColorExpression.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatColor.bind(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)();
    return swift_release();
  }
  return result;
}

void sub_1BB3AD9E8()
{
  uint64_t v0;

  sub_1BA7547AC();
  if (!v0)
    sub_1BA756210();
}

uint64_t FormatColorColorExpression.color.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatColorColorExpression.expression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1BB3ADAF8()
{
  return FormatColorColorExpression.bind(binder:context:)();
}

void sub_1BB3ADB0C()
{
  sub_1BB3AD9E8();
}

uint64_t _s8NewsFeed011FormatColorD10ExpressionV2eeoiySbAC_ACtFZ_0(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  v1 = a1[1];
  v5 = *a1;
  static FormatColor.== infix(_:_:)((uint64_t)&v5);
  if ((v2 & 1) != 0)
  {
    v5 = v1;
    static FormatColorExpression.== infix(_:_:)((uint64_t)&v5);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_1BB3ADB78(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3ADB9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3ADB9C()
{
  unint64_t result;

  result = qword_1EF2C2990;
  if (!qword_1EF2C2990)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorColorExpression, &type metadata for FormatColorColorExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C2990);
  }
  return result;
}

unint64_t sub_1BB3ADBE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA58F004();
  a1[2] = sub_1BA588810();
  result = sub_1BB3ADC14();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3ADC14()
{
  unint64_t result;

  result = qword_1EF2C2998;
  if (!qword_1EF2C2998)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorColorExpression, &type metadata for FormatColorColorExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C2998);
  }
  return result;
}

uint64_t destroy for FormatColorColorExpression()
{
  swift_release();
  return swift_release();
}

_QWORD *_s8NewsFeed26FormatColorColorExpressionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatColorColorExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatColorColorExpression(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorColorExpression()
{
  return &type metadata for FormatColorColorExpression;
}

uint64_t FormatStateMachineDefinition.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateMachineDefinition.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateMachineDefinition.input.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1BA7261E0(v2, v3, v4, v5, v6);
}

uint64_t sub_1BB3ADDB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F1354(*a1, *a2);
}

uint64_t sub_1BB3ADDC4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3ADE58()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3ADEC8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3ADF58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB3AE474();
  *a1 = result;
  return result;
}

void sub_1BB3ADF84(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x73746E657665;
  if (v2 != 1)
  {
    v5 = 0x7475706E69;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x736574617473;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB3ADFD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB3AE474();
  *a1 = result;
  return result;
}

uint64_t sub_1BB3ADFFC()
{
  sub_1BA611314();
  return sub_1BB874710();
}

uint64_t sub_1BB3AE024()
{
  sub_1BA611314();
  return sub_1BB87471C();
}

uint64_t _s8NewsFeed28FormatStateMachineDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  char v17;
  _QWORD v18[4];
  char v19;

  v2 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 48);
  if ((sub_1BA6A45BC(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0 && (sub_1BA892830(v15, v6) & 1) != 0)
  {
    v18[0] = v14;
    v18[1] = v2;
    v18[2] = v4;
    v18[3] = v3;
    v19 = v5;
    v16[0] = v7;
    v16[1] = v8;
    v16[2] = v9;
    v16[3] = v10;
    v17 = v11;
    v12 = static FormatStateMachineInput.== infix(_:_:)(v18, v16);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

unint64_t sub_1BB3AE124(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E12EC();
  a1[2] = sub_1BA5AE308();
  result = sub_1BB3AE158();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3AE158()
{
  unint64_t result;

  result = qword_1EF2C29A0;
  if (!qword_1EF2C29A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineDefinition, &type metadata for FormatStateMachineDefinition);
    atomic_store(result, (unint64_t *)&qword_1EF2C29A0);
  }
  return result;
}

uint64_t destroy for FormatStateMachineDefinition(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA6C1F54(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatStateMachineDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for FormatStateMachineDefinition(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[5];
  LOBYTE(v2) = *((_BYTE *)v2 + 48);
  sub_1BA7261E0(v4, v5, v6, v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = (_BYTE)v2;
  sub_1BA6C1F54(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatStateMachineDefinition(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 48) = v4;
  sub_1BA6C1F54(v5, v6, v7, v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineDefinition()
{
  return &type metadata for FormatStateMachineDefinition;
}

uint64_t storeEnumTagSinglePayload for FormatStateMachineDefinition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3AE3AC + 4 * byte_1BB90FA95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3AE3E0 + 4 * byte_1BB90FA90[v4]))();
}

uint64_t sub_1BB3AE3E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3AE3E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3AE3F0);
  return result;
}

uint64_t sub_1BB3AE3FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3AE404);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3AE408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3AE410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineDefinition.CodingKeys()
{
  return &type metadata for FormatStateMachineDefinition.CodingKeys;
}

unint64_t sub_1BB3AE430()
{
  unint64_t result;

  result = qword_1EF2C29A8;
  if (!qword_1EF2C29A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FC30, &type metadata for FormatStateMachineDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C29A8);
  }
  return result;
}

uint64_t sub_1BB3AE474()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

ValueMetadata *type metadata accessor for A12_V19()
{
  return &type metadata for A12_V19;
}

uint64_t sub_1BB3AE4CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C2AD8, (uint64_t (*)(void))sub_1BB3B0288, (uint64_t)&type metadata for A12_V19.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3B0288();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB3AE680()
{
  sub_1BB3B0288();
  return sub_1BB874710();
}

uint64_t sub_1BB3AE6A8()
{
  sub_1BB3B0288();
  return sub_1BB87471C();
}

double sub_1BB3AE6D0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB3B0074(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB3AE714(_QWORD *a1)
{
  return sub_1BB3AE4CC(a1);
}

uint64_t sub_1BB3AE728()
{
  sub_1BB3AFE04();
  return sub_1BB86D96C();
}

uint64_t sub_1BB3AE790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  ValueMetadata *v66;
  unint64_t v67;
  uint64_t v68;

  v53 = a2;
  v46 = a3;
  v47 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v52 = type metadata accessor for GroupLayoutBindingContext();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v57 = a1;
  sub_1BA4C2DD8(a1, v50, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v49 = sub_1BB86C8C8();
  v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v47);
  v66 = &type metadata for A12_V19;
  v20 = sub_1BA8EE490();
  v67 = v20;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v22;
  v62 = 95;
  v63 = 0xE100000000000000;
  v60 = 45;
  v61 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v48;
  *v26 = v49;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v64, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  sub_1BA7C2538(v16, v17);
  v66 = &type metadata for A12_V19;
  v67 = v20;
  v30 = v56;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  sub_1BA4C2DD8(v53, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v31 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v31 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v31 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v68;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E726A128, 0, 0, v31, 0, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    v41 = v39;
    swift_release();
    v42 = type metadata accessor for A12_V19.Bound();
    v43 = v46;
    v46[3] = v42;
    v43[4] = sub_1BA4A2870(qword_1EF2C29C0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V19.Bound, (uint64_t)&unk_1BB90FD70);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v64, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v42 + 28)) = v41;
  }
  return result;
}

uint64_t sub_1BB3AECA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _QWORD v28[2];
  __int128 v29;
  _BYTE *v30;
  uint64_t v31;
  _QWORD v32[4];
  uint64_t v33;
  char v34[105];
  __int128 v35[2];
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[6];

  v2 = v1;
  v30 = a1;
  *(_QWORD *)&v29 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A12_V19.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v36);
  sub_1BA4C010C(v9 + 56, (uint64_t)v35);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v36, inited + 16);
  sub_1BA4CECCC(v35, inited + 56);
  *(double *)(inited + 96) = v11;
  v34[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v34, v40);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v32[2] = v2;
  v32[3] = v40;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v32, v13, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = v14;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v15;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v28[1] = v16;
  v17 = sub_1BB8730F0();
  v18 = *MEMORY[0x1E0DB5D88];
  v19 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v29);
  v31 = v17;
  sub_1BB3AFEA8(0, &qword_1EF2C2A68, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v20 = sub_1BB86DB40();
  v29 = v36;
  v21 = v37;
  v22 = v38;
  *(_QWORD *)&v36 = v14;
  *(_QWORD *)&v35[0] = v39;
  MEMORY[0x1E0C80A78](v20);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v23 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = v23;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v24 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v25 = v30;
  *v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((_QWORD *)v25 + 3) = v21;
  *((_QWORD *)v25 + 4) = v22;
  v26 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v25 + 5) = v24;
  *((_QWORD *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1BB3AF0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2C2A80, (uint64_t (*)(void))sub_1BB3AFDC0, (uint64_t)&type metadata for A12_V19.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 12;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB3AFEA8(0, &qword_1EF2C2A88, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB3AFE68(&qword_1EF2C2A90, &qword_1EF2C2A88, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BB3AF228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, _QWORD *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1BA4CDF6C(0, &qword_1EF2C2A80, (uint64_t (*)(void))sub_1BB3AFDC0, (uint64_t)&type metadata for A12_V19.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v21 - v7);
  v26 = a2;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = sub_1BB86D438();
    v28 = a1;
    v24 = v10;
    v23 = *MEMORY[0x1E0DB5A38];
    v22 = *MEMORY[0x1E0DB6318];
    HIDWORD(v21) = *MEMORY[0x1E0DB63C0];
    swift_bridgeObjectRetain();
    v11 = 0;
    v25 = v9;
    v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    do
    {
      ++v11;
      v29 = v28;
      v13 = v24;
      v14 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, v23, v13);
      *v8 = v14;
      v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
      v16(v8, v22, v5);
      sub_1BB3AFEA8(0, &qword_1EF2C2A98, v12);
      v27 = v17;
      sub_1BB3AFE68(&qword_1EF2C2AA0, &qword_1EF2C2A98, v12, MEMORY[0x1E0DB5A18]);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v18 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
      v18(v8, v5);
      v29 = v28;
      v19 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v16)(v8, HIDWORD(v21), v5);
      MEMORY[0x1E0C80A78](v19);
      sub_1BB86D498();
      v20 = v25;
      v18(v8, v5);
      swift_bridgeObjectRelease();
    }
    while (v20 != v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1BB3AF490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, _QWORD *);
  uint64_t (*v17)(uint64_t, _QWORD *);
  _BYTE v18[12];
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;

  sub_1BA4CDF6C(0, &qword_1EF2C2A80, (uint64_t (*)(void))sub_1BB3AFDC0, (uint64_t)&type metadata for A12_V19.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v18[-v7];
  v21 = a2;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v11 = v21 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v20 = *(_QWORD *)(v10 + 72);
    v19 = *MEMORY[0x1E0DB63F8];
    swift_bridgeObjectRetain();
    do
    {
      v23 = a1;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 6;
      *v8 = v12;
      v13 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, v19, v5);
      v22 = v18;
      MEMORY[0x1E0C80A78](v13);
      v14 = v5;
      v15 = v6;
      v16 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB3AFEA8(0, &qword_1EF2C2A98, MEMORY[0x1E0DB5A10]);
      v17 = v16;
      v6 = v15;
      v5 = v14;
      sub_1BB3AFE68(&qword_1EF2C2AA0, &qword_1EF2C2A98, v17, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4BC();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v14);
      v11 += v20;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB3AF698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a3;
  v5 = type metadata accessor for HeadlineViewLayout.Context(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v38);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C2A80, (uint64_t (*)(void))sub_1BB3AFDC0, (uint64_t)&type metadata for A12_V19.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v35 - v14);
  v42 = a1;
  KeyPath = swift_getKeyPath();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0x4060E00000000000;
  *v15 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB6330], v12);
  v18 = *(_QWORD *)(v41 + 16);
  v39 = KeyPath;
  v40 = v13;
  if (v18)
  {
    v36 = a2;
    v37 = v12;
    v19 = v41 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v20 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v19, (uint64_t)v8, type metadata accessor for HeadlineViewLayout.Context);
      v21 = *(_QWORD *)&v8[*(int *)(v5 + 20) + 32];
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for HeadlineViewLayout.Context);
      if ((v21 & 4) == 0)
        break;
      v19 += v20;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v18 = 2;
LABEL_7:
    a2 = v36;
    v12 = v37;
  }
  v22 = v38;
  v23 = (char *)v10 + *(int *)(v38 + 20);
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void *)*MEMORY[0x1E0DC4918];
  *v10 = v18;
  *(uint64_t *)((char *)v10 + *(int *)(v22 + 24)) = 0;
  *(uint64_t *)((char *)v10 + *(int *)(v22 + 28)) = (uint64_t)v27;
  v28 = *MEMORY[0x1E0DC49E8];
  v29 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
  v30 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
  v31 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  v32 = v27;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(a2, (uint64_t)v10, v28, v29, v30, v31);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB3AFEA8(0, &qword_1EF2C2A98, MEMORY[0x1E0DB5A10]);
  sub_1BB3AFE68(&qword_1EF2C2AA0, &qword_1EF2C2A98, v33, MEMORY[0x1E0DB5A18]);
  sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v40 + 8))(v15, v12);
}

uint64_t sub_1BB3AF9F4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V19.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB3AFAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB3AE790(a1, a2, a3);
}

uint64_t sub_1BB3AFAE8()
{
  return sub_1BB690A34();
}

unint64_t sub_1BB3AFAF8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB3AFB24();
  result = sub_1BB3AFB68();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB3AFB24()
{
  unint64_t result;

  result = qword_1EF2C29B0;
  if (!qword_1EF2C29B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FCBC, &type metadata for A12_V19);
    atomic_store(result, (unint64_t *)&qword_1EF2C29B0);
  }
  return result;
}

unint64_t sub_1BB3AFB68()
{
  unint64_t result;

  result = qword_1EF2C29B8;
  if (!qword_1EF2C29B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FCE4, &type metadata for A12_V19);
    atomic_store(result, (unint64_t *)&qword_1EF2C29B8);
  }
  return result;
}

uint64_t type metadata accessor for A12_V19.Bound()
{
  uint64_t result;

  result = qword_1EF2C2A20;
  if (!qword_1EF2C2A20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB3AFBE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3AFBF4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB3AFC70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB3AFC7C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB3AFCF0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB3AFD7C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C2A60, (uint64_t (*)(uint64_t))type metadata accessor for A12_V19.Bound, (uint64_t)&unk_1BB90FD48);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3AFDB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3AF0D0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB3AFDC0()
{
  unint64_t result;

  result = qword_1EF2C2A70;
  if (!qword_1EF2C2A70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FEA0, &type metadata for A12_V19.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C2A70);
  }
  return result;
}

unint64_t sub_1BB3AFE04()
{
  unint64_t result;

  result = qword_1EF2C2A78;
  if (!qword_1EF2C2A78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FE70, &type metadata for A12_V19.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2A78);
  }
  return result;
}

uint64_t sub_1BB3AFE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB3AF9F4(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB3AFE50()
{
  return swift_deallocObject();
}

void sub_1BB3AFE60(uint64_t a1)
{
  uint64_t v1;

  sub_1BB3AF228(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB3AFE68(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB3AFEA8(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB3AFEA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V19.Layout;
    v8[1] = &type metadata for A12_V19.Layout.Attributes;
    v8[2] = sub_1BB3AFDC0();
    v8[3] = sub_1BB3AFE04();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB3AFF24(uint64_t a1)
{
  uint64_t v1;

  sub_1BB3AF490(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB3AFF2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3AF698(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for A12_V19.Layout.Attributes()
{
  return &type metadata for A12_V19.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V19.Layout()
{
  return &type metadata for A12_V19.Layout;
}

unint64_t sub_1BB3AFF58()
{
  unint64_t result;

  result = qword_1EF2C2AA8;
  if (!qword_1EF2C2AA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FE10, &type metadata for A12_V19.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AA8);
  }
  return result;
}

unint64_t sub_1BB3AFFA0()
{
  unint64_t result;

  result = qword_1EF2C2AB0;
  if (!qword_1EF2C2AB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FDE8, &type metadata for A12_V19.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AB0);
  }
  return result;
}

unint64_t sub_1BB3AFFE8()
{
  unint64_t result;

  result = qword_1EF2C2AB8;
  if (!qword_1EF2C2AB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FDC0, &type metadata for A12_V19.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AB8);
  }
  return result;
}

unint64_t sub_1BB3B0030()
{
  unint64_t result;

  result = qword_1EF2C2AC0;
  if (!qword_1EF2C2AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FE38, &type metadata for A12_V19.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AC0);
  }
  return result;
}

uint64_t sub_1BB3B0074@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C2AC8, (uint64_t (*)(void))sub_1BB3B0288, (uint64_t)&type metadata for A12_V19.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3B0288();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB3B0288()
{
  unint64_t result;

  result = qword_1EF2C2AD0;
  if (!qword_1EF2C2AD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FF94, &type metadata for A12_V19.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V19.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3B0318 + 4 * byte_1BB90FCAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3B034C + 4 * byte_1BB90FCA8[v4]))();
}

uint64_t sub_1BB3B034C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B0354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3B035CLL);
  return result;
}

uint64_t sub_1BB3B0368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3B0370);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3B0374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B037C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V19.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V19.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB3B039C()
{
  unint64_t result;

  result = qword_1EF2C2AE0;
  if (!qword_1EF2C2AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FF6C, &type metadata for A12_V19.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AE0);
  }
  return result;
}

unint64_t sub_1BB3B03E4()
{
  unint64_t result;

  result = qword_1EF2C2AE8;
  if (!qword_1EF2C2AE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FEDC, &type metadata for A12_V19.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AE8);
  }
  return result;
}

unint64_t sub_1BB3B042C()
{
  unint64_t result;

  result = qword_1EF2C2AF0;
  if (!qword_1EF2C2AF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FF04, &type metadata for A12_V19.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2AF0);
  }
  return result;
}

uint64_t sub_1BB3B0470(uint64_t a1, uint64_t a2)
{
  return static OfflineModelProviding.poorConnection.getter(a1, a2);
}

uint64_t static OfflineModelProviding.poorConnection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BB3B04A8@<X0>(_QWORD *a1@<X8>)
{
  return static OfflineModelProviding.unsupportedRegion.getter(a1);
}

uint64_t static OfflineModelProviding.unsupportedRegion.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A70D0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF2BE278;
  v3 = qword_1EF2BE280;
  v4 = unk_1EF2BE288;
  v5 = qword_1EF2BE290;
  v6 = unk_1EF2BE298;
  v7 = qword_1EF2BE2A0;
  *a1 = qword_1EF2BE270;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of static OfflineModelProviding.deviceOffline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static OfflineModelProviding.poorConnection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static OfflineModelProviding.serverProblem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static OfflineModelProviding.updateRequired.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static OfflineModelProviding.deviceObsoletion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static OfflineModelProviding.unsupportedRegion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1BB3B0578@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1ED3A0EB0 != -1)
    swift_once();
  v2 = unk_1ED4764D0;
  v3 = qword_1ED4764D8;
  v4 = unk_1ED4764E0;
  v5 = qword_1ED4764E8;
  v6 = unk_1ED4764F0;
  v7 = qword_1ED4764F8;
  *a1 = qword_1ED4764C8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B0604@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A74A0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF3D0B18;
  v3 = qword_1EF3D0B20;
  v4 = unk_1EF3D0B28;
  v5 = qword_1EF3D0B30;
  v6 = unk_1EF3D0B38;
  v7 = qword_1EF3D0B40;
  *a1 = qword_1EF3D0B10;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1BB3B0CD0(a2);
  FormatResetNode.bindChildren(binder:context:)(a1, v3);
  return swift_release();
}

uint64_t FormatResetNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatResetNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.regexSelectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatResetNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatResetNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatResetNode.regexSelectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.regexSelectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatResetNode.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResetNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatResetNode.__allocating_init(identifier:selectors:regexSelectors:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v10[2] = a1;
  v10[3] = a2;
  swift_beginAccess();
  v10[4] = a3;
  swift_beginAccess();
  v10[5] = a4;
  swift_beginAccess();
  v10[6] = a5;
  return v10;
}

_QWORD *FormatResetNode.init(identifier:selectors:regexSelectors:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  swift_beginAccess();
  v5[2] = a1;
  v5[3] = a2;
  swift_beginAccess();
  v5[4] = a3;
  swift_beginAccess();
  v5[5] = a4;
  swift_beginAccess();
  v5[6] = a5;
  return v5;
}

uint64_t FormatResetNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatResetNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB3B0BA8(_QWORD *a1)
{
  return FormatResetNode.encode(to:)(a1);
}

uint64_t sub_1BB3B0BC8(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed15FormatResetNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB3B0BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  sub_1BB86DD80();
  v2 = *(_QWORD *)(*(_QWORD *)(v9 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
  {
    v8 = *(_QWORD *)(v9 + 56);
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1BA6E42A0(v3);
    sub_1BA6E3FB8(v4);
    swift_release();
    v5 = v8;
  }
  else
  {
    v5 = sub_1BA6E3F38();
    swift_release();
  }
  v6 = sub_1BB3B10D0(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    a1 = sub_1BA707E14(v6, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_1BB3B0CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  _OWORD v9[2];
  uint64_t v10;
  _OWORD v11[3];

  sub_1BB86DD80();
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v11[0] + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
  {
    *(_QWORD *)&v11[0] = *(_QWORD *)(*(_QWORD *)&v11[0] + 56);
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1BA6E42A0(v3);
    sub_1BA6E3FB8(v4);
    swift_release();
    v5 = *(_QWORD *)&v11[0];
  }
  else
  {
    v5 = sub_1BA6E3F38();
    swift_release();
  }
  v6 = sub_1BB3B10D0(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    memset(v11, 0, sizeof(v11));
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    memset(v8, 0, sizeof(v8));
    a1 = sub_1BA706104(0, 0, MEMORY[0x1E0DEE9D8], v6, 1, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)v11, (uint64_t)v9, (uint64_t *)v8);
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB179EB4);
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_1BB3B0E24(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C2AF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatResetNode, (uint64_t)&protocol conformance descriptor for FormatResetNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3B0E60(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3C7018, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatResetNode, (uint64_t)&protocol conformance descriptor for FormatResetNode);
  a1[2] = sub_1BA50AD30(&qword_1ED3A58B8, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatResetNode, (uint64_t)&protocol conformance descriptor for FormatResetNode);
  result = sub_1BA50AD30(&qword_1EF2C2B00, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatResetNode, (uint64_t)&protocol conformance descriptor for FormatResetNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB3B0ED8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C2B08, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatResetNode, (uint64_t)&protocol conformance descriptor for FormatResetNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3B0F14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1BB3B0CD0(a2);
  FormatResetNode.bindChildren(binder:context:)(a1, v3);
  return swift_release();
}

uint64_t sub_1BB3B0F6C(uint64_t a1)
{
  return sub_1BAC5095C(a1);
}

uint64_t sub_1BB3B0F8C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B0FD8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B1024@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B1070@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatResetNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatResetNode.__allocating_init(identifier:selectors:regexSelectors:children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BB3B10D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for FormatRegex();
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - v8;
  swift_beginAccess();
  v10 = *(_QWORD *)(v1 + 32);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    if (v11 <= *(_QWORD *)(a1 + 16) >> 3)
    {
      v29 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB024F00(v10);
      swift_bridgeObjectRelease();
      v12 = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_1BA4BDEF4(v10, a1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16))
      return 0;
    swift_bridgeObjectRetain();
    v12 = a1;
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(v2 + 40);
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_30:
    if ((sub_1BA6EB330(v12, a1) & 1) == 0)
      return v12;
    swift_bridgeObjectRelease();
    return 0;
  }
  v27 = a1;
  v14 = v13 + 56;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v13 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v20 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v18)
      goto LABEL_29;
    v25 = *(_QWORD *)(v14 + 8 * v20);
    if (!v25)
      break;
LABEL_24:
    v17 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_12:
    sub_1BB3B1504(*(_QWORD *)(v13 + 48) + *(_QWORD *)(v28 + 72) * v22, (uint64_t)v9);
    v23 = sub_1BA50DAFC((uint64_t)v9, (uint64_t)v6);
    MEMORY[0x1E0C80A78](v23);
    *(&v27 - 2) = (uint64_t)v6;
    v12 = sub_1BB3B1564((uint64_t)sub_1BB3B1548, (uint64_t)(&v27 - 4), v12);
    result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
  }
  v26 = v20 + 1;
  if (v20 + 1 >= v18)
    goto LABEL_29;
  v25 = *(_QWORD *)(v14 + 8 * v26);
  if (v25)
    goto LABEL_23;
  v26 = v20 + 2;
  if (v20 + 2 >= v18)
    goto LABEL_29;
  v25 = *(_QWORD *)(v14 + 8 * v26);
  if (v25)
    goto LABEL_23;
  v26 = v20 + 3;
  if (v20 + 3 >= v18)
  {
LABEL_29:
    swift_release();
    a1 = v27;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v14 + 8 * v26);
  if (v25)
  {
LABEL_23:
    v20 = v26;
    goto LABEL_24;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v18)
      goto LABEL_29;
    v25 = *(_QWORD *)(v14 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

BOOL sub_1BB3B13D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  _QWORD v9[2];

  sub_1BB3B18E4(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[1];
  v9[0] = *a1;
  v9[1] = v5;
  type metadata accessor for FormatRegex();
  sub_1BA4D82D0(0);
  sub_1BA8EC684();
  sub_1BA50AD30(&qword_1ED3A25C8, 255, (uint64_t (*)(uint64_t))sub_1BA4D82D0, MEMORY[0x1E0DF1F60]);
  sub_1BB8728BC();
  sub_1BB3B1900(0);
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1;
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BB3B18E4);
  return v7;
}

uint64_t sub_1BB3B1504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1BB3B1548(_QWORD *a1)
{
  return sub_1BB3B13D4(a1);
}

uint64_t sub_1BB3B1564(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(_QWORD *);
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = (uint64_t (*)(_QWORD *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a3 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_1BB3B16E0((uint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3)
      swift_willThrow();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = sub_1BB3B16E0((uint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x1BCCE5C38](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1BB3B16E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  int64_t v24;

  v20 = (unint64_t *)result;
  v7 = 0;
  v21 = 0;
  v22 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v16 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    swift_bridgeObjectRetain();
    v18 = a4(v23);
    result = swift_bridgeObjectRelease();
    if (v4)
      return result;
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v21++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    return sub_1BA6EBA94(v20, a2, v21, a3);
  }
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v24)
      goto LABEL_26;
    v14 = *(_QWORD *)(v22 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_1BB3B18E4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A25C0, (uint64_t (*)(uint64_t))sub_1BB3B1900, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB3B1900(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A25B8, MEMORY[0x1E0DF1E50], MEMORY[0x1E0DF1F30]);
}

uint64_t sub_1BB3B1920(_QWORD *a1)
{
  return FormatResize.encode(to:)(a1);
}

uint64_t _s8NewsFeed12FormatResizeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA8583F8(v4, v5);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_1BB3B19FC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3B1A20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3B1A20()
{
  unint64_t result;

  result = qword_1EF2C2B10;
  if (!qword_1EF2C2B10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResize, &type metadata for FormatResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B10);
  }
  return result;
}

unint64_t sub_1BB3B1A64(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA650B18();
  a1[2] = sub_1BAEE7E40();
  result = sub_1BB3B1A98();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3B1A98()
{
  unint64_t result;

  result = qword_1EF2C2B18;
  if (!qword_1EF2C2B18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResize, &type metadata for FormatResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B18);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatResize()
{
  return &type metadata for FormatResize;
}

uint64_t sub_1BB3B1AEC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t (*v27)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t);
  void *v28;
  id v29;
  char *v30;
  _QWORD *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  v8 = v7;
  v35 = v7;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v12;
  v14 = a1[3];
  v45 = a1[2];
  v13 = v45;
  v46 = v14;
  v47 = a1[4];
  v15 = v47;
  v48 = *((_QWORD *)a1 + 10);
  v17 = a1[1];
  v43 = *a1;
  v16 = v43;
  v44 = v17;
  v38 = a2;
  v39 = a3;
  *(_QWORD *)(a3 + 80) = v48;
  *(_OWORD *)(a3 + 32) = v13;
  *(_OWORD *)(a3 + 48) = v14;
  *(_OWORD *)(a3 + 64) = v15;
  *(_OWORD *)a3 = v16;
  *(_OWORD *)(a3 + 16) = v17;
  sub_1BA4C010C(a2, a3 + 88);
  sub_1BA4C010C(a2, (uint64_t)v40);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, 1, 1, v6);
  v18 = swift_allocObject();
  v19 = v46;
  *(_OWORD *)(v18 + 48) = v45;
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 80) = v47;
  *(_QWORD *)(v18 + 96) = v48;
  v20 = v44;
  *(_OWORD *)(v18 + 16) = v43;
  *(_OWORD *)(v18 + 32) = v20;
  sub_1BB3B35F8(0);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = 0xC04E000000000000;
  v22 = v41;
  v23 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v24 = *((_QWORD *)&v45 + 1);
  v26 = v46;
  v25 = v47;
  v27 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v23 + 8);
  sub_1BACB56D4((uint64_t)&v43);
  sub_1BACB56D4((uint64_t)&v43);
  v28 = (void *)v27(v24, v26, *((_QWORD *)&v26 + 1), v25, v22, v23);
  sub_1BACB5640((uint64_t)&v43);
  *(_QWORD *)&v21[*(_QWORD *)(*(_QWORD *)v21 + 120)] = v28;
  *(_QWORD *)&v21[*(_QWORD *)(*(_QWORD *)v21 + 136)] = v28;
  v29 = v28;
  v30 = v37;
  sub_1BB86C8A4();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v21[*(_QWORD *)(*(_QWORD *)v21 + 128)], v30, v34);
  LOBYTE(v24) = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v21[qword_1ED3B2F88] = v24;
  sub_1BA50236C((uint64_t)v36, (uint64_t)&v21[qword_1ED3B2F90]);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = sub_1BB3B35F0;
  v31[3] = v18;
  v31[4] = v29;
  *((_QWORD *)v21 + 3) = sub_1BB3B3688;
  *((_QWORD *)v21 + 4) = v31;
  result = __swift_destroy_boxed_opaque_existential_1(v38);
  *(_QWORD *)(v39 + 128) = v21;
  return result;
}

uint64_t GapOfflineViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t GapOfflineViewLayout.offlineLabelFrame.getter()
{
  return swift_retain();
}

double GapOfflineViewLayout.Attributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double GapOfflineViewLayout.Attributes.offlineLabelFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1BB3B1DD0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x656D617266;
}

uint64_t sub_1BB3B1E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB3B3310(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3B1E30()
{
  sub_1BB3B202C();
  return sub_1BB874710();
}

uint64_t sub_1BB3B1E58()
{
  sub_1BB3B202C();
  return sub_1BB87471C();
}

uint64_t GapOfflineViewLayout.Attributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_1BA4CDF6C(0, &qword_1EF2C2B20, (uint64_t (*)(void))sub_1BB3B202C, (uint64_t)&type metadata for GapOfflineViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  v16 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 5);
  v13 = *((_QWORD *)v1 + 6);
  v14 = *((_QWORD *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3B202C();
  sub_1BB8746C8();
  v17 = v16;
  v18 = v9;
  v19 = v10;
  v20 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v17 = v11;
    *((_QWORD *)&v17 + 1) = v12;
    v18 = v13;
    v19 = v14;
    v20 = 1;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BB3B202C()
{
  unint64_t result;

  result = qword_1ED3AC720;
  if (!qword_1ED3AC720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9104DC, &type metadata for GapOfflineViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC720);
  }
  return result;
}

uint64_t GapOfflineViewLayout.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v16 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3AC800, (uint64_t (*)(void))sub_1BB3B202C, (uint64_t)&type metadata for GapOfflineViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3B202C();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v16;
    type metadata accessor for CGRect(0);
    v19 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v10 = v17;
    v11 = v18;
    v19 = 1;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v17;
    v14 = v18;
    *v9 = v10;
    v9[1] = v11;
    v9[2] = v13;
    v9[3] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB3B2244()
{
  sub_1BB3B33F4();
  return sub_1BB870FF0();
}

uint64_t sub_1BB3B226C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return GapOfflineViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BB3B2280(_QWORD *a1)
{
  return GapOfflineViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1BB3B2294()
{
  sub_1BB184D60();
  return sub_1BB86D96C();
}

uint64_t GapOfflineViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t GapOfflineViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA75A650(v8, v9);
}

uint64_t GapOfflineViewLayout.Context.styler.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1 + 88, a1);
}

unint64_t sub_1BB3B2418()
{
  unint64_t result;

  result = qword_1ED3AC740;
  if (!qword_1ED3AC740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AC740);
  }
  return result;
}

unint64_t sub_1BB3B2460()
{
  unint64_t result;

  result = qword_1EF2C2B28;
  if (!qword_1EF2C2B28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B28);
  }
  return result;
}

unint64_t sub_1BB3B24A8()
{
  unint64_t result;

  result = qword_1ED3AC758;
  if (!qword_1ED3AC758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AC758);
  }
  return result;
}

unint64_t sub_1BB3B24F0()
{
  unint64_t result;

  result = qword_1ED3AC750;
  if (!qword_1ED3AC750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AC750);
  }
  return result;
}

unint64_t sub_1BB3B2538()
{
  unint64_t result;

  result = qword_1ED3AC738;
  if (!qword_1ED3AC738)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AC738);
  }
  return result;
}

uint64_t sub_1BB3B257C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 8))(a2[5], a2[6], a2[7], a2[8], v5, v6);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3B25D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1ED3AC670, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = &v12[-v8];
  v13 = a2;
  v14 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v6 + 104))(&v12[-v8], *MEMORY[0x1E0DB63C0], v5, v7);
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB3B350C(0, &qword_1ED3AC660, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB3B3440(&qword_1ED3AC658, &qword_1ED3AC660, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D498();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1BB3B270C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3AC670, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v19 - v6);
  v22 = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0x3FE8000000000000;
  *v7 = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6320], v4);
  sub_1BB3B3490();
  sub_1BA4CDF6C(0, &qword_1ED3AC650, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  v14 = v13 + v12;
  v15 = *MEMORY[0x1E0DB5C40];
  sub_1BA4CDF6C(0, &qword_1ED3AC648, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0DB5C68], v10);
  v21 = v20;
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB3B350C(0, &qword_1ED3AC640, MEMORY[0x1E0DB5A10]);
  sub_1BB3B3440(&qword_1ED3AC638, &qword_1ED3AC640, v17, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB3B294C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t (*v34)(uint64_t *, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t *, uint64_t);
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  void (*v42)(uint64_t *, _QWORD, uint64_t);
  uint64_t v43;

  v41 = a2;
  v3 = sub_1BB8726B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1ED3AC670, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v36 - v10);
  v43 = a1;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4034000000000000;
  *v11 = v12;
  v13 = *(void (**)(_QWORD))(v9 + 104);
  v40 = *MEMORY[0x1E0DB63F0];
  v42 = (void (*)(uint64_t *, _QWORD, uint64_t))v13;
  v13(v11);
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB3B350C(0, &qword_1ED3AC640, MEMORY[0x1E0DB5A10]);
  v16 = v15;
  v17 = sub_1BB3B3440(&qword_1ED3AC638, &qword_1ED3AC640, v14, MEMORY[0x1E0DB5A18]);
  v39 = v16;
  sub_1BB86D4EC();
  v18 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v18(v11, v8);
  v43 = a1;
  KeyPath = swift_getKeyPath();
  v19 = *(_QWORD *)(v41 + 128);
  if ((*(_BYTE *)(v19 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850),
        *v6 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF738], v3),
        v20 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3),
        (v20 & 1) != 0))
  {
    v22 = swift_allocObject();
    v23 = *(_QWORD *)(*(_QWORD *)v19 + 136);
    v41 = v17;
    v24 = *(void **)(v19 + v23);
    *(_QWORD *)(v22 + 16) = v24;
    *v11 = v22;
    v42(v11, *MEMORY[0x1E0DB6340], v8);
    sub_1BB3B3490();
    sub_1BA4CDF6C(0, &qword_1ED3AC650, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v26 = v25;
    v36 = v18;
    v37 = a1;
    v27 = *(_QWORD *)(v25 - 8);
    v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
    v30 = v29 + v28;
    v31 = *MEMORY[0x1E0DB5C40];
    sub_1BA4CDF6C(0, &qword_1ED3AC648, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v30, v31, v32);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v27 + 104))(v30, *MEMORY[0x1E0DB5C68], v26);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v33 = v24;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    v34 = (uint64_t (*)(uint64_t *, uint64_t))v36;
    v36(v11, v8);
    v43 = v37;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 0x4034000000000000;
    *v11 = v35;
    v42(v11, v40, v8);
    sub_1BB86D4EC();
    return v34(v11, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout()
{
  return &type metadata for GapOfflineViewLayout;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout.Attributes()
{
  return &type metadata for GapOfflineViewLayout.Attributes;
}

uint64_t destroy for GapOfflineViewLayout.Context(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) >= 0x11uLL)
    swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  return swift_release();
}

uint64_t initializeWithCopy for GapOfflineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = (_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >= 0x11)
  {
    *(_QWORD *)(a1 + 72) = *v8;
    *(_QWORD *)(a1 + 80) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
  }
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 88, a2 + 88);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GapOfflineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) >= 0x11uLL)
  {
    if (v5 >= 0x11)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA905D68(a1 + 72);
    goto LABEL_6;
  }
  if (v5 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GapOfflineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 80) >= 0x11uLL)
  {
    v9 = *(_QWORD *)(a2 + 80);
    if (v9 >= 0x11)
    {
      *(_QWORD *)(a1 + 72) = *v8;
      *(_QWORD *)(a1 + 80) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA905D68(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAdMetricsNodeLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout.Context()
{
  return &type metadata for GapOfflineViewLayout.Context;
}

uint64_t storeEnumTagSinglePayload for GapOfflineViewLayout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3B31B8 + 4 * byte_1BB910235[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3B31EC + 4 * asc_1BB910230[v4]))();
}

uint64_t sub_1BB3B31EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B31F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3B31FCLL);
  return result;
}

uint64_t sub_1BB3B3208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3B3210);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3B3214(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B321C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GapOfflineViewLayout.Attributes.CodingKeys()
{
  return &type metadata for GapOfflineViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1BB3B323C()
{
  unint64_t result;

  result = qword_1EF2C2B30;
  if (!qword_1EF2C2B30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9104B4, &type metadata for GapOfflineViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B30);
  }
  return result;
}

unint64_t sub_1BB3B3284()
{
  unint64_t result;

  result = qword_1ED3AC730;
  if (!qword_1ED3AC730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910424, &type metadata for GapOfflineViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC730);
  }
  return result;
}

unint64_t sub_1BB3B32CC()
{
  unint64_t result;

  result = qword_1ED3AC728;
  if (!qword_1ED3AC728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91044C, &type metadata for GapOfflineViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC728);
  }
  return result;
}

uint64_t sub_1BB3B3310(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB98ABC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BB3B33F4()
{
  unint64_t result;

  result = qword_1EF2C2B38;
  if (!qword_1EF2C2B38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B38);
  }
  return result;
}

uint64_t sub_1BB3B3438(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3B270C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB3B3440(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB3B350C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB3B3480()
{
  return swift_deallocObject();
}

void sub_1BB3B3490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC808)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AC650, (uint64_t (*)(void))sub_1BB184D1C, (uint64_t)&type metadata for GapOfflineViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC808);
  }
}

uint64_t sub_1BB3B3504(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3B294C(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BB3B350C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for GapOfflineViewLayout;
    v8[1] = &type metadata for GapOfflineViewLayout.Attributes;
    v8[2] = sub_1BB184D1C();
    v8[3] = sub_1BB184D60();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB3B3588()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB3B35AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3B35F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3B257C(a1, (_QWORD *)(v2 + 16), a2);
}

void sub_1BB3B35F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B3020)
  {
    v2 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9860);
    v5 = type metadata accessor for CachedText(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B3020);
  }
}

uint64_t sub_1BB3B365C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_1BB3B3688@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1BB739698(a1, *(void (**)(_OWORD *__return_ptr, _BYTE *))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t FormatItemNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.styles.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatItemNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatItemNode.sourceItems.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B37C8(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = v1[4];
  v4 = v1[5];
  swift_beginAccess();
  v5 = v1[2];
  v6 = v1[3];
  swift_beginAccess();
  v7 = v1[12];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3D8B14(v3, v4, 1, v5, v6, v7, a1, v1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatItemNode.blocks.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 104);
}

uint64_t FormatItemNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatItemNode.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FormatItemNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatItemNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatItemNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.styles.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.styles.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.blocks.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.blocks.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatItemNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB3B3D3C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 112);
  *(_QWORD *)(v3 + 112) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatItemNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatItemNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatItemNode.sourceItems.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNode.sourceItems.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *sub_1BB3B3E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14)
{
  _QWORD *v14;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v21 = *a5;
  v22 = *a6;
  v24 = *a13;
  swift_beginAccess();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = v21;
  v14[7] = v22;
  swift_beginAccess();
  v14[8] = a7;
  swift_beginAccess();
  v14[9] = a8;
  swift_beginAccess();
  v14[10] = a9;
  swift_beginAccess();
  v14[11] = a10;
  swift_beginAccess();
  v14[12] = a11;
  swift_beginAccess();
  v14[13] = a12;
  swift_beginAccess();
  v14[14] = v24;
  swift_beginAccess();
  v14[15] = a14;
  return v14;
}

uint64_t FormatItemNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatItemNode.__deallocating_deinit()
{
  FormatItemNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB3B40AC(_QWORD *a1, _QWORD *a2)
{
  return static FormatItemNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB3B40B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v19;

  v8 = *a1;
  v9 = a3[7];
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    swift_retain();
  }
  else
  {
    v10 = 0;
  }
  v12 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v11 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86DD80();
  swift_beginAccess();
  v13 = a3[13];
  swift_beginAccess();
  v14 = a3[14];
  type metadata accessor for FormatItemNodeLayoutAttributes();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v8;
  v15[3] = a2;
  v15[4] = v10;
  v15[5] = v12;
  v15[6] = v11;
  v15[7] = v19;
  v15[8] = v13;
  v15[9] = v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *a5 = v16;
  sub_1BA67D3F4(v14);
  return swift_retain();
}

uint64_t sub_1BB3B41EC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C2B40, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNode, (uint64_t)&protocol conformance descriptor for FormatItemNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3B4228(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BCF68, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNode, (uint64_t)&protocol conformance descriptor for FormatItemNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39F928, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNode, (uint64_t)&protocol conformance descriptor for FormatItemNode);
  result = sub_1BA50AD30(&qword_1EF2C2B48, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNode, (uint64_t)&protocol conformance descriptor for FormatItemNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB3B42A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C2B50, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNode, (uint64_t)&protocol conformance descriptor for FormatItemNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3B42DC(uint64_t a1, _QWORD *a2)
{
  return FormatItemNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BB3B42FC(unint64_t a1)
{
  return sub_1BB3B37C8(a1);
}

uint64_t sub_1BB3B431C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B4368@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B43B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B4400@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B444C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B4498@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B44E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 104);
  return result;
}

uint64_t sub_1BB3B4528(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 104) = v2;
  return result;
}

unint64_t sub_1BB3B4568@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 112);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB3B45B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatItemNode()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB3B460C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB3B4630()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

void sub_1BB3B4660(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[0] = a2;
  v11 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v11);
  if (*(_QWORD *)(a1 + 16))
  {
    v8[4] = 0;
    v9 = 0;
    v8[3] = 0;
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    sub_1BB3B4954(v5, (uint64_t)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    v6 = (char *)&loc_1BB3B4760 + *((int *)qword_1BB3B4938 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v9 = 0;
  v7 = (_QWORD *)v8[0];
  *(_QWORD *)v8[0] = 0;
  v7[1] = 0;
  v7[2] = v9;
  v7[3] = 0;
  v7[4] = 0;
  v7[5] = 0;
  v7[6] = 0;
}

uint64_t sub_1BB3B4954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataVisualizationResponseItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3B4998(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsDataVisualizationResponseItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB3B49D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatFloatBinding.init(from:)(a1, a2);
}

uint64_t sub_1BB3B49EC(_QWORD *a1)
{
  return FormatFloatBinding.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatFloatBindingO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v8;

  v2 = *a1;
  v3 = *a2;
  v4 = (v2 >> 5) & 3;
  if (v4)
  {
    if (v4 == 1)
    {
      v5 = v3 & 0x60;
      v6 = ((v3 ^ v2) & 0x9F) == 0;
      return v5 == 32 && v6;
    }
    if ((v3 & 0x60) == 0x40)
    {
      if ((v2 & 0x80) != 0)
      {
        if ((v3 & 0x80) != 0 && ((v3 ^ v2) & 0x1F) == 0)
          return 1;
      }
      else if ((v3 & 0x80) == 0 && ((v3 ^ v2) & 1) == 0)
      {
        return 1;
      }
    }
    return 0;
  }
  v8 = ((v3 ^ v2) & 1) == 0;
  return (v3 & 0x60) == 0 && v8;
}

unint64_t sub_1BB3B4A94(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3B4AB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3B4AB8()
{
  unint64_t result;

  result = qword_1EF2C2B58;
  if (!qword_1EF2C2B58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFloatBinding, &type metadata for FormatFloatBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B58);
  }
  return result;
}

unint64_t sub_1BB3B4AFC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE83F4C();
  a1[2] = sub_1BAEEDD64();
  result = sub_1BB3B4B30();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3B4B30()
{
  unint64_t result;

  result = qword_1EF2C2B60;
  if (!qword_1EF2C2B60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFloatBinding, &type metadata for FormatFloatBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFloatBinding(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xE)
    goto LABEL_17;
  if (a2 + 242 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 242) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 242;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 242;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 242;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0xC | (*a1 >> 5) & 3) ^ 0xF;
  if (v6 >= 0xD)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatFloatBinding(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 242 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 242) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3B4C60 + 4 * byte_1BB910795[v4]))();
  *a1 = a2 - 14;
  return ((uint64_t (*)(void))((char *)sub_1BB3B4C94 + 4 * byte_1BB910790[v4]))();
}

uint64_t sub_1BB3B4C94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B4C9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3B4CA4);
  return result;
}

uint64_t sub_1BB3B4CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3B4CC4);
  *(_BYTE *)result = 8 * ((((-a2 >> 2) & 3) - 4 * a2) & 0xF);
  return result;
}

uint64_t sub_1BB3B4CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B4CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B4CDC(unsigned __int8 *a1)
{
  return (*a1 >> 5) & 3;
}

_BYTE *sub_1BB3B4CE8(_BYTE *result)
{
  *result &= 0x9Fu;
  return result;
}

_BYTE *sub_1BB3B4CF8(_BYTE *result, char a2)
{
  *result = *result & 0x87 | (32 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for FormatFloatBinding()
{
  return &type metadata for FormatFloatBinding;
}

uint64_t IssueCoverImageProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double IssueCoverImageProcessorRequest.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double IssueCoverImageProcessorRequest.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

__n128 IssueCoverImageProcessorRequest.corners.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 72);
  result = *(__n128 *)(v1 + 56);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t IssueCoverImageProcessorRequest.assetHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IssueCoverImageProcessorRequest.__allocating_init(assetHandle:size:scale:corners:)(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  v14 = sub_1BB3B5284(v13, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v14;
}

uint64_t IssueCoverImageProcessorRequest.init(assetHandle:size:scale:corners:)(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v17 + 16))(v16, v14);
  v18 = sub_1BB3B5020(a3, a4, a5, (uint64_t)v16, a2, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v18;
}

uint64_t IssueCoverImageProcessorRequest.Corners.init(cornerRadius:roundedCorners:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double v3;
  uint64_t v4;

  v3 = a3;
  if (a3 > 0.0)
  {
    v4 = result;
  }
  else
  {
    v3 = 0.0;
    v4 = 0;
  }
  *(double *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = a3 <= 0.0;
  return result;
}

uint64_t IssueCoverImageProcessorRequest.Corners.description.getter()
{
  uint64_t v0;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return 0x657261757173;
  sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  sub_1BB87420C();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  return 0x3A3A646E756F72;
}

uint64_t IssueCoverImageProcessorRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return v0;
}

uint64_t IssueCoverImageProcessorRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB3B5014()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3B5020(double a1, double a2, double a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t inited;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28[5];

  v28[3] = a7;
  v28[4] = a8;
  __swift_allocate_boxed_opaque_existential_0(v28);
  (*(void (**)(void))(*(_QWORD *)(a7 - 8) + 32))();
  v15 = *a5;
  v14 = a5[1];
  v16 = *((_BYTE *)a5 + 16);
  sub_1BB3B53A8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x616D497265766F63;
  *(_QWORD *)(inited + 40) = 0xEA00000000006567;
  sub_1BA4C010C((uint64_t)v28, inited + 48);
  *(_QWORD *)(a6 + 80) = sub_1BA739C1C(inited);
  sub_1BA4C010C((uint64_t)v28, a6 + 88);
  *(double *)(a6 + 32) = a1;
  *(double *)(a6 + 40) = a2;
  *(double *)(a6 + 48) = a3;
  *(_QWORD *)(a6 + 56) = v15;
  *(_QWORD *)(a6 + 64) = v14;
  *(_BYTE *)(a6 + 72) = v16;
  sub_1BB86FA84();
  sub_1BB872AFC(v18);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v19);
  type metadata accessor for CGSize(0);
  sub_1BB873E34();
  sub_1BB872AFC(v20);
  sub_1BB872FDC();
  sub_1BB872AFC(v21);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v22);
  if ((v16 & 1) == 0)
  {
    sub_1BB872FDC();
    sub_1BB872AFC(v24);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v25);
    sub_1BB87420C();
    sub_1BB872AFC(v26);
    swift_bridgeObjectRelease();
  }
  sub_1BB872AFC(v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return a6;
}

uint64_t sub_1BB3B5284(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a7);
  return sub_1BB3B5020(a3, a4, a5, (uint64_t)v17, a2, v18, a7, a8);
}

uint64_t type metadata accessor for IssueCoverImageProcessorRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for IssueCoverImageProcessorRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IssueCoverImageProcessorRequest.__allocating_init(assetHandle:size:scale:corners:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for IssueCoverImageProcessorRequest.Corners()
{
  return &type metadata for IssueCoverImageProcessorRequest.Corners;
}

uint64_t dispatch thunk of IssueCoverImageRequestProviding.issueCoverImageRequests(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_1BB3B53A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9FB8)
  {
    sub_1BA81E240();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9FB8);
  }
}

ValueMetadata *type metadata accessor for A6_V4()
{
  return &type metadata for A6_V4;
}

uint64_t sub_1BB3B540C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C2B68, (uint64_t (*)(void))sub_1BA81EB58, (uint64_t)&type metadata for A6_V4.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA81EB58();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB3B55C0()
{
  sub_1BA81EB58();
  return sub_1BB874710();
}

uint64_t sub_1BB3B55E8()
{
  sub_1BA81EB58();
  return sub_1BB87471C();
}

uint64_t sub_1BB3B5610(_QWORD *a1)
{
  return sub_1BB3B540C(a1);
}

uint64_t sub_1BB3B5624()
{
  sub_1BA4F5A24();
  return sub_1BB86D96C();
}

uint64_t sub_1BB3B568C()
{
  return sub_1BB690BC0();
}

uint64_t sub_1BB3B569C()
{
  return swift_deallocObject();
}

uint64_t sub_1BB3B56AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB3B56D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3B56DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB3B5758()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB3B5764(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB3B57D8()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for A6_V4.Layout.Attributes()
{
  return &type metadata for A6_V4.Layout.Attributes;
}

uint64_t storeEnumTagSinglePayload for A6_V4.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3B5844 + 4 * byte_1BB910985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3B5878 + 4 * byte_1BB910980[v4]))();
}

uint64_t sub_1BB3B5878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B5880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3B5888);
  return result;
}

uint64_t sub_1BB3B5894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3B589CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3B58A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B58A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A6_V4.Layout.Attributes.CodingKeys()
{
  return &type metadata for A6_V4.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB3B58C8()
{
  unint64_t result;

  result = qword_1EF2C2B70;
  if (!qword_1EF2C2B70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910C44, &type metadata for A6_V4.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B70);
  }
  return result;
}

uint64_t FormatContentSizeCategory.groupLayoutContentSizeCategory.getter()
{
  _BYTE *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB3B5930 + 4 * byte_1BB910CC0[*v0 >> 5]))();
}

id sub_1BB3B5930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void **v2;
  void *v3;

  v2 = (void **)qword_1E73086C0[v1];
  v3 = *v2;
  *(_QWORD *)a1 = *v2;
  *(_BYTE *)(a1 + 8) = 0;
  return v3;
}

id sub_1BB3B594C@<X0>(uint64_t a1@<X8>)
{
  char v1;
  void *v2;

  v2 = *(void **)qword_1E73086C0[v1 & 0x1F];
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 1;
  return v2;
}

id sub_1BB3B5970@<X0>(uint64_t a1@<X8>)
{
  char v1;
  void *v2;

  v2 = *(void **)qword_1E73086C0[v1 & 0x1F];
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 2;
  return v2;
}

id sub_1BB3B5994@<X0>(uint64_t a1@<X8>)
{
  char v1;
  void *v2;

  v2 = *(void **)qword_1E73086C0[v1 & 0x1F];
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 3;
  return v2;
}

id sub_1BB3B59B8@<X0>(uint64_t a1@<X8>)
{
  char v1;
  void *v2;

  v2 = *(void **)qword_1E73086C0[v1 & 0x1F];
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 4;
  return v2;
}

id sub_1BB3B59DC@<X0>(uint64_t a1@<X8>)
{
  char v1;
  void *v2;

  v2 = *(void **)qword_1E73086C0[v1 & 0x1F];
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 5;
  return v2;
}

void sub_1BB3B5A34()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3B5A6C@<X0>(char a1@<W8>)
{
  id v1;
  char v2;
  char v4;

  v4 = a1;
  v1 = (id)sub_1BB3F0078(&v4);
  v2 = sub_1BB87351C();

  return v2 & 1;
}

uint64_t sub_1BB3B5C6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA80EFFC(*a1);
  v5 = v4;
  if (v3 == sub_1BA80EFFC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB3B5CF4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA80EFFC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3B5D54()
{
  unsigned __int8 *v0;

  sub_1BA80EFFC(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3B5D94()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA80EFFC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3B5DF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB3B64DC();
  *a1 = result;
  return result;
}

uint64_t sub_1BB3B5E1C()
{
  sub_1BA4C5CC8();
  return sub_1BB872D60();
}

void FormatContentSizeCategory.description.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3B5EA8()
{
  _QWORD *v0;

  FormatContentSizeCategoryValue.rawValue.getter();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  return 0x616854207373654CLL;
}

void sub_1BB3B5FE8()
{
  JUMPOUT(0x1BB3B5FD8);
}

void _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BB3B6070@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 > 0x1F)
  {
    v5 = 0;
  }
  else
  {
    v1 = FormatContentSizeCategoryValue.rawValue.getter();
    v3 = v2;
    if (v1 == FormatContentSizeCategoryValue.rawValue.getter() && v3 == v4)
      v5 = 1;
    else
      v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

unint64_t sub_1BB3B623C()
{
  unint64_t result;

  result = qword_1ED3C42C0;
  if (!qword_1ED3C42C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910F04, &type metadata for FormatContentSizeCategory.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3C42C0);
  }
  return result;
}

unint64_t sub_1BB3B6280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4138;
  if (!qword_1ED3C4138)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3C4140, (uint64_t (*)(void))sub_1BAEE4ECC, (uint64_t)&type metadata for FormatContentSizeCategoryValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4138);
  }
  return result;
}

unint64_t sub_1BB3B62E8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5EF8B0();
  a1[2] = sub_1BA785D18();
  result = sub_1BB3B631C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3B631C()
{
  unint64_t result;

  result = qword_1EF2C2B78;
  if (!qword_1EF2C2B78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategory, &type metadata for FormatContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B78);
  }
  return result;
}

uint64_t sub_1BB3B6360(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 <= 0xBF)
    return v1 >> 5;
  else
    return (v1 & 0x1F) + 6;
}

_BYTE *sub_1BB3B637C(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *sub_1BB3B638C(_BYTE *result, unsigned int a2)
{
  if (a2 < 6)
    *result = *result & 0x1F | (32 * a2);
  else
    *result = (a2 + 26) & 0x1F | 0xC0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategory()
{
  return &type metadata for FormatContentSizeCategory;
}

uint64_t storeEnumTagSinglePayload for FormatContentSizeCategory.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BB3B6414 + 4 * byte_1BB910D26[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BB3B6448 + 4 * byte_1BB910D21[v4]))();
}

uint64_t sub_1BB3B6448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B6450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3B6458);
  return result;
}

uint64_t sub_1BB3B6464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3B646CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BB3B6470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3B6478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategory.CodingType()
{
  return &type metadata for FormatContentSizeCategory.CodingType;
}

unint64_t sub_1BB3B6498()
{
  unint64_t result;

  result = qword_1EF2C2B80;
  if (!qword_1EF2C2B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB910EB4, &type metadata for FormatContentSizeCategory.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C2B80);
  }
  return result;
}

uint64_t sub_1BB3B64DC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF)
    return 15;
  else
    return v0;
}

id sub_1BB3B6524(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  Class v8;
  id v9;
  id v10;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_sourceMetrics] = 0;
  v4 = OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)&v1[v4] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_editor] = a1;
  type metadata accessor for DebugFormatFileTreeModel();
  swift_allocObject();
  swift_retain();
  v6 = v1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_model] = sub_1BB26C5F0(a1, MEMORY[0x1E0DEE9D8], 1);
  sub_1BB3B7710();
  swift_retain_n();
  v13 = sub_1BB87228C();
  v14 = v7;
  sub_1BB230D94();
  v9 = objc_allocWithZone(v8);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_fileViewController] = sub_1BB872370();

  v12.receiver = v6;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E470();
  swift_release();
  swift_release();

  swift_release();
  return v10;
}

uint64_t sub_1BB3B66C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v4[16];

  sub_1BA5193C4(a2, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA5193C4((uint64_t)v4, (uint64_t)&v3, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  sub_1BA6A0C50(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  swift_retain();
  return sub_1BB87189C();
}

id sub_1BB3B681C()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  v6 = objc_msgSend(v1, sel_navigationItem);
  v7 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
  sub_1BB80F468(v6, (uint64_t)v7);

  v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_fileViewController];
  objc_msgSend(v1, sel_addChildViewController_, v8);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = result;
  result = objc_msgSend(v8, sel_view);
  if (result)
  {
    v10 = result;
    objc_msgSend(v9, sel_addSubview_, result);

    objc_msgSend(v8, sel_didMoveToParentViewController_, v1);
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E470();
    swift_release();
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E4B8();
    return (id)swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB3B6A50()
{
  return sub_1BB3B6A70();
}

uint64_t sub_1BB3B6A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[16];
  uint64_t v51[16];
  uint64_t v52[16];
  uint64_t v53[17];
  _OWORD v54[8];

  v1 = v0;
  v2 = type metadata accessor for DebugFormatCacheFile();
  v46 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1EF2A9CE0, v5);
  MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v48 = (uint64_t)v43 - v9;
  sub_1BA4A3FB4(0, &qword_1EF2C2BD8, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v43 - v11;
  v13 = type metadata accessor for DebugFormatCompilerResultEntry();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v49 = (uint64_t)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v16 = *(_QWORD *)&v54[0];
  if (!*(_QWORD *)&v54[0])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)&v54[0] = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1BB87189C();
    sub_1BA8EBB18(v54);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BA5193C4((uint64_t)v54, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
    swift_retain();
    return sub_1BB87189C();
  }
  v44 = v2;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v17 = *((_QWORD *)&v54[0] + 1);
  v47 = v16;
  v18 = swift_retain();
  v19 = sub_1BB37D89C(v18, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v47;
  swift_release();
  if (v19)
  {
    if (*(_QWORD *)(v19 + 16))
    {
      sub_1BA4C2DD8(v19 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v21, 1, v13);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v34 = v49;
      sub_1BA5193C4((uint64_t)v12, v49, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      swift_bridgeObjectRetain();
      v35 = sub_1BB54EBCC();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      v52[0] = v35;
      swift_retain();
      sub_1BB87189C();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1BB871890();
      swift_release();
      swift_release();
      sub_1BA5193C4((uint64_t)v52, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
      sub_1BA5193C4((uint64_t)v53, (uint64_t)v54, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
      if (sub_1BA8CF120((uint64_t)v54) == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1BA5193C4((uint64_t)v53, (uint64_t)v52, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
        swift_retain();
        sub_1BB87189C();
      }
      else
      {
        v37 = *(_QWORD *)(v34 + *(int *)(v13 + 28));
        if (*(_QWORD *)(v37 + 16))
        {
          v38 = v54[0];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v39 = sub_1BA6E35A8(v38, *((uint64_t *)&v38 + 1));
          if ((v40 & 1) != 0)
          {
            v41 = v46;
            v42 = v48;
            sub_1BA4C2DD8(*(_QWORD *)(v37 + 56) + *(_QWORD *)(v46 + 72) * v39, v48, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v44);
          }
          else
          {
            v42 = v48;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v48, 1, 1, v44);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v42 = v48;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v48, 1, 1, v44);
        }
        memset(v50, 0, 32);
        memset(v51, 0, 40);
        sub_1BA8EB6E0(v42, v50, v51, (uint64_t)v52);
        sub_1BA5193C4((uint64_t)v52, (uint64_t)v51, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1BA5193C4((uint64_t)v51, (uint64_t)v50, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
        swift_retain();
        sub_1BB87189C();
        sub_1BA6A0C50(v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
      }
      swift_release();
      return sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
    }
    sub_1BB3B7768((uint64_t)v12);
  }
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_model);
  swift_bridgeObjectRetain();
  v24 = sub_1BB54EBCC();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v54[0] = v24;
  swift_retain();
  v49 = v23;
  sub_1BB87189C();
  v25 = *(_QWORD *)(v20 + 24);
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
  {
    swift_bridgeObjectRetain();
LABEL_22:
    v36 = v45;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v45, 1, 1, v44);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v27 = v46;
  v28 = v25 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
  v43[1] = v25;
  swift_bridgeObjectRetain_n();
  v29 = v26 - 1;
  v48 = *(_QWORD *)(v27 + 72);
  while (1)
  {
    sub_1BA4C2DD8(v28, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v30 = *v4;
    v31 = v4[1];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_1BB871890();
    swift_release();
    swift_release();
    sub_1BA5193C4((uint64_t)v52, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
    sub_1BA5193C4((uint64_t)v53, (uint64_t)v54, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
    if (sub_1BA8CF120((uint64_t)v54) == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v32 = *(_OWORD *)v52;
    sub_1BA5193C4((uint64_t)v52, (uint64_t)v51, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
    swift_bridgeObjectRetain();
    sub_1BA6A0C50(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
    if (__PAIR128__(v31, v30) == v32)
      break;
    v33 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      goto LABEL_26;
LABEL_16:
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    if (!v29)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    v28 += v48;
    --v29;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
  v36 = v45;
  sub_1BA5193C4((uint64_t)v4, v45, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v36, 0, 1, v44);
  swift_bridgeObjectRelease();
LABEL_27:
  memset(v52, 0, 32);
  memset(v53, 0, 40);
  sub_1BA8EB6E0(v36, v52, v53, (uint64_t)v54);
  sub_1BA5193C4((uint64_t)v54, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA5193C4((uint64_t)v53, (uint64_t)v52, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  swift_retain();
  sub_1BB87189C();
  return swift_release();
}

uint64_t type metadata accessor for DebugFormatFileViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB3B7564()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_toolbarItems);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1BAAC19FC();
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t sub_1BB3B75C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3;
  _BYTE v4[128];

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  swift_release();
  sub_1BA5193C4((uint64_t)&v3, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  return sub_1BA5193C4((uint64_t)v4, a1, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
}

uint64_t sub_1BB3B7668(uint64_t a1)
{
  uint64_t v2;
  _QWORD v3[16];

  sub_1BA5193C4(a1, (uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BA5193C4((uint64_t)v3, (uint64_t)&v2, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  sub_1BA6A0C50(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  swift_retain();
  return sub_1BB87189C();
}

unint64_t sub_1BB3B7710()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BE458;
  if (!qword_1EF2BE458)
  {
    v1 = type metadata accessor for DebugFormatFileTreeModel();
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD238, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BE458);
  }
  return result;
}

uint64_t sub_1BB3B7768(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1EF2C2BD8, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB3B77B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;

  v3 = v1;
  sub_1BB3B86C0(0, &qword_1EF2C2BE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3B867C();
  sub_1BB8746C8();
  LOBYTE(v19) = 0;
  sub_1BA6F7928();
  sub_1BA4A2870(&qword_1EF2C2BE8, (uint64_t (*)(uint64_t))sub_1BA6F7928, MEMORY[0x1E0DB4208]);
  sub_1BB8741AC();
  if (!v2)
  {
    v11 = type metadata accessor for SportsDataConfiguration();
    v12 = *(_QWORD *)(v3 + *(int *)(v11 + 20));
    if (*(_QWORD *)(v12 + 16))
    {
      v17 = v7;
      v20 = 1;
      swift_bridgeObjectRetain_n();
      v13 = sub_1BA67F4CC(v12);
      swift_bridgeObjectRelease();
      v18 = v13;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v18);
      swift_release();
      v19 = (uint64_t)v18;
      sub_1BB3B8784();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
      v7 = v17;
    }
    v14 = *(_QWORD *)(v3 + *(int *)(v11 + 24));
    if (*(_QWORD *)(v14 + 16))
    {
      v20 = 2;
      swift_bridgeObjectRetain_n();
      v15 = sub_1BA85C4AC(v14);
      swift_bridgeObjectRelease();
      v18 = (_QWORD *)v15;
      swift_retain();
      sub_1BB3B871C((uint64_t *)&v18);
      swift_release();
      v19 = (uint64_t)v18;
      sub_1BB3B8784();
      sub_1BA4C576C(0, (unint64_t *)&qword_1EF2C1970);
      sub_1BB3B87DC();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB3B7AB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v42 = a2;
  sub_1BB3B8530();
  v38 = v3;
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v40 = v5;
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6F7928();
  v43 = v7;
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3B86C0(0, &qword_1ED3AB430, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  v14 = type metadata accessor for SportsDataConfiguration();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3B867C();
  v17 = v45;
  sub_1BB87468C();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v45 = v11;
  v34 = v14;
  v18 = v16;
  v19 = v42;
  v50 = 0;
  sub_1BA4A2870(&qword_1ED3A39B8, (uint64_t (*)(uint64_t))sub_1BA6F7928, MEMORY[0x1E0DB4210]);
  v20 = v43;
  sub_1BB8740D4();
  v21 = v10;
  v23 = v13;
  v24 = (uint64_t)v18;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v18, v44, v20);
  v49 = 1;
  v25 = v23;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v46 = 1;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v27 = v39;
    v26 = v40;
    sub_1BB8740D4();
    v28 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v26);
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9E8];
  }
  *(_QWORD *)(v24 + *(int *)(v34 + 20)) = v28;
  v48 = 2;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v47 = 2;
    sub_1BA4A2870(&qword_1ED3A3798, (uint64_t (*)(uint64_t))sub_1BB3B8530, MEMORY[0x1E0DB3140]);
    v30 = v37;
    v29 = v38;
    v31 = v21;
    sub_1BB8740D4();
    v32 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v29);
    v33 = v45;
    v19 = v42;
  }
  else
  {
    v31 = v21;
    v32 = MEMORY[0x1E0DEE9E8];
    v33 = v45;
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v31);
  *(_QWORD *)(v24 + *(int *)(v34 + 24)) = v32;
  sub_1BA988294(v24, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BA9882D8(v24);
}

uint64_t sub_1BB3B7F04()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x64656C6261736964;
  if (*v0 != 1)
    v1 = 0xD000000000000015;
  if (*v0)
    return v1;
  else
    return 0x70614D6465626D65;
}

uint64_t sub_1BB3B7F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB3BB34C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3B7FA0()
{
  sub_1BB3B867C();
  return sub_1BB874710();
}

uint64_t sub_1BB3B7FC8()
{
  sub_1BB3B867C();
  return sub_1BB87471C();
}

uint64_t sub_1BB3B7FF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB3B7AB4(a1, a2);
}

uint64_t sub_1BB3B8004(_QWORD *a1)
{
  return sub_1BB3B77B4(a1);
}

uint64_t SportsDataVisualizationResponseEmbedType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3B8050 + 4 * byte_1BB911040[*v0]))(0x535F5354524F5053, 0xEC00000045524F43);
}

unint64_t sub_1BB3B8050()
{
  return 0xD000000000000015;
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional __swiftcall SportsDataVisualizationResponseEmbedType.init(_:)(Swift::String a1)
{
  _BYTE *v1;
  _BYTE *v2;
  NewsFeed::SportsDataVisualizationResponseEmbedType_optional result;
  char v4;

  v2 = v1;
  result.value = SportsDataVisualizationResponseEmbedType.init(rawValue:)(a1).value;
  *v2 = v4;
  return result;
}

NewsFeed::SportsDataVisualizationResponseEmbedType_optional sub_1BB3B8144@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  NewsFeed::SportsDataVisualizationResponseEmbedType_optional result;
  char v5;

  result.value = SportsDataVisualizationResponseEmbedType.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t *sub_1BB3B817C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1BA6F7928();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB3B8218(uint64_t a1)
{
  uint64_t v2;

  sub_1BA6F7928();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3B8268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1BA6F7928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB3B82D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BA6F7928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB3B8360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_1BA6F7928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BB3B83C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BA6F7928();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB3B843C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BA6F7928();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

void sub_1BB3B84B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BA6F7928();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

void sub_1BB3B8530()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A37A0)
  {
    sub_1BB3B85B0();
    sub_1BB3B85F4();
    sub_1BB3B8638();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A37A0);
  }
}

unint64_t sub_1BB3B85B0()
{
  unint64_t result;

  result = qword_1ED3A9E50;
  if (!qword_1ED3A9E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90B5FC, &type metadata for SportsDataConfigurationEventStatus);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E50);
  }
  return result;
}

unint64_t sub_1BB3B85F4()
{
  unint64_t result;

  result = qword_1ED3A9E30;
  if (!qword_1ED3A9E30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90B5D4, &type metadata for SportsDataConfigurationEventStatus);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E30);
  }
  return result;
}

unint64_t sub_1BB3B8638()
{
  unint64_t result;

  result = qword_1ED3A9E38;
  if (!qword_1ED3A9E38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90B594, &type metadata for SportsDataConfigurationEventStatus);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E38);
  }
  return result;
}

unint64_t sub_1BB3B867C()
{
  unint64_t result;

  result = qword_1ED3A7300;
  if (!qword_1ED3A7300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9111DC, &type metadata for SportsDataConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7300);
  }
  return result;
}

void sub_1BB3B86C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB3B867C();
    v7 = a3(a1, &type metadata for SportsDataConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BB3B871C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BACAB780(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1BB3B884C(v4);
  *a1 = v2;
}

unint64_t sub_1BB3B8784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2BF0;
  if (!qword_1EF2C2BF0)
  {
    sub_1BB3B86C0(255, &qword_1EF2C2BE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2BF0);
  }
  return result;
}

unint64_t sub_1BB3B87DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2C2BF8;
  if (!qword_1EF2C2BF8)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1EF2C1970);
    v2 = v1;
    v3 = sub_1BB3B85F4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C2BF8);
  }
  return result;
}

void sub_1BB3B884C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *__dst;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_1BB8741F4();
  if (v5 < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
      goto LABEL_138;
    v7 = v5;
    v84 = a1;
    if (v4 < 2)
    {
      v10 = MEMORY[0x1E0DEE9D8];
      __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if (v4 != 1)
      {
        v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
        v91 = (char *)MEMORY[0x1E0DEE9D8];
        if (v29 < 2)
        {
LABEL_95:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v10 + 16) = 0;
          swift_bridgeObjectRelease();
          return;
        }
LABEL_98:
        v78 = *v84;
        while (1)
        {
          v79 = v29 - 2;
          if (v29 < 2)
            goto LABEL_126;
          if (!v78)
            goto LABEL_137;
          v80 = *(_QWORD *)&v91[16 * v79 + 32];
          v81 = *(_QWORD *)&v91[16 * v29 + 24];
          sub_1BB3BA2A8((char *)(v78 + v80), (char *)(v78 + *(_QWORD *)&v91[16 * v29 + 16]), (char *)(v78 + v81), __dst);
          if (v2)
            goto LABEL_95;
          if (v81 < v80)
            goto LABEL_127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = sub_1BACAB464((uint64_t)v91);
          if (v79 >= *((_QWORD *)v91 + 2))
            goto LABEL_128;
          v82 = &v91[16 * v79 + 32];
          *(_QWORD *)v82 = v80;
          *((_QWORD *)v82 + 1) = v81;
          v83 = *((_QWORD *)v91 + 2);
          if (v29 > v83)
            goto LABEL_129;
          memmove(&v91[16 * v29 + 16], &v91[16 * v29 + 32], 16 * (v83 - v29));
          *((_QWORD *)v91 + 2) = v83 - 1;
          v29 = v83 - 1;
          if (v83 <= 2)
            goto LABEL_95;
        }
      }
      v85 = MEMORY[0x1E0DEE9D8];
      v92 = v1;
    }
    else
    {
      v92 = v1;
      v8 = v6 >> 1;
      v9 = sub_1BB872E74();
      *(_QWORD *)(v9 + 16) = v8;
      v85 = v9;
      __dst = (char *)(v9 + 32);
    }
    v86 = v7;
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v12 = *a1;
    v13 = 0;
    v87 = v4;
    v94 = v12;
    do
    {
      v88 = v13;
      if (v13 + 1 >= v4)
      {
        v22 = v13 + 1;
      }
      else
      {
        v14 = *(unsigned __int8 *)(v12 + v13);
        v15 = sub_1BA9BECAC(*(unsigned __int8 *)(v12 + v13 + 1), (uint64_t)&unk_1E724B958);
        if ((v16 & 1) != 0)
          v17 = 0;
        else
          v17 = v15;
        v93 = v17;
        v18 = sub_1BA9BECAC(v14, (uint64_t)&unk_1E724B958);
        if ((v19 & 1) != 0)
          v20 = 0;
        else
          v20 = v18;
        v21 = v13 + 2;
        if (v13 + 2 < v4)
          JUMPOUT(0x1BB3B8AECLL);
        v22 = v13 + 2;
        if (v93 < v20)
        {
          v23 = v88;
          if (v21 < v88)
            goto LABEL_133;
          if (v88 < v21)
          {
            v24 = v21 - 1;
            do
            {
              if (v23 != v24)
              {
                if (!v12)
                {
                  __break(1u);
LABEL_137:
                  __break(1u);
LABEL_138:
                  sub_1BB873EA0();
                  __break(1u);
                  JUMPOUT(0x1BB3B9A48);
                }
                v25 = *(_BYTE *)(v12 + v23);
                *(_BYTE *)(v12 + v23) = *(_BYTE *)(v12 + v24);
                *(_BYTE *)(v12 + v24) = v25;
              }
              v60 = ++v23 < v24--;
            }
            while (v60);
          }
          v22 = v21;
        }
      }
      if (v22 < v4)
      {
        if (__OFSUB__(v22, v88))
          goto LABEL_131;
        if (v22 - v88 < v86)
        {
          v26 = v88 + v86;
          if (__OFADD__(v88, v86))
            goto LABEL_134;
          if (v26 >= v4)
            v26 = v4;
          if (v26 < v88)
          {
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
            JUMPOUT(0x1BB3B99F4);
          }
          if (v22 != v26)
            JUMPOUT(0x1BB3B9188);
        }
      }
      if (v22 < v88)
        goto LABEL_130;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v28 = *((_QWORD *)v11 + 2);
      v27 = *((_QWORD *)v11 + 3);
      v29 = v28 + 1;
      v89 = v22;
      if (v28 >= v27 >> 1)
        v11 = sub_1BACAA368((char *)(v27 > 1), v28 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v29;
      v30 = v11 + 32;
      v31 = &v11[16 * v28 + 32];
      *(_QWORD *)v31 = v88;
      *((_QWORD *)v31 + 1) = v89;
      v91 = v11;
      if (v28)
      {
        while (1)
        {
          v32 = v29 - 1;
          if (v29 >= 4)
          {
            v37 = &v30[16 * v29];
            v38 = *((_QWORD *)v37 - 8);
            v39 = *((_QWORD *)v37 - 7);
            v43 = __OFSUB__(v39, v38);
            v40 = v39 - v38;
            if (v43)
              goto LABEL_115;
            v42 = *((_QWORD *)v37 - 6);
            v41 = *((_QWORD *)v37 - 5);
            v43 = __OFSUB__(v41, v42);
            v35 = v41 - v42;
            v36 = v43;
            if (v43)
              goto LABEL_116;
            v44 = v29 - 2;
            v45 = &v30[16 * v29 - 32];
            v47 = *(_QWORD *)v45;
            v46 = *((_QWORD *)v45 + 1);
            v43 = __OFSUB__(v46, v47);
            v48 = v46 - v47;
            if (v43)
              goto LABEL_118;
            v43 = __OFADD__(v35, v48);
            v49 = v35 + v48;
            if (v43)
              goto LABEL_121;
            if (v49 >= v40)
            {
              v67 = &v30[16 * v32];
              v69 = *(_QWORD *)v67;
              v68 = *((_QWORD *)v67 + 1);
              v43 = __OFSUB__(v68, v69);
              v70 = v68 - v69;
              if (v43)
                goto LABEL_125;
              v60 = v35 < v70;
              goto LABEL_81;
            }
          }
          else
          {
            if (v29 != 3)
            {
              v61 = *((_QWORD *)v11 + 4);
              v62 = *((_QWORD *)v11 + 5);
              v43 = __OFSUB__(v62, v61);
              v54 = v62 - v61;
              v55 = v43;
              goto LABEL_75;
            }
            v34 = *((_QWORD *)v11 + 4);
            v33 = *((_QWORD *)v11 + 5);
            v43 = __OFSUB__(v33, v34);
            v35 = v33 - v34;
            v36 = v43;
          }
          if ((v36 & 1) != 0)
            goto LABEL_117;
          v44 = v29 - 2;
          v50 = &v30[16 * v29 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v53 = __OFSUB__(v51, v52);
          v54 = v51 - v52;
          v55 = v53;
          if (v53)
            goto LABEL_120;
          v56 = &v30[16 * v32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v43 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v43)
            goto LABEL_123;
          if (__OFADD__(v54, v59))
            goto LABEL_124;
          if (v54 + v59 >= v35)
          {
            v60 = v35 < v59;
LABEL_81:
            if (v60)
              v32 = v44;
            goto LABEL_83;
          }
LABEL_75:
          if ((v55 & 1) != 0)
            goto LABEL_119;
          v63 = &v30[16 * v32];
          v65 = *(_QWORD *)v63;
          v64 = *((_QWORD *)v63 + 1);
          v43 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          if (v43)
            goto LABEL_122;
          if (v66 < v54)
            goto LABEL_92;
LABEL_83:
          v71 = v32 - 1;
          if (v32 - 1 >= v29)
          {
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            goto LABEL_135;
          }
          if (!v12)
            goto LABEL_136;
          v72 = v12;
          v73 = &v30[16 * v71];
          v74 = *(_QWORD *)v73;
          v75 = &v30[16 * v32];
          v76 = *((_QWORD *)v75 + 1);
          sub_1BB3BA2A8((char *)(v72 + *(_QWORD *)v73), (char *)(v72 + *(_QWORD *)v75), (char *)(v72 + v76), __dst);
          if (v92)
          {
            v10 = v85;
            goto LABEL_95;
          }
          if (v76 < v74)
            goto LABEL_112;
          if (v32 > *((_QWORD *)v91 + 2))
            goto LABEL_113;
          *(_QWORD *)v73 = v74;
          *(_QWORD *)&v30[16 * v71 + 8] = v76;
          v77 = *((_QWORD *)v91 + 2);
          if (v32 >= v77)
            goto LABEL_114;
          v11 = v91;
          v29 = v77 - 1;
          memmove(&v30[16 * v32], v75 + 16, 16 * (v77 - 1 - v32));
          *((_QWORD *)v91 + 2) = v77 - 1;
          v12 = v94;
          if (v77 <= 2)
            goto LABEL_92;
        }
      }
      v29 = 1;
LABEL_92:
      v4 = v87;
      v13 = v89;
    }
    while (v89 < v87);
    v2 = v92;
    v10 = v85;
    if (v29 < 2)
      goto LABEL_95;
    goto LABEL_98;
  }
  if (v4 < 0)
    goto LABEL_132;
  if (v4)
    sub_1BB3B9BA8(0, v4, 1);
}

void sub_1BB3B9BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != a2)
    JUMPOUT(0x1BB3B9D6CLL);
}

uint64_t sub_1BB3B9C94(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BB3B9D74 + *(int *)(v3 + 4 * v2)))(0x6576694C7261656ELL, a2, 0x656D6167657270);
}

uint64_t sub_1BB3B9D94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == 0x6576694C7261656ELL && v3 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0 && v2 != v4 + 1)
      JUMPOUT(0x1BB3B9C60);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_1BB3B9F24
                                          + *((int *)qword_1BB3BA250 + *(unsigned __int8 *)(v1 + 32))))(0x656D6167657270);
}

uint64_t sub_1BB3B9F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BB3BA028 + dword_1BB3BA27C[v2]))(0x6576694C7261656ELL, a2, 0x656D6167657270);
}

void sub_1BB3BA048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  if (a1 == 0x6576694C7261656ELL && v18 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      if (!__OFADD__(v16, 1))
      {
        if (v16 + 1 != v17)
          JUMPOUT(0x1BB3B9F10);
        goto LABEL_16;
      }
      __break(1u);
      goto LABEL_13;
    }
  }
  if (v19 >= v16)
    goto LABEL_16;
  if (a14)
  {
    v21 = *(_BYTE *)(a14 + a16);
    *(_BYTE *)(a14 + a16) = *(_BYTE *)(a14 + a13);
    *(_BYTE *)(a14 + a13) = v21;
    if (a13 != a11)
      JUMPOUT(0x1BB3B9C3CLL);
LABEL_16:
    JUMPOUT(0x1BB3B9C18);
  }
LABEL_13:
  __break(1u);
  JUMPOUT(0x1BB3BA1F8);
}

uint64_t sub_1BB3BA2A8(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v7;
  int64_t v8;
  char *v11;
  char *v12;
  char *v13;

  v12 = __dst;
  v7 = a2 - __src;
  v8 = a3 - a2;
  v13 = __src;
  if (a2 - __src < a3 - a2)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (__dst != __src || a2 <= __dst)
        memmove(__dst, __src, v7);
      v11 = &__dst[v7];
      if (a2 != __src && a2 < a3)
        JUMPOUT(0x1BB3BA480);
      goto LABEL_16;
    }
LABEL_17:
    sub_1BB873F84();
    __break(1u);
    JUMPOUT(0x1BB3BB048);
  }
  if (v8 < 0)
    goto LABEL_17;
  if (__dst != a2 || a3 <= __dst)
    memmove(__dst, a2, a3 - a2);
  v11 = &__dst[v8];
  v13 = a2;
  if (__src < a2 && a3 != a2)
    JUMPOUT(0x1BB3BAAD8);
LABEL_16:
  sub_1BACAA674(&v13, &v12, &v11);
  return 1;
}

uint64_t storeEnumTagSinglePayload for SportsDataConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3BB1F4 + 4 * byte_1BB91104D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3BB228 + 4 * byte_1BB911048[v4]))();
}

uint64_t sub_1BB3BB228(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3BB230(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3BB238);
  return result;
}

uint64_t sub_1BB3BB244(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3BB24CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3BB250(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3BB258(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfiguration.CodingKeys()
{
  return &type metadata for SportsDataConfiguration.CodingKeys;
}

unint64_t sub_1BB3BB278()
{
  unint64_t result;

  result = qword_1EF2C2C00;
  if (!qword_1EF2C2C00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9111B4, &type metadata for SportsDataConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C00);
  }
  return result;
}

unint64_t sub_1BB3BB2C0()
{
  unint64_t result;

  result = qword_1ED3A7310;
  if (!qword_1ED3A7310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB911124, &type metadata for SportsDataConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7310);
  }
  return result;
}

unint64_t sub_1BB3BB308()
{
  unint64_t result;

  result = qword_1ED3A7308;
  if (!qword_1ED3A7308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91114C, &type metadata for SportsDataConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7308);
  }
  return result;
}

uint64_t sub_1BB3BB34C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x70614D6465626D65 && a2 == 0xED000073676E6970;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xEE0073746E657645 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB98AD60)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsFeed::FeedGroupFreezingDisallow __swiftcall FeedGroupFreezingDisallow.init(rehydrate:)(NewsFeed::FeedGroupFreezingDisallow rehydrate)
{
  NewsFeed::FeedGroupFreezingDisallow *v1;

  v1->rehydrate = rehydrate.rehydrate;
  return rehydrate;
}

uint64_t sub_1BB3BB4EC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB3BB548@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB3BB5A8()
{
  sub_1BA4F5D10();
  return sub_1BB874710();
}

uint64_t sub_1BB3BB5D0()
{
  sub_1BA4F5D10();
  return sub_1BB87471C();
}

uint64_t sub_1BB3BB5F8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB3BB648()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB3BB660()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

BOOL static FeedGroupFreezing.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static FeedGroupFreezingDisallow.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t FeedGroupFreezing.description.getter()
{
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t FeedGroupFreezingDisallow.rehydrate.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1BB3BB784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7461726479686572 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB3BB824()
{
  sub_1BA4EB108();
  return sub_1BB874710();
}

uint64_t sub_1BB3BB84C()
{
  sub_1BA4EB108();
  return sub_1BB87471C();
}

uint64_t FeedGroupFreezingDisallow.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1ED39C0F8, (uint64_t (*)(void))sub_1BA4EB108, (uint64_t)&type metadata for FeedGroupFreezingDisallow.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EB108();
  sub_1BB8746C8();
  sub_1BB874188();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedGroupFreezingDisallow.CodingKeys()
{
  return &type metadata for FeedGroupFreezingDisallow.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedGroupFreezing.CodingType()
{
  return &type metadata for FeedGroupFreezing.CodingType;
}

uint64_t storeEnumTagSinglePayload for FeedGroupFreezing.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3BB9E0 + 4 * byte_1BB911249[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3BBA14 + 4 * byte_1BB911244[v4]))();
}

uint64_t sub_1BB3BBA14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3BBA1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3BBA24);
  return result;
}

uint64_t sub_1BB3BBA30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3BBA38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3BBA3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3BBA44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupFreezing.CodingKeys()
{
  return &type metadata for FeedGroupFreezing.CodingKeys;
}

unint64_t sub_1BB3BBA64()
{
  unint64_t result;

  result = qword_1EF2C2C08;
  if (!qword_1EF2C2C08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB911488, &type metadata for FeedGroupFreezing.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C08);
  }
  return result;
}

unint64_t sub_1BB3BBAAC()
{
  unint64_t result;

  result = qword_1EF2C2C10;
  if (!qword_1EF2C2C10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB911528, &type metadata for FeedGroupFreezing.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C10);
  }
  return result;
}

unint64_t sub_1BB3BBAF4()
{
  unint64_t result;

  result = qword_1EF2C2C18;
  if (!qword_1EF2C2C18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9115E0, &type metadata for FeedGroupFreezingDisallow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C18);
  }
  return result;
}

id String.isNaturallyRTL.getter()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend(v0, sel_ne_isNaturallyRTL);

  return v1;
}

_QWORD *sub_1BB3BBB70(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v41 = sub_1BB86BF20();
  v44 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7F1104(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_1BB86BE54();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  v46 = a2;
  sub_1BB86BE00();
  sub_1BA7114A0();
  v16 = sub_1BB873AEC();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = v16 & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v45 = 0xD000000000000012;
    v46 = 0x80000001BB98ADC0;
    sub_1BB872AFC((_QWORD *)0xD000000000000012);
    swift_bridgeObjectRelease();
    sub_1BB86BFC8();
    swift_bridgeObjectRelease();
    sub_1BAF97DE4((uint64_t)v11, (uint64_t)v8);
    v20 = sub_1BB86BFF8();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20) == 1)
    {
      sub_1BAFEE640((uint64_t)v8);
      v22 = v41;
    }
    else
    {
      v24 = sub_1BB86BF38();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
      v22 = v41;
      if (v24)
      {
        v25 = *(_QWORD *)(v24 + 16);
        if (!v25)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_21:
          sub_1BAFEE640((uint64_t)v11);
          return v23;
        }
LABEL_9:
        v39 = v24;
        v40 = v11;
        v26 = v24 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
        v27 = *(_QWORD *)(v44 + 72);
        v42 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
        v43 = v27;
        swift_bridgeObjectRetain();
        v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          v42(v5, v26, v22);
          v28 = sub_1BB86BF14();
          if (v29)
          {
            v30 = v28;
            v31 = v29;
            v32 = sub_1BB86BF08();
            v34 = v33;
            (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v22);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v23 = sub_1BB38FBF8(0, v23[2] + 1, 1, v23);
            v36 = v23[2];
            v35 = v23[3];
            if (v36 >= v35 >> 1)
              v23 = sub_1BB38FBF8((_QWORD *)(v35 > 1), v36 + 1, 1, v23);
            v23[2] = v36 + 1;
            v37 = &v23[4 * v36];
            v37[4] = v32;
            v37[5] = v34;
            v37[6] = v30;
            v37[7] = v31;
            v22 = v41;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v22);
          }
          v26 += v43;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease_n();
        v11 = v40;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
    v25 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v25)
      goto LABEL_19;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BB3BBF1C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1BB872B98();
  __break(1u);
  return result;
}

uint64_t sub_1BB3BBF68(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  swift_bridgeObjectRetain();
  sub_1BA689E44(a1, a2);
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    sub_1BA7114A0();
    v6 = sub_1BB873ABC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v7 = sub_1BA9C0430(1uLL, a1, a2);
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t String.replacingCharacters(from:with:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  sub_1BA7114A0();
  swift_bridgeObjectRetain();
  v9 = sub_1BB873AC8();
  if ((v11 & 1) == 0)
  {
    do
    {
      a4 = sub_1BB3BC194(v9, v10, a2, a3, a4, a5);
      v13 = v12;
      swift_bridgeObjectRelease();
      v9 = sub_1BB873AC8();
      a5 = v13;
    }
    while ((v14 & 1) == 0);
  }
  return a4;
}

uint64_t sub_1BB3BC194(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  swift_bridgeObjectRetain();
  sub_1BB873A74();
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  sub_1BB873A74();
  v15 = v14;
  result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v17) = 1;
  v18 = 4 << v17;
  v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    result = sub_1BB80CBC0(a1, a5, a6);
    v19 = result;
  }
  v40 = a3;
  v20 = a2;
  v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v23 = a6 & 0x2000000000000000;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v32 = HIBYTE(a6) & 0xF;
    else
      v32 = a5 & 0xFFFFFFFFFFFFLL;
    if (v32 < v19 >> 16)
      goto LABEL_43;
    result = sub_1BB872B2C();
    v22 = result;
    if (v21)
      v26 = 7;
    else
      v26 = 11;
  }
  else
  {
    v22 = v19 >> 16;
    v23 = a6 & 0x2000000000000000;
    v24 = HIBYTE(a6) & 0xF;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v26 = 7;
  }
  if (!v23)
    v24 = v25;
  v27 = 4 << (v21 >> 59);
  v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0)
    v27 = 8;
  v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    v33 = v20;
    v34 = v22;
    result = sub_1BB80CBC0(v33, a5, a6);
    v22 = v34;
    v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    v35 = v26 | (v24 << 16);
    v36 = v22;
    result = sub_1BB80CBC0(v35, a5, a6);
    v22 = v36;
    v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    v37 = v22;
    v38 = sub_1BB872B2C();
    v22 = v37;
    v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        result = HIBYTE(a4) & 0xF;
        v31 = v22 + result;
        if (!__OFADD__(v22, result))
          goto LABEL_23;
      }
      else
      {
        result = v40 & 0xFFFFFFFFFFFFLL;
        v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_39;
    }
LABEL_37:
    v39 = v22;
    result = sub_1BB872B08();
    v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1BCCE3358](result);
LABEL_25:
        sub_1BB872B98();
        sub_1BB0A89C4();
        sub_1BB872AF0();
        swift_bridgeObjectRelease();
        sub_1BB872AF0();
        sub_1BB3BBF1C(a2, a5, a6);
        sub_1BB872AF0();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t static String.puzzleShowTeaserSelector.getter()
{
  return sub_1BB3BC548((uint64_t *)&unk_1EF2C2C20);
}

uint64_t static String.puzzleShowTeaserSelector.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BB3BC5A8(a1, a2, qword_1EF2C2C20, &qword_1EF2C2C20[1]);
}

uint64_t (*static String.puzzleShowTeaserSelector.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static String.teaserEmbedContainerName.getter()
{
  return sub_1BB3BC548((uint64_t *)aTeaserembed);
}

uint64_t sub_1BB3BC548(uint64_t *a1)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static String.teaserEmbedContainerName.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BB3BC5A8(a1, a2, aTeaserembed, &aTeaserembed[1]);
}

uint64_t sub_1BB3BC5A8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  swift_beginAccess();
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static String.teaserEmbedContainerName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FeedGroupDebug.debugFormat.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t FeedGroupDebug.debugIdentifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t FeedGroupDebug.debugName.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t FeedGroupDebug.debugTitle.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t FeedGroupDebug.debugCandidates.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t FeedGroupDebug.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_1BB3BC798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_1BB3BC7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t method lookup function for FeedGroupDebug()
{
  return swift_lookUpClassMethod();
}

id FCIssue.coverImagePrimaryLimitedColor.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(v0, sel_coverImagePrimaryColor);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_ne_color);

  v4 = sub_1BB8737A4();
  if (!v4)
  {

    return 0;
  }
  v5 = (void *)v4;
  v6 = sub_1BB8737A4();
  if (!v6)
  {

    return 0;
  }
  v7 = (void *)v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

  return v8;
}

id FCIssue.coverImagePrimaryExtraLimitedColor.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(v0, sel_coverImagePrimaryColor);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_ne_color);

  v4 = sub_1BB8737A4();
  if (!v4)
  {

    return 0;
  }
  v5 = (void *)v4;
  v6 = sub_1BB8737A4();
  if (!v6)
  {

    return 0;
  }
  v7 = (void *)v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

  return v8;
}

void FCIssue.issueCoverModel.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  sub_1BAA656E8();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, sel_coverImageAssetHandle, v5);
  if (v8)
  {
    v9 = v8;
    v10 = v2;
    objc_msgSend(v10, sel_coverImageAspectRatio);
    v12 = v11;
    v13 = v9;
    v14 = objc_msgSend(v10, sel_layeredCoverJSON);
    if (!v14)
    {
LABEL_5:

      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_BYTE *)(a1 + 56) = 0;
      return;
    }
    v15 = v14;
    v16 = sub_1BB8729A0();
    v18 = v17;

    swift_bridgeObjectRetain();
    sub_1BB86BE00();
    v19 = sub_1BB86BE54();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 0, 1, v19);
    LOBYTE(v15) = sub_1BB86DFC0();
    swift_bridgeObjectRelease();
    sub_1BAA65904((uint64_t)v7);
    if ((v15 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    v20 = v10;
    objc_msgSend(v20, sel_layeredCoverAspectRatio);
    v22 = v21;

    *(_QWORD *)a1 = v20;
    *(_QWORD *)(a1 + 8) = v22;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v20;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_BYTE *)(a1 + 56) = 2;
  }
}

uint64_t sub_1BB3BCBF4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

void FCIssue.traits.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;

  FCIssue.issueCoverModel.getter((uint64_t)&v3);
  if (v10)
  {
    if (v10 == 1)
    {
      sub_1BA899748(v3, v4, v5, v6, v7, v8, v9, 1);
      v2 = 16448;
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    sub_1BA899748(v3, v4, v5, v6, v7, v8, v9, 0);
    v2 = 64;
  }
  *a1 = v2;
}

uint64_t _s8NewsFeed11FormatRatioO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      if (v4 != 1)
        goto LABEL_6;
LABEL_8:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v5 = sub_1BA881EAC(v2, v3);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return v5 & 1;
    }
    if (v4 == 2)
      goto LABEL_8;
  }
  else if (!*(_BYTE *)(a2 + 8))
  {
    goto LABEL_8;
  }
LABEL_6:
  v5 = 0;
  return v5 & 1;
}

unint64_t sub_1BB3BCD7C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3BCDA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3BCDA0()
{
  unint64_t result;

  result = qword_1EF2C2C40;
  if (!qword_1EF2C2C40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRatio, &type metadata for FormatRatio);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C40);
  }
  return result;
}

unint64_t sub_1BB3BCDE4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6550A8();
  a1[2] = sub_1BA6400BC();
  result = sub_1BB3BCE18();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3BCE18()
{
  unint64_t result;

  result = qword_1EF2C2C48;
  if (!qword_1EF2C2C48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRatio, &type metadata for FormatRatio);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C48);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatRatio()
{
  return &type metadata for FormatRatio;
}

uint64_t static SharingActivity.download(issue:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED39EFB8 != -1)
    swift_once();
  sub_1BA65E330();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v3 + 32) = a1;
  sub_1BB872DCC();
  swift_retain();
  v4 = a1;
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB30 != -1)
    swift_once();
  v7 = (id)qword_1ED3AF868;
  sub_1BB8703D8();
  swift_allocObject();
  return sub_1BB86FC94();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE8download5issueACSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39EFB8 != -1)
    swift_once();
  sub_1BA65E330();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v6 + 32) = a1;
  v16 = v6;
  sub_1BB872DCC();
  v7 = v16;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_retain();
  v10 = a1;
  v11 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB30 != -1)
    swift_once();
  v12 = (void *)qword_1ED3AF868;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v16 = v7;
  sub_1BB86FB38();
  swift_allocObject();
  v13 = v12;
  return sub_1BB86FB20();
}

uint64_t storeEnumTagSinglePayload for DebugFormatAccessibilityItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3BD314 + 4 * byte_1BB911855[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3BD348 + 4 * byte_1BB911850[v4]))();
}

uint64_t sub_1BB3BD348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3BD350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3BD358);
  return result;
}

uint64_t sub_1BB3BD364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3BD36CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3BD370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3BD378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatAccessibilityItem()
{
  return &type metadata for DebugFormatAccessibilityItem;
}

unint64_t sub_1BB3BD398()
{
  unint64_t result;

  result = qword_1EF2C2C50;
  if (!qword_1EF2C2C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9118C0, &type metadata for DebugFormatAccessibilityItem);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C50);
  }
  return result;
}

uint64_t sub_1BB3BD3E0(_QWORD *a1)
{
  return FormatRunMode.encode(to:)(a1);
}

uint64_t _s8NewsFeed13FormatRunModeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;
  int v4;

  v2 = *(float *)a1;
  v3 = *(float *)a2;
  v4 = *(unsigned __int8 *)(a2 + 4);
  if (*(_BYTE *)(a1 + 4))
  {
    if (*(_BYTE *)(a1 + 4) == 1)
    {
      if (v4 == 1 && v2 == v3)
        return 1;
    }
    else if (v2 == 0.0)
    {
      if (v4 == 2 && LODWORD(v3) == 0)
        return 1;
    }
    else if (LODWORD(v2) == 1)
    {
      if (v4 == 2 && LODWORD(v3) == 1)
        return 1;
    }
    else if (v4 == 2 && LODWORD(v3) == 2)
    {
      return 1;
    }
  }
  else if (!*(_BYTE *)(a2 + 4) && v2 == v3)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1BB3BD4A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3BD4CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3BD4CC()
{
  unint64_t result;

  result = qword_1EF2C2C58;
  if (!qword_1EF2C2C58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRunMode, &type metadata for FormatRunMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C58);
  }
  return result;
}

unint64_t sub_1BB3BD510(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5331D0();
  a1[2] = sub_1BAEA56C4();
  result = sub_1BB3BD544();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3BD544()
{
  unint64_t result;

  result = qword_1EF2C2C60;
  if (!qword_1EF2C2C60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRunMode, &type metadata for FormatRunMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C60);
  }
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatRunMode(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1BB3BD5E4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BB3BD5FC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatRunMode()
{
  return &type metadata for FormatRunMode;
}

_QWORD *sub_1BB3BD624(unsigned int *a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*((unsigned __int8 *)a1 + 4) == 255)
  {
    v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
    sub_1BA8C88C8(0);
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
    v5 = (v4 + 32) & ~v4;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
    v7 = (_QWORD *)(v6 + v5);
    v8 = v7;
    v9 = 1701736270;
    goto LABEL_3;
  }
  v12 = *a1;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  if (!*((_BYTE *)a1 + 4))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v13);
    sub_1BA8C88C8(0);
    v24 = *(_QWORD *)(v23 - 8);
    v16 = *(_QWORD *)(v24 + 72);
    v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87A390;
    v19 = (_QWORD *)(v18 + v25);
    v22 = v19;
    v20 = 0x206E6F2065636E4FLL;
    v21 = 0xEE006E6565726353;
    goto LABEL_9;
  }
  if (*((_BYTE *)a1 + 4) == 1)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v13);
    sub_1BA8C88C8(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87A390;
    v19 = (_QWORD *)(v18 + v17);
    v20 = 0xD00000000000001ALL;
    v21 = 0x80000001BB98AF00;
    v22 = v19;
LABEL_9:
    sub_1BAAF7494(1701869908, 0xE400000000000000, v20, v21, v22);
    v26 = type metadata accessor for FormatInspectionItem(0);
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v27(v19, 0, 1, v26);
    v28 = (_QWORD *)((char *)v19 + v16);
    LOBYTE(v39[0]) = 0;
    sub_1BAAFA30C(0xD000000000000014, 0x80000001BB98AF20, v12, v28);
    v27(v28, 0, 1, v26);
    sub_1BAF89090(0x65646F4D206E7552, 0xE800000000000000, 0, 0, v18, v39);
    swift_setDeallocating();
    goto LABEL_10;
  }
  if (*a1)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v13);
    sub_1BA8C88C8(0);
    v34 = *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80);
    v35 = (v34 + 32) & ~v34;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
    v7 = (_QWORD *)(v6 + v35);
    if (v12 == 1)
    {
      v9 = 0xD000000000000010;
      v10 = 0x80000001BB98AF40;
      v8 = v7;
    }
    else
    {
      v8 = v7;
      v9 = 0x737961776C41;
      v10 = 0xE600000000000000;
    }
    goto LABEL_4;
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v13);
  sub_1BA8C88C8(0);
  v37 = *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
  v38 = (v37 + 32) & ~v37;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = (_QWORD *)(v6 + v38);
  v8 = v7;
  v9 = 1701015119;
LABEL_3:
  v10 = 0xE400000000000000;
LABEL_4:
  sub_1BAAF7494(1701869908, 0xE400000000000000, v9, v10, v8);
  v11 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
  sub_1BAF89090(0x65646F4D206E7552, 0xE800000000000000, 0, 0, v6, v39);
  swift_setDeallocating();
LABEL_10:
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v29 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v29;
  *(_QWORD *)(v29 + 48) = v40;
  v30 = v39[1];
  *(_OWORD *)(v29 + 16) = v39[0];
  *(_OWORD *)(v29 + 32) = v30;
  v31 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v31;
}

uint64_t sub_1BB3BDC84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3BDCB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion;
  v2 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1BB3BDD38()
{
  return type metadata accessor for FormatSystemFactory();
}

uint64_t sub_1BB3BDD40(void *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, int64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *boxed_opaque_existential_0;
  void *v35;
  void *v36;
  void *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, _QWORD *);
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v66)(char *, uint64_t, uint64_t);
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  id v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  void *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (**v108)(uint64_t, uint64_t, uint64_t);
  int v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  int64_t *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  double v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  void *v135;
  id v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  void *v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  BOOL IsBoldTextEnabled;
  void *v151;
  id v152;
  uint64_t v153;
  id v154;
  _QWORD *v155;
  id v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int64_t v172;
  uint64_t v173;
  int64_t v174;
  uint64_t v175;
  int64_t v176;
  uint64_t v177;
  int64_t v178;
  uint64_t v179;
  int64_t v180;
  uint64_t v181;
  int64_t v182;
  uint64_t v183;
  int64_t v184;
  uint64_t v185;
  int64_t v186;
  uint64_t v187;
  int64_t v188;
  uint64_t v189;
  int64_t v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  int64_t *v195;
  id v196;
  void *v197;
  int64_t v198;
  uint64_t *v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t *v202;
  int64_t v203;
  unint64_t v204;
  char v205;
  const char *v206;
  uint64_t *v207;
  char v208;
  id v209;
  _QWORD *v210;
  uint64_t v211;
  int64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  int v216;
  int v217;
  _QWORD *v218;
  __int128 v219;
  unint64_t v220;
  unint64_t v221;
  int64_t v222;
  uint64_t v223;
  char v224;
  uint64_t v225;
  id v226;
  uint64_t v227;
  unint64_t v228;
  const char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  void (*v237)(char *, uint64_t, uint64_t);
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  void (*v244)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  uint64_t *v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t v280;
  void (*v281)(uint64_t, uint64_t, uint64_t);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  _QWORD *v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void (*v295)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v296;
  _QWORD *v297;
  uint64_t v298;
  void (*v299)(uint64_t, uint64_t, uint64_t);
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  _QWORD *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  void (*v311)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  _QWORD *v316;
  _QWORD *v317;
  void (*v318)(uint64_t, uint64_t, uint64_t);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void (*v324)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v325;
  _QWORD *v326;
  _QWORD *v327;
  uint64_t v328;
  void (*v329)(uint64_t, uint64_t, uint64_t);
  uint64_t v330;
  uint64_t v331;
  void (*v332)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v333;
  _QWORD *v334;
  void (*v335)(uint64_t, uint64_t, uint64_t);
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  _QWORD *v344;
  _QWORD *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  _QWORD *v350;
  _QWORD *v351;
  void (*v352)(uint64_t, uint64_t, uint64_t);
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  _QWORD *v359;
  _QWORD *v360;
  _QWORD *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  void (*v367)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v368;
  _QWORD *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  _QWORD *v379;
  uint64_t v380;
  void (*v381)(uint64_t, uint64_t, uint64_t);
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _QWORD *v387;
  _QWORD *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  _QWORD *v394;
  uint64_t v395;
  uint64_t v396;
  void (*v397)(uint64_t, uint64_t, uint64_t);
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  void (*v403)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v404;
  uint64_t v405;
  void (*v406)(uint64_t, void *, uint64_t);
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  _QWORD *v414;
  _QWORD *v415;
  void *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  void (*v422)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v423;
  _QWORD *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  _QWORD *v430;
  char *v431;
  _QWORD *v432;
  _QWORD *v433;
  uint64_t v434;
  void (*v435)(uint64_t, void *, uint64_t);
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  void (*v440)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v441;
  _QWORD *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  uint64_t v447;
  uint64_t v448;
  _QWORD *v449;
  _QWORD *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  int64_t *v455;
  uint64_t v456;
  uint64_t v457;
  _QWORD *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  void *v462;
  uint64_t v463;
  uint64_t v464;
  __int128 v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  void (*v471)(uint64_t *__return_ptr, uint64_t, uint64_t);
  id v472;
  uint64_t v473;
  unint64_t v474;
  uint64_t v475;
  _QWORD *v476;
  uint64_t *v478;
  char v479;
  uint64_t *v480;
  char v481;
  uint64_t *v482;
  char v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  char *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  _QWORD *v492;
  uint64_t v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  int64_t *v497;
  char *v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t v502;
  void *v503;
  uint64_t v504;
  void (*v505)(char *, uint64_t, uint64_t);
  void (*v506)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v507;
  uint64_t v508;
  __int128 v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  unint64_t v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  unint64_t v517;
  uint64_t v518[5];
  uint64_t v519;

  v497 = a5;
  v501 = a2;
  v503 = a1;
  v487 = sub_1BB86D93C();
  v486 = *(_QWORD *)(v487 - 8);
  MEMORY[0x1E0C80A78](v487);
  v485 = (char *)&v484 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v504 = type metadata accessor for FormatVersionRequirement(0);
  v484 = *(_QWORD *)(v504 - 8);
  MEMORY[0x1E0C80A78](v504);
  v488 = (char *)&v484 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v490 = sub_1BB86C8B0();
  v489 = *(_QWORD *)(v490 - 8);
  MEMORY[0x1E0C80A78](v490);
  v492 = (uint64_t *)((char *)&v484 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v500 = (char *)&v484 - v16;
  sub_1BA4B07F0(0, &qword_1ED3C4510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], v14);
  MEMORY[0x1E0C80A78](v17);
  v499 = (uint64_t)&v484 - v18;
  v507 = (_QWORD *)sub_1BB86C9C4();
  v493 = *(v507 - 1);
  MEMORY[0x1E0C80A78](v507);
  v496 = (uint64_t)&v484 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v494 = (char *)&v484 - v21;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], v14);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v484 - v23;
  v25 = sub_1BB86C9DC();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v498 = (char *)&v484 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v484 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v484 - v32;
  v518[3] = a6;
  v518[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v518);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_0, a4, a6);
  LODWORD(v491) = *a3;
  v502 = OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion;
  v35 = (void *)objc_opt_self();
  v36 = (void *)sub_1BB872970();
  sub_1BB86C994();
  v37 = (void *)sub_1BB86C940();
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 8);
  v506 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v25;
  v505 = v38;
  ((void (*)(char *, uint64_t))v38)(v33, v25);
  v39 = objc_msgSend(v35, sel_dateFormatFromTemplate_options_locale_, v36, 0, v37);

  if (v39)
  {
    v40 = sub_1BB8729A0();
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0xE000000000000000;
  }
  *(_QWORD *)&v509 = v40;
  *((_QWORD *)&v509 + 1) = v42;
  v516 = 72;
  v517 = 0xE100000000000000;
  v43 = sub_1BA7114A0();
  v44 = sub_1BB873B40();
  v508 = v43;
  if ((v44 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    LODWORD(v495) = 1;
  }
  else
  {
    *(_QWORD *)&v509 = v40;
    *((_QWORD *)&v509 + 1) = v42;
    v516 = 107;
    v517 = 0xE100000000000000;
    LODWORD(v495) = sub_1BB873B40();
    swift_bridgeObjectRelease();
  }
  sub_1BA6EA07C();
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1BB8FB6F0;
  *(_QWORD *)&v509 = 11624;
  *((_QWORD *)&v509 + 1) = 0xE200000000000000;
  v46 = (void *)sub_1BB86D738();
  v47 = objc_msgSend(v46, sel_horizontalSizeClass);

  if (v47)
    v48 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v48);
  swift_bridgeObjectRelease();
  v49 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 32) = v509;
  *(_QWORD *)(v45 + 40) = v49;
  *(_QWORD *)&v509 = 11638;
  *((_QWORD *)&v509 + 1) = 0xE200000000000000;
  v50 = (void *)sub_1BB86D738();
  v51 = objc_msgSend(v50, sel_verticalSizeClass);

  if (v51)
    v52 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v52);
  swift_bridgeObjectRelease();
  v53 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 48) = v509;
  *(_QWORD *)(v45 + 56) = v53;
  strcpy((char *)&v509, "column-");
  *((_QWORD *)&v509 + 1) = 0xE700000000000000;
  v516 = sub_1BB86D63C();
  sub_1BB87420C();
  sub_1BB872AFC(v54);
  swift_bridgeObjectRelease();
  v55 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 64) = v509;
  *(_QWORD *)(v45 + 72) = v55;
  *(_QWORD *)&v509 = 0x2D676E616CLL;
  *((_QWORD *)&v509 + 1) = 0xE500000000000000;
  sub_1BB86C994();
  v56 = v494;
  sub_1BB86C9D0();
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))v505)(v30, v506);
  sub_1BB86C9A0();
  v57 = *(void (**)(char *, _QWORD *))(v493 + 8);
  v57(v56, v507);
  v58 = sub_1BB86C91C();
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v24, 1, v58) == 1)
  {
    sub_1BA5C699C((uint64_t)v24, (unint64_t *)&unk_1ED3C4500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
  }
  else
  {
    sub_1BB86C910();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v24, v58);
  }
  sub_1BB872AFC(v60);
  swift_bridgeObjectRelease();
  v61 = sub_1BB872A0C();
  v63 = v62;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 80) = v61;
  *(_QWORD *)(v45 + 88) = v63;
  *(_QWORD *)&v509 = 0x2D676E616CLL;
  *((_QWORD *)&v509 + 1) = 0xE500000000000000;
  sub_1BB86C994();
  v64 = v496;
  sub_1BB86C9D0();
  v65 = v506;
  v66 = v505;
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))v505)(v33, v506);
  sub_1BB86C9B8();
  v67 = v507;
  v57((char *)v64, v507);
  sub_1BB872AFC(v68);
  swift_bridgeObjectRelease();
  v69 = sub_1BB872A0C();
  v71 = v70;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 96) = v69;
  *(_QWORD *)(v45 + 104) = v71;
  *(_QWORD *)&v509 = 0x2D676E616CLL;
  *((_QWORD *)&v509 + 1) = 0xE500000000000000;
  sub_1BB86C994();
  sub_1BB86C9D0();
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))v66)(v33, v65);
  sub_1BB86C9AC();
  v57((char *)v64, v67);
  sub_1BB872AFC(v72);
  swift_bridgeObjectRelease();
  v73 = sub_1BB872A0C();
  v75 = v74;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 112) = v73;
  *(_QWORD *)(v45 + 120) = v75;
  strcpy((char *)&v509, "region-");
  *((_QWORD *)&v509 + 1) = 0xE700000000000000;
  v76 = v498;
  sub_1BB86C994();
  v77 = v499;
  sub_1BB86C988();
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))v66)(v76, v65);
  v78 = sub_1BB86C97C();
  v79 = *(_QWORD *)(v78 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78) == 1)
  {
    sub_1BA5C699C(v77, &qword_1ED3C4510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  }
  else
  {
    sub_1BB86C910();
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
  }
  v81 = MEMORY[0x1E0DEA968];
  sub_1BB872AFC(v80);
  swift_bridgeObjectRelease();
  v82 = sub_1BB872A0C();
  v84 = v83;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 128) = v82;
  *(_QWORD *)(v45 + 136) = v84;
  strcpy((char *)&v509, "time-hour-");
  BYTE11(v509) = 0;
  HIDWORD(v509) = -369098752;
  sub_1BB872AFC((_QWORD *)0x683231);
  swift_bridgeObjectRelease();
  v85 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 144) = v509;
  *(_QWORD *)(v45 + 152) = v85;
  strcpy((char *)&v509, "platform-");
  WORD5(v509) = 0;
  HIDWORD(v509) = -385875968;
  v86 = (void *)sub_1BB86D738();
  objc_msgSend(v86, sel_userInterfaceIdiom);

  sub_1BB872AFC(v497);
  swift_bridgeObjectRelease();
  v87 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 160) = v509;
  *(_QWORD *)(v45 + 168) = v87;
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v496 = 0xD000000000000012;
  *(_QWORD *)&v509 = 0xD000000000000012;
  *((_QWORD *)&v509 + 1) = 0x80000001BB9818A0;
  v88 = (void *)sub_1BB86D738();
  v89 = objc_msgSend(v88, sel_legibilityWeight);

  if (v89 != (id)-1)
    v90 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v90);
  swift_bridgeObjectRelease();
  v91 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 176) = v509;
  *(_QWORD *)(v45 + 184) = v91;
  strcpy((char *)&v509, "ax-contrast-");
  BYTE13(v509) = 0;
  HIWORD(v509) = -5120;
  v92 = (void *)sub_1BB86D738();
  v93 = objc_msgSend(v92, sel_accessibilityContrast);

  if (v93 != (id)-1)
  {
    v94 = (_QWORD *)0xE700000000000000;
    if (v93 == (id)1)
      v94 = (_QWORD *)0xE400000000000000;
  }
  sub_1BB872AFC(v94);
  swift_bridgeObjectRelease();
  v95 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 192) = v509;
  *(_QWORD *)(v45 + 200) = v95;
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = 0xD000000000000016;
  *((_QWORD *)&v509 + 1) = 0x80000001BB9818C0;
  v96 = (void *)sub_1BB86D75C();
  UIContentSizeCategory.description.getter();

  v97 = sub_1BB872A0C();
  v99 = v98;
  swift_bridgeObjectRelease();
  v516 = v97;
  v517 = v99;
  v514 = 95;
  v515 = 0xE100000000000000;
  v512 = 45;
  v513 = 0xE100000000000000;
  sub_1BB873B04();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v100);
  swift_bridgeObjectRelease();
  v101 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 208) = v509;
  *(_QWORD *)(v45 + 216) = v101;
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = 0x762D74616D726F66;
  *((_QWORD *)&v509 + 1) = 0xEF2D6E6F69737265;
  sub_1BB86EB24();
  sub_1BB872AFC(v102);
  swift_bridgeObjectRelease();
  v103 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 224) = v509;
  *(_QWORD *)(v45 + 232) = v103;
  strcpy((char *)&v509, "app-version-");
  BYTE13(v509) = 0;
  HIWORD(v509) = -5120;
  v104 = (void *)objc_opt_self();
  v105 = objc_msgSend(v104, sel_mainBundle);
  v106 = (uint64_t)v500;
  sub_1BB86EBB4();
  v107 = sub_1BB86EB84();
  v108 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v107 - 8);
  v109 = v108[6](v106, 1, v107);
  v502 = v107;
  v494 = (char *)v108;
  if (v109 == 1)
  {
    sub_1BA5C699C(v106, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  }
  else
  {
    sub_1BB86EB24();
    v81 = MEMORY[0x1E0DEA968];
    ((void (*)(uint64_t, uint64_t))v108[1])(v106, v107);
  }
  sub_1BB872AFC(v110);
  swift_bridgeObjectRelease();
  v111 = sub_1BB872A0C();
  v113 = v112;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 240) = v111;
  *(_QWORD *)(v45 + 248) = v113;
  strcpy((char *)&v509, "app-build-");
  BYTE11(v509) = 0;
  HIDWORD(v509) = -369098752;
  v114 = objc_msgSend(v104, sel_mainBundle);
  sub_1BB873894();

  sub_1BB872AFC(v115);
  swift_bridgeObjectRelease();
  v116 = sub_1BB872A0C();
  v118 = v117;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 256) = v116;
  *(_QWORD *)(v45 + 264) = v118;
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)&v509, "app-bundle-id-");
  HIBYTE(v509) = -18;
  v119 = objc_msgSend(v104, sel_mainBundle);
  v120 = objc_msgSend(v119, sel_bundleIdentifier);

  v121 = 0xD000000000000016;
  if (v120)
  {
    v122 = sub_1BB8729A0();
    v124 = v123;

    v516 = v122;
    v517 = v124;
    v514 = 46;
    v515 = 0xE100000000000000;
    v512 = 45;
    v513 = 0xE100000000000000;
    sub_1BB873B04();
    swift_bridgeObjectRelease();
  }
  v125 = v497;
  sub_1BB872AFC(&v519);
  swift_bridgeObjectRelease();
  v126 = (_QWORD *)*((_QWORD *)&v509 + 1);
  v127 = sub_1BB872A0C();
  v129 = v128;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + 272) = v127;
  *(_QWORD *)(v45 + 280) = v129;
  *(_QWORD *)&v509 = 0x2D656C616373;
  *((_QWORD *)&v509 + 1) = 0xE600000000000000;
  v130 = v503;
  sub_1BB86D774();
  if ((~*(_QWORD *)&v131 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_162;
  }
  if (v131 <= -9.22337204e18)
  {
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  if (v131 >= 9.22337204e18)
  {
LABEL_163:
    __break(1u);
LABEL_164:
    swift_once();
    goto LABEL_64;
  }
  v516 = (uint64_t)v131;
  sub_1BB87420C();
  sub_1BB872AFC(v132);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v133);
  v134 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 288) = v509;
  *(_QWORD *)(v45 + 296) = v134;
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v499 = 0xD000000000000015;
  *(_QWORD *)&v509 = 0xD000000000000015;
  *((_QWORD *)&v509 + 1) = 0x80000001BB9818E0;
  v135 = (void *)sub_1BB86D738();
  v136 = objc_msgSend(v135, sel_userInterfaceStyle);

  if (v136)
    v137 = (_QWORD *)0xE500000000000000;
  sub_1BB872AFC(v137);
  swift_bridgeObjectRelease();
  v138 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 304) = v509;
  *(_QWORD *)(v45 + 312) = v138;
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v495 = 0xD000000000000011;
  *(_QWORD *)&v509 = 0xD000000000000011;
  *((_QWORD *)&v509 + 1) = 0x80000001BB981900;
  sub_1BB86D72C();
  v139 = sub_1BB872A0C();
  v141 = v140;
  swift_bridgeObjectRelease();
  v516 = v139;
  v517 = v141;
  v514 = 32;
  v515 = 0xE100000000000000;
  v512 = 45;
  v513 = 0xE100000000000000;
  sub_1BB873B04();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v142);
  swift_bridgeObjectRelease();
  v143 = *((_QWORD *)&v509 + 1);
  *(_QWORD *)(v45 + 320) = v509;
  *(_QWORD *)(v45 + 328) = v143;
  v144 = sub_1BA6E43EC(v45);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v516 = v144;
  v145 = (void *)sub_1BB86D75C();
  LOBYTE(v144) = sub_1BB873504();

  if ((v144 & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000018, 0x80000001BB982040);
    swift_bridgeObjectRelease();
  }
  v146 = (void *)sub_1BB86D738();
  v147 = objc_msgSend(v146, sel_legibilityWeight);

  if (v147 == (id)-1)
  {
    IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
    v148 = v490;
    v149 = v489;
    if (!IsBoldTextEnabled)
      goto LABEL_41;
    goto LABEL_40;
  }
  v148 = v490;
  v149 = v489;
  if (v147 && (v147 == (id)1 || UIAccessibilityIsBoldTextEnabled()))
  {
LABEL_40:
    sub_1BA6EE5AC((uint64_t *)&v509, 0x2D646C6F622D7861, 0xEC00000074786574);
    swift_bridgeObjectRelease();
  }
LABEL_41:
  if (UIAccessibilityIsGrayscaleEnabled())
  {
    sub_1BA6EE5AC((uint64_t *)&v509, 0x73796172672D7861, 0xEC000000656C6163);
    swift_bridgeObjectRelease();
  }
  v151 = (void *)sub_1BB86D738();
  v152 = objc_msgSend(v151, sel_accessibilityContrast);

  if (v152 == (id)-1)
  {
    if (!UIAccessibilityDarkerSystemColorsEnabled())
      goto LABEL_50;
    goto LABEL_49;
  }
  if (v152 && (v152 == (id)1 || UIAccessibilityDarkerSystemColorsEnabled()))
  {
LABEL_49:
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000017, 0x80000001BB982020);
    swift_bridgeObjectRelease();
  }
LABEL_50:
  if (UIAccessibilityIsInvertColorsEnabled())
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v496, 0x80000001BB982000);
    swift_bridgeObjectRelease();
    if (!UIAccessibilityIsReduceMotionEnabled())
    {
LABEL_52:
      if (!UIAccessibilityIsReduceTransparencyEnabled())
        goto LABEL_53;
      goto LABEL_91;
    }
  }
  else if (!UIAccessibilityIsReduceMotionEnabled())
  {
    goto LABEL_52;
  }
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000010, 0x80000001BB981FE0);
  swift_bridgeObjectRelease();
  if (!UIAccessibilityIsReduceTransparencyEnabled())
  {
LABEL_53:
    if (!UIAccessibilityShouldDifferentiateWithoutColor())
      goto LABEL_54;
    goto LABEL_92;
  }
LABEL_91:
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000016, 0x80000001BB981FC0);
  swift_bridgeObjectRelease();
  if (!UIAccessibilityShouldDifferentiateWithoutColor())
  {
LABEL_54:
    if (!UIAccessibilityButtonShapesEnabled())
      goto LABEL_56;
    goto LABEL_55;
  }
LABEL_92:
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000025, 0x80000001BB981F90);
  swift_bridgeObjectRelease();
  if (UIAccessibilityButtonShapesEnabled())
  {
LABEL_55:
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000010, 0x80000001BB981F70);
    swift_bridgeObjectRelease();
  }
LABEL_56:
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  v153 = swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = 0x6D726F6674616C70;
  *((_QWORD *)&v509 + 1) = 0xEF2D6C65646F6D2DLL;
  v154 = (id)MEMORY[0x1BCCE5344](v153);
  sub_1BB8729A0();

  sub_1BB872A0C();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v155);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, v509, *((uint64_t *)&v509 + 1));
  swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = v495;
  *((_QWORD *)&v509 + 1) = 0x80000001BB981920;
  v156 = (id)NSSNTPBAnalyticsOsVersionValue();
  sub_1BB8729A0();

  sub_1BB872A0C();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v157);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, v509, *((uint64_t *)&v509 + 1));
  swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = 0;
  *((_QWORD *)&v509 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v509 = 0xD000000000000019;
  *((_QWORD *)&v509 + 1) = 0x80000001BB96C980;
  v130 = (void *)objc_opt_self();
  objc_msgSend(v130, sel_isInternalBuild);
  sub_1BB872AFC((_QWORD *)0x6C616E7265746E69);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, v509, *((uint64_t *)&v509 + 1));
  swift_bridgeObjectRelease();
  sub_1BA6D6974();
  if ((sub_1BB8739FC() & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000017, 0x80000001BB981F50);
    swift_bridgeObjectRelease();
  }
  v81 = 0xD000000000000016;
  v158 = v492;
  sub_1BB86C8A4();
  v159 = sub_1BA6D5BF0();
  (*(void (**)(_QWORD *, uint64_t))(v149 + 8))(v158, v148);
  v160 = v159[2];
  if (v160)
  {
    v161 = v159 + 5;
    do
    {
      v162 = *(v161 - 1);
      v163 = *v161;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC((uint64_t *)&v509, v162, v163);
      swift_bridgeObjectRelease();
      v161 += 2;
      --v160;
    }
    while (v160);
  }
  swift_bridgeObjectRelease();
  v164 = v125[5];
  v165 = v125[6];
  __swift_project_boxed_opaque_existential_1(v125 + 2, v164);
  v166 = (*(uint64_t (**)(uint64_t, int64_t))(v165 + 8))(v164, v165);
  sub_1BA6E3FB8(v166);
  LOBYTE(v509) = v491;
  v167 = FeedKind.selector.getter();
  if (v168)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v167, v168);
    swift_bridgeObjectRelease();
  }
  v514 = v516;
  v126 = v125 + 7;
  v121 = MEMORY[0x1E0DEE9E8];
  v512 = MEMORY[0x1E0DEE9E8];
  if (qword_1ED3C6318 != -1)
    goto LABEL_164;
LABEL_64:
  v169 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v169);
  if (qword_1ED3C6D90 != -1)
    swift_once();
  v170 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v170);
  v171 = v125[10];
  v172 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v171);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v172 + 8))(v171, v172) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v496, 0x80000001BB981F30);
    swift_bridgeObjectRelease();
  }
  v173 = v125[10];
  v174 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v173);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v174 + 32))(v173, v174) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v81 + 9, 0x80000001BB981F10);
    swift_bridgeObjectRelease();
  }
  v175 = v125[10];
  v176 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v175);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v176 + 112))(v175, v176) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v81 + 6, 0x80000001BB981EF0);
    swift_bridgeObjectRelease();
  }
  v177 = v125[10];
  v178 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v177);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v178 + 88))(v177, v178) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000018, 0x80000001BB981EA0);
    swift_bridgeObjectRelease();
    v81 = 0xD000000000000016;
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000021, 0x80000001BB981EC0);
    swift_bridgeObjectRelease();
  }
  v179 = v125[10];
  v180 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v179);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v180 + 128))(v179, v180) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v499, 0x80000001BB981E80);
    swift_bridgeObjectRelease();
  }
  v181 = v125[10];
  v182 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v181);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v182 + 96))(v181, v182) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v81 + 23, 0x80000001BB981E50);
    swift_bridgeObjectRelease();
  }
  v183 = v125[10];
  v184 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v183);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v184 + 168))(v183, v184) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000016, 0x80000001BB981E30);
    swift_bridgeObjectRelease();
  }
  v185 = v125[10];
  v186 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v185);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v186 + 184))(v185, v186) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v81 + 16, 0x80000001BB981E00);
    swift_bridgeObjectRelease();
  }
  v187 = v125[10];
  v188 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v187);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v188 + 192))(v187, v188) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v81 + 7, 0x80000001BB981DE0);
    swift_bridgeObjectRelease();
  }
  v189 = v125[10];
  v190 = v125[11];
  __swift_project_boxed_opaque_existential_1(v126, v189);
  if (((*(uint64_t (**)(uint64_t, int64_t))(v190 + 176))(v189, v190) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v509, v81 - 2, 0x80000001BB981DC0);
    swift_bridgeObjectRelease();
  }
  v191 = objc_msgSend(v130, sel_isInternalBuild);
  sub_1BA4C010C((uint64_t)v126, (uint64_t)&v509);
  if (v191)
  {
    v192 = v510;
    v193 = v511;
    __swift_project_boxed_opaque_existential_1(&v509, v510);
    LOBYTE(v192) = (*(uint64_t (**)(uint64_t, uint64_t))(v193 + 200))(v192, v193);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v509);
    if ((v192 & 1) != 0)
    {
      sub_1BA6EE5AC(&v516, v81 + 3, 0x80000001BB981DA0);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v509);
  }
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000019, 0x80000001BB981940);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD00000000000001DLL, 0x80000001BB981960);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD00000000000001CLL, 0x80000001BB981980);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000018, 0x80000001BB9819A0);
  swift_bridgeObjectRelease();
  v194 = 0xD000000000000014;
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000014, 0x80000001BB9819C0);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD00000000000001BLL, 0x80000001BB9819E0);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000018, 0x80000001BB981A00);
  swift_bridgeObjectRelease();
  sub_1BA6E3FB8(v512);
  v195 = (int64_t *)objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v516 = v121;
  v196 = objc_msgSend(v195, sel_currentStoreFrontID);
  if (!v196)
  {
    sub_1BB8729A0();
    v203 = 0xD000000000000016;
    goto LABEL_101;
  }
  v197 = v196;
  v198 = sub_1BB8729A0();
  v200 = v199;

  v201 = sub_1BB8729A0();
  v203 = 0xD000000000000016;
  if (!v200)
  {
LABEL_101:
    swift_bridgeObjectRelease();
    sub_1BB8729A0();
    swift_bridgeObjectRelease();
    sub_1BB8729A0();
    swift_bridgeObjectRelease();
    sub_1BB8729A0();
    swift_bridgeObjectRelease();
    sub_1BB8729A0();
    swift_bridgeObjectRelease();
    goto LABEL_110;
  }
  if (v201 == v198 && v200 == v202)
  {
    v204 = 0xD000000000000014;
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    v206 = "account-store-front-us";
    goto LABEL_109;
  }
  v204 = 0xD000000000000014;
  v205 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v205 & 1) != 0)
    goto LABEL_103;
  if (sub_1BB8729A0() == v198 && v200 == v207)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v208 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v208 & 1) == 0)
    {
      if (sub_1BB8729A0() == v198 && v200 == v478)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v479 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v479 & 1) == 0)
          goto LABEL_151;
      }
      swift_bridgeObjectRelease();
      v206 = "account-store-front-ca";
      goto LABEL_109;
    }
  }
  swift_bridgeObjectRelease();
  v206 = "account-store-front-au";
LABEL_109:
  sub_1BA6EE5AC((uint64_t *)&v509, 0xD000000000000016, (unint64_t)(v206 - 32) | 0x8000000000000000);
  swift_bridgeObjectRelease();
  v194 = v204;
  while (1)
  {
LABEL_110:
    v498 = (char *)v194;
    if (objc_msgSend(v195, sel_isPrimaryAccountEmailAddress))
    {
      sub_1BA6EE5AC((uint64_t *)&v509, v203 + 7, 0x80000001BB981CE0);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)&v509 = 0;
    *((_QWORD *)&v509 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v509 = v499;
    *((_QWORD *)&v509 + 1) = 0x80000001BB981A20;
    v209 = objc_msgSend(v195, sel_primaryLanguageCode);
    sub_1BB8729A0();

    sub_1BB872A0C();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v210);
    swift_bridgeObjectRelease();
    sub_1BA6EE5AC((uint64_t *)&v509, v509, *((uint64_t *)&v509 + 1));

    swift_bridgeObjectRelease();
    sub_1BA6E3FB8(v516);
    v211 = v125[15];
    v212 = v125[16];
    v492 = v125 + 12;
    __swift_project_boxed_opaque_existential_1(v125 + 12, v211);
    v195 = (int64_t *)(*(uint64_t (**)(uint64_t, int64_t))(v212 + 8))(v211, v212);
    v198 = v195[2];
    if (!v198)
      break;
    v516 = MEMORY[0x1E0DEE9D8];
    v200 = &v516;
    sub_1BA7447E8(0, v198, 0);
    v213 = v516;
    v203 = sub_1BA580CE4((uint64_t)v195);
    v204 = v214;
    v507 = v195 + 7;
    v216 = v215 & 1;
    v506 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))0xD000000000000010;
    v505 = (void (*)(char *, uint64_t, uint64_t))0x80000001BB96C9C0;
    while ((v203 & 0x8000000000000000) == 0 && v203 < 1 << *((_BYTE *)v195 + 32))
    {
      if (((*(_QWORD *)((char *)v507 + (((unint64_t)v203 >> 3) & 0xFFFFFFFFFFFFF8)) >> v203) & 1) == 0)
        goto LABEL_149;
      if (*((_DWORD *)v195 + 9) != (_DWORD)v204)
        goto LABEL_150;
      LODWORD(v508) = v216;
      v125 = v195;
      v217 = *(_DWORD *)(v195[6] + 4 * v203);
      *(_QWORD *)&v509 = 0;
      *((_QWORD *)&v509 + 1) = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v509 = v506;
      *((_QWORD *)&v509 + 1) = v505;
      LODWORD(v512) = v217;
      sub_1BB87420C();
      v200 = (uint64_t *)&v509;
      sub_1BB872AFC(v218);
      swift_bridgeObjectRelease();
      v219 = v509;
      v516 = v213;
      v221 = *(_QWORD *)(v213 + 16);
      v220 = *(_QWORD *)(v213 + 24);
      if (v221 >= v220 >> 1)
      {
        v200 = &v516;
        sub_1BA7447E8(v220 > 1, v221 + 1, 1);
        v213 = v516;
      }
      *(_QWORD *)(v213 + 16) = v221 + 1;
      *(_OWORD *)(v213 + 16 * v221 + 32) = v219;
      v222 = sub_1BA57FFE8(v203, v204, v508 & 1, (uint64_t)v125);
      v203 = v222;
      v204 = v223;
      v216 = v224 & 1;
      --v198;
      v195 = v125;
      if (!v198)
      {
        sub_1BA8CA884(v222, v223, v216);
        swift_bridgeObjectRelease();
        v125 = v497;
        v203 = 0xD000000000000016;
        goto LABEL_123;
      }
    }
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    if (sub_1BB8729A0() == v198 && v200 == v480)
    {
      swift_bridgeObjectRelease();
LABEL_155:
      swift_bridgeObjectRelease();
      v206 = "account-store-front-uk";
      goto LABEL_109;
    }
    v481 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v481 & 1) != 0)
      goto LABEL_155;
    if (sub_1BB8729A0() == v198 && v200 == v482)
    {
      swift_bridgeObjectRelease_n();
      v194 = v204;
      goto LABEL_160;
    }
    v483 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v194 = v204;
    if ((v483 & 1) != 0)
    {
LABEL_160:
      sub_1BA6EE5AC((uint64_t *)&v509, v203 + 3, 0x80000001BB981D00);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v213 = MEMORY[0x1E0DEE9D8];
LABEL_123:
  v225 = sub_1BA6E43EC(v213);
  swift_bridgeObjectRelease();
  sub_1BA6E3FB8(v225);
  v226 = objc_msgSend((id)v125[17], sel_cachedSubscription);
  v227 = v203 + 5;
  v228 = 0x80000001BB963850;
  switch((unint64_t)objc_msgSend(v226, sel_unprotectedSubscriptionState))
  {
    case 0uLL:
      v227 = v203 + 3;
      v229 = "bundle-subscription-trial";
      goto LABEL_128;
    case 1uLL:
      v227 = v203 + 8;
      v229 = "bundle-subscription-subscribed";
      goto LABEL_128;
    case 2uLL:
      goto LABEL_129;
    case 3uLL:
      v227 = v203 + 12;
      v229 = "bundle-subscription-not-subscribed";
      goto LABEL_128;
    default:
      v229 = "bundle-subscription-unknown";
LABEL_128:
      v228 = (unint64_t)(v229 - 32) | 0x8000000000000000;
LABEL_129:

      sub_1BA6EE5AC((uint64_t *)&v509, v227, v228);
      swift_bridgeObjectRelease();
      sub_1BA6D69B0((uint64_t)&v509);
      v230 = *((_QWORD *)&v509 + 1);
      sub_1BA6D6924(v509, *((uint64_t *)&v509 + 1));
      if (v230)
        v231 = 0xEE00656E696C6666;
      else
        v231 = 0xED0000656E696C6ELL;
      sub_1BA6EE5AC((uint64_t *)&v509, 0x6F2D656369766564, v231);
      swift_bridgeObjectRelease();
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v232 = swift_allocObject();
      *(_OWORD *)(v232 + 16) = xmmword_1BB8FB700;
      v500 = (char *)type metadata accessor for FormatOption();
      v233 = swift_allocBox();
      v235 = v234;
      if (qword_1ED3C6D30 != -1)
        swift_once();
      v236 = v502;
      v493 = __swift_project_value_buffer(v502, (uint64_t)qword_1ED476B90);
      v237 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v494 + 2);
      v238 = (uint64_t)v488;
      v237(v488, v493, v236);
      v508 = type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D708();
      v240 = v239;
      v241 = swift_allocObject();
      *(_QWORD *)(v241 + 16) = v240;
      *(_QWORD *)(v241 + 24) = MEMORY[0x1E0DEE9D8];
      *v235 = v499;
      v235[1] = 0x80000001BB981A40;
      v235[2] = v241 | 0x3000000000000000;
      v235[3] = 1;
      v242 = v500;
      v243 = (uint64_t)v235 + *((int *)v500 + 7);
      sub_1BA6EDD40(v238, v243);
      v244 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v484 + 56);
      v245 = v504;
      v244(v243, 0, 1, v504);
      *(_QWORD *)(v232 + 32) = v233;
      v246 = swift_allocBox();
      v507 = (_QWORD *)v232;
      v494 = (char *)v246;
      v248 = v247;
      v249 = v493;
      v237((char *)v238, v493, v236);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D708();
      v251 = v250;
      v252 = swift_allocObject();
      *(_QWORD *)(v252 + 16) = v251;
      *(_QWORD *)(v252 + 24) = MEMORY[0x1E0DEE9D8];
      *v248 = 0xD000000000000016;
      v248[1] = 0x80000001BB981A60;
      v248[2] = v252 | 0x3000000000000000;
      v248[3] = 1;
      v253 = (uint64_t)v248 + *((int *)v242 + 7);
      sub_1BA6EDD40(v238, v253);
      v244(v253, 0, 1, v245);
      v507[5] = v494;
      v491 = swift_allocBox();
      v255 = v254;
      v256 = v502;
      v237((char *)v238, v249, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D6E4();
      v258 = v257;
      v259 = swift_allocObject();
      *(_QWORD *)(v259 + 16) = v258;
      *(_QWORD *)(v259 + 24) = MEMORY[0x1E0DEE9D8];
      v494 = (char *)0xD000000000000013;
      *v255 = 0xD000000000000013;
      v255[1] = 0x80000001BB981A80;
      v255[2] = v259 | 0x3000000000000000;
      v255[3] = 1;
      v260 = (uint64_t)v255 + *((int *)v242 + 7);
      sub_1BA6EDD40(v238, v260);
      v261 = v504;
      v244(v260, 0, 1, v504);
      v507[6] = v491;
      v491 = swift_allocBox();
      v263 = v262;
      v237((char *)v238, v249, v256);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D6E4();
      v265 = v264;
      v266 = swift_allocObject();
      *(_QWORD *)(v266 + 16) = v265;
      *(_QWORD *)(v266 + 24) = MEMORY[0x1E0DEE9D8];
      *v263 = v498;
      v263[1] = 0x80000001BB981AA0;
      v263[2] = v266 | 0x3000000000000000;
      v263[3] = 1;
      v267 = (uint64_t)v263 + *((int *)v242 + 7);
      sub_1BA6EDD40(v238, v267);
      v244(v267, 0, 1, v261);
      v507[7] = v491;
      v268 = swift_allocBox();
      v270 = v269;
      v505 = v237;
      v237((char *)v238, v493, v256);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D774();
      v272 = v271;
      v273 = swift_allocObject();
      *(_QWORD *)(v273 + 16) = v272;
      *(_QWORD *)(v273 + 24) = MEMORY[0x1E0DEE9D8];
      strcpy((char *)v270, "layout-scale");
      *(_BYTE *)(v270 + 13) = 0;
      *(_WORD *)(v270 + 14) = -5120;
      *(_QWORD *)(v270 + 16) = v273 | 0x3000000000000000;
      *(_QWORD *)(v270 + 24) = 1;
      v274 = v270 + *((int *)v242 + 7);
      sub_1BA6EDD40(v238, v274);
      v506 = v244;
      v244(v274, 0, 1, v261);
      v507[8] = v268;
      v275 = v507;
      v276 = swift_allocBox();
      v278 = v277;
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v279 = v502;
      v280 = __swift_project_value_buffer(v502, (uint64_t)qword_1ED476C08);
      v281 = (void (*)(uint64_t, uint64_t, uint64_t))v505;
      v505((char *)v238, v280, v279);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v283 = v282;
      v284 = swift_allocObject();
      *(_QWORD *)(v284 + 16) = v283;
      *(_QWORD *)(v284 + 24) = MEMORY[0x1E0DEE9D8];
      *v278 = v495;
      v278[1] = 0x80000001BB981AC0;
      v278[2] = v284 | 0x3000000000000000;
      v278[3] = 1;
      v285 = v500;
      v286 = (uint64_t)v278 + *((int *)v500 + 7);
      sub_1BA6EDD40(v238, v286);
      v506(v286, 0, 1, v504);
      v275[9] = v276;
      v495 = swift_allocBox();
      v288 = v287;
      v493 = v280;
      v289 = v502;
      v281(v238, v280, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v291 = v290;
      v292 = swift_allocObject();
      *(_QWORD *)(v292 + 16) = v291;
      *(_QWORD *)(v292 + 24) = MEMORY[0x1E0DEE9D8];
      *v288 = v496;
      v288[1] = 0x80000001BB981AE0;
      v288[2] = v292 | 0x3000000000000000;
      v288[3] = 1;
      v293 = (uint64_t)v288 + *((int *)v285 + 7);
      sub_1BA6EDD40(v238, v293);
      v294 = v504;
      v295 = v506;
      v506(v293, 0, 1, v504);
      v275[10] = v495;
      v496 = swift_allocBox();
      v297 = v296;
      v298 = v289;
      v299 = (void (*)(uint64_t, uint64_t, uint64_t))v505;
      v505((char *)v238, v280, v298);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v301 = v300;
      v302 = swift_allocObject();
      *(_QWORD *)(v302 + 16) = v301;
      *(_QWORD *)(v302 + 24) = MEMORY[0x1E0DEE9D8];
      *v297 = v498;
      v297[1] = 0x80000001BB981B00;
      v297[2] = v302 | 0x3000000000000000;
      v297[3] = 1;
      v303 = (uint64_t)v297 + *((int *)v285 + 7);
      sub_1BA6EDD40(v238, v303);
      v295(v303, 0, 1, v294);
      v275[11] = v496;
      v496 = swift_allocBox();
      v305 = v304;
      v306 = v493;
      v307 = v502;
      v299(v238, v493, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v309 = v308;
      v310 = swift_allocObject();
      *(_QWORD *)(v310 + 16) = v309;
      *(_QWORD *)(v310 + 24) = MEMORY[0x1E0DEE9D8];
      v311 = v295;
      v312 = v494;
      *v305 = v494;
      v305[1] = 0x80000001BB981B20;
      v305[2] = v310 | 0x3000000000000000;
      v305[3] = 1;
      v313 = (uint64_t)v305 + *((int *)v285 + 7);
      sub_1BA6EDD40(v238, v313);
      v314 = v504;
      v311(v313, 0, 1, v504);
      v315 = v507;
      v507[12] = v496;
      v496 = swift_allocBox();
      v317 = v316;
      v318 = (void (*)(uint64_t, uint64_t, uint64_t))v505;
      v505((char *)v238, v306, v307);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5D0();
      v320 = v319;
      v321 = swift_allocObject();
      *(_QWORD *)(v321 + 16) = v320;
      *(_QWORD *)(v321 + 24) = MEMORY[0x1E0DEE9D8];
      *v317 = v312;
      v317[1] = 0x80000001BB981B40;
      v317[2] = v321 | 0x3000000000000000;
      v317[3] = 1;
      v322 = (uint64_t)v317 + *((int *)v285 + 7);
      sub_1BA6EDD40(v238, v322);
      v323 = v314;
      v324 = v506;
      v506(v322, 0, 1, v323);
      v315[13] = v496;
      v325 = swift_allocBox();
      v327 = v326;
      v328 = v502;
      v329 = v318;
      v318(v238, v493, v502);
      swift_storeEnumTagMultiPayload();
      v330 = swift_allocObject();
      *(_QWORD *)(v330 + 16) = 0x400921FB54442D18;
      *(_QWORD *)(v330 + 24) = MEMORY[0x1E0DEE9D8];
      *v327 = 26992;
      v327[1] = 0xE200000000000000;
      v327[2] = v330 | 0x3000000000000000;
      v327[3] = 1;
      v331 = (uint64_t)v327 + *((int *)v285 + 7);
      sub_1BA6EDD40(v238, v331);
      v332 = v324;
      v324(v331, 0, 1, v504);
      v315[14] = v325;
      v496 = swift_allocBox();
      v334 = v333;
      v335 = v329;
      if (qword_1ED3C6D20 != -1)
        swift_once();
      v336 = __swift_project_value_buffer(v328, (uint64_t)qword_1ED476B78);
      v335(v238, v336, v328);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D768();
      v338 = v337;
      v339 = swift_allocObject();
      *(_QWORD *)(v339 + 16) = v338;
      *(_QWORD *)(v339 + 24) = MEMORY[0x1E0DEE9D8];
      *v334 = v498;
      v334[1] = 0x80000001BB981B60;
      v334[2] = v339 | 0x3000000000000000;
      v334[3] = 1;
      v340 = v500;
      v341 = (uint64_t)v334 + *((int *)v500 + 7);
      sub_1BA6EDD40(v238, v341);
      v342 = v504;
      v332(v341, 0, 1, v504);
      v343 = v507;
      v507[15] = v496;
      v496 = swift_allocBox();
      v345 = v344;
      v335(v238, v336, v328);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D768();
      v347 = v346;
      v348 = swift_allocObject();
      *(_QWORD *)(v348 + 16) = v347;
      *(_QWORD *)(v348 + 24) = MEMORY[0x1E0DEE9D8];
      *v345 = v499;
      v345[1] = 0x80000001BB981B80;
      v345[2] = v348 | 0x3000000000000000;
      v345[3] = 1;
      v349 = (uint64_t)v345 + *((int *)v340 + 7);
      sub_1BA6EDD40(v238, v349);
      v332(v349, 0, 1, v342);
      v343[16] = v496;
      v495 = swift_allocBox();
      v351 = v350;
      if (qword_1ED3C6D48 != -1)
        swift_once();
      v496 = __swift_project_value_buffer(v328, (uint64_t)qword_1ED476BD8);
      v352 = (void (*)(uint64_t, uint64_t, uint64_t))v505;
      v505((char *)v238, v496, v328);
      swift_storeEnumTagMultiPayload();
      v353 = v485;
      sub_1BB86D750();
      sub_1BB86D930();
      v355 = v354;
      (*(void (**)(char *, uint64_t))(v486 + 8))(v353, v487);
      v356 = swift_allocObject();
      *(_QWORD *)(v356 + 16) = v355;
      *(_QWORD *)(v356 + 24) = MEMORY[0x1E0DEE9D8];
      *v351 = 0xD00000000000001BLL;
      v351[1] = 0x80000001BB981BA0;
      v351[2] = v356 | 0x3000000000000000;
      v351[3] = 1;
      v357 = v500;
      v358 = (uint64_t)v351 + *((int *)v500 + 7);
      sub_1BA6EDD40(v238, v358);
      v332(v358, 0, 1, v504);
      v359 = v507;
      v507[17] = v495;
      v495 = swift_allocBox();
      v361 = v360;
      v362 = v496;
      v352(v238, v496, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v364 = v363;
      v365 = swift_allocObject();
      *(_QWORD *)(v365 + 16) = v364;
      *(_QWORD *)(v365 + 24) = MEMORY[0x1E0DEE9D8];
      *v361 = v498;
      v361[1] = 0x80000001BB981BC0;
      v361[2] = v365 | 0x3000000000000000;
      v361[3] = 1;
      v366 = (uint64_t)v361 + *((int *)v357 + 7);
      sub_1BA6EDD40(v238, v366);
      v332(v366, 0, 1, v504);
      v367 = v332;
      v359[18] = v495;
      v498 = (char *)swift_allocBox();
      v369 = v368;
      v370 = v362;
      v371 = v362;
      v372 = v502;
      v352(v238, v370, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v374 = v373;
      v375 = swift_allocObject();
      *(_QWORD *)(v375 + 16) = v374;
      *(_QWORD *)(v375 + 24) = MEMORY[0x1E0DEE9D8];
      *v369 = v499;
      v369[1] = 0x80000001BB981BE0;
      v369[2] = v375 | 0x3000000000000000;
      v369[3] = 1;
      v376 = (uint64_t)v369 + *((int *)v357 + 7);
      sub_1BA6EDD40(v238, v376);
      v377 = v504;
      v367(v376, 0, 1, v504);
      v359[19] = v498;
      v499 = swift_allocBox();
      v379 = v378;
      v380 = v372;
      v381 = (void (*)(uint64_t, uint64_t, uint64_t))v505;
      v505((char *)v238, v371, v380);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v383 = v382;
      v384 = swift_allocObject();
      *(_QWORD *)(v384 + 16) = v383;
      *(_QWORD *)(v384 + 24) = MEMORY[0x1E0DEE9D8];
      *v379 = 0xD000000000000017;
      v379[1] = 0x80000001BB981C00;
      v379[2] = v384 | 0x3000000000000000;
      v379[3] = 1;
      v385 = (uint64_t)v379 + *((int *)v357 + 7);
      sub_1BA6EDD40(v238, v385);
      v367(v385, 0, 1, v377);
      v359[20] = v499;
      v386 = swift_allocBox();
      v388 = v387;
      v389 = v502;
      v381(v238, v496, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v391 = v390;
      v392 = swift_allocObject();
      *(_QWORD *)(v392 + 16) = v391;
      *(_QWORD *)(v392 + 24) = MEMORY[0x1E0DEE9D8];
      *v388 = 0xD000000000000016;
      v388[1] = 0x80000001BB981C20;
      v388[2] = v392 | 0x3000000000000000;
      v388[3] = 1;
      v393 = (uint64_t)v388 + *((int *)v357 + 7);
      sub_1BA6EDD40(v238, v393);
      v506(v393, 0, 1, v504);
      v394 = v359;
      v359[21] = v386;
      v499 = swift_allocBox();
      v396 = v395;
      v397 = v381;
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v398 = __swift_project_value_buffer(v389, (uint64_t)qword_1ED476BF0);
      v503 = (void *)v398;
      v397(v238, v398, v389);
      swift_storeEnumTagMultiPayload();
      v399 = sub_1BB86D63C();
      v400 = swift_allocObject();
      *(_QWORD *)(v400 + 16) = v399;
      *(_QWORD *)(v400 + 24) = MEMORY[0x1E0DEE9D8];
      strcpy((char *)v396, "column-count");
      *(_BYTE *)(v396 + 13) = 0;
      *(_WORD *)(v396 + 14) = -5120;
      *(_QWORD *)(v396 + 16) = v400 | 0x4000000000000000;
      *(_QWORD *)(v396 + 24) = 1;
      v401 = v500;
      v402 = v396 + *((int *)v500 + 7);
      sub_1BA6EDD40(v238, v402);
      v403 = v506;
      v506(v402, 0, 1, v504);
      v394[22] = v499;
      v499 = swift_allocBox();
      v405 = v404;
      v397(v238, v398, v389);
      v406 = (void (*)(uint64_t, void *, uint64_t))v397;
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5C4();
      v408 = v407;
      v409 = swift_allocObject();
      *(_QWORD *)(v409 + 16) = v408;
      v410 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v409 + 24) = MEMORY[0x1E0DEE9D8];
      v411 = v410;
      strcpy((char *)v405, "column-width");
      *(_BYTE *)(v405 + 13) = 0;
      *(_WORD *)(v405 + 14) = -5120;
      *(_QWORD *)(v405 + 16) = v409 | 0x3000000000000000;
      *(_QWORD *)(v405 + 24) = 1;
      v412 = v405 + *((int *)v401 + 7);
      sub_1BA6EDD40(v238, v412);
      v413 = v504;
      v403(v412, 0, 1, v504);
      v394[23] = v499;
      v499 = swift_allocBox();
      v415 = v414;
      v416 = v503;
      v417 = v502;
      v406(v238, v503, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5D0();
      v419 = v418;
      v420 = swift_allocObject();
      *(_QWORD *)(v420 + 16) = v419;
      *(_QWORD *)(v420 + 24) = v411;
      *v415 = v494;
      v415[1] = 0x80000001BB981C40;
      v415[2] = v420 | 0x3000000000000000;
      v415[3] = 1;
      v421 = (uint64_t)v415 + *((int *)v401 + 7);
      sub_1BA6EDD40(v238, v421);
      v422 = v506;
      v506(v421, 0, 1, v413);
      v394[24] = v499;
      v498 = (char *)swift_allocBox();
      v424 = v423;
      v406(v238, v416, v417);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D648();
      v426 = v425;
      v427 = swift_allocObject();
      *(_QWORD *)(v427 + 16) = v426;
      *(_QWORD *)(v427 + 24) = MEMORY[0x1E0DEE9D8];
      v499 = 0xD000000000000010;
      *v424 = 0xD000000000000010;
      v424[1] = 0x80000001BB981C60;
      v424[2] = v427 | 0x3000000000000000;
      v424[3] = 1;
      v428 = (uint64_t)v424 + *((int *)v401 + 7);
      sub_1BA6EDD40(v238, v428);
      v429 = v413;
      v422(v428, 0, 1, v413);
      v394[25] = v498;
      v430 = v394;
      v431 = v401;
      v496 = swift_allocBox();
      v433 = v432;
      v434 = v502;
      v435 = (void (*)(uint64_t, void *, uint64_t))v505;
      v505((char *)v238, (uint64_t)v503, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5E8();
      v437 = v436;
      v438 = swift_allocObject();
      *(_QWORD *)(v438 + 16) = v437;
      *(_QWORD *)(v438 + 24) = MEMORY[0x1E0DEE9D8];
      v498 = (char *)0xD000000000000019;
      *v433 = 0xD000000000000019;
      v433[1] = 0x80000001BB981C80;
      v433[2] = v438 | 0x3000000000000000;
      v433[3] = 1;
      v439 = (uint64_t)v433 + *((int *)v431 + 7);
      sub_1BA6EDD40(v238, v439);
      v440 = v506;
      v506(v439, 0, 1, v429);
      v430[26] = v496;
      v496 = swift_allocBox();
      v442 = v441;
      v435(v238, v503, v434);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D654();
      v444 = v443;
      v445 = swift_allocObject();
      *(_QWORD *)(v445 + 16) = v444;
      *(_QWORD *)(v445 + 24) = MEMORY[0x1E0DEE9D8];
      *v442 = v499;
      v442[1] = 0x80000001BB981CA0;
      v442[2] = v445 | 0x3000000000000000;
      v442[3] = 1;
      v446 = v500;
      v447 = (uint64_t)v442 + *((int *)v500 + 7);
      sub_1BA6EDD40(v238, v447);
      v440(v447, 0, 1, v429);
      v430[27] = v496;
      v448 = swift_allocBox();
      v450 = v449;
      v435(v238, v503, v502);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5F4();
      v452 = v451;
      v453 = swift_allocObject();
      *(_QWORD *)(v453 + 16) = v452;
      *(_QWORD *)(v453 + 24) = MEMORY[0x1E0DEE9D8];
      *v450 = v498;
      v450[1] = 0x80000001BB981CC0;
      v450[2] = v453 | 0x3000000000000000;
      v450[3] = 1;
      v454 = (uint64_t)v450 + *((int *)v446 + 7);
      sub_1BA6EDD40(v238, v454);
      v506(v454, 0, 1, v504);
      v430[28] = v448;
      v455 = v497;
      v456 = v497[15];
      v457 = v497[16];
      v458 = v492;
      __swift_project_boxed_opaque_existential_1(v492, v456);
      v459 = (*(uint64_t (**)(uint64_t, uint64_t))(v457 + 8))(v456, v457);
      v460 = v455[15];
      v461 = v455[16];
      __swift_project_boxed_opaque_existential_1(v458, v460);
      v462 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v461 + 16))(v460, v461);
      v463 = v455[15];
      v464 = v455[16];
      __swift_project_boxed_opaque_existential_1(v458, v463);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v464 + 24))(&v509, v463, v464);
      v465 = v509;
      v466 = v455[15];
      v467 = v455[16];
      __swift_project_boxed_opaque_existential_1(v458, v466);
      v468 = (*(uint64_t (**)(uint64_t, uint64_t))(v467 + 40))(v466, v467);
      v508 = v514;
      sub_1BA4C010C((uint64_t)v518, (uint64_t)&v509);
      v469 = v455[15];
      v470 = v455[16];
      __swift_project_boxed_opaque_existential_1(v458, v469);
      v471 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v470 + 32);
      v472 = v462;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v471(&v516, v469, v470);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v473 = v516;
      v474 = v517;
      type metadata accessor for FormatSystem();
      v475 = swift_allocObject();
      v476 = v507;
      *(_QWORD *)(v475 + 16) = v508;
      *(_QWORD *)(v475 + 24) = v476;
      sub_1BA4CECCC(&v509, v475 + 32);
      *(_QWORD *)(v475 + 72) = v459;
      *(_QWORD *)(v475 + 80) = v462;
      *(_OWORD *)(v475 + 88) = v465;
      *(_QWORD *)(v475 + 104) = v468;
      *(_QWORD *)(v475 + 112) = v473;
      *(_QWORD *)(v475 + 120) = v474;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v518);
      return v475;
  }
}

uint64_t sub_1BB3C1D78()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB3C1DA0()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB3C1E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = swift_projectBox();
  sub_1BB3C2C9C(v4, v1);
  v5 = v3 + *(int *)(type metadata accessor for FormatServiceOptions() + 40);
  sub_1BB5BF6BC(v2, v5);
  if (!v0)
  {
    v7 = sub_1BB5BF2E0(v5);
    v8 = sub_1BB0E7898(v7, v2);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    if ((v13 & 1) != 0)
    {
      sub_1BB874434();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      v15 = swift_dynamicCastClass();
      if (!v15)
      {
        swift_unknownObjectRelease();
        v15 = MEMORY[0x1E0DEE9D8];
      }
      v16 = *(_QWORD *)(v15 + 16);
      swift_release();
      if (__OFSUB__(v14 >> 1, v12))
      {
        __break(1u);
      }
      else if (v16 == (v14 >> 1) - v12)
      {
        v2 = swift_dynamicCastClass();
        if (!v2)
        {
          swift_unknownObjectRelease();
          v2 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_13;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v2 = sub_1BA85DB98(v8, v10, v12, v14);
LABEL_13:
    swift_unknownObjectRelease();
    sub_1BB3C2CE0(v1);
    return v2;
  }
  sub_1BB3C2CE0(v1);
  return v2;
}

void FormatSlotTransform.description.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB3C21B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = swift_projectBox();
  sub_1BB3C2C9C(v2, v0);
  *(_QWORD *)(v1 - 64) = 0x282074696D696CLL;
  *(_QWORD *)(v1 - 56) = 0xE700000000000000;
  FormatSlotItemCountLimit.description.getter();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  v5 = *(_QWORD *)(v1 - 64);
  sub_1BB3C2CE0(v0);
  return v5;
}

void sub_1BB3C24BC()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3C24F0()
{
  return 0;
}

void static FormatSlotTransform.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

BOOL sub_1BB3C25CC()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (v0 >> 61)
  {
    sub_1BA4D50FC(v0);
    sub_1BA4D50FC(v1);
    sub_1BA810070(v1);
    sub_1BA810070(v0);
    return 0;
  }
  else
  {
    v4 = swift_projectBox();
    v5 = swift_projectBox();
    sub_1BB3C2C9C(v4, v3);
    sub_1BB3C2C9C(v5, v2);
    sub_1BA4D50FC(v0);
    sub_1BA4D50FC(v1);
    v6 = _s8NewsFeed24FormatSlotItemCountLimitO2eeoiySbAC_ACtFZ_0(v3, v2);
    sub_1BB3C2CE0(v2);
    sub_1BB3C2CE0(v3);
    sub_1BA810070(v1);
    sub_1BA810070(v0);
  }
  return v6;
}

void FormatSlotTransform.identifier.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatSlotItemCountLimit();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB3C28F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = swift_projectBox();
  sub_1BB3C2C9C(v2, v0);
  *(_QWORD *)(v1 - 96) = 0x2D74696D696CLL;
  *(_QWORD *)(v1 - 88) = 0xE600000000000000;
  FormatSlotItemCountLimit.identifier.getter();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 - 96);
  sub_1BB3C2CE0(v0);
  return v4;
}

uint64_t sub_1BB3C2C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotItemCountLimit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3C2CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatSlotItemCountLimit();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BB3C2D1C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3C2D40();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3C2D40()
{
  unint64_t result;

  result = qword_1EF2C2C68;
  if (!qword_1EF2C2C68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotTransform, &type metadata for FormatSlotTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C68);
  }
  return result;
}

unint64_t sub_1BB3C2D84(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5737B0();
  a1[2] = sub_1BA55DA08();
  result = sub_1BB3C2DB8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3C2DB8()
{
  unint64_t result;

  result = qword_1EF2C2C70;
  if (!qword_1EF2C2C70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotTransform, &type metadata for FormatSlotTransform);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C70);
  }
  return result;
}

unint64_t *assignWithCopy for FormatSlotTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA4D50FC(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA810070(v4);
  return a1;
}

unint64_t *assignWithTake for FormatSlotTransform(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA810070(v3);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSlotTransform()
{
  return &type metadata for FormatSlotTransform;
}

uint64_t sub_1BB3C2E74(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB474044(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t FormatTextAlignment.textAlignment.getter()
{
  char *v0;

  return qword_1BB911D80[*v0];
}

uint64_t FormatTextAlignment.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3C2ED0 + 4 * byte_1BB911BB0[*v0]))(1952867692, 0xE400000000000000);
}

uint64_t sub_1BB3C2ED0()
{
  return 0x7468676972;
}

uint64_t sub_1BB3C2EE4()
{
  return 0x7265746E6563;
}

uint64_t sub_1BB3C2EF8()
{
  return 0x656966697473756ALL;
}

uint64_t sub_1BB3C2F14()
{
  return 0x6C61727574616ELL;
}

void sub_1BB3C2F2C(char *a1)
{
  sub_1BB7FC4B8(*a1);
}

void sub_1BB3C2F38()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB3C2F7C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB3C3000()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB3C3034()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB3C30A4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB3C30E4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3C3168()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB3C3190 + 4 * byte_1BB911BC4[*v0]))();
}

void sub_1BB3C3190(_QWORD *a1@<X8>)
{
  *a1 = 0x7468676972;
  a1[1] = 0xE500000000000000;
}

void sub_1BB3C31A8(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746E6563;
  a1[1] = 0xE600000000000000;
}

void sub_1BB3C31C0(_QWORD *a1@<X8>)
{
  *a1 = 0x656966697473756ALL;
  a1[1] = 0xE900000000000064;
}

void sub_1BB3C31E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61727574616ELL;
  a1[1] = 0xE700000000000000;
}

uint64_t FormatTextAlignment.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3C3224 + 4 * byte_1BB911BC9[*v0]))(1952867692, 0xE400000000000000);
}

uint64_t sub_1BB3C3224()
{
  return 0x7468676972;
}

uint64_t sub_1BB3C3238()
{
  return 0x7265746E6563;
}

uint64_t sub_1BB3C324C()
{
  return 0x656966697473756ALL;
}

uint64_t sub_1BB3C3268()
{
  return 0x6C61727574616ELL;
}

unint64_t sub_1BB3C3284()
{
  unint64_t result;

  result = qword_1EF2C2C78;
  if (!qword_1EF2C2C78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C78);
  }
  return result;
}

unint64_t sub_1BB3C32C8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB3C32F4();
  result = sub_1BA4CC020();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB3C32F4()
{
  unint64_t result;

  result = qword_1EF2C2C80;
  if (!qword_1EF2C2C80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C80);
  }
  return result;
}

unint64_t sub_1BB3C3338(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3C335C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3C335C()
{
  unint64_t result;

  result = qword_1EF2C2C88;
  if (!qword_1EF2C2C88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2C2C88);
  }
  return result;
}

unint64_t sub_1BB3C33A0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5D7E70();
  a1[2] = sub_1BA665D58();
  result = sub_1BB3C3284();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB3C33D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3C33FC + 4 * byte_1BB911BCE[*v0]))(1952867692, 0xE400000000000000);
}

uint64_t sub_1BB3C33FC()
{
  return 0x7468676972;
}

uint64_t sub_1BB3C3410()
{
  return 0x7265746E6563;
}

uint64_t sub_1BB3C3424()
{
  return 0x656966697473756ALL;
}

uint64_t sub_1BB3C3440()
{
  return 0x6C61727574616ELL;
}

ValueMetadata *type metadata accessor for FormatTextAlignment()
{
  return &type metadata for FormatTextAlignment;
}

uint64_t sub_1BB3C3468(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v16;
    v4 = (void **)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      swift_unknownObjectRetain();
      v7 = v5;
      v8 = objc_msgSend(v6, sel_articleID);
      v9 = sub_1BB8729A0();
      v11 = v10;

      swift_unknownObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_1BA7447E8(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FeedTopicCluster.replacing(headlines:titleModification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v6 = *(unsigned __int8 *)(a2 + 16);
  v7 = *(id *)v3;
  v8 = *(_QWORD *)(v3 + 16);
  if (v6 == 255)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BB872970();
    if ((v6 & 1) != 0)
      v12 = objc_msgSend(v7, sel_setTitleDisplaySuffixOverride_, v11);
    else
      v12 = objc_msgSend(v7, sel_setTitleDisplayPrefixOverride_, v11);
    v7 = v12;

    sub_1BB3C37CC(v9, v10, v6);
  }
  *a3 = v7;
  a3[1] = a1;
  a3[2] = v8;
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicCluster.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedTopicCluster.scoredHeadlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicCluster.minClusterSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FeedTopicCluster.headlines.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BB873DD4();
    v3 = 32;
    do
    {
      swift_unknownObjectRetain();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v3 += 16;
      --v1;
    }
    while (v1);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t FeedTopicCluster.articleIDs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BB3C3468(v0);
  swift_bridgeObjectRelease();
  return v1;
}

BOOL FeedTopicCluster.titleHasPrefix.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_titleDisplayPrefix);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t FeedTopicCluster.init(tag:scoredHeadlines:minClusterSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_1BB3C37CC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_1BAA49EA8();
  return result;
}

uint64_t destroy for FeedTopicCluster()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed16FeedTopicClusterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeedTopicCluster(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for FeedTopicCluster(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FeedTopicCluster()
{
  return &type metadata for FeedTopicCluster;
}

ValueMetadata *type metadata accessor for FeedTopicCluster.TopicTitleModification()
{
  return &type metadata for FeedTopicCluster.TopicTitleModification;
}

uint64_t SharingActivityProviderFactoryType.createActivityProvider(for:tracker:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, 0, 0, 0, 0, a2, 0, a3, a4, a5);
}

uint64_t SharingActivityProviderFactoryType.createActivityProvider(for:feedItemIdentifier:tracker:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, 0, 0, a2, a3, a4, 0, a5, a6, a7);
}

uint64_t SharingActivityProviderFactoryType.createActivityProvider(for:feedItemIdentifier:tracker:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a7 + 8))(a1, 0, 0, a2, a3, a4, a5, 0, a6, a7);
}

uint64_t SharingActivityProviderFactory.__allocating_init(sharingActivityItemFactory:activityTypeProvider:issueActivityTypeProvider:puzzleActivityTypeProvider:puzzleTypeActivityTypeProvider:paidAccessChecker:subscriptionController:)(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  sub_1BA4CECCC(a1, v14 + 16);
  sub_1BA4CECCC(a2, v14 + 56);
  sub_1BA4CECCC(a3, v14 + 96);
  sub_1BA4CECCC(a4, v14 + 136);
  sub_1BB3C3B0C(a5, v14 + 176);
  *(_QWORD *)(v14 + 216) = a6;
  *(_QWORD *)(v14 + 224) = a7;
  return v14;
}

uint64_t SharingActivityProviderFactory.init(sharingActivityItemFactory:activityTypeProvider:issueActivityTypeProvider:puzzleActivityTypeProvider:puzzleTypeActivityTypeProvider:paidAccessChecker:subscriptionController:)(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1BA4CECCC(a1, v7 + 16);
  sub_1BA4CECCC(a2, v7 + 56);
  sub_1BA4CECCC(a3, v7 + 96);
  sub_1BA4CECCC(a4, v7 + 136);
  sub_1BB3C3B0C(a5, v7 + 176);
  *(_QWORD *)(v7 + 216) = a6;
  *(_QWORD *)(v7 + 224) = a7;
  return v7;
}

uint64_t sub_1BB3C3B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D2A28, (uint64_t (*)(uint64_t))sub_1BB3C3B68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB3C3B68()
{
  unint64_t result;

  result = qword_1ED3D2A20;
  if (!qword_1ED3D2A20)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3D2A20);
  }
  return result;
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:selectedText:feedItemIdentifier:tracker:sourceView:sourceItem:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v41;
  uint64_t v42;

  v8 = v7;
  v11 = sub_1BB3C3F20(a1);
  v12 = v7[10];
  v13 = v7[11];
  __swift_project_boxed_opaque_existential_1(v7 + 7, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v15 = a7;
  v16 = sub_1BB3C5F14(v14);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v41)
    {
LABEL_3:
      if (!v11)
        goto LABEL_13;
      LOBYTE(v42) = v11;
      if ((objc_msgSend(a1, sel_respondsToSelector_, sel_parentIssue, v42) & 1) != 0)
      {
        v17 = objc_msgSend(a1, sel_parentIssue);
        if (v17)
        {
          v18 = v17;
          if ((objc_msgSend(a1, sel_respondsToSelector_, sel_role) & 1) != 0)
          {
            v19 = v18;
            if (objc_msgSend(a1, sel_role) == (id)2)
            {
              v20 = v8 + 2;
              v21 = v8[5];
              v22 = v8[6];
              __swift_project_boxed_opaque_existential_1(v20, v21);
              (*(void (**)(id, uint64_t, uint64_t))(v22 + 32))(v19, v21, v22);

LABEL_13:
              sub_1BA4B07F0(0, &qword_1EF2C2C90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v25 = swift_allocObject();
              *(_OWORD *)(v25 + 16) = xmmword_1BB8832C0;
              v26 = (void *)*MEMORY[0x1E0CEB1A8];
              v27 = (void *)*MEMORY[0x1E0CEB220];
              *(_QWORD *)(v25 + 32) = *MEMORY[0x1E0CEB1A8];
              *(_QWORD *)(v25 + 40) = v27;
              v28 = (void *)*MEMORY[0x1E0CEB1B8];
              v29 = (void *)*MEMORY[0x1E0CEB228];
              *(_QWORD *)(v25 + 48) = *MEMORY[0x1E0CEB1B8];
              *(_QWORD *)(v25 + 56) = v29;
              v30 = (void *)*MEMORY[0x1E0CEB1F8];
              v31 = (void *)*MEMORY[0x1E0CEB210];
              *(_QWORD *)(v25 + 64) = *MEMORY[0x1E0CEB1F8];
              *(_QWORD *)(v25 + 72) = v31;
              v32 = (void *)*MEMORY[0x1E0CEB1C0];
              *(_QWORD *)(v25 + 80) = *MEMORY[0x1E0CEB1C0];
              objc_allocWithZone((Class)sub_1BB8708F4());
              v33 = v26;
              v34 = v27;
              v35 = v28;
              v36 = v29;
              v37 = v30;
              v38 = v31;
              v39 = v32;
              return sub_1BB8708DC();
            }

          }
        }
      }
      v23 = v8[5];
      v24 = v8[6];
      __swift_project_boxed_opaque_existential_1(v8 + 2, v23);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8))(a1, a2, a3, v23, v24);
      goto LABEL_13;
    }
  }
  else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  sub_1BB8708F4();
  return sub_1BB8708E8();
}

BOOL sub_1BB3C3F20(void *a1)
{
  uint64_t v1;
  char **v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  unint64_t v10;
  void *v11;
  unsigned int v12;
  unsigned __int8 v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  id v33;
  unsigned int v34;
  void *v35;
  id v36;
  unint64_t v37;
  id v38;
  unsigned int v39;
  id v40;
  id v41;
  void *v42;
  id v44;
  id v45;
  unsigned int v46;
  id v47;
  id v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[24];
  uint64_t v52;

  v3 = &selRef_backgroundColor;
  v4 = objc_msgSend(a1, sel_sourceChannel);
  if (v4)
  {
    v5 = v4;
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_role) & 1) != 0
      && objc_msgSend(a1, sel_role) == (id)2)
    {
      v6 = *(void **)(v1 + 216);
      swift_unknownObjectRetain();
      v47 = v6;
      v7 = objc_msgSend(v6, sel_purchaseProvider);
      if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
      {
        v8 = objc_msgSend(v5, sel_asSection);
        if (!v8
          || (v9 = objc_msgSend(v8, sel_parentID), swift_unknownObjectRelease(), !v9))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_40;
        }
      }
      else
      {
        v9 = objc_msgSend(v5, sel_identifier);
      }
      v27 = sub_1BB8729A0();
      v29 = v28;

      v30 = objc_msgSend(v7, sel_purchasedTagIDs);
      v31 = sub_1BB873030();

      LOBYTE(v30) = sub_1BA761FE4(v27, v29, v31);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
LABEL_40:
        v32 = (char *)objc_msgSend(objc_msgSend(v47, sel_bundleSubscriptionProvider), sel_bundleSubscription);
        swift_unknownObjectRelease();
        if (objc_getAssociatedObject(v32, v32 + 1))
        {
          sub_1BB873B64();
          swift_unknownObjectRelease();
        }
        else
        {
          v49 = 0u;
          v50 = 0u;
        }
        sub_1BA78DE64((uint64_t)&v49, (uint64_t)v51);
        if (v52)
        {
          sub_1BA78DE28();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v35 = v48;
            v36 = objc_msgSend(v48, sel_integerValue);
            if (v36 == (id)-1)
            {

              goto LABEL_73;
            }
            v37 = (unint64_t)v36;
LABEL_57:
            if (objc_getAssociatedObject(v32, (const void *)~v37))
            {
              sub_1BB873B64();
              swift_unknownObjectRelease();
            }
            else
            {
              v49 = 0u;
              v50 = 0u;
            }
            sub_1BA78DE64((uint64_t)&v49, (uint64_t)v51);
            if (v52)
            {
              sub_1BA78DE28();
              if ((swift_dynamicCast() & 1) != 0)
              {
                v38 = v48;
                v39 = objc_msgSend(v38, sel_integerValue);

                if ((((v39 + 1) ^ ((_DWORD)v37 + 1)) & 1) != 0)
                {
LABEL_73:
                  v44 = objc_msgSend(objc_msgSend(v47, sel_bundleSubscriptionProvider), sel_bundleSubscription);
                  swift_unknownObjectRelease();
                  v45 = objc_msgSend(v5, sel_identifier);
                  if (!v45)
                  {
                    sub_1BB8729A0();
                    v45 = (id)sub_1BB872970();
                    swift_bridgeObjectRelease();
                  }
                  v46 = objc_msgSend(v44, sel_containsTagID_, v45);
                  swift_unknownObjectRelease();

                  if (v46)
                  {
                    swift_unknownObjectRelease();
                    v3 = &selRef_backgroundColor;
                    goto LABEL_9;
                  }
LABEL_77:
                  v22 = objc_msgSend(v5, sel_isSandbox);
                  swift_unknownObjectRelease();
                  return (BOOL)v22;
                }
LABEL_66:
                swift_unknownObjectRelease();
                goto LABEL_77;
              }
            }
            else
            {
              sub_1BA6EDA74((uint64_t)v51);
            }

            if ((v37 & 1) != 0)
              goto LABEL_73;
            goto LABEL_66;
          }
        }
        else
        {
          sub_1BA6EDA74((uint64_t)v51);
        }
        v35 = 0;
        v37 = 0;
        goto LABEL_57;
      }
      swift_unknownObjectRelease_n();
      v3 = &selRef_backgroundColor;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
LABEL_9:
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_role) & 1) != 0)
  {
    v10 = (unint64_t)objc_msgSend(a1, sel_role);
    if (v10 < 8 && ((0x99u >> v10) & 1) != 0)
      return 0;
  }
  v11 = *(void **)(v1 + 216);
  v12 = objc_msgSend(a1, sel_isPaid);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v13 = objc_msgSend(a1, sel_isBundlePaid);
  else
    v13 = 0;
  v14 = objc_msgSend(a1, v3[117]);
  v15 = (uint64_t)v14;
  if (v14)
  {
    v16 = objc_msgSend(v14, sel_identifier);
    swift_unknownObjectRelease();
    v17 = sub_1BB8729A0();
    v15 = v18;

    if (v12)
      goto LABEL_17;
LABEL_22:
    if ((v13 & 1) != 0)
      goto LABEL_25;
    goto LABEL_23;
  }
  v17 = 0;
  if (!v12)
    goto LABEL_22;
LABEL_17:
  v19 = objc_msgSend(v11, sel_purchaseProvider);
  if (v15)
  {
    v20 = objc_msgSend(v19, sel_purchasedTagIDs);
    v21 = sub_1BB873030();

    LOBYTE(v20) = sub_1BA761FE4(v17, v15, v21);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      if ((v13 & 1) == 0)
        goto LABEL_49;
      goto LABEL_25;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_unknownObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_49;
LABEL_25:
  if (!v15)
    return 0;
  v23 = (char *)objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v23, v23 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v49, (uint64_t)v51);
  if (!v52)
  {
    sub_1BA6EDA74((uint64_t)v51);
    goto LABEL_34;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    v24 = 0;
    v26 = 0;
    goto LABEL_35;
  }
  v24 = v48;
  v25 = objc_msgSend(v48, sel_integerValue);
  if (v25 == (id)-1)
  {

    goto LABEL_68;
  }
  v26 = (unint64_t)v25;
LABEL_35:
  if (objc_getAssociatedObject(v23, (const void *)~v26))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v49, (uint64_t)v51);
  if (v52)
  {
    sub_1BA78DE28();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v33 = v48;
      v34 = objc_msgSend(v33, sel_integerValue);

      if ((((v34 + 1) ^ ((_DWORD)v26 + 1)) & 1) != 0)
        goto LABEL_68;
LABEL_49:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_1BA6EDA74((uint64_t)v51);
  }

  if ((v26 & 1) == 0)
    goto LABEL_49;
LABEL_68:
  v40 = objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v41 = objc_msgSend(v40, sel_bundleChannelIDs);

  v42 = (void *)sub_1BB872970();
  LOBYTE(v40) = objc_msgSend(v41, sel_containsObject_, v42);
  swift_bridgeObjectRelease();

  return (v40 & 1) != 0;
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(void *a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  void *v7;
  void *v8;
  unsigned int v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  objc_class *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v48;
  id v49;
  unint64_t v50;
  id v51;
  unsigned int v52;
  id v53;
  id v54;
  void *v55;
  unsigned __int8 v56;
  unsigned int v57;
  void *v58;
  id v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  v4 = v3;
  v7 = a1;
  v8 = (void *)v3[27];
  v9 = objc_msgSend(a1, sel_isPaid);
  v10 = objc_msgSend(v7, sel_isBundlePaid);
  v11 = objc_msgSend(objc_msgSend(v7, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v12 = sub_1BB8729A0();
  v14 = v13;

  if (!v9)
  {
    if ((v10 & 1) != 0)
      goto LABEL_6;
LABEL_8:
    v58 = a3;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v57 = v10;
  v15 = objc_msgSend(objc_msgSend(v8, sel_purchaseProvider), sel_purchasedTagIDs);
  v16 = v4;
  v17 = a3;
  v18 = v7;
  v19 = a2;
  v20 = v8;
  v21 = sub_1BB873030();

  LOBYTE(v15) = sub_1BA761FE4(v12, v14, v21);
  swift_unknownObjectRelease();
  v8 = v20;
  a2 = v19;
  v7 = v18;
  a3 = v17;
  v4 = v16;
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_8;
  if (!v57)
    goto LABEL_26;
LABEL_6:
  v22 = (char *)objc_msgSend(objc_msgSend(v8, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v58 = a3;
  if (objc_getAssociatedObject(v22, v22 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v60 = 0u;
    v61 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v60, (uint64_t)&v62);
  if (!*((_QWORD *)&v63 + 1))
  {
    sub_1BA6EDA74((uint64_t)&v62);
    goto LABEL_16;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v48 = 0;
    v50 = 0;
    goto LABEL_17;
  }
  v48 = v59;
  v49 = objc_msgSend(v59, sel_integerValue);
  if (v49 == (id)-1)
  {

    goto LABEL_28;
  }
  v50 = (unint64_t)v49;
LABEL_17:
  if (objc_getAssociatedObject(v22, (const void *)~v50))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v60 = 0u;
    v61 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v60, (uint64_t)&v62);
  if (!*((_QWORD *)&v63 + 1))
  {
    sub_1BA6EDA74((uint64_t)&v62);
LABEL_25:

    if ((v50 & 1) != 0)
      goto LABEL_28;
    goto LABEL_26;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_25;
  v51 = v59;
  v52 = objc_msgSend(v51, sel_integerValue);

  if (((v52 ^ v50) & 1) != 0)
  {
LABEL_28:
    v53 = objc_msgSend(objc_msgSend(v8, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v54 = objc_msgSend(v53, sel_bundleChannelIDs);

    v55 = (void *)sub_1BB872970();
    v56 = objc_msgSend(v54, sel_containsObject_, v55);
    swift_bridgeObjectRelease();

    if ((v56 & 1) == 0)
      goto LABEL_29;
LABEL_9:
    v23 = v4[15];
    v24 = v4[16];
    __swift_project_boxed_opaque_existential_1(v4 + 12, v23);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    v26 = v58;
    swift_retain();
    v27 = v7;
    swift_retain();
    sub_1BB3C62C0(v25, v4, (uint64_t)v27, a2, (uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    v28 = v4 + 2;
    v30 = v4[5];
    v29 = v4[6];
    __swift_project_boxed_opaque_existential_1(v28, v30);
    (*(void (**)(id, uint64_t, uint64_t))(v29 + 32))(v27, v30, v29);
    sub_1BA4B07F0(0, &qword_1EF2C2C90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB8832C0;
    v32 = (void *)*MEMORY[0x1E0CEB1A8];
    v33 = (void *)*MEMORY[0x1E0CEB220];
    *(_QWORD *)(v31 + 32) = *MEMORY[0x1E0CEB1A8];
    *(_QWORD *)(v31 + 40) = v33;
    v34 = (void *)*MEMORY[0x1E0CEB1B8];
    v35 = (void *)*MEMORY[0x1E0CEB228];
    *(_QWORD *)(v31 + 48) = *MEMORY[0x1E0CEB1B8];
    *(_QWORD *)(v31 + 56) = v35;
    v36 = (void *)*MEMORY[0x1E0CEB1F8];
    v37 = (void *)*MEMORY[0x1E0CEB210];
    *(_QWORD *)(v31 + 64) = *MEMORY[0x1E0CEB1F8];
    *(_QWORD *)(v31 + 72) = v37;
    v38 = (void *)*MEMORY[0x1E0CEB1C0];
    *(_QWORD *)(v31 + 80) = *MEMORY[0x1E0CEB1C0];
    v39 = (objc_class *)sub_1BB8708F4();
    v62 = 0u;
    v63 = 0u;
    objc_allocWithZone(v39);
    v40 = v32;
    v41 = v33;
    v42 = v34;
    v43 = v35;
    v44 = v36;
    v45 = v37;
    v46 = v38;
    return sub_1BB8708DC();
  }
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_29:
  sub_1BB8708F4();
  return sub_1BB8708E8();
}

{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v4 = v3;
  v8 = v3[10];
  v9 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v11 = a3;
  v12 = a1;
  swift_retain();
  swift_retain();
  sub_1BB3C6178(v10, v12, v4, a2, (uint64_t)a3);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  v13 = v4 + 2;
  v14 = v4[5];
  v15 = v4[6];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(id, uint64_t, uint64_t))(v15 + 64))(v12, v14, v15);
  sub_1BA4B07F0(0, &qword_1EF2C2C90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB8832C0;
  v17 = (void *)*MEMORY[0x1E0CEB1A8];
  v18 = (void *)*MEMORY[0x1E0CEB220];
  *(_QWORD *)(v16 + 32) = *MEMORY[0x1E0CEB1A8];
  *(_QWORD *)(v16 + 40) = v18;
  v19 = (void *)*MEMORY[0x1E0CEB1B8];
  v20 = (void *)*MEMORY[0x1E0CEB228];
  *(_QWORD *)(v16 + 48) = *MEMORY[0x1E0CEB1B8];
  *(_QWORD *)(v16 + 56) = v20;
  v21 = (void *)*MEMORY[0x1E0CEB1F8];
  v22 = (void *)*MEMORY[0x1E0CEB210];
  *(_QWORD *)(v16 + 64) = *MEMORY[0x1E0CEB1F8];
  *(_QWORD *)(v16 + 72) = v22;
  v23 = (void *)*MEMORY[0x1E0CEB1C0];
  *(_QWORD *)(v16 + 80) = *MEMORY[0x1E0CEB1C0];
  objc_allocWithZone((Class)sub_1BB8708F4());
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  v29 = v22;
  v30 = v23;
  return sub_1BB8708DC();
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:shareData:tracker:sourceView:sourceItem:)(id a1, uint64_t *a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  char v9;
  void *v11;
  char *v12;
  void *v13;
  id v14;
  unint64_t v15;
  char v16;
  void *v17;
  char v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  objc_class *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  unsigned int v44;
  id object;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;

  v5 = v4;
  v47 = a2[1];
  v48 = *a2;
  v8 = a2[3];
  v46 = a2[2];
  v9 = *((_BYTE *)a2 + 32);
  if (v8 != 1 && (v9 & 1) != 0)
    goto LABEL_28;
  v11 = (void *)v4[27];
  if (!objc_msgSend(a1, sel_isPaid))
    goto LABEL_28;
  v12 = (char *)objc_msgSend(objc_msgSend(v11, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  object = v12;
  if (objc_getAssociatedObject(v12, v12 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v50 = 0u;
    v51 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v50, (uint64_t)&v52);
  if (!*((_QWORD *)&v53 + 1))
  {
    v16 = v9;
    sub_1BA6EDA74((uint64_t)&v52);
LABEL_16:
    v13 = 0;
    v15 = 0;
    goto LABEL_17;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v16 = v9;
    goto LABEL_16;
  }
  v13 = v49;
  v14 = objc_msgSend(v49, sel_integerValue);
  if (v14 == (id)-1)
  {

    goto LABEL_28;
  }
  v15 = (unint64_t)v14;
  v16 = v9;
LABEL_17:
  if (objc_getAssociatedObject(object, (const void *)~v15))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v50 = 0u;
    v51 = 0u;
  }
  v9 = v16;
  sub_1BA78DE64((uint64_t)&v50, (uint64_t)&v52);
  if (*((_QWORD *)&v53 + 1))
  {
    sub_1BA78DE28();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = v13;
      v18 = v9;
      v19 = v49;
      v44 = objc_msgSend(v19, sel_integerValue);

      v9 = v18;
      if ((((v44 + 1) ^ ((_DWORD)v15 + 1)) & 1) != 0)
        goto LABEL_28;
LABEL_26:
      sub_1BB8708F4();
      return sub_1BB8708E8();
    }
  }
  else
  {
    sub_1BA6EDA74((uint64_t)&v52);
  }

  if ((v15 & 1) == 0)
    goto LABEL_26;
LABEL_28:
  v21 = v5[20];
  v22 = v5[21];
  __swift_project_boxed_opaque_existential_1(v5 + 17, v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v24 = a4;
  sub_1BB3C63EC(v23, v5, (uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  v25 = v5 + 2;
  v27 = v5[5];
  v26 = v5[6];
  __swift_project_boxed_opaque_existential_1(v25, v27);
  *(_QWORD *)&v52 = v48;
  *((_QWORD *)&v52 + 1) = v47;
  *(_QWORD *)&v53 = v46;
  *((_QWORD *)&v53 + 1) = v8;
  v54 = v9;
  (*(void (**)(id, __int128 *, uint64_t, uint64_t))(v26 + 40))(a1, &v52, v27, v26);
  sub_1BA4B07F0(0, &qword_1EF2C2C90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BB8832C0;
  v29 = (void *)*MEMORY[0x1E0CEB1A8];
  v30 = (void *)*MEMORY[0x1E0CEB220];
  *(_QWORD *)(v28 + 32) = *MEMORY[0x1E0CEB1A8];
  *(_QWORD *)(v28 + 40) = v30;
  v31 = (void *)*MEMORY[0x1E0CEB1B8];
  v32 = (void *)*MEMORY[0x1E0CEB228];
  *(_QWORD *)(v28 + 48) = *MEMORY[0x1E0CEB1B8];
  *(_QWORD *)(v28 + 56) = v32;
  v33 = (void *)*MEMORY[0x1E0CEB1F8];
  v34 = (void *)*MEMORY[0x1E0CEB210];
  *(_QWORD *)(v28 + 64) = *MEMORY[0x1E0CEB1F8];
  *(_QWORD *)(v28 + 72) = v34;
  v35 = (void *)*MEMORY[0x1E0CEB1C0];
  *(_QWORD *)(v28 + 80) = *MEMORY[0x1E0CEB1C0];
  v36 = (objc_class *)sub_1BB8708F4();
  v52 = 0u;
  v53 = 0u;
  objc_allocWithZone(v36);
  v37 = v29;
  v38 = v30;
  v39 = v31;
  v40 = v32;
  v41 = v33;
  v42 = v34;
  v43 = v35;
  return sub_1BB8708DC();
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  objc_class *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v5 = v4;
  sub_1BB3C650C((uint64_t)(v4 + 22), (uint64_t)&v34);
  if (v35)
  {
    sub_1BA4CECCC(&v34, (uint64_t)&v36);
    v10 = *((_QWORD *)&v37 + 1);
    v11 = v38;
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    v13 = a3;
    sub_1BB3C6568(v12, v5, a1, a2, (uint64_t)a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    sub_1BA5C699C((uint64_t)&v34, (unint64_t *)&unk_1ED3D2A28, (uint64_t (*)(uint64_t))sub_1BB3C3B68);
  }
  v14 = v5 + 2;
  v15 = v5[5];
  v16 = v5[6];
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, v15, v16);
  sub_1BA4B07F0(0, &qword_1EF2C2C90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB8832C0;
  v18 = (void *)*MEMORY[0x1E0CEB1A8];
  v19 = (void *)*MEMORY[0x1E0CEB220];
  *(_QWORD *)(v17 + 32) = *MEMORY[0x1E0CEB1A8];
  *(_QWORD *)(v17 + 40) = v19;
  v20 = (void *)*MEMORY[0x1E0CEB1B8];
  v21 = (void *)*MEMORY[0x1E0CEB228];
  *(_QWORD *)(v17 + 48) = *MEMORY[0x1E0CEB1B8];
  *(_QWORD *)(v17 + 56) = v21;
  v22 = (void *)*MEMORY[0x1E0CEB1F8];
  v23 = (void *)*MEMORY[0x1E0CEB210];
  *(_QWORD *)(v17 + 64) = *MEMORY[0x1E0CEB1F8];
  *(_QWORD *)(v17 + 72) = v23;
  v24 = (void *)*MEMORY[0x1E0CEB1C0];
  *(_QWORD *)(v17 + 80) = *MEMORY[0x1E0CEB1C0];
  v25 = (objc_class *)sub_1BB8708F4();
  v36 = 0u;
  v37 = 0u;
  objc_allocWithZone(v25);
  v26 = v18;
  v27 = v19;
  v28 = v20;
  v29 = v21;
  v30 = v22;
  v31 = v23;
  v32 = v24;
  return sub_1BB8708DC();
}

uint64_t SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;

  v4 = v3;
  v8 = v3[10];
  v9 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v11 = a3;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB3C604C(v10, v4, a1, a2, (uint64_t)a3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  v12 = v4 + 2;
  v13 = v4[5];
  v14 = v4[6];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1, v13, v14);
  sub_1BA4B07F0(0, &qword_1EF2C2C90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB8832C0;
  v16 = (void *)*MEMORY[0x1E0CEB1A8];
  v17 = (void *)*MEMORY[0x1E0CEB220];
  *(_QWORD *)(v15 + 32) = *MEMORY[0x1E0CEB1A8];
  *(_QWORD *)(v15 + 40) = v17;
  v18 = (void *)*MEMORY[0x1E0CEB1B8];
  v19 = (void *)*MEMORY[0x1E0CEB228];
  *(_QWORD *)(v15 + 48) = *MEMORY[0x1E0CEB1B8];
  *(_QWORD *)(v15 + 56) = v19;
  v20 = (void *)*MEMORY[0x1E0CEB1F8];
  v21 = (void *)*MEMORY[0x1E0CEB210];
  *(_QWORD *)(v15 + 64) = *MEMORY[0x1E0CEB1F8];
  *(_QWORD *)(v15 + 72) = v21;
  v22 = (void *)*MEMORY[0x1E0CEB1C0];
  *(_QWORD *)(v15 + 80) = *MEMORY[0x1E0CEB1C0];
  objc_allocWithZone((Class)sub_1BB8708F4());
  v23 = v16;
  v24 = v17;
  v25 = v18;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  v29 = v22;
  return sub_1BB8708DC();
}

uint64_t SharingActivityProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1BA5C699C(v0 + 176, (unint64_t *)&unk_1ED3D2A28, (uint64_t (*)(uint64_t))sub_1BB3C3B68);
  swift_unknownObjectRelease();

  return v0;
}

uint64_t SharingActivityProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1BA5C699C(v0 + 176, (unint64_t *)&unk_1ED3D2A28, (uint64_t (*)(uint64_t))sub_1BB3C3B68);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1BB3C5894(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return SharingActivityProviderFactory.createActivityProvider(for:selectedText:feedItemIdentifier:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BB3C58B4(void *a1, uint64_t a2, void *a3)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(a1, a2, a3);
}

uint64_t sub_1BB3C58D4(void *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  return SharingActivityProviderFactory.createActivityProvider(for:shareData:tracker:sourceView:sourceItem:)(a1, a2, a3, a4);
}

uint64_t sub_1BB3C58F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:sourceItem:)(a1, a2, a3, a4);
}

uint64_t sub_1BB3C5914(uint64_t a1, uint64_t a2, void *a3)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(a1, a2, a3);
}

uint64_t sub_1BB3C5934(void *a1, uint64_t a2, void *a3)
{
  return SharingActivityProviderFactory.createActivityProvider(for:tracker:sourceView:)(a1, a2, a3);
}

void sub_1BB3C5954(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  __asm { BR              X9 }
}

uint64_t sub_1BB3C5A68(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  id v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;

  v27 = v20;
  v28 = objc_msgSend(v25, sel_routeURL);
  if (!v28)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v24, 1, 1, v21);
    goto LABEL_5;
  }
  v29 = v28;
  sub_1BB86C5EC();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v24, v23, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v21) == 1)
  {
LABEL_5:
    sub_1BA5C699C(v24, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v30 = *(_QWORD **)(v26 - 104);
    v31 = v30[5];
    v32 = v30[6];
    __swift_project_boxed_opaque_existential_1(v30 + 2, v31);
    *(_BYTE *)(v26 - 70) = v27;
    result = (*(uint64_t (**)(void *, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v32 + 104))(v25, *(_QWORD *)(v26 - 144), *(_QWORD *)(v26 - 136), v26 - 70, *(_QWORD *)(v26 - 120), *(_QWORD *)(v26 - 112), *(_QWORD *)(v26 - 128), v31, v32);
    v34 = result;
    goto LABEL_6;
  }
  result = sub_1BA5C699C(v24, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v34 = 0;
LABEL_6:
  **(_QWORD **)(v26 - 96) = v34;
  return result;
}

uint64_t sub_1BB3C5F14(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  result = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      v8 = *(_BYTE *)(a1 + i + 32);
      sub_1BB3C5954((uint64_t)&v8);
      if (v1)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v7)
      {
        MEMORY[0x1BCCE36AC](v6);
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1BB3C604C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v7;
  _QWORD *v9;
  uint64_t i;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v17;
  uint64_t v18;

  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v9 = a2 + 2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v7; ++i)
    {
      v11 = *(_BYTE *)(a1 + i + 32);
      v12 = a2[5];
      v13 = a2[6];
      __swift_project_boxed_opaque_existential_1(v9, v12);
      v17 = v11;
      if ((*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 112))(a3, &v17, a4, a5, v12, v13))
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1BB3C6178(uint64_t a1, void *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v7;
  uint64_t i;
  int v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v18;
  uint64_t v19;

  result = MEMORY[0x1E0DEE9D8];
  v19 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v15 = a3 + 2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v7; ++i)
    {
      v11 = *(unsigned __int8 *)(a1 + i + 32);
      if (objc_msgSend(a2, sel_feedConfiguration) != (id)3 || v11 != 6)
      {
        v13 = a3[5];
        v14 = a3[6];
        __swift_project_boxed_opaque_existential_1(v15, v13);
        v18 = v11;
        if ((*(uint64_t (**)(void *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 160))(a2, &v18, a4, a5, v13, v14))
        {
          MEMORY[0x1BCCE36AC]();
          if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v19;
  }
  return result;
}

uint64_t sub_1BB3C62C0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v7;
  _QWORD *v9;
  uint64_t i;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v17;
  uint64_t v18;

  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v9 = a2 + 2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v7; ++i)
    {
      v11 = *(_BYTE *)(a1 + i + 32);
      v12 = a2[5];
      v13 = a2[6];
      __swift_project_boxed_opaque_existential_1(v9, v12);
      v17 = v11;
      if ((*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 128))(a3, &v17, a4, a5, v12, v13))
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1BB3C63EC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = a2 + 2;
    swift_bridgeObjectRetain();
    do
    {
      v9 = a2[6];
      __swift_project_boxed_opaque_existential_1(v8, a2[5]);
      if ((*(uint64_t (**)(uint64_t))(v9 + 136))(a3))
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1BB3C650C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D2A28, (uint64_t (*)(uint64_t))sub_1BB3C3B68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3C6568(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v8;
  _QWORD *v10;
  uint64_t i;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v19;
  uint64_t v20;

  result = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v10 = a2 + 2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v8; ++i)
    {
      v12 = *(_BYTE *)(a1 + i + 32);
      v13 = a2[5];
      v14 = a2[6];
      __swift_project_boxed_opaque_existential_1(v10, v13);
      v19 = v12;
      if ((*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 144))(a3, &v19, a4, a5, a6, v13, v14))
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:selectedText:feedItemIdentifier:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 8))();
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:tracker:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:shareData:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of SharingActivityProviderFactoryType.createActivityProvider(for:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t method lookup function for SharingActivityProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingActivityProviderFactory.__allocating_init(sharingActivityItemFactory:activityTypeProvider:issueActivityTypeProvider:puzzleActivityTypeProvider:puzzleTypeActivityTypeProvider:paidAccessChecker:subscriptionController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t LayeredMediaLayerRenderableProvider.renderable(for:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v3;
  id v4;
  uint64_t v5;
  id v6;
  Class v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  id v17;
  id v18;
  Class v19;
  id v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[7];
  _BYTE v33[7];
  _BYTE v34[126];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  uint64_t v42;
  id v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[64];
  _BYTE v47[25];
  __int128 v48[8];
  _BYTE v49[144];

  sub_1BA8FB30C(a1, (uint64_t)v48);
  sub_1BA8FB30C(v48, (uint64_t)v49);
  if (sub_1BA8FB348((uint64_t)v49) == 1)
  {
    v3 = (__int128 *)sub_1BA8FB354((uint64_t)v49);
    v4 = objc_allocWithZone(MEMORY[0x1E0D977A0]);
    sub_1BA8FB30C(v48, (uint64_t)v34);
    v5 = sub_1BA8FB354((uint64_t)v34);
    sub_1BA8FB364(v5);
    v6 = objc_msgSend(v4, sel_init);
    sub_1BA8FB4D0(0, &qword_1ED39C3A8, (unint64_t *)&qword_1ED39DA68);
    v8 = objc_allocWithZone(v7);
    v9 = v6;
    v10 = sub_1BB86F574();
    v39 = v3[4];
    v40 = v3[5];
    v41[0] = v3[6];
    *(_OWORD *)((char *)v41 + 9) = *(__int128 *)((char *)v3 + 105);
    v35 = *v3;
    v36 = v3[1];
    v37 = v3[2];
    v38 = v3[3];
    v42 = v10;
    v43 = v9;
    *(_OWORD *)&v46[32] = v39;
    *(_OWORD *)&v46[48] = v40;
    *(_OWORD *)v47 = v41[0];
    *(_OWORD *)&v47[9] = *(_OWORD *)((char *)v41 + 9);
    v44 = v35;
    v45 = v36;
    *(_OWORD *)v46 = v37;
    *(_OWORD *)&v46[16] = v38;
    sub_1BA8FB474((uint64_t)&v42);
    v11 = a2;
  }
  else
  {
    v12 = sub_1BA8FB354((uint64_t)v49);
    v23 = *(_QWORD *)(v12 + 8);
    v24 = *(_QWORD *)v12;
    v13 = *(_BYTE *)(v12 + 16);
    v31 = a2;
    v14 = *(_BYTE *)(v12 + 32);
    v28 = *(_OWORD *)(v12 + 56);
    v29 = *(_OWORD *)(v12 + 40);
    v27 = *(_OWORD *)(v12 + 72);
    v25 = *(_QWORD *)(v12 + 24);
    v26 = *(_QWORD *)(v12 + 88);
    v15 = *(_BYTE *)(v12 + 96);
    v30 = *(_QWORD *)(v12 + 104);
    v16 = *(_BYTE *)(v12 + 112);
    v17 = objc_allocWithZone(MEMORY[0x1E0D97798]);
    sub_1BA8FB30C(v48, (uint64_t)&v35);
    sub_1BA8FB354((uint64_t)&v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = objc_msgSend(v17, sel_init);
    sub_1BA8FB4D0(0, &qword_1ED39C3A0, &qword_1ED39DA58);
    v20 = objc_allocWithZone(v19);
    v21 = v18;
    v42 = sub_1BB86F574();
    v43 = v21;
    *(_QWORD *)&v44 = v24;
    *((_QWORD *)&v44 + 1) = v23;
    LOBYTE(v45) = v13;
    *(_DWORD *)((char *)&v45 + 1) = *(_DWORD *)v34;
    DWORD1(v45) = *(_DWORD *)&v34[3];
    *((_QWORD *)&v45 + 1) = v25;
    v46[0] = v14;
    *(_DWORD *)&v46[4] = *(_DWORD *)&v33[3];
    *(_DWORD *)&v46[1] = *(_DWORD *)v33;
    *(_OWORD *)&v46[8] = v29;
    *(_OWORD *)&v46[24] = v28;
    *(_OWORD *)&v46[40] = v27;
    *(_QWORD *)&v46[56] = v26;
    v47[0] = v15;
    *(_DWORD *)&v47[4] = *(_DWORD *)&v32[3];
    *(_DWORD *)&v47[1] = *(_DWORD *)v32;
    *(_QWORD *)&v47[8] = v30;
    v47[16] = v16;
    sub_1BA8FB524((uint64_t)&v42);
    v11 = v31;
  }
  return sub_1BA8FB494((uint64_t)&v42, v11);
}

uint64_t LayeredMediaLayerRenderableProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LayeredMediaLayerRenderableProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for LayeredMediaLayerRenderableProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t CategoryViewLayoutAttributesFactory.__allocating_init(styler:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BA4CECCC(a1, v2 + 16);
  return v2;
}

uint64_t CategoryViewLayoutAttributesFactory.init(styler:)(__int128 *a1)
{
  uint64_t v1;

  sub_1BA4CECCC(a1, v1 + 16);
  return v1;
}

double sub_1BB3C6A58@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  double v9;
  double v10;
  double v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double MaxX;
  double v53;
  uint64_t v54;
  uint64_t v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat Width;
  double v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat height;
  double v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  double result;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  double v94;
  double v95;
  double rect;
  CGFloat recta;
  double v98;
  CGFloat v99;
  CGFloat v100;
  double x;
  CGFloat y;
  double v103;
  double v104;
  CGFloat v105;
  int *v106;
  CGFloat v107;
  uint64_t v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;

  v3 = v2;
  v106 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  v108 = a1;
  v6 = a1 + v106[5];
  v7 = *(uint64_t *)v6;
  v8 = *(unsigned __int8 *)(v6 + 8);
  if (v8)
  {
    if (v8 == 1 && v7 >= 1)
    {
      sub_1BB86D6FC();
      v10 = v9 / (double)v7;
      if (v10 > 110.0)
        v11 = v10;
      else
        v11 = 110.0;
    }
    else
    {
      v11 = 110.0;
    }
  }
  else
  {
    v11 = *(double *)&v7;
  }
  v12 = v3 + 2;
  v13 = v3[5];
  v14 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v104 = v11;
  v15 = v3[5];
  v16 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v18 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v20 = v3[5];
  v19 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v20);
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  swift_bridgeObjectRetain();
  v22 = v18;
  v23 = v21(v20, v19);
  *(_QWORD *)(inited + 64) = sub_1BA7425CC();
  *(_QWORD *)(inited + 40) = v23;
  sub_1BA76E82C(inited);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v25 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA50AD30((unint64_t *)&qword_1ED3B9880, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v26 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  sub_1BB8734D4();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v36 = v3[5];
  v37 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v36);
  v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
  objc_msgSend(v38, sel_pointSize);
  v40 = v39;

  v41 = v40 + *(double *)(v108 + v106[8]) + *(double *)(v108 + v106[8]);
  v42 = (double *)(v108 + v106[7]);
  v43 = v42[2];
  v44 = v3[5];
  v45 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v44);
  v46 = (*(double (**)(uint64_t, uint64_t))(v45 + 16))(v44, v45);
  v98 = *v42;
  rect = *v42 + v41 + v43 * v46;
  v47 = rect - *v42 - v43;
  v48 = rect * 35.0 / 60.0;
  v103 = *(double *)(v108 + v106[9]);
  v49 = v3[5];
  v50 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v49);
  v109.origin.x = v103 * (*(double (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
  v51 = v47 * 0.5;
  v109.origin.y = v51 - v48 * 0.5;
  v109.size.width = v48;
  v109.size.height = v48;
  v110 = CGRectIntegral(v109);
  x = v110.origin.x;
  y = v110.origin.y;
  v110.size.width = v48;
  v110.size.height = v48;
  MaxX = CGRectGetMaxX(v110);
  v53 = *(double *)(v108 + v106[10]);
  v54 = v3[5];
  v55 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v54);
  v56 = MaxX + v53 * (*(double (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
  v111.origin.x = v29;
  v111.origin.y = v31;
  v111.size.width = v33;
  v111.size.height = v35;
  v57 = v51 - CGRectGetHeight(v111) * 0.5;
  v112.origin.x = v29;
  v112.origin.y = v31;
  v112.size.width = v33;
  v112.size.height = v35;
  Width = CGRectGetWidth(v112);
  v113.origin.x = v29;
  v113.origin.y = v31;
  v113.size.width = v33;
  v113.size.height = v35;
  v114.size.height = CGRectGetHeight(v113);
  v114.origin.x = v56;
  v114.origin.y = v57;
  v114.size.width = Width;
  v115 = CGRectIntegral(v114);
  v59 = v115.origin.x;
  v60 = v115.origin.y;
  v92 = v115.size.width;
  v93 = v115.origin.y;
  v61 = v115.size.width;
  height = v115.size.height;
  v91 = v115.size.height;
  v63 = *(double *)(v108 + v106[11]);
  v64 = v3[5];
  v65 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v64);
  v66 = v63;
  v94 = v63;
  v67 = v104 - v63 * (*(double (**)(uint64_t, uint64_t))(v65 + 16))(v64, v65);
  v116.origin.x = v59;
  v116.origin.y = v60;
  v116.size.width = v61;
  v116.size.height = height;
  v68 = CGRectGetMaxX(v116);
  v69 = v3[5];
  v70 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v69);
  v71 = v68 + v66 * (*(double (**)(uint64_t, uint64_t))(v70 + 16))(v69, v70);
  if (v67 > v71)
    v72 = v67;
  else
    v72 = v71;
  v73 = 0;
  v74 = 0;
  v75 = rect;
  v117 = CGRectIntegral(*(CGRect *)(&v72 - 2));
  v105 = v117.origin.y;
  v107 = v117.origin.x;
  v95 = v117.size.height;
  recta = v117.size.width;
  v118.origin.x = UIEdgeInsetsInsetRect(v117.origin.x, v117.origin.y, v117.size.width, v117.size.height, v98, v42[1]);
  v119 = CGRectIntegral(v118);
  v99 = v119.origin.y;
  v100 = v119.origin.x;
  v89 = v119.size.height;
  v90 = v119.size.width;
  v76 = CGRectGetWidth(v119);
  v77 = v3[5];
  v78 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v77);
  v79 = v76 - v103 * (*(double (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
  v120.origin.x = x;
  v120.origin.y = y;
  v120.size.width = v48;
  v120.size.height = v48;
  v80 = v79 - CGRectGetWidth(v120);
  v121.origin.x = v59;
  v121.origin.y = v93;
  v121.size.width = v92;
  v121.size.height = v91;
  v81 = v80 - CGRectGetWidth(v121);
  v82 = v3[5];
  v83 = v3[6];
  __swift_project_boxed_opaque_existential_1(v12, v82);
  v84 = (v81 - v94 * (*(double (**)(uint64_t, uint64_t))(v83 + 16))(v82, v83)) * 0.5;
  v85 = x + v84;
  v86 = v59 + v84;
  sub_1BB86D774();
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(CGFloat *)(a2 + 32) = v100;
  *(CGFloat *)(a2 + 40) = v99;
  *(CGFloat *)(a2 + 48) = v90;
  *(CGFloat *)(a2 + 56) = v89;
  *(double *)(a2 + 64) = v85;
  *(CGFloat *)(a2 + 72) = y;
  *(double *)(a2 + 80) = v48;
  *(double *)(a2 + 88) = v48;
  *(double *)(a2 + 96) = v86;
  *(CGFloat *)(a2 + 104) = v93;
  *(CGFloat *)(a2 + 112) = v92;
  *(CGFloat *)(a2 + 120) = v91;
  *(_QWORD *)(a2 + 128) = v87;
  *(CGFloat *)(a2 + 136) = v107;
  *(CGFloat *)(a2 + 144) = v105;
  *(CGFloat *)(a2 + 152) = recta;
  result = v95;
  *(double *)(a2 + 160) = v95;
  return result;
}

uint64_t CategoryViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void (*v23)(double, double, double, double);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[21];
  uint64_t v53;

  v3 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86D924();
  v7 = v6;
  v9 = v8;
  sub_1BB86D900();
  v11 = v10;
  sub_1BB86D90C();
  *(_QWORD *)&v5[v3[8]] = 0x4030000000000000;
  *(_QWORD *)&v5[v3[10]] = 0x4018000000000000;
  *(_QWORD *)&v5[v3[11]] = 0x402E000000000000;
  *(_QWORD *)&v5[v3[12]] = 0x4024000000000000;
  *(_QWORD *)&v5[v3[13]] = 0x4024000000000000;
  *(_QWORD *)&v5[v3[9]] = 0;
  v12 = &v5[v3[6]];
  *(_QWORD *)v12 = v7;
  *((_QWORD *)v12 + 1) = v9;
  v13 = &v5[v3[5]];
  *(_QWORD *)v13 = v11;
  v13[8] = 0;
  v14 = &v5[v3[7]];
  *(_OWORD *)v14 = xmmword_1BB911EE0;
  *((_OWORD *)v14 + 1) = xmmword_1BB911EE0;
  sub_1BB3C7384((uint64_t)v5, (uint64_t)v52);
  v15 = v52[0];
  v16 = v52[1];
  v17 = v52[2];
  v18 = v52[3];
  v53 = v52[4];
  v51 = v52[5];
  v50 = v52[6];
  v49 = v52[7];
  v48 = v52[8];
  v47 = v52[9];
  v46 = v52[10];
  v45 = v52[11];
  v44 = v52[12];
  v43 = v52[13];
  v42 = v52[14];
  v41 = v52[15];
  v19 = *(double *)&v52[17];
  v40 = v52[16];
  v20 = *(double *)&v52[18];
  v21 = *(double *)&v52[19];
  v22 = *(double *)&v52[20];
  v23 = (void (*)(double, double, double, double))sub_1BB86D918();
  v23(v19, v20, v21, v22);
  if (v1)
  {
    sub_1BB3C7854((uint64_t)v5);
    return swift_release();
  }
  else
  {
    v29 = v24;
    v30 = v25;
    v31 = v26;
    v32 = v27;
    sub_1BB3C7854((uint64_t)v5);
    result = swift_release();
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v17;
    a1[3] = v18;
    v33 = v51;
    a1[4] = v53;
    a1[5] = v33;
    v34 = v49;
    a1[6] = v50;
    a1[7] = v34;
    v35 = v47;
    a1[8] = v48;
    a1[9] = v35;
    v36 = v45;
    a1[10] = v46;
    a1[11] = v36;
    v37 = v43;
    a1[12] = v44;
    a1[13] = v37;
    v38 = v41;
    a1[14] = v42;
    a1[15] = v38;
    a1[16] = v40;
    a1[17] = v29;
    a1[18] = v30;
    a1[19] = v31;
    a1[20] = v32;
  }
  return result;
}

double sub_1BB3C7384@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double *v15;
  double v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double v28;
  double v29;
  CGFloat v30;
  uint64_t inited;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double MaxX;
  double v55;
  uint64_t v56;
  uint64_t v57;
  CGFloat Height;
  uint64_t *v59;
  CGFloat v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  double result;
  CGFloat v65;
  uint64_t v66;
  double v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat y;
  CGFloat x;
  uint64_t v72;
  CGFloat v73;
  int *v74;
  uint64_t v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;

  v3 = v2;
  v6 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  v7 = a1 + v6[5];
  v8 = *(uint64_t *)v7;
  v9 = *(unsigned __int8 *)(v7 + 8);
  if (v9)
  {
    if (v9 == 1 && v8 >= 1)
    {
      sub_1BB86D6FC();
      v11 = v10 / (double)v8;
      if (v11 > 110.0)
        v12 = v11;
      else
        v12 = 110.0;
    }
    else
    {
      v12 = 110.0;
    }
  }
  else
  {
    v12 = *(double *)&v8;
  }
  v73 = v12;
  v13 = *(double *)(a1 + v6[8]);
  v14 = v13 + v13;
  v15 = (double *)(a1 + v6[7]);
  v16 = v15[2];
  v74 = v6;
  v17 = v2 + 2;
  v18 = v2[5];
  v19 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v18);
  v20 = v14 + v16 * (*(double (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v21 = *v15;
  v22 = v2[5];
  v23 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v22);
  v24 = v20 + v21 * (*(double (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v25 = v2[5];
  v26 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v25);
  v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
  objc_msgSend(v27, sel_pointSize);
  v29 = v28;

  v30 = (v24 + v29) * 35.0 / 60.0;
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v72 = a1;
  v32 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v34 = v3[5];
  v33 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v34);
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain();
  v36 = v32;
  v37 = v35(v34, v33);
  *(_QWORD *)(inited + 64) = sub_1BA7425CC();
  *(_QWORD *)(inited + 40) = v37;
  sub_1BA76E82C(inited);
  v38 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v39 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA50AD30((unint64_t *)&qword_1ED3B9880, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v40 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v41 = objc_msgSend(v38, sel_initWithString_attributes_, v39, v40);

  sub_1BB8734D4();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v68 = v48;
  v69 = v46;
  v49 = v48;

  v76.origin.x = v43;
  v76.origin.y = v45;
  v76.size.width = v47;
  v76.size.height = v49;
  v50 = v24 + CGRectGetHeight(v76) - v21 - v16;
  v51 = *(double *)(v72 + v74[9]);
  v52 = v3[5];
  v53 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v52);
  v77.origin.x = v51 * (*(double (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
  v77.origin.y = v50 * 0.5 - v30 * 0.5;
  v77.size.width = v30;
  v77.size.height = v30;
  v78 = CGRectIntegral(v77);
  y = v78.origin.y;
  x = v78.origin.x;
  v78.size.width = v30;
  v78.size.height = v30;
  MaxX = CGRectGetMaxX(v78);
  v55 = *(double *)(v72 + v74[10]);
  v56 = v3[5];
  v57 = v3[6];
  __swift_project_boxed_opaque_existential_1(v17, v56);
  v67 = MaxX + v55 * (*(double (**)(uint64_t, uint64_t))(v57 + 16))(v56, v57);
  v79.origin.x = v43;
  v79.origin.y = v45;
  v79.size.width = v69;
  v79.size.height = v68;
  Height = CGRectGetHeight(v79);
  v59 = (uint64_t *)(v72 + v74[6]);
  v75 = *v59;
  v65 = v50 * 0.5 - Height * 0.5;
  v66 = v59[1];
  v80.origin.x = 0.0;
  v80.origin.y = 0.0;
  v80.size.width = v73;
  v80.size.height = v50;
  v60 = CGRectGetMaxX(v80) + -35.0 + -3.0;
  v61 = (void *)sub_1BB86D738();
  objc_msgSend(v61, sel_displayScale);
  v63 = v62;

  *(CGFloat *)a2 = v60;
  *(CGFloat *)(a2 + 8) = v50 * 0.5 + -17.5;
  *(int64x2_t *)(a2 + 16) = vdupq_n_s64(0x4041800000000000uLL);
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(CGFloat *)(a2 + 48) = v73;
  *(CGFloat *)(a2 + 56) = v50;
  *(CGFloat *)(a2 + 64) = x;
  *(CGFloat *)(a2 + 72) = y;
  *(CGFloat *)(a2 + 80) = v30;
  *(CGFloat *)(a2 + 88) = v30;
  result = v67;
  *(double *)(a2 + 96) = v67;
  *(CGFloat *)(a2 + 104) = v65;
  *(CGFloat *)(a2 + 112) = v69;
  *(CGFloat *)(a2 + 120) = v68;
  *(_QWORD *)(a2 + 128) = v63;
  *(_QWORD *)(a2 + 136) = v75;
  *(_QWORD *)(a2 + 144) = v66;
  *(CGFloat *)(a2 + 152) = v73;
  *(CGFloat *)(a2 + 160) = v50;
  return result;
}

uint64_t sub_1BB3C7854(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CategoryViewLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CategoryViewLayoutAttributesFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t CategoryViewLayoutAttributesFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

double sub_1BB3C78D0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1BB3C6A58(a1, a2);
}

uint64_t sub_1BB3C78F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1ED39E8F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3C7930()
{
  unint64_t result;

  result = qword_1ED39E818;
  if (!qword_1ED39E818)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CategoryViewLayoutAttributes, &type metadata for CategoryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39E818);
  }
  return result;
}

uint64_t sub_1BB3C7974@<X0>(_QWORD *a1@<X8>)
{
  return CategoryViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)(a1);
}

uint64_t dispatch thunk of CategoryViewLayoutAttributesFactoryType.makeLayoutAttributes(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for CategoryViewLayoutAttributesFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CategoryViewLayoutAttributesFactory.__allocating_init(styler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatLayeredMediaNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

unint64_t FormatLayeredMediaNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

void FormatLayeredMediaNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3C7A94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3C7ACC + 4 * byte_1BB911FD0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB3C7ACC()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB3C7AE8()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB3C7B0C()
{
  return 0x656D617266;
}

uint64_t sub_1BB3C7B20()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB3C7B38()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB3C7B4C()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB3C7B64()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB3C7BE0()
{
  unsigned __int8 *v0;

  return sub_1BB3C7A94(*v0);
}

uint64_t sub_1BB3C7BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB3C8B08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3C7C0C()
{
  sub_1BB3C80F0();
  return sub_1BB874710();
}

uint64_t sub_1BB3C7C34()
{
  sub_1BB3C80F0();
  return sub_1BB87471C();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.__deallocating_deinit()
{
  FormatLayeredMediaNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  _OWORD v13[2];
  char v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C2C98, (uint64_t (*)(void))sub_1BB3C80F0, (uint64_t)&type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3C80F0();
  sub_1BB8746C8();
  LOBYTE(v13[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 96);
    v14 = 4;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v13[0]) = 5;
    sub_1BB8741A0();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 112);
    v14 = 6;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v13[0]) = 7;
    sub_1BB874188();
    v11 = *(_BYTE *)(v3 + 136);
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 128);
    BYTE8(v13[0]) = v11;
    v14 = 8;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 144);
    v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 152);
    v14 = 10;
    type metadata accessor for FormatLayeredMediaNodeStyle();
    sub_1BA50AD30(&qword_1ED3A7FC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 160);
    v14 = 11;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB3C80F0()
{
  unint64_t result;

  result = qword_1EF2C2CA0;
  if (!qword_1EF2C2CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91228C, &type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2CA0);
  }
  return result;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatLayeredMediaNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatLayeredMediaNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  sub_1BA4CDF6C(0, &qword_1EF2C2CA8, (uint64_t (*)(void))sub_1BB3C80F0, (uint64_t)&type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v17 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3C80F0();
  v16 = v6;
  v7 = v18;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v14 = (uint64_t)a1;
  }
  else
  {
    v18 = a1;
    LOBYTE(v19) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v19) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v19) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v21 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v15 = 0;
    sub_1BB8740D4();
    v11 = v20;
    *(_OWORD *)(v1 + 64) = v19;
    *(_OWORD *)(v1 + 80) = v11;
    v21 = 4;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v19;
    LOBYTE(v19) = 5;
    *(_QWORD *)(v1 + 104) = sub_1BB8740C8();
    v21 = 6;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 112) = v19;
    LOBYTE(v19) = 7;
    *(_BYTE *)(v1 + 120) = sub_1BB8740A4() & 1;
    v21 = 8;
    sub_1BA650BA0();
    sub_1BB874068();
    v13 = BYTE8(v19);
    *(_QWORD *)(v1 + 128) = v19;
    *(_BYTE *)(v1 + 136) = v13;
    type metadata accessor for FormatContextLayoutOptions();
    v21 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 144) = v19;
    type metadata accessor for FormatLayeredMediaNodeStyle();
    v21 = 10;
    sub_1BA50AD30(&qword_1ED3CC0D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
    sub_1BB874068();
    *(_QWORD *)(v1 + 152) = v19;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v21 = 11;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v17);
    v14 = (uint64_t)v18;
    *(_QWORD *)(v1 + 160) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v1;
}

uint64_t sub_1BB3C877C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C2CB0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatLayeredMediaNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BB3C87C8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C2CB8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t sub_1BB3C87F4(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C2CC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t sub_1BB3C8820(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C2CC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeLayoutAttributes);
}

uint64_t sub_1BB3C884C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatLayeredMediaNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB3C88A0(_QWORD *a1)
{
  return FormatLayeredMediaNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB3C88C0(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C2CE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatLayeredMediaNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLayeredMediaNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatLayeredMediaNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB3C89B0 + 4 * byte_1BB911FE1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB3C89E4 + 4 * byte_1BB911FDC[v4]))();
}

uint64_t sub_1BB3C89E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3C89EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3C89F4);
  return result;
}

uint64_t sub_1BB3C8A00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3C8A08);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB3C8A0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3C8A14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB3C8A34()
{
  unint64_t result;

  result = qword_1EF2C2CD0;
  if (!qword_1EF2C2CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912264, &type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2CD0);
  }
  return result;
}

unint64_t sub_1BB3C8A7C()
{
  unint64_t result;

  result = qword_1EF2C2CD8;
  if (!qword_1EF2C2CD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9121D4, &type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2CD8);
  }
  return result;
}

unint64_t sub_1BB3C8AC4()
{
  unint64_t result;

  result = qword_1EF2C2CE0;
  if (!qword_1EF2C2CE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9121FC, &type metadata for FormatLayeredMediaNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2CE0);
  }
  return result;
}

uint64_t sub_1BB3C8B08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1BB3C8FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t *a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  ValueMetadata *v26;
  _UNKNOWN **v27;
  uint64_t v28;

  v18 = *a7;
  v19 = *a13;
  v20 = *a15;
  v21 = *((_BYTE *)a15 + 8);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(_QWORD *)(v17 + 96) = v18;
  *(_QWORD *)(v17 + 104) = a8;
  *(_QWORD *)(v17 + 112) = v19;
  *(_BYTE *)(v17 + 120) = a14;
  *(_QWORD *)(v17 + 128) = v20;
  *(_BYTE *)(v17 + 136) = v21;
  *(_QWORD *)(v17 + 144) = a16;
  *(_QWORD *)(v17 + 152) = a17;
  if (a17)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F90, (uint64_t (*)(uint64_t))sub_1BAA7FD74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    v23 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v24 = *(_QWORD *)(a17 + 64);
    if ((~v24 & 0xF000000000000007) != 0)
    {
      v27 = &protocol witness table for FormatBackground;
      v26 = &type metadata for FormatBackground;
      v25 = *(_QWORD *)(a17 + 64);
    }
    else
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    *(_QWORD *)(inited + 32) = v25;
    *(_QWORD *)(inited + 56) = v26;
    *(_QWORD *)(inited + 64) = v27;
    swift_retain_n();
    swift_retain();
    sub_1BA6E6C68(v24);
    v28 = sub_1BA67DB8C(v23);
    swift_setDeallocating();
    sub_1BAA7FD74(0);
    swift_arrayDestroy();
    swift_release_n();
  }
  else
  {
    swift_retain();
    v28 = MEMORY[0x1E0DEE9E8];
  }
  *(_QWORD *)(v17 + 160) = v28;
  return v17;
}

uint64_t FeedLayoutOrder.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x614C206C61656449;
}

NewsFeed::FeedLayoutOrder_optional __swiftcall FeedLayoutOrder.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FeedLayoutOrder_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FeedLayoutOrder.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x69796C7265646E75;
  else
    return 0x79614C6C61656469;
}

uint64_t sub_1BB3C922C(char *a1, char *a2)
{
  return sub_1BB8066F8(*a1, *a2);
}

unint64_t sub_1BB3C923C()
{
  unint64_t result;

  result = qword_1EF2C2CF0;
  if (!qword_1EF2C2CF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutOrder, &type metadata for FeedLayoutOrder);
    atomic_store(result, (unint64_t *)&qword_1EF2C2CF0);
  }
  return result;
}

uint64_t sub_1BB3C9280()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3C9314()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3C9384()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedLayoutOrder_optional sub_1BB3C9414(Swift::String *a1)
{
  return FeedLayoutOrder.init(rawValue:)(*a1);
}

void sub_1BB3C9420(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x79614C6C61656469;
  if (*v1)
    v2 = 0x69796C7265646E75;
  v3 = 0xEB0000000074756FLL;
  if (*v1)
    v3 = 0xEF6C65646F4D676ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB3C9474()
{
  sub_1BB3C9640();
  return sub_1BB872CDC();
}

uint64_t sub_1BB3C94B4()
{
  sub_1BB3C9640();
  return sub_1BB872CD0();
}

uint64_t sub_1BB3C94FC()
{
  sub_1BB3C9640();
  return sub_1BB872CC4();
}

uint64_t sub_1BB3C953C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x614C206C61656449;
}

uint64_t storeEnumTagSinglePayload for FeedLayoutOrder(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3C95D0 + 4 * byte_1BB9122E1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3C9604 + 4 * byte_1BB9122DC[v4]))();
}

uint64_t sub_1BB3C9604(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3C960C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3C9614);
  return result;
}

uint64_t sub_1BB3C9620(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3C9628);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3C962C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3C9634(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1BB3C9640()
{
  unint64_t result;

  result = qword_1EF2C2CF8;
  if (!qword_1EF2C2CF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedLayoutOrder, &type metadata for FeedLayoutOrder);
    atomic_store(result, (unint64_t *)&qword_1EF2C2CF8);
  }
  return result;
}

uint64_t *sub_1BB3C9684(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      sub_1BA75C00C();
      v12 = v11;
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_retain();
      v13(v9, v10, v12);
    }
    else
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1BB3C9784(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BB3C9860((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      sub_1BA75C00C();
      v10 = v9;
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_retain();
      v11(v7, v8, v10);
    }
    else
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB3C9860(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatOptionsNodeStatementContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1BB3C989C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1BA75BF9C();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BA75C00C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BB3C9944(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BB3C9860((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BA75BF9C();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      sub_1BA75C00C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB3C99FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA75D1C8(v3, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA75BF9C();
    v11 = &v9[*(int *)(v10 + 48)];
    sub_1BA6D5158(a1, a2, a3);
    swift_release();
    sub_1BA75C00C();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
    sub_1BA7BA124(a1, a2, a3);
    return swift_release();
  }
}

uint64_t sub_1BB3C9B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB3C99FC(a1, a2, a3);
}

void PuzzleStatistic.identifier.getter()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_identifier);
  sub_1BB8729A0();

  type metadata accessor for PuzzleStatistic();
  PuzzleStatisticCategory.statisticType.getter();
  __asm { BR              X10 }
}

uint64_t sub_1BB3C9BDC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRetain();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PuzzleStatistic.init(puzzleType:statistic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  v4 = (uint64_t)a3 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  return sub_1BB3C9D50(a2, v4);
}

uint64_t sub_1BB3C9D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleStatisticCategory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PuzzleStatistic.puzzleType.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t PuzzleStatistic.statistic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PuzzleStatistic();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for PuzzleStatisticCategory);
}

uint64_t sub_1BB3C9DD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatistic.init(from:)(a1, a2);
}

uint64_t PuzzleStatistic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  char v32;

  v23 = a2;
  v24 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B80, (uint64_t (*)(uint64_t))sub_1BB3CA0E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v27 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v21 - v6;
  sub_1BB3CA4D0(0, &qword_1EF2C2D00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v28 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - v9;
  v11 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3CA138();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v11;
  v22 = a1;
  v14 = v8;
  v15 = v25;
  v16 = (uint64_t)v26;
  v32 = 0;
  sub_1BB3CA914((unint64_t *)&qword_1EF2C2D10, MEMORY[0x1E0DB50A0]);
  v17 = v28;
  v18 = v27;
  sub_1BB8740D4();
  v19 = v29;
  sub_1BB86ED1C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v18);
  *v13 = v30;
  v31 = 1;
  sub_1BB3CA17C(&qword_1EF2C2D18, (uint64_t)&protocol conformance descriptor for PuzzleStatisticCategory);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v17);
  sub_1BB3C9D50(v16, (uint64_t)v13 + *(int *)(v21 + 20));
  sub_1BA4C2DD8((uint64_t)v13, v23, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
}

unint64_t sub_1BB3CA0E4()
{
  unint64_t result;

  result = qword_1ED3CF990;
  if (!qword_1ED3CF990)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3CF990);
  }
  return result;
}

unint64_t sub_1BB3CA138()
{
  unint64_t result;

  result = qword_1EF2C2D08;
  if (!qword_1EF2C2D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9126BC, &type metadata for PuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D08);
  }
  return result;
}

uint64_t sub_1BB3CA17C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PuzzleStatisticCategory(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB3CA1BC(_QWORD *a1)
{
  return PuzzleStatistic.encode(to:)(a1);
}

uint64_t PuzzleStatistic.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_1BB86E008();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v23 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B80, (uint64_t (*)(uint64_t))sub_1BB3CA0E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v8 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  v25 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - v9;
  sub_1BB3CA4D0(0, (unint64_t *)&unk_1EF2C2D20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v12 = v11;
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3CA138();
  sub_1BB8746C8();
  v21[1] = v2;
  v29 = *v2;
  v15 = qword_1ED3A3858;
  swift_unknownObjectRetain_n();
  if (v15 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED3A3838);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v23, v16, v4);
  MEMORY[0x1E0C80A78](v17);
  v21[-2] = sub_1BB3CA0E4();
  swift_getKeyPath();
  sub_1BB86ED10();
  swift_unknownObjectRelease();
  v28 = 0;
  sub_1BB3CA914((unint64_t *)&qword_1EF2C8F90, MEMORY[0x1E0DB5098]);
  v18 = v24;
  v19 = v26;
  sub_1BB8741AC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v18);
  if (!v19)
  {
    type metadata accessor for PuzzleStatistic();
    v27 = 1;
    type metadata accessor for PuzzleStatisticCategory(0);
    sub_1BB3CA17C(&qword_1EF2C2D30, (uint64_t)&protocol conformance descriptor for PuzzleStatisticCategory);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v12);
}

void sub_1BB3CA4D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB3CA138();
    v7 = a3(a1, &type metadata for PuzzleStatistic.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t PuzzleStatistic.debugDescription.getter()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("aNodeLayoutAttributes");
  type metadata accessor for PuzzleStatistic();
  type metadata accessor for PuzzleStatisticCategory(0);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BB3CA5DC(char *a1, char *a2)
{
  return sub_1BB8016A8(*a1, *a2);
}

uint64_t sub_1BB3CA5E8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3CA670()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3CA6D4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3CA758@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB3CA7B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7954656C7A7A7570;
  if (*v1)
    v2 = 0x6974736974617473;
  v3 = 0xEA00000000006570;
  if (*v1)
    v3 = 0xE900000000000063;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB3CA7FC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6974736974617473;
  else
    return 0x7954656C7A7A7570;
}

uint64_t sub_1BB3CA840@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB3CA8A0()
{
  sub_1BB3CA138();
  return sub_1BB874710();
}

uint64_t sub_1BB3CA8C8()
{
  sub_1BB3CA138();
  return sub_1BB87471C();
}

uint64_t sub_1BB3CA8FC()
{
  return 8;
}

_QWORD *sub_1BB3CA908(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB3CA914(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3A3B80, (uint64_t (*)(uint64_t))sub_1BB3CA0E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8NewsFeed15PuzzleStatisticV2eeoiySbAC_ACtFZ_0(id *a1, id *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  char v21;
  char v22;
  uint64_t v24;

  v4 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - v9;
  v11 = objc_msgSend(*a1, sel_identifier, v8);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = objc_msgSend(*a2, sel_identifier);
  v16 = sub_1BB8729A0();
  v18 = v17;

  if (v12 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  }
  else
  {
    v20 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    v21 = 0;
    if ((v20 & 1) == 0)
      goto LABEL_9;
  }
  _s8NewsFeed23PuzzleStatisticCategoryO2eeoiySbAC_ACtFZ_0((uint64_t)&v10[*(int *)(v4 + 20)], (uint64_t)&v6[*(int *)(v4 + 20)]);
  v21 = v22;
LABEL_9:
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  return v21 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PuzzleStatistic(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_unknownObjectRetain();
    v5 = (char *)&loc_1BB3CABB0 + 4 * byte_1BB912480[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  swift_retain();
  return v6;
}

uint64_t destroy for PuzzleStatistic(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;

  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_12;
    case 1:
      type metadata accessor for PuzzleStatisticValue(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        v7 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
        {
          v8 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
        }
      }
      v9 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      v10 = v4 + *(int *)(v9 + 20);
      v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 5 || v11 == 4)
      {
        v12 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12))
        {
          v13 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
        }
      }
      v4 += *(int *)(v9 + 24);
LABEL_12:
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 5 || (_DWORD)result == 4)
      {
        v14 = type metadata accessor for PuzzleStreak();
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v4, 1, v14);
        if (!(_DWORD)result)
          goto LABEL_24;
      }
      return result;
    case 2:
      v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v4, 1, v15);
      if (!(_DWORD)result)
      {
        v16 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v4, v16);
        v17 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        v18 = v4 + *(int *)(v17 + 24);
        swift_bridgeObjectRelease();
        v19 = *(_QWORD *)(v18 + 24);
        if (v19 >> 60 != 15)
          sub_1BA69D314(*(_QWORD *)(v18 + 16), v19);
        return swift_bridgeObjectRelease();
      }
      return result;
    case 3:
      v20 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      v21 = v4 + *(int *)(v20 + 24);
      v22 = type metadata accessor for PuzzleStreak();
      v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
      if (!v23(v21, 1, v22))
      {
        v24 = sub_1BB86BEC0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v21, v24);
      }
      v4 += *(int *)(v20 + 28);
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v4, 1, v22);
      if ((_DWORD)result)
        return result;
LABEL_24:
      v25 = sub_1BB86BEC0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v4, v25);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for PuzzleStatistic(_QWORD *a1, _QWORD *a2)
{
  char *v2;

  *a1 = *a2;
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_unknownObjectRetain();
  v2 = (char *)sub_1BB3CB8D8 + 4 * byte_1BB912488[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB3CB8D8()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for PuzzleStatisticValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
    {
LABEL_6:
      sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
LABEL_8:
    v8 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v1, v2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
      goto LABEL_6;
    goto LABEL_8;
  }
  memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
  return v0;
}

_QWORD *assignWithCopy for PuzzleStatistic(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1 + *(int *)(a3 + 20), type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    v6 = (char *)&loc_1BB3CC31C + 4 * byte_1BB91248C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

void initializeWithTake for PuzzleStatistic(_QWORD *a1, _QWORD *a2)
{
  char *v2;

  *a1 = *a2;
  type metadata accessor for PuzzleStatisticCategory(0);
  v2 = (char *)sub_1BB3CCD1C + 4 * byte_1BB912490[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB3CCD1C()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for PuzzleStatisticValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
    {
LABEL_6:
      sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
LABEL_8:
    v8 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v1, v2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
      goto LABEL_6;
    goto LABEL_8;
  }
  memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
  return v0;
}

_QWORD *assignWithTake for PuzzleStatistic(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;

  *a1 = *a2;
  swift_unknownObjectRelease();
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1 + *(int *)(a3 + 20), type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    v6 = (char *)&loc_1BB3CD6D4 + 4 * byte_1BB912494[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleStatistic()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3CE000(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PuzzleStatisticCategory(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleStatistic()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB3CE088(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for PuzzleStatisticCategory(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleStatistic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3CE148 + 4 * byte_1BB91249D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3CE17C + 4 * byte_1BB912498[v4]))();
}

uint64_t sub_1BB3CE17C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3CE184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3CE18CLL);
  return result;
}

uint64_t sub_1BB3CE198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3CE1A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3CE1A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3CE1AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatistic.CodingKeys()
{
  return &type metadata for PuzzleStatistic.CodingKeys;
}

unint64_t sub_1BB3CE1CC()
{
  unint64_t result;

  result = qword_1EF2C2D38;
  if (!qword_1EF2C2D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912694, &type metadata for PuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D38);
  }
  return result;
}

unint64_t sub_1BB3CE214()
{
  unint64_t result;

  result = qword_1EF2C2D40;
  if (!qword_1EF2C2D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9125CC, &type metadata for PuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D40);
  }
  return result;
}

unint64_t sub_1BB3CE25C()
{
  unint64_t result;

  result = qword_1EF2C2D48;
  if (!qword_1EF2C2D48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9125F4, &type metadata for PuzzleStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D48);
  }
  return result;
}

uint64_t FormatDecorationProviderFactory.create(content:groupItems:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char v22[8];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA5E34EC(a1, (uint64_t)v9);
  v10 = *(_BYTE *)(v3 + 33);
  v12 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v13 = *(_QWORD *)(v3 + 56);
  v14 = *(void **)(v3 + 64);
  v15 = *(_QWORD *)(v3 + 72);
  v16 = *(_QWORD *)(v3 + 80);
  v17 = *(_QWORD *)(v3 + 88);
  v22[0] = *(_BYTE *)(v3 + 32);
  v22[1] = v10;
  v23 = v12;
  v24 = v11;
  v25 = v13;
  v26 = v14;
  v27 = v15;
  v28 = v16;
  v29 = v17;
  v19 = *(void **)(v3 + 16);
  v18 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  v20 = v19;
  sub_1BA70A884(v13, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BA5E304C((uint64_t)v9, (uint64_t)v20, v22, a3, a2, v18);
}

uint64_t FormatDecorationProviderFactory.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_release();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v1, v2);
  return v0;
}

uint64_t FormatDecorationProviderFactory.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_release();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatDecorationProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t FeedPuzzleStatistic.init(identifier:puzzleStatistic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t result;
  _BYTE v24[7];
  unsigned __int8 v25;
  uint64_t v26;

  v8 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v24[-v12];
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  *(_OWORD *)(a4 + 24) = xmmword_1BB88C460;
  *(_QWORD *)(a4 + 40) = a1;
  *(_QWORD *)(a4 + 48) = a2;
  v14 = type metadata accessor for FeedPuzzleStatistic();
  sub_1BA4C2DD8(a3, a4 + *(int *)(v14 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v26);
  v15 = v26;
  v16 = a3 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  sub_1BA4C2DD8(v16, (uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
LABEL_3:
    v18 = 0x100000000000;
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload && (FCPuzzleTypeProviding.puzzleKind.getter(), v19 = v25, v25 != 3))
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
    if (!v19)
      goto LABEL_3;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for PuzzleStatisticCategory);
  }
  v18 = 0x80000000000;
LABEL_8:
  v20 = v15 | v18;
  sub_1BA4C2DD8(v16, (uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
  v21 = swift_getEnumCaseMultiPayload();
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
  if (v21 == 2)
    v22 = v20 | 0x1000000000000;
  else
    v22 = v20;
  result = sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  *(_QWORD *)a4 = v22;
  return result;
}

uint64_t FeedPuzzleStatistic.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.debugTitle.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPuzzleStatistic.additionalFormatFeedItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32));
  *(_QWORD *)(v1 + 56) = &type metadata for FeedPuzzleType;
  *(_QWORD *)(v1 + 64) = sub_1BACB5BC8();
  v3 = swift_allocObject();
  *(_QWORD *)(v1 + 32) = v3;
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = 1;
  *(_OWORD *)(v3 + 40) = xmmword_1BB88C450;
  *(_QWORD *)(v3 + 56) = v5;
  *(_QWORD *)(v3 + 64) = v7;
  *(_QWORD *)(v3 + 72) = v2;
  return v1;
}

void FeedPuzzleStatistic.traits.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void FeedPuzzleStatistic.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedPuzzleStatistic.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t FeedPuzzleStatistic.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPuzzleStatistic.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedPuzzleStatistic.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FeedPuzzleStatistic.puzzleStatistic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedPuzzleStatistic();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1BB3CE880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v4 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  *(_QWORD *)(v3 + 56) = &type metadata for FeedPuzzleType;
  *(_QWORD *)(v3 + 64) = sub_1BACB5BC8();
  v5 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = v5;
  v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v7 = sub_1BB8729A0();
  v9 = v8;

  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 32) = 1;
  *(_OWORD *)(v5 + 40) = xmmword_1BB88C450;
  *(_QWORD *)(v5 + 56) = v7;
  *(_QWORD *)(v5 + 64) = v9;
  *(_QWORD *)(v5 + 72) = v4;
  return v3;
}

uint64_t FeedPuzzleStatistic.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3CE9B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedPuzzleStatistic.hashValue.getter()
{
  sub_1BB8745CC();
  type metadata accessor for FeedPuzzleStatistic();
  sub_1BB3D2608(&qword_1EF2C2D50, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB3CEA64()
{
  sub_1BB3D2608(&qword_1EF2C2D58, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
  return sub_1BB86EC50();
}

uint64_t FeedPuzzleStatistic.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1BB3CEAEC()
{
  id v0;
  _QWORD *v1;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for FeedPuzzleStatistic();
  v0 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  sub_1BB8729A0();

  v1 = sub_1BB16FBA8();
  sub_1BA6E0CBC(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E9BD8((uint64_t)v1);
  return v3;
}

uint64_t sub_1BB3CEBBC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t _s8NewsFeed0B15PuzzleStatisticV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
  {
    sub_1BA4C2DD8(a1, (uint64_t)&v14 - v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  }
  else
  {
    v11 = sub_1BB874398();
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v12 = 0;
    if ((v11 & 1) == 0)
      goto LABEL_9;
  }
  v12 = _s8NewsFeed15PuzzleStatisticV2eeoiySbAC_ACtFZ_0((id *)&v9[*(int *)(v4 + 32)], (id *)&v6[*(int *)(v4 + 32)]);
LABEL_9:
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  return v12 & 1;
}

uint64_t sub_1BB3CED3C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB3D2608(&qword_1EF2AC5B0, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BB3CED70()
{
  return sub_1BB3D2608(&qword_1EF2C2D50, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
}

uint64_t sub_1BB3CED94()
{
  return sub_1BB3D2608(&qword_1EF2AC5B0, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
}

uint64_t sub_1BB3CEDB8()
{
  return sub_1BB3D2608(&qword_1EF2AC5A8, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
}

uint64_t initializeBufferWithCopyOfBuffer for FeedPuzzleStatistic(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2 + 3;
    v9 = a2[4];
    if (v9 >= 0x11)
    {
      *(_QWORD *)(a1 + 24) = *v8;
      *(_QWORD *)(a1 + 32) = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v8;
    }
    v12 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    type metadata accessor for PuzzleStatistic();
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v13 = (char *)&loc_1BB3CEEE4 + 4 * byte_1BB912760[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = *a2;
  *(_QWORD *)a1 = *a2;
  v11 = v10 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v11;
}

uint64_t destroy for FeedPuzzleStatistic(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  swift_unknownObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_14;
    case 1:
      type metadata accessor for PuzzleStatisticValue(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        v8 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8))
        {
          v9 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
        }
      }
      v10 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      v11 = v5 + *(int *)(v10 + 20);
      v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 5 || v12 == 4)
      {
        v13 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13))
        {
          v14 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v11, v14);
        }
      }
      v5 += *(int *)(v10 + 24);
LABEL_14:
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 5 || (_DWORD)result == 4)
      {
        v15 = type metadata accessor for PuzzleStreak();
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15);
        if (!(_DWORD)result)
          goto LABEL_26;
      }
      return result;
    case 2:
      v16 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16);
      if (!(_DWORD)result)
      {
        v17 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v5, v17);
        v18 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        v19 = v5 + *(int *)(v18 + 24);
        swift_bridgeObjectRelease();
        v20 = *(_QWORD *)(v19 + 24);
        if (v20 >> 60 != 15)
          sub_1BA69D314(*(_QWORD *)(v19 + 16), v20);
        return swift_bridgeObjectRelease();
      }
      return result;
    case 3:
      v21 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      v22 = v5 + *(int *)(v21 + 24);
      v23 = type metadata accessor for PuzzleStreak();
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
      if (!v24(v22, 1, v23))
      {
        v25 = sub_1BB86BEC0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v22, v25);
      }
      v5 += *(int *)(v21 + 28);
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v5, 1, v23);
      if ((_DWORD)result)
        return result;
LABEL_26:
      v26 = sub_1BB86BEC0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v5, v26);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  if (v8 >= 0x11)
  {
    *(_QWORD *)(a1 + 24) = *v7;
    *(_QWORD *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  type metadata accessor for PuzzleStatistic();
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = (char *)sub_1BB3CFC80 + 4 * byte_1BB912768[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB3CFC80()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for PuzzleStatisticValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
    {
LABEL_6:
      sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
LABEL_8:
    v8 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v1, v2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
      goto LABEL_6;
    goto LABEL_8;
  }
  memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) < 0x11uLL)
  {
    if (v9 >= 0x11)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 < 0x11)
  {
    sub_1BA905D68(a1 + 24);
LABEL_6:
    *v7 = *v8;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v12 = type metadata accessor for PuzzleStatistic();
  if (a1 != a2)
  {
    sub_1BA4A2E80(v11 + *(int *)(v12 + 20), type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    v13 = (char *)&loc_1BB3D0780 + 4 * byte_1BB91276C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

void initializeWithTake for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  type metadata accessor for PuzzleStatistic();
  type metadata accessor for PuzzleStatisticCategory(0);
  v4 = (char *)sub_1BB3D11B4 + 4 * byte_1BB912770[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB3D11B4()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for PuzzleStatisticValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
    {
LABEL_6:
      sub_1BA4B07F0(0, &qword_1ED3C2120, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
LABEL_8:
    v8 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v1, v2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v5 = type metadata accessor for PuzzleStreak();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5))
      goto LABEL_6;
    goto LABEL_8;
  }
  memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for FeedPuzzleStatistic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) < 0x11uLL)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 32);
  if (v9 < 0x11)
  {
    sub_1BA905D68((uint64_t)v7);
LABEL_4:
    *v7 = *v8;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_unknownObjectRelease();
  v13 = type metadata accessor for PuzzleStatistic();
  if (a1 != a2)
  {
    sub_1BA4A2E80(v12 + *(int *)(v13 + 20), type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    v14 = (char *)&loc_1BB3D1BE0 + 4 * byte_1BB912774[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPuzzleStatistic()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3D250C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PuzzleStatistic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedPuzzleStatistic()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3D2594(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 48) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for PuzzleStatistic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB3D2608(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FeedPuzzleStatistic();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB3D264C(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t j;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BB21A5EC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = (char *)&v22 - v8;
  if ((a3 & 1) == 0)
  {
    sub_1BB3D2A8C(a2, (uint64_t)&v22 - v8);
    v13 = type metadata accessor for DebugFormatPackagesDelta();
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v9, 1, v13);
    v15 = MEMORY[0x1E0DEE9D8];
    if (v14 == 1)
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB21A5EC);
      result = swift_bridgeObjectRetain();
      goto LABEL_24;
    }
    if (v9[16])
    {
      if (v9[16] != 1)
      {
        a1 = MEMORY[0x1E0DEE9D8];
        goto LABEL_23;
      }
      a1 = *(_QWORD *)&v9[*(int *)(v13 + 20)];
    }
    else
    {
      a1 = *(_QWORD *)v9;
    }
    swift_bridgeObjectRetain();
LABEL_23:
    result = sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
LABEL_24:
    v23 = v15;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      if (!v18)
        goto LABEL_40;
    }
    else
    {
      v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v18)
        goto LABEL_40;
    }
    if (v18 >= 1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_BYTE *)(*(_QWORD *)(MEMORY[0x1BCCE4630](i, a1) + 16)
                        + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 5)
          {
            swift_unknownObjectRelease();
          }
          else
          {
            sub_1BB873DB0();
            sub_1BB873DE0();
            sub_1BB873DEC();
            sub_1BB873DBC();
          }
        }
      }
      else
      {
        v20 = 0;
        v21 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
        do
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8 * v20 + 32) + 16) + v21) != 5)
          {
            swift_retain();
            sub_1BB873DB0();
            sub_1BB873DE0();
            sub_1BB873DEC();
            sub_1BB873DBC();
            v21 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
          }
          ++v20;
        }
        while (v18 != v20);
      }
      goto LABEL_40;
    }
    goto LABEL_42;
  }
  v23 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v10 = result;
    if (result)
      goto LABEL_4;
LABEL_40:
    swift_bridgeObjectRelease();
    return v23;
  }
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_40;
LABEL_4:
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v10; ++j)
      {
        if (*(_BYTE *)(*(_QWORD *)(MEMORY[0x1BCCE4630](j, a1) + 16)
                      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 5)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
      }
    }
    else
    {
      v16 = 0;
      v17 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8 * v16 + 32) + 16) + v17) != 5)
        {
          swift_retain();
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
          v17 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
        }
        ++v16;
      }
      while (v10 != v16);
    }
    goto LABEL_40;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BB3D29F8()
{
  _QWORD *v0;

  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v0);
  return 0x69706D6F6365727BLL;
}

uint64_t sub_1BB3D2A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB21A5EC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for DebugFormatCompilerMetadata(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3D2B1C + 4 * byte_1BB912945[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB3D2B50 + 4 * byte_1BB912940[v4]))();
}

uint64_t sub_1BB3D2B50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3D2B58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3D2B60);
  return result;
}

uint64_t sub_1BB3D2B6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3D2B74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB3D2B78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3D2B80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCompilerMetadata()
{
  return &type metadata for DebugFormatCompilerMetadata;
}

uint64_t sub_1BB3D2B9C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1BB3D3078(0, &qword_1EF2C2D88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3D2F9C();
  sub_1BB8746C8();
  v10[1] = a2;
  sub_1BB3D2FE0();
  sub_1BB3D30D4(&qword_1EF2C2D90, (uint64_t (*)(void))sub_1BB3D3138, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB3D2CBC()
{
  return 0x6974704F6E6F736ALL;
}

uint64_t sub_1BB3D2CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6974704F6E6F736ALL && a2 == 0xEB00000000736E6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB3D2D88()
{
  sub_1BB3D2F9C();
  return sub_1BB874710();
}

uint64_t sub_1BB3D2DB0()
{
  sub_1BB3D2F9C();
  return sub_1BB87471C();
}

_QWORD *sub_1BB3D2DD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BB3D2E44(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB3D2E00(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB3D2B9C(a1, *v1);
}

BOOL sub_1BB3D2E18(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA882868(*a1, *a2);
}

void sub_1BB3D2E24()
{
  JUMPOUT(0x1BCCE36DCLL);
}

ValueMetadata *type metadata accessor for DebugFormatCodingOptions()
{
  return &type metadata for DebugFormatCodingOptions;
}

_QWORD *sub_1BB3D2E44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD v10[2];

  sub_1BB3D3078(0, &qword_1EF2C2D60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3D2F9C();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BB3D2FE0();
    sub_1BB3D30D4(&qword_1EF2C2D78, (uint64_t (*)(void))sub_1BB3D3034, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1BB3D2F9C()
{
  unint64_t result;

  result = qword_1EF2C2D68;
  if (!qword_1EF2C2D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912B68, &type metadata for DebugFormatCodingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D68);
  }
  return result;
}

void sub_1BB3D2FE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2D70)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2D70);
  }
}

unint64_t sub_1BB3D3034()
{
  unint64_t result;

  result = qword_1EF2C2D80;
  if (!qword_1EF2C2D80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatJSONOptions, &type metadata for FormatJSONOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D80);
  }
  return result;
}

void sub_1BB3D3078(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB3D2F9C();
    v7 = a3(a1, &type metadata for DebugFormatCodingOptions.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB3D30D4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BB3D2FE0();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB3D3138()
{
  unint64_t result;

  result = qword_1EF2C2D98;
  if (!qword_1EF2C2D98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatJSONOptions, &type metadata for FormatJSONOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2C2D98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatCodingOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB3D31BC + 4 * byte_1BB9129D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB3D31DC + 4 * byte_1BB9129D5[v4]))();
}

_BYTE *sub_1BB3D31BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB3D31DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3D31E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3D31EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3D31F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3D31FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCodingOptions.CodingKeys()
{
  return &type metadata for DebugFormatCodingOptions.CodingKeys;
}

unint64_t sub_1BB3D321C()
{
  unint64_t result;

  result = qword_1EF2C2DA0;
  if (!qword_1EF2C2DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912B40, &type metadata for DebugFormatCodingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2DA0);
  }
  return result;
}

unint64_t sub_1BB3D3264()
{
  unint64_t result;

  result = qword_1EF2C2DA8;
  if (!qword_1EF2C2DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912AB0, &type metadata for DebugFormatCodingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2DA8);
  }
  return result;
}

unint64_t sub_1BB3D32AC()
{
  unint64_t result;

  result = qword_1EF2C2DB0;
  if (!qword_1EF2C2DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912AD8, &type metadata for DebugFormatCodingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2DB0);
  }
  return result;
}

uint64_t destroy for DebugFormatFileTreeItemView()
{
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for DebugFormatFileTreeItemView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for DebugFormatFileTreeItemView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for DebugFormatFileTreeItemView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFileTreeItemView()
{
  return &type metadata for DebugFormatFileTreeItemView;
}

uint64_t sub_1BB3D3414()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BB3D3424@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BB3D34A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BB87189C();
}

uint64_t sub_1BB3D3510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a3;
  v34 = a2;
  sub_1BB3D4B8C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  v16 = (unint64_t *)(a4 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  if (!(*v16 >> 62))
  {
    if (*(_QWORD *)((*v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    v25 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v9);
  }
  swift_bridgeObjectRetain();
  v26 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_8;
LABEL_3:
  v17 = *v16;
  if ((*v16 & 0x8000000000000000) != 0 || (v17 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v18 = (uint64_t)sub_1BA85E324(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v29 = v15;
  v30 = v12;
  v31 = v10;
  v32 = a5;
  v35 = v18;
  sub_1BB54FB50(&v35);
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)swift_allocObject();
  v20 = v33;
  v21 = v34;
  v19[2] = a1;
  v19[3] = v21;
  v19[4] = v20;
  v19[5] = a4;
  sub_1BA4B07F0(0, &qword_1EF2A9180, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86C8E0();
  sub_1BB3D52E4(0, &qword_1EF2C2E08, MEMORY[0x1E0CDB880]);
  sub_1BB3D4F50();
  sub_1BB3D50E8();
  sub_1BA4A2870(&qword_1EF2C2ED0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t)&unk_1BB91B8E0);
  swift_retain();
  swift_retain();
  v22 = v30;
  sub_1BB8725EC();
  v10 = v31;
  v23 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v24 = v29;
  v23(v29, v22, v9);
  a5 = v32;
  v23(v32, v24, v9);
  v25 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v9);
}

uint64_t sub_1BB3D37C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _QWORD *v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  _BYTE v69[24];
  _BYTE v70[24];
  _BYTE v71[40];
  __int128 v72;

  v65 = a4;
  v64 = a2;
  sub_1BB3D52E4(0, &qword_1EF2C2ED8, MEMORY[0x1E0CDB848]);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v56 - v12);
  sub_1BB3D4CF4(0);
  v63 = v14;
  v62 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v67 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3D4C70();
  v17 = v16;
  MEMORY[0x1E0C80A78](v16);
  v66 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v56 - v20;
  v22 = *a1;
  v23 = (_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  if (*v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v30)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((*v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    type metadata accessor for DebugFormatFileTreeModel();
    sub_1BA4A2870((unint64_t *)&qword_1EF2BE458, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeModel, (uint64_t)&unk_1BB8FD238);
    swift_retain();
    swift_retain();
    v24 = sub_1BB87228C();
    v26 = v25;
    type metadata accessor for DebugFormatFileTreeItem();
    sub_1BA4A2870(&qword_1EF2C2DB8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t)&unk_1BB91B918);
    v27 = sub_1BB87228C();
    *v13 = v24;
    v13[1] = v26;
    v13[2] = v27;
    v13[3] = v28;
    swift_storeEnumTagMultiPayload();
    sub_1BB3D5160();
    sub_1BB3D5274();
    return sub_1BB872418();
  }
  v56 = v21;
  v57 = v17;
  v58 = v11;
  v61 = a6;
  v31 = sub_1BB872358();
  v32 = v64;
  v33 = a3;
  v34 = a3;
  v35 = v65;
  sub_1BB3D3D54(v33, v22, (uint64_t *)&v68);
  v36 = v69[16];
  v37 = *(_QWORD *)v70;
  v38 = *(_OWORD *)&v70[8];
  v39 = *(_OWORD *)v71;
  v40 = *(_OWORD *)&v71[16];
  v42 = v68;
  v41 = *(_OWORD *)v69;
  v68 = (unint64_t)v31;
  v69[0] = 1;
  *(_OWORD *)&v69[8] = v42;
  *(_OWORD *)v70 = v41;
  v70[16] = v36;
  *(_QWORD *)v71 = v37;
  *(_OWORD *)&v71[8] = v38;
  *(_OWORD *)&v71[24] = v39;
  v72 = v40;
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = v22;
  v43[3] = v32;
  v60 = v34;
  v43[4] = v34;
  v43[5] = v35;
  v43[6] = a5;
  sub_1BA5AA2AC(0, &qword_1EF2C2E20, (uint64_t (*)(uint64_t))sub_1BB3D4D88, sub_1BB3D4EB0, MEMORY[0x1E0CDFAF0]);
  sub_1BB3D4ECC();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB872520();
  swift_release();
  v44 = *(_OWORD *)v70;
  LOBYTE(v34) = v70[16];
  v45 = *(_QWORD *)&v71[8];
  v46 = *(_OWORD *)&v71[16];
  v65 = *(_QWORD *)&v71[32];
  v59 = *((_QWORD *)&v72 + 1);
  v64 = v72;
  swift_release();
  swift_release();
  sub_1BAB5EC9C(v44, *((uint64_t *)&v44 + 1), v34);
  swift_bridgeObjectRelease();
  sub_1BB3D5388(v45, v46, *((uint64_t *)&v46 + 1), v65, v64, v59);
  if ((sub_1BB3D571C(v22) & 1) != 0)
  {
    sub_1BA748DB8();
    v47 = sub_1BB8737C8();
    v48 = MEMORY[0x1BCCE2EB4](v47);
  }
  else
  {
    *(_QWORD *)&v68 = sub_1BB87258C();
    sub_1BB3D5918();
    v48 = sub_1BB8725A4();
  }
  v49 = v57;
  v50 = (uint64_t)v56;
  v51 = v63;
  v52 = v62;
  *(_QWORD *)&v68 = v48;
  swift_retain();
  v53 = sub_1BB8725D4();
  v54 = (uint64_t)v66;
  v55 = v67;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v66, v67, v51);
  swift_release();
  *(_QWORD *)(v54 + *(int *)(v49 + 36)) = v53;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v51);
  sub_1BA5193C4(v54, v50, (uint64_t (*)(_QWORD))sub_1BB3D4C70);
  sub_1BA4C2DD8(v50, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BB3D4C70);
  swift_storeEnumTagMultiPayload();
  sub_1BB3D5160();
  sub_1BB3D5274();
  sub_1BB872418();
  return sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BB3D4C70);
}

uint64_t sub_1BB3D3D54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v74 = a1;
  v72 = a3;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DebugFormatCacheFile();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  MEMORY[0x1E0C80A78](v7);
  v67 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3D52B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1BB8725B0();
  v12 = sub_1BB3D53C4(a2, a1, (SEL *)&selRef_secondaryLabelColor);
  v75 = MEMORY[0x1BCCE2EB4](v12);
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
  v77 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
  v78 = v13;
  sub_1BA7114A0();
  swift_bridgeObjectRetain();
  v14 = sub_1BB8724FC();
  v16 = v15;
  LOBYTE(v13) = v17 & 1;
  v18 = sub_1BB872484();
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v65 = v18;
  v64(v11, 1, 1);
  sub_1BB87249C();
  v66 = v11;
  sub_1BA4A2E80(v11, (uint64_t (*)(_QWORD))sub_1BB3D52B8);
  v19 = sub_1BB8724CC();
  v21 = v20;
  LOBYTE(v11) = v22;
  swift_release();
  sub_1BAB5EC9C(v14, v16, v13);
  swift_bridgeObjectRelease();
  v23 = sub_1BB3D53C4(a2, v74, (SEL *)&selRef_labelColor);
  v77 = MEMORY[0x1BCCE2EB4](v23);
  v68 = sub_1BB8724C0();
  v73 = v24;
  v74 = v25;
  v27 = v26;
  sub_1BAB5EC9C(v19, v21, v11 & 1);
  v28 = (uint64_t)v69;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(a2 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, v28, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v28, 1, v71) == 1)
  {
    v29 = (uint64_t (*)(_QWORD))sub_1BAA197E8;
    v30 = v28;
LABEL_6:
    sub_1BA4A2E80(v30, v29);
    v58 = 0;
    v57 = 0;
    v56 = 0;
    v54 = 0;
    v55 = 0;
    goto LABEL_7;
  }
  v31 = v67;
  sub_1BA5193C4(v28, v67, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  if (*(_BYTE *)(v31 + 24) != 1)
  {
    v29 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile;
    v30 = v31;
    goto LABEL_6;
  }
  sub_1BB872364();
  v32 = sub_1BB8724F0();
  v34 = v33;
  v36 = v35 & 1;
  sub_1BB872490();
  v37 = v66;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v64)(v66, 1, 1, v65);
  sub_1BB87249C();
  sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))sub_1BB3D52B8);
  v38 = v32;
  v69 = (char *)sub_1BB8724CC();
  v70 = v39;
  v41 = v40;
  LOBYTE(v32) = v42;
  swift_release();
  v43 = v32 & 1;
  sub_1BAB5EC9C(v38, v34, v36);
  swift_bridgeObjectRelease();
  v44 = sub_1BB872580();
  LODWORD(v71) = v27;
  v77 = v44;
  v45 = (uint64_t)v69;
  v46 = v41;
  v47 = sub_1BB8724C0();
  v49 = v48;
  v51 = v50;
  v53 = v52 & 1;
  sub_1BAB5EC9C(v45, v46, v43);
  LOBYTE(v27) = v71;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BAB5EC7C(v47, v49, v53);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BAB5EC9C(v47, v49, v53);
  swift_bridgeObjectRelease();
  v54 = v53;
  v55 = v51;
  v56 = v49;
  v57 = v47;
  v58 = 1;
LABEL_7:
  v59 = v75;
  v60 = v72;
  v61 = v73;
  *v72 = v76;
  v60[1] = v59;
  v62 = v68;
  v60[2] = v68;
  v60[3] = v61;
  *((_BYTE *)v60 + 32) = v27 & 1;
  v60[5] = v74;
  v60[6] = 0;
  v60[7] = v58;
  v60[8] = v57;
  v60[9] = v56;
  v60[10] = v54;
  v60[11] = v55;
  swift_retain();
  swift_retain();
  sub_1BAB5EC7C(v62, v61, v27 & 1);
  swift_bridgeObjectRetain();
  sub_1BB3D5964(0, v58, v57, v56, v54, v55);
  sub_1BB3D5388(0, v58, v57, v56, v54, v55);
  sub_1BAB5EC9C(v62, v61, v27 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3D42E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v18[16];
  _BYTE v19[128];
  _OWORD v20[2];
  uint64_t v21;

  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - v9;
  v11 = type metadata accessor for DebugFormatCacheFile();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v15 = (uint64_t (*)(_QWORD))sub_1BAA197E8;
    v16 = (uint64_t)v10;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    if (*(_BYTE *)(a3 + 24) == 1)
    {
      sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      memset(v18, 0, 32);
      v21 = 0;
      memset(v20, 0, sizeof(v20));
      swift_retain();
      sub_1BA8EB6E0((uint64_t)v7, v18, (uint64_t *)v20, (uint64_t)v19);
      sub_1BA5193C4((uint64_t)v19, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
      sub_1BA5193C4((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      swift_release();
      v19[0] = 1;
      swift_retain();
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      swift_release();
      v16 = (uint64_t)v14;
      v15 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile;
    }
    else
    {
      v15 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile;
      v16 = (uint64_t)v14;
    }
  }
  return sub_1BA4A2E80(v16, v15);
}

__n128 sub_1BB3D4534@<Q0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  _OWORD v9[2];
  char v10;
  uint64_t v11;

  v4 = sub_1BB872358();
  sub_1BB3D45C4(a1, (uint64_t)v9);
  v5 = v10;
  v6 = v11;
  v8 = v9[0];
  result = (__n128)v9[1];
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v8;
  *(__n128 *)(a2 + 40) = result;
  *(_BYTE *)(a2 + 56) = v5;
  *(_QWORD *)(a2 + 64) = v6;
  *(_BYTE *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_1BB3D45C4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1BB3D52B8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BB8725B0();
  v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v26 = MEMORY[0x1BCCE2EB4](v7);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
  v28 = v8;
  v29 = v9;
  sub_1BA7114A0();
  swift_bridgeObjectRetain();
  v10 = sub_1BB8724FC();
  v12 = v11;
  v14 = v13 & 1;
  v15 = sub_1BB872484();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1BB87249C();
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BB3D52B8);
  v16 = sub_1BB8724CC();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_release();
  v20 &= 1u;
  sub_1BAB5EC9C(v10, v12, v14);
  swift_bridgeObjectRelease();
  v23 = v26;
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v23;
  *(_QWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v18;
  *(_BYTE *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v22;
  swift_retain();
  swift_retain();
  sub_1BAB5EC7C(v16, v18, v20);
  swift_bridgeObjectRetain();
  sub_1BAB5EC9C(v16, v18, v20);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3D47E0()
{
  return sub_1BB87252C();
}

uint64_t sub_1BB3D47F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  type metadata accessor for DebugFormatFileTreeItem();
  sub_1BA4A2870(&qword_1EF2C2DB8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t)&unk_1BB91B918);
  sub_1BB872298();
  swift_getKeyPath();
  sub_1BB8722A4();
  swift_release();
  swift_release();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  sub_1BB3D49A0();
  sub_1BB3D4B70(0);
  sub_1BB3D4FB0();
  sub_1BA603240(&qword_1EF2C2E98, (uint64_t (*)(uint64_t))sub_1BB3D4B70, sub_1BB3D50C4, MEMORY[0x1E0CE0798]);
  swift_retain();
  swift_retain();
  return sub_1BB8722C8();
}

uint64_t sub_1BB3D4988@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BB3D3510(v1[2], v1[3], v1[4], v1[5], a1);
}

double sub_1BB3D4994@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1BB3D4534(*(_QWORD *)(v1 + 40), a1).n128_u64[0];
  return result;
}

void sub_1BB3D49A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2DC0)
  {
    sub_1BA5AA2AC(255, &qword_1EF2C2DC8, (uint64_t (*)(uint64_t))sub_1BB3D4A1C, sub_1BB3D4B54, MEMORY[0x1E0CDFAF0]);
    v0 = sub_1BB8722E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2DC0);
  }
}

void sub_1BB3D4A1C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2DD0, (uint64_t (*)(uint64_t))sub_1BB3D4A38, MEMORY[0x1E0CE0648]);
}

void sub_1BB3D4A38()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C2DD8)
  {
    sub_1BB3D4A9C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C2DD8);
  }
}

void sub_1BB3D4A9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2DE0)
  {
    sub_1BB3D4AF8();
    v0 = sub_1BB8722E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2DE0);
  }
}

void sub_1BB3D4AF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2DE8)
  {
    v0 = sub_1BB872454();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2DE8);
  }
}

uint64_t sub_1BB3D4B54()
{
  return sub_1BA4A2870(&qword_1EF2C2DF0, (uint64_t (*)(uint64_t))sub_1BB3D4A1C, MEMORY[0x1E0CE0680]);
}

void sub_1BB3D4B70(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2DF8, (uint64_t (*)(uint64_t))sub_1BB3D4B8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB3D4B8C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF2C2E00)
  {
    sub_1BA4B07F0(255, &qword_1EF2A9180, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB86C8E0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BB3D52E4(255, &qword_1EF2C2E08, MEMORY[0x1E0CDB880]);
    sub_1BB3D4F50();
    sub_1BA4A2870((unint64_t *)&qword_1EF2C2E78, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BB8725F8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF2C2E00);
  }
}

void sub_1BB3D4C70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2E10)
  {
    sub_1BB3D4CF4(255);
    sub_1BA5AA2AC(255, (unint64_t *)&qword_1EF2C2E60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC800], sub_1BB3D4F34, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDBED0]);
    v0 = sub_1BB8722E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2E10);
  }
}

void sub_1BB3D4CF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1EF2C2E18)
  {
    sub_1BA5AA2AC(255, &qword_1EF2C2E20, (uint64_t (*)(uint64_t))sub_1BB3D4D88, sub_1BB3D4EB0, MEMORY[0x1E0CDFAF0]);
    v5[0] = v2;
    v5[1] = sub_1BB3D4ECC();
    v3 = MEMORY[0x1BCCE5AC4](a1, v5, MEMORY[0x1E0CDE248], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EF2C2E18);
  }
}

void sub_1BB3D4D88(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2E28, (uint64_t (*)(uint64_t))sub_1BB3D4DA4, MEMORY[0x1E0CE0648]);
}

void sub_1BB3D4DA4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2C2E30)
  {
    sub_1BB3D4A9C();
    sub_1BA4B07F0(255, &qword_1EF2C2E38, (uint64_t (*)(uint64_t))sub_1BB3D4E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2C2E30);
  }
}

void sub_1BB3D4E30(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2E40, (uint64_t (*)(uint64_t))sub_1BB3D4E4C, MEMORY[0x1E0CE0648]);
}

void sub_1BB3D4E4C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C2E48)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C2E48);
  }
}

uint64_t sub_1BB3D4EB0()
{
  return sub_1BA4A2870(&qword_1EF2C2E50, (uint64_t (*)(uint64_t))sub_1BB3D4D88, MEMORY[0x1E0CE0680]);
}

unint64_t sub_1BB3D4ECC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2E58;
  if (!qword_1EF2C2E58)
  {
    sub_1BA5AA2AC(255, &qword_1EF2C2E20, (uint64_t (*)(uint64_t))sub_1BB3D4D88, sub_1BB3D4EB0, MEMORY[0x1E0CDFAF0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDFB10], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2E58);
  }
  return result;
}

uint64_t sub_1BB3D4F34()
{
  return sub_1BA4A2870(&qword_1EF2C2E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC800], MEMORY[0x1E0CDC7F8]);
}

unint64_t sub_1BB3D4F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2E70;
  if (!qword_1EF2C2E70)
  {
    sub_1BA4B07F0(255, &qword_1EF2A9180, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF48], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2E70);
  }
  return result;
}

unint64_t sub_1BB3D4FB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF2C2E80;
  if (!qword_1EF2C2E80)
  {
    sub_1BB3D49A0();
    v2 = v1;
    v3[0] = sub_1BB3D5018();
    v3[1] = sub_1BB3D5080();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C2E80);
  }
  return result;
}

unint64_t sub_1BB3D5018()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2E88;
  if (!qword_1EF2C2E88)
  {
    sub_1BA5AA2AC(255, &qword_1EF2C2DC8, (uint64_t (*)(uint64_t))sub_1BB3D4A1C, sub_1BB3D4B54, MEMORY[0x1E0CDFAF0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDFB10], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2E88);
  }
  return result;
}

unint64_t sub_1BB3D5080()
{
  unint64_t result;

  result = qword_1EF2C2E90;
  if (!qword_1EF2C2E90)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDC898], MEMORY[0x1E0CDC8A8]);
    atomic_store(result, (unint64_t *)&qword_1EF2C2E90);
  }
  return result;
}

uint64_t sub_1BB3D50C4()
{
  return sub_1BA603240(&qword_1EF2C2EA0, (uint64_t (*)(uint64_t))sub_1BB3D4B8C, (uint64_t (*)(void))sub_1BB3D50E8, MEMORY[0x1E0CDFEE8]);
}

unint64_t sub_1BB3D50E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF2C2EA8;
  if (!qword_1EF2C2EA8)
  {
    sub_1BB3D52E4(255, &qword_1EF2C2E08, MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1BB3D5160();
    v3[1] = sub_1BB3D5274();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C2EA8);
  }
  return result;
}

unint64_t sub_1BB3D5160()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EF2C2EB0;
  if (!qword_1EF2C2EB0)
  {
    sub_1BB3D4C70();
    v2 = v1;
    sub_1BA5AA2AC(255, &qword_1EF2C2E20, (uint64_t (*)(uint64_t))sub_1BB3D4D88, sub_1BB3D4EB0, MEMORY[0x1E0CDFAF0]);
    v4[2] = v3;
    v4[3] = sub_1BB3D4ECC();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_1BB3D520C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CD9C20], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2C2EB0);
  }
  return result;
}

unint64_t sub_1BB3D520C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2EB8;
  if (!qword_1EF2C2EB8)
  {
    sub_1BA5AA2AC(255, (unint64_t *)&qword_1EF2C2E60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC800], sub_1BB3D4F34, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDBED0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDBEF0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2EB8);
  }
  return result;
}

unint64_t sub_1BB3D5274()
{
  unint64_t result;

  result = qword_1EF2C2EC0;
  if (!qword_1EF2C2EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912BDC, &type metadata for DebugFormatFileTreeItemView);
    atomic_store(result, (unint64_t *)&qword_1EF2C2EC0);
  }
  return result;
}

void sub_1BB3D52B8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2EC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDD560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB3D52D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB3D37C4(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_1BB3D52E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BB3D4C70();
    v7 = a3(a1, v6, &type metadata for DebugFormatFileTreeItemView);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB3D5344()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB3D5378()
{
  uint64_t *v0;

  return sub_1BB3D42E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BB3D5388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_1BAB5EC9C(a3, a4, a5 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1BB3D53C4(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DebugFormatCacheFile();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v12 = (uint64_t (*)(_QWORD))sub_1BAA197E8;
    v13 = (uint64_t)v7;
LABEL_8:
    sub_1BA4A2E80(v13, v12);
    return objc_msgSend((id)objc_opt_self(), *a3);
  }
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BB871890();
  swift_release();
  swift_release();
  swift_release();
  v14 = v32;
  if (!v32)
  {
    v12 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile;
    v13 = (uint64_t)v11;
    goto LABEL_8;
  }
  v15 = *(_QWORD *)(v32 + 40);
  v17 = *v11;
  v16 = v11[1];
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v17, v16);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v22 = *(_QWORD *)(v14 + 24);
  if (*(_QWORD *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    v23 = sub_1BA6E35A8(v17, v16);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9D8];
  }
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v26)
  {
    v28 = (void *)objc_opt_self();
    if (v27)
      v29 = objc_msgSend(v28, *a3);
    else
      v29 = objc_msgSend(v28, sel_systemOrangeColor);
  }
  else
  {
    v29 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  }
  v30 = v29;
  swift_release();
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  return v30;
}

uint64_t sub_1BB3D571C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[128];
  _BYTE v14[128];
  _QWORD v15[16];

  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)&v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BB871890();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  sub_1BA5193C4((uint64_t)v14, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  if (sub_1BA8CF120((uint64_t)v15) == 1)
  {
    v5 = 0;
  }
  else
  {
    v7 = v15[0];
    v6 = v15[1];
    sub_1BA4C2DD8(a1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    v8 = type metadata accessor for DebugFormatCacheFile();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BAA197E8);
      sub_1BAF92764((uint64_t)v14);
      v5 = 0;
    }
    else
    {
      v10 = *v4;
      v9 = v4[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      if (v7 == v10 && v6 == v9)
        v5 = 1;
      else
        v5 = sub_1BB874398();
      swift_bridgeObjectRetain();
      sub_1BAF92764((uint64_t)v14);
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

unint64_t sub_1BB3D5918()
{
  unint64_t result;

  result = qword_1EF2C2EE0;
  if (!qword_1EF2C2EE0)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDF5D8], MEMORY[0x1E0CDF5D0]);
    atomic_store(result, (unint64_t *)&qword_1EF2C2EE0);
  }
  return result;
}

uint64_t sub_1BB3D5964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_1BAB5EC7C(a3, a4, a5 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BB3D59A8()
{
  return sub_1BA4A2870(&qword_1EF2C2EE8, (uint64_t (*)(uint64_t))sub_1BB3D59D4, MEMORY[0x1E0CD98A8]);
}

void sub_1BB3D59D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2EF0)
  {
    sub_1BB3D49A0();
    sub_1BB3D4B70(255);
    sub_1BB3D4FB0();
    sub_1BA603240(&qword_1EF2C2E98, (uint64_t (*)(uint64_t))sub_1BB3D4B70, sub_1BB3D50C4, MEMORY[0x1E0CE0798]);
    v0 = sub_1BB8722D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2EF0);
  }
}

void FeedGroupRepooling.freezing.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FeedGroupRepooling.init(freezing:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t static FeedGroupRepooling.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v5;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
  {
    if (v3 == 2)
      return 1;
  }
  else
  {
    v5 = (v2 & 1) == 0;
    if (v3 != 2 && ((v5 ^ v3) & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1BB3D5AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x676E697A65657266 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB3D5B7C()
{
  sub_1BA518C5C();
  return sub_1BB874710();
}

uint64_t sub_1BB3D5BA4()
{
  sub_1BA518C5C();
  return sub_1BB87471C();
}

BOOL sub_1BB3D5BCC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v2 = *a1;
  v3 = *a2;
  if (v2 != 2)
  {
    v4 = (v2 & 1) == 0;
    return v3 != 2 && ((v4 ^ v3) & 1) != 0;
  }
  return v3 == 2;
}

uint64_t storeEnumTagSinglePayload for FeedGroupRepooling.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB3D5C50 + 4 * byte_1BB912D1A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB3D5C70 + 4 * byte_1BB912D1F[v4]))();
}

_BYTE *sub_1BB3D5C50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB3D5C70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3D5C78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3D5C80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3D5C88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3D5C90(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupRepooling.CodingKeys()
{
  return &type metadata for FeedGroupRepooling.CodingKeys;
}

unint64_t sub_1BB3D5CB0()
{
  unint64_t result;

  result = qword_1EF2C2EF8;
  if (!qword_1EF2C2EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912E50, &type metadata for FeedGroupRepooling.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2EF8);
  }
  return result;
}

void SportsTaxonomyGraphNode.tagId.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D5D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void SportsTaxonomyGraphNode.umcCanonicalId.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D5D88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsTaxonomyGraphNode.isHidden.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_1BB3D5DD8 + 4 * byte_1BB912ED8[*v0 >> 62]))(1);
}

uint64_t sub_1BB3D5DD8@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)(*(_QWORD *)(a1 + 16) + 48);
}

uint64_t SportsTaxonomyGraphNode.sortIfNeeded<A>(tags:sortBy:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (v2 >= 2)
  {
    v3 = (_BYTE *)((_DWORD)v2 == 2 ? *(_QWORD *)(v1 + 16) + 49 : *(_QWORD *)(v1 + 16) + 17);
    if (*v3 == 1)
      return swift_bridgeObjectRetain();
  }
  v5 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
  return sub_1BB872C58();
}

uint64_t SportsTaxonomyGraphNode.isChildrenOrderCurated.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (v2 < 2)
    return 0;
  if ((_DWORD)v2 == 2)
    return *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 49);
  return *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 17);
}

void SportsTaxonomyGraphNode.children.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D5F0C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void SportsTaxonomyGraphNode.visibleChildren.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D5FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return v1;
}

void SportsTaxonomyGraphNode.parents.getter()
{
  __asm { BR              X11 }
}

_QWORD *sub_1BB3D6328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 56);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        JUMPOUT(0x1BB3D6B0CLL);
      }
      v4 = 0;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x1BCCE4630](v4, v2);
        }
        else
        {
          v6 = *(_QWORD *)(v2 + 8 * v4 + 32);
          swift_retain();
        }
        if (MEMORY[0x1BCCE5D40](*(_QWORD *)(v6 + 16) + 16))
        {
          type metadata accessor for SportsTaxonomyGraphRootNode();
          swift_unknownObjectRetain();
          v7 = swift_dynamicCastClass();
          if (v7)
          {
            v8 = v7;
            swift_unknownObjectRelease();
            v9 = swift_allocObject();
            *(_QWORD *)(v9 + 16) = v8;
            swift_release();
LABEL_19:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v5 = sub_1BB38CBD4(0, v5[2] + 1, 1, v5);
            v19 = v5[2];
            v18 = v5[3];
            if (v19 >= v18 >> 1)
              v5 = sub_1BB38CBD4((_QWORD *)(v18 > 1), v19 + 1, 1, v5);
            v5[2] = v19 + 1;
            v5[v19 + 4] = v9;
            goto LABEL_6;
          }
          type metadata accessor for SportsTaxonomyGraphEntityNode();
          v10 = swift_dynamicCastClass();
          if (v10)
          {
            v11 = v10;
            swift_unknownObjectRelease();
            v12 = swift_allocObject();
            *(_QWORD *)(v12 + 16) = v11;
            swift_release();
            v9 = v12 | 0x8000000000000000;
            goto LABEL_19;
          }
          type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
          v13 = swift_dynamicCastClass();
          swift_unknownObjectRelease();
          if (v13)
          {
            v14 = swift_allocObject();
            *(_QWORD *)(v14 + 16) = v13;
            swift_release();
            v9 = v14 | 0x4000000000000000;
            goto LABEL_19;
          }
          type metadata accessor for SportsTaxonomyGraphSectionNode();
          v15 = swift_dynamicCastClass();
          if (v15)
          {
            v16 = v15;
            v17 = swift_allocObject();
            *(_QWORD *)(v17 + 16) = v16;
            swift_release();
            v9 = v17 | 0xC000000000000000;
            goto LABEL_19;
          }
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
LABEL_6:
        if (v3 == ++v4)
          goto LABEL_27;
      }
    }
  }
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_27:
  swift_bridgeObjectRelease_n();
  swift_release();
  return v5;
}

void SportsTaxonomyGraphNode.flattenChildren()()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D6B70@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(a1 + 16) + 16);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  if (*(_QWORD *)(v2 + 16))
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void SportsTaxonomyGraphNode.flattenAllChildren()()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D6D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v8;

  v1 = (uint64_t *)(*(_QWORD *)(a1 + 16) + 16);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v2 + 32);
    v4 = v8;
    swift_retain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1BB38CBD4(0, v8[2] + 1, 1, v8);
    v6 = v4[2];
    v5 = v4[3];
    if (v6 >= v5 >> 1)
      v4 = sub_1BB38CBD4((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v4[2] = v6 + 1;
    v4[v6 + 4] = v3;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void SportsTaxonomyGraphNode.childrenTagIds()()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D6F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(*(_QWORD *)(a1 + 16) + 16);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  v3 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1BB3D7070()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3D70A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  v5 = v1;
  type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1BAAC50E8((uint64_t)&v5);
  v3 = swift_beginAccess();
  MEMORY[0x1BCCE36AC](v3);
  if (*(_QWORD *)((*(_QWORD *)(v2 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v2 + 56) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BB3D7228()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphNode()
{
  return &type metadata for SportsTaxonomyGraphNode;
}

uint64_t OpenTextFileCommandHandler.__allocating_init(attachmentResolver:sceneProvider:)(__int128 *a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1BA4CECCC(a1, v4 + 16);
  sub_1BA4CECCC(a2, v4 + 56);
  return v4;
}

uint64_t OpenTextFileCommandHandler.init(attachmentResolver:sceneProvider:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;

  sub_1BA4CECCC(a1, v2 + 16);
  sub_1BA4CECCC(a2, v2 + 56);
  return v2;
}

void OpenTextFileCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BB3D7364(a4);
}

uint64_t OpenTextFileCommandHandler.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t OpenTextFileCommandHandler.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

void sub_1BB3D7340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BB3D7364(*a4);
}

void sub_1BB3D7364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  id v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  uint64_t (*v32)(char *, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  Class v77;
  id v78;
  void *v79;
  id v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  int v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  int v105;
  uint64_t v106;

  v3 = sub_1BB87174C();
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  MEMORY[0x1E0C80A78](v3);
  v89 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86FC28();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v98 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v96 = (char *)&v81 - v13;
  MEMORY[0x1E0C80A78](v14);
  v95 = (char *)&v81 - v15;
  MEMORY[0x1E0C80A78](v16);
  v100 = (char *)&v81 - v17;
  MEMORY[0x1E0C80A78](v18);
  v104 = (char *)&v81 - v19;
  v86 = type metadata accessor for DebugTaxtAttachementList();
  MEMORY[0x1E0C80A78](v86);
  v21 = (_QWORD **)((char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
  v22 = (void *)sub_1BB86FFC4();
  if (!v22)
    return;
  v23 = v22;
  v24 = objc_msgSend(v22, sel_rootViewController);

  if (!v24)
    return;
  v85 = (id)sub_1BB8733CC();

  v25 = *(_QWORD *)(a1 + 16);
  v26 = MEMORY[0x1E0DEE9D8];
  if (!v25)
    goto LABEL_57;
  v81 = v21;
  v82 = v8;
  v83 = v6;
  v84 = v5;
  v106 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B4A4(0, v25, 0);
  v27 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v94 = *(_QWORD *)(v10 + 72);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v105 = *MEMORY[0x1E0DB79E0];
  v99 = *MEMORY[0x1E0DB79C8];
  v93 = *MEMORY[0x1E0DB79D0];
  v92 = *MEMORY[0x1E0DB79C0];
  v87 = *MEMORY[0x1E0DB79B8];
  v97 = v10;
  do
  {
    v29 = v104;
    v28(v104, v27, v9);
    v30 = v100;
    v28(v100, (uint64_t)v29, v9);
    v31 = v95;
    v28(v95, (uint64_t)v30, v9);
    v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
    v33 = v32(v31, v9);
    if (v33 == v105)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v31, v9);
      v34 = *(_QWORD *)v31;
      v35 = *(_QWORD *)(v34 + 16);
      v102 = *(_QWORD *)(v34 + 24);
      v103 = v35;
      swift_bridgeObjectRetain();
      swift_release();
      v36 = v98;
      v37 = v96;
      goto LABEL_18;
    }
    v36 = v98;
    v37 = v96;
    if (v33 == v99)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v31, v9);
      v38 = *(_QWORD *)v31;
      v39 = *(_QWORD *)(v38 + 56);
      v102 = *(_QWORD *)(v38 + 64);
      v103 = v39;
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_18;
    }
    if (v33 == v93)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v31, v9);
      sub_1BAB58E90();
      v41 = (uint64_t *)(swift_projectBox() + *(int *)(v40 + 48));
      v42 = v41[1];
      v103 = *v41;
    }
    else
    {
      if (v33 != v92)
      {
        if (v33 == v87)
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
          v44 = v82;
          sub_1BB86C8D4();
          v45 = sub_1BB86C8C8();
          v102 = v46;
          v103 = v45;
          (*(void (**)(char *, uint64_t))(v83 + 8))(v44, v84);
        }
        else
        {
          v47 = v31;
          v48 = v82;
          sub_1BB86C8D4();
          v49 = sub_1BB86C8C8();
          v102 = v50;
          v103 = v49;
          (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v84);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
        }
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v10 + 96))(v31, v9);
      v43 = *(_QWORD *)v31;
      v42 = *(_QWORD *)(v43 + 40);
      v103 = *(_QWORD *)(v43 + 32);
    }
    v102 = v42;
    swift_bridgeObjectRetain();
    swift_release();
LABEL_17:
    v30 = v100;
LABEL_18:
    v28(v37, (uint64_t)v30, v9);
    v51 = v32(v37, v9);
    if (v51 == v105)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v37, v9);
      v52 = *(_QWORD *)(*(_QWORD *)v37 + 16);
      v53 = *(_QWORD *)(*(_QWORD *)v37 + 24);
LABEL_22:
      v101 = v52;
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_34;
    }
    v54 = v51;
    if (v51 == v99)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v37, v9);
      v52 = *(_QWORD *)(*(_QWORD *)v37 + 56);
      v53 = *(_QWORD *)(*(_QWORD *)v37 + 64);
      goto LABEL_22;
    }
    if (v51 == v93)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v37, v9);
      sub_1BAB58E90();
      v56 = (uint64_t *)(swift_projectBox() + *(int *)(v55 + 48));
      v53 = v56[1];
      v101 = *v56;
    }
    else
    {
      if (v51 != v92)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
        v58 = 0x6567616D69;
        if (v54 != v87)
          v58 = 0;
        v101 = v58;
        if (v54 == v87)
          v53 = 0xE500000000000000;
        else
          v53 = 0xE000000000000000;
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v10 + 96))(v37, v9);
      v57 = *(_QWORD *)(*(_QWORD *)v37 + 32);
      v53 = *(_QWORD *)(*(_QWORD *)v37 + 40);
      v101 = v57;
    }
    swift_bridgeObjectRetain();
    swift_release();
LABEL_33:
    v36 = v98;
LABEL_34:
    v28(v36, (uint64_t)v30, v9);
    v59 = v32(v36, v9);
    if (v59 == v105)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v36, v9);
      v60 = *(_QWORD *)v36;
      v61 = *(_QWORD *)(*(_QWORD *)v36 + 16);
      v62 = *(_QWORD *)(v60 + 24);
LABEL_38:
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_51;
    }
    v63 = v59;
    if (v59 == v99)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v36, v9);
      v64 = *(_QWORD *)v36;
      v61 = *(_QWORD *)(*(_QWORD *)v36 + 56);
      v62 = *(_QWORD *)(v64 + 64);
      goto LABEL_38;
    }
    if (v59 == v93)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v36, v9);
      v88 = *(_QWORD *)v36;
      sub_1BAB58E90();
      v65 = swift_projectBox();
      v66 = v89;
      v67 = v90;
      v68 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v65, v91);
      v61 = sub_1BB871740();
      v62 = v69;
      v70 = *(void (**)(char *, uint64_t))(v67 + 8);
      v10 = v97;
      v70(v66, v68);
    }
    else
    {
      if (v59 != v92)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v36, v9);
        if (v63 == v87)
          v61 = 0x68736E6565726373;
        else
          v61 = 0;
        if (v63 == v87)
          v62 = 0xEA0000000000746FLL;
        else
          v62 = 0xE000000000000000;
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v10 + 96))(v36, v9);
      v71 = *(_QWORD *)v36;
      v61 = *(_QWORD *)(*(_QWORD *)v36 + 16);
      v62 = *(_QWORD *)(v71 + 24);
      swift_bridgeObjectRetain();
    }
    swift_release();
LABEL_50:
    v30 = v100;
LABEL_51:
    v72 = *(void (**)(char *, uint64_t))(v10 + 8);
    v72(v30, v9);
    v72(v104, v9);
    v26 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7B4A4(0, *(_QWORD *)(v26 + 16) + 1, 1);
      v26 = v106;
    }
    v74 = *(_QWORD *)(v26 + 16);
    v73 = *(_QWORD *)(v26 + 24);
    if (v74 >= v73 >> 1)
    {
      sub_1BAC7B4A4(v73 > 1, v74 + 1, 1);
      v26 = v106;
    }
    *(_QWORD *)(v26 + 16) = v74 + 1;
    v75 = (_QWORD *)(v26 + 48 * v74);
    v76 = v102;
    v75[4] = v103;
    v75[5] = v76;
    v75[6] = v101;
    v75[7] = v53;
    v75[8] = v61;
    v75[9] = v62;
    v27 += v94;
    --v25;
    v10 = v97;
  }
  while (v25);
  v21 = v81;
LABEL_57:
  *(_QWORD *)((char *)v21 + *(int *)(v86 + 20)) = swift_getKeyPath();
  sub_1BB3D7C4C();
  swift_storeEnumTagMultiPayload();
  *v21 = v26;
  sub_1BB3D7CA0();
  v78 = objc_allocWithZone(v77);
  v79 = (void *)sub_1BB872370();
  v80 = v85;
  objc_msgSend(v85, sel_presentViewController_animated_completion_, v79, 1, 0);

}

uint64_t type metadata accessor for OpenTextFileCommandHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for OpenTextFileCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OpenTextFileCommandHandler.__allocating_init(attachmentResolver:sceneProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BB3D7C2C()
{
  return sub_1BB872334();
}

void sub_1BB3D7C4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2F00)
  {
    sub_1BB87225C();
    v0 = sub_1BB87222C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2F00);
  }
}

void sub_1BB3D7CA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2F08)
  {
    type metadata accessor for DebugTaxtAttachementList();
    sub_1BB3D7D00();
    v0 = sub_1BB87237C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2F08);
  }
}

unint64_t sub_1BB3D7D00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2F10;
  if (!qword_1EF2C2F10)
  {
    v1 = type metadata accessor for DebugTaxtAttachementList();
    result = MEMORY[0x1BCCE5B24](&unk_1BB941A9C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F10);
  }
  return result;
}

uint64_t sub_1BB3D7D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;

  type metadata accessor for FormatDerivedDataOption();
  v3 = swift_allocBox();
  sub_1BA4C2DD8(a1, v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
  v5 = *(_QWORD **)(v1 + 48);
  v6 = v5[2];
  if (v6)
  {
    v7 = v5[v6 + 3];
    swift_retain();
    sub_1BAA736F8(v7);
    v9 = v8;
    swift_release();
    if ((v9 & 1) != 0)
      return swift_release();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BB38ED0C(0, v5[2] + 1, 1, v5);
  v12 = v5[2];
  v11 = v5[3];
  if (v12 >= v11 >> 1)
    v5 = sub_1BB38ED0C((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
  v5[2] = v12 + 1;
  v5[v12 + 4] = v3 | 0x1000000000000000;
  result = swift_release();
  *(_QWORD *)(v1 + 48) = v5;
  return result;
}

uint64_t sub_1BB3D7E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BB3DA660(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1BB26F370);
  return swift_release();
}

uint64_t sub_1BB3D7EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v18 = v2;
  v19 = v1;
  v17 = v1;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (unint64_t *)(v2 + 32);
    sub_1BA781758((uint64_t)&v19);
    sub_1BA781758((uint64_t)&v18);
    while (1)
    {
      v10 = *v4++;
      v9 = (_OWORD *)v10;
      v11 = v10 >> 60;
      if (v10 >> 60 == 2)
      {
        v5 = v9[3];
        v24 = v9[2];
        v25 = v5;
        v6 = v9[5];
        v26 = v9[4];
        v27 = v6;
        v7 = swift_retain();
        v8 = sub_1BB3D7EA0(v7);
        sub_1BB3844D4(v8);
      }
      else
      {
        if ((_DWORD)v11)
          goto LABEL_5;
        v12 = v9[2];
        v20 = v9[1];
        v21 = v12;
        v13 = v9[4];
        v22 = v9[3];
        v23 = v13;
        v14 = swift_retain();
        v15 = sub_1BB3D7EA0(v14);
        sub_1BB3844D4(v15);
      }
      swift_release();
LABEL_5:
      if (!--v3)
      {
        sub_1BA4F6CCC((uint64_t)&v18);
        return v17;
      }
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3D7F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  v10 = v9 | 0x3000000000000000;
  v11 = *(_QWORD **)(v4 + 48);
  v12 = v11[2];
  if (v12)
  {
    v13 = v11[v12 + 3];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAA736F8(v13);
    v15 = v14;
    swift_release();
    if ((v15 & 1) != 0)
      return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_1BB38ED0C(0, v11[2] + 1, 1, v11);
  v18 = v11[2];
  v17 = v11[3];
  if (v18 >= v17 >> 1)
    v11 = sub_1BB38ED0C((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
  v11[2] = v18 + 1;
  v11[v18 + 4] = v10;
  result = swift_release();
  *(_QWORD *)(v4 + 48) = v11;
  return result;
}

uint64_t sub_1BB3D80E0(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  if ((a1 >> 60) <= 7 && ((1 << (a1 >> 60)) & 0xE5) != 0)
    goto LABEL_5;
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9
    || (v10 = *(_QWORD *)(v8 + 8 * v9 + 24),
        swift_retain(),
        swift_retain(),
        sub_1BAA736F8(v10),
        LOBYTE(v10) = v11,
        swift_release(),
        result = swift_release(),
        (v10 & 1) == 0))
  {
LABEL_5:
    v4 = *(_QWORD **)(v1 + 48);
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BB38ED0C(0, v4[2] + 1, 1, v4);
      v4 = (_QWORD *)result;
    }
    v7 = v4[2];
    v6 = v4[3];
    if (v7 >= v6 >> 1)
    {
      result = (uint64_t)sub_1BB38ED0C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
      v4 = (_QWORD *)result;
    }
    v4[2] = v7 + 1;
    v4[v7 + 4] = a1;
    *(_QWORD *)(v1 + 48) = v4;
  }
  return result;
}

void sub_1BB3D81F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v30);
  v28 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27 = (uint64_t)&v24 - v6;
  v7 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v29 = *(_QWORD *)(v8 + 72);
    v24 = a1;
    swift_bridgeObjectRetain();
    v25 = v1;
    v26 = v10;
    while (1)
    {
      v13 = swift_allocBox();
      v15 = v14;
      sub_1BA4C2DD8(v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB186044(v10, v15);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_deallocBox();
        return;
      }
      v16 = *(_QWORD **)(v1 + 48);
      v17 = v16[2];
      if (!v17 || v16[v17 + 3] >> 60 != 1)
        goto LABEL_10;
      v18 = swift_projectBox();
      v19 = v27;
      sub_1BA4C2DD8(v18, v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      v20 = v28;
      sub_1BA4C2DD8(v15, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      swift_retain();
      swift_retain();
      v21 = sub_1BB188A5C(v19, v20);
      sub_1BAA736BC(v20);
      sub_1BAA736BC(v19);
      swift_release();
      swift_release();
      if (!v21)
        break;
      swift_release();
      v1 = v25;
      v10 = v26;
LABEL_4:
      v12 += v29;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    v1 = v25;
    v10 = v26;
    v16 = *(_QWORD **)(v25 + 48);
LABEL_10:
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1BB38ED0C(0, v16[2] + 1, 1, v16);
    v23 = v16[2];
    v22 = v16[3];
    if (v23 >= v22 >> 1)
      v16 = sub_1BB38ED0C((_QWORD *)(v22 > 1), v23 + 1, 1, v16);
    v16[2] = v23 + 1;
    v16[v23 + 4] = v13 | 0x1000000000000000;
    swift_release();
    *(_QWORD *)(v1 + 48) = v16;
    goto LABEL_4;
  }
}

uint64_t sub_1BB3D84A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, _QWORD *a8)
{
  return sub_1BB3D8B3C(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int128 *))sub_1BAC51BDC);
}

uint64_t sub_1BB3D84CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, _QWORD *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  __int16 v32;
  __int128 v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t result;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned __int16 v42;
  uint64_t v43;
  __int128 v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  int v62;
  __int16 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  unsigned int v68;
  unsigned __int16 v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;

  *(_QWORD *)&v65 = a4;
  *((_QWORD *)&v65 + 1) = a5;
  v67 = 0;
  v66 = 0uLL;
  v68 = 0;
  v69 = 0x2000;
  v15 = MEMORY[0x1E0DEE9D8];
  v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v71 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BB469CFC((uint64_t)&v65, a8);
  if (v8)
  {
    sub_1BA8EBC64(v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, v68 | ((unint64_t)v69 << 32));
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (a6 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v16 = sub_1BB873F30();
    v53 = a7;
    if (v16)
      goto LABEL_5;
  }
  else
  {
    v16 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v53 = a7;
    if (v16)
    {
LABEL_5:
      v48 = a3;
      a3 = 0;
      v57 = a6 & 0xC000000000000001;
      v50 = a6 & 0xFFFFFFFFFFFFFF8;
      v49 = a6 + 32;
      v54 = a1;
      v52 = a6;
      v55 = a2;
      while (1)
      {
        if (v57)
        {
          a7 = (_QWORD *)MEMORY[0x1BCCE4630](a3, a6);
          v17 = __OFADD__(a3++, 1);
          if (v17)
            goto LABEL_29;
        }
        else
        {
          if (a3 >= *(_QWORD *)(v50 + 16))
          {
            __break(1u);
            goto LABEL_41;
          }
          a7 = *(_QWORD **)(v49 + 8 * a3);
          swift_retain();
          v17 = __OFADD__(a3++, 1);
          if (v17)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        v61 = 0;
        v59 = 0u;
        v60 = 0u;
        v62 = 0;
        v63 = -512;
        *(_QWORD *)&v64 = v15;
        *((_QWORD *)&v64 + 1) = v15;
        swift_beginAccess();
        v18 = a7[4];
        v19 = *(_QWORD *)(v18 + 16);
        if (v19)
        {
          v56 = a7;
          v51 = a3;
          swift_bridgeObjectRetain_n();
          v20 = (_OWORD *)(v18 + 56);
          do
          {
            v21 = *((_QWORD *)v20 - 3);
            v22 = *((_QWORD *)v20 - 1);
            if (v22)
            {
              v23 = *((_QWORD *)v20 - 2);
              v58 = *v20;
              v24 = (_QWORD *)*((_QWORD *)&v64 + 1);
              swift_retain();
              swift_bridgeObjectRetain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v24 = sub_1BB38ED20(0, v24[2] + 1, 1, v24);
              v26 = v24[2];
              v25 = v24[3];
              if (v26 >= v25 >> 1)
                v24 = sub_1BB38ED20((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
              v24[2] = v26 + 1;
              v27 = &v24[4 * v26];
              v27[4] = v23;
              v27[5] = v22;
              *((_OWORD *)v27 + 3) = v58;
              *((_QWORD *)&v64 + 1) = v24;
            }
            else
            {
              swift_retain();
            }
            v72 = v21;
            swift_retain();
            sub_1BAC46704(&v59);
            v20 = (_OWORD *)((char *)v20 + 40);
            swift_release_n();
            swift_bridgeObjectRelease();
            --v19;
          }
          while (v19);
          swift_bridgeObjectRelease_n();
          a3 = v51;
          a6 = v52;
          a7 = v56;
        }
        v28 = swift_allocObject();
        v29 = a7[3];
        v30 = v61;
        v31 = v62;
        v32 = v63;
        *(_QWORD *)(v28 + 16) = a7[2];
        *(_QWORD *)(v28 + 24) = v29;
        v33 = v60;
        *(_OWORD *)(v28 + 32) = v59;
        *(_OWORD *)(v28 + 48) = v33;
        *(_QWORD *)(v28 + 64) = v30;
        *(_WORD *)(v28 + 76) = v32;
        *(_DWORD *)(v28 + 72) = v31;
        *(_OWORD *)(v28 + 80) = v64;
        a7 = v70;
        swift_bridgeObjectRetain();
        swift_retain();
        a2 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a7 = sub_1BB38ED0C(0, a7[2] + 1, 1, a7);
        v35 = a7[2];
        v34 = a7[3];
        if (v35 >= v34 >> 1)
          a7 = sub_1BB38ED0C((_QWORD *)(v34 > 1), v35 + 1, 1, a7);
        a7[2] = v35 + 1;
        a7[v35 + 4] = v28 | 0x2000000000000000;
        swift_release();
        swift_release();
        v70 = a7;
        a1 = v54;
        v15 = MEMORY[0x1E0DEE9D8];
        if (a3 == v16)
        {
          swift_bridgeObjectRelease();
          a3 = v48;
          goto LABEL_32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  a7 = v70;
LABEL_32:
  a6 = swift_allocObject();
  *(_QWORD *)(a6 + 16) = a1;
  *(_QWORD *)(a6 + 24) = a2;
  *(_BYTE *)(a6 + 32) = a3;
  v15 = 0x5000000000000000;
  sub_1BA9ED7A4(a1, a2, a3);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_41:
    a7 = sub_1BB38ED0C(0, a7[2] + 1, 1, a7);
  v38 = a7[2];
  v37 = a7[3];
  if (v38 >= v37 >> 1)
    a7 = sub_1BB38ED0C((_QWORD *)(v37 > 1), v38 + 1, 1, a7);
  a7[2] = v38 + 1;
  a7[v38 + 4] = a6 | v15;
  swift_release();
  v39 = swift_allocObject();
  v40 = v67;
  v41 = v68;
  v42 = v69;
  v43 = v71;
  v44 = v66;
  *(_OWORD *)(v39 + 16) = v65;
  *(_OWORD *)(v39 + 32) = v44;
  *(_QWORD *)(v39 + 48) = v40;
  *(_WORD *)(v39 + 60) = v42;
  *(_DWORD *)(v39 + 56) = v41;
  *(_QWORD *)(v39 + 64) = a7;
  *(_QWORD *)(v39 + 72) = v43;
  v45 = (_QWORD *)v53[6];
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v45 = sub_1BB38ED0C(0, v45[2] + 1, 1, v45);
  v47 = v45[2];
  v46 = v45[3];
  if (v47 >= v46 >> 1)
    v45 = sub_1BB38ED0C((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
  v45[2] = v47 + 1;
  v45[v47 + 4] = v39;
  swift_release();
  result = swift_release();
  v53[6] = v45;
  return result;
}

uint64_t sub_1BB3D8B14(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, _QWORD *a8)
{
  return sub_1BB3D8B3C(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int128 *))sub_1BAC4286C);
}

uint64_t sub_1BB3D8B3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, _QWORD *a8, void (*a9)(__int128 *))
{
  uint64_t v9;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  __int16 v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned __int16 v50;
  uint64_t v51;
  __int128 v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  int v69;
  __int16 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  unsigned int v75;
  unsigned __int16 v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;

  *(_QWORD *)&v72 = a4;
  *((_QWORD *)&v72 + 1) = a5;
  v74 = 0;
  v73 = 0uLL;
  v75 = 0;
  v76 = 0x2000;
  v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v78 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  v15 = a8[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3D81F8(v15);
  if (v9)
  {
    swift_bridgeObjectRelease();
    sub_1BA8EBC64(v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, v75 | ((unint64_t)v76 << 32));
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = a6;
    v17 = a7;
    v64 = a1;
    v62 = a2;
    swift_bridgeObjectRelease();
    v18 = a8;
    a9(&v72);
    v20 = v16;
    if (v16 >> 62)
    {
LABEL_39:
      swift_bridgeObjectRetain();
      v20 = v16;
      v21 = sub_1BB873F30();
    }
    else
    {
      v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v22 = v62;
    v16 = v64;
    v23 = v17;
    if (v21)
    {
      v17 = 0;
      v60 = v20;
      v61 = v20 & 0xC000000000000001;
      v56 = v20 + 32;
      v57 = v20 & 0xFFFFFFFFFFFFFF8;
      v59 = a3;
      v58 = v21;
      while (1)
      {
        if (v61)
        {
          a3 = MEMORY[0x1BCCE4630](v17, v20);
        }
        else
        {
          if (v17 >= *(_QWORD *)(v57 + 16))
          {
            __break(1u);
            goto LABEL_41;
          }
          a3 = *(_QWORD *)(v56 + 8 * v17);
          swift_retain();
        }
        if (__OFADD__(v17++, 1))
        {
          __break(1u);
          goto LABEL_39;
        }
        v68 = 0;
        v66 = 0u;
        v67 = 0u;
        v69 = 0;
        v70 = -512;
        *(_QWORD *)&v71 = MEMORY[0x1E0DEE9D8];
        *((_QWORD *)&v71 + 1) = MEMORY[0x1E0DEE9D8];
        swift_beginAccess();
        v25 = *(_QWORD *)(a3 + 32);
        v26 = *(_QWORD *)(v25 + 16);
        if (v26)
        {
          swift_bridgeObjectRetain_n();
          v27 = (_OWORD *)(v25 + 56);
          do
          {
            v28 = *((_QWORD *)v27 - 3);
            v29 = *((_QWORD *)v27 - 1);
            if (v29)
            {
              v30 = *((_QWORD *)v27 - 2);
              v65 = *v27;
              v31 = (_QWORD *)*((_QWORD *)&v71 + 1);
              swift_retain();
              swift_bridgeObjectRetain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v31 = sub_1BB38ED20(0, v31[2] + 1, 1, v31);
              v33 = v31[2];
              v32 = v31[3];
              if (v33 >= v32 >> 1)
                v31 = sub_1BB38ED20((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
              v31[2] = v33 + 1;
              v34 = &v31[4 * v33];
              v34[4] = v30;
              v34[5] = v29;
              *((_OWORD *)v34 + 3) = v65;
              *((_QWORD *)&v71 + 1) = v31;
              v16 = v64;
            }
            else
            {
              swift_retain();
            }
            v79 = v28;
            swift_retain();
            sub_1BAC46704(&v66);
            v27 = (_OWORD *)((char *)v27 + 40);
            swift_release_n();
            swift_bridgeObjectRelease();
            --v26;
          }
          while (v26);
          swift_bridgeObjectRelease_n();
        }
        v35 = swift_allocObject();
        v36 = *(_QWORD *)(a3 + 24);
        v37 = v68;
        v38 = v69;
        v39 = v70;
        *(_QWORD *)(v35 + 16) = *(_QWORD *)(a3 + 16);
        *(_QWORD *)(v35 + 24) = v36;
        v40 = v67;
        *(_OWORD *)(v35 + 32) = v66;
        *(_OWORD *)(v35 + 48) = v40;
        *(_QWORD *)(v35 + 64) = v37;
        *(_WORD *)(v35 + 76) = v39;
        *(_DWORD *)(v35 + 72) = v38;
        *(_OWORD *)(v35 + 80) = v71;
        v18 = v77;
        swift_bridgeObjectRetain();
        swift_retain();
        v21 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1BB38ED0C(0, v18[2] + 1, 1, v18);
        v42 = v18[2];
        v41 = v18[3];
        if (v42 >= v41 >> 1)
          v18 = sub_1BB38ED0C((_QWORD *)(v41 > 1), v42 + 1, 1, v18);
        v18[2] = v42 + 1;
        v18[v42 + 4] = v35 | 0x2000000000000000;
        swift_release();
        swift_release();
        v77 = v18;
        v22 = v62;
        v23 = a7;
        v20 = v60;
        a3 = v59;
        if (v17 == v58)
        {
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
      }
    }
    swift_bridgeObjectRelease();
    v18 = v77;
LABEL_30:
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v16;
    *(_QWORD *)(v21 + 24) = v22;
    *(_BYTE *)(v21 + 32) = a3;
    v43 = v22;
    v22 = 0x5000000000000000;
    sub_1BA9ED7A4(v16, v43, a3);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_41:
      v18 = sub_1BB38ED0C(0, v18[2] + 1, 1, v18);
    v44 = v21 | v22;
    v46 = v18[2];
    v45 = v18[3];
    if (v46 >= v45 >> 1)
      v18 = sub_1BB38ED0C((_QWORD *)(v45 > 1), v46 + 1, 1, v18);
    v18[2] = v46 + 1;
    v18[v46 + 4] = v44;
    swift_release();
    v47 = swift_allocObject();
    v48 = v74;
    v49 = v75;
    v50 = v76;
    v51 = v78;
    v52 = v73;
    *(_OWORD *)(v47 + 16) = v72;
    *(_OWORD *)(v47 + 32) = v52;
    *(_QWORD *)(v47 + 48) = v48;
    *(_WORD *)(v47 + 60) = v50;
    *(_DWORD *)(v47 + 56) = v49;
    *(_QWORD *)(v47 + 64) = v18;
    *(_QWORD *)(v47 + 72) = v51;
    v53 = *(_QWORD **)(v23 + 48);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v53 = sub_1BB38ED0C(0, v53[2] + 1, 1, v53);
    v55 = v53[2];
    v54 = v53[3];
    if (v55 >= v54 >> 1)
      v53 = sub_1BB38ED0C((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
    v53[2] = v55 + 1;
    v53[v55 + 4] = v47;
    swift_release();
    result = swift_release();
    *(_QWORD *)(v23 + 48) = v53;
  }
  return result;
}

uint64_t sub_1BB3D91E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *(_QWORD **)(v1 + 56);
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BB38ED20(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_1BB38ED20((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v6[2] = v9 + 1;
  v10 = &v6[4 * v9];
  v10[4] = v3;
  v10[5] = v2;
  v10[6] = v4;
  v10[7] = v5;
  *(_QWORD *)(v1 + 56) = v6;
  return result;
}

uint64_t sub_1BB3D9294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = v5 | 0x4000000000000000;
  v7 = *(_QWORD **)(v2 + 48);
  v8 = v7[2];
  if (v8)
  {
    v9 = v7[v8 + 3];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAA736F8(v9);
    v11 = v10;
    swift_release();
    if ((v11 & 1) != 0)
      return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_1BB38ED0C(0, v7[2] + 1, 1, v7);
  v14 = v7[2];
  v13 = v7[3];
  if (v14 >= v13 >> 1)
    v7 = sub_1BB38ED0C((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
  v7[2] = v14 + 1;
  v7[v14 + 4] = v6;
  result = swift_release();
  *(_QWORD *)(v2 + 48) = v7;
  return result;
}

uint64_t sub_1BB3D93C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v5 = v4;
  v10 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1BA761FE4(a1, a2, *a3) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    *v13 = a1;
    v13[1] = a2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  sub_1BA6EE5AC(&v24, a1, a2);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(v5 + 48);
  v25 = result;
  v15 = *(_QWORD *)(result + 16);
  if (!v15)
  {
LABEL_14:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 24) = -1;
    return result;
  }
  v16 = (unint64_t *)(result + 32);
  swift_bridgeObjectRetain();
  while (1)
  {
    v17 = *v16++;
    if (v17 >> 60 == 1)
      break;
LABEL_5:
    if (!--v15)
    {
      result = sub_1BA4F6CCC((uint64_t)&v25);
      goto LABEL_14;
    }
  }
  v18 = swift_projectBox();
  sub_1BA4C2DD8(v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
  v19 = *(_QWORD *)v12 == a1 && *((_QWORD *)v12 + 1) == a2;
  if (!v19 && (sub_1BB874398() & 1) == 0)
  {
    sub_1BAA736BC((uint64_t)v12);
    goto LABEL_5;
  }
  swift_retain();
  sub_1BA4F6CCC((uint64_t)&v25);
  v20 = *((_QWORD *)v12 + 2);
  v21 = *((_QWORD *)v12 + 3);
  v22 = *((_QWORD *)v12 + 4);
  v23 = v12[40];
  sub_1BAA73684(v20, v21, v22, v23);
  sub_1BAA736BC((uint64_t)v12);
  result = swift_release();
  *(_QWORD *)a4 = v20;
  *(_QWORD *)(a4 + 8) = v21;
  *(_QWORD *)(a4 + 16) = v22;
  *(_BYTE *)(a4 + 24) = v23;
  return result;
}

uint64_t sub_1BB3D95C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  _QWORD v13[6];
  _BYTE v14[48];

  v3 = v1;
  sub_1BB3DB134(0, &qword_1EF2C2F50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3DB068();
  sub_1BB8746C8();
  sub_1BB3DB190(v3, (uint64_t)v14);
  sub_1BB3DB190((uint64_t)v14, (uint64_t)v13);
  v12 = 0;
  sub_1BB3DB1EC();
  sub_1BB87414C();
  if (!v2)
  {
    v13[0] = *(_QWORD *)(v3 + 48);
    v12 = 1;
    sub_1BA4AD288(0, &qword_1EF2C2F30, (uint64_t)&type metadata for FormatDerivedDataInstruction, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB3DB230(&qword_1EF2C2F68, (uint64_t (*)(void))sub_1BB3DB2AC, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v13[0] = *(_QWORD *)(v3 + 56);
    v12 = 2;
    sub_1BA4AD288(0, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB3DB2F0(&qword_1EF2C2F78, (uint64_t (*)(void))sub_1BB3DB36C, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB3D97CC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7463757274736E69;
  if (*v0 != 1)
    v1 = 0x4D656372756F735FLL;
  if (*v0)
    return v1;
  else
    return 0x65706F6373;
}

uint64_t sub_1BB3D9834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB3DB554(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3D9858()
{
  sub_1BB3DB068();
  return sub_1BB874710();
}

uint64_t sub_1BB3D9880()
{
  sub_1BB3DB068();
  return sub_1BB87471C();
}

double sub_1BB3D98A8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1BB3DAC68(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1BB3D98E8(_QWORD *a1)
{
  return sub_1BB3D95C0(a1);
}

uint64_t sub_1BB3D9920(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1BB3D99B8((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1BB3D9968()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3D9994()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3D99B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  int v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  __int16 v33;

  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  v9 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
  {
    if (((v14 >> 41) & 0x7F) != 0x7F)
    {
      v24[0] = *(_QWORD *)a1;
      v24[1] = v4;
      v24[2] = v6;
      v24[3] = v5;
      v24[4] = v7;
      v25 = v8;
      v26 = WORD2(v8);
      v27 = v9;
      v28 = v10;
      v29 = v12;
      v30 = v11;
      v31 = v13;
      v32 = v14;
      v33 = WORD2(v14);
      sub_1BB82AAB8((uint64_t)v24);
      if ((v20 & 1) == 0)
        return 0;
      goto LABEL_7;
    }
LABEL_5:
    v15 = *(_QWORD *)a2;
    v22 = *(_QWORD *)a1;
    v23 = *(_QWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(_QWORD *)(a2 + 24);
    v19 = *(_QWORD *)(a2 + 32);
    sub_1BA8EBBDC(*(_QWORD *)a1, v4, v6, v5, v7, v8);
    sub_1BA8EBBDC(v15, v16, v17, v18, v19, v14);
    sub_1BA8EBC64(v22, v23, v6, v5, v7, v8);
    sub_1BA8EBC64(v15, v16, v17, v18, v19, v14);
    return 0;
  }
  if (((v14 >> 41) & 0x7F) != 0x7F)
    goto LABEL_5;
LABEL_7:
  if ((sub_1BA8823B4(*(_QWORD **)(a1 + 48), *(_QWORD **)(a2 + 48)) & 1) != 0)
    return sub_1BA882078(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56));
  return 0;
}

uint64_t sub_1BB3D9B5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(v0 + 76) >> 9 <= 0x7EuLL)
    sub_1BA8EBC78(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int16 *)(v0 + 76) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3D9BB8()
{
  uint64_t v0;

  sub_1BA8D5088(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1BB3D9BE0()
{
  uint64_t v0;

  if (*(unsigned __int16 *)(v0 + 60) >> 9 <= 0x7EuLL)
    sub_1BA8EBC78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3D9C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB3DA660(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1BA8E47E4);
}

uint64_t sub_1BB3D9C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned __int16 v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unsigned int v27;
  unsigned __int16 v28;
  _QWORD *v29;
  uint64_t v30;

  v26 = 0;
  v24 = 0u;
  v25 = 0u;
  v27 = 0;
  v28 = -512;
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BB179CFC((uint64_t)&v24, a3);
  if (v3)
  {
    sub_1BA8EBC64(v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, v27 | ((unint64_t)v28 << 32));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v9 = *(_BYTE *)(a1 + 48);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = v7;
    *(_BYTE *)(v10 + 32) = v9;
    v11 = v10 | 0x6000000000000000;
    v12 = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BB38ED0C(0, v12[2] + 1, 1, v12);
    v14 = v12[2];
    v13 = v12[3];
    if (v14 >= v13 >> 1)
      v12 = sub_1BB38ED0C((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v12[2] = v14 + 1;
    v12[v14 + 4] = v11;
    swift_release();
    v15 = swift_allocObject();
    v16 = v26;
    v17 = v27;
    v18 = v28;
    v19 = v30;
    v20 = v25;
    *(_OWORD *)(v15 + 16) = v24;
    *(_OWORD *)(v15 + 32) = v20;
    *(_QWORD *)(v15 + 48) = v16;
    *(_WORD *)(v15 + 60) = v18;
    *(_DWORD *)(v15 + 56) = v17;
    *(_QWORD *)(v15 + 64) = v12;
    *(_QWORD *)(v15 + 72) = v19;
    v21 = *(_QWORD **)(a2 + 48);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1BB38ED0C(0, v21[2] + 1, 1, v21);
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
      v21 = sub_1BB38ED0C((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
    v21[2] = v23 + 1;
    v21[v23 + 4] = v15;
    result = swift_release();
    *(_QWORD *)(a2 + 48) = v21;
  }
  return result;
}

uint64_t sub_1BB3D9E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB3DA660(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1BB4DCB90);
}

uint64_t sub_1BB3D9EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB3DA660(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1BB63D294);
}

uint64_t sub_1BB3D9ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB3DA660(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1BAFB5334);
}

uint64_t sub_1BB3D9EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned __int16 v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned __int16 v71;
  uint64_t v72;

  v4 = v3;
  sub_1BB3DA5CC(a1, (uint64_t)&v65);
  v7 = v66;
  v8 = v67;
  v9 = v68;
  v10 = v69;
  v48 = v65;
  v56 = v65;
  v57 = v66;
  v58 = v67;
  v59 = v68;
  v60 = v69;
  v51 = v71;
  v62 = v71;
  v63 = MEMORY[0x1E0DEE9D8];
  v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v49 = v70;
  v61 = v70;
  swift_beginAccess();
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v45 = v10;
    v46 = v8;
    v47 = v7;
    swift_bridgeObjectRetain();
    sub_1BB3DA608(a1);
    swift_bridgeObjectRetain();
    v13 = (_OWORD *)(v11 + 56);
    while (1)
    {
      v14 = *((_QWORD *)v13 - 3);
      v15 = *((_QWORD *)v13 - 1);
      if (v15)
      {
        v16 = *((_QWORD *)v13 - 2);
        v54 = *v13;
        v17 = v64;
        swift_retain();
        swift_bridgeObjectRetain_n();
        v55 = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_1BB38ED20(0, v17[2] + 1, 1, v17);
        v19 = v17[2];
        v18 = v17[3];
        if (v19 >= v18 >> 1)
          v17 = sub_1BB38ED20((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
        v17[2] = v19 + 1;
        v20 = &v17[4 * v19];
        v20[4] = v16;
        v20[5] = v15;
        *((_OWORD *)v20 + 3) = v54;
        v64 = v17;
        v4 = v55;
      }
      else
      {
        swift_retain();
      }
      v72 = v14;
      swift_retain();
      sub_1BAC46704(&v56);
      if (v4)
        break;
      v13 = (_OWORD *)((char *)v13 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        v8 = v46;
        v7 = v47;
        v10 = v45;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    v21 = v56;
    v22 = v57;
    v23 = v58;
    v24 = v59;
    v25 = v60;
    v26 = v61 | ((unint64_t)v62 << 32);
    goto LABEL_18;
  }
  sub_1BB3DA608(a1);
LABEL_15:
  v27 = v49 | (v51 << 32);
  if ((v27 >> 45) - 1 < 5 || v27 >> 45 == 6 && v27 == 0xC00000000000 && v48 == 1 && !(v8 | v7 | v9 | v10))
  {
    v28 = swift_bridgeObjectRetain();
    v29 = sub_1BAA72518(v28);
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      v21 = v56;
      v22 = v57;
      v23 = v58;
      v24 = v59;
      v25 = v60;
      v26 = v61 | ((unint64_t)v62 << 32);
LABEL_18:
      sub_1BA8EBC64(v21, v22, v23, v24, v25, v26);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  v31 = swift_allocObject();
  v32 = v56;
  v33 = v57;
  v34 = v58;
  v35 = v59;
  v36 = v60;
  v37 = v62;
  v38 = v61;
  v39 = v61 | ((unint64_t)v62 << 32);
  v40 = v63;
  v41 = v64;
  *(_QWORD *)(v31 + 16) = v56;
  *(_QWORD *)(v31 + 24) = v33;
  *(_QWORD *)(v31 + 32) = v34;
  *(_QWORD *)(v31 + 40) = v35;
  *(_QWORD *)(v31 + 48) = v36;
  *(_WORD *)(v31 + 60) = v37;
  *(_DWORD *)(v31 + 56) = v38;
  *(_QWORD *)(v31 + 64) = v40;
  *(_QWORD *)(v31 + 72) = v41;
  v42 = *(_QWORD **)(a2 + 48);
  v50 = v39;
  v52 = v32;
  sub_1BA8EBBDC(v32, v33, v34, v35, v36, v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v42 = sub_1BB38ED0C(0, v42[2] + 1, 1, v42);
  v44 = v42[2];
  v43 = v42[3];
  if (v44 >= v43 >> 1)
    v42 = sub_1BB38ED0C((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
  v42[2] = v44 + 1;
  v42[v44 + 4] = v31;
  swift_release();
  sub_1BA8EBC64(v52, v33, v34, v35, v36, v50);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 48) = v42;
  return result;
}

uint64_t sub_1BB3DA310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned __int16 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned __int16 v51;
  uint64_t v52;

  sub_1BB3DA5CC(a1, (uint64_t)&v45);
  v5 = v45;
  v6 = v46;
  v8 = v47;
  v7 = v48;
  v9 = v49;
  v10 = v51;
  v11 = v50;
  v36 = v45;
  v37 = v46;
  v38 = v47;
  v39 = v48;
  v40 = v49;
  v42 = v51;
  v41 = v50;
  v43 = MEMORY[0x1E0DEE9D8];
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1BB3DA608(a1);
  v12 = v52;
  sub_1BB7D21B4((uint64_t)&v36, a3);
  if (v12)
  {
    sub_1BA8EBC64(v36, v37, v38, v39, v40, v41 | ((unint64_t)v42 << 32));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v52 = 0;
    v14 = v11 | (v10 << 32);
    v15 = (v14 >> 45) & 7;
    if (((v15 - 1) < 5
       || (_DWORD)v15 == 6 && (v14 & 0xFFFFFFFFFFFFLL) == 0xC00000000000 && v5 == 1 && !(v8 | v6 | v7 | v9))
      && (v16 = swift_bridgeObjectRetain(), v17 = sub_1BAA72518(v16), swift_bridgeObjectRelease(), (v17 & 1) == 0))
    {
      sub_1BA8EBC64(v5, v6, v8, v7, v9, v14);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v18 = swift_allocObject();
      v19 = v36;
      v20 = v37;
      v21 = v38;
      v22 = v39;
      v23 = v40;
      v24 = v42;
      v25 = v41;
      v26 = v41 | ((unint64_t)v42 << 32);
      v27 = v43;
      v28 = v44;
      *(_QWORD *)(v18 + 16) = v36;
      *(_QWORD *)(v18 + 24) = v20;
      *(_QWORD *)(v18 + 32) = v21;
      *(_QWORD *)(v18 + 40) = v22;
      *(_QWORD *)(v18 + 48) = v23;
      *(_WORD *)(v18 + 60) = v24;
      *(_DWORD *)(v18 + 56) = v25;
      *(_QWORD *)(v18 + 64) = v27;
      *(_QWORD *)(v18 + 72) = v28;
      v29 = *(_QWORD **)(a2 + 48);
      v33 = v20;
      v34 = v19;
      v32 = v26;
      sub_1BA8EBBDC(v19, v20, v21, v22, v23, v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_1BB38ED0C(0, v29[2] + 1, 1, v29);
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
        v29 = sub_1BB38ED0C((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
      v29[2] = v31 + 1;
      v29[v31 + 4] = v18;
      swift_release();
      sub_1BA8EBC64(v34, v33, v21, v22, v23, v32);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(a2 + 48) = v29;
    }
  }
  return result;
}

uint64_t sub_1BB3DA5CC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy46_8(a2, a1);
  return a2;
}

uint64_t sub_1BB3DA608(uint64_t a1)
{
  sub_1BA8EBBF0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  return a1;
}

uint64_t sub_1BB3DA644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB3DA660(a1, a2, a3, (void (*)(uint64_t *, uint64_t))sub_1BB770F9C);
}

uint64_t sub_1BB3DA660(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int16 v23;
  unsigned int v24;
  unint64_t v25;
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned __int16 v42;
  void (*v43)(uint64_t *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned __int16 v51;
  void (*v52)(uint64_t *, uint64_t);

  v52 = a4;
  sub_1BB3DA5CC(a1, (uint64_t)&v45);
  v6 = v45;
  v7 = v46;
  v8 = v47;
  v9 = v48;
  v10 = v49;
  v11 = v51;
  v12 = v50;
  v36 = v45;
  v37 = v46;
  v38 = v47;
  v39 = v48;
  v40 = v49;
  v42 = v51;
  v41 = v50;
  v43 = (void (*)(uint64_t *, uint64_t))MEMORY[0x1E0DEE9D8];
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1BB3DA608(a1);
  v52(&v36, a3);
  if (v34
    || ((v14 = v12 | (v11 << 32), (v14 >> 45) - 1 < 5)
     || v14 >> 45 == 6 && v14 == 0xC00000000000 && v6 == 1 && !(v8 | v7 | v9 | v10))
    && (v15 = swift_bridgeObjectRetain(), v16 = sub_1BAA72518(v15), swift_bridgeObjectRelease(), (v16 & 1) == 0))
  {
    sub_1BA8EBC64(v36, v37, v38, v39, v40, v41 | ((unint64_t)v42 << 32));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v17 = swift_allocObject();
    v18 = v36;
    v19 = v37;
    v20 = v38;
    v21 = v39;
    v22 = v40;
    v23 = v42;
    v24 = v41;
    v25 = v41 | ((unint64_t)v42 << 32);
    v26 = v43;
    v27 = v44;
    *(_QWORD *)(v17 + 16) = v36;
    *(_QWORD *)(v17 + 24) = v19;
    *(_QWORD *)(v17 + 32) = v20;
    *(_QWORD *)(v17 + 40) = v21;
    *(_QWORD *)(v17 + 48) = v22;
    *(_WORD *)(v17 + 60) = v23;
    *(_DWORD *)(v17 + 56) = v24;
    *(_QWORD *)(v17 + 64) = v26;
    *(_QWORD *)(v17 + 72) = v27;
    v28 = *(_QWORD **)(a2 + 48);
    v35 = v18;
    v31 = v25;
    v32 = v19;
    sub_1BA8EBBDC(v18, v19, v20, v21, v22, v25);
    v52 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_1BB38ED0C(0, v28[2] + 1, 1, v28);
    v30 = v28[2];
    v29 = v28[3];
    if (v30 >= v29 >> 1)
      v28 = sub_1BB38ED0C((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
    v28[2] = v30 + 1;
    v28[v30 + 4] = v17;
    swift_release();
    sub_1BA8EBC64(v35, v32, v20, v21, v22, v31);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 48) = v28;
  }
  return result;
}

uint64_t sub_1BB3DA8F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for FormatDerivedData(uint64_t a1)
{
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
    sub_1BA8EBC78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(unsigned __int16 *)(a2 + 44) >> 9 <= 0x7EuLL)
  {
    v5 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    sub_1BA8EBBF0(*(_QWORD *)a2, v7, v8, v9, v10, v5);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_WORD *)(a1 + 44) = WORD2(v5);
    *(_DWORD *)(a1 + 40) = v5;
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  }
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedData(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4 = *((unsigned int *)a2 + 10) | ((unint64_t)*((unsigned __int16 *)a2 + 22) << 32);
  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
  {
    if (((v4 >> 41) & 0x7F) == 0x7F)
    {
      sub_1BAA14AE0(a1);
      v7 = *(_OWORD *)((char *)a2 + 30);
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 30) = v7;
    }
    else
    {
      v14 = *a2;
      v15 = a2[1];
      v16 = a2[2];
      v17 = a2[3];
      v18 = a2[4];
      sub_1BA8EBBF0(*a2, v15, v16, v17, v18, v4);
      v19 = *(_QWORD *)a1;
      v20 = *(_QWORD *)(a1 + 8);
      v21 = *(_QWORD *)(a1 + 16);
      v22 = *(_QWORD *)(a1 + 24);
      v23 = *(_QWORD *)(a1 + 32);
      v24 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
      *(_QWORD *)a1 = v14;
      *(_QWORD *)(a1 + 8) = v15;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = v18;
      *(_DWORD *)(a1 + 40) = v4;
      *(_WORD *)(a1 + 44) = WORD2(v4);
      sub_1BA8EBC78(v19, v20, v21, v22, v23, v24);
    }
  }
  else if (((v4 >> 41) & 0x7F) == 0x7F)
  {
    v5 = *(_OWORD *)a2;
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    v9 = *a2;
    v10 = a2[1];
    v11 = a2[2];
    v12 = a2[3];
    v13 = a2[4];
    sub_1BA8EBBF0(*a2, v10, v11, v12, v13, v4);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v11;
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v13;
    *(_WORD *)(a1 + 44) = WORD2(v4);
    *(_DWORD *)(a1 + 40) = v4;
  }
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedData(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  if (*(unsigned __int16 *)(a1 + 44) >> 9 <= 0x7EuLL)
  {
    v4 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
    if (((v4 >> 41) & 0x7F) != 0x7F)
    {
      v6 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
      v7 = *(_QWORD *)(a2 + 32);
      v8 = *(_QWORD *)a1;
      v9 = *(_QWORD *)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 32) = v7;
      *(_DWORD *)(a1 + 40) = v4;
      *(_WORD *)(a1 + 44) = WORD2(v4);
      sub_1BA8EBC78(v8, v9, v10, v11, v12, v6);
      goto LABEL_6;
    }
    sub_1BAA14AE0(a1);
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
LABEL_6:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedData()
{
  return &type metadata for FormatDerivedData;
}

uint64_t sub_1BB3DAC68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned __int16 v37;
  char v38;

  sub_1BB3DB134(0, &qword_1EF2C2F18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3DB068();
  sub_1BB87468C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v38 = 0;
    sub_1BB3DB0AC();
    sub_1BB874068();
    v24 = a2;
    v10 = v33;
    v29 = v32;
    v30 = v31;
    v11 = v34;
    v28 = v35;
    v12 = v36 | ((unint64_t)v37 << 32);
    sub_1BA4AD288(0, &qword_1EF2C2F30, (uint64_t)&type metadata for FormatDerivedDataInstruction, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v38 = 1;
    v26 = v11;
    v27 = v10;
    v25 = v12;
    sub_1BA8EBBDC(v30, v29, v10, v11, v28, v12);
    sub_1BB3DB230(&qword_1EF2C2F38, (uint64_t (*)(void))sub_1BB3DB0F0, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    v13 = v29;
    v14 = v30;
    v15 = v31;
    sub_1BA4AD288(0, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v38 = 2;
    sub_1BB3DB2F0(&qword_1EF2C2F48, (uint64_t (*)(void))sub_1BA6B5EF0, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v23 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = v26;
    v16 = v27;
    v18 = v28;
    v19 = v25;
    sub_1BA8EBBDC(v14, v13, v27, v26, v28, v25);
    sub_1BA8EBC64(v14, v13, v16, v17, v18, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1BA8EBC64(v14, v13, v16, v17, v18, v19);
    v20 = v23;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v22 = v24;
    *v24 = v14;
    v22[1] = v13;
    v22[2] = v16;
    v22[3] = v17;
    v22[4] = v18;
    *((_WORD *)v22 + 22) = WORD2(v19);
    *((_DWORD *)v22 + 10) = v19;
    v22[6] = v15;
    v22[7] = v20;
  }
  return result;
}

unint64_t sub_1BB3DB068()
{
  unint64_t result;

  result = qword_1EF2C2F20;
  if (!qword_1EF2C2F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913150, &type metadata for FormatDerivedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F20);
  }
  return result;
}

unint64_t sub_1BB3DB0AC()
{
  unint64_t result;

  result = qword_1EF2C2F28;
  if (!qword_1EF2C2F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB954788, &type metadata for FormatDerivedDataScope);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F28);
  }
  return result;
}

unint64_t sub_1BB3DB0F0()
{
  unint64_t result;

  result = qword_1EF2C2F40;
  if (!qword_1EF2C2F40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896890, &type metadata for FormatDerivedDataInstruction);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F40);
  }
  return result;
}

void sub_1BB3DB134(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB3DB068();
    v7 = a3(a1, &type metadata for FormatDerivedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB3DB190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1EF2C2F58, (uint64_t)&type metadata for FormatDerivedDataScope, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB3DB1EC()
{
  unint64_t result;

  result = qword_1EF2C2F60;
  if (!qword_1EF2C2F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB954760, &type metadata for FormatDerivedDataScope);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F60);
  }
  return result;
}

uint64_t sub_1BB3DB230(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2C2F30, (uint64_t)&type metadata for FormatDerivedDataInstruction, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB3DB2AC()
{
  unint64_t result;

  result = qword_1EF2C2F70;
  if (!qword_1EF2C2F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896868, &type metadata for FormatDerivedDataInstruction);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F70);
  }
  return result;
}

uint64_t sub_1BB3DB2F0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB3DB36C()
{
  unint64_t result;

  result = qword_1EF2C2F80;
  if (!qword_1EF2C2F80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMap, &type metadata for FormatSourceMap);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3DB3FC + 4 * byte_1BB912FF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3DB430 + 4 * byte_1BB912FF0[v4]))();
}

uint64_t sub_1BB3DB430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3DB438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3DB440);
  return result;
}

uint64_t sub_1BB3DB44C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3DB454);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3DB458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3DB460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedData.CodingKeys()
{
  return &type metadata for FormatDerivedData.CodingKeys;
}

unint64_t sub_1BB3DB480()
{
  unint64_t result;

  result = qword_1EF2C2F88;
  if (!qword_1EF2C2F88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913128, &type metadata for FormatDerivedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F88);
  }
  return result;
}

unint64_t sub_1BB3DB4C8()
{
  unint64_t result;

  result = qword_1EF2C2F90;
  if (!qword_1EF2C2F90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913098, &type metadata for FormatDerivedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F90);
  }
  return result;
}

unint64_t sub_1BB3DB510()
{
  unint64_t result;

  result = qword_1EF2C2F98;
  if (!qword_1EF2C2F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9130C0, &type metadata for FormatDerivedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2F98);
  }
  return result;
}

uint64_t sub_1BB3DB554(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65706F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463757274736E69 && a2 == 0xEC000000736E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D656372756F735FLL && a2 == 0xEB00000000737061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

ValueMetadata *type metadata accessor for FormatDerivedDataResult()
{
  return &type metadata for FormatDerivedDataResult;
}

uint64_t sub_1BB3DB6E0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unsigned __int8 v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    goto LABEL_31;
  v5 = a1 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v40 = v4;
  v41 = v2;
  v39 = v5;
  while (1)
  {
    v7 = *(unsigned __int8 *)(v5 + v6);
    if ((_DWORD)v7 != 10)
    {
      if (*(_QWORD *)(v2[5] + 16))
      {
        swift_bridgeObjectRelease();
        type metadata accessor for FormatDerivedDataError();
        sub_1BA87DD80();
        swift_allocError();
        sub_1BB873CB4();
        swift_bridgeObjectRelease();
        __asm { BR              X9 }
      }
      goto LABEL_4;
    }
    v8 = v2[3];
    v55 = v8;
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
      break;
LABEL_4:
    if (++v6 == v4)
    {
      swift_bridgeObjectRelease();
      v3 = a2;
LABEL_31:
      v34 = *v2;
      v53 = v2[1];
      v54 = v34;
      v35 = v2[2];
      v51 = v2[3];
      v52 = v35;
      v36 = v2[4];
      v49 = v2[5];
      v50 = v36;
      sub_1BA781758((uint64_t)&v54);
      sub_1BA781758((uint64_t)&v53);
      sub_1BA781758((uint64_t)&v52);
      sub_1BA781758((uint64_t)&v51);
      sub_1BA781758((uint64_t)&v50);
      result = sub_1BA781758((uint64_t)&v49);
      v37 = *((_OWORD *)v2 + 1);
      *v3 = *(_OWORD *)v2;
      v3[1] = v37;
      v3[2] = *((_OWORD *)v2 + 2);
      return result;
    }
  }
  v42 = v6;
  v10 = v8 + 32;
  swift_bridgeObjectRetain();
  v11 = 0;
  v43 = v10;
  v44 = v9;
  while (1)
  {
    v12 = (uint64_t *)(v10 + 88 * v11);
    if (*((_BYTE *)v12 + 16) != 1)
      goto LABEL_9;
    v13 = *v12;
    v14 = v12[1];
    v16 = v12[3];
    v15 = v12[4];
    v17 = *((_BYTE *)v12 + 40);
    v18 = v12[10];
    if (!*(_QWORD *)(v18 + 16))
      break;
    v45 = v11;
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    v46 = v16;
    v47 = v17;
    sub_1BA8D4E00(v16, v15, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v19 = sub_1BB874608();
    v20 = -1 << *(_BYTE *)(v18 + 32);
    v21 = v19 & ~v20;
    v22 = v14;
    if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_27;
    v23 = *(_QWORD *)(v18 + 48);
    v24 = (_QWORD *)(v23 + 16 * v21);
    v25 = *v24 == v13 && v24[1] == v14;
    if (!v25 && (sub_1BB874398() & 1) == 0)
    {
      v26 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v26;
        if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v27 = (_QWORD *)(v23 + 16 * v21);
        v28 = *v27 == v13 && v27[1] == v14;
        if (v28 || (sub_1BB874398() & 1) != 0)
          goto LABEL_8;
      }
LABEL_27:
      swift_bridgeObjectRelease();
      v29 = v47;
      v16 = v46;
      goto LABEL_29;
    }
LABEL_8:
    swift_bridgeObjectRelease_n();
    sub_1BA8D5088(v46, v15, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v43;
    v9 = v44;
    v11 = v45;
LABEL_9:
    if (++v11 == v9)
    {
      sub_1BA4F6CCC((uint64_t)&v55);
      v4 = v40;
      v2 = v41;
      v5 = v39;
      v6 = v42;
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  sub_1BA8D4E00(v16, v15, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v17;
  v22 = v14;
LABEL_29:
  sub_1BA4F6CCC((uint64_t)&v55);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  v31 = v30;
  swift_bridgeObjectRetain();
  v32 = swift_bridgeObjectRetain();
  v48 = sub_1BA85C6FC(v32);
  swift_bridgeObjectRelease();
  *v31 = v13;
  v31[1] = v22;
  v31[2] = v48;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1BA8D5088(v16, v15, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB3DBBDC(_QWORD *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  char v22;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  *(_BYTE *)v21 = v22;
  *(_QWORD *)(v21 + 8) = a20;
  *(_QWORD *)(v21 + 16) = a21;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  JUMPOUT(0x1BB3DBB18);
}

uint64_t sub_1BB3DBCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a6;
  v37 = a3;
  v46 = a4;
  v9 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  MEMORY[0x1E0C80A78](v33);
  v36 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v35 = (uint64_t)&v33 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  v19 = *(_QWORD *)(a5 + 8);
  v20 = *(_BYTE *)(a5 + 16);
  v21 = *(_QWORD *)(a5 + 56);
  v40 = *(_QWORD *)a5;
  v18 = v40;
  v41 = v19;
  v42 = v20;
  v43 = *(_OWORD *)(a5 + 24);
  v44 = *(_OWORD *)(a5 + 40);
  v22 = v43;
  v45 = v21;
  swift_bridgeObjectRetain();
  sub_1BA8D4E00(v18, v19, v20);
  v34 = v11;
  v23 = (uint64_t)v11;
  v24 = a1;
  v25 = a1;
  v26 = a2;
  v27 = a2;
  v28 = v37;
  v29 = v39;
  sub_1BB27E330(v25, v27, v37, v38, v23);
  if (v29)
  {
    sub_1BA8D5088(v18, v19, v20);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)v17 = v22;
    *((_QWORD *)v17 + 1) = v24;
    *((_QWORD *)v17 + 2) = v26;
    *((_QWORD *)v17 + 3) = v28;
    *((_QWORD *)v17 + 4) = v46;
    *((_QWORD *)v17 + 5) = v18;
    *((_QWORD *)v17 + 6) = v19;
    v17[56] = v20;
    sub_1BB3DBEEC((uint64_t)v34, (uint64_t)&v17[*(int *)(v33 + 28)]);
    v31 = v36;
    sub_1BB3DBF30((uint64_t)v17, v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v35;
    sub_1BA9D81CC(v35, v31);
    sub_1BB3DC0CC(v32);
    return sub_1BB3DC0CC((uint64_t)v17);
  }
}

uint64_t sub_1BB3DBEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3DBF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3DBF74(_QWORD *a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16[4];

  v6 = a2[3];
  v16[2] = a2[2];
  v16[3] = v6;
  v7 = a2[1];
  v16[0] = *a2;
  v16[1] = v7;
  if (*(_QWORD *)(*a1 + 16))
  {
    v8 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v8);
  }
  if (*(_QWORD *)(a1[1] + 16))
  {
    v9 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v9);
  }
  result = a1[2];
  if (*(_QWORD *)(result + 16))
  {
    v11 = swift_bridgeObjectRetain();
    result = sub_1BB55245C(v11);
  }
  if (*(_QWORD *)(a1[5] + 16))
  {
    sub_1BAF02444((uint64_t)v16);
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1BAF01170(v12, (uint64_t)v16);
    sub_1BAF024B8((uint64_t)v16);
    swift_bridgeObjectRelease();
    result = sub_1BB384928(v13);
  }
  if (*(_QWORD *)(a1[4] + 16))
  {
    sub_1BAF02444((uint64_t)v16);
    swift_retain();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BAF00D70(v14, v16, a3);
    swift_release();
    sub_1BAF024B8((uint64_t)v16);
    result = swift_bridgeObjectRelease();
    if (!v3)
    {
      sub_1BB553198(v15);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BB3DC0CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataResultValidation(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
  {
    v6 = *a1;
    v7 = v6 >= 0xA;
    v8 = v6 - 10;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 10;
    if (a2 + 10 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB3DC158 + 4 * byte_1BB9131AA[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataResultValidation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 10;
  if (a3 + 10 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF6)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB3DC200 + 4 * byte_1BB9131B4[v5]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB3DC234 + 4 * byte_1BB9131AF[v5]))();
}

uint64_t sub_1BB3DC234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3DC23C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3DC244);
  return result;
}

uint64_t sub_1BB3DC250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3DC258);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB3DC25C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3DC264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3DC270(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 0xA)
    return v1 - 9;
  else
    return 0;
}

_BYTE *sub_1BB3DC284(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 9;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultValidation()
{
  return &type metadata for FormatDerivedDataResultValidation;
}

ValueMetadata *type metadata accessor for M18_V1()
{
  return &type metadata for M18_V1;
}

uint64_t sub_1BB3DC2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  int v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  char v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _OWORD *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[2];
  uint64_t v66;

  v57 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v57 - v4;
  v6 = MEMORY[0x1E0DEE9D8];
  v66 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
    v43 = MEMORY[0x1E0DEE9D8];
    v44 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v44)
      goto LABEL_28;
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  v8 = v7 - 1;
  v9 = 32;
  v10 = &selRef_backgroundColor;
  while (1)
  {
    v11 = *(_OWORD *)(a1 + v9 + 112);
    v64 = *(_OWORD *)(a1 + v9 + 96);
    v65[0] = v11;
    *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)(a1 + v9 + 121);
    v12 = *(_OWORD *)(a1 + v9 + 48);
    v60 = *(_OWORD *)(a1 + v9 + 32);
    v61 = v12;
    v13 = *(_OWORD *)(a1 + v9 + 80);
    v62 = *(_OWORD *)(a1 + v9 + 64);
    v63 = v13;
    v14 = *(_OWORD *)(a1 + v9 + 16);
    v58 = *(_OWORD *)(a1 + v9);
    v59 = v14;
    v15 = (void *)v58;
    v16 = v62;
    sub_1BA8D1F08((uint64_t)&v58);
    v17 = objc_msgSend(v15, v10[160]);
    v18 = v17;
    if (v16 != 1)
      break;
    if (!v17)
      goto LABEL_18;
    v19 = v15;
    objc_msgSend(v19, sel_coverImageAspectRatio);
    v20 = v18;
    v21 = objc_msgSend(v19, sel_layeredCoverJSON);
    if (!v21)
    {

      goto LABEL_14;
    }
    v22 = v21;
    sub_1BB8729A0();

    swift_bridgeObjectRetain();
    sub_1BB86BE00();
    v23 = sub_1BB86BE54();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 0, 1, v23);
    v24 = sub_1BB86DFC0();
    swift_bridgeObjectRelease();
    sub_1BA6ED6EC((uint64_t)v5, (uint64_t)&qword_1ED3B0480, (uint64_t)MEMORY[0x1E0CAE4B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    if ((v24 & 1) != 0)
    {

      swift_bridgeObjectRelease();
      v10 = &selRef_backgroundColor;
LABEL_14:

      goto LABEL_18;
    }
    v31 = v19;
    objc_msgSend(v31, sel_layeredCoverAspectRatio);
    swift_bridgeObjectRelease();

    v10 = &selRef_backgroundColor;
LABEL_18:
    sub_1BA8D1FE4((uint64_t)&v58);
    if (!v8)
      goto LABEL_27;
LABEL_26:
    v9 += 144;
    --v8;
  }
  if (v17)
  {
    v25 = v15;
    objc_msgSend(v25, sel_coverImageAspectRatio);
    v26 = v18;
    v27 = objc_msgSend(v25, sel_layeredCoverJSON);
    if (v27)
    {
      v28 = v27;
      sub_1BB8729A0();

      swift_bridgeObjectRetain();
      sub_1BB86BE00();
      v29 = sub_1BB86BE54();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 0, 1, v29);
      v30 = sub_1BB86DFC0();
      swift_bridgeObjectRelease();
      sub_1BA6ED6EC((uint64_t)v5, (uint64_t)&qword_1ED3B0480, (uint64_t)MEMORY[0x1E0CAE4B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      if ((v30 & 1) != 0)
      {

        swift_bridgeObjectRelease();
        v10 = &selRef_backgroundColor;
        goto LABEL_16;
      }
      v32 = v25;
      objc_msgSend(v32, sel_layeredCoverAspectRatio);
      swift_bridgeObjectRelease();

      v10 = &selRef_backgroundColor;
    }
    else
    {

LABEL_16:
    }
  }
  v33 = v66;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1BAC7A3BC(0, *(_QWORD *)(v33 + 16) + 1, 1);
    v33 = v66;
  }
  v35 = *(_QWORD *)(v33 + 16);
  v34 = *(_QWORD *)(v33 + 24);
  if (v35 >= v34 >> 1)
  {
    sub_1BAC7A3BC(v34 > 1, v35 + 1, 1);
    v33 = v66;
  }
  *(_QWORD *)(v33 + 16) = v35 + 1;
  v36 = (_OWORD *)(v33 + 144 * v35);
  v36[2] = v58;
  v37 = v59;
  v38 = v60;
  v39 = v62;
  v36[5] = v61;
  v36[6] = v39;
  v36[3] = v37;
  v36[4] = v38;
  v40 = v63;
  v41 = v64;
  v42 = v65[0];
  *(_OWORD *)((char *)v36 + 153) = *(_OWORD *)((char *)v65 + 9);
  v36[8] = v41;
  v36[9] = v42;
  v36[7] = v40;
  if (v8)
    goto LABEL_26;
LABEL_27:
  swift_bridgeObjectRelease();
  v43 = v66;
  v6 = MEMORY[0x1E0DEE9D8];
  v44 = *(_QWORD *)(v66 + 16);
  if (!v44)
  {
LABEL_34:
    result = swift_release();
    v45 = MEMORY[0x1E0DEE9D8];
    goto LABEL_35;
  }
LABEL_28:
  *(_QWORD *)&v58 = v6;
  sub_1BA7447E8(0, v44, 0);
  v45 = v58;
  v46 = (uint64_t *)(v43 + 48);
  do
  {
    v48 = *(v46 - 1);
    v47 = *v46;
    *(_QWORD *)&v58 = v45;
    v49 = *(_QWORD *)(v45 + 16);
    v50 = *(_QWORD *)(v45 + 24);
    swift_bridgeObjectRetain();
    if (v49 >= v50 >> 1)
    {
      sub_1BA7447E8(v50 > 1, v49 + 1, 1);
      v45 = v58;
    }
    *(_QWORD *)(v45 + 16) = v49 + 1;
    v51 = v45 + 16 * v49;
    *(_QWORD *)(v51 + 32) = v48;
    *(_QWORD *)(v51 + 40) = v47;
    v46 += 18;
    --v44;
  }
  while (v44);
  result = swift_release();
LABEL_35:
  v53 = *(_QWORD *)(v45 + 16);
  if (v53 <= v57)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  else
  {
    if ((v57 & 0x8000000000000000) == 0)
    {
      v54 = sub_1BAC86614(v45 + 32, v57, (2 * v53) | 1);
      swift_bridgeObjectRelease();
      v55 = swift_bridgeObjectRetain();
      v56 = sub_1BB3DF084(v55, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v56;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB3DC854(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v2 = a1;
  v3 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    if (v4)
    {
LABEL_3:
      v5 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1BCCE4630](v5, v2);
          v6 = v5 + 1;
          if (__OFADD__(v5, 1))
            goto LABEL_14;
        }
        else
        {
          if (v5 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_15;
          swift_retain();
          v6 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        swift_release();
        ++v5;
      }
      while (v6 != v4);
      swift_bridgeObjectRelease();
      v7 = v22;
      v3 = MEMORY[0x1E0DEE9D8];
      if ((v22 & 0x8000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_29;
    }
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_29;
LABEL_18:
  if ((v7 & 0x4000000000000000) != 0)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_release();
    if (!v8)
      goto LABEL_30;
    goto LABEL_20;
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
LABEL_30:
    result = swift_release();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_31;
  }
LABEL_20:
  result = sub_1BA7447E8(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v10 = 0;
  v11 = v3;
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](v10, v7);
    else
      swift_retain();
    sub_1BB86F5D4();
    sub_1BA4A2870((unint64_t *)&qword_1ED39EE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], MEMORY[0x1E0DB6AD8]);
    v12 = sub_1BB86DEE8();
    v14 = v13;
    swift_release();
    v16 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    if (v16 >= v15 >> 1)
      sub_1BA7447E8(v15 > 1, v16 + 1, 1);
    ++v10;
    *(_QWORD *)(v11 + 16) = v16 + 1;
    v17 = v11 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v14;
  }
  while (v8 != v10);
  result = swift_release();
LABEL_31:
  v18 = *(_QWORD *)(v11 + 16);
  if (v18 <= a2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    v19 = sub_1BAC86614(v11 + 32, a2, (2 * v18) | 1);
    swift_bridgeObjectRelease();
    v20 = swift_bridgeObjectRetain();
    v2 = sub_1BB3DF32C(v20, v19);
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BB3DCB94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[32];
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[32];
  _BYTE v48[137];
  char v49;
  _BYTE v50[304];

  v3 = a1;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v22 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = v3 + 32;
    do
    {
      sub_1BA982FE4(v6, (uint64_t)v50);
      sub_1BA9831B8((uint64_t)v50);
      v6 += 288;
      --v5;
    }
    while (v5);
    v7 = v22;
  }
  else
  {
    v7 = v4;
  }
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v39 = v4;
    sub_1BA7447E8(0, v8, 0);
    v9 = v7 + 32;
    while (1)
    {
      sub_1BA982FE4(v9, (uint64_t)v50);
      sub_1BA982FE4((uint64_t)v50, (uint64_t)&v40);
      if (v49)
      {
        if (v49 != 1)
        {
          v28 = v46;
          *(_OWORD *)v29 = *(_OWORD *)v47;
          *(_OWORD *)&v29[16] = *(_OWORD *)&v47[16];
          v30 = v48[0];
          v24 = v42;
          v25 = v43;
          v26 = v44;
          v27 = v45;
          v22 = v40;
          v23 = v41;
          v11 = *((_QWORD *)&v40 + 1);
          v10 = v40;
          swift_bridgeObjectRetain();
          sub_1BA6A94C4((uint64_t)&v22);
          goto LABEL_15;
        }
        v37 = v46;
        v38[0] = *(_OWORD *)v47;
        *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)&v47[9];
        v33 = v42;
        v34 = v43;
        v35 = v44;
        v36 = v45;
        v31 = v40;
        v32 = v41;
        sub_1BA8EDBB0((uint64_t)v48, (uint64_t)&v22);
        sub_1BA90EECC((uint64_t)&v22);
        v10 = *((_QWORD *)&v31 + 1);
        v11 = v32;
        swift_bridgeObjectRetain();
        v12 = &v31;
      }
      else
      {
        v22 = v40;
        v23 = v41;
        v28 = v46;
        *(_OWORD *)v29 = *(_OWORD *)v47;
        *(_OWORD *)&v29[9] = *(_OWORD *)&v47[9];
        v24 = v42;
        v25 = v43;
        v26 = v44;
        v27 = v45;
        v10 = *((_QWORD *)&v40 + 1);
        v11 = v41;
        swift_bridgeObjectRetain();
        v12 = &v22;
      }
      sub_1BA8D1FE4((uint64_t)v12);
LABEL_15:
      sub_1BA9831B8((uint64_t)v50);
      v13 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v39;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BA7447E8(v14 > 1, v15 + 1, 1);
        v13 = v39;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      v16 = v13 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v10;
      *(_QWORD *)(v16 + 40) = v11;
      v9 += 288;
      if (!--v8)
      {
        result = swift_release();
        goto LABEL_22;
      }
    }
  }
  result = swift_release();
  v13 = MEMORY[0x1E0DEE9D8];
LABEL_22:
  v18 = *(_QWORD *)(v13 + 16);
  if (v18 <= a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v3;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    v19 = sub_1BAC86614(v13 + 32, a2, (2 * v18) | 1);
    swift_bridgeObjectRelease();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1BB3DF794(v20, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB3DCF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t *v31;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[8];
  void *v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  __int128 v60;
  unsigned __int8 v61;
  ValueMetadata *v62;
  unint64_t v63;

  v36 = a2;
  v37 = a1;
  v48 = a3;
  v39 = sub_1BB86C8E0();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = type metadata accessor for GroupLayoutBindingContext();
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = v7;
  v46 = type metadata accessor for GroupLayoutContext();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = &v34[-v11];
  v42 = &v34[-v11];
  v13 = *v3;
  v35 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v62 = &type metadata for M18_V1;
  v16 = sub_1BA8EDC98();
  v63 = v16;
  LOBYTE(v60) = v13;
  *((_QWORD *)&v60 + 1) = v14;
  v61 = v15;
  v17 = v36;
  sub_1BA4C2DD8(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  v18 = v37;
  v45 = sub_1BB3E12E4(0, 0, 0, 0, 0);
  sub_1BA4C2DD8(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4C2DD8(v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v19 = sub_1BB86C8C8();
  v21 = v20;
  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v5, v39);
  v58 = &type metadata for M18_V1;
  v59 = v16;
  v55[0] = v35;
  v56 = v14;
  v57 = v15;
  type metadata accessor for GroupLayoutKey();
  v22 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v53 = sub_1BB874734();
  v54 = v23;
  v51 = 95;
  v52 = 0xE100000000000000;
  v49 = 45;
  v50 = 0xE100000000000000;
  sub_1BA7114A0();
  v24 = sub_1BB873B04();
  v26 = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 24) = v26;
  v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *v27 = v19;
  v27[1] = v21;
  sub_1BA4C010C((uint64_t)v55, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4((uint64_t)v40, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v28, 0, 1, v47);
  v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v41, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v29, 0, 1, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  sub_1BA7C2538(v14, v15);
  v30 = (int *)type metadata accessor for M18_V1.Bound();
  v31 = v48;
  v48[3] = (uint64_t)v30;
  v31[4] = sub_1BA4A2870(qword_1EF2C2FB0, (uint64_t (*)(uint64_t))type metadata accessor for M18_V1.Bound, (uint64_t)&unk_1BB9132C8);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v31);
  sub_1BA4CECCC(&v60, (uint64_t)boxed_opaque_existential_0);
  result = sub_1BA5193C4((uint64_t)v42, (uint64_t)boxed_opaque_existential_0 + v30[5], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v30[6]) = v45;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v30[7]) = v22;
  return result;
}

double sub_1BB3DD344@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  _QWORD v16[2];
  double v17[3];
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for M18_V1.Bound();
  v5 = *(_QWORD *)(v2 + *(int *)(v4 + 24));
  v20 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA8A3388((void (*)(_OWORD *__return_ptr, uint64_t))sub_1BB3E281C, (uint64_t)v19, v5);
  swift_bridgeObjectRelease();
  v18 = sub_1BB3DD73C(v6, v2 + *(int *)(v4 + 20));
  v7 = sub_1BB86DB40();
  v16[1] = v16;
  *(_OWORD *)v17 = v22;
  v8 = v23;
  v9 = v24;
  v21 = v25;
  *(_QWORD *)&v22 = v6;
  MEMORY[0x1E0C80A78](v7);
  v10 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED39EA10, (uint64_t)&type metadata for CategoryViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED39EA38, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))v10);
  v11 = MEMORY[0x1E0DEAF38];
  sub_1BA5C69E0((unint64_t *)&qword_1ED39EA18, &qword_1ED39EA10, (uint64_t)&type metadata for CategoryViewLayout.Context, MEMORY[0x1E0DEAF38]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED39E220, (unint64_t *)&qword_1ED39EA38, (uint64_t)&type metadata for CategoryViewLayoutAttributes, v11);
  swift_bridgeObjectRetain();
  v12 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v22 = v12;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, v11);
  sub_1BA6B39A0();
  v13 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = v17[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v17;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v15;
  return result;
}

uint64_t sub_1BB3DD5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16[2];
  _BYTE v17[40];
  _QWORD v18[6];
  __int128 v19[2];
  __int128 v20[2];

  v6 = type metadata accessor for M18_V1.Bound();
  v7 = *(_QWORD *)(a2 + *(int *)(v6 + 28));
  sub_1BA982E70(a1, (uint64_t)(a3 + 1));
  v8 = a2 + *(int *)(v6 + 20);
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + *(int *)(v9 + 40)) + 16);
  v11 = *(double *)(v8 + *(int *)(v9 + 32));
  sub_1BA4C010C(v10 + 16, (uint64_t)v20);
  sub_1BA4C010C(v10 + 56, (uint64_t)v19);
  v12 = v11 * *(double *)(v10 + 96);
  sub_1BA4CECCC(v20, (uint64_t)v17);
  sub_1BA4CECCC(v19, (uint64_t)v18);
  *(double *)&v18[5] = v12;
  sub_1BA4C010C((uint64_t)v18, (uint64_t)v16);
  v13 = type metadata accessor for CategoryViewStyler();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0x4030000000000000;
  sub_1BA4CECCC(v16, v14 + 24);
  a3[23] = v13;
  a3[24] = &off_1E7293398;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  a3[20] = v14;
  *a3 = v7;
  return result;
}

uint64_t sub_1BB3DD73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = a1;
  sub_1BA4AD288(0, &qword_1ED39EA10, (uint64_t)&type metadata for CategoryViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3ABC78, &qword_1ED39EA10, (uint64_t)&type metadata for CategoryViewLayout.Context, MEMORY[0x1E0DEAF50]);
  v8 = sub_1BB8730F0();
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = a2 + *(int *)(v9 + 24);
  v11 = *(_BYTE *)(v10 + 20);
  v12 = *(_BYTE *)(v10 + 21);
  v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + *(int *)(v9 + 40)) + 24) + 16);
  v14 = *MEMORY[0x1E0DB5D88];
  v15 = sub_1BB86D678();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v7, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v19 = v8;
  v20 = v13;
  v21 = v11;
  v22 = v12;
  sub_1BB3E2A08(0, (unint64_t *)&unk_1ED39DF80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  swift_retain();
  v16 = sub_1BB86DB34();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB3DD8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  uint64_t v15;
  double v16;
  double v17;
  double MinX;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  CGFloat v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  double rect;
  CGFloat v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v54 = *((_OWORD *)a3 + 2);
  v55 = *((_OWORD *)a3 + 3);
  v56 = *((_OWORD *)a3 + 4);
  v57 = *((_OWORD *)a3 + 5);
  v52 = *(_OWORD *)a3;
  v53 = *((_OWORD *)a3 + 1);
  v10 = a3[12];
  v11 = a3[13];
  v13 = a3[14];
  v12 = a3[15];
  v15 = *((_QWORD *)a3 + 16);
  v14 = a3[17];
  v16 = a3[18];
  v17 = a3[19];
  v51 = v12;
  if (*(_QWORD *)(a4 + 16) - 2 <= a1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    v25 = a3[17];
    v26 = a3[20];
  }
  else
  {
    v49 = *((_QWORD *)a3 + 16);
    rect = a3[20];
    v58.origin.x = a3[17];
    v58.origin.y = a3[18];
    v58.size.width = a3[19];
    v58.size.height = rect;
    MinX = CGRectGetMinX(v58);
    v59.origin.x = v10;
    v59.origin.y = v11;
    v59.size.width = v13;
    v59.size.height = v12;
    v19 = MinX + CGRectGetMinX(v59);
    v47 = v11;
    v48 = v10;
    v46 = v13;
    v20 = v14;
    v21 = v16;
    v22 = v17;
    v23 = rect;
    if ((a1 & 1) != 0)
    {
      CGRectGetMinX(*(CGRect *)&v20);
      v61.origin.x = v14;
      v61.origin.y = v16;
      v61.size.width = v17;
      v61.size.height = rect;
      CGRectGetWidth(v61);
    }
    else
    {
      CGRectGetWidth(*(CGRect *)&v20);
      v60.origin.x = v10;
      v60.origin.y = v11;
      v60.size.width = v13;
      v60.size.height = v12;
      CGRectGetMinX(v60);
    }
    v25 = v14;
    v27 = v14;
    v26 = rect;
    MEMORY[0x1BCCE3EF8](v19, v27, v16, v17, rect);
    v62.origin.x = v25;
    v62.origin.y = v16;
    v62.size.width = v17;
    v62.size.height = rect;
    CGRectGetMaxY(v62);
    sub_1BB8735E8();
    sub_1BB8735F4();
    type metadata accessor for M18_V1.Bound();
    sub_1BB86D774();
    sub_1BB873600();
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;
    sub_1BA4B07F0(0, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8) + 80);
    v37 = (v36 + 32) & ~v36;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
    v38 = (_QWORD *)(v24 + v37);
    *v38 = v29;
    v38[1] = v31;
    v38[2] = v33;
    v38[3] = v35;
    swift_storeEnumTagMultiPayload();
    v10 = v48;
    v15 = v49;
    v13 = v46;
    v11 = v47;
  }
  v39 = swift_allocObject();
  v40 = swift_allocObject();
  sub_1BB3E28DC(a2, v40 + 16);
  *(_OWORD *)(v40 + 248) = v54;
  *(_OWORD *)(v40 + 264) = v55;
  *(_OWORD *)(v40 + 280) = v56;
  *(_OWORD *)(v40 + 296) = v57;
  *(_OWORD *)(v40 + 216) = v52;
  *(_OWORD *)(v40 + 232) = v53;
  *(CGFloat *)(v40 + 312) = v10;
  *(CGFloat *)(v40 + 320) = v11;
  *(CGFloat *)(v40 + 328) = v13;
  *(CGFloat *)(v40 + 336) = v51;
  *(_QWORD *)(v40 + 344) = v15;
  *(CGFloat *)(v40 + 352) = v25;
  *(double *)(v40 + 360) = v16;
  *(double *)(v40 + 368) = v17;
  *(double *)(v40 + 376) = v26;
  v41 = a5 + *(int *)(type metadata accessor for M18_V1.Bound() + 20);
  result = type metadata accessor for GroupLayoutContext();
  v43 = *(_QWORD *)(v41 + *(int *)(result + 28));
  v44 = __OFADD__(v43, a1);
  v45 = v43 + a1;
  if (v44)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v40 + 384) = v45;
    *(_QWORD *)(v39 + 16) = v40 | 0x8000000000000000;
    *(_QWORD *)(v39 + 24) = v24;
    *a6 = v39 | 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1BB3DDC7C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)&v16[-v11];
  v20 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 18;
  *v12 = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63F8], v9);
  v17 = a2;
  v18 = a3;
  v19 = a4 & 0x101;
  v14 = MEMORY[0x1E0DB5DD0];
  sub_1BB3E2A08(0, &qword_1ED39E2D8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB3E29C8((unint64_t *)&qword_1ED39E2D0, &qword_1ED39E2D8, (uint64_t (*)(uint64_t, _QWORD *))v14, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BB3DDDF4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v16)(uint64_t, _QWORD *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(unint64_t, _QWORD, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  void (*v47)(uint64_t *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v42 = a4;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v38 - v10);
  v51 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DB5A38], v12);
  *v11 = v13;
  v15 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104);
  v15(v11, *MEMORY[0x1E0DB6318], v8);
  v16 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v18 = v17;
  v19 = sub_1BB3E29C8((unint64_t *)&qword_1ED39E2B0, &qword_1ED39E2B8, v16, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v20 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  result = v20(v11, v8);
  v50 = a2;
  v22 = *(_QWORD *)(a2 + 16);
  if (v22)
  {
    v45 = *MEMORY[0x1E0DB6410];
    v23 = *MEMORY[0x1E0DB5C80];
    v43 = v42 & 1;
    v44 = v23;
    v42 = (v42 >> 8) & 1;
    swift_bridgeObjectRetain();
    v41 = v18;
    v24 = 0;
    v40 = xmmword_1BB87CE70;
    v39 = v19;
    v48 = a1;
    v49 = v8;
    v46 = v22;
    v47 = (void (*)(uint64_t *, uint64_t))v20;
    do
    {
      v25 = *(_QWORD *)(v50 + 8 * v24++ + 32);
      v51 = a1;
      v15(v11, v45, v8);
      sub_1BB3E2A84();
      sub_1BA4CDF6C(0, &qword_1ED39E2C0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v27 = v26;
      v28 = v15;
      v29 = a3;
      v30 = *(_QWORD *)(v26 - 8);
      v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v40;
      v33 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v30 + 104);
      a3 = v29;
      v15 = v28;
      v34 = v33(v32 + v31, v44, v27);
      MEMORY[0x1E0C80A78](v34);
      *(&v38 - 4) = a3;
      *(&v38 - 3) = v25;
      swift_bridgeObjectRetain();
      v37 = v39;
      sub_1BB86D498();
      v36 = v46;
      v35 = v47;
      swift_bridgeObjectRelease();
      a1 = v48;
      v8 = v49;
      v35(v11, v49);
      swift_bridgeObjectRelease();
    }
    while (v36 != v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB3DE120(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v16)(uint64_t, _QWORD *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t *, uint64_t);
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)v28 - v11);
  v30 = a1;
  v35 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 6;
  *v12 = v13;
  v14 = *MEMORY[0x1E0DB63F8];
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  v31 = a2;
  v32 = a2;
  v33 = a3;
  v28[1] = a4 & 1;
  v34 = a4 & 0x101;
  v28[0] = (a4 >> 8) & 1;
  v16 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v18 = v17;
  v19 = sub_1BB3E29C8((unint64_t *)&qword_1ED39E2B0, &qword_1ED39E2B8, v16, MEMORY[0x1E0DB5A18]);
  v27 = v19;
  v29 = v18;
  sub_1BB86D4BC();
  v20 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  result = v20(v12, v9);
  v22 = *(_QWORD *)(a3 + 16);
  if (v22 >= 2)
  {
    v35 = v30;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 6;
    *v12 = v23;
    v24 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v12, v14, v9);
    MEMORY[0x1E0C80A78](v24);
    *(_QWORD *)&v28[-8] = v31;
    *(_QWORD *)&v28[-6] = a3;
    v27 = v19;
    sub_1BB86D4BC();
    result = v20(v12, v9);
    if (v22 != 2)
    {
      v35 = v30;
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = 6;
      *v12 = v25;
      v26 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v12, v14, v9);
      MEMORY[0x1E0C80A78](v26);
      *(_QWORD *)&v28[-8] = v31;
      *(_QWORD *)&v28[-6] = a3;
      v27 = v19;
      sub_1BB86D4BC();
      return v20(v12, v9);
    }
  }
  return result;
}

uint64_t sub_1BB3DE430(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  _BYTE v28[152];
  uint64_t v29;
  uint64_t v30;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - v16;
  v30 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v25 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v26 = v14;
  result = v19(v17, v18, v14);
  v29 = a2;
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BA982E70(a3 + 40, (uint64_t)v28);
    v27 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v24 = v9;
    sub_1BB3E2924();
    v23 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3E29C8((unint64_t *)&qword_1ED39E2B0, &qword_1ED39E2B8, v21, MEMORY[0x1E0DB5A18]);
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB3DE704(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  _BYTE v28[152];
  uint64_t v29;
  uint64_t v30;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - v16;
  v30 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v25 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v26 = v14;
  result = v19(v17, v18, v14);
  v29 = a2;
  if (*(_QWORD *)(a3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1BA982E70(a3 + 240, (uint64_t)v28);
    v27 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v24 = v9;
    sub_1BB3E2924();
    v23 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3E29C8((unint64_t *)&qword_1ED39E2B0, &qword_1ED39E2B8, v21, MEMORY[0x1E0DB5A18]);
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v26);
  }
  return result;
}

uint64_t sub_1BB3DE9DC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  _BYTE v28[152];
  uint64_t v29;
  uint64_t v30;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - v16;
  v30 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v25 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v26 = v14;
  result = v19(v17, v18, v14);
  v29 = a2;
  if (*(_QWORD *)(a3 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1BA982E70(a3 + 440, (uint64_t)v28);
    v27 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v24 = v9;
    sub_1BB3E2924();
    v23 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3E29C8((unint64_t *)&qword_1ED39E2B0, &qword_1ED39E2B8, v21, MEMORY[0x1E0DB5A18]);
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v26);
  }
  return result;
}

uint64_t sub_1BB3DECB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA975180(*(_QWORD *)(v1 + *(int *)(a1 + 24)));
}

uint64_t sub_1BB3DECC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB3DCF14(a1, a2, a3);
}

uint64_t sub_1BB3DECD8()
{
  return sub_1BB690AA0();
}

unint64_t sub_1BB3DECE8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB3DED14();
  result = sub_1BB3DED58();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB3DED14()
{
  unint64_t result;

  result = qword_1EF2C2FA0;
  if (!qword_1EF2C2FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913210, &type metadata for M18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2FA0);
  }
  return result;
}

unint64_t sub_1BB3DED58()
{
  unint64_t result;

  result = qword_1EF2C2FA8;
  if (!qword_1EF2C2FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913238, &type metadata for M18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2FA8);
  }
  return result;
}

uint64_t sub_1BB3DED9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t i;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - v10);
  result = MEMORY[0x1E0DEE9D8];
  v39 = MEMORY[0x1E0DEE9D8];
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v32 = v2;
    v13 = 0;
    v14 = *(_QWORD *)(v9 + 72);
    v35 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v36 = a1 + v35;
    v38 = a2 + 56;
    v15 = MEMORY[0x1E0DEE9D8];
    v33 = v14;
    v34 = v7;
    while (1)
    {
      sub_1BA4C2DD8(v36 + v14 * v13, (uint64_t)v11, type metadata accessor for FeedHeadline);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_21;
      v17 = *v11;
      v16 = v11[1];
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v18 = sub_1BB874608();
      v19 = a2;
      v20 = -1 << *(_BYTE *)(a2 + 32);
      v21 = v18 & ~v20;
      if (((*(_QWORD *)(v38 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_20;
      v22 = *(_QWORD *)(v19 + 48);
      v23 = (_QWORD *)(v22 + 16 * v21);
      v24 = *v23 == v17 && v23[1] == v16;
      if (!v24 && (sub_1BB874398() & 1) == 0)
        break;
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedHeadline);
      a2 = v19;
      v14 = v33;
      v7 = v34;
LABEL_4:
      if (++v13 == v37)
        return v39;
    }
    v25 = v21 + 1;
    v26 = ~v20;
    for (i = v25 & ~v20; ((*(_QWORD *)(v38 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v26)
    {
      v28 = (_QWORD *)(v22 + 16 * i);
      v29 = *v28 == v17 && v28[1] == v16;
      if (v29 || (sub_1BB874398() & 1) != 0)
        goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    a2 = v19;
    v14 = v33;
    v7 = v34;
LABEL_21:
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v7, type metadata accessor for FeedHeadline);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1BA7C2ABC(0, *(_QWORD *)(v15 + 16) + 1, 1);
    v15 = v39;
    v31 = *(_QWORD *)(v39 + 16);
    v30 = *(_QWORD *)(v39 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_1BA7C2ABC(v30 > 1, v31 + 1, 1);
      v15 = v39;
    }
    *(_QWORD *)(v15 + 16) = v31 + 1;
    sub_1BA5193C4((uint64_t)v7, v15 + v35 + v31 * v14, type metadata accessor for FeedHeadline);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1BB3DF084(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t i;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  uint64_t v44;
  uint64_t v45;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v34 = result + 32;
  v45 = a2 + 56;
  v33 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v5 = v2;
    else
      v5 = v4;
    v35 = v5;
    while (1)
    {
      if (v4 == v35)
      {
        __break(1u);
        return result;
      }
      v6 = (__int128 *)(v34 + 144 * v4);
      v7 = v6[7];
      v42 = v6[6];
      v43[0] = v7;
      *(_OWORD *)((char *)v43 + 9) = *(__int128 *)((char *)v6 + 121);
      v8 = v6[3];
      v38 = v6[2];
      v39 = v8;
      v9 = v6[5];
      v40 = v6[4];
      v41 = v9;
      v10 = v6[1];
      v36 = *v6;
      v37 = v10;
      ++v4;
      if (!*(_QWORD *)(a2 + 16))
        break;
      v12 = *((_QWORD *)&v36 + 1);
      v11 = v37;
      sub_1BB8745CC();
      sub_1BA8D1F08((uint64_t)&v36);
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v13 = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(a2 + 32);
      v15 = v13 & ~v14;
      if (((*(_QWORD *)(v45 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_22;
      v16 = *(_QWORD *)(a2 + 48);
      v17 = (_QWORD *)(v16 + 16 * v15);
      if ((*v17 != v12 || v17[1] != v11) && (sub_1BB874398() & 1) == 0)
      {
        v18 = ~v14;
        for (i = v15 + 1; ; i = v20 + 1)
        {
          v20 = i & v18;
          if (((*(_QWORD *)(v45 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0)
            break;
          v21 = (_QWORD *)(v16 + 16 * v20);
          v22 = *v21 == v12 && v21[1] == v11;
          if (v22 || (sub_1BB874398() & 1) != 0)
            goto LABEL_7;
        }
LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      result = sub_1BA8D1FE4((uint64_t)&v36);
      if (v4 == v2)
        return v33;
    }
    sub_1BA8D1F08((uint64_t)&v36);
LABEL_24:
    result = swift_isUniquelyReferenced_nonNull_native();
    v23 = v33;
    v44 = v33;
    if ((result & 1) == 0)
    {
      result = sub_1BAC7A3BC(0, *(_QWORD *)(v33 + 16) + 1, 1);
      v23 = v44;
    }
    v25 = *(_QWORD *)(v23 + 16);
    v24 = *(_QWORD *)(v23 + 24);
    if (v25 >= v24 >> 1)
    {
      result = sub_1BAC7A3BC(v24 > 1, v25 + 1, 1);
      v23 = v44;
    }
    *(_QWORD *)(v23 + 16) = v25 + 1;
    v33 = v23;
    v26 = (_OWORD *)(v23 + 144 * v25);
    v26[2] = v36;
    v27 = v37;
    v28 = v38;
    v29 = v40;
    v26[5] = v39;
    v26[6] = v29;
    v26[3] = v27;
    v26[4] = v28;
    v30 = v41;
    v31 = v42;
    v32 = v43[0];
    *(_OWORD *)((char *)v26 + 153) = *(_OWORD *)((char *)v43 + 9);
    v26[8] = v31;
    v26[9] = v32;
    v26[7] = v30;
  }
  while (v4 != v2);
  return v33;
}

uint64_t sub_1BB3DF32C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t i;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1BCCE4630](i, a1);
          v5 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_13:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_16;
          }
          swift_retain();
          v5 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_13;
        }
        sub_1BB86F5D4();
        sub_1BA4A2870((unint64_t *)&qword_1ED39EE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], MEMORY[0x1E0DB6AD8]);
        v6 = sub_1BB86DEE8();
        v8 = sub_1BA761FE4(v6, v7, a2);
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
        {
          swift_release();
        }
        else
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        if (v5 == v3)
          return v11;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB3DF4C8(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v2 = a1;
  v23 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_35:
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      v4 = 0;
      v19 = v2 & 0xFFFFFFFFFFFFFF8;
      v20 = v2 & 0xC000000000000001;
      v18 = v2;
      v17 = v3;
      while (1)
      {
        if (v20)
        {
          MEMORY[0x1BCCE4630](v4, v2);
          v5 = __OFADD__(v4, 1);
          v6 = v4 + 1;
          if (v5)
            goto LABEL_34;
        }
        else
        {
          if (v4 >= *(_QWORD *)(v19 + 16))
            goto LABEL_33;
          swift_retain();
          v5 = __OFADD__(v4, 1);
          v6 = v4 + 1;
          if (v5)
          {
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
        }
        v21 = v6;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          v7 = sub_1BB873F30();
          if (v7)
          {
LABEL_11:
            v8 = 4;
            do
            {
              v9 = v8 - 4;
              if ((a2 & 0xC000000000000001) != 0)
              {
                MEMORY[0x1BCCE4630](v8 - 4, a2);
                v2 = v8 - 3;
                if (__OFADD__(v9, 1))
                  goto LABEL_32;
              }
              else
              {
                swift_retain();
                v2 = v8 - 3;
                if (__OFADD__(v9, 1))
                {
LABEL_32:
                  __break(1u);
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
              }
              sub_1BB86F5D4();
              sub_1BA4A2870((unint64_t *)&qword_1ED39EE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], MEMORY[0x1E0DB6AD8]);
              v10 = sub_1BB86DEE8();
              v12 = v11;
              if (v10 == sub_1BB86DEE8() && v12 == v13)
              {
                swift_release();
                swift_bridgeObjectRelease_n();
LABEL_25:
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_5;
              }
              v15 = sub_1BB874398();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v15 & 1) != 0)
                goto LABEL_25;
              ++v8;
            }
            while (v2 != v7);
          }
        }
        else
        {
          v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v7)
            goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
LABEL_5:
        v2 = v18;
        v4 = v21;
        if (v21 == v17)
          return v23;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB3DF794(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t i;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[32];
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];
  char v50[137];
  char v51;
  _BYTE v52[288];
  uint64_t v53;
  uint64_t v54;

  result = MEMORY[0x1E0DEE9D8];
  v53 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v4 = a2;
    v5 = 0;
    v23 = a1 + 32;
    v54 = a2 + 56;
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1BA982FE4(v23 + 288 * v5, (uint64_t)v52);
      sub_1BA982FE4((uint64_t)v52, (uint64_t)&v42);
      if (v51)
      {
        if (v51 != 1)
        {
          v31 = v48;
          *(_OWORD *)v32 = v49[0];
          *(_OWORD *)&v32[16] = v49[1];
          v33 = v50[0];
          v27 = v44;
          v28 = v45;
          v29 = v46;
          v30 = v47;
          v25 = v42;
          v26 = v43;
          v8 = *((_QWORD *)&v42 + 1);
          v7 = v42;
          swift_bridgeObjectRetain();
          sub_1BA6A94C4((uint64_t)&v25);
          goto LABEL_11;
        }
        v40 = v48;
        v41[0] = v49[0];
        *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v49 + 9);
        v36 = v44;
        v37 = v45;
        v38 = v46;
        v39 = v47;
        v34 = v42;
        v35 = v43;
        sub_1BA8EDBB0((uint64_t)v50, (uint64_t)&v25);
        sub_1BA90EECC((uint64_t)&v25);
        v7 = *((_QWORD *)&v34 + 1);
        v8 = v35;
        swift_bridgeObjectRetain();
        v9 = &v34;
      }
      else
      {
        v25 = v42;
        v26 = v43;
        v31 = v48;
        *(_OWORD *)v32 = v49[0];
        *(_OWORD *)&v32[9] = *(_OWORD *)((char *)v49 + 9);
        v27 = v44;
        v28 = v45;
        v29 = v46;
        v30 = v47;
        v7 = *((_QWORD *)&v42 + 1);
        v8 = v43;
        swift_bridgeObjectRetain();
        v9 = &v25;
      }
      sub_1BA8D1FE4((uint64_t)v9);
LABEL_11:
      v10 = v4;
      if (!*(_QWORD *)(v4 + 16))
        goto LABEL_24;
      sub_1BB8745CC();
      sub_1BB872A90();
      v11 = sub_1BB874608();
      v12 = -1 << *(_BYTE *)(v4 + 32);
      v13 = v11 & ~v12;
      if (((*(_QWORD *)(v54 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(v4 + 48);
      v15 = (_QWORD *)(v14 + 16 * v13);
      if ((*v15 != v7 || v15[1] != v8) && (sub_1BB874398() & 1) == 0)
      {
        v16 = ~v12;
        for (i = v13 + 1; ; i = v18 + 1)
        {
          v18 = i & v16;
          if (((*(_QWORD *)(v54 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0)
            break;
          v19 = (_QWORD *)(v14 + 16 * v18);
          v20 = *v19 == v7 && v19[1] == v8;
          if (v20 || (sub_1BB874398() & 1) != 0)
            goto LABEL_3;
        }
LABEL_24:
        swift_bridgeObjectRelease();
        sub_1BACB39A8(v52, &v42);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7ACD4(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v53;
        v22 = *(_QWORD *)(v53 + 16);
        v21 = *(_QWORD *)(v53 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1BAC7ACD4(v21 > 1, v22 + 1, 1);
          v6 = v53;
        }
        *(_QWORD *)(v6 + 16) = v22 + 1;
        sub_1BACB39A8(&v42, (void *)(v6 + 288 * v22 + 32));
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1BA9831B8((uint64_t)v52);
LABEL_4:
      ++v5;
      v4 = v10;
      if (v5 == v24)
        return v53;
    }
  }
  return result;
}

uint64_t sub_1BB3DFAD8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[32];
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];
  char v49;
  char v50;
  _BYTE v51[288];
  uint64_t v52;
  char *v53;

  result = MEMORY[0x1E0DEE9D8];
  v52 = MEMORY[0x1E0DEE9D8];
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v4 = a2;
    v5 = 0;
    v20 = a1 + 32;
    v19 = a2 + 32;
    v53 = &v49;
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v23 = v6;
      sub_1BA982FE4(v20 + 288 * v5, (uint64_t)v51);
      v7 = *(_QWORD *)(v4 + 16);
      if (v7)
        break;
LABEL_25:
      sub_1BACB39A8(v51, &v41);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1BAC7ACD4(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v6 = v52;
      v18 = *(_QWORD *)(v52 + 16);
      v17 = *(_QWORD *)(v52 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BAC7ACD4(v17 > 1, v18 + 1, 1);
        v6 = v52;
      }
      *(_QWORD *)(v6 + 16) = v18 + 1;
      sub_1BACB39A8(&v41, (void *)(v6 + 288 * v18 + 32));
      v4 = a2;
LABEL_5:
      if (++v5 == v21)
        return v52;
    }
    swift_bridgeObjectRetain();
    v8 = v19;
    while (1)
    {
      sub_1BA982FE4(v8, (uint64_t)&v41);
      if (!v50)
        break;
      if (v50 == 1)
      {
        v39 = v47;
        v40[0] = v48[0];
        *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v48 + 9);
        v35 = v43;
        v36 = v44;
        v37 = v45;
        v38 = v46;
        v33 = v41;
        v34 = v42;
        sub_1BA8EDBB0((uint64_t)v53, (uint64_t)&v24);
        sub_1BA90EECC((uint64_t)&v24);
        v10 = *((_QWORD *)&v33 + 1);
        v9 = v34;
        swift_bridgeObjectRetain();
        v11 = &v33;
LABEL_12:
        sub_1BA8D1FE4((uint64_t)v11);
        goto LABEL_14;
      }
      v30 = v47;
      *(_OWORD *)v31 = v48[0];
      *(_OWORD *)&v31[16] = v48[1];
      v32 = v49;
      v26 = v43;
      v27 = v44;
      v28 = v45;
      v29 = v46;
      v24 = v41;
      v25 = v42;
      v9 = *((_QWORD *)&v41 + 1);
      v10 = v41;
      swift_bridgeObjectRetain();
      sub_1BA6A94C4((uint64_t)&v24);
LABEL_14:
      sub_1BA982FE4((uint64_t)v51, (uint64_t)&v41);
      if (!v50)
      {
        v24 = v41;
        v25 = v42;
        v30 = v47;
        *(_OWORD *)v31 = v48[0];
        *(_OWORD *)&v31[9] = *(_OWORD *)((char *)v48 + 9);
        v26 = v43;
        v27 = v44;
        v28 = v45;
        v29 = v46;
        v13 = *((_QWORD *)&v41 + 1);
        v12 = v42;
        swift_bridgeObjectRetain();
        v14 = &v24;
LABEL_18:
        sub_1BA8D1FE4((uint64_t)v14);
        if (v10 != v13)
          goto LABEL_22;
        goto LABEL_21;
      }
      if (v50 == 1)
      {
        v39 = v47;
        v40[0] = v48[0];
        *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v48 + 9);
        v35 = v43;
        v36 = v44;
        v37 = v45;
        v38 = v46;
        v33 = v41;
        v34 = v42;
        sub_1BA8EDBB0((uint64_t)v53, (uint64_t)&v24);
        sub_1BA90EECC((uint64_t)&v24);
        v13 = *((_QWORD *)&v33 + 1);
        v12 = v34;
        swift_bridgeObjectRetain();
        v14 = &v33;
        goto LABEL_18;
      }
      v30 = v47;
      *(_OWORD *)v31 = v48[0];
      *(_OWORD *)&v31[16] = v48[1];
      v32 = v49;
      v26 = v43;
      v27 = v44;
      v28 = v45;
      v29 = v46;
      v24 = v41;
      v25 = v42;
      v12 = *((_QWORD *)&v41 + 1);
      v15 = v41;
      swift_bridgeObjectRetain();
      sub_1BA6A94C4((uint64_t)&v24);
      if (v10 != v15)
        goto LABEL_22;
LABEL_21:
      if (v9 == v12)
      {
        v4 = a2;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_4:
        v6 = v23;
        swift_bridgeObjectRelease();
        sub_1BA9831B8((uint64_t)v51);
        goto LABEL_5;
      }
LABEL_22:
      v16 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        v4 = a2;
        goto LABEL_4;
      }
      v8 += 288;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    v24 = v41;
    v25 = v42;
    v30 = v47;
    *(_OWORD *)v31 = v48[0];
    *(_OWORD *)&v31[9] = *(_OWORD *)((char *)v48 + 9);
    v26 = v43;
    v27 = v44;
    v28 = v45;
    v29 = v46;
    v10 = *((_QWORD *)&v41 + 1);
    v9 = v42;
    swift_bridgeObjectRetain();
    v11 = &v24;
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1BB3DFEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _QWORD *v9;
  BOOL v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _OWORD v26[9];
  uint64_t v27;
  uint64_t v28;

  v2 = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = 0;
    v6 = a1 + 32;
    v15 = (_QWORD *)(a2 + 40);
    do
    {
      sub_1BA982E70(v6 + 152 * v5, (uint64_t)v26);
      v7 = *(_QWORD *)(a2 + 16);
      if (v7)
      {
        v8 = v26[0];
        v9 = v15;
        while (1)
        {
          v10 = *(v9 - 1) == (_QWORD)v8 && *v9 == *((_QWORD *)&v8 + 1);
          if (v10 || (sub_1BB874398() & 1) != 0)
            break;
          v9 += 19;
          if (!--v7)
            goto LABEL_13;
        }
        sub_1BA982F4C(v26);
      }
      else
      {
LABEL_13:
        v22 = v26[6];
        v23 = v26[7];
        v24 = v26[8];
        v25 = v27;
        v18 = v26[2];
        v19 = v26[3];
        v20 = v26[4];
        v21 = v26[5];
        v16 = v26[0];
        v17 = v26[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7ACF0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v28;
        v12 = *(_QWORD *)(v28 + 16);
        v11 = *(_QWORD *)(v28 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1BAC7ACF0(v11 > 1, v12 + 1, 1);
          v2 = v28;
        }
        *(_QWORD *)(v2 + 16) = v12 + 1;
        v13 = v2 + 152 * v12;
        *(_OWORD *)(v13 + 128) = v22;
        *(_OWORD *)(v13 + 144) = v23;
        *(_OWORD *)(v13 + 160) = v24;
        *(_QWORD *)(v13 + 176) = v25;
        *(_OWORD *)(v13 + 64) = v18;
        *(_OWORD *)(v13 + 80) = v19;
        *(_OWORD *)(v13 + 96) = v20;
        *(_OWORD *)(v13 + 112) = v21;
        *(_OWORD *)(v13 + 32) = v16;
        *(_OWORD *)(v13 + 48) = v17;
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return v2;
}

uint64_t sub_1BB3E0058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[4];
  int v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48[5];

  v6 = v5;
  v47 = a4;
  v11 = type metadata accessor for FeedHeadline(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v46 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v38[-v15];
  v17 = type metadata accessor for GroupLayoutBindingContext();
  v18 = *(_QWORD *)&v5[*(int *)(v17 + 56)];
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_24;
  v44 = v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v19 = sub_1BA6A8790(0x6461654864656546, 0xEC000000656E696CLL, a1, a2);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E0DEE9D8];
  }
  v43 = a3;
  v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = sub_1BA7C2A30(v21);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v42 = a1;
  v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v48[0] = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(v22 + 16);
  result = swift_bridgeObjectRetain();
  v45 = v24;
  if (v24)
  {
    v39 = a5;
    v40 = v6;
    v41 = a2;
    v26 = 0;
    v27 = MEMORY[0x1E0DEE9D8];
    while (v26 < *(_QWORD *)(v22 + 16))
    {
      v28 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v29 = *(_QWORD *)(v12 + 72);
      sub_1BA4C2DD8(v22 + v28 + v29 * v26, (uint64_t)v16, type metadata accessor for FeedHeadline);
      if ((v47 & ~*((_QWORD *)v16 + 4)) != 0)
      {
        result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FeedHeadline);
      }
      else
      {
        sub_1BA5193C4((uint64_t)v16, (uint64_t)v46, type metadata accessor for FeedHeadline);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA7C2ABC(0, *(_QWORD *)(v27 + 16) + 1, 1);
        v27 = v48[0];
        v31 = *(_QWORD *)(v48[0] + 16);
        v30 = *(_QWORD *)(v48[0] + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1BA7C2ABC(v30 > 1, v31 + 1, 1);
          v27 = v48[0];
        }
        *(_QWORD *)(v27 + 16) = v31 + 1;
        result = sub_1BA5193C4((uint64_t)v46, v27 + v28 + v31 * v29, type metadata accessor for FeedHeadline);
      }
      if (v45 == ++v26)
      {
        v23 = (_QWORD *)v48[0];
        v6 = v40;
        a2 = v41;
        LOBYTE(a5) = v39;
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
LABEL_17:
  result = swift_bridgeObjectRelease();
  if (v43 && (*v6 & 1) == 0)
  {
    swift_retain();
    v32 = sub_1BA7EF24C(v23);
    swift_release();
    result = swift_release();
    v23 = (_QWORD *)v32;
  }
  v33 = *(_QWORD *)&v6[*(int *)(v44 + 72)];
  v34 = *(_QWORD *)&v6[*(int *)(v44 + 76)];
  if (!__OFSUB__(v33, v34))
  {
    v35 = sub_1BA7E2C4C((uint64_t)v23, v33 - v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = sub_1BA7E3164(v22, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    strcpy((char *)v48, "FeedHeadline");
    BYTE5(v48[1]) = 0;
    HIWORD(v48[1]) = -5120;
    v48[2] = v42;
    v48[3] = a2;
    swift_bridgeObjectRelease();
    if ((a5 & 1) != 0)
      v36 = v22;
    v37 = sub_1BA618F20(v36);
    swift_bridgeObjectRelease();
    sub_1BA6AB5A4(v48, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v35;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB3E0464(unint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5)
{
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  _BYTE *v32;
  unint64_t v33;
  uint64_t v34[5];

  v6 = v5;
  LOBYTE(v7) = a5;
  v12 = type metadata accessor for GroupLayoutBindingContext();
  v13 = *(_QWORD *)&v5[*(int *)(v12 + 56)];
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_21;
  v14 = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = sub_1BA6A8790(0x6F4D6E6967756C50, 0xEB000000006C6564, a1, (uint64_t)a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = sub_1BB784F20(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v32 = v6;
  v34[0] = MEMORY[0x1E0DEE9D8];
  v19 = v18 & 0xFFFFFFFFFFFFFF8;
  if (v18 >> 62)
    goto LABEL_34;
  v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_6:
  v30 = a1;
  v31 = v7;
  if (v20)
  {
    v33 = v19;
    v29 = a2;
    a1 = 0;
    v19 = v18 & 0xC000000000000001;
    a2 = &qword_1E724E158;
    while (1)
    {
      if (v19)
      {
        MEMORY[0x1BCCE4630](a1, v18);
        v7 = a1 + 1;
        if (__OFADD__(a1, 1))
          goto LABEL_32;
      }
      else
      {
        if (a1 >= *(_QWORD *)(v33 + 16))
          goto LABEL_33;
        swift_retain();
        v7 = a1 + 1;
        if (__OFADD__(a1, 1))
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          swift_bridgeObjectRetain();
          v20 = sub_1BB873F30();
          goto LABEL_6;
        }
      }
      if ((a4 & 0xFFFFFFFFFFEFFFFELL) != 0)
      {
        swift_release();
      }
      else
      {
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
      }
      ++a1;
      if (v7 == v20)
      {
        result = swift_bridgeObjectRelease();
        v22 = v34[0];
        a2 = v29;
        goto LABEL_25;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  v22 = MEMORY[0x1E0DEE9D8];
LABEL_25:
  if (a3 && (*v32 & 1) == 0)
  {
    swift_retain();
    v24 = sub_1BACA0014(v22);
    swift_release();
    result = swift_release();
    v22 = v24;
  }
  v25 = *(_QWORD *)&v32[*(int *)(v14 + 72)];
  v26 = *(_QWORD *)&v32[*(int *)(v14 + 76)];
  if (!__OFSUB__(v25, v26))
  {
    v23 = sub_1BB3DC854(v22, v25 - v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_1BB3DF4C8(v18, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34[0] = 0x6F4D6E6967756C50;
    v34[1] = 0xEB000000006C6564;
    v34[2] = v30;
    v34[3] = (uint64_t)a2;
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
      v27 = v18;
    v28 = sub_1BA974E4C(v27);
    swift_bridgeObjectRelease();
    sub_1BA6AB5A4(v34, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB3E0828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  int v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[2];
  uint64_t v82;

  v6 = v5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v67 - v13;
  v15 = type metadata accessor for GroupLayoutBindingContext();
  v16 = *(_QWORD *)&v5[*(int *)(v15 + 56)];
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_43;
  v17 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v18 = sub_1BA6A8790(0x7573734964656546, 0xE900000000000065, a1, a2);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E0DEE9D8];
  }
  v71 = v17;
  v72 = a3;
  v70 = a1;
  v20 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = sub_1BB7845E0(v20);
  result = swift_bridgeObjectRelease();
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v69 = a5;
  v23 = MEMORY[0x1E0DEE9D8];
  v82 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(v21 + 16);
  if (v24)
  {
    v67 = v6;
    v68 = a2;
    swift_bridgeObjectRetain();
    v25 = 0;
    v73 = v24 - 1;
    v26 = 32;
    while (1)
    {
      v74 = *(_OWORD *)(v21 + v26);
      v27 = *(_OWORD *)(v21 + v26 + 16);
      v28 = *(_OWORD *)(v21 + v26 + 32);
      v29 = *(_OWORD *)(v21 + v26 + 64);
      v77 = *(_OWORD *)(v21 + v26 + 48);
      v78 = v29;
      v75 = v27;
      v76 = v28;
      v30 = *(_OWORD *)(v21 + v26 + 80);
      v31 = *(_OWORD *)(v21 + v26 + 96);
      v32 = *(_OWORD *)(v21 + v26 + 112);
      *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)(v21 + v26 + 121);
      v80 = v31;
      v81[0] = v32;
      v79 = v30;
      v33 = (void *)v74;
      v34 = v29;
      sub_1BA8D1F08((uint64_t)&v74);
      v35 = objc_msgSend(v33, sel_coverImageAssetHandle);
      v36 = v35;
      if (v34 != 1)
        break;
      if (!v35)
      {
        if (a4)
          goto LABEL_19;
        goto LABEL_26;
      }
      v37 = v33;
      objc_msgSend(v37, sel_coverImageAspectRatio);
      v38 = v36;
      v39 = objc_msgSend(v37, sel_layeredCoverJSON);
      if (!v39)
      {

        goto LABEL_17;
      }
      v40 = v39;
      sub_1BB8729A0();

      swift_bridgeObjectRetain();
      sub_1BB86BE00();
      v41 = sub_1BB86BE54();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v14, 0, 1, v41);
      LOBYTE(v40) = sub_1BB86DFC0();
      swift_bridgeObjectRelease();
      sub_1BA6ED6EC((uint64_t)v14, (uint64_t)&qword_1ED3B0480, (uint64_t)MEMORY[0x1E0CAE4B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      if ((v40 & 1) != 0)
      {

        swift_bridgeObjectRelease();
LABEL_17:

        v48 = 64;
        goto LABEL_25;
      }
      v49 = v37;
      objc_msgSend(v49, sel_layeredCoverAspectRatio);
      swift_bridgeObjectRelease();

      v48 = 16448;
LABEL_25:
      if ((a4 & ~v48) != 0)
      {
LABEL_19:
        result = sub_1BA8D1FE4((uint64_t)&v74);
        goto LABEL_31;
      }
LABEL_26:
      v51 = v82;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1BAC7A3BC(0, *(_QWORD *)(v51 + 16) + 1, 1);
        v51 = v82;
      }
      v53 = *(_QWORD *)(v51 + 16);
      v52 = *(_QWORD *)(v51 + 24);
      if (v53 >= v52 >> 1)
      {
        result = sub_1BAC7A3BC(v52 > 1, v53 + 1, 1);
        v51 = v82;
      }
      *(_QWORD *)(v51 + 16) = v53 + 1;
      v54 = (_OWORD *)(v51 + 144 * v53);
      v54[2] = v74;
      v55 = v75;
      v56 = v76;
      v57 = v78;
      v54[5] = v77;
      v54[6] = v57;
      v54[3] = v55;
      v54[4] = v56;
      v58 = v79;
      v59 = v80;
      v60 = v81[0];
      *(_OWORD *)((char *)v54 + 153) = *(_OWORD *)((char *)v81 + 9);
      v54[8] = v59;
      v54[9] = v60;
      v54[7] = v58;
LABEL_31:
      if (v73 == v25)
      {
        result = swift_bridgeObjectRelease();
        v23 = v82;
        a2 = v68;
        v6 = v67;
        goto LABEL_36;
      }
      ++v25;
      v26 += 144;
      if (v25 >= *(_QWORD *)(v21 + 16))
      {
        __break(1u);
        goto LABEL_48;
      }
    }
    if (v35)
    {
      v42 = v33;
      objc_msgSend(v42, sel_coverImageAspectRatio);
      v43 = v36;
      v44 = objc_msgSend(v42, sel_layeredCoverJSON);
      if (v44)
      {
        v45 = v44;
        sub_1BB8729A0();

        swift_bridgeObjectRetain();
        sub_1BB86BE00();
        v46 = sub_1BB86BE54();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v14, 0, 1, v46);
        LOBYTE(v45) = sub_1BB86DFC0();
        swift_bridgeObjectRelease();
        sub_1BA6ED6EC((uint64_t)v14, (uint64_t)&qword_1ED3B0480, (uint64_t)MEMORY[0x1E0CAE4B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        if ((v45 & 1) == 0)
        {
          v50 = v42;
          objc_msgSend(v50, sel_layeredCoverAspectRatio);
          swift_bridgeObjectRelease();

          v47 = 16448;
          goto LABEL_24;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      v47 = 64;
    }
    else
    {
      v47 = 0;
    }
LABEL_24:
    v48 = v47 | 0x1000;
    goto LABEL_25;
  }
LABEL_36:
  if (v72 && (*v6 & 1) == 0)
  {
    swift_retain();
    v61 = sub_1BAC9E1E4(v23);
    swift_release();
    result = swift_release();
    v23 = v61;
  }
  v62 = *(_QWORD *)&v6[*(int *)(v71 + 72)];
  v63 = *(_QWORD *)&v6[*(int *)(v71 + 76)];
  if (!__OFSUB__(v62, v63))
  {
    v64 = sub_1BB3DC2B4(v23, v62 - v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65 = sub_1BB32F958(v21, v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v74 = 0x7573734964656546;
    *((_QWORD *)&v74 + 1) = 0xE900000000000065;
    *(_QWORD *)&v75 = v70;
    *((_QWORD *)&v75 + 1) = a2;
    if ((v69 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v65 = v21;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v66 = sub_1BA974CEC(v65);
    swift_bridgeObjectRelease();
    sub_1BA6AB5A4((uint64_t *)&v74, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v64;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BB3E0F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[288];
  uint64_t v37[36];
  uint64_t v38;

  v6 = v5;
  v12 = type metadata accessor for GroupLayoutBindingContext();
  v13 = *(_QWORD *)&v5[*(int *)(v12 + 56)];
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_24;
  v14 = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = sub_1BA6A8790(0x6174614364656546, 0xEF6D657449676F6CLL, a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = sub_1BB785018(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v34 = a3;
  v35 = v14;
  v19 = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v20 = *(_QWORD *)(v18 + 16);
  result = swift_bridgeObjectRetain();
  if (v20)
  {
    v33 = a1;
    v22 = 0;
    v23 = v18 + 32;
    v24 = MEMORY[0x1E0DEE9D8];
    while (v22 < *(_QWORD *)(v18 + 16))
    {
      sub_1BA982FE4(v23, (uint64_t)v37);
      if ((a4 & 0xFFFFFFFFFFFFFFBFLL) != 0)
      {
        result = sub_1BA9831B8((uint64_t)v37);
      }
      else
      {
        sub_1BACB39A8(v37, v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7ACD4(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v38;
        v26 = *(_QWORD *)(v38 + 16);
        v25 = *(_QWORD *)(v38 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1BAC7ACD4(v25 > 1, v26 + 1, 1);
          v24 = v38;
        }
        *(_QWORD *)(v24 + 16) = v26 + 1;
        result = (uint64_t)sub_1BACB39A8(v36, (void *)(v24 + 288 * v26 + 32));
      }
      ++v22;
      v23 += 288;
      if (v20 == v22)
      {
        v19 = v38;
        a1 = v33;
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
LABEL_17:
  result = swift_bridgeObjectRelease();
  if (v34 && (*v6 & 1) == 0)
  {
    swift_retain();
    v27 = sub_1BACA0210(v19);
    swift_release();
    result = swift_release();
    v19 = v27;
  }
  v28 = *(_QWORD *)&v6[*(int *)(v35 + 72)];
  v29 = *(_QWORD *)&v6[*(int *)(v35 + 76)];
  if (!__OFSUB__(v28, v29))
  {
    v30 = sub_1BB3DCB94(v19, v28 - v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31 = sub_1BB3DFAD8(v18, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37[0] = 0x6174614364656546;
    v37[1] = 0xEF6D657449676F6CLL;
    v37[2] = a1;
    v37[3] = a2;
    swift_bridgeObjectRelease();
    if ((a5 & 1) != 0)
      v31 = v18;
    v32 = sub_1BA97505C(v31);
    swift_bridgeObjectRelease();
    sub_1BA6AB5A4(v37, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v30;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB3E12E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;

  v6 = v5;
  v12 = type metadata accessor for GroupLayoutBindingContext();
  v13 = *(_QWORD *)&v5[*(int *)(v12 + 56)];
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_20;
  v14 = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = sub_1BA6A8790(0x6574614364656546, 0xEC00000079726F67, a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = sub_1BB7851B8(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v40 = v6;
  v41 = a3;
  v38 = a2;
  v39 = v14;
  v37 = a5;
  v19 = MEMORY[0x1E0DEE9D8];
  v62 = MEMORY[0x1E0DEE9D8];
  v20 = *(_QWORD *)(v18 + 16);
  result = swift_bridgeObjectRetain();
  if (v20)
  {
    v22 = 0;
    v23 = v18 + 32;
    while (v22 < *(_QWORD *)(v18 + 16))
    {
      sub_1BA982E70(v23, (uint64_t)&v52);
      if ((a4 & 0xFFFFFFFFFFFBFFFFLL) != 0)
      {
        result = (uint64_t)sub_1BA982F4C(&v52);
      }
      else
      {
        v48 = v58;
        v49 = v59;
        v50 = v60;
        v51 = v61;
        v44 = v54;
        v45 = v55;
        v46 = v56;
        v47 = v57;
        v42 = v52;
        v43 = v53;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
          result = sub_1BAC7ACF0(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v62;
        v25 = *(_QWORD *)(v62 + 16);
        v24 = *(_QWORD *)(v62 + 24);
        if (v25 >= v24 >> 1)
        {
          result = sub_1BAC7ACF0(v24 > 1, v25 + 1, 1);
          v19 = v62;
        }
        *(_QWORD *)(v19 + 16) = v25 + 1;
        v26 = v19 + 152 * v25;
        *(_OWORD *)(v26 + 128) = v48;
        *(_OWORD *)(v26 + 144) = v49;
        *(_OWORD *)(v26 + 160) = v50;
        *(_QWORD *)(v26 + 176) = v51;
        *(_OWORD *)(v26 + 64) = v44;
        *(_OWORD *)(v26 + 80) = v45;
        *(_OWORD *)(v26 + 96) = v46;
        *(_OWORD *)(v26 + 112) = v47;
        *(_OWORD *)(v26 + 32) = v42;
        *(_OWORD *)(v26 + 48) = v43;
      }
      ++v22;
      v23 += 152;
      if (v20 == v22)
        goto LABEL_16;
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_16:
  result = swift_bridgeObjectRelease();
  if (v41)
  {
    v27 = v39;
    v28 = v40;
    if ((*v40 & 1) == 0)
    {
      swift_retain();
      v29 = sub_1BACA04CC(v19);
      swift_release();
      result = swift_release();
      v19 = v29;
    }
  }
  else
  {
    v27 = v39;
    v28 = v40;
  }
  v30 = *(_QWORD *)&v28[*(int *)(v27 + 72)];
  v31 = *(_QWORD *)&v28[*(int *)(v27 + 76)];
  v32 = v30 - v31;
  if (!__OFSUB__(v30, v31))
  {
    v33 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRetain();
    if (v33)
    {
      v34 = v19 + 32;
      do
      {
        sub_1BA982E70(v34, (uint64_t)&v52);
        sub_1BA6ED6EC((uint64_t)&v52, (uint64_t)&qword_1ED3A2950, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
        v34 += 152;
        --v33;
      }
      while (v33);
    }
    v61 = 0;
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    v55 = 0u;
    v56 = 0u;
    v53 = 0u;
    v54 = 0u;
    v52 = 0u;
    swift_bridgeObjectRelease();
    result = sub_1BA6ED6EC((uint64_t)&v52, (uint64_t)&qword_1ED3A2950, (uint64_t)&type metadata for FeedCategory, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    if (v32 < 0)
      goto LABEL_34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = sub_1BB3DFEB4(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    strcpy((char *)&v52, "FeedCategory");
    BYTE13(v52) = 0;
    HIWORD(v52) = -5120;
    *(_QWORD *)&v53 = a1;
    *((_QWORD *)&v53 + 1) = v38;
    swift_bridgeObjectRelease();
    if ((v37 & 1) != 0)
      v35 = v18;
    v36 = sub_1BA975180(v35);
    swift_bridgeObjectRelease();
    sub_1BA6AB5A4((uint64_t *)&v52, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for M18_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2C3010;
  if (!qword_1EF2C3010)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB3E1784(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v26 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v31 = a3;
    v8 = *(int *)(a3 + 20);
    v9 = v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB86D7A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v13 = v12[5];
    v14 = v9 + v13;
    v15 = v10 + v13;
    v16 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[6];
    v18 = v9 + v17;
    v19 = v10 + v17;
    *(_OWORD *)v18 = *(_OWORD *)(v10 + v17);
    *(_BYTE *)(v18 + 16) = *(_BYTE *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    *(_BYTE *)(v18 + 19) = *(_BYTE *)(v10 + v17 + 19);
    *(_DWORD *)(v18 + 20) = *(_DWORD *)(v10 + v17 + 20);
    v20 = *(_QWORD *)(v10 + v17 + 24);
    if (v20 >= 2)
      v20 = swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 24) = v20;
    v30 = type metadata accessor for FeedLayoutSolverOptions(0);
    v21 = *(int *)(v30 + 36);
    __dst = (void *)(v18 + v21);
    v22 = (const void *)(v19 + v21);
    v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v27 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(__dst, v22, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(_QWORD *)(v18 + *(int *)(v30 + 40)) = *(_QWORD *)(v19 + *(int *)(v30 + 40));
    *(_QWORD *)(v9 + v12[7]) = *(_QWORD *)(v10 + v12[7]);
    *(_QWORD *)(v9 + v12[8]) = *(_QWORD *)(v10 + v12[8]);
    *(_BYTE *)(v9 + v12[9]) = *(_BYTE *)(v10 + v12[9]);
    *(_QWORD *)(v9 + v12[10]) = *(_QWORD *)(v10 + v12[10]);
    *(_BYTE *)(v9 + v12[11]) = *(_BYTE *)(v10 + v12[11]);
    *(_QWORD *)(v9 + v12[12]) = *(_QWORD *)(v10 + v12[12]);
    v28 = *(int *)(v31 + 28);
    *(_QWORD *)(v4 + *(int *)(v31 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v31 + 24));
    *(_QWORD *)(v4 + v28) = *(uint64_t *)((char *)a2 + v28);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BB3E1A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for GroupLayoutContext();
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v9 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BB3E1B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *__dst;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v30 = a3;
  v31 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  v19 = *(_QWORD *)(v9 + v16 + 24);
  if (v19 >= 2)
    v19 = swift_bridgeObjectRetain();
  *(_QWORD *)(v17 + 24) = v19;
  v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v20 + 36);
  __dst = (void *)(v17 + v21);
  v22 = (const void *)(v18 + v21);
  v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(__dst, v22, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(_QWORD *)(v17 + *(int *)(v20 + 40)) = *(_QWORD *)(v18 + *(int *)(v20 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  v27 = *(int *)(v30 + 28);
  *(_QWORD *)(a1 + *(int *)(v30 + 24)) = *(_QWORD *)(v31 + *(int *)(v30 + 24));
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(v31 + v27);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *sub_1BB3E1D88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v37 = a3;
  v38 = a2;
  v6 = *(int *)(a3 + 20);
  v39 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  v19 = (unint64_t *)&v7[v15 + 24];
  v20 = *(_QWORD *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v19 = *((_QWORD *)v17 + 3);
    }
  }
  else
  {
    *v19 = v20;
    if (v20 >= 2)
      swift_bridgeObjectRetain();
  }
  v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v36 + 36);
  v22 = (uint64_t)&v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v35 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (!v27)
    {
      v32 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v35, v23, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
      goto LABEL_16;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
    v30 = (void *)v35;
  }
  else
  {
    if (!v27)
    {
      v33 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v35, v23, v33);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
    v30 = (void *)v35;
  }
  memcpy(v30, v23, v29);
LABEL_16:
  *(_QWORD *)&v16[*(int *)(v36 + 40)] = *(_QWORD *)&v17[*(int *)(v36 + 40)];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  swift_retain();
  swift_release();
  v7[v10[11]] = v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  swift_retain();
  swift_release();
  *(uint64_t *)((char *)v39 + *(int *)(v37 + 24)) = *(uint64_t *)((char *)v38 + *(int *)(v37 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v39 + *(int *)(v37 + 28)) = *(uint64_t *)((char *)v38 + *(int *)(v37 + 28));
  swift_retain();
  swift_release();
  return v39;
}

uint64_t sub_1BB3E20F0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *__dst;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v8 + v15 + 24);
  v26 = type metadata accessor for FeedLayoutSolverOptions(0);
  v18 = *(int *)(v26 + 36);
  __dst = (void *)(v16 + v18);
  v19 = (const void *)(v17 + v18);
  v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(_QWORD *)(v16 + *(int *)(v26 + 40)) = *(_QWORD *)(v17 + *(int *)(v26 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  v24 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  return a1;
}

uint64_t sub_1BB3E2314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v37 = a3;
  v38 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 18) = *(_BYTE *)(v9 + v16 + 18);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_BYTE *)(v17 + 20) = *(_BYTE *)(v9 + v16 + 20);
  *(_BYTE *)(v17 + 21) = *(_BYTE *)(v9 + v16 + 21);
  *(_BYTE *)(v17 + 22) = *(_BYTE *)(v9 + v16 + 22);
  *(_BYTE *)(v17 + 23) = *(_BYTE *)(v9 + v16 + 23);
  v19 = (unint64_t *)(v8 + v16 + 24);
  v20 = *(_QWORD *)(v9 + v16 + 24);
  if (*v19 < 2)
    goto LABEL_4;
  if (v20 < 2)
  {
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v20 = *(_QWORD *)(v18 + 24);
LABEL_4:
    *v19 = v20;
    goto LABEL_6;
  }
  *v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v36 + 36);
  v22 = v17 + v21;
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v34 = *(_QWORD *)(v24 - 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v35 = v22;
  LODWORD(v22) = v25(v22, 1, v24);
  v26 = v25((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (!v26)
    {
      v31 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v35, v23, v31);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v24);
      goto LABEL_14;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v28 = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64);
    v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      v32 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v35, v23, v32);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v28 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
    v29 = (void *)v35;
  }
  memcpy(v29, v23, v28);
LABEL_14:
  *(_QWORD *)(v17 + *(int *)(v36 + 40)) = *(_QWORD *)(v18 + *(int *)(v36 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  swift_release();
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  swift_release();
  *(_QWORD *)(a1 + *(int *)(v37 + 24)) = *(_QWORD *)(v38 + *(int *)(v37 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v37 + 28)) = *(_QWORD *)(v38 + *(int *)(v37 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1BB3E2648()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3E2654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB3E26D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3E26DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB3E2750()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB3E27E0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C3050, (uint64_t (*)(uint64_t))type metadata accessor for M18_V1.Bound, (uint64_t)&unk_1BB9132A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3E281C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3DD5F4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB3E2838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB3DD8F8(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BB3E2840()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3E2870()
{
  _QWORD *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  if (v0[15])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  if (v0[20])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 22));
  return swift_deallocObject();
}

uint64_t sub_1BB3E28DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CategoryViewLayout.Context(a2, a1);
  return a2;
}

uint64_t sub_1BB3E2918(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3DDC7C);
}

unint64_t sub_1BB3E2924()
{
  unint64_t result;

  result = qword_1ED39E0D0;
  if (!qword_1ED39E0D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CategoryViewLayout, &type metadata for CategoryViewLayout);
    atomic_store(result, (unint64_t *)&qword_1ED39E0D0);
  }
  return result;
}

unint64_t sub_1BB3E2968()
{
  unint64_t result;

  result = qword_1ED39E5F0;
  if (!qword_1ED39E5F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CategoryViewLayout.Attributes, &type metadata for CategoryViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED39E5F0);
  }
  return result;
}

uint64_t sub_1BB3E29AC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB3E29BC(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3DDDF4);
}

uint64_t sub_1BB3E29C8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB3E2A08(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB3E2A08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for CategoryViewLayout;
    v8[1] = &type metadata for CategoryViewLayout.Attributes;
    v8[2] = sub_1BB3E2924();
    v8[3] = sub_1BB3E2968();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB3E2A84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EAC8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39E2C0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EAC8);
  }
}

uint64_t sub_1BB3E2AF8(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3DE120);
}

uint64_t sub_1BB3E2B04(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3DE430);
}

uint64_t sub_1BB3E2B10(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3DE9DC);
}

uint64_t sub_1BB3E2B1C(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3DE704);
}

uint64_t sub_1BB3E2B28(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 33))
    v3 = 256;
  else
    v3 = 0;
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v3 | *(unsigned __int8 *)(v2 + 32));
}

void sub_1BB3E2B4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39E2C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    sub_1BB3E2924();
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    v0 = sub_1BB86D690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39E2C8);
  }
}

unint64_t sub_1BB3E2C30()
{
  unint64_t result;

  result = qword_1ED39E1E0;
  if (!qword_1ED39E1E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CategoryViewLayoutAttributes, &type metadata for CategoryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39E1E0);
  }
  return result;
}

unint64_t sub_1BB3E2C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E2E0;
  if (!qword_1ED39E2E0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5EB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E2E0);
  }
  return result;
}

void sub_1BB3E2CDC(_QWORD *a1, _QWORD *a2, char a3, double a4, double a5, double a6, double a7)
{
  _QWORD *v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;

  v15 = *MEMORY[0x1E0DEEDD8] & *a2;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 48))(&v32, v16, v17);
  if (v32 < 2)
  {
    v19 = v7[10];
    v18 = v7[11];
    __swift_project_boxed_opaque_existential_1(v7 + 7, v19);
    (*(void (**)(_QWORD *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, double, double, double, double))(v18 + 16))(a1, a2, a3 & 1, *(_QWORD *)(v15 + *MEMORY[0x1E0DB8500]), *(_QWORD *)(v15 + *MEMORY[0x1E0DB8500] + 8), v19, v18, a4, a5, a6, a7);
    return;
  }
  if (v32 == 2)
  {
    v20 = v7[15];
    v21 = v7[16];
    __swift_project_boxed_opaque_existential_1(v7 + 12, v20);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 176))(v20, v21) & 1) == 0)
      return;
    v22 = sub_1BB8700FC();
    v23 = (void *)v22;
    v24.n128_u64[0] = v7[17];
    v25 = a3 & 1;
    goto LABEL_9;
  }
  sub_1BB009A80(v32);
  v26 = v7[5];
  v27 = v7[6];
  __swift_project_boxed_opaque_existential_1(v7 + 2, v26);
  v28 = a3 & 1;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, double, double, double, double))(v27 + 16))(a1, a2, v28, *(_QWORD *)(v15 + *MEMORY[0x1E0DB8500]), *(_QWORD *)(v15 + *MEMORY[0x1E0DB8500] + 8), v26, v27, a4, a5, a6, a7);
  v29 = v7[15];
  v30 = v7[16];
  __swift_project_boxed_opaque_existential_1(v7 + 12, v29);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 176))(v29, v30);
  if ((v31 & 1) != 0)
  {
    v22 = sub_1BB8700FC();
    v23 = (void *)v22;
    v24.n128_u64[0] = v7[17];
    v25 = v28;
LABEL_9:
    sub_1BB2D3D70(v22, v25, v24);

  }
}

uint64_t sub_1BB3E2EC4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

void sub_1BB3E2EF8(_QWORD *a1, _QWORD *a2, char a3, double a4, double a5, double a6, double a7)
{
  sub_1BB3E2CDC(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t FormatPatternPositionRelative.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3E2F40 + 4 * byte_1BB9133C0[*v0]))(2003134838, 0xE400000000000000);
}

uint64_t sub_1BB3E2F40()
{
  return 0x6566615377656976;
}

uint64_t sub_1BB3E2F60()
{
  return 0x656E6961746E6F63;
}

unint64_t sub_1BB3E2F84()
{
  return 0xD000000000000015;
}

void sub_1BB3E2FA0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  type metadata accessor for FormatDecorationContext();
  sub_1BB86D720();
  __asm { BR              X9 }
}

uint64_t sub_1BB3E2FF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((v3 & 1) != 0)
  {
    v4 = sub_1BB870CB4();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v0, 1, 1, v4);
  }
  else
  {
    *v0 = v2;
    v0[1] = v1;
    v5 = *MEMORY[0x1E0DBACD0];
    v6 = sub_1BB870CB4();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104))(v0, v5, v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v0, 0, 1, v6);
  }
  v8 = *MEMORY[0x1E0DBAD48];
  v9 = sub_1BB870CE4();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v0, v8, v9);
}

void FormatPatternPosition.relative.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

__n128 FormatPatternPosition.adjustment.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 24);
  result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t sub_1BB3E31A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPatternPosition.init(from:)(a1, a2);
}

uint64_t sub_1BB3E31BC(_QWORD *a1)
{
  return FormatPatternPosition.encode(to:)(a1);
}

NewsFeed::FormatPatternPositionRelative_optional __swiftcall FormatPatternPositionRelative.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatPatternPositionRelative_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB3E322C(char *a1)
{
  sub_1BB7F0B30(*a1);
}

void sub_1BB3E3238()
{
  char *v0;

  sub_1BA8D44E8(*v0);
}

void sub_1BB3E3240()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB3E3274()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB3E32E8(uint64_t a1)
{
  char *v1;

  sub_1BAB07E14(a1, *v1);
}

NewsFeed::FormatPatternPositionRelative_optional sub_1BB3E32F0(Swift::String *a1)
{
  return FormatPatternPositionRelative.init(rawValue:)(*a1);
}

uint64_t sub_1BB3E32FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB3E3324 + 4 * byte_1BB9133CC[*v0]))();
}

void sub_1BB3E3324(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "viewSafeArea");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BB3E3348(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "containerView");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BB3E3370(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001BB95EA10;
}

uint64_t sub_1BB3E3390()
{
  sub_1BB3E37B4();
  return sub_1BB872D60();
}

uint64_t sub_1BB3E33EC(_QWORD *a1)
{
  return FormatPatternPositionRelative.encode(to:)(a1);
}

BOOL static FormatPatternPositionAdjustment.== infix(_:_:)(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t sub_1BB3E341C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatPatternPositionAdjustment.init(from:)(a1, a2);
}

uint64_t sub_1BB3E3430(_QWORD *a1)
{
  return FormatPatternPositionAdjustment.encode(to:)(a1);
}

BOOL sub_1BB3E3444(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

void _s8NewsFeed21FormatPatternPositionV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3E34C0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB3E3538 + 4 * byte_1BB9133D4[a1]))(0x6566615377656976);
}

BOOL sub_1BB3E3538(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  double v4;
  double v5;
  double v6;
  double v7;
  char v8;
  _BOOL8 result;

  if (a1 == 0x6566615377656976 && v1 == 0xEC00000061657241)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  if ((v2 & 1) == 0)
    return (v3 & 1) == 0 && v5 == v7 && v4 == v6;
  return (v3 & 1) != 0;
}

unint64_t sub_1BB3E3634(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3E3658();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3E3658()
{
  unint64_t result;

  result = qword_1EF2C3058;
  if (!qword_1EF2C3058)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPosition, &type metadata for FormatPatternPosition);
    atomic_store(result, (unint64_t *)&qword_1EF2C3058);
  }
  return result;
}

uint64_t sub_1BB3E369C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEAA9CC, (uint64_t (*)(void))sub_1BAEEE850, (uint64_t (*)(void))sub_1BB3E36B8);
}

unint64_t sub_1BB3E36B8()
{
  unint64_t result;

  result = qword_1EF2C3060;
  if (!qword_1EF2C3060)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPosition, &type metadata for FormatPatternPosition);
    atomic_store(result, (unint64_t *)&qword_1EF2C3060);
  }
  return result;
}

unint64_t sub_1BB3E3700()
{
  unint64_t result;

  result = qword_1EF2C3068;
  if (!qword_1EF2C3068)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionRelative, &type metadata for FormatPatternPositionRelative);
    atomic_store(result, (unint64_t *)&qword_1EF2C3068);
  }
  return result;
}

unint64_t sub_1BB3E3744(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB3E3770();
  result = sub_1BB3E37B4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB3E3770()
{
  unint64_t result;

  result = qword_1EF2C3070;
  if (!qword_1EF2C3070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionRelative, &type metadata for FormatPatternPositionRelative);
    atomic_store(result, (unint64_t *)&qword_1EF2C3070);
  }
  return result;
}

unint64_t sub_1BB3E37B4()
{
  unint64_t result;

  result = qword_1ED39D448;
  if (!qword_1ED39D448)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionRelative, &type metadata for FormatPatternPositionRelative);
    atomic_store(result, (unint64_t *)&qword_1ED39D448);
  }
  return result;
}

unint64_t sub_1BB3E37F8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3E381C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3E381C()
{
  unint64_t result;

  result = qword_1EF2C3078;
  if (!qword_1EF2C3078)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionRelative, &type metadata for FormatPatternPositionRelative);
    atomic_store(result, (unint64_t *)&qword_1EF2C3078);
  }
  return result;
}

uint64_t sub_1BB3E3860(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEAADE8, (uint64_t (*)(void))sub_1BAEEE724, (uint64_t (*)(void))sub_1BB3E3700);
}

unint64_t sub_1BB3E387C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3E38A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3E38A0()
{
  unint64_t result;

  result = qword_1EF2C3080;
  if (!qword_1EF2C3080)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionAdjustment, &type metadata for FormatPatternPositionAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2C3080);
  }
  return result;
}

uint64_t sub_1BB3E38E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEAAE2C, (uint64_t (*)(void))sub_1BAEEE688, (uint64_t (*)(void))sub_1BB3E3900);
}

unint64_t sub_1BB3E3900()
{
  unint64_t result;

  result = qword_1EF2C3088;
  if (!qword_1EF2C3088)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionAdjustment, &type metadata for FormatPatternPositionAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2C3088);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatPatternPosition(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[25])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatPatternPosition()
{
  return &type metadata for FormatPatternPosition;
}

uint64_t storeEnumTagSinglePayload for FormatPatternPositionRelative(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB3E39E4 + 4 * byte_1BB9133DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB3E3A18 + 4 * byte_1BB9133D8[v4]))();
}

uint64_t sub_1BB3E3A18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3E3A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3E3A28);
  return result;
}

uint64_t sub_1BB3E3A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3E3A3CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB3E3A40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3E3A48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternPositionRelative()
{
  return &type metadata for FormatPatternPositionRelative;
}

ValueMetadata *type metadata accessor for FormatPatternPositionAdjustment()
{
  return &type metadata for FormatPatternPositionAdjustment;
}

uint64_t sub_1BB3E3A7C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v25;
  id v26;
  _QWORD v27[2];

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v27 - v13;
  v15 = objc_msgSend(a1, sel_contentURL, v12);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v14, 1, 1, v3);
    goto LABEL_7;
  }
  v16 = v15;
  sub_1BB86C5EC();

  v17 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v17(v14, v6, v3);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v18(v14, 0, 1, v3);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v19(v14, 1, v3) == 1)
  {
LABEL_7:
    v22 = (uint64_t)v14;
    goto LABEL_8;
  }
  sub_1BA7F0A80((uint64_t)v14);
  v20 = objc_msgSend(a1, sel_routeURL);
  if (v20)
  {
    v21 = v20;
    sub_1BB86C5EC();

    v17(v10, v6, v3);
    v18(v10, 0, 1, v3);
    if (v19(v10, 1, v3) != 1)
    {
      v22 = (uint64_t)v10;
LABEL_8:
      sub_1BA7F0A80(v22);
      return 0;
    }
  }
  else
  {
    v18(v10, 1, 1, v3);
  }
  sub_1BA7F0A80((uint64_t)v10);
  if (qword_1ED3BC090 != -1)
    swift_once();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v25 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72B0 != -1)
    swift_once();
  v26 = (id)qword_1EF2C4780;
  sub_1BB8703D8();
  v27[1] = a1;
  sub_1BB86FCA0();
  swift_allocObject();
  return sub_1BB86FC94();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE12openInSafari8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  _QWORD v34[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v34 - v16;
  v18 = objc_msgSend(a1, sel_contentURL, v15);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v17, 1, 1, v6);
    goto LABEL_7;
  }
  v19 = v18;
  v34[0] = v3;
  v20 = v2;
  sub_1BB86C5EC();

  v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v21(v17, v9, v6);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v22(v17, 0, 1, v6);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v23(v17, 1, v6) == 1)
  {
LABEL_7:
    v26 = (uint64_t)v17;
    goto LABEL_8;
  }
  sub_1BA7F0A80((uint64_t)v17);
  v24 = objc_msgSend(a1, sel_routeURL);
  if (v24)
  {
    v25 = v24;
    sub_1BB86C5EC();

    v21(v13, v9, v6);
    v22(v13, 0, 1, v6);
    if (v23(v13, 1, v6) != 1)
    {
      v26 = (uint64_t)v13;
LABEL_8:
      sub_1BA7F0A80(v26);
      return 0;
    }
  }
  else
  {
    v22(v13, 1, 1, v6);
  }
  sub_1BA7F0A80((uint64_t)v13);
  if (qword_1ED3BC090 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v29 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v30 = objc_msgSend(v29, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v31 = v34[0];
  if (qword_1EF2A72B0 != -1)
    swift_once();
  v32 = (void *)qword_1EF2C4780;
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v5, *MEMORY[0x1E0DB8530], v20);
  v34[1] = a1;
  sub_1BB86FB38();
  swift_allocObject();
  v33 = v32;
  return sub_1BB86FB20();
}

uint64_t FormatLayoutValue.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[48];
  __int128 v18;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v17[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_1BB872874();
  v9 = Dictionary<>.errorOnUnknownKeys.getter(v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
LABEL_8:
    sub_1BB3E50E4();
    v18 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v10 = sub_1BB8740EC();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v12 = (unint64_t *)(v10 + 40);
  while (1)
  {
    v13 = *v12;
    if (*v12 >= 4)
      break;
    v12 += 2;
    if (!--v11)
      goto LABEL_7;
  }
  v14 = *(v12 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v15 = v14;
  *(_QWORD *)(v15 + 8) = v13;
  *(_QWORD *)(v15 + 16) = &unk_1E726FB28;
  *(_OWORD *)(v15 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v14, v13);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB3E44D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FormatViewNodeLayoutAttributes();
  *(_OWORD *)(v5 - 224) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1EF2AEA18, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatViewNodeLayoutAttributes);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 240);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 4;
    JUMPOUT(0x1BB3E44A8);
  }
  JUMPOUT(0x1BB3E4498);
}

void sub_1BB3E4568()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for FormatWebEmbedNodeLayoutAttributes();
  *(_OWORD *)(v5 - 224) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1EF2C30D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeLayoutAttributes);
  sub_1BB8740D4();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    v6 = *(_QWORD *)(v5 - 240);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v1 = v7 | 0x1000000000000004;
    JUMPOUT(0x1BB3E44A8);
  }
  JUMPOUT(0x1BB3E4498);
}

unint64_t sub_1BB3E50E4()
{
  unint64_t result;

  result = qword_1EF2C3090;
  if (!qword_1EF2C3090)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913A00, &type metadata for FormatLayoutValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C3090);
  }
  return result;
}

uint64_t sub_1BB3E5128()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BB3E514C()
{
  unint64_t result;

  result = qword_1EF2C30B8;
  if (!qword_1EF2C30B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeLayoutAttributes, &type metadata for FormatAdMetricsNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C30B8);
  }
  return result;
}

uint64_t sub_1BB3E5190()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB3E51E4()
{
  unint64_t result;

  result = qword_1EF2C30E0;
  if (!qword_1EF2C30E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeLayoutAttributes, &type metadata for FormatGroupNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C30E0);
  }
  return result;
}

uint64_t sub_1BB3E5228()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void FormatLayoutValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  v4 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BB3E5348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v4 + 16);
  *(_BYTE *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 224) = 0;
  *(_QWORD *)(v0 + 232) = 0;
  sub_1BB3E606C();
  swift_retain();
  sub_1BB8741AC();
  if (!v3)
  {
    *(_QWORD *)(v0 + 80) = v6;
    *(_OWORD *)(v0 + 224) = xmmword_1BB87FC90;
    type metadata accessor for FormatItemNodeLayoutAttributes();
    sub_1BA4A2870(&qword_1EF2BDF18, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatItemNodeLayoutAttributes);
    sub_1BB8741AC();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 72) + 8))(v2, v1);
  return swift_release();
}

void sub_1BB3E601C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v0 + 80) = 8;
  sub_1BB3E606C();
  *(_QWORD *)(v0 + 224) = 0;
  *(_QWORD *)(v0 + 232) = 0;
  sub_1BB8741AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 8))(v2, v1);
  JUMPOUT(0x1BB3E5FF8);
}

unint64_t sub_1BB3E606C()
{
  unint64_t result;

  result = qword_1EF2C30E8;
  if (!qword_1EF2C30E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9139D8, &type metadata for FormatLayoutValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C30E8);
  }
  return result;
}

unint64_t sub_1BB3E60B0()
{
  unint64_t result;

  result = qword_1EF2C3110;
  if (!qword_1EF2C3110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeLayoutAttributes, &type metadata for FormatAdMetricsNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C3110);
  }
  return result;
}

unint64_t sub_1BB3E60F4()
{
  unint64_t result;

  result = qword_1EF2C3138;
  if (!qword_1EF2C3138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeLayoutAttributes, &type metadata for FormatGroupNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C3138);
  }
  return result;
}

uint64_t sub_1BB3E6138(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3E6164 + 4 * byte_1BB913778[a1]))(1835365481, 0xE400000000000000);
}

uint64_t sub_1BB3E6164()
{
  return 2003134838;
}

uint64_t sub_1BB3E6170()
{
  return 0x6465626D45626577;
}

uint64_t sub_1BB3E6188()
{
  return 1954047348;
}

uint64_t sub_1BB3E6194()
{
  return 0x6567616D69;
}

uint64_t sub_1BB3E61A8()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BB3E61CC()
{
  return 0x6E6F74747562;
}

uint64_t sub_1BB3E61E0()
{
  return 0x656D617266;
}

uint64_t sub_1BB3E61F4()
{
  return 0x6E6564646968;
}

uint64_t sub_1BB3E6208()
{
  return 0x6569566574617473;
}

uint64_t sub_1BB3E6228()
{
  return 0x6D6F74737563;
}

uint64_t sub_1BB3E623C()
{
  return 0x63697274654D6461;
}

uint64_t sub_1BB3E6258()
{
  return 1633905005;
}

uint64_t sub_1BB3E6264()
{
  return 0x4D6465726579616CLL;
}

uint64_t sub_1BB3E6284()
{
  return 0x6F65646976;
}

uint64_t sub_1BB3E6298()
{
  return 0x766F436575737369;
}

uint64_t sub_1BB3E62B4()
{
  return 0x70756F7267;
}

unint64_t sub_1BB3E62C8()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB3E62E4()
{
  return 0x616C506F65646976;
}

uint64_t sub_1BB3E6304()
{
  return 0x73736572676F7270;
}

uint64_t sub_1BB3E6324()
{
  return 0x6D45656C7A7A7570;
}

uint64_t sub_1BB3E6344()
{
  return 0x65726F736E6F7073;
}

uint64_t sub_1BB3E6368(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB3E6138(*a1);
  v5 = v4;
  if (v3 == sub_1BB3E6138(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB3E63F0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB3E6138(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3E6450()
{
  unsigned __int8 *v0;

  sub_1BB3E6138(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3E6490()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB3E6138(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3E64EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB3E7288();
  *a1 = result;
  return result;
}

uint64_t sub_1BB3E6518@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB3E6138(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB3E6540()
{
  sub_1BB3E7244();
  return sub_1BB872D60();
}

uint64_t sub_1BB3E659C()
{
  sub_1BB3E7244();
  return sub_1BB872D0C();
}

void FormatLayoutValue.flipRightToLeft(bounds:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3E664C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v1 = swift_allocObject();
  swift_retain();
  v2 = FormatItemNodeLayoutAttributes.flipRightToLeft(bounds:)();
  result = swift_release();
  *(_QWORD *)(v1 + 16) = v2;
  *v0 = v1;
  return result;
}

unint64_t sub_1BB3E705C()
{
  unint64_t result;

  result = qword_1EF2C3160;
  if (!qword_1EF2C3160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeLayoutAttributes, &type metadata for FormatAdMetricsNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C3160);
  }
  return result;
}

uint64_t sub_1BB3E70A0(_QWORD *a1)
{
  return FormatLayoutValue.init(from:)(a1);
}

void sub_1BB3E70B4(_QWORD *a1)
{
  FormatLayoutValue.encode(to:)(a1);
}

uint64_t sub_1BB3E70D0(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x14)
    return v1;
  else
    return (*a1 >> 3) + 21;
}

unint64_t *sub_1BB3E70F4(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x15)
    *result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    *result = (8 * (a2 - 21)) | 0xA000000000000004;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatLayoutValue.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_1BB3E717C + 4 * byte_1BB9137D5[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_1BB3E71B0 + 4 * byte_1BB9137D0[v4]))();
}

uint64_t sub_1BB3E71B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3E71B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3E71C0);
  return result;
}

uint64_t sub_1BB3E71CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3E71D4);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_1BB3E71D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3E71E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutValue.CodingType()
{
  return &type metadata for FormatLayoutValue.CodingType;
}

unint64_t sub_1BB3E7200()
{
  unint64_t result;

  result = qword_1EF2C3188;
  if (!qword_1EF2C3188)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9139B0, &type metadata for FormatLayoutValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C3188);
  }
  return result;
}

unint64_t sub_1BB3E7244()
{
  unint64_t result;

  result = qword_1EF2C3190;
  if (!qword_1EF2C3190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913938, &type metadata for FormatLayoutValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C3190);
  }
  return result;
}

uint64_t sub_1BB3E7288()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16)
    return 22;
  else
    return v0;
}

uint64_t sub_1BB3E72D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for FeedCursorTrackerSnapshot(319, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  if (v5 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t sub_1BB3E73A0(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  _QWORD v31[2];
  __n128 v32[4];
  uint64_t v33;

  v8 = *(_QWORD *)(*a1 + 80);
  v9 = *(_QWORD *)(*a1 + 88);
  v10 = type metadata accessor for DebugJournalSection(0, v8, v9, (uint64_t)a4);
  v31[1] = sub_1BB872748();
  swift_retain();
  v11 = a4;
  sub_1BB7E9B44(a1, v11, v32);
  swift_release();

  v12 = sub_1BB872EE0();
  sub_1BB872EB0();
  v31[0] = 0;
  v32[0].n128_u64[0] = *(_QWORD *)((char *)a1 + qword_1ED476790);
  v21 = v31;
  v22 = a3;
  v23 = a2;
  v24 = v11;
  v25 = a1;
  v19[2] = v8;
  v19[3] = v9;
  v19[4] = sub_1BB3EE650;
  v19[5] = &v20;
  sub_1BB3EE670();
  v14 = v13;
  v15 = sub_1BA4A2870(&qword_1EF2C3260, (uint64_t (*)(uint64_t))sub_1BB3EE670, MEMORY[0x1E0DECC68]);
  swift_bridgeObjectRetain();
  v17 = sub_1BB5B50D4((void (*)(char *, char *))sub_1BB3EE65C, (uint64_t)v19, v14, v10, MEMORY[0x1E0DEDCE8], v15, MEMORY[0x1E0DEDD18], v16);
  swift_bridgeObjectRelease();
  v32[0].n128_u64[0] = v17;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v12);
  sub_1BB872EA4();
  swift_retain();
  sub_1BB7E9BC8((unint64_t)a1, v11, (uint64_t)v32);
  swift_release();
  v28 = v32[2];
  v29 = v32[3];
  v30 = v33;
  v26 = v32[0];
  v27 = v32[1];
  sub_1BB872EB0();
  return v31[0];
}

uint64_t sub_1BB3E758C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  _QWORD v31[2];
  __n128 v32[4];
  uint64_t v33;

  v8 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v10 = type metadata accessor for DebugJournalSection(0, v8, v9, (uint64_t)a4);
  v31[1] = sub_1BB872748();
  swift_retain();
  v11 = a4;
  sub_1BB7E9E14(a1, v11, v32);
  swift_release();

  v12 = sub_1BB872EE0();
  sub_1BB872EB0();
  v31[0] = 0;
  v32[0].n128_u64[0] = *(_QWORD *)(a1 + qword_1ED476450);
  v21 = v31;
  v22 = a3;
  v23 = a2;
  v24 = v11;
  v25 = a1;
  v19[2] = v8;
  v19[3] = v9;
  v19[4] = sub_1BB3EE8C8;
  v19[5] = &v20;
  sub_1BB3EE670();
  v14 = v13;
  v15 = sub_1BA4A2870(&qword_1EF2C3260, (uint64_t (*)(uint64_t))sub_1BB3EE670, MEMORY[0x1E0DECC68]);
  swift_bridgeObjectRetain();
  v17 = sub_1BB5B50D4((void (*)(char *, char *))sub_1BB3EE65C, (uint64_t)v19, v14, v10, MEMORY[0x1E0DEDCE8], v15, MEMORY[0x1E0DEDD18], v16);
  swift_bridgeObjectRelease();
  v32[0].n128_u64[0] = v17;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v12);
  sub_1BB872EA4();
  swift_retain();
  sub_1BB7E9EAC(a1, v11, (uint64_t)v32);
  swift_release();
  v28 = v32[2];
  v29 = v32[3];
  v30 = v33;
  v26 = v32[0];
  v27 = v32[1];
  sub_1BB872EB0();
  return v31[0];
}

void sub_1BB3E7778(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BB3EDD64();
}

void sub_1BB3E779C()
{
  _QWORD *v0;
  _QWORD *v1;
  objc_class *ObjectType;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  objc_super v38;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *v0;
  v5 = *MEMORY[0x1E0DEEDD8];
  v38.receiver = v0;
  v38.super_class = ObjectType;
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  v6 = objc_msgSend(v0, sel_navigationItem);
  v7 = (void *)sub_1BB872970();
  objc_msgSend(v6, sel_setTitle_, v7);

  v8 = *(void **)((char *)v1 + *(_QWORD *)((*v3 & *v1) + 0xC0));
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_secondaryLabelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  v11 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
  objc_msgSend(v8, sel_setFont_, v11);

  v12 = (void *)sub_1BB872970();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_systemImageNamed_, v12);

  if (v14)
  {
    v37 = v5 & v4;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithImage_style_target_action_, v14, 2, sub_1BB874380(), sel_doDismiss);
    swift_unknownObjectRelease();

    v16 = objc_msgSend(v9, sel_systemGrayColor);
    objc_msgSend(v15, sel_setTintColor_, v16);

    v17 = objc_msgSend(v1, sel_navigationItem);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v18 + 32) = v15;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    v36 = v15;
    v19 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setRightBarButtonItems_, v19);

    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB8882C0;
    v21 = (void *)sub_1BB872970();
    v22 = objc_msgSend(v13, sel_systemImageNamed_, v21);

    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithImage_style_target_action_, v22, 0, sub_1BB874380(), sel_doSettingsWithSender_);
    swift_unknownObjectRelease();

    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(_QWORD *)(v20 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v8);
    *(_QWORD *)(v20 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    v24 = (void *)sub_1BB872970();
    v25 = objc_msgSend(v13, sel_systemImageNamed_, v24);

    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithImage_style_target_action_, v25, 0, sub_1BB874380(), sel_doScrollToUserEnteredSection);
    swift_unknownObjectRelease();

    *(_QWORD *)(v20 + 64) = v26;
    v27 = (void *)sub_1BB872970();
    v28 = objc_msgSend(v13, sel_systemImageNamed_, v27);

    v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = *(_QWORD *)(v37 + 80);
    v30[3] = *(_QWORD *)(v37 + 88);
    v30[4] = v29;
    v31 = objc_allocWithZone((Class)sub_1BB870A08());
    *(_QWORD *)(v20 + 72) = sub_1BB8709FC();
    sub_1BB872DCC();
    v32 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setToolbarItems_, v32);

    v33 = *(void **)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80));
    objc_msgSend(v33, sel_setDelegate_, v1);
    objc_msgSend(v33, sel_setDataSource_, v1);
    objc_msgSend(v33, sel_setAlwaysBounceVertical_, 1);
    type metadata accessor for DebugJournalTableViewCell();
    sub_1BB873234();
    type metadata accessor for DebugJournalHeaderView();
    sub_1BB873228();
    v34 = objc_msgSend(v1, sel_view);
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v34, sel_addSubview_, v33);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1BB3E7E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  sub_1BA49A224(0, &qword_1EF2B7EB0);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB8856F0;
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  swift_retain();
  *(_QWORD *)(v6 + 32) = sub_1BB8738F4();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  swift_retain();
  *(_QWORD *)(v6 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  return sub_1BB8736B4();
}

id sub_1BB3E7FE0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  type metadata accessor for DebugJournalSection(255, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v4);
  v5 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v5);
  v6 = sub_1BB873DA4();
  v7 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x70));
  swift_beginAccess();
  *v7 = v6;
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x80)), sel_reloadData);
}

void sub_1BB3E80F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  if (v7)
  {
    v8 = (void *)v7;
    swift_retain();

    sub_1BB4D9320(a5);
    swift_release();
  }
  swift_beginAccess();
  v9 = MEMORY[0x1BCCE5D40](v6);
  if (v9)
  {
    v10 = (void *)v9;
    sub_1BB3E7FE0();

  }
}

void sub_1BB3E81AC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BB3E779C();

}

void sub_1BB3E81E0(char a1)
{
  void *v1;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setToolbarHidden_animated_, 0, 0);

  }
}

void sub_1BB3E825C(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1BB3E81E0(a3);

}

id sub_1BB3E829C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id result;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_viewWillLayoutSubviews);
  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(void **)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80));
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0xC0)), sel_sizeToFit);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB3E8390(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BB3E829C();

}

uint64_t sub_1BB3E83C4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_1BB3EDE80();

  return v6;
}

uint64_t sub_1BB3E840C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_1BB3EDF0C();

  return v6;
}

void sub_1BB3E845C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  _BYTE v21[264];
  _QWORD v22[35];

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1BB86CBD4();
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  type metadata accessor for DebugJournalSection(0, v2, v3, v4);
  sub_1BB872F04();
  swift_endAccess();
  sub_1BB86CBC8();
  v20 = type metadata accessor for DebugJournalItem(0, v2, v3, v5);
  sub_1BB872F04();
  type metadata accessor for DebugJournalTableViewCell();
  v6 = (char *)sub_1BB87321C();
  v7 = objc_msgSend(v6, sel_textLabel);
  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v7, sel_setFont_, v8);

  }
  v9 = objc_msgSend(v6, sel_textLabel);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v10, sel_setTextColor_, v11);

  }
  v12 = objc_msgSend(v6, sel_detailTextLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v13, sel_setTextColor_, v14);

  }
  v15 = objc_msgSend(v6, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v16, sel_setFont_, v17);

  }
  v18 = objc_msgSend(v6, sel_detailTextLabel);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v6, sel_setSelectionStyle_, 0);
  objc_msgSend(v6, sel_setAccessoryType_, 0);
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_stripView], sel_setBackgroundColor_, v22[5]);
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_activityIndicatorView], sel_setHidden_, 1);
  objc_msgSend(v6, sel_setIndentationLevel_, 0);
  objc_msgSend(v6, sel_setIndentationWidth_, 16.0);
  (*(void (**)(_BYTE *, _QWORD *))(*(_QWORD *)(v20 - 8) + 16))(v21, v22);
  __asm { BR              X10 }
}

char *sub_1BB3E8800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  unsigned int v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void **v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t ObjCClassFromMetadata;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  void *v86;
  id v88;
  void *v89;
  id v90;
  id v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  void *v97;
  void *v98;
  id v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  id v105;
  _QWORD *v106;
  void *v107;
  uint64_t v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  void *v123;
  id v124;
  id v125;
  void *v126;

  *(_QWORD *)(v0 + 64) = v2;
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(v0 + 832);
  v7 = *(_OWORD *)(v0 + 784);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 768);
  *(_OWORD *)(v0 + 528) = v7;
  *(_OWORD *)(v0 + 544) = *(_OWORD *)(v0 + 800);
  *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 816);
  v8 = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 464) = v8;
  v9 = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 496) = v9;
  v10 = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 400) = v10;
  v11 = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 432) = v11;
  v12 = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 336) = v12;
  v13 = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 368) = v13;
  v14 = *(char **)(v0 + 128);
  objc_msgSend(v14, *(SEL *)(v5 + 2720), v6);
  v15 = *(id *)&v14[v1];
  v16 = *(void **)(v0 + 120);
  if (v6 == 1)
    v17 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.5);
  else
    v17 = v16;
  v18 = v17;
  objc_msgSend(v15, *(SEL *)(v3 + 3720), v17);

  sub_1BA5B0E6C(v0 + 448, v0 + 208);
  v19 = *(unsigned __int8 *)(v0 + 272);
  if (v19 >= 3)
  {
    if (v19 - 4 >= 3)
    {
      v68 = v4;
      sub_1BA4CECCC((__int128 *)(v0 + 208), v0 + 168);
      v69 = objc_msgSend(v14, sel_textLabel);
      if (v69)
      {
        v70 = v69;
        v72 = *(_QWORD *)(v0 + 192);
        v71 = *(_QWORD *)(v0 + 200);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 168), v72);
        (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v71 + 8) + 8) + 16))(v72);
        v73 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v70, sel_setText_, v73);

      }
      v74 = objc_msgSend(v14, sel_textLabel);
      if (v74)
      {
        v75 = v74;
        v76 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
        objc_msgSend(v75, (SEL)(v68 + 3400), v76);

      }
      v77 = objc_msgSend(v14, sel_detailTextLabel);
      if (v77)
      {
        v78 = v77;
        *(_QWORD *)(v0 + 152) = 0;
        *(_QWORD *)(v0 + 160) = 0xE000000000000000;
        FeedJournalGroupResult.kind.getter();
        sub_1BAA52294(*(_BYTE *)(v0 + 151));
        sub_1BB872AFC(v79);
        sub_1BB872AFC(v80);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v81);
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
        v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = xmmword_1BB87CE70;
        v83 = *(_QWORD *)(v0 + 544);
        v84 = MEMORY[0x1E0DEB100];
        *(_QWORD *)(v82 + 56) = MEMORY[0x1E0DEB070];
        *(_QWORD *)(v82 + 64) = v84;
        *(_QWORD *)(v82 + 32) = v83;
        sub_1BB8729D0();
        sub_1BB872AFC(v85);
        swift_bridgeObjectRelease();
        v86 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v78, sel_setText_, v86);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v88 = objc_msgSend(v14, sel_detailTextLabel);
      if (v88)
      {
        v89 = v88;
        v90 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
        objc_msgSend(v89, (SEL)(v68 + 3400), v90);

      }
      objc_msgSend(v14, sel_setSelectionStyle_, 3);
      objc_msgSend(v14, sel_setAccessoryType_, 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BAA7D0B0(v0 + 320);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v0 + 840, *(_QWORD *)(v0 + 136));
      __swift_destroy_boxed_opaque_existential_1(v0 + 168);
    }
    else
    {
      v20 = objc_msgSend(v14, sel_textLabel);
      if (v20)
      {
        v21 = v20;
        (*(void (**)(void))(v0 + 552))();
        v22 = v4;
        v23 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_setText_, v23);

        v4 = v22;
      }
      v24 = objc_msgSend(v14, sel_textLabel);
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
        objc_msgSend(v25, *(SEL *)(v4 + 3760), v26);

      }
      v27 = objc_msgSend(v14, sel_detailTextLabel);
      if (v27)
      {
        v28 = v27;
        *(_QWORD *)(v0 + 208) = 0;
        *(_QWORD *)(v0 + 216) = 0xE000000000000000;
        FeedJournalGroupResult.kind.getter();
        sub_1BAA52294(*(_BYTE *)(v0 + 168));
        sub_1BB872AFC(v29);
        sub_1BB872AFC(v30);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v31);
        sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_1BB87CE70;
        v33 = *(_QWORD *)(v0 + 544);
        v34 = MEMORY[0x1E0DEB100];
        *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEB070];
        *(_QWORD *)(v32 + 64) = v34;
        *(_QWORD *)(v32 + 32) = v33;
        sub_1BB8729D0();
        sub_1BB872AFC(v35);
        swift_bridgeObjectRelease();
        v36 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        objc_msgSend(v28, sel_setText_, v36);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v65 = objc_msgSend(v14, sel_detailTextLabel);
      if (v65)
      {
        v66 = v65;
        v67 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
        objc_msgSend(v66, *(SEL *)(v4 + 3760), v67);

      }
      objc_msgSend(v14, sel_setSelectionStyle_, 3);
      objc_msgSend(v14, sel_setAccessoryType_, 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BAA7D0B0(v0 + 320);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v0 + 840, *(_QWORD *)(v0 + 136));
    }
    return v14;
  }
  sub_1BA4CECCC((__int128 *)(v0 + 208), v0 + 280);
  v38 = *(_QWORD *)(v0 + 304);
  v37 = *(_QWORD *)(v0 + 312);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 280), v38);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v37 + 8) + 8) + 16))(v38);
  sub_1BA6DC310(0, (unint64_t *)&qword_1ED3BA010, (void (*)(uint64_t))sub_1BA81D1A4);
  *(_QWORD *)(v0 + 24) = v39;
  v40 = swift_allocObject();
  v41 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
  v42 = *v41;
  *(_QWORD *)(v40 + 32) = *v41;
  v43 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 56) = v42;
  *(_QWORD *)(v0 + 72) = v43;
  v44 = objc_msgSend(v43, sel_labelColor);
  v45 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(v0 + 16) = v45;
  *(_QWORD *)(v40 + 64) = v45;
  *(_QWORD *)(v40 + 40) = v44;
  sub_1BA76E82C(v40);
  v46 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v47 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  v49 = v48;
  v50 = sub_1BA4A2870((unint64_t *)&qword_1ED3B9880, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v51 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 80) = objc_msgSend(v46, sel_initWithString_attributes_, v47, v51);

  sub_1BB71B914();
  v53 = v52;
  *(_QWORD *)v0 = v50;
  *(_QWORD *)(v0 + 8) = v49;
  if (v52 >> 62)
  {
    v54 = sub_1BB873F30();
    if (v54)
      goto LABEL_14;
  }
  else
  {
    v54 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v54)
    {
LABEL_14:
      v55 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v56 = (void *)sub_1BB872970();
      v57 = objc_msgSend(v55, sel_initWithString_, v56);

      objc_msgSend(*(id *)(v0 + 80), sel_insertAttributedString_atIndex_, v57, 0);
      sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      if (v54 < 1)
      {
        __break(1u);
        JUMPOUT(0x1BB3EAAF8);
      }
      v59 = (void *)ObjCClassFromMetadata;
      v60 = 0;
      do
      {
        if ((v53 & 0xC000000000000001) != 0)
          v61 = (id)MEMORY[0x1BCCE4630](v60, v53);
        else
          v61 = *(id *)(v53 + 8 * v60 + 32);
        v62 = v61;
        ++v60;
        v63 = objc_msgSend(v59, sel_attributedStringWithAttachment_, v61);
        v64 = objc_msgSend(*(id *)(v0 + 72), sel_systemGrayColor);
        objc_msgSend(v63, sel_addAttribute_value_range_, *(_QWORD *)(v0 + 56), v64, 0, 1);

        objc_msgSend(*(id *)(v0 + 80), sel_insertAttributedString_atIndex_, v63, 0);
      }
      while (v54 != v60);
    }
  }
  swift_bridgeObjectRelease();
  v14 = *(char **)(v0 + 128);
  v91 = objc_msgSend(v14, sel_textLabel);
  if (v91)
  {
    v92 = v91;
    objc_msgSend(v91, sel_setAttributedText_, *(_QWORD *)(v0 + 80));

  }
  *(_QWORD *)(v0 + 208) = 0;
  *(_QWORD *)(v0 + 216) = 0xE000000000000000;
  sub_1BB873CB4();
  v93 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 216) = v93;
  v95 = *(_QWORD *)(v0 + 304);
  v94 = *(_QWORD *)(v0 + 312);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 280), v95);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v94 + 8) + 8) + 24))(v95);
  sub_1BB872AFC((_QWORD *)0xE300000000000000);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v96);
  if (qword_1EF2A74C8 != -1)
    swift_once();
  v97 = (void *)qword_1EF3D0C38;
  v98 = (void *)sub_1BB86DC24();
  v99 = objc_msgSend(v97, sel_stringForObjectValue_, v98);

  if (v99)
  {
    sub_1BB8729A0();

  }
  else
  {
    sub_1BB872FDC();
  }
  sub_1BB872AFC(v100);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("e loaded as they are expanded");
  v102 = *(_QWORD *)(v0 + 304);
  v101 = *(_QWORD *)(v0 + 312);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 280), v102);
  (*(void (**)(uint64_t))(*(_QWORD *)(v101 + 8) + 64))(v102);
  v103 = (void *)qword_1EF3D0C38;
  v104 = (void *)sub_1BB86DC24();
  v105 = objc_msgSend(v103, sel_stringForObjectValue_, v104);

  if (v105)
  {
    sub_1BB8729A0();

  }
  else
  {
    sub_1BB872FDC();
  }
  v107 = *(void **)(v0 + 72);
  sub_1BB872AFC(v106);
  swift_bridgeObjectRelease();
  v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = *(_OWORD *)(v0 + 32);
  v109 = *(void **)(v0 + 56);
  *(_QWORD *)(v108 + 32) = v109;
  v110 = v109;
  v111 = objc_msgSend(v107, sel_secondaryLabelColor);
  *(_QWORD *)(v108 + 64) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v108 + 40) = v111;
  sub_1BA76E82C(v108);
  v112 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v113 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v114 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = objc_msgSend(v112, sel_initWithString_attributes_, v113, v114);

  sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
  v115 = swift_allocObject();
  *(_OWORD *)(v115 + 16) = *(_OWORD *)(v0 + 32);
  v116 = *(_QWORD *)(v0 + 544);
  v117 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v115 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v115 + 64) = v117;
  *(_QWORD *)(v115 + 32) = v116;
  sub_1BB8729D0();
  v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v118 + 32) = v110;
  v119 = v110;
  v120 = objc_msgSend(*(id *)(v0 + 48), sel_tintColor);
  *(_QWORD *)(v118 + 64) = *(_QWORD *)(v0 + 16);
  if (!v120)
    v120 = objc_msgSend(*(id *)(v0 + 72), sel_systemBlueColor);
  *(_QWORD *)(v118 + 40) = v120;
  sub_1BA76E82C(v118);
  v121 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v122 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v123 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v124 = objc_msgSend(v121, sel_initWithString_attributes_, v122, v123);

  objc_msgSend(*(id *)(v0 + 56), sel_appendAttributedString_, v124);
  v125 = objc_msgSend(v14, sel_detailTextLabel);
  if (v125)
  {
    v126 = v125;
    objc_msgSend(v125, sel_setAttributedText_, *(_QWORD *)(v0 + 56));

  }
  objc_msgSend(v14, sel_setSelectionStyle_, 3);
  objc_msgSend(v14, sel_setAccessoryType_, 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BAA7D0B0(v0 + 320);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v0 + 840, *(_QWORD *)(v0 + 136));
  __swift_destroy_boxed_opaque_existential_1(v0 + 280);
  return v14;
}

uint64_t sub_1BB3EAB50@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  sub_1BA4F5ADC();
  sub_1BB872AFC(v2);
  result = swift_bridgeObjectRelease();
  *a1 = 547520738;
  a1[1] = 0xA400000000000000;
  return result;
}

uint64_t sub_1BB3EABB8(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;

  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50);
  v6 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x58);
  v7 = a3(0, v5, v6);
  v8 = a4(v7);
  v10 = v9;
  type metadata accessor for FeedCursorTrackerSnapshot(0, v5, v6, v11);
  v12._countAndFlagsBits = v8;
  v12._object = v10;
  LOBYTE(v8) = FeedCursorTrackerSnapshot.contains(identifier:)(v12);
  swift_bridgeObjectRelease();
  return v8 & 1;
}

id sub_1BB3EAC6C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v14;

  v5 = sub_1BB86CBE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86CBA4();
  v9 = a3;
  v10 = a1;
  sub_1BB3E845C();
  v12 = v11;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

char *sub_1BB3EAD24()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  void *v29;
  char v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  id v39;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 88);
  type metadata accessor for DebugJournalSection(0, v4, v5, v6);
  sub_1BB872F04();
  v48 = v43;
  v49 = v44;
  v50 = v45;
  v46 = v41;
  v47 = v42;
  swift_endAccess();
  type metadata accessor for DebugJournalHeaderView();
  v7 = (char *)sub_1BB873210();
  v8 = objc_msgSend(v7, sel_textLabel);
  if (v8)
  {
    v9 = v8;
    v10 = (void *)sub_1BB872970();
    objc_msgSend(v9, sel_setText_, v10);

  }
  v11 = sub_1BB8730C0();
  v13 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x88));
  if (v11 == *v13 && v12 == v13[1])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_12;
  }
  v16 = objc_msgSend(v7, sel_textLabel);
  if (v16)
  {
    v17 = v16;
    sub_1BB872AFC((_QWORD *)0x208598E2);
    v18 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setText_, v18, 545626338, 0xA400000000000000);

  }
LABEL_12:
  v19 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xB8));
  v20 = v50;
  sub_1BB2048E8(v50);
  v22 = v21;
  v24 = v23;
  swift_beginAccess();
  v25 = *(_QWORD *)(v19 + 16);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1BA6E35A8(v22, v24), (v27 & 1) != 0))
  {
    v28 = *(unsigned __int8 *)(*(_QWORD *)(v25 + 56) + v26);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v29 = *(void **)&v7[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
    if (v28 != 1)
    {
      v30 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    v29 = *(void **)&v7[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
  }
  v30 = 1;
LABEL_18:
  v31 = v29;
  v32 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setText_, v32);

  v33 = OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel;
  v34 = (void *)sub_1BB86F898();
  v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v36 = swift_allocObject();
  v37 = v46;
  *(_OWORD *)(v36 + 56) = v47;
  v38 = v49;
  *(_OWORD *)(v36 + 72) = v48;
  *(_OWORD *)(v36 + 88) = v38;
  *(_QWORD *)(v36 + 16) = v4;
  *(_QWORD *)(v36 + 24) = v5;
  *(_QWORD *)(v36 + 32) = v35;
  *(_QWORD *)(v36 + 104) = v50;
  *(_OWORD *)(v36 + 40) = v37;
  *(_BYTE *)(v36 + 112) = v30;
  sub_1BB3EE588((uint64_t)&v46);

  swift_release();
  v39 = *(id *)&v7[v33];
  if (((1 << (v20 >> 61)) & 0xDE) != 0)
    objc_msgSend(v39, sel_setHidden_, 1);
  else
    objc_msgSend(v39, sel_setHidden_, 0);
  sub_1BB3EE5EC((uint64_t)&v46);

  return v7;
}

void sub_1BB3EB120(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = (_QWORD *)MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)((char *)v6 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v6) + 0xB8));
    swift_retain();

    sub_1BB2048E8(*(_QWORD *)(a2 + 64));
    v10 = v9;
    v12 = v11;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *(_QWORD *)(v8 + 16);
    *(_QWORD *)(v8 + 16) = 0x8000000000000000;
    sub_1BB4C077C((a3 & 1) == 0, v10, v12, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v8 + 16) = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  v14 = MEMORY[0x1BCCE5D40](v5);
  if (v14)
  {
    v15 = (void *)v14;
    sub_1BB3E7FE0();

  }
}

char *sub_1BB3EB270(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  char *v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_1BB3EAD24();

  return v6;
}

double sub_1BB3EB2C4()
{
  return 40.0;
}

void sub_1BB3EB2D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[8];
  id v8;
  _BYTE v10[280];

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1BB86CBD4();
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  type metadata accessor for DebugJournalSection(0, v2, v3, v4);
  sub_1BB872F04();
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BB86CBC8();
  v6 = type metadata accessor for DebugJournalItem(0, v2, v3, v5);
  sub_1BB872F04();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v7, v10, v6);
  __asm { BR              X10 }
}

uint64_t sub_1BB3EB414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(&v3, v0);
  return swift_release();
}

void sub_1BB3EB6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;

  v26 = a3;
  v27 = a2;
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v3);
  v6 = sub_1BB87261C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)((char *)v3 + v5[15]);
  swift_beginAccess();
  v29 = *v10;
  v11 = v5[10];
  v25 = v5[11];
  v13 = type metadata accessor for DebugJournalSection(255, v11, v25, v12);
  v14 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v14);
  v17 = sub_1BAA52384((void (*)(char *, char *))sub_1BB3EE4F8, a1, v14, v13, MEMORY[0x1E0DEDCE8], v15, MEMORY[0x1E0DEDD18], v16);
  swift_bridgeObjectRelease();
  *v10 = v17;
  swift_bridgeObjectRelease();
  sub_1BB3E7FE0();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF530], v6);
  v18 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for FeedCursor(0, v11, v25, v19);
  swift_retain();
  sub_1BB86EBFC();

  swift_release();
  v20 = (void *)sub_1BB87345C();
  v21 = swift_allocObject();
  v22 = v27;
  *(_QWORD *)(v21 + 16) = v26;
  *(_QWORD *)(v21 + 24) = v22;
  sub_1BB86E98C();
  swift_release();

  swift_release();
  v23 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();

}

uint64_t sub_1BB3EB948(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1BB3EBCF0(a1, a2, a3, a4, (void (*)(id, char *))sub_1BB3EB2D0);
}

void sub_1BB3EB954(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[9];
  _QWORD v12[32];
  uint64_t v14;

  v11[4] = a1;
  v2 = *MEMORY[0x1E0DEEDD8] & *v1;
  v3 = sub_1BB86CBE0();
  v11[1] = *(_QWORD *)(v3 - 8);
  v11[2] = v3;
  MEMORY[0x1E0C80A78](v3);
  v11[0] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86CBD4();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v2 + 88);
  v11[3] = type metadata accessor for DebugJournalSection(0, v6, v5, v7);
  sub_1BB872F04();
  v8 = (void *)v12[5];
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BB86CBC8();
  v10 = type metadata accessor for DebugJournalItem(0, v6, v5, v9);
  sub_1BB872F04();
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v12, &v14, v10);
  __asm { BR              X10 }
}

uint64_t sub_1BB3EBAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v3 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v3(v0 + 336, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v3)(v0 + 72, v2);
}

uint64_t sub_1BB3EBCE4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1BB3EBCF0(a1, a2, a3, a4, (void (*)(id, char *))sub_1BB3EB954);
}

uint64_t sub_1BB3EBCF0(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v15;

  v8 = sub_1BB86CBE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86CBA4();
  v12 = a3;
  v13 = a1;
  a5(v12, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1BB3EBDAC()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_presentingViewController);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_1BB3EBE08(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BB3EBDAC();

}

void sub_1BB3EBE3C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v1 = v0;
  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v3 = sub_1BB86CBE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v0 + v2[14]);
  swift_beginAccess();
  v26 = *v7;
  v21 = v0;
  v8 = v2[10];
  v9 = v2[11];
  type metadata accessor for DebugJournalSection(255, v8, v9, v10);
  v11 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v11);
  sub_1BB87312C();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    v12 = v22;
    swift_beginAccess();
    v19 = v12;
    sub_1BB872F04();
    v20 = v8;
    v13 = v24;
    v14 = v25;
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v26 = v13;
    type metadata accessor for DebugJournalItem(255, v20, v9, v15);
    v16 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v16);
    LOBYTE(v12) = sub_1BB873168();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v17 = *(void **)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80));
      MEMORY[0x1BCCDD4D8](0, v19);
      v18 = (void *)sub_1BB86CB8C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      objc_msgSend(v17, sel_scrollToRowAtIndexPath_atScrollPosition_animated_, v18, 1, objc_msgSend((id)objc_opt_self(), sel_areAnimationsEnabled));

    }
  }
}

uint64_t sub_1BB3EC0B8(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x88));
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1BB874398() & 1;
}

void sub_1BB3EC128(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BB3EBE3C();

}

void sub_1BB3EC15C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BB3EE004();

}

uint64_t sub_1BB3EC1A8(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xB8));
  sub_1BB2048E8(v2);
  v5 = v4;
  v7 = v6;
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1BA6E35A8(v5, v7), (v10 & 1) != 0))
    v11 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 56) + v9);
  else
    v11 = 1;
  swift_endAccess();
  swift_bridgeObjectRelease();
  if ((v2 >> 61) > 5 || ((1 << (v2 >> 61)) & 0x31) == 0)
    return v11;
  else
    return 1;
}

void sub_1BB3EC284(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  void *v4;
  unint64_t v5;
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  __n128 v18;
  __n128 v19[4];
  unint64_t v20;

  v4 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  if (v5 >> 61 == 4 && (v5 & 0x1FFFFFFFFFFFFFFFLL) == a2)
  {
    v14 = *(_QWORD *)(*(_QWORD *)a2 + 80);
    v15 = *(_QWORD *)(*(_QWORD *)a2 + 88);
    v16 = v4;
    sub_1BB7E9FE0(v16, v14, v15, v19);

    v17 = v19[3];
    a3[2] = v19[2];
    a3[3] = v17;
    a3[4].n128_u64[0] = v20;
    v18 = v19[1];
    *a3 = v19[0];
    a3[1] = v18;
  }
  else
  {
    v7 = *(_BYTE *)(a1 + 56);
    v8 = *(_QWORD *)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 24);
    v9 = *(_QWORD *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(_QWORD *)(a1 + 16);
    a3->n128_u64[0] = *(_QWORD *)a1;
    a3->n128_u64[1] = v11;
    a3[1].n128_u64[0] = v12;
    a3[1].n128_u64[1] = v10;
    a3[2].n128_u64[0] = v9;
    a3[2].n128_u64[1] = (unint64_t)v4;
    a3[3].n128_u64[0] = v8;
    a3[3].n128_u8[8] = v7;
    a3[4].n128_u64[0] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v4;
    swift_retain();
  }
}

void sub_1BB3EC374(_QWORD **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  unint64_t v59;
  void *v60;
  unint64_t v61;
  _QWORD *v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t *v72;
  uint64_t *v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  uint64_t v93;
  __n128 v94[4];
  uint64_t v95;
  id v96;

  v75 = a4;
  v85 = a3;
  v6 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *a2);
  v8 = v6[10];
  v7 = v6[11];
  v9 = type metadata accessor for FeedCursorTrackerSnapshot(0, v8, v7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  isUniquelyReferenced_nonNull_native = (uint64_t)&v68 - v11;
  v74 = *a1;
  v13 = (unint64_t *)((char *)a2 + v6[15]);
  swift_beginAccess();
  v94[0].n128_u64[0] = *v13;
  v86 = v8;
  v87 = v7;
  v78 = v7;
  v79 = v8;
  v15 = type metadata accessor for DebugJournalSection(255, v8, v7, v14);
  v16 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v16);
  v71 = v16;
  v17 = (uint64_t *)v9;
  v18 = v96;
  v19 = sub_1BB873DA4();
  v70 = v18;
  v72 = v13;
  *v13 = v19;
  v20 = v10;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x68);
  v73 = a2;
  v22 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16))(isUniquelyReferenced_nonNull_native, (char *)a2 + v21, v9);
  if (qword_1EF2A71D8 != -1)
    goto LABEL_46;
  while (1)
  {
    v23 = qword_1EF2C31A0;
    if ((unint64_t)qword_1EF2C31A0 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1BB873F30();
      v22 = swift_bridgeObjectRelease();
      v25 = v75;
      if (!v24)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        v26 = (id)MEMORY[0x1BCCE4630](v22, v23);
        goto LABEL_10;
      }
    }
    else
    {
      v24 = *(_QWORD *)((qword_1EF2C31A0 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v75;
      if (!v24)
        goto LABEL_48;
    }
    if (v25 == 0x8000000000000000 && v24 == -1)
      goto LABEL_53;
    v22 = v25 % v24;
    if ((v23 & 0xC000000000000001) != 0)
      goto LABEL_49;
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      v56 = sub_1BB873F30();
      v55 = swift_bridgeObjectRelease();
      if (v56)
        goto LABEL_32;
      goto LABEL_55;
    }
    if (v22 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_51;
    v26 = *(id *)(v23 + 8 * v22 + 32);
LABEL_10:
    v27 = v26;
    v69 = sub_1BB3E73A0(v74, isUniquelyReferenced_nonNull_native, v85, v26);
    v29 = v28;

    (*(void (**)(uint64_t, uint64_t *))(v20 + 8))(isUniquelyReferenced_nonNull_native, v17);
    v89.n128_u64[0] = v29;
    v23 = (uint64_t)v72;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v71);
    sub_1BB872EA4();
    swift_endAccess();
    if (!MEMORY[0x1BCCE37E4](v29, v15))
      break;
    v30 = 0;
    v20 = *(uint64_t *)((char *)v73 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v73) + 0xB8)) + 16;
    v17 = (uint64_t *)(v29 + 56);
    v76 = v29;
    v77 = v15;
    while (1)
    {
      v32 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v32 & 1) == 0)
        break;
      if (__OFADD__(v30, 1))
        goto LABEL_43;
      v84 = v30 + 1;
      v85 = v30;
      v33 = *(v17 - 2);
      v35 = *v17;
      v34 = v17[1];
      v96 = (id)v17[2];
      v36 = v17[5];
      sub_1BB2048E8(v36);
      v38 = v37;
      v40 = v39;
      swift_beginAccess();
      v80 = v36 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      v83 = v33;
      swift_bridgeObjectRetain();
      v82 = v35;
      swift_bridgeObjectRetain();
      v81 = v34;
      swift_bridgeObjectRetain();
      v96 = v96;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v89.n128_u64[0] = *(_QWORD *)v20;
      v41 = v89.n128_u64[0];
      v15 = v20;
      *(_QWORD *)v20 = 0x8000000000000000;
      v20 = sub_1BA6E35A8(v38, v40);
      v43 = *(_QWORD *)(v41 + 16);
      v44 = (v42 & 1) == 0;
      v45 = v43 + v44;
      if (__OFADD__(v43, v44))
        goto LABEL_44;
      v46 = v42;
      if (*(_QWORD *)(v41 + 24) >= v45)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v49 = (_QWORD *)v89.n128_u64[0];
          if ((v42 & 1) != 0)
            goto LABEL_12;
        }
        else
        {
          sub_1BB4C9A40();
          v49 = (_QWORD *)v89.n128_u64[0];
          if ((v46 & 1) != 0)
            goto LABEL_12;
        }
      }
      else
      {
        sub_1BB4BABFC(v45, isUniquelyReferenced_nonNull_native);
        v47 = sub_1BA6E35A8(v38, v40);
        if ((v46 & 1) != (v48 & 1))
          goto LABEL_62;
        v20 = v47;
        v49 = (_QWORD *)v89.n128_u64[0];
        if ((v46 & 1) != 0)
        {
LABEL_12:
          *(_BYTE *)(v49[7] + v20) = 1;
          goto LABEL_13;
        }
      }
      v49[(v20 >> 6) + 8] |= 1 << v20;
      v50 = (uint64_t *)(v49[6] + 16 * v20);
      *v50 = v38;
      v50[1] = v40;
      *(_BYTE *)(v49[7] + v20) = 1;
      v51 = v49[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_45;
      v49[2] = v53;
      swift_bridgeObjectRetain();
LABEL_13:
      v20 = v15;
      v23 = *(_QWORD *)v15;
      *(_QWORD *)v15 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v77;
      v31 = MEMORY[0x1BCCE37E4](v76, v77);
      v30 = v85 + 1;
      v17 += 9;
      if (v84 == v31)
        goto LABEL_27;
    }
    sub_1BB873D08();
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    v22 = swift_once();
  }
LABEL_27:
  swift_bridgeObjectRelease();
  v17 = v73;
  v15 = v75 + 1;
  if (__OFADD__(v75, 1))
    goto LABEL_52;
  v54 = (_QWORD *)((char *)v74 + *(_QWORD *)(*v74 + 264));
  swift_beginAccess();
  if (!*v54)
    goto LABEL_39;
  v55 = sub_1BB639A40();
  if (!v55)
    goto LABEL_39;
  v23 = qword_1EF2C31A0;
  if ((unint64_t)qword_1EF2C31A0 >> 62)
    goto LABEL_54;
  v56 = *(_QWORD *)((qword_1EF2C31A0 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v56)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
LABEL_32:
  if (v15 == 0x8000000000000000 && v56 == -1)
    goto LABEL_59;
  v55 = v15 % v56;
  if ((v23 & 0xC000000000000001) == 0)
  {
    if ((v55 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v55 < *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v57 = *(id *)(v23 + 8 * v55 + 32);
      goto LABEL_38;
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_56:
  v57 = (id)MEMORY[0x1BCCE4630](v55, v23);
LABEL_38:
  v58 = v57;
  v59 = swift_retain();
  sub_1BB7E9CFC(v59, v58, v15, v69, v94);
  swift_release();

  v91 = v94[2];
  v92 = v94[3];
  v93 = v95;
  v89 = v94[0];
  v90 = v94[1];
  swift_beginAccess();
  sub_1BB3EE588((uint64_t)v94);
  sub_1BB872EB0();
  swift_endAccess();
  swift_release();
  sub_1BB3EE5EC((uint64_t)v94);
LABEL_39:
  sub_1BB3E7FE0();
  v60 = *(void **)((char *)v17 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v17) + 0xC0));
  v88 = v15;
  v89.n128_u64[0] = sub_1BB87420C();
  v89.n128_u64[1] = v61;
  sub_1BB872AFC(v62);
  v63 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_setText_, v63);

  v64 = objc_msgSend(v17, sel_view);
  if (!v64)
    goto LABEL_60;
  v65 = v64;
  objc_msgSend(v64, sel_setNeedsLayout);

  v66 = objc_msgSend(v17, sel_view);
  if (v66)
  {
    v67 = v66;
    objc_msgSend(v66, sel_layoutIfNeeded);

    return;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  sub_1BB874560();
  __break(1u);
}

void sub_1BB3ECB80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v0 = sub_1BB8732F4();
  sub_1BA6A7BA0(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
  v2 = (void *)sub_1BB873A08();
  sub_1BB86EF44("Failed to load the async cursor, error=%@", 41, 2, &dword_1BA493000, v2, v0, v1);
  swift_bridgeObjectRelease();

}

void sub_1BB3ECCA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_1BB3EE424();
}

void sub_1BB3ECCE4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *a1;
  swift_release();
  v4 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x68);
  v6 = type metadata accessor for FeedCursorTrackerSnapshot(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v5);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(_QWORD *)((*v2 & *a1) + 0xA0));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(_QWORD *)((*v2 & *a1) + 0xA8));
  swift_unknownObjectRelease();
  swift_release();

}

uint64_t type metadata accessor for DebugJournalViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugJournalViewController);
}

uint64_t sub_1BB3ECE74()
{
  uint64_t v0;
  void *v1;
  uint64_t result;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB8F4F10;
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = objc_msgSend(v1, sel_systemPinkColor);
  *(_QWORD *)(v0 + 40) = objc_msgSend(v1, sel_systemBlueColor);
  *(_QWORD *)(v0 + 48) = objc_msgSend(v1, sel_systemGreenColor);
  *(_QWORD *)(v0 + 56) = objc_msgSend(v1, sel_systemTealColor);
  *(_QWORD *)(v0 + 64) = objc_msgSend(v1, sel_systemYellowColor);
  *(_QWORD *)(v0 + 72) = objc_msgSend(v1, sel_systemRedColor);
  *(_QWORD *)(v0 + 80) = objc_msgSend(v1, sel_systemOrangeColor);
  *(_QWORD *)(v0 + 88) = objc_msgSend(v1, sel_systemPurpleColor);
  *(_QWORD *)(v0 + 96) = objc_msgSend(v1, sel_systemIndigoColor);
  result = sub_1BB872DCC();
  qword_1EF2C31A0 = v0;
  return result;
}

__n128 sub_1BB3ECFF4@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, void *a4@<X5>, uint64_t a5@<X6>, void (*a6)(_OWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t)@<X7>, uint64_t a7@<X8>)
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;
  __int128 v21;
  __n128 result;
  _QWORD v23[3];
  _OWORD v24[4];
  uint64_t v25;

  v13 = *a2;
  v14 = a2[1];
  v15 = a2[2];
  sub_1BB3ED0E0(*a2);
  v17 = v16;
  v19 = v18 & 1;
  v23[0] = v13;
  v23[1] = v14;
  v23[2] = v15;
  swift_bridgeObjectRetain();
  sub_1BA67035C(v14);
  v20 = a4;
  swift_retain();
  a6(v24, v23, v17, v19, a1, a3, v20, a5);
  v21 = v24[3];
  *(_OWORD *)(a7 + 32) = v24[2];
  *(_OWORD *)(a7 + 48) = v21;
  *(_QWORD *)(a7 + 64) = v25;
  result = (__n128)v24[1];
  *(_OWORD *)a7 = v24[0];
  *(__n128 *)(a7 + 16) = result;
  return result;
}

void sub_1BB3ED0E0(uint64_t a1)
{
  _BYTE v1[72];
  _BYTE v2[128];
  uint64_t v3;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BA670450(a1 + 32, (uint64_t)v2);
    sub_1BA5B0E6C((uint64_t)&v3, (uint64_t)v1);
    sub_1BA67036C((uint64_t)v2);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BB3ED1A8);
}

uint64_t sub_1BB3ED1CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  void *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  _QWORD *v68;
  char v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  _QWORD *v82;
  void *v83;
  id v84;
  uint64_t result;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  objc_class *ObjectType;
  uint64_t v91;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v101;
  objc_super v102;
  _QWORD *v103;
  uint64_t v104;
  __n128 v105[4];

  v11 = v10;
  ObjectType = (objc_class *)swift_getObjectType();
  v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v17 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v11);
  v18 = v17[16];
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v20 = v11;
  *(_QWORD *)((char *)v11 + v18) = objc_msgSend(v19, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v21 = *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0xB8);
  type metadata accessor for DebugJournalSectionStateManager();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = MEMORY[0x1E0DEE9E0];
  v95 = v21;
  *(_QWORD *)(v20 + v21) = v22;
  v89 = *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0xC0);
  *(_QWORD *)(v20 + v89) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0x90)) = a1;
  *(_QWORD *)(v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0x98)) = a2;
  v91 = a3;
  sub_1BA4C010C(a3, v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0xA0));
  sub_1BA4C010C(a4, v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0xA8));
  v23 = (_QWORD *)(v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0xB0));
  *v23 = a5;
  v23[1] = a6;
  *(_QWORD *)(v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0x60)) = a7;
  v24 = v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0x68);
  v25 = v17[10];
  v26 = v17[11];
  v28 = type metadata accessor for FeedCursorTrackerSnapshot(0, v25, v26, v27);
  isUniquelyReferenced_nonNull_native = a8;
  (*(void (**)(uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24);
  v96 = (_QWORD *)v20;
  v30 = (_QWORD *)(v20 + *(_QWORD *)((*v16 & *(_QWORD *)v20) + 0x88));
  *v30 = a9;
  v30[1] = a10;
  v32 = type metadata accessor for DebugJournalSection(0, v25, v26, v31);
  swift_retain_n();
  v88 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v104 = sub_1BB872748();
  v97 = v32;
  if (a7 < 0)
  {
    v33 = 0;
    v20 = 0;
    v25 = a7 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_35:
    v54 = qword_1EF2A71D8;
    swift_retain_n();
    if (v54 == -1)
    {
LABEL_36:
      v50 = qword_1EF2C31A0;
      if ((unint64_t)qword_1EF2C31A0 >> 62)
      {
        swift_bridgeObjectRetain();
        v55 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v55)
          goto LABEL_38;
      }
      else
      {
        v55 = *(_QWORD *)((qword_1EF2C31A0 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v55)
        {
LABEL_38:
          if (v20 == 0x8000000000000000 && v55 == -1)
            goto LABEL_81;
          v56 = v20 % v55;
          if ((v50 & 0xC000000000000001) == 0)
          {
            if ((v56 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v56 < *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v57 = *(id *)(v50 + 8 * v56 + 32);
              goto LABEL_44;
            }
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            sub_1BA62ECD4(a7);
            __break(1u);
LABEL_82:
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = sub_1BB873F30();
            v49 = swift_bridgeObjectRelease();
            if (isUniquelyReferenced_nonNull_native)
              goto LABEL_27;
            goto LABEL_83;
          }
LABEL_77:
          v57 = (id)MEMORY[0x1BCCE4630](v56, v50);
LABEL_44:
          v58 = v57;
          sub_1BB3E758C(v25, isUniquelyReferenced_nonNull_native, v33, v57);
          v60 = v59;

          v105[0].n128_u64[0] = v60;
          v61 = sub_1BB872EE0();
          MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v61);
          v50 = (uint64_t)&v104;
          sub_1BB872EA4();
          sub_1BA62ECD4(a7);
          swift_release_n();
          v43 = __OFADD__(v20++, 1);
          if (!v43)
          {
            v87 = 0xF000000000000007;
            goto LABEL_46;
          }
          goto LABEL_80;
        }
      }
      v56 = sub_1BA62ECD4(a7);
      __break(1u);
      goto LABEL_77;
    }
LABEL_74:
    swift_once();
    goto LABEL_36;
  }
  v32 = 0;
  v33 = 0;
  while (1)
  {
    v34 = qword_1EF2A71D8;
    swift_retain_n();
    if (v34 != -1)
      swift_once();
    v35 = qword_1EF2C31A0;
    if ((unint64_t)qword_1EF2C31A0 >> 62)
    {
      swift_bridgeObjectRetain();
      v36 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v36)
        goto LABEL_68;
    }
    else
    {
      v36 = *(_QWORD *)((qword_1EF2C31A0 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v36)
        goto LABEL_68;
    }
    v37 = v32 % v36;
    if ((v35 & 0xC000000000000001) != 0)
    {
      v38 = (id)MEMORY[0x1BCCE4630](v37, v35);
    }
    else
    {
      if ((v37 & 0x8000000000000000) != 0)
        goto LABEL_69;
      if (v37 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_71;
      v38 = *(id *)(v35 + 8 * v37 + 32);
    }
    v39 = v38;
    v40 = sub_1BB3E73A0((_QWORD *)a7, a8, v33, v38);
    v42 = v41;

    v105[0].n128_u64[0] = v42;
    v25 = sub_1BB872EE0();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v25);
    sub_1BB872EA4();
    sub_1BA62ECD4(a7);
    v43 = __OFADD__(v33, v40);
    v33 += v40;
    if (v43)
      goto LABEL_70;
    v44 = (uint64_t *)(a7 + *(_QWORD *)(*(_QWORD *)a7 + 264));
    swift_beginAccess();
    v45 = *v44;
    if (v45)
      v46 = FeedNextCursor.syncCursor.getter();
    else
      v46 = 0;
    v47 = FeedCursorContainer.init(optionalCursor:)(v46);
    v20 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if ((~v47 & 0xF000000000000007) == 0)
      break;
    v48 = v47;
    swift_release_n();
    ++v32;
    a7 = v48;
    if ((v48 & 0x8000000000000000) != 0)
    {
      v25 = v48 & 0x7FFFFFFFFFFFFFFFLL;
      a7 = v48;
      v32 = v97;
      goto LABEL_35;
    }
  }
  v87 = v47;
  if (!v45)
  {
    swift_release_n();
    v32 = v97;
    goto LABEL_46;
  }
  v49 = sub_1BB639A40();
  v32 = v97;
  if (!v49)
    goto LABEL_34;
  v50 = qword_1EF2C31A0;
  if ((unint64_t)qword_1EF2C31A0 >> 62)
    goto LABEL_82;
  isUniquelyReferenced_nonNull_native = *(_QWORD *)((qword_1EF2C31A0 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_83:
    __break(1u);
LABEL_84:
    v51 = (id)MEMORY[0x1BCCE4630](v49, v50);
LABEL_33:
    v52 = v51;
    v53 = swift_retain();
    sub_1BB7E9CFC(v53, v52, v20, v33, v105);
    swift_release();

    sub_1BB3EE588((uint64_t)v105);
    sub_1BB872EB0();
    swift_release();
    sub_1BB3EE5EC((uint64_t)v105);
LABEL_34:
    swift_release_n();
LABEL_46:
    a7 = v104;
    v62 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    *(_QWORD *)((char *)v96 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v96) + 0x78)) = v104;
    *(_QWORD *)((char *)v96 + *(_QWORD *)((*v62 & *v96) + 0x70)) = a7;
    swift_bridgeObjectRetain_n();
    if (!MEMORY[0x1BCCE37E4](a7, v32))
    {
      swift_bridgeObjectRelease();
LABEL_64:
      v80 = *(void **)((char *)v96 + v89);
      v103 = (_QWORD *)v20;
      v81 = v80;
      sub_1BB87420C();
      sub_1BB872AFC(v82);
      v83 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v81, sel_setText_, v83);

      v102.receiver = v96;
      v102.super_class = ObjectType;
      v84 = objc_msgSendSuper2(&v102, sel_initWithNibName_bundle_, 0, 0);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      sub_1BA62ECD4(v87);
      __swift_destroy_boxed_opaque_existential_1(a4);
      __swift_destroy_boxed_opaque_existential_1(v91);
      return (uint64_t)v84;
    }
    v86 = v20;
    v25 = 0;
    v20 = a7 + 56;
    v94 = a7;
    while (1)
    {
      sub_1BB872E38();
      if (__OFADD__(v25, 1))
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        sub_1BA62ECD4(a7);
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v101 = v25 + 1;
      v63 = *(void **)(v20 + 16);
      v32 = *(_QWORD *)((char *)v96 + v95);
      sub_1BB2048E8(*(_QWORD *)(v20 + 40));
      a7 = v64;
      v66 = v65;
      swift_beginAccess();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67 = v63;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v103 = *(_QWORD **)(v32 + 16);
      v68 = v103;
      *(_QWORD *)(v32 + 16) = 0x8000000000000000;
      v33 = sub_1BA6E35A8(a7, v66);
      v70 = v68[2];
      v71 = (v69 & 1) == 0;
      v72 = v70 + v71;
      if (__OFADD__(v70, v71))
        goto LABEL_67;
      v73 = v69;
      if (v68[3] >= v72)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v76 = v103;
          if ((v69 & 1) == 0)
            goto LABEL_58;
        }
        else
        {
          sub_1BB4C9A40();
          v76 = v103;
          if ((v73 & 1) == 0)
            goto LABEL_58;
        }
      }
      else
      {
        sub_1BB4BABFC(v72, isUniquelyReferenced_nonNull_native);
        v74 = sub_1BA6E35A8(a7, v66);
        if ((v73 & 1) != (v75 & 1))
          goto LABEL_88;
        v33 = v74;
        v76 = v103;
        if ((v73 & 1) == 0)
        {
LABEL_58:
          v76[(v33 >> 6) + 8] |= 1 << v33;
          v77 = (uint64_t *)(v76[6] + 16 * v33);
          *v77 = a7;
          v77[1] = v66;
          *(_BYTE *)(v76[7] + v33) = 1;
          v78 = v76[2];
          v43 = __OFADD__(v78, 1);
          v79 = v78 + 1;
          if (v43)
            goto LABEL_73;
          v76[2] = v79;
          swift_bridgeObjectRetain();
          goto LABEL_49;
        }
      }
      *(_BYTE *)(v76[7] + v33) = 1;
LABEL_49:
      *(_QWORD *)(v32 + 16) = v76;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      a7 = v94;
      v32 = v97;
      v20 += 72;
      ++v25;
      if (v101 == MEMORY[0x1BCCE37E4](v94, v97))
      {
        swift_bridgeObjectRelease();
        v20 = v86;
        goto LABEL_64;
      }
    }
  }
LABEL_27:
  if (v20 == 0x8000000000000000 && isUniquelyReferenced_nonNull_native == -1)
    goto LABEL_87;
  v49 = v20 % isUniquelyReferenced_nonNull_native;
  if ((v50 & 0xC000000000000001) != 0)
    goto LABEL_84;
  if ((v49 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v49 < *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v51 = *(id *)(v50 + 8 * v49 + 32);
    goto LABEL_33;
  }
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB3EDCCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;

  v18 = objc_allocWithZone(v10);
  return sub_1BB3ED1CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1BB3EDD64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80);
  *(_QWORD *)((char *)v0 + v2) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v3 = *(_QWORD *)((*v1 & *v0) + 0xB8);
  type metadata accessor for DebugJournalSectionStateManager();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)((char *)v0 + v3) = v4;
  v5 = *(_QWORD *)((*v1 & *v0) + 0xC0);
  *(_QWORD *)((char *)v0 + v5) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB3EDE80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  v3 = type metadata accessor for DebugJournalSection(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v4 = swift_bridgeObjectRetain();
  v5 = MEMORY[0x1BCCE37B4](v4, v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB3EDF0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  type metadata accessor for DebugJournalSection(0, v2, v3, v4);
  sub_1BB872F04();
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v6 = type metadata accessor for DebugJournalItem(0, v2, v3, v5);
  v7 = MEMORY[0x1BCCE37B4](v9, v6);
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1BB3EE004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1BB3EE450(0, &qword_1EF2AB7C8, MEMORY[0x1E0DB5718]);
  v1 = v0;
  v31 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v26 - v2;
  v4 = sub_1BB86D2A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6DC310(0, (unint64_t *)&unk_1EF2C3230, (void (*)(uint64_t))MEMORY[0x1E0DB57C8]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86D360() - 8) + 80);
  v32 = (v8 + 32) & ~v8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  v34 = v9;
  v35 = 0x206E6F6973726556;
  v36 = 0xE800000000000000;
  if (qword_1EF2A6C98 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  v29 = v36;
  v30 = v35;
  sub_1BA6A7BA0(0, (unint64_t *)&qword_1EF2B16D0, (unint64_t *)&qword_1EF2C3240);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
  sub_1BB3EE450(0, &qword_1EF2AB7F8, MEMORY[0x1E0DB5770]);
  v13 = v12;
  if (qword_1ED39E290 != -1)
    swift_once();
  v14 = *(void (**)(_QWORD))(v5 + 104);
  v28 = *MEMORY[0x1E0DB55F8];
  v15 = v4;
  v27 = (void (*)(char *, _QWORD, uint64_t))v14;
  v14(v7);
  v16 = *MEMORY[0x1E0DB5710];
  v17 = v1;
  v31 = *(_QWORD *)(v31 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v31)(v3, v16, v1);
  swift_retain();
  v18 = sub_1BB86D330();
  *(_QWORD *)(v11 + 56) = v13;
  v19 = sub_1BB1B0158();
  *(_QWORD *)(v11 + 64) = v19;
  *(_QWORD *)(v11 + 32) = v18;
  if (qword_1ED39E298 != -1)
    swift_once();
  v27(v7, v28, v15);
  ((void (*)(char *, uint64_t, uint64_t))v31)(v3, v16, v17);
  swift_retain();
  v20 = sub_1BB86D330();
  *(_QWORD *)(v11 + 96) = v13;
  *(_QWORD *)(v11 + 104) = v19;
  *(_QWORD *)(v11 + 72) = v20;
  sub_1BB86D354();
  v21 = sub_1BB8703CC();
  swift_allocObject();
  v22 = sub_1BB8703C0();
  v37 = v21;
  v38 = MEMORY[0x1E0DB8E40];
  v35 = v22;
  v23 = objc_allocWithZone((Class)sub_1BB87072C());
  v24 = (void *)sub_1BB870720();
  v25 = objc_msgSend(objc_allocWithZone((Class)sub_1BB870D2C()), sel_initWithRootViewController_, v24);

  objc_msgSend(v33, sel_presentViewController_animated_completion_, v25, 1, 0);
}

void sub_1BB3EE424()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BB3EE450(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BB3EE4A4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BB3EC0B8(a1, *(_QWORD **)(v1 + 16)) & 1;
}

BOOL sub_1BB3EE4C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = *(_QWORD *)(a1 + 64);
  v4 = v2 >> 61 == 6;
  v3 = v2 & 0x1FFFFFFFFFFFFFFFLL;
  return v4 && v3 == v1;
}

BOOL sub_1BB3EE4DC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = *(_QWORD *)(a1 + 64);
  v4 = v2 >> 61 == 1;
  v3 = v2 & 0x1FFFFFFFFFFFFFFFLL;
  return v4 && v3 == v1;
}

void sub_1BB3EE4F8(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;

  sub_1BB3EC284(a1, v2, a2);
}

uint64_t sub_1BB3EE514()
{
  uint64_t v1;

  sub_1BB86E71C();
  return v1;
}

uint64_t sub_1BB3EE54C()
{
  return swift_deallocObject();
}

void sub_1BB3EE55C(_QWORD **a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1BB3EC374(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

BOOL sub_1BB3EE574(uint64_t a1)
{
  return *(_QWORD *)(a1 + 64) != 0xE000000000000000;
}

uint64_t sub_1BB3EE588(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_1BB3EE5EC(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

double sub_1BB3EE650@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB3EE8D4(a1, a2, (void (*)(_OWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t))sub_1BB7EA550, a3);
}

double sub_1BB3EE65C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1BB3EE8F8(a1, a2).n128_u64[0];
  return result;
}

void sub_1BB3EE670()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C3248)
  {
    sub_1BA4AD288(255, &qword_1ED3AADE0, (uint64_t)&type metadata for FeedJournalEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0(&qword_1EF2C3258, &qword_1ED3AADE0, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E0DEAF38]);
    v0 = sub_1BB873F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C3248);
  }
}

uint64_t sub_1BB3EE710(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3EC1A8(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_1BB3EE72C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB3EE750()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1BB3EE7A0()
{
  uint64_t v0;

  sub_1BB3EB120(*(_QWORD *)(v0 + 32), v0 + 40, *(_BYTE *)(v0 + 112));
}

uint64_t sub_1BB3EE7B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3EABB8(a1, *(_QWORD **)(v1 + 16), (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedDeferredCursorGroup, (uint64_t (*)(uint64_t))sub_1BB713290) & 1;
}

uint64_t sub_1BB3EE7E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3EABB8(a1, *(_QWORD **)(v1 + 16), (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedCursorGroup, (uint64_t (*)(uint64_t))FeedCursorGroup.identifier.getter) & 1;
}

BOOL sub_1BB3EE80C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = *a1;
  return v4 >= FeedCursor.nextSlotIndex.getter((uint64_t)a1, a2, a3, a4);
}

uint64_t sub_1BB3EE83C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB3EAB50(a1);
}

uint64_t sub_1BB3EE858()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB3EE87C()
{
  uint64_t *v0;

  return sub_1BB3E7E20(v0[4], v0[2], v0[3]);
}

void sub_1BB3EE888(uint64_t a1)
{
  uint64_t *v1;

  sub_1BB3E80F0(a1, v1[4], v1[2], v1[3], 0);
}

void sub_1BB3EE8A8(uint64_t a1)
{
  uint64_t *v1;

  sub_1BB3E80F0(a1, v1[4], v1[2], v1[3], 1);
}

double sub_1BB3EE8C8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB3EE8D4(a1, a2, (void (*)(_OWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t))sub_1BB7EA6B8, a3);
}

double sub_1BB3EE8D4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void (*a3)(_OWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  double result;

  *(_QWORD *)&result = sub_1BB3ECFF4(a1, a2, v4[4], (void *)v4[5], v4[6], a3, a4).n128_u64[0];
  return result;
}

__n128 sub_1BB3EE8F8@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  __n128 result;
  _OWORD v6[4];
  uint64_t v7;

  (*(void (**)(_OWORD *__return_ptr, _QWORD, _QWORD *))(v2 + 32))(v6, *a1, a1 + 1);
  v4 = v6[3];
  *(_OWORD *)(a2 + 32) = v6[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 64) = v7;
  result = (__n128)v6[1];
  *(_OWORD *)a2 = v6[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1BB3EE960@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB3EE83C(a1);
}

uint64_t FormatKeyPlayerDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatKeyPlayerDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatKeyPlayerDataVisualization.eventIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatKeyPlayerDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatKeyPlayerDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatKeyPlayerDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatKeyPlayerDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatKeyPlayerDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatKeyPlayerDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

_QWORD *FormatKeyPlayerDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1BB3EEC48()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3EEC84 + 4 * byte_1BB913AF0[*v0]))(0x656449746E657665, 0xEF7265696669746ELL);
}

uint64_t sub_1BB3EEC84()
{
  return 0x746E656449676174;
}

uint64_t sub_1BB3EECA8()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB3EECC4()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB3EECE0()
{
  sub_1BB3EF040();
  return sub_1BB874710();
}

uint64_t sub_1BB3EED08()
{
  sub_1BB3EF040();
  return sub_1BB87471C();
}

uint64_t FormatKeyPlayerDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatKeyPlayerDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatKeyPlayerDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD *v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1BB3EF56C(0, &qword_1EF2C3268, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3EF040();
  sub_1BB8746C8();
  v16 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v16 = 1;
    sub_1BB87417C();
    swift_beginAccess();
    v11 = *(_QWORD *)(v3 + 48);
    if (*(_QWORD *)(v11 + 16))
    {
      v17 = 2;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v15 = v12;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1BB3EF514();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 56);
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = 3;
      v15 = (_QWORD *)v13;
      sub_1BB3EF514();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB3EF040()
{
  unint64_t result;

  result = qword_1EF2C3270;
  if (!qword_1EF2C3270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913CBC, &type metadata for FormatKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3270);
  }
  return result;
}

uint64_t FormatKeyPlayerDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatKeyPlayerDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatKeyPlayerDataVisualization.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v38 = *v1;
  sub_1BA89B794();
  v34 = v3;
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v36 = v5;
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3EF56C(0, &qword_1EF2C3280, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3EF040();
  v13 = v37;
  v14 = v1;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    v18 = (uint64_t)a1;
  }
  else
  {
    v15 = v7;
    v16 = v36;
    v37 = a1;
    v44 = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v17;
    v43 = 1;
    v1[4] = sub_1BB874098();
    v1[5] = v20;
    v30 = v1;
    v42 = 2;
    v21 = sub_1BB8740F8();
    v31 = v12;
    if ((v21 & 1) != 0)
    {
      v39 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      sub_1BB8740D4();
      v22 = v9;
      v23 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v16);
    }
    else
    {
      v22 = v9;
      v23 = MEMORY[0x1E0DEE9E8];
    }
    v14 = v30;
    v30[6] = v23;
    v41 = 3;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v40 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v24 = v34;
      v25 = v35;
      sub_1BB8740D4();
      v26 = v22;
      v27 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v24);
    }
    else
    {
      v27 = MEMORY[0x1E0DEE9D8];
      v26 = v22;
    }
    v28 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v26);
    v14[7] = v27;
    v18 = v28;
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v14;
}

_QWORD *sub_1BB3EF494@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatKeyPlayerDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB3EF4E8(_QWORD *a1)
{
  return FormatKeyPlayerDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BB3EF508(_QWORD **a1, _QWORD **a2)
{
  return static FormatKeyPlayerDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BB3EF514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C3278;
  if (!qword_1EF2C3278)
  {
    sub_1BB3EF56C(255, &qword_1EF2C3268, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C3278);
  }
  return result;
}

void sub_1BB3EF56C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB3EF040();
    v7 = a3(a1, &type metadata for FormatKeyPlayerDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB3EF5C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1EF2B1C18, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization, (uint64_t)&protocol conformance descriptor for FormatKeyPlayerDataVisualization);
  a1[2] = sub_1BA50AD30(&qword_1EF2B1C58, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization, (uint64_t)&protocol conformance descriptor for FormatKeyPlayerDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2C3288, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization, (uint64_t)&protocol conformance descriptor for FormatKeyPlayerDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatKeyPlayerDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BB3EF660@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3EF6AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatKeyPlayerDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatKeyPlayerDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatKeyPlayerDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for FormatKeyPlayerDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB3EF770 + 4 * byte_1BB913AF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB3EF7A4 + 4 * byte_1BB913AF4[v4]))();
}

uint64_t sub_1BB3EF7A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3EF7AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3EF7B4);
  return result;
}

uint64_t sub_1BB3EF7C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3EF7C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB3EF7CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3EF7D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatKeyPlayerDataVisualization.CodingKeys()
{
  return &type metadata for FormatKeyPlayerDataVisualization.CodingKeys;
}

unint64_t sub_1BB3EF7F4()
{
  unint64_t result;

  result = qword_1EF2C3350;
  if (!qword_1EF2C3350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913C94, &type metadata for FormatKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3350);
  }
  return result;
}

unint64_t sub_1BB3EF83C()
{
  unint64_t result;

  result = qword_1EF2C3358;
  if (!qword_1EF2C3358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913C04, &type metadata for FormatKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3358);
  }
  return result;
}

unint64_t sub_1BB3EF884()
{
  unint64_t result;

  result = qword_1EF2C3360;
  if (!qword_1EF2C3360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913C2C, &type metadata for FormatKeyPlayerDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3360);
  }
  return result;
}

uint64_t FormatContentSizeCategoryValue.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3EF900 + 4 * byte_1BB913D10[*v0]))(0x616D536172747865, 0xEA00000000006C6CLL);
}

uint64_t sub_1BB3EF900()
{
  return 29560;
}

uint64_t sub_1BB3EF90C()
{
  return 0x6C6C616D73;
}

uint64_t sub_1BB3EF920()
{
  return 115;
}

uint64_t sub_1BB3EF92C()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1BB3EF940()
{
  return 109;
}

uint64_t sub_1BB3EF94C()
{
  return 0x656772616CLL;
}

uint64_t sub_1BB3EF960()
{
  return 108;
}

uint64_t sub_1BB3EF96C()
{
  return 0x72614C6172747865;
}

uint64_t sub_1BB3EF988()
{
  return 27768;
}

uint64_t sub_1BB3EF994()
{
  return 0x7478456172747865;
}

uint64_t sub_1BB3EF9B8()
{
  return 7108728;
}

unint64_t sub_1BB3EF9CC()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB3EFAC8()
{
  return 0x6C7878787861;
}

NewsFeed::FormatContentSizeCategoryValue_optional __swiftcall FormatContentSizeCategoryValue.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatContentSizeCategoryValue_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 6;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
      goto LABEL_7;
    case 5:
      v5 = 5;
LABEL_7:
      v6 = v5;
      break;
    case 6:
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    default:
      v6 = 24;
      break;
  }
  *v2 = v6;
  return result;
}

unint64_t sub_1BB3EFC14()
{
  unint64_t result;

  result = qword_1ED3D2BB0;
  if (!qword_1ED3D2BB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryValue, &type metadata for FormatContentSizeCategoryValue);
    atomic_store(result, (unint64_t *)&qword_1ED3D2BB0);
  }
  return result;
}

uint64_t sub_1BB3EFC58()
{
  sub_1BB8745CC();
  FormatContentSizeCategoryValue.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3EFCBC()
{
  FormatContentSizeCategoryValue.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3EFD0C()
{
  sub_1BB8745CC();
  FormatContentSizeCategoryValue.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatContentSizeCategoryValue_optional sub_1BB3EFD6C(Swift::String *a1)
{
  return FormatContentSizeCategoryValue.init(rawValue:)(*a1);
}

uint64_t sub_1BB3EFD78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatContentSizeCategoryValue.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB3EFD9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F03D0(*a1, *a2);
}

unint64_t sub_1BB3EFDA8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB3EFDD4();
  result = sub_1BB3EFE18();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB3EFDD4()
{
  unint64_t result;

  result = qword_1EF2C3368;
  if (!qword_1EF2C3368)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryValue, &type metadata for FormatContentSizeCategoryValue);
    atomic_store(result, (unint64_t *)&qword_1EF2C3368);
  }
  return result;
}

unint64_t sub_1BB3EFE18()
{
  unint64_t result;

  result = qword_1ED3C4320;
  if (!qword_1ED3C4320)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryValue, &type metadata for FormatContentSizeCategoryValue);
    atomic_store(result, (unint64_t *)&qword_1ED3C4320);
  }
  return result;
}

unint64_t sub_1BB3EFE5C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEE4ECC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3EFE80(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB3EFEB4();
  a1[2] = sub_1BB3EFEF8();
  result = sub_1BB3EFC14();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3EFEB4()
{
  unint64_t result;

  result = qword_1ED3C21D8;
  if (!qword_1ED3C21D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryValue, &type metadata for FormatContentSizeCategoryValue);
    atomic_store(result, (unint64_t *)&qword_1ED3C21D8);
  }
  return result;
}

unint64_t sub_1BB3EFEF8()
{
  unint64_t result;

  result = qword_1ED3C4318;
  if (!qword_1ED3C4318)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryValue, &type metadata for FormatContentSizeCategoryValue);
    atomic_store(result, (unint64_t *)&qword_1ED3C4318);
  }
  return result;
}

uint64_t sub_1BB3EFF3C()
{
  sub_1BB3EFE18();
  return sub_1BB872D60();
}

uint64_t sub_1BB3EFF98(_QWORD *a1)
{
  return FormatContentSizeCategoryValue.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatContentSizeCategoryValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1BB3EFFF8 + 4 * byte_1BB913D45[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1BB3F002C + 4 * byte_1BB913D40[v4]))();
}

uint64_t sub_1BB3F002C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3F0034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3F003CLL);
  return result;
}

uint64_t sub_1BB3F0048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3F0050);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1BB3F0054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3F005C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategoryValue()
{
  return &type metadata for FormatContentSizeCategoryValue;
}

uint64_t sub_1BB3F0078(char *a1)
{
  return **((_QWORD **)&unk_1E730AF48 + *a1);
}

uint64_t FeedPuzzle.init(puzzle:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = xmmword_1BB881B60;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = a1;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 72) = 3;
  sub_1BA6A4404((uint64_t)v13, a2 + 88, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1BA6A4404((uint64_t)v11, a2 + 128, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  *(_QWORD *)(a2 + 80) = MEMORY[0x1E0DEE9E8];
  v8 = (void *)swift_unknownObjectRetain();
  sub_1BB3F0B88(v8, &v10);
  swift_unknownObjectRelease();
  sub_1BA65DBBC((uint64_t)v11, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  result = sub_1BA65DBBC((uint64_t)v13, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  *(_QWORD *)a2 = v10;
  return result;
}

void FeedPuzzle.userHasAccess.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB3F0224()
{
  unsigned __int8 v0;

  v0 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return (v0 ^ 1) & 1;
}

uint64_t FeedPuzzle.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedPuzzle.debugTitle.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

uint64_t FeedPuzzle.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedPuzzle.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPuzzle.additionalFormatFeedItems.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_puzzleType);
  v2 = objc_msgSend(v1, sel_identifier);
  v3 = sub_1BB8729A0();
  v5 = v4;

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9D60, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v6 + 56) = &type metadata for FeedPuzzleType;
  *(_QWORD *)(v6 + 64) = sub_1BACB5BC8();
  v7 = swift_allocObject();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_BYTE *)(v7 + 32) = 1;
  *(_OWORD *)(v7 + 40) = xmmword_1BB88C450;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 72) = v1;
  v16 = v6;
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = &type metadata for FeedTag;
  *(_QWORD *)(inited + 64) = sub_1BA6A96BC();
  v9 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v9;
  sub_1BA75A650(0, 0xDuLL);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BA75A650(0, 0xDuLL);
  swift_bridgeObjectRetain();
  v10 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  *(_OWORD *)(v9 + 96) = xmmword_1BB87FC90;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 128) = 0u;
  *(_OWORD *)(v9 + 144) = 0u;
  *(_BYTE *)(v9 + 160) = 0;
  *(_QWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 24) = v13;
  *(_QWORD *)(v9 + 32) = v1;
  *(_BYTE *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 64) = 0;
  *(_QWORD *)(v9 + 72) = 0xE000000000000000;
  *(_QWORD *)(v9 + 48) = 0;
  *(_BYTE *)(v9 + 56) = 0;
  v14 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v9 + 80) = 0;
  *(_QWORD *)(v9 + 88) = v14;
  sub_1BA6E0CBC(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6B017C(inited);
  sub_1BA6E0CBC(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t PuzzleAccessLevel.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6563634165657266;
  if (*v0 != 1)
    v1 = 0x7373656363416F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6563634164696170;
}

NewsFeed::PuzzleAccessLevel_optional __swiftcall PuzzleAccessLevel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::PuzzleAccessLevel_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BB3F0634(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FF690(*a1, *a2);
}

uint64_t sub_1BB3F0640()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3F06E0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3F075C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleAccessLevel_optional sub_1BB3F07F8(Swift::String *a1)
{
  return PuzzleAccessLevel.init(rawValue:)(*a1);
}

void sub_1BB3F0804(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = 0xEA00000000007373;
  v3 = *v1;
  v4 = 0x6563634165657266;
  v5 = 0xE800000000000000;
  if (v3 == 1)
    v5 = 0xEA00000000007373;
  else
    v4 = 0x7373656363416F6ELL;
  v6 = v3 == 0;
  if (*v1)
    v7 = v4;
  else
    v7 = 0x6563634164696170;
  if (!v6)
    v2 = v5;
  *a1 = v7;
  a1[1] = v2;
}

uint64_t sub_1BB3F0864()
{
  sub_1BB3F2174();
  return sub_1BB872D60();
}

uint64_t sub_1BB3F08C0()
{
  sub_1BB3F2174();
  return sub_1BB872D0C();
}

void FeedPuzzle.traits.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void FeedPuzzle.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedPuzzle.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t FeedPuzzle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPuzzle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedPuzzle.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FeedPuzzle.puzzle.getter()
{
  return swift_unknownObjectRetain();
}

void *FeedPuzzle.puzzleHistoryItem.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void FeedPuzzle.accessState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

uint64_t FeedPuzzle.additionalContextMenuOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedPuzzle.puzzleImageShareAttributeProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA6A4404(v1 + 88, a1, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
}

uint64_t FeedPuzzle.puzzleRankProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA6A4404(v1 + 128, a1, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
}

uint64_t FeedPuzzle.init(identifier:puzzle:puzzleHistoryItem:accessState:puzzleImageShareAttributeProvider:puzzleRankProvider:additionalContextMenuOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v14;
  id v15;
  void *v16;
  uint64_t result;
  uint64_t v18;

  v14 = *a5;
  *(_QWORD *)(a9 + 8) = 0;
  *(_BYTE *)(a9 + 16) = 1;
  *(_OWORD *)(a9 + 24) = xmmword_1BB881B60;
  *(_QWORD *)(a9 + 40) = a1;
  *(_QWORD *)(a9 + 48) = a2;
  *(_QWORD *)(a9 + 56) = a3;
  *(_QWORD *)(a9 + 64) = a4;
  *(_BYTE *)(a9 + 72) = v14;
  sub_1BA6A4404(a6, a9 + 88, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1BA6A4404(a7, a9 + 128, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  *(_QWORD *)(a9 + 80) = a8;
  v15 = a4;
  v16 = (void *)swift_unknownObjectRetain();
  sub_1BB3F0B88(v16, &v18);
  swift_unknownObjectRelease();

  sub_1BA65DBBC(a7, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  result = sub_1BA65DBBC(a6, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  *(_QWORD *)a9 = v18;
  return result;
}

void sub_1BB3F0B88(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = objc_msgSend(a1, sel_puzzleType);
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v21);
  swift_unknownObjectRelease();
  v5 = v21;
  if ((v21 & 0xFFFFFF7FFFFFFFFFLL) == 0)
    v5 = 0;
  v6 = v5 | 0x8000000000;
  v7 = objc_msgSend(a1, sel_teaserClue);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BB8729A0();
    v11 = v10;

    swift_bridgeObjectRelease();
    v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v12 = v9 & 0xFFFFFFFFFFFFLL;
    v13 = v12 == 0;
    v14 = (v6 >> 41) & 1;
    if (v13)
      LODWORD(v14) = 1;
    if (!(_DWORD)v14)
      v6 |= 0x20000000000uLL;
  }
  v15 = objc_msgSend(a1, sel_thumbnailSmallImageAssetHandle);

  v16 = (v6 >> 2) & 1;
  if (!v15)
    LODWORD(v16) = 1;
  if ((_DWORD)v16)
    v17 = v6;
  else
    v17 = v6 | 4;
  v18 = objc_msgSend(a1, sel_thumbnailLargeImageAssetHandle);

  v19 = (v17 >> 42) & 1;
  if (!v18)
    LODWORD(v19) = 1;
  if ((_DWORD)v19)
    v20 = v17;
  else
    v20 = v17 | 0x40000000000;
  *a2 = v20;
}

uint64_t sub_1BB3F0CDC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

uint64_t FeedPuzzle.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA93EB58(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F0D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA93EB58(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeedPuzzle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t FeedPuzzle.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB3F1A14();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB3F0E34()
{
  sub_1BB3F2130();
  return sub_1BB86EC50();
}

uint64_t FeedPuzzle.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - v12;
  v14 = *(void **)(v1 + 56);
  v15 = objc_msgSend(v14, sel_identifier, v11);
  if (!v15)
  {
    sub_1BB8729A0();
    v15 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleID_, v15);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  sub_1BB86C5EC();

  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v5, v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_8:
    sub_1BA7F0A80((uint64_t)v5);
    v20 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
  v17(v13, v5, v6);
  sub_1BB86C58C();
  v18 = objc_msgSend(v14, sel_title);
  if (v18)
  {
    v19 = v18;
    sub_1BB8729A0();

  }
  sub_1BB8714AC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v22 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 0, 1, v22);
}

uint64_t FeedPuzzle.isInTeaserMode.getter()
{
  uint64_t v0;

  return (*(unsigned __int8 *)(v0 + 5) >> 1) & 1;
}

_QWORD *sub_1BB3F10E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  const char *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v48;

  v1 = *(void **)(v0 + 56);
  v2 = objc_msgSend(objc_msgSend(v1, sel_puzzleType), sel_puzzlePrimaryColor);

  swift_unknownObjectRelease();
  if (v2)
  {
    v3 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    v6 = &v3[2 * v5];
    v6[4] = 0xD00000000000001DLL;
    v6[5] = 0x80000001BB97C000;
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v7 = objc_msgSend(objc_msgSend(v1, sel_puzzleType), sel_themeColor);

  swift_unknownObjectRelease();
  if (v7)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v9 = v3[2];
    v8 = v3[3];
    if (v9 >= v8 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
    v3[2] = v9 + 1;
    v10 = &v3[2 * v9];
    v10[4] = 0xD00000000000001BLL;
    v10[5] = 0x80000001BB97BFE0;
  }
  v11 = objc_msgSend(objc_msgSend(v1, sel_puzzleType), sel_darkStylePuzzlePrimaryColor);

  swift_unknownObjectRelease();
  if (v11)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v13 = v3[2];
    v12 = v3[3];
    if (v13 >= v12 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v3);
    v3[2] = v13 + 1;
    v14 = &v3[2 * v13];
    v14[4] = 0xD000000000000022;
    v14[5] = 0x80000001BB97BFB0;
  }
  v15 = objc_msgSend(objc_msgSend(v1, sel_puzzleType), sel_darkStyleThemeColor);

  swift_unknownObjectRelease();
  if (v15)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v17 = v3[2];
    v16 = v3[3];
    if (v17 >= v16 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v16 > 1), v17 + 1, 1, v3);
    v3[2] = v17 + 1;
    v18 = &v3[2 * v17];
    v18[4] = 0xD000000000000020;
    v18[5] = 0x80000001BB97BF80;
  }
  v19 = objc_msgSend(objc_msgSend(v1, sel_puzzleType), sel_orderedNavigationBarThemes);
  swift_unknownObjectRelease();
  if (v19)
  {
    sub_1BA9D0070();
    v20 = sub_1BB872DB4();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v21 < 0)
      {
        __break(1u);
        goto LABEL_69;
      }
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v21)
    {
      v22 = 0;
      v23 = v20 & 0xC000000000000001;
      v48 = v0;
      do
      {
        if (v23)
        {
          v25 = (void *)MEMORY[0x1BCCE4630](v22, v20);
        }
        else
        {
          v25 = *(void **)(v20 + 8 * v22 + 32);
          swift_unknownObjectRetain();
        }
        v26 = objc_msgSend(v25, sel_rankForegroundColor);
        swift_unknownObjectRelease();
        if (v26)
        {
          objc_msgSend(v26, sel_red);
          objc_msgSend(v26, sel_green);
          objc_msgSend(v26, sel_blue);
          objc_msgSend(v26, sel_alpha);

          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB87420C();
          sub_1BB872AFC(v27);
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
          v29 = v3[2];
          v28 = v3[3];
          if (v29 >= v28 >> 1)
            v3 = sub_1BA6EA0D0((_QWORD *)(v28 > 1), v29 + 1, 1, v3);
          v3[2] = v29 + 1;
          v30 = &v3[2 * v29];
          v30[4] = 0xD00000000000001BLL;
          v30[5] = 0x80000001BB98B660;
        }
        if (v23)
        {
          v31 = (void *)MEMORY[0x1BCCE4630](v22, v20);
        }
        else
        {
          v31 = *(void **)(v20 + 8 * v22 + 32);
          swift_unknownObjectRetain();
        }
        v32 = objc_msgSend(v31, sel_rankForegroundDarkModeColor);
        swift_unknownObjectRelease();
        if (v32)
        {
          objc_msgSend(v32, sel_red);
          objc_msgSend(v32, sel_green);
          objc_msgSend(v32, sel_blue);
          objc_msgSend(v32, sel_alpha);

          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB87420C();
          sub_1BB872AFC(v33);
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
          v35 = v3[2];
          v34 = v3[3];
          if (v35 >= v34 >> 1)
            v3 = sub_1BA6EA0D0((_QWORD *)(v34 > 1), v35 + 1, 1, v3);
          v3[2] = v35 + 1;
          v24 = &v3[2 * v35];
          v24[4] = 0xD000000000000020;
          v24[5] = 0x80000001BB98B630;
        }
        ++v22;
      }
      while (v21 != v22);
      swift_bridgeObjectRelease();
      v0 = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (*(unsigned __int8 *)(v0 + 72) - 2 < 2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_52:
      v37 = v3[2];
      v36 = v3[3];
      if (v37 >= v36 >> 1)
        v3 = sub_1BA6EA0D0((_QWORD *)(v36 > 1), v37 + 1, 1, v3);
      v3[2] = v37 + 1;
      v38 = &v3[2 * v37];
      v38[4] = 0xD000000000000017;
      v39 = v38 + 4;
      v40 = "puzzle-access-no-access";
      goto LABEL_66;
    }
LABEL_69:
    v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    goto LABEL_52;
  }
  if (*(_BYTE *)(v0 + 72))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v45 = v3[2];
    v44 = v3[3];
    if (v45 >= v44 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v44 > 1), v45 + 1, 1, v3);
    v3[2] = v45 + 1;
    v46 = &v3[2 * v45];
    v46[4] = 0xD000000000000019;
    v39 = v46 + 4;
    v40 = "puzzle-access-free-access";
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v42 = v3[2];
    v41 = v3[3];
    if (v42 >= v41 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v41 > 1), v42 + 1, 1, v3);
    v3[2] = v42 + 1;
    v43 = &v3[2 * v42];
    v43[4] = 0xD000000000000019;
    v39 = v43 + 4;
    v40 = "puzzle-access-paid-access";
  }
LABEL_66:
  v39[1] = (unint64_t)(v40 - 32) | 0x8000000000000000;
  return v3;
}

uint64_t sub_1BB3F197C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3F19B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

unint64_t sub_1BB3F1A14()
{
  unint64_t result;

  result = qword_1EF2C3370;
  if (!qword_1EF2C3370)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzle, &type metadata for FeedPuzzle);
    atomic_store(result, (unint64_t *)&qword_1EF2C3370);
  }
  return result;
}

unint64_t sub_1BB3F1A5C()
{
  unint64_t result;

  result = qword_1EF2C3380;
  if (!qword_1EF2C3380)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessLevel, &type metadata for PuzzleAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EF2C3380);
  }
  return result;
}

unint64_t sub_1BB3F1AA0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA9B5680();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleAccessLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3F1B1C + 4 * byte_1BB913F29[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3F1B50 + 4 * byte_1BB913F24[v4]))();
}

uint64_t sub_1BB3F1B50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3F1B58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3F1B60);
  return result;
}

uint64_t sub_1BB3F1B6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3F1B74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3F1B78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3F1B80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessLevel()
{
  return &type metadata for PuzzleAccessLevel;
}

uint64_t destroy for FeedPuzzle(uint64_t a1)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
    result = __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  if (*(_QWORD *)(a1 + 152))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  return result;
}

uint64_t initializeWithCopy for FeedPuzzle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (v6 >= 0x11)
  {
    *(_QWORD *)(a1 + 24) = *v5;
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = v8;
  swift_bridgeObjectRetain();
  if (v9)
  {
    v11 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = v9;
    *(_QWORD *)(a1 + 120) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 88, a2 + 88, v9);
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  }
  v13 = (_OWORD *)(a1 + 128);
  v14 = (_OWORD *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 152);
  if (v15)
  {
    v16 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = v15;
    *(_QWORD *)(a1 + 160) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 144);
    *v13 = *v14;
    *(_OWORD *)(a1 + 144) = v17;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  }
  return a1;
}

uint64_t assignWithCopy for FeedPuzzle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) < 0x11uLL)
  {
    if (v7 >= 0x11)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 < 0x11)
  {
    sub_1BA905D68(a1 + 24);
LABEL_6:
    *v5 = *v6;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v8 = *(void **)(a1 + 64);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v11)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 112) = v11;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 88, a2 + 88);
    goto LABEL_15;
  }
  v12 = *(_OWORD *)(a2 + 88);
  v13 = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 88) = v12;
  *(_OWORD *)(a1 + 104) = v13;
LABEL_15:
  v14 = *(_QWORD *)(a2 + 152);
  if (!*(_QWORD *)(a1 + 152))
  {
    if (v14)
    {
      *(_QWORD *)(a1 + 152) = v14;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 128, a2 + 128);
      return a1;
    }
LABEL_21:
    v15 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 128) = v15;
    *(_OWORD *)(a1 + 144) = v16;
    return a1;
  }
  if (!v14)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
    goto LABEL_21;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for FeedPuzzle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) < 0x11uLL)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 32);
  if (v7 < 0x11)
  {
    sub_1BA905D68((uint64_t)v5);
LABEL_4:
    *v5 = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRelease();
  v9 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 152))
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v11;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPuzzle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPuzzle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1BB3F2130()
{
  unint64_t result;

  result = qword_1EF2C33A0;
  if (!qword_1EF2C33A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzle, &type metadata for FeedPuzzle);
    atomic_store(result, (unint64_t *)&qword_1EF2C33A0);
  }
  return result;
}

unint64_t sub_1BB3F2174()
{
  unint64_t result;

  result = qword_1EF2C33A8;
  if (!qword_1EF2C33A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessLevel, &type metadata for PuzzleAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EF2C33A8);
  }
  return result;
}

uint64_t sub_1BB3F21BC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  if (qword_1EF2A6D60 != -1)
    swift_once();
  sub_1BB3F2874();
  sub_1BB86D210();
  if (qword_1EF2A6D68 != -1)
    swift_once();
  sub_1BB86D210();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872AFC((_QWORD *)0x2F2F3A70747468);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v0);
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  return 0x2F2F3A70747468;
}

uint64_t sub_1BB3F2318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[4];

  v1 = sub_1BB86BC8C();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v7 = *(void **)(v0 + 16);
  if (*(_BYTE *)(v0 + 32) != 1)
  {
    v10[2] = (char *)v10 - v6;
    v10[3] = v5;
    __asm { BR              X10 }
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2C2870, (uint64_t (*)(uint64_t))sub_1BA76D834, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v8 = v7;
  return sub_1BB86E9C8();
}

uint64_t sub_1BB3F2750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BB8729DC();
  result = sub_1BB8729B8();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for DebugFormatCodeYAMLLoader()
{
  return objc_opt_self();
}

uint64_t sub_1BB3F2800()
{
  return 1280131417;
}

uint64_t sub_1BB3F2810()
{
  return sub_1BB3F2318();
}

unint64_t sub_1BB3F2830()
{
  unint64_t result;

  result = qword_1EF2C3450;
  if (!qword_1EF2C3450)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914244, &type metadata for DebugFormatCodeYAMLLoader.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2C3450);
  }
  return result;
}

unint64_t sub_1BB3F2874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C3458;
  if (!qword_1EF2C3458)
  {
    v1 = type metadata accessor for DebugFormatCodeYAMLLoader();
    result = MEMORY[0x1BCCE5B24](&unk_1BB9141FC, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C3458);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCodeYAMLLoader.Errors()
{
  return &type metadata for DebugFormatCodeYAMLLoader.Errors;
}

uint64_t FormatStandingDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatStandingDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatStandingDataVisualization.query.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStandingDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStandingDataVisualization.query.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStandingDataVisualization.query.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatStandingDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStandingDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatStandingDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatStandingDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatStandingDataVisualization.__allocating_init(tagIdentifier:query:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  swift_beginAccess();
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

_QWORD *FormatStandingDataVisualization.init(tagIdentifier:query:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  swift_beginAccess();
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1BB3F2C74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3F2CB0 + 4 * byte_1BB914290[*v0]))(0x746E656449676174, 0xED00007265696669);
}

uint64_t sub_1BB3F2CB0()
{
  return 0x7972657571;
}

uint64_t sub_1BB3F2CC4()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB3F2CE0()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB3F2CFC()
{
  sub_1BA97454C();
  return sub_1BB874710();
}

uint64_t sub_1BB3F2D24()
{
  sub_1BA97454C();
  return sub_1BB87471C();
}

uint64_t FormatStandingDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatStandingDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatStandingDataVisualization.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  char v19;

  v3 = v1;
  sub_1BB3F35A8(0, &qword_1EF2AB948, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA97454C();
  sub_1BB8746C8();
  v18 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    swift_beginAccess();
    v10 = v3[4];
    v11 = v3[5];
    swift_bridgeObjectRetain();
    sub_1BA972FF4(v10, v11, 1);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v13 = v3[6];
    if (*(_QWORD *)(v13 + 16))
    {
      v19 = 2;
      swift_bridgeObjectRetain_n();
      v14 = sub_1BA67F4CC(v13);
      swift_bridgeObjectRelease();
      v17 = v14;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v17);
      swift_release();
      v16 = (uint64_t)v17;
      sub_1BB3F3550();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v15 = v3[7];
    if (*(_QWORD *)(v15 + 16))
    {
      v19 = 3;
      v17 = (_QWORD *)v15;
      sub_1BB3F3550();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatStandingDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatStandingDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatStandingDataVisualization.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;

  v42 = *v1;
  sub_1BA89B794();
  v38 = v3;
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v39 = *(_QWORD **)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3F35A8(0, &qword_1EF2C3460, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA97454C();
  v13 = v41;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v1;
  }
  else
  {
    v41 = v7;
    v14 = v40;
    LOBYTE(v43) = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v15;
    v46 = 1;
    v16 = sub_1BB8740F8();
    v34 = v10;
    v35 = v12;
    if ((v16 & 1) != 0)
    {
      v45 = 1;
      sub_1BB8740D4();
      v17 = v43;
      v18 = v44;
    }
    else
    {
      v17 = 0;
      v18 = 0xE000000000000000;
    }
    v19 = v1;
    v20 = (uint64_t)a1;
    v21 = v39;
    v1[4] = v17;
    v1[5] = v18;
    LOBYTE(v43) = 2;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v39 = a1;
      v46 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      v22 = v41;
      sub_1BB8740D4();
      v23 = sub_1BB86DD08();
      ((void (*)(char *, uint64_t))v21[1])(v22, v14);
      v20 = (uint64_t)v39;
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9E8];
    }
    v19[6] = v23;
    LOBYTE(v43) = 3;
    v24 = v35;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v25 = v20;
      v46 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v27 = v37;
      v26 = v38;
      sub_1BB8740D4();
      v29 = v24;
      v30 = sub_1BB86DD08();
      v31 = v27;
      v32 = v30;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v26);
      v20 = v25;
    }
    else
    {
      v32 = MEMORY[0x1E0DEE9D8];
      v29 = v24;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v9);
    v19[7] = v32;
    __swift_destroy_boxed_opaque_existential_1(v20);
  }
  return v19;
}

_QWORD *sub_1BB3F34D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatStandingDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB3F3524(_QWORD *a1)
{
  return FormatStandingDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BB3F3544(_QWORD **a1, _QWORD **a2)
{
  return static FormatStandingDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BB3F3550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB958;
  if (!qword_1EF2AB958)
  {
    sub_1BB3F35A8(255, &qword_1EF2AB948, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB958);
  }
  return result;
}

void sub_1BB3F35A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA97454C();
    v7 = a3(a1, &type metadata for FormatStandingDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB3F3604(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1EF2B1C40, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization, (uint64_t)&protocol conformance descriptor for FormatStandingDataVisualization);
  a1[2] = sub_1BA50AD30((unint64_t *)&unk_1EF2B1C80, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization, (uint64_t)&protocol conformance descriptor for FormatStandingDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2C3468, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization, (uint64_t)&protocol conformance descriptor for FormatStandingDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatStandingDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BB3F369C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3F36E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3F3734@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatStandingDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatStandingDataVisualization.__allocating_init(tagIdentifier:query:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatStandingDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for FormatStandingDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB3F37F8 + 4 * byte_1BB914299[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB3F382C + 4 * byte_1BB914294[v4]))();
}

uint64_t sub_1BB3F382C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3F3834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3F383CLL);
  return result;
}

uint64_t sub_1BB3F3848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3F3850);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB3F3854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3F385C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatStandingDataVisualization.CodingKeys()
{
  return &type metadata for FormatStandingDataVisualization.CodingKeys;
}

unint64_t sub_1BB3F387C()
{
  unint64_t result;

  result = qword_1EF2C3470;
  if (!qword_1EF2C3470)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91442C, &type metadata for FormatStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3470);
  }
  return result;
}

unint64_t sub_1BB3F38C4()
{
  unint64_t result;

  result = qword_1EF2C3478;
  if (!qword_1EF2C3478)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91439C, &type metadata for FormatStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3478);
  }
  return result;
}

unint64_t sub_1BB3F390C()
{
  unint64_t result;

  result = qword_1EF2C3480;
  if (!qword_1EF2C3480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9143C4, &type metadata for FormatStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3480);
  }
  return result;
}

ValueMetadata *type metadata accessor for M12_V1()
{
  return &type metadata for M12_V1;
}

uint64_t sub_1BB3F3960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t *v31;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[8];
  void *v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  __int128 v60;
  unsigned __int8 v61;
  ValueMetadata *v62;
  unint64_t v63;

  v36 = a2;
  v37 = a1;
  v48 = a3;
  v39 = sub_1BB86C8E0();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = type metadata accessor for GroupLayoutBindingContext();
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = v7;
  v46 = type metadata accessor for GroupLayoutContext();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = &v34[-v11];
  v42 = &v34[-v11];
  v13 = *v3;
  v35 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v62 = &type metadata for M12_V1;
  v16 = sub_1BA8EDCDC();
  v63 = v16;
  LOBYTE(v60) = v13;
  *((_QWORD *)&v60 + 1) = v14;
  v61 = v15;
  v17 = v36;
  sub_1BA4C2DD8(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  v18 = v37;
  v45 = sub_1BB3E12E4(0, 0, 0, 0, 0);
  sub_1BA4C2DD8(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4C2DD8(v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v19 = sub_1BB86C8C8();
  v21 = v20;
  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v5, v39);
  v58 = &type metadata for M12_V1;
  v59 = v16;
  v55[0] = v35;
  v56 = v14;
  v57 = v15;
  type metadata accessor for GroupLayoutKey();
  v22 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v53 = sub_1BB874734();
  v54 = v23;
  v51 = 95;
  v52 = 0xE100000000000000;
  v49 = 45;
  v50 = 0xE100000000000000;
  sub_1BA7114A0();
  v24 = sub_1BB873B04();
  v26 = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 24) = v26;
  v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *v27 = v19;
  v27[1] = v21;
  sub_1BA4C010C((uint64_t)v55, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4((uint64_t)v40, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v28, 0, 1, v47);
  v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v41, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v29, 0, 1, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  sub_1BA7C2538(v14, v15);
  v30 = (int *)type metadata accessor for M12_V1.Bound();
  v31 = v48;
  v48[3] = (uint64_t)v30;
  v31[4] = sub_1BA4A2870(&qword_1ED3ABBA0, (uint64_t (*)(uint64_t))type metadata accessor for M12_V1.Bound, (uint64_t)&unk_1BB914568);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v31);
  sub_1BA4CECCC(&v60, (uint64_t)boxed_opaque_existential_0);
  result = sub_1BA5193C4((uint64_t)v42, (uint64_t)boxed_opaque_existential_0 + v30[5], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v30[6]) = v45;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v30[7]) = v22;
  return result;
}

double sub_1BB3F3D90@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  __int128 v14;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for M12_V1.Bound();
  v5 = *(_QWORD *)(v2 + *(int *)(v4 + 24));
  v16 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA8A3388((void (*)(_OWORD *__return_ptr, uint64_t))sub_1BB3F5514, (uint64_t)v15, v5);
  swift_bridgeObjectRelease();
  sub_1BB3F4110(v6, v2 + *(int *)(v4 + 20));
  v7 = sub_1BB86DB40();
  v14 = v18;
  v8 = v19;
  v9 = v20;
  v17 = v21;
  *(_QWORD *)&v18 = v6;
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4C576C(0, &qword_1ED39EA10);
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED39EA38);
  sub_1BB3F5538();
  sub_1BB3F5590();
  swift_bridgeObjectRetain();
  v10 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18 = v10;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v11 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = *(double *)&v14;
  *(_OWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v13;
  return result;
}

uint64_t sub_1BB3F3FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16[2];
  _BYTE v17[40];
  _QWORD v18[6];
  __int128 v19[2];
  __int128 v20[2];

  v6 = type metadata accessor for M12_V1.Bound();
  v7 = *(_QWORD *)(a2 + *(int *)(v6 + 28));
  sub_1BA982E70(a1, (uint64_t)(a3 + 1));
  v8 = a2 + *(int *)(v6 + 20);
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + *(int *)(v9 + 40)) + 16);
  v11 = *(double *)(v8 + *(int *)(v9 + 32));
  sub_1BA4C010C(v10 + 16, (uint64_t)v20);
  sub_1BA4C010C(v10 + 56, (uint64_t)v19);
  v12 = v11 * *(double *)(v10 + 96);
  sub_1BA4CECCC(v20, (uint64_t)v17);
  sub_1BA4CECCC(v19, (uint64_t)v18);
  *(double *)&v18[5] = v12;
  sub_1BA4C010C((uint64_t)v18, (uint64_t)v16);
  v13 = type metadata accessor for CategoryViewStyler();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0x4030000000000000;
  sub_1BA4CECCC(v16, v14 + 24);
  a3[23] = v13;
  a3[24] = &off_1E7293398;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  a3[20] = v14;
  *a3 = v7;
  return result;
}

uint64_t sub_1BB3F4110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = a1;
  sub_1BA4C576C(0, &qword_1ED39EA10);
  sub_1BB3F5684();
  v8 = sub_1BB8730F0();
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = a2 + *(int *)(v9 + 24);
  v11 = *(_BYTE *)(v10 + 20);
  v12 = *(_BYTE *)(v10 + 21);
  v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + *(int *)(v9 + 40)) + 24) + 16);
  v14 = *MEMORY[0x1E0DB5D88];
  v15 = sub_1BB86D678();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v7, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v19 = v8;
  v20 = v13;
  v21 = v11;
  v22 = v12;
  sub_1BB3E2A08(0, (unint64_t *)&unk_1ED39DF80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  swift_retain();
  v16 = sub_1BB86DB34();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB3F42A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  uint64_t v15;
  double v16;
  double v17;
  double MinX;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  CGFloat v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  double rect;
  CGFloat v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v54 = *((_OWORD *)a3 + 2);
  v55 = *((_OWORD *)a3 + 3);
  v56 = *((_OWORD *)a3 + 4);
  v57 = *((_OWORD *)a3 + 5);
  v52 = *(_OWORD *)a3;
  v53 = *((_OWORD *)a3 + 1);
  v10 = a3[12];
  v11 = a3[13];
  v13 = a3[14];
  v12 = a3[15];
  v15 = *((_QWORD *)a3 + 16);
  v14 = a3[17];
  v16 = a3[18];
  v17 = a3[19];
  v51 = v12;
  if (*(_QWORD *)(a4 + 16) - 2 <= a1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    v25 = a3[17];
    v26 = a3[20];
  }
  else
  {
    v49 = *((_QWORD *)a3 + 16);
    rect = a3[20];
    v58.origin.x = a3[17];
    v58.origin.y = a3[18];
    v58.size.width = a3[19];
    v58.size.height = rect;
    MinX = CGRectGetMinX(v58);
    v59.origin.x = v10;
    v59.origin.y = v11;
    v59.size.width = v13;
    v59.size.height = v12;
    v19 = MinX + CGRectGetMinX(v59);
    v47 = v11;
    v48 = v10;
    v46 = v13;
    v20 = v14;
    v21 = v16;
    v22 = v17;
    v23 = rect;
    if ((a1 & 1) != 0)
    {
      CGRectGetMinX(*(CGRect *)&v20);
      v61.origin.x = v14;
      v61.origin.y = v16;
      v61.size.width = v17;
      v61.size.height = rect;
      CGRectGetWidth(v61);
    }
    else
    {
      CGRectGetWidth(*(CGRect *)&v20);
      v60.origin.x = v10;
      v60.origin.y = v11;
      v60.size.width = v13;
      v60.size.height = v12;
      CGRectGetMinX(v60);
    }
    v25 = v14;
    v27 = v14;
    v26 = rect;
    MEMORY[0x1BCCE3EF8](v19, v27, v16, v17, rect);
    v62.origin.x = v25;
    v62.origin.y = v16;
    v62.size.width = v17;
    v62.size.height = rect;
    CGRectGetMaxY(v62);
    sub_1BB8735E8();
    sub_1BB8735F4();
    type metadata accessor for M12_V1.Bound();
    sub_1BB86D774();
    sub_1BB873600();
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;
    sub_1BA4B07F0(0, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8) + 80);
    v37 = (v36 + 32) & ~v36;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
    v38 = (_QWORD *)(v24 + v37);
    *v38 = v29;
    v38[1] = v31;
    v38[2] = v33;
    v38[3] = v35;
    swift_storeEnumTagMultiPayload();
    v10 = v48;
    v15 = v49;
    v13 = v46;
    v11 = v47;
  }
  v39 = swift_allocObject();
  v40 = swift_allocObject();
  sub_1BB3E28DC(a2, v40 + 16);
  *(_OWORD *)(v40 + 248) = v54;
  *(_OWORD *)(v40 + 264) = v55;
  *(_OWORD *)(v40 + 280) = v56;
  *(_OWORD *)(v40 + 296) = v57;
  *(_OWORD *)(v40 + 216) = v52;
  *(_OWORD *)(v40 + 232) = v53;
  *(CGFloat *)(v40 + 312) = v10;
  *(CGFloat *)(v40 + 320) = v11;
  *(CGFloat *)(v40 + 328) = v13;
  *(CGFloat *)(v40 + 336) = v51;
  *(_QWORD *)(v40 + 344) = v15;
  *(CGFloat *)(v40 + 352) = v25;
  *(double *)(v40 + 360) = v16;
  *(double *)(v40 + 368) = v17;
  *(double *)(v40 + 376) = v26;
  v41 = a5 + *(int *)(type metadata accessor for M12_V1.Bound() + 20);
  result = type metadata accessor for GroupLayoutContext();
  v43 = *(_QWORD *)(v41 + *(int *)(result + 28));
  v44 = __OFADD__(v43, a1);
  v45 = v43 + a1;
  if (v44)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v40 + 384) = v45;
    *(_QWORD *)(v39 + 16) = v40 | 0x8000000000000000;
    *(_QWORD *)(v39 + 24) = v24;
    *a6 = v39 | 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1BB3F4628(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)&v15[-v11];
  v19 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 12;
  *v12 = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63F8], v9);
  v16 = a2;
  v17 = a3;
  v18 = a4 & 0x101;
  sub_1BB3E2A08(0, &qword_1ED39E2D8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB3F5704();
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BB3F4780(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(unint64_t, _QWORD, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  __int128 v38;
  unint64_t v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  void (*v45)(uint64_t *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v40 = a4;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v37 - v10);
  v49 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DB5A38], v12);
  *v11 = v13;
  v15 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104);
  v15(v11, *MEMORY[0x1E0DB6318], v8);
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BB3F575C();
  sub_1BB86D4EC();
  v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  result = v19(v11, v8);
  v48 = a2;
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v43 = *MEMORY[0x1E0DB6410];
    v22 = *MEMORY[0x1E0DB5C80];
    v41 = v40 & 1;
    v42 = v22;
    v40 = (v40 >> 8) & 1;
    swift_bridgeObjectRetain();
    v39 = v18;
    v23 = 0;
    v38 = xmmword_1BB87CE70;
    v37[1] = v17;
    v46 = a1;
    v47 = v8;
    v44 = v21;
    v45 = (void (*)(uint64_t *, uint64_t))v19;
    do
    {
      v24 = *(_QWORD *)(v48 + 8 * v23++ + 32);
      v49 = a1;
      v15(v11, v43, v8);
      sub_1BB3E2A84();
      sub_1BA4CDF6C(0, &qword_1ED39E2C0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v26 = v25;
      v27 = v15;
      v28 = a3;
      v29 = *(_QWORD *)(v25 - 8);
      v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v38;
      v32 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v29 + 104);
      a3 = v28;
      v15 = v27;
      v33 = v32(v31 + v30, v42, v26);
      MEMORY[0x1E0C80A78](v33);
      v37[-4] = a3;
      v37[-3] = v24;
      swift_bridgeObjectRetain();
      v36 = v39;
      sub_1BB86D498();
      v35 = v44;
      v34 = v45;
      swift_bridgeObjectRelease();
      a1 = v46;
      v8 = v47;
      v34(v11, v47);
      swift_bridgeObjectRelease();
    }
    while (v35 != v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB3F4A8C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _DWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)v24 - v11);
  v26 = a1;
  v31 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 6;
  *v12 = v13;
  v14 = *MEMORY[0x1E0DB63F8];
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  v27 = a2;
  v28 = a2;
  v29 = a3;
  v24[1] = a4 & 1;
  v30 = a4 & 0x101;
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BB3F575C();
  v23 = v18;
  v25 = v17;
  sub_1BB86D4BC();
  v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  result = v19(v12, v9);
  if (*(_QWORD *)(a3 + 16) == 2)
  {
    v31 = v26;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = 6;
    *v12 = v21;
    v22 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v12, v14, v9);
    MEMORY[0x1E0C80A78](v22);
    *(_QWORD *)&v24[-8] = v27;
    *(_QWORD *)&v24[-6] = a3;
    v23 = v18;
    sub_1BB86D4BC();
    return v19(v12, v9);
  }
  return result;
}

uint64_t sub_1BB3F4CBC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  _BYTE v27[152];
  uint64_t v28;
  uint64_t v29;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  v29 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v24 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v25 = v14;
  result = v19(v17, v18, v14);
  v28 = a2;
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BA982E70(a3 + 40, (uint64_t)v27);
    v26 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v23 = v9;
    sub_1BB3E2924();
    v22 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3F575C();
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB3F4F70(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  _BYTE v27[152];
  uint64_t v28;
  uint64_t v29;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  v29 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v24 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v25 = v14;
  result = v19(v17, v18, v14);
  v28 = a2;
  if (*(_QWORD *)(a3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1BA982E70(a3 + 240, (uint64_t)v27);
    v26 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v23 = v9;
    sub_1BB3E2924();
    v22 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3F575C();
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
  return result;
}

uint64_t sub_1BB3F522C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB3F3960(a1, a2, a3);
}

uint64_t sub_1BB3F5240()
{
  return sub_1BB690AAC();
}

unint64_t sub_1BB3F5250(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB3F527C();
  result = sub_1BB3F52C0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB3F527C()
{
  unint64_t result;

  result = qword_1ED3ABC48;
  if (!qword_1ED3ABC48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9144B0, &type metadata for M12_V1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABC48);
  }
  return result;
}

unint64_t sub_1BB3F52C0()
{
  unint64_t result;

  result = qword_1ED3ABC40;
  if (!qword_1ED3ABC40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9144D8, &type metadata for M12_V1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABC40);
  }
  return result;
}

uint64_t type metadata accessor for M12_V1.Bound()
{
  uint64_t result;

  result = qword_1ED3ABBA8;
  if (!qword_1ED3ABBA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB3F5340()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3F534C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB3F53C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3F53D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB3F5448()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB3F54D8(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED3ABB98, (uint64_t (*)(uint64_t))type metadata accessor for M12_V1.Bound, (uint64_t)&unk_1BB914540);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3F5514@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3F3FC8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB3F5530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB3F42A4(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

unint64_t sub_1BB3F5538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EA18;
  if (!qword_1ED39EA18)
  {
    sub_1BA4C576C(255, &qword_1ED39EA10);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EA18);
  }
  return result;
}

unint64_t sub_1BB3F5590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E220;
  if (!qword_1ED39E220)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1ED39EA38);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E220);
  }
  return result;
}

uint64_t sub_1BB3F55E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3F5618()
{
  _QWORD *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  if (v0[15])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  if (v0[20])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 22));
  return swift_deallocObject();
}

unint64_t sub_1BB3F5684()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3ABC78;
  if (!qword_1ED3ABC78)
  {
    sub_1BA4C576C(255, &qword_1ED39EA10);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABC78);
  }
  return result;
}

uint64_t sub_1BB3F56DC(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3F4628);
}

uint64_t sub_1BB3F56E8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB3F56F8(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3F4780);
}

unint64_t sub_1BB3F5704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E2D0;
  if (!qword_1ED39E2D0)
  {
    sub_1BB3E2A08(255, &qword_1ED39E2D8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5DD8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E2D0);
  }
  return result;
}

unint64_t sub_1BB3F575C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E2B0;
  if (!qword_1ED39E2B0)
  {
    sub_1BB3E2A08(255, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E2B0);
  }
  return result;
}

uint64_t sub_1BB3F57B4(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3F4A8C);
}

uint64_t sub_1BB3F57C0(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3F4CBC);
}

uint64_t sub_1BB3F57CC(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB3F4F70);
}

uint64_t sub_1BB3F57D8(_QWORD *a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  int64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v46;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v42 = 0;
    v2 = 0;
    v3 = 0;
    v4 = sub_1BB873E70() | 0x8000000000000000;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a2 + 32);
    v2 = ~v5;
    v42 = a2 + 64;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v3 = v7 & *(_QWORD *)(a2 + 64);
    v4 = a2;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  v41 = (unint64_t)(v2 + 64) >> 6;
  v43 = v4;
  while (1)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      if (!sub_1BB873E94())
        goto LABEL_42;
      sub_1BA49A224(0, (unint64_t *)&unk_1EF2C35B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v46;
      swift_unknownObjectRelease();
      sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2C4FC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v46;
      swift_unknownObjectRelease();
      v13 = v8;
      v11 = v3;
      if (!v46)
        goto LABEL_42;
    }
    else
    {
      if (v3)
      {
        v11 = (v3 - 1) & v3;
        v12 = __clz(__rbit64(v3)) | (v8 << 6);
        v13 = v8;
      }
      else
      {
        v16 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_45;
        if (v16 >= v41)
          goto LABEL_42;
        v17 = *(_QWORD *)(v42 + 8 * v16);
        v13 = v8 + 1;
        if (!v17)
        {
          v13 = v8 + 2;
          if (v8 + 2 >= v41)
            goto LABEL_42;
          v17 = *(_QWORD *)(v42 + 8 * v13);
          if (!v17)
          {
            v13 = v8 + 3;
            if (v8 + 3 >= v41)
              goto LABEL_42;
            v17 = *(_QWORD *)(v42 + 8 * v13);
            if (!v17)
            {
              v13 = v8 + 4;
              if (v8 + 4 >= v41)
                goto LABEL_42;
              v17 = *(_QWORD *)(v42 + 8 * v13);
              if (!v17)
              {
                v13 = v8 + 5;
                if (v8 + 5 >= v41)
                  goto LABEL_42;
                v17 = *(_QWORD *)(v42 + 8 * v13);
                if (!v17)
                {
                  v18 = v8 + 6;
                  while (v41 != v18)
                  {
                    v17 = *(_QWORD *)(v42 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_42:
                  sub_1BA6EBD18();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = 8 * v12;
      v15 = *(_QWORD **)(*(_QWORD *)(v4 + 56) + v19);
      v14 = *(id *)(*(_QWORD *)(v4 + 48) + v19);
      swift_unknownObjectRetain();
      if (!v14)
        goto LABEL_42;
    }
    v44 = v11;
    v20 = v14;
    v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_featureKey);
    v22 = sub_1BB8729A0();
    v24 = v23;

    v25 = v20;
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = a1;
    v28 = sub_1BA6E35A8(v22, v24);
    v29 = a1[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (a1[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C9C00();
    }
    else
    {
      sub_1BB4BAC14(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_1BA6E35A8(v22, v24);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_46;
      v28 = v33;
    }
    if ((v32 & 1) != 0)
    {
      v9 = a1[7] + 16 * v28;
      v10 = *(void **)v9;
      swift_unknownObjectRelease();

      *(_QWORD *)v9 = v25;
      *(_QWORD *)(v9 + 8) = v15;
    }
    else
    {
      a1[(v28 >> 6) + 8] |= 1 << v28;
      v35 = (uint64_t *)(a1[6] + 16 * v28);
      *v35 = v22;
      v35[1] = v24;
      v36 = (_QWORD *)(a1[7] + 16 * v28);
      *v36 = v25;
      v36[1] = v15;
      v37 = a1[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_44;
      a1[2] = v39;
      swift_bridgeObjectRetain();
    }
    swift_unknownObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v13;
    v4 = v43;
    v3 = v44;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB3F5C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    sub_1BA4E0A38();
    sub_1BB86EC14();
    v3 = (void *)sub_1BB86E854();
    sub_1BA5746F8();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9640, (uint64_t (*)(uint64_t))sub_1BA4E0A38, MEMORY[0x1E0DEAF38]);
    sub_1BB86EA88();
    swift_release();

    swift_retain();
    v4 = (void *)sub_1BB86E854();
    v1 = sub_1BB86E968();
    swift_release();
    swift_release();

    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void sub_1BB3F5D90(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FeedItem.identifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_1BB3F5DCC()
{
  uint64_t v0;
  id v1;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v1 = (id)qword_1EF3D0928;
  v0 = sub_1BB87330C();
  sub_1BB86EF44("Inspector finished inspecting the group layout key for debugging", 64, 2, &dword_1BA493000, v1, v0, MEMORY[0x1E0DEE9D8]);

}

uint64_t sub_1BB3F5E50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v37 - v11;
  v13 = a1[10];
  v14 = MEMORY[0x1E0DEE9E8];
  v46 = MEMORY[0x1E0DEE9E8];
  v44 = *(_QWORD *)(v13 + 16);
  if (v44)
  {
    v38 = a1;
    v39 = v1;
    v15 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    v37 = v13;
    swift_bridgeObjectRetain_n();
    v17 = 0;
    v40 = v5;
    v41 = v16;
    v42 = v15;
    v43 = v6;
    do
    {
      sub_1BA4C2DD8(v15 + v16 * v17, (uint64_t)v12, type metadata accessor for FeedItem);
      sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v8, type metadata accessor for FeedItem);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1BA5193C4((uint64_t)v8, (uint64_t)v5, type metadata accessor for FeedHeadline);
        v18 = (void *)*((_QWORD *)v5 + 5);
        v19 = objc_msgSend(v18, sel_publisherID);
        if (v19)
        {
          v20 = v19;
          v21 = sub_1BB8729A0();
          v23 = v22;

          sub_1BA6EE5AC(&v45, v21, v23);
          swift_bridgeObjectRelease();
        }
        v24 = objc_msgSend(v18, sel_topicIDs);
        if (v24)
        {
          v25 = v24;
          v26 = sub_1BB872DB4();

          v27 = *(_QWORD *)(v26 + 16);
          if (v27)
          {
            v28 = (uint64_t *)(v26 + 40);
            do
            {
              v30 = *(v28 - 1);
              v29 = *v28;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC(&v45, v30, v29);
              swift_bridgeObjectRelease();
              v28 += 2;
              --v27;
            }
            while (v27);
          }
          swift_bridgeObjectRelease();
          v5 = v40;
        }
        sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
        v15 = v42;
        v16 = v41;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
      }
      ++v17;
      sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
    }
    while (v17 != v44);
    swift_bridgeObjectRelease_n();
    v14 = v46;
    a1 = v38;
  }
  v31 = a1[8];
  v32 = a1[9];
  __swift_project_boxed_opaque_existential_1(a1 + 5, v31);
  v33 = sub_1BA67F4CC(v14);
  swift_bridgeObjectRelease();
  v34 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  v35 = (*(uint64_t (**)(_QWORD *, id, uint64_t, uint64_t, uint64_t))(v32 + 32))(v33, v34, 25, v31, v32);
  swift_release();

  return v35;
}

uint64_t sub_1BB3F6168(uint64_t *a1, id *a2)
{
  return sub_1BA8B064C(a1, a2);
}

uint64_t sub_1BB3F617C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v3 = *a1;
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  sub_1BB3FD058(v4, (uint64_t)a2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BB86E854();
  type metadata accessor for DebugInspectionItem();
  sub_1BB86ECBC();

  swift_bridgeObjectRelease();
  v6 = a2[13];
  v7 = a2[14];
  v8 = a2[15];
  v9 = a2[11];
  v10 = a2[12];
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a2;
  v11[3] = v10;
  v11[4] = v6;
  v11[5] = v7;
  v11[6] = v8;
  v11[7] = v9;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BB3FE800;
  *(_QWORD *)(v12 + 24) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1BB86E854();
  v14 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v14;
}

void sub_1BB3F62EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  char *v19;
  _QWORD v20[4];
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v20[3] = a3;
  v27 = a4;
  v5 = type metadata accessor for FeedPuzzleStatistic();
  v21 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v5);
  v22 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v23 = (char *)v20 - v8;
  v9 = type metadata accessor for FeedWebEmbed();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  MEMORY[0x1E0C80A78](v9);
  v20[1] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v20[2] = (char *)v20 - v12;
  v13 = type metadata accessor for FeedHeadline(0);
  v24 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v24 + 64);
  MEMORY[0x1E0C80A78](v13);
  v25 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v16);
  sub_1BA4C2DD8(a1, (uint64_t)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  v19 = (char *)&loc_1BB3F6494 + dword_1BB3F7324[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB3F64A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
  **(_QWORD **)(v1 - 72) = 0;
  return result;
}

uint64_t sub_1BB3F736C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB3F7910(a1, type metadata accessor for DebugInspectionHeadline, a2);
}

uint64_t sub_1BB3F738C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(*(id *)(a2 + 40), sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = sub_1BA907794(a1);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = 0x656E696C64616568;
  a3[3] = 0xE800000000000000;
  a3[4] = v9;
  a3[5] = v10;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F7430(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;

  v3 = v2;
  sub_1BA4E0A38();
  sub_1BB86EC14();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = a1;
  swift_retain();
  v7 = a1;
  v8 = (void *)sub_1BB86E854();
  sub_1BB4005FC();
  sub_1BB86E968();
  swift_release();
  swift_release();

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v7;
  v9[3] = a2;
  v9[4] = v3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BB40069C;
  *(_QWORD *)(v10 + 24) = v9;
  swift_retain();
  v11 = v7;
  v12 = a2;
  v13 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v11;
  v14 = v11;
  v15 = (void *)sub_1BB86E854();
  v16 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1BB3F75F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1BB3F797C(a1, a2);
}

uint64_t sub_1BB3F7604(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  unint64_t v27;

  v2 = (_QWORD *)v1;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for FeedWebEmbed();
  v26 = *((_QWORD *)v7 - 1);
  v8 = *(_QWORD *)(v26 + 64);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - v11;
  sub_1BB3FB59C(a1, v1);
  v13 = *(_QWORD *)(a1 + v7[11]);
  v25[0] = *(_QWORD *)(a1 + v7[10]);
  v25[1] = v13;
  sub_1BB86C4FC();
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  if (!v15)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    goto LABEL_5;
  }
  sub_1BA4C2DD8((uint64_t)&v12[v7[13]], (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v16 = type metadata accessor for WebEmbedDataVisualization();
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v6, 1, v16);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if (v17 != 1)
  {
LABEL_5:
    v27 = sub_1BA8F2AEC(MEMORY[0x1E0DEE9D8]);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4860, (uint64_t (*)(uint64_t))sub_1BA81E3D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1BB86E9E0();
    goto LABEL_6;
  }
  v18 = v2[19];
  v19 = v2[20];
  __swift_project_boxed_opaque_existential_1(v2 + 16, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
LABEL_6:
  sub_1BB86EBE4();
  swift_release();
  swift_release();
  sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v20 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v21 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v9, v21 + v20, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v22 = (void *)sub_1BB86E854();
  type metadata accessor for DebugInspectionWebEmbed();
  v23 = sub_1BB86E968();
  swift_release();
  swift_release();

  return v23;
}

uint64_t sub_1BB3F78F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB3F7910(a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionWebEmbed, a2);
}

uint64_t sub_1BB3F7910@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  sub_1BA4C2DD8(a1, a3, a2);
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F7964@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB3F7C74(a1, a2);
}

uint64_t sub_1BB3F797C@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  _BYTE v5[560];

  memcpy(v5, __src, sizeof(v5));
  memcpy(a2, __src, 0x230uLL);
  type metadata accessor for DebugInspectionItem();
  swift_storeEnumTagMultiPayload();
  return sub_1BB10E0C0((uint64_t)v5);
}

uint64_t sub_1BB3F79F4@<X0>(void *a1@<X0>, id *a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(*a2, sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = sub_1BA907794(a1);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = 0x6575737369;
  a3[3] = 0xE500000000000000;
  a3[4] = v9;
  a3[5] = v10;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F7A94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(*(id *)(a2 + 16), sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = sub_1BA907794(a1);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = 6775156;
  a3[3] = 0xE300000000000000;
  a3[4] = v9;
  a3[5] = v10;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F7B30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB3F7C74(a1, a2);
}

uint64_t sub_1BB3F7B48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  v7 = sub_1BA907794(a1);
  *a3 = v6;
  a3[1] = v5;
  a3[2] = 0x656C7A7A7570;
  a3[3] = 0xE600000000000000;
  a3[4] = v7;
  a3[5] = v8;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F7BC0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB3F7C74(a1, a2);
}

uint64_t sub_1BB3F7BD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  v7 = sub_1BA907794(a1);
  *a3 = v6;
  a3[1] = v5;
  a3[2] = 0x7420656C7A7A7570;
  a3[3] = 0xEB00000000657079;
  a3[4] = v7;
  a3[5] = v8;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB3F7C5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB3F7C74(a1, a2);
}

uint64_t sub_1BB3F7C74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  type metadata accessor for DebugInspectionItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3F7CE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  v11 = sub_1BA907794(a1);
  *a5 = v10;
  a5[1] = v9;
  a5[2] = a3;
  a5[3] = a4;
  a5[4] = v11;
  a5[5] = v12;
  type metadata accessor for DebugInspectionItem();
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_1BB3F7D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  uint64_t v19;

  v15 = sub_1BB3F7E0C(a2);
  v17 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BA8F2B44(MEMORY[0x1E0DEE9D8]);
  *a8 = a3;
  a8[1] = a4;
  a8[2] = a5;
  a8[3] = a6;
  v19 = MEMORY[0x1E0DEE9E8];
  a8[4] = a1;
  a8[5] = v19;
  a8[6] = v19;
  a8[7] = v19;
  a8[8] = result;
  a8[9] = a7;
  a8[10] = v15;
  a8[11] = v17;
  return result;
}

uint64_t sub_1BB3F7E0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  void (*v12)(_BYTE *, uint64_t);
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE v26[12];

  v2 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v26[-v9];
  v11 = objc_msgSend(*(id *)(a1 + 24), sel_contentDirectory, v8);
  sub_1BB8729A0();

  sub_1BB86C55C();
  swift_bridgeObjectRelease();
  sub_1BB86C5BC();
  v12 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v12(v6, v3);
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1BB86C610();
  v14 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  LODWORD(v6) = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if ((_DWORD)v6)
  {
    v22 = sub_1BB86C694();
    v24 = v23;
    sub_1BB8729DC();
    v25 = sub_1BB8729B8();
    sub_1BA69D314(v22, v24);
  }
  else
  {
    if (qword_1EF2A7360 != -1)
      swift_once();
    v15 = (id)qword_1EF3D0928;
    v16 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    sub_1BA4A2870((unint64_t *)&qword_1ED3A0CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v18 = sub_1BB87420C();
    v20 = v19;
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v20;
    sub_1BB86EF44("Found no user features to include in inspection data at %{public}@", 66, 2, &dword_1BA493000, v15, v16, v17);

    swift_bridgeObjectRelease();
    v25 = 0;
  }
  v12(v10, v3);
  return v25;
}

uint64_t sub_1BB3F8280(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v5 = *a1;
  sub_1BB3FED74();
  sub_1BB86EC14();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a3;
  v6[3] = a2;
  v6[4] = v5;
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BB86E854();
  type metadata accessor for DebugInspectionHeadline(0);
  sub_1BB86E974();
  swift_release();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = a3;
  swift_unknownObjectRetain();
  v8 = (void *)sub_1BB86E854();
  v9 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  return v9;
}

void *sub_1BB3F83BC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  unint64_t v44;
  double v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  unsigned int v53;
  unsigned int v54;
  void *v55;
  unsigned __int8 v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  id v86;
  void *v87;
  unint64_t v88;
  unint64_t v89;
  BOOL v90;
  BOOL v91;
  uint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  double *v99;
  uint64_t *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char **v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  id v112;
  void *v113;
  unsigned int v114;
  unsigned __int8 v115;
  id v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  id v126;
  id v127;
  unint64_t v128;
  uint64_t v129;
  id v130;
  unsigned int v131;
  id v132;
  id v133;
  void *v134;
  unsigned __int8 v135;
  uint64_t v136;
  id v137;
  id v138;
  id v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  unint64_t v147;
  unint64_t v148;
  id v149;
  id v150;
  id v151;
  void *v152;
  uint64_t v153;
  void *v154;
  id v155;
  id v156;
  id v157;
  void *v158;
  void *v159;
  id v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  char *v164;
  uint64_t v165;
  id v166;
  id v167;
  id v168;
  id v169;
  unint64_t v170;
  uint64_t v171;
  char *v172;
  id v173;
  id v174;
  id v175;
  uint64_t v176;
  void *v177;
  id v178;
  id v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  void *v190;
  void *v191;
  id v192;
  void *v193;
  id v194;
  unsigned __int8 v195;
  id v196;
  void *v197;
  id v198;
  unsigned __int8 v199;
  uint64_t v200;
  uint64_t v201;
  void *result;
  unsigned __int8 *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  id v213;
  id v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int v225;
  unsigned int v226;
  uint64_t v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  id v233;
  id v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  char *v242;
  id v243;
  unint64_t *v244;
  uint64_t v245;
  char *v246;
  void *ObjectType;
  void *v248;
  id v249;
  _QWORD v250[72];
  id v251[55];
  __int128 v252;
  __int128 v253;
  uint64_t v254;

  v240 = a5;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v9);
  v242 = (char *)&v204 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v204 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v204 - v15;
  v17 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1E0C80A78](v17);
  v244 = (unint64_t *)((char *)&v204 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v245 = *a1;
  ObjectType = (void *)swift_getObjectType();
  v243 = objc_msgSend(a2, sel_scoreProfile);
  v248 = sub_1BB3F9BE0(a2);
  v19 = objc_msgSend(a2, sel_respondsToSelector_, sel_contentWithContext_);
  v20 = 0;
  v21 = 0;
  v254 = a4;
  v246 = v16;
  if ((v19 & 1) == 0)
    goto LABEL_14;
  v22 = objc_msgSend(a2, sel_contentWithContext_, *(_QWORD *)(a3 + 24));
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_anfContent);

    if (v24)
    {
      v25 = objc_msgSend(v24, sel_anfDocumentAssetHandles);

      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
      v26 = sub_1BB872DB4();

      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        v33 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v33)
          goto LABEL_6;
      }
      else if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        if ((v26 & 0xC000000000000001) != 0)
        {
          v27 = (id)MEMORY[0x1BCCE4630](0, v26);
        }
        else
        {
          if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_124:
            sub_1BA69D490(v238, v239);
            __break(1u);
            goto LABEL_125;
          }
          v27 = *(id *)(v26 + 32);
        }
        v28 = v27;
        swift_bridgeObjectRelease();
        v29 = objc_msgSend(v28, sel_uniqueKey);

        v30 = sub_1BB8729A0();
        v32 = v31;

        v21 = v32;
        v20 = v30;
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
  }
  v20 = 0;
  v21 = 0;
LABEL_13:
  v16 = v246;
  a4 = v254;
LABEL_14:
  v235 = v21;
  v236 = v20;
  v234 = sub_1BB3F9E50(a2, a4);
  LODWORD(v229) = objc_msgSend(a2, sel_respondsToSelector_, sel_bodyTextLength);
  if ((v229 & 1) != 0)
    v233 = objc_msgSend(a2, sel_bodyTextLength);
  else
    v233 = 0;
  v34 = objc_msgSend(a2, sel_clusterID);
  if (v34)
  {
    v35 = v34;
    v36 = sub_1BB8729A0();
    v231 = v37;
    v232 = v36;

  }
  else
  {
    v231 = 0xE000000000000000;
    v232 = 0;
  }
  v230 = sub_1BB3FF0B4(a2, a4);
  v38 = objc_msgSend(a2, sel_lastFetchedDate);
  if (v38)
  {
    v39 = v38;
    sub_1BB86C874();

    v40 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v16, 0, 1, v40);
  }
  else
  {
    v41 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v16, 1, 1, v41);
  }
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_float16FullBodyEncoding) & 1) != 0
    && (v42 = objc_msgSend(a2, sel_float16FullBodyEncoding)) != 0)
  {
    v43 = v42;
    v238 = sub_1BB86C6E8();
    v239 = v44;

  }
  else
  {
    v238 = 0;
    v239 = 0xF000000000000000;
  }
  v228 = objc_msgSend(a2, sel_halfLife);
  v45 = 0.0;
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_halfLifeOverride) & 1) != 0
    && (v46 = objc_msgSend(a2, sel_halfLifeOverride)) != 0)
  {
    LODWORD(v227) = 0;
    v45 = (double)(unint64_t)v46;
  }
  else
  {
    LODWORD(v227) = 1;
  }
  v237 = (uint64_t)v13;
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_hasAudioTrack) & 1) == 0)
    goto LABEL_124;
  v226 = objc_msgSend(a2, sel_hasAudioTrack);
  v225 = objc_msgSend(a2, sel_hasVideo);
  v47 = objc_msgSend(a2, sel_identifier);
  v48 = sub_1BB8729A0();
  v223 = v49;
  v224 = v48;

  v222 = objc_msgSend(a2, sel_isAIGenerated);
  v50 = *(void **)(a3 + 24);
  v51 = objc_msgSend(v50, sel_paidAccessChecker);
  if (!v51)
  {
LABEL_125:
    sub_1BA69D490(v238, v239);
    __break(1u);
    goto LABEL_126;
  }
  v221 = objc_msgSend(v51, sel_canGetSubscriptionToChannel_, objc_msgSend(a2, sel_sourceChannel));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v249 = v50;
  v52 = objc_msgSend(v50, sel_paidAccessChecker);
  if (!v52)
  {
LABEL_126:
    sub_1BA69D490(v238, v239);
    __break(1u);
    goto LABEL_127;
  }
  v53 = objc_msgSend(v52, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(a2, sel_sourceChannel));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v54 = objc_msgSend(a2, sel_isANF);
  v55 = v248;
  v220 = objc_msgSend(v248, sel_isEvergreen);
  v219 = objc_msgSend(v55, sel_isCoread);
  v56 = objc_msgSend(a2, sel_respondsToSelector_, sel_isFeatured);
  v57 = v237;
  if ((v56 & 1) == 0)
  {
LABEL_127:
    sub_1BA69D490(v238, v239);
    __break(1u);
LABEL_128:
    sub_1BA69D490(v238, v239);
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v218 = objc_msgSend(a2, sel_isFeatured);
  if ((objc_msgSend(a2, sel_isPaid) & 1) != 0)
  {
    v217 = 1;
  }
  else
  {
    if ((objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid) & 1) == 0)
    {
LABEL_132:
      sub_1BA69D490(v238, v239);
      __break(1u);
      goto LABEL_133;
    }
    v217 = objc_msgSend(a2, sel_isBundlePaid);
  }
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_parentIssue) & 1) == 0)
    goto LABEL_128;
  v58 = objc_msgSend(a2, sel_parentIssue);
  v59 = v58;
  if (v58)

  v213 = v59;
  v215 = v54;
  v216 = v53;
  v214 = objc_msgSend(a2, sel_publisherArticleVersion);
  v60 = objc_msgSend(a2, sel_publishDate);
  v205 = a3;
  if (v60)
  {
    v61 = v60;
    v62 = (uint64_t)v242;
    sub_1BB86C874();

    v63 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    v63 = sub_1BB86C8B0();
    v62 = (uint64_t)v242;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v242, 1, 1, v63);
  }
  sub_1BA5193C4(v62, v57, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BB86C8B0();
  v64 = *(_QWORD *)(v63 - 8);
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v57, 1, v63);
  if (v65 == 1)
  {
    sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    v66 = 0;
  }
  else
  {
    sub_1BB86C85C();
    v66 = v67;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v57, v63);
  }
  v68 = v254;
  v69 = objc_msgSend(a2, sel_sourceChannelID);
  if (v69)
  {
    v70 = v69;
    v242 = (char *)sub_1BB8729A0();
    v237 = v71;

  }
  else
  {
    v242 = 0;
    v237 = 0xE000000000000000;
  }
  v72 = objc_msgSend(a2, sel_sourceName);
  if (v72)
  {
    v73 = v72;
    v74 = sub_1BB8729A0();
    v211 = v75;
    v212 = v74;

  }
  else
  {
    v211 = 0xE000000000000000;
    v212 = 0;
  }
  v76 = objc_msgSend(a2, sel_sourceFeedID);
  if (v76)
  {
    v77 = v76;
    v78 = sub_1BB8729A0();
    v209 = v79;
    v210 = v78;

  }
  else
  {
    v209 = 0;
    v210 = 0;
  }
  v80 = sub_1BB3FF308(a2, v68);
  v81 = objc_msgSend(a2, sel_title);
  v208 = v80;
  if (v81)
  {
    v82 = v81;
    v83 = sub_1BB8729A0();
    v206 = v84;
    v207 = v83;

  }
  else
  {
    v206 = 0;
    v207 = 0;
  }
  v85 = v229 ^ 1;
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_float16TitleEncoding) & 1) != 0
    && (v86 = objc_msgSend(a2, sel_float16TitleEncoding)) != 0)
  {
    v87 = v86;
    v229 = sub_1BB86C6E8();
    v89 = v88;

  }
  else
  {
    v229 = 0;
    v89 = 0xF000000000000000;
  }
  v90 = v65 == 1;
  v91 = v213 != 0;
  v92 = sub_1BB3FF778(a2, v254);
  v93 = v244;
  v94 = v235;
  *v244 = v236;
  v93[1] = v94;
  v95 = (unint64_t)v233;
  v93[2] = (unint64_t)v234;
  v93[3] = v95;
  *((_BYTE *)v93 + 32) = v85 & 1;
  v96 = v231;
  v93[5] = v232;
  v93[6] = v96;
  v93[7] = v230;
  sub_1BA5193C4((uint64_t)v246, (uint64_t)v93 + v17[9], (uint64_t (*)(_QWORD))sub_1BA76D78C);
  v97 = (unint64_t *)((char *)v93 + v17[10]);
  v98 = v239;
  *v97 = v238;
  v97[1] = v98;
  *(unint64_t *)((char *)v93 + v17[11]) = (unint64_t)v228;
  v99 = (double *)((char *)v93 + v17[12]);
  *v99 = v45;
  *((_BYTE *)v99 + 8) = v227;
  *((_BYTE *)v93 + v17[13]) = v226;
  *((_BYTE *)v93 + v17[14]) = v225;
  v100 = (uint64_t *)((char *)v93 + v17[15]);
  v101 = v223;
  *v100 = v224;
  v100[1] = v101;
  *((_BYTE *)v93 + v17[16]) = v222;
  *((_BYTE *)v93 + v17[17]) = v221;
  *((_BYTE *)v93 + v17[18]) = v216;
  *((_BYTE *)v93 + v17[19]) = v215;
  *((_BYTE *)v93 + v17[20]) = v220;
  *((_BYTE *)v93 + v17[21]) = v219;
  *((_BYTE *)v93 + v17[22]) = v218;
  *((_BYTE *)v93 + v17[23]) = v217;
  *((_BYTE *)v93 + v17[24]) = v91;
  v102 = (char *)v93 + v17[25];
  *(_QWORD *)v102 = v214;
  v102[8] = 0;
  v103 = (char *)v93 + v17[26];
  *(_QWORD *)v103 = v66;
  v103[8] = v90;
  v104 = (char **)((char *)v93 + v17[27]);
  v105 = v237;
  *v104 = v242;
  v104[1] = (char *)v105;
  v106 = v211;
  v104[2] = (char *)v212;
  v104[3] = (char *)v106;
  v107 = (uint64_t *)((char *)v93 + v17[28]);
  v108 = v209;
  *v107 = v210;
  v107[1] = v108;
  *(unint64_t *)((char *)v93 + v17[29]) = (unint64_t)v208;
  v109 = (uint64_t *)((char *)v93 + v17[30]);
  v110 = v206;
  *v109 = v207;
  v109[1] = v110;
  v111 = (uint64_t *)((char *)v93 + v17[31]);
  *v111 = v229;
  v111[1] = v89;
  *(unint64_t *)((char *)v93 + v17[32]) = v92;
  v112 = objc_msgSend(v249, sel_paidAccessChecker);
  if (!v112)
    goto LABEL_129;
  v113 = v112;
  v114 = objc_msgSend(a2, sel_isPaid);
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v115 = objc_msgSend(a2, sel_isBundlePaid);
  else
    v115 = 0;
  v116 = objc_msgSend(a2, sel_sourceChannel);
  v117 = (uint64_t)v116;
  if (v116)
  {
    v118 = objc_msgSend(v116, sel_identifier);
    swift_unknownObjectRelease();
    v119 = sub_1BB8729A0();
    v117 = v120;

    if (v114)
      goto LABEL_70;
LABEL_75:
    if ((v115 & 1) != 0)
      goto LABEL_79;
    goto LABEL_76;
  }
  v119 = 0;
  if (!v114)
    goto LABEL_75;
LABEL_70:
  v121 = objc_msgSend(v113, sel_purchaseProvider);
  if (v117)
  {
    v122 = objc_msgSend(v121, sel_purchasedTagIDs);
    v123 = sub_1BB873030();

    LOBYTE(v122) = sub_1BA761FE4(v119, v117, v123);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v122 & 1) == 0)
    {
      if ((v115 & 1) == 0)
        goto LABEL_100;
      goto LABEL_79;
    }
LABEL_76:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_77;
  }
  swift_unknownObjectRelease();
  if ((v115 & 1) == 0)
    goto LABEL_100;
LABEL_79:
  if (v117)
  {
    v124 = (char *)objc_msgSend(objc_msgSend(v113, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v124, v124 + 1))
    {
      sub_1BB873B64();
      swift_unknownObjectRelease();
    }
    else
    {
      v252 = 0u;
      v253 = 0u;
    }
    v125 = MEMORY[0x1E0DEE9B8];
    sub_1BA6A09F0((uint64_t)&v252, (uint64_t)v250, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    if (v250[3])
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v126 = v251[0];
        v127 = objc_msgSend(v251[0], sel_integerValue);
        if (v127 == (id)-1)
        {

          goto LABEL_102;
        }
        v128 = (unint64_t)v127;
        ObjectType = v126;
        v129 = v125;
LABEL_90:
        if (objc_getAssociatedObject(v124, (const void *)~v128))
        {
          sub_1BB873B64();
          swift_unknownObjectRelease();
        }
        else
        {
          v252 = 0u;
          v253 = 0u;
        }
        sub_1BA6A09F0((uint64_t)&v252, (uint64_t)v250, (unint64_t *)&qword_1ED3BA040, v129 + 8);
        if (v250[3])
        {
          sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v130 = v251[0];
            v131 = objc_msgSend(v130, sel_integerValue);

            if ((((v131 + 1) ^ ((_DWORD)v128 + 1)) & 1) != 0)
              goto LABEL_102;
          }
          else
          {

            if ((v128 & 1) != 0)
              goto LABEL_102;
          }
        }
        else
        {
          sub_1BA6EDA74((uint64_t)v250);

          if ((v128 & 1) != 0)
          {
LABEL_102:
            v132 = objc_msgSend(objc_msgSend(v113, sel_bundleSubscriptionProvider), sel_bundleSubscription);
            swift_unknownObjectRelease();
            v133 = objc_msgSend(v132, sel_bundleChannelIDs);

            v134 = (void *)sub_1BB872970();
            v135 = objc_msgSend(v133, sel_containsObject_, v134);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();

            if ((v135 & 1) == 0)
              goto LABEL_103;
LABEL_77:
            LODWORD(v239) = 1;
            goto LABEL_104;
          }
        }
LABEL_100:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_103;
      }
    }
    else
    {
      sub_1BA6EDA74((uint64_t)v250);
    }
    v129 = v125;
    ObjectType = 0;
    v128 = 0;
    goto LABEL_90;
  }
  swift_unknownObjectRelease();
LABEL_103:
  LODWORD(v239) = 0;
LABEL_104:
  v136 = v205;
  v137 = sub_1BB3F9BE0(a2);
  v138 = objc_msgSend(v137, sel_debugFields);
  v139 = objc_msgSend(v138, sel_contentTriggerScores);

  v140 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  ObjectType = a2;
  v141 = (char *)v140;
  v142 = sub_1BB87276C();

  MEMORY[0x1E0C80A78](v143);
  v144 = v245;
  v145 = v254;
  v146 = v241;
  v238 = sub_1BB3FD194(v142, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, id))sub_1BB3FF9A0);
  swift_bridgeObjectRelease();

  v237 = sub_1BB400748(v145, v144, v136, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))sub_1BB40005C);
  v147 = sub_1BB3FF9AC(v243);
  v235 = v148;
  v236 = v147;
  v149 = sub_1BB3F9BE0(ObjectType);
  v150 = objc_msgSend(v149, sel_debugFields);
  v151 = objc_msgSend(v150, sel_nicheContentScores);

  v242 = v141;
  v152 = ObjectType;
  v153 = sub_1BB87276C();

  swift_bridgeObjectRetain();
  sub_1BB3FD464(v153, v145);
  v234 = v154;
  v241 = v146;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v155 = v249;
  v156 = objc_msgSend(v249, sel_readingHistory);
  v157 = objc_msgSend(v152, sel_articleID);
  if (!v157)
  {
    sub_1BB8729A0();
    v157 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  LODWORD(v233) = objc_msgSend(v156, sel_hasArticleBeenRead_, v157);

  v158 = v248;
  v159 = v248;
  sub_1BA954AD4(v158, (uint64_t)&v252);
  sub_1BA6A09F0((uint64_t)&v252, (uint64_t)v251, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  v246 = v159;
  v160 = objc_msgSend(v246, sel_debugFields);
  v161 = (unint64_t)objc_msgSend(v160, sel_scoringType);

  if ((v161 & 0x8000000000000000) != 0)
  {
LABEL_133:
    sub_1BB873EA0();
    __break(1u);
    JUMPOUT(0x1BB3F9BD0);
  }
  v162 = 0xE700000000000000;
  v163 = 0x6E776F6E6B6E55;
  switch(v161)
  {
    case 0uLL:
      break;
    case 1uLL:
      v162 = 0xE600000000000000;
      v163 = 0x79636167654CLL;
      break;
    case 2uLL:
      v162 = 0xE600000000000000;
      v163 = 0x726569766158;
      break;
    case 3uLL:
      v162 = 0x80000001BB98B900;
      v163 = 0xD000000000000012;
      break;
    default:
      v163 = 0x746C7561666544;
      break;
  }
  v231 = v163;
  v232 = v162;
  v164 = v246;

  v248 = (void *)sub_1BB3FFC44(v248);
  v230 = v165;

  v166 = objc_msgSend(v155, sel_readingHistory);
  v167 = objc_msgSend(v152, sel_articleID);
  if (!v167)
  {
    sub_1BB8729A0();
    v167 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  LODWORD(v229) = objc_msgSend(v166, sel_hasArticleBeenSeen_, v167);

  v168 = sub_1BB3F9BE0(v152);
  v169 = objc_msgSend(v168, sel_cohortMemberships);
  sub_1BA49A224(0, &qword_1EF2C35C8);
  v170 = sub_1BB872DB4();

  v171 = v254;
  swift_bridgeObjectRetain();
  v172 = (char *)v241;
  v241 = sub_1BB3FDFCC(v170, v171);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v173 = sub_1BB3F9BE0(v152);
  v174 = objc_msgSend(v173, sel_debugFields);
  v175 = objc_msgSend(v174, sel_tagWeightsByID);

  v176 = sub_1BB87276C();
  swift_bridgeObjectRetain();
  sub_1BB3FD464(v176, v171);
  v228 = v177;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v178 = sub_1BB3F9BE0(v152);
  v179 = objc_msgSend(v178, sel_debugFields);
  v180 = objc_msgSend(v179, sel_featureWeightsByID);

  v181 = sub_1BB87276C();
  swift_bridgeObjectRetain();
  v182 = v245;
  swift_bridgeObjectRetain();
  swift_retain();
  v183 = sub_1BB3FDC64(v181, v182, v171);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v184 = objc_msgSend(v246, sel_debugFields);
  v185 = objc_msgSend(v184, sel_scoringAssetsIdentifier);

  v242 = v172;
  v227 = v183;
  if (v185)
  {
    v186 = sub_1BB8729A0();
    v188 = v187;

  }
  else
  {
    v186 = 0;
    v188 = 0;
  }
  v189 = objc_msgSend(v249, sel_subscriptionController);
  v190 = ObjectType;
  if (!v189)
    goto LABEL_130;
  v191 = v189;
  v254 = v188;
  v192 = objc_msgSend(ObjectType, sel_sourceChannel);
  v193 = v192;
  if (v192)
  {
    v194 = objc_msgSend(v192, sel_identifier);
    swift_unknownObjectRelease();
    sub_1BB8729A0();

    v193 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v195 = objc_msgSend(v191, sel_hasAutoFavoriteSubscriptionForTagID_, v193);

  v196 = objc_msgSend(v249, sel_subscriptionController);
  if (!v196)
    goto LABEL_131;
  v197 = v196;
  v198 = objc_msgSend(v190, sel_sourceChannel);
  LOBYTE(v250[0]) = v239;
  v250[1] = v238;
  v250[2] = v237;
  v250[3] = v236;
  v250[4] = v235;
  v250[5] = v234;
  LOBYTE(v250[6]) = (_BYTE)v233;
  sub_1BA6A09F0((uint64_t)v251, (uint64_t)&v250[7], &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  v250[62] = v231;
  v250[63] = v232;
  v250[64] = v248;
  v250[65] = v230;
  LOBYTE(v250[66]) = v229;
  v250[67] = v241;
  v250[68] = v228;
  v250[69] = v227;
  v250[70] = v186;
  v250[71] = v254;
  v199 = objc_msgSend(v197, sel_hasSubscriptionToTag_, v198);

  swift_unknownObjectRelease();
  v200 = v240;
  sub_1BA5193C4((uint64_t)v244, v240, type metadata accessor for DebugInspectionArticleData);
  v201 = type metadata accessor for DebugInspectionHeadline(0);
  result = memcpy((void *)(v200 + *(int *)(v201 + 20)), v250, 0x240uLL);
  v203 = (unsigned __int8 *)(v200 + *(int *)(v201 + 24));
  *v203 = v195;
  v203[1] = v199;
  return result;
}

id sub_1BB3F9BE0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  result = objc_msgSend(a1, sel_scoreProfile);
  if (!result)
  {
    if (qword_1EF2A7360 != -1)
      swift_once();
    v5 = (id)qword_1EF3D0928;
    v6 = sub_1BB8732F4();
    v7 = MEMORY[0x1E0DED1E8];
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87FC80;
    v9 = objc_msgSend(a1, sel_articleID);
    v10 = sub_1BB8729A0();
    v12 = v11;

    v13 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v14 = sub_1BA6A2D8C();
    *(_QWORD *)(v8 + 64) = v14;
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v12;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, v13, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_bridgeObjectRetain();
    v15 = sub_1BB872A00();
    *(_QWORD *)(v8 + 96) = v13;
    *(_QWORD *)(v8 + 104) = v14;
    *(_QWORD *)(v8 + 72) = v15;
    *(_QWORD *)(v8 + 80) = v16;
    v21 = *(_QWORD *)(v2 + 112);
    v22 = *(_QWORD *)(v2 + 120);
    swift_bridgeObjectRetain();
    v17 = sub_1BB872A00();
    *(_QWORD *)(v8 + 136) = v13;
    *(_QWORD *)(v8 + 144) = v14;
    *(_QWORD *)(v8 + 112) = v17;
    *(_QWORD *)(v8 + 120) = v18;
    sub_1BB86EF44("Inspector encountered missing score profile for %@ in group %@ with title %@. Generating one as a fallback.", 107, 2, &dword_1BA493000, v5, v6, v8, v21, v22);

    swift_bridgeObjectRelease();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))v7);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v19 + 32) = a1;
    sub_1BB872DCC();
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
    swift_unknownObjectRetain();
    v20 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    FCAssignPersonalizationScoresToHeadlines();

    return (id)sub_1BB3F9BE0(a1);
  }
  return result;
}

id sub_1BB3F9E50(void *a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  void *v6;
  unsigned int v7;
  unsigned __int8 v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  id v23;
  unsigned int v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  char isUniquelyReferenced_nonNull_native;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  char v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  __int128 v51;
  __int128 v52;
  char v53[16];
  _QWORD aBlock[3];
  void *v55;
  void (*v56)(uint64_t, uint64_t, void *);
  uint64_t v57;

  if (!objc_msgSend(a1, sel_isPaid))
    goto LABEL_40;
  result = objc_msgSend(*(id *)(v2 + 24), sel_paidAccessChecker);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = objc_msgSend(a1, sel_isPaid);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v8 = objc_msgSend(a1, sel_isBundlePaid);
  else
    v8 = 0;
  v9 = objc_msgSend(a1, sel_sourceChannel);
  v10 = (uint64_t)v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_identifier);
    swift_unknownObjectRelease();
    v12 = sub_1BB8729A0();
    v10 = v13;

    if (v7)
      goto LABEL_8;
LABEL_13:
    if ((v8 & 1) != 0)
      goto LABEL_16;
    goto LABEL_14;
  }
  v12 = 0;
  if (!v7)
    goto LABEL_13;
LABEL_8:
  v14 = objc_msgSend(v6, sel_purchaseProvider);
  if (v10)
  {
    v15 = objc_msgSend(v14, sel_purchasedTagIDs);
    v16 = sub_1BB873030();

    LOBYTE(v15) = sub_1BA761FE4(v12, v10, v16);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      if ((v8 & 1) == 0)
        goto LABEL_36;
      goto LABEL_16;
    }
LABEL_14:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v17 = 1;
    goto LABEL_41;
  }
  swift_unknownObjectRelease();
  if ((v8 & 1) == 0)
    goto LABEL_36;
LABEL_16:
  if (!v10)
  {
    swift_unknownObjectRelease();
    goto LABEL_40;
  }
  v18 = (char *)objc_msgSend(objc_msgSend(v6, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v18, v18 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  v19 = MEMORY[0x1E0DEE9B8];
  sub_1BA6A09F0((uint64_t)&v51, (uint64_t)aBlock, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
  if (!v55)
  {
    sub_1BA6EDA74((uint64_t)aBlock);
    goto LABEL_26;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    v20 = 0;
    v22 = 0;
    goto LABEL_27;
  }
  v20 = v50;
  v21 = objc_msgSend(v50, sel_integerValue);
  if (v21 == (id)-1)
  {

    goto LABEL_38;
  }
  v22 = (unint64_t)v21;
LABEL_27:
  if (objc_getAssociatedObject(v18, (const void *)~v22))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  sub_1BA6A09F0((uint64_t)&v51, (uint64_t)aBlock, (unint64_t *)&qword_1ED3BA040, v19 + 8);
  if (!v55)
  {
    sub_1BA6EDA74((uint64_t)aBlock);
LABEL_35:

    if ((v22 & 1) != 0)
      goto LABEL_38;
LABEL_36:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_35;
  v23 = v50;
  v24 = objc_msgSend(v23, sel_integerValue);

  if ((((v24 + 1) ^ ((_DWORD)v22 + 1)) & 1) == 0)
    goto LABEL_36;
LABEL_38:
  v25 = objc_msgSend(objc_msgSend(v6, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v26 = objc_msgSend(v25, sel_bundleChannelIDs);

  v27 = (void *)sub_1BB872970();
  LOBYTE(v25) = objc_msgSend(v26, sel_containsObject_, v27);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if ((v25 & 1) != 0)
  {
    v17 = 1;
    goto LABEL_41;
  }
LABEL_40:
  v17 = 0;
LABEL_41:
  v28 = swift_allocObject();
  v29 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v28 + 16) = MEMORY[0x1E0DEE9E0];
  v30 = (_QWORD *)(v28 + 16);
  v31 = objc_msgSend(a1, sel_globalCohorts);
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v31, sel_cohortWithPreferredType_, v17);

    if (v33)
    {
      v34 = v33;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v29;
      *v30 = 0x8000000000000000;
      sub_1BB4C0788((uint64_t)v34, 42, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
      v29 = aBlock[0];
      *v30 = aBlock[0];

      swift_bridgeObjectRelease();
    }
  }
  v36 = objc_msgSend(a1, sel_publisherID);
  if (v36)
  {
    v37 = v36;
    v38 = sub_1BB8729A0();
    v40 = v39;

    v41 = objc_msgSend(a1, sel_publisherCohorts);
    if (v41)
    {
      v42 = v41;
      v43 = objc_msgSend(v41, sel_cohortWithPreferredType_, v17);

      if (v43)
      {
        v44 = v43;
        v45 = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v29;
        *v30 = 0x8000000000000000;
        sub_1BB4C0788((uint64_t)v44, v38, v40, v45);
        *v30 = aBlock[0];

        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  v46 = swift_allocObject();
  *(_DWORD *)(v46 + 16) = v17;
  *(_QWORD *)(v46 + 24) = v28;
  v56 = sub_1BB400094;
  v57 = v46;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB3FC120;
  v55 = &block_descriptor_51;
  v47 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateTopicCohortsWithBlock_, v47);
  _Block_release(v47);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v48 = swift_bridgeObjectRetain();
  v49 = sub_1BB3FCAEC(v48, a2, (uint64_t)v53, sub_1BA6AFD6C, (SEL *)&selRef_clicks, (SEL *)&selRef_rawClicks);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)v49;
}

uint64_t sub_1BB3FA568(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v4 = objc_msgSend(a1, sel_topicIDs);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BB872DB4();

  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v7 = (_QWORD *)sub_1BA976550(v6);
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a1, sel_publisherID);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BB8729A0();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1BB393588(0, v7[2] + 1, 1, v7);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BB393588((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[2 * v15];
  v16[4] = v10;
  v16[5] = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4C010C(a2 + 40, (uint64_t)v30);
  v18 = v31;
  v17 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v19 = v13[2];
  if (v19)
  {
    v29 = v17;
    swift_bridgeObjectRetain();
    v20 = v13 + 5;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v23 = *v20;
      if (*v20)
      {
        v24 = *(v20 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BA6EA0D0(0, v21[2] + 1, 1, v21);
        v26 = v21[2];
        v25 = v21[3];
        if (v26 >= v25 >> 1)
          v21 = sub_1BA6EA0D0((_QWORD *)(v25 > 1), v26 + 1, 1, v21);
        v21[2] = v26 + 1;
        v22 = &v21[2 * v26];
        v22[4] = v24;
        v22[5] = v23;
      }
      v20 += 2;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    v17 = v29;
  }
  else
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v27 = TagServiceType.fetchTags(for:qualityOfService:)((uint64_t)v21, 25, v18, v17);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v27;
}

uint64_t sub_1BB3FA7E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v34 = a3;
  v33 = a2;
  v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain_n();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease();
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08B8, (uint64_t (*)(uint64_t))sub_1BA5746F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v30 = sub_1BB86E9E0();
    MEMORY[0x1E0C80A78](v30);
    sub_1BA4B07F0(0, &qword_1EF2C35E8, (uint64_t (*)(uint64_t))sub_1BB3FED74, v29);
    swift_allocObject();
    sub_1BB86EA58();
    v31 = sub_1BB86EBF0();
    swift_release();
    swift_release();
    return v31;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_26;
LABEL_3:
  v36 = v3 & 0xC000000000000001;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v6 = 4;
  v35 = v3;
  while (1)
  {
    v8 = v6 - 4;
    if (v36)
    {
      v9 = (void *)MEMORY[0x1BCCE4630](v6 - 4, v3);
      v10 = v6 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_22;
    }
    else
    {
      v9 = (void *)swift_unknownObjectRetain();
      v10 = v6 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    v37 = v10;
    v11 = v4;
    v12 = v9;
    v13 = objc_msgSend(v9, sel_identifier, v33, v34);
    v14 = sub_1BB8729A0();
    v16 = v15;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_1BA6E35A8(v14, v16);
    v20 = v5[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      goto LABEL_23;
    v3 = v18;
    if (v5[3] < v22)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v18 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_1BB4C1CF4();
      if ((v3 & 1) != 0)
      {
LABEL_4:
        v7 = v5[7];
        swift_unknownObjectRelease();
        *(_QWORD *)(v7 + 8 * v19) = v12;
        goto LABEL_5;
      }
    }
LABEL_18:
    v5[(v19 >> 6) + 8] |= 1 << v19;
    v25 = (uint64_t *)(v5[6] + 16 * v19);
    *v25 = v14;
    v25[1] = v16;
    *(_QWORD *)(v5[7] + 8 * v19) = v12;
    v26 = v5[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_24;
    v5[2] = v28;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v6;
    v4 = v11;
    v3 = v35;
    if (v37 == v11)
      goto LABEL_26;
  }
  sub_1BB4ADCB8(v22, isUniquelyReferenced_nonNull_native);
  v23 = sub_1BA6E35A8(v14, v16);
  if ((v3 & 1) == (v24 & 1))
  {
    v19 = v23;
    if ((v3 & 1) != 0)
      goto LABEL_4;
    goto LABEL_18;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

id sub_1BB3FAB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id result;
  void *v38;
  unsigned int v39;
  unsigned int v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  unint64_t v53;
  id v54;
  unsigned __int8 v55;
  id v56;
  id v57;
  void *v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  id v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  char **v64;
  BOOL v65;
  unsigned __int8 v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  id v88[55];
  _QWORD v89[70];
  __int128 v90;
  __int128 v91;

  v83 = a1;
  v84 = a2;
  v86 = a6;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v71 - v14;
  v16 = objc_msgSend(a3, sel_identifier, v13);
  v17 = sub_1BB8729A0();
  v81 = v18;
  v82 = v17;

  v19 = objc_msgSend(a3, sel_title);
  v20 = sub_1BB8729A0();
  v79 = v21;
  v80 = v20;

  objc_msgSend(a4, sel_agedPersonalizationScore);
  v23 = v22;
  v24 = &selRef_backgroundColor;
  v25 = objc_msgSend(objc_msgSend(a3, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  v26 = sub_1BB8729A0();
  v77 = v27;
  v78 = v26;

  v28 = objc_msgSend(a3, sel_publishDate);
  if (v28)
  {
    v29 = v28;
    sub_1BB86C874();

    v30 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 0, 1, v30);
  }
  else
  {
    v30 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 1, 1, v30);
  }
  sub_1BA5193C4((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BB86C8B0();
  v31 = *(_QWORD *)(v30 - 8);
  v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v15, 1, v30);
  if (v73 == 1)
  {
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    v32 = 0;
  }
  else
  {
    sub_1BB86C85C();
    v32 = v33;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v30);
  }
  v76 = objc_msgSend(a3, sel_halfLife);
  v34 = objc_msgSend(objc_msgSend(a3, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v35 = sub_1BB8729A0();
  v74 = v36;
  v75 = v35;

  v85 = a5;
  v87 = *(id *)(a5 + 24);
  result = objc_msgSend(v87, sel_paidAccessChecker);
  if (!result)
  {
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v38 = result;
  v39 = objc_msgSend(a3, sel_isPaid);
  v40 = objc_msgSend(a3, sel_isBundlePaid);
  v41 = objc_msgSend(objc_msgSend(a3, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v42 = sub_1BB8729A0();
  v44 = v43;

  if (v39)
  {
    v45 = a4;
    v46 = objc_msgSend(objc_msgSend(v38, sel_purchaseProvider), sel_purchasedTagIDs);
    v47 = sub_1BB873030();

    LOBYTE(v46) = sub_1BA761FE4(v42, v44, v47);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v72) = 1;
      a4 = v45;
      v24 = &selRef_backgroundColor;
      goto LABEL_37;
    }
    a4 = v45;
    v24 = &selRef_backgroundColor;
    if (!v40)
      goto LABEL_32;
  }
  else if ((v40 & 1) == 0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_35:
    LODWORD(v72) = 1;
    goto LABEL_37;
  }
  v48 = (char *)objc_msgSend(objc_msgSend(v38, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v49 = objc_getAssociatedObject(v48, v48 + 1);
  v72 = v42;
  if (v49)
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v90 = 0u;
    v91 = 0u;
  }
  v50 = MEMORY[0x1E0DEE9B8];
  sub_1BA6A09F0((uint64_t)&v90, (uint64_t)v89, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
  if (!v89[3])
  {
    sub_1BA6EDA74((uint64_t)v89);
    goto LABEL_22;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    v71 = a4;
    v51 = 0;
    v53 = 0;
    goto LABEL_23;
  }
  v51 = v88[0];
  v52 = objc_msgSend(v88[0], sel_integerValue);
  if (v52 == (id)-1)
  {

    goto LABEL_34;
  }
  v53 = (unint64_t)v52;
  v71 = a4;
LABEL_23:
  if (objc_getAssociatedObject(v48, (const void *)~v53))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v90 = 0u;
    v91 = 0u;
  }
  sub_1BA6A09F0((uint64_t)&v90, (uint64_t)v89, (unint64_t *)&qword_1ED3BA040, v50 + 8);
  if (!v89[3])
  {
    sub_1BA6EDA74((uint64_t)v89);
LABEL_31:

    a4 = v71;
    if ((v53 & 1) != 0)
      goto LABEL_34;
LABEL_32:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_31;
  v54 = v88[0];
  v55 = objc_msgSend(v54, sel_integerValue);

  a4 = v71;
  if (((v55 ^ v53) & 1) == 0)
    goto LABEL_32;
LABEL_34:
  v56 = objc_msgSend(objc_msgSend(v38, sel_bundleSubscriptionProvider, v71, v72), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v57 = objc_msgSend(v56, sel_bundleChannelIDs);

  v58 = (void *)sub_1BB872970();
  v59 = objc_msgSend(v57, sel_containsObject_, v58);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if ((v59 & 1) != 0)
    goto LABEL_35;
LABEL_36:
  LODWORD(v72) = 0;
LABEL_37:
  v60 = objc_msgSend(a3, sel_isPaid, v71);
  v61 = v87;
  if ((v60 & 1) != 0)
    v62 = 1;
  else
    v62 = objc_msgSend(a3, sel_isBundlePaid);
  result = objc_msgSend(v61, sel_paidAccessChecker);
  if (!result)
    goto LABEL_44;
  v63 = objc_msgSend(result, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(a3, v24[117]));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  result = objc_msgSend(v61, sel_paidAccessChecker);
  if (result)
  {
    v64 = v24;
    v65 = v73 == 1;
    v66 = objc_msgSend(result, sel_canGetSubscriptionToChannel_, objc_msgSend(a3, (SEL)v64 + 456));
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v67 = a4;
    sub_1BA954AD4(a4, (uint64_t)&v90);
    sub_1BA6A09F0((uint64_t)&v90, (uint64_t)v88, &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    v68 = v83;
    v69 = sub_1BB3FF778(a3, v83);
    v70 = sub_1BB400748(v68, v84, v85, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))sub_1BB400A64);
    v89[0] = v82;
    v89[1] = v81;
    v89[2] = v80;
    v89[3] = v79;
    v89[4] = v23;
    v89[5] = v78;
    v89[6] = v77;
    v89[7] = v32;
    LOBYTE(v89[8]) = v65;
    v89[9] = v76;
    v89[10] = v75;
    v89[11] = v74;
    LOBYTE(v89[12]) = v72;
    BYTE1(v89[12]) = v62;
    BYTE2(v89[12]) = v63;
    BYTE3(v89[12]) = v66;
    sub_1BA6A09F0((uint64_t)v88, (uint64_t)&v89[13], &qword_1EF2C35C0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    v89[68] = v69;
    v89[69] = v70;
    return memcpy(v86, v89, 0x230uLL);
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1BB3FB400(uint64_t a1, void *a2, const char *a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v7 = (id)qword_1EF3D0928;
  v8 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = objc_msgSend(a2, sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA6A2D8C();
  *(_QWORD *)(v9 + 64) = v15;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v9 + 96) = v14;
  *(_QWORD *)(v9 + 104) = v15;
  *(_QWORD *)(v9 + 72) = 0;
  *(_QWORD *)(v9 + 80) = 0xE000000000000000;
  sub_1BB86EF44(a3, a4, 2, &dword_1BA493000, v7, v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3FB59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD v21[2];

  sub_1BAFD3C84(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedWebEmbed();
  sub_1BA4C2DD8(a1 + *(int *)(v10 + 48), (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v11 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    v12 = type metadata accessor for DebugInspectionHeadline(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    sub_1BA4B07F0(0, &qword_1EF2C3618, (uint64_t (*)(uint64_t))sub_1BAFD3C84, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v14 = *((_QWORD *)v9 + 5);
    swift_unknownObjectRetain();
    v15 = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedHeadline);
    MEMORY[0x1E0C80A78](v15);
    v21[-2] = v14;
    v21[-1] = a2;
    sub_1BA4E0A38();
    sub_1BB86EC14();
    v21[1] = MEMORY[0x1E0DEE9E0];
    v16 = (void *)sub_1BB86E854();
    sub_1BA5746F8();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9640, (uint64_t (*)(uint64_t))sub_1BA4E0A38, MEMORY[0x1E0DEAF38]);
    sub_1BB86EA88();
    swift_release();

    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = v14;
    swift_unknownObjectRetain();
    swift_retain();
    v18 = (void *)sub_1BB86E854();
    type metadata accessor for DebugInspectionHeadline(0);
    sub_1BB86E968();
    swift_release();
    swift_release();

    v19 = (void *)sub_1BB86E854();
    v13 = sub_1BB86E974();
    swift_unknownObjectRelease();
    swift_release();

  }
  return v13;
}

uint64_t sub_1BB3FB888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_1BA4C2DD8(a1, a2, type metadata accessor for DebugInspectionHeadline);
  v3 = type metadata accessor for DebugInspectionHeadline(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_1BB3FB8E0(uint64_t a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a2;
  v3 = (int *)type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB40045C();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v10);
  v40 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v37 = (uint64_t)&v36 - v13;
  sub_1BAFD3C84(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(int *)(v7 + 48);
  v18 = (uint64_t)&v9[v17];
  v19 = *(int *)(v7 + 64);
  v20 = (uint64_t)&v9[v19];
  v21 = a1 + v17;
  v22 = a1 + v19;
  sub_1BA4C2DD8(a1, (uint64_t)v9, v23);
  sub_1BA4C2DD8(v21, v18, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8(v22, v20, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA5193C4((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAFD3C84);
  v24 = v18;
  v25 = v37;
  sub_1BA5193C4(v24, v37, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v26 = v40;
  sub_1BA5193C4(v20, v40, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v27 = v41;
  v28 = *(_QWORD *)(v41 + 40);
  v38 = *(_QWORD *)(v41 + 48);
  v39 = v28;
  v29 = type metadata accessor for FeedWebEmbed();
  v30 = v27 + *(int *)(v29 + 32);
  v31 = (char *)v5 + v3[5];
  v32 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v31, v30, v32);
  sub_1BA4C2DD8(v25, (uint64_t)v5 + v3[6], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8(v26, (uint64_t)v5 + v3[7], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v5 + v3[8], (uint64_t (*)(_QWORD))sub_1BAFD3C84);
  sub_1BA4C2DD8(v27 + *(int *)(v29 + 52), (uint64_t)v5 + v3[9], (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v33 = v38;
  *v5 = v39;
  v5[1] = v33;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C3608, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionWebEmbed, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v34 = sub_1BB86E9E0();
  sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAFD3C84);
  return v34;
}

uint64_t sub_1BB3FBBF0(id *a1, uint64_t *a2, uint64_t a3)
{
  id v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  void *v32;
  unsigned int v33;
  void *v34;
  char v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unsigned int v45;
  char v46;
  char v47;
  char v48;
  char v49;
  unsigned int v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;

  v5 = *a1;
  result = (uint64_t)objc_msgSend(*a1, sel_isHidden);
  if ((result & 1) != 0)
    return result;
  v56 = a2;
  result = (uint64_t)objc_msgSend(v5, sel_tagID);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  v7 = (void *)result;
  v8 = sub_1BB8729A0();
  v10 = v9;

  result = (uint64_t)objc_msgSend(v5, sel_tagID);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v11 = (void *)result;
  v12 = sub_1BB8729A0();
  v14 = v13;

  v54 = v10;
  if (*(_QWORD *)(a3 + 16) && (v15 = sub_1BA6E35A8(v12, v14), (v16 & 1) != 0))
  {
    v17 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v15);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v17, sel_name);
    swift_unknownObjectRelease();
    v19 = sub_1BB8729A0();
    v52 = v20;
    v53 = v19;

  }
  else
  {
    swift_bridgeObjectRelease();
    v52 = 0;
    v53 = 0;
  }
  v21 = objc_msgSend(v5, sel_hasFlowRate);
  v22 = 0;
  v23 = 0;
  if (v21)
  {
    objc_msgSend(v5, sel_flowRate);
    v23 = v24;
  }
  v25 = objc_msgSend(v5, sel_hasSubscriptionRate);
  if (v25)
  {
    objc_msgSend(v5, sel_subscriptionRate);
    v22 = v26;
  }
  v27 = objc_msgSend(v5, sel_hasQuality);
  v28 = 0;
  if (v27)
  {
    objc_msgSend(v5, sel_quality);
    v28 = v29;
  }
  v30 = objc_msgSend(v5, sel_hasOntologyLevel);
  v55 = v8;
  if (v30)
    v51 = objc_msgSend(v5, sel_ontologyLevel);
  else
    v51 = 0;
  v31 = objc_msgSend(v5, sel_hasContentAndRelevanceInfo);
  if (v31)
  {
    result = (uint64_t)objc_msgSend(v5, sel_contentAndRelevanceInfo);
    if (result)
    {
      v32 = (void *)result;
      v50 = objc_msgSend((id)result, sel_contentRating);

      goto LABEL_21;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v50 = 0;
LABEL_21:
  v33 = objc_msgSend(v5, sel_hasContentAndRelevanceInfo);
  if (!v33)
  {
    v45 = 0;
    goto LABEL_25;
  }
  result = (uint64_t)objc_msgSend(v5, sel_contentAndRelevanceInfo);
  if (!result)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  v34 = (void *)result;
  v45 = objc_msgSend((id)result, sel_relevanceRating);

LABEL_25:
  v35 = v21 ^ 1;
  v46 = v25 ^ 1;
  v47 = v27 ^ 1;
  v48 = v30 ^ 1;
  v49 = v31 ^ 1;
  v36 = objc_msgSend(v5, sel_isManagedTopic);
  v37 = objc_msgSend(v5, sel_isManagedTopicWinner);
  v38 = objc_msgSend(v5, sel_isEligibleForGrouping);
  v39 = objc_msgSend(v5, sel_isEligibleForGroupingIfFavorited);
  v40 = objc_msgSend(v5, sel_isEligibleForGroupingIfAutofavorited);
  v41 = (_QWORD *)*v56;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v56 = (uint64_t)v41;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BB3936B0(0, v41[2] + 1, 1, v41);
    v41 = (_QWORD *)result;
    *v56 = result;
  }
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
  {
    result = (uint64_t)sub_1BB3936B0((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
    v41 = (_QWORD *)result;
    *v56 = result;
  }
  v41[2] = v43 + 1;
  v44 = &v41[14 * v43];
  v44[4] = v55;
  v44[5] = v54;
  v44[6] = v53;
  v44[7] = v52;
  v44[8] = v23;
  *((_BYTE *)v44 + 72) = v35;
  v44[10] = v22;
  *((_BYTE *)v44 + 88) = v46;
  v44[12] = v28;
  *((_BYTE *)v44 + 104) = v47;
  v44[14] = v51;
  *((_BYTE *)v44 + 120) = v48;
  *((_DWORD *)v44 + 31) = v50;
  *((_BYTE *)v44 + 128) = v49;
  *((_DWORD *)v44 + 33) = v45;
  *((_BYTE *)v44 + 136) = v33 ^ 1;
  *((_BYTE *)v44 + 137) = v36;
  *((_BYTE *)v44 + 138) = v37;
  *((_BYTE *)v44 + 139) = v38;
  *((_BYTE *)v44 + 140) = v39;
  *((_BYTE *)v44 + 141) = v40;
  return result;
}

void sub_1BB3FC044(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  id v8;
  void *v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v8 = objc_msgSend(a3, sel_cohortWithPreferredType_, a4);
  if (v8)
  {
    v9 = v8;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v10 = v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *(_QWORD *)(a5 + 16);
    *(_QWORD *)(a5 + 16) = 0x8000000000000000;
    sub_1BB4C0788((uint64_t)v10, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a5 + 16) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

  }
}

uint64_t sub_1BB3FC124(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v8 = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = 0x8000000000000000;
  sub_1BB4C0794((uint64_t)v8, a1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a4 + 16) = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_1BB3FC1DC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, id);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, id))(a1 + 32);
  v5 = sub_1BB8729A0();
  v7 = v6;
  swift_retain();
  v8 = a3;
  v4(v5, v7, v8);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_1BB3FC258@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X3>, SEL *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;

  v9 = *a1;
  v8 = a1[1];
  v10 = (void *)a1[2];
  v11 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain_n();
  v12 = v10;
  if (v11)
  {
    v13 = sub_1BA6E35A8(v9, v8);
    if ((v14 & 1) != 0)
    {
      v15 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v13);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend(v15, sel_name);
      v34 = sub_1BB8729A0();
      v35 = v17;

      v18 = objc_msgSend(v15, sel_identifier);
      v9 = sub_1BB8729A0();
      v20 = v19;
      swift_bridgeObjectRelease();

      v21 = v34;
      v8 = v20;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  v21 = v9;
  v35 = v8;
LABEL_6:
  objc_msgSend(v12, sel_impressions, v34);
  v22 = 0.0;
  if (v23 > 0.0)
  {
    objc_msgSend(v12, *a3);
    v25 = v24;
    objc_msgSend(v12, sel_impressions);
    v22 = v25 / v26;
  }
  objc_msgSend(v12, *a4);
  v28 = v27;
  objc_msgSend(v12, *a3);
  v30 = v29;
  objc_msgSend(v12, sel_impressions);
  v32 = v31;

  result = swift_unknownObjectRelease();
  *(_QWORD *)a5 = v21;
  *(_QWORD *)(a5 + 8) = v35;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = v9;
  *(_QWORD *)(a5 + 32) = v8;
  *(double *)(a5 + 40) = v22;
  *(_QWORD *)(a5 + 48) = v28;
  *(_BYTE *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 64) = v30;
  *(_QWORD *)(a5 + 72) = v32;
  *(_QWORD *)(a5 + 80) = 0;
  *(_BYTE *)(a5 + 88) = 1;
  return result;
}

uint64_t sub_1BB3FC440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = *(void **)(a5 + 32);
  if ((objc_msgSend(v11, sel_respondsToSelector_, sel_fetchAggregateMapForPersonalizingItem_completion_) & 1) != 0)
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_1BA573ED8;
    *(_QWORD *)(v12 + 24) = v10;
    v15[4] = sub_1BB4000A8;
    v15[5] = v12;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1BB3FC598;
    v15[3] = &block_descriptor_60;
    v13 = _Block_copy(v15);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    objc_msgSend(v11, sel_fetchAggregateMapForPersonalizingItem_completion_, a6, v13);
    _Block_release(v13);
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

uint64_t sub_1BB3FC598(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BA49A224(0, (unint64_t *)&unk_1EF2C35B0);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2C4FC0);
  sub_1BB4000F4();
  v2 = sub_1BB87276C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BB3FC638(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;

  swift_getObjectType();
  sub_1BB400014();
  v12 = a1;
  swift_unknownObjectRetain();
  v32 = sub_1BB872A00();
  v14 = v13;
  v15 = sub_1BB3FD748(v12, a4);
  v16 = objc_msgSend(v12, sel_personalizationIdentifier);
  v17 = sub_1BB8729A0();
  v19 = v18;

  v20 = objc_msgSend(objc_msgSend(*(id *)(a3 + 24), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  v21 = objc_msgSend(v20, sel_personalizationTreatment);
  swift_unknownObjectRelease();
  v22 = objc_msgSend(v21, sel_defaultScoringConfig);

  if (v22)
  {
    objc_msgSend(v22, sel_decayFactor);
    v24 = v23;

    objc_msgSend(a2, sel_personalizationValueWithBaseline_decayRate_, a5, v24);
    v26 = v25;
    objc_msgSend(a2, sel_clicks);
    v28 = v27;
    objc_msgSend(a2, sel_impressions);
    v30 = v29;
    v31 = objc_msgSend(a2, sel_eventCount);
    swift_unknownObjectRelease();

    *(_QWORD *)a6 = v32;
    *(_QWORD *)(a6 + 8) = v14;
    *(_QWORD *)(a6 + 16) = v15;
    *(_QWORD *)(a6 + 24) = v17;
    *(_QWORD *)(a6 + 32) = v19;
    *(_QWORD *)(a6 + 40) = v26;
    *(_QWORD *)(a6 + 48) = 0;
    *(_BYTE *)(a6 + 56) = 1;
    *(_QWORD *)(a6 + 64) = v28;
    *(_QWORD *)(a6 + 72) = v30;
    *(_QWORD *)(a6 + 80) = v31;
    *(_BYTE *)(a6 + 88) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_1BB3FC848(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7;
  unint64_t v13;
  char v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = 0;
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v13 = sub_1BA6E35A8(a1, a2);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    a1 = 0;
    a2 = 0;
    v17 = 0;
    v19 = 0;
    goto LABEL_9;
  }
  v15 = *(id *)(*(_QWORD *)(a4 + 56) + 16 * v13);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v15;
  if (sub_1BB3FD748(v16, a5))
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    v17 = sub_1BB872904();
    v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getObjectType();
    sub_1BB400014();
    v17 = sub_1BB872A00();
    v19 = v20;
  }
  swift_bridgeObjectRetain();
  objc_msgSend(a3, sel_doubleValue);
  v7 = v21;
  swift_unknownObjectRelease();

LABEL_9:
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = v17;
  *(_QWORD *)(a6 + 24) = v19;
  *(_QWORD *)(a6 + 32) = v7;
  *(_BYTE *)(a6 + 40) = 0;
}

uint64_t sub_1BB3FC9E0()
{
  uint64_t v0;

  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  return v0;
}

uint64_t sub_1BB3FCA48()
{
  sub_1BB3FC9E0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugInspector()
{
  return objc_opt_self();
}

uint64_t sub_1BB3FCA88()
{
  sub_1BA4B07F0(0, &qword_1EF2C35E8, (uint64_t (*)(uint64_t))sub_1BB3FED74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB3FCAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), SEL *a5, SEL *a6)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  int64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v58;
  uint64_t v59[3];
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  __int128 v67;
  uint64_t v68;
  char v69;
  uint64_t v70;

  v7 = v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v11 = a1;
  v70 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B4DC(0, v8, 0);
  v9 = v70;
  result = a4(v11);
  v14 = result;
  v15 = 0;
  v16 = v11 + 64;
  v51 = v11 + 80;
  v52 = v8;
  v53 = v13;
  v54 = v11;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v11 + 32))
  {
    v19 = (unint64_t)v14 >> 6;
    if ((*(_QWORD *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v11 + 36) != v13)
      goto LABEL_26;
    v58 = v15;
    v20 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v14);
    v21 = v20[1];
    v22 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v14);
    v59[0] = *v20;
    v59[1] = v21;
    v59[2] = (uint64_t)v22;
    swift_bridgeObjectRetain();
    v23 = v22;
    v24 = v7;
    v25 = v23;
    sub_1BB3FC258(v59, a2, a5, a6, (uint64_t)&v60);
    if (v24)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return v9;
    }

    result = swift_bridgeObjectRelease();
    v26 = v60;
    v27 = v61;
    v28 = v62;
    v29 = v63;
    v30 = v64;
    v31 = v65;
    v32 = v66;
    v33 = v67;
    v35 = *(_QWORD *)(v9 + 16);
    v34 = *(_QWORD *)(v9 + 24);
    v36 = v68;
    v37 = v69;
    v70 = v9;
    if (v35 >= v34 >> 1)
    {
      v49 = v67;
      v50 = v62;
      v47 = v61;
      v48 = v60;
      v45 = v65;
      v46 = v63;
      v44 = v66;
      result = sub_1BAC7B4DC(v34 > 1, v35 + 1, 1);
      v32 = v44;
      v31 = v45;
      v29 = v46;
      v27 = v47;
      v26 = v48;
      v33 = v49;
      v28 = v50;
      v9 = v70;
    }
    *(_QWORD *)(v9 + 16) = v35 + 1;
    v38 = v9 + 96 * v35;
    *(_QWORD *)(v38 + 32) = v26;
    *(_QWORD *)(v38 + 40) = v27;
    *(_OWORD *)(v38 + 48) = v28;
    *(_QWORD *)(v38 + 64) = v29;
    *(_QWORD *)(v38 + 72) = v30;
    *(_QWORD *)(v38 + 80) = v31;
    *(_BYTE *)(v38 + 88) = v32;
    *(_OWORD *)(v38 + 96) = v33;
    *(_QWORD *)(v38 + 112) = v36;
    *(_BYTE *)(v38 + 120) = v37;
    v11 = v54;
    v17 = 1 << *(_BYTE *)(v54 + 32);
    if (v14 >= v17)
      goto LABEL_27;
    v39 = *(_QWORD *)(v16 + 8 * v19);
    if ((v39 & (1 << v14)) == 0)
      goto LABEL_28;
    v13 = v53;
    if (*(_DWORD *)(v54 + 36) != v53)
      goto LABEL_29;
    v40 = v39 & (-2 << (v14 & 0x3F));
    if (v40)
    {
      v17 = __clz(__rbit64(v40)) | v14 & 0xFFFFFFFFFFFFFFC0;
      v7 = 0;
      v18 = v52;
    }
    else
    {
      v41 = v19 + 1;
      v42 = (unint64_t)(v17 + 63) >> 6;
      v7 = 0;
      v18 = v52;
      if (v19 + 1 < v42)
      {
        v43 = *(_QWORD *)(v16 + 8 * v41);
        if (v43)
        {
LABEL_21:
          v17 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v19)
          {
            v43 = *(_QWORD *)(v51 + 8 * v19++);
            if (v43)
            {
              v41 = v19 + 1;
              goto LABEL_21;
            }
          }
        }
      }
    }
    v15 = v58 + 1;
    v14 = v17;
    if (v58 + 1 == v18)
      return v9;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB3FCDD0(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v39[4];
  _OWORD v40[2];
  uint64_t v41;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v4 = a1;
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B4DC(0, v2, 0);
  v3 = v41;
  result = sub_1BA6AFD6C(v4);
  v7 = result;
  v8 = 0;
  v9 = v4 + 64;
  v33 = v4 + 80;
  v34 = v2;
  v35 = v6;
  v36 = v4 + 64;
  v37 = v4;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v4 + 32))
  {
    v12 = (unint64_t)v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v4 + 36) != v6)
      goto LABEL_24;
    v13 = *(_QWORD *)(v4 + 56);
    v14 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v7);
    v15 = *v14;
    v16 = v14[1];
    v17 = v13 + 16 * v7;
    v18 = *(void **)v17;
    v19 = *(_QWORD *)(v17 + 8);
    swift_bridgeObjectRetain();
    v20 = v18;
    swift_unknownObjectRetain();
    a2(v39, v15, v16, v20, v19);
    swift_unknownObjectRelease();

    result = swift_bridgeObjectRelease();
    v41 = v3;
    v22 = *(_QWORD *)(v3 + 16);
    v21 = *(_QWORD *)(v3 + 24);
    if (v22 >= v21 >> 1)
    {
      result = sub_1BAC7B4DC(v21 > 1, v22 + 1, 1);
      v3 = v41;
    }
    *(_QWORD *)(v3 + 16) = v22 + 1;
    v23 = (_OWORD *)(v3 + 96 * v22);
    v24 = v39[1];
    v23[2] = v39[0];
    v23[3] = v24;
    v25 = v39[2];
    v26 = v39[3];
    v27 = v40[0];
    *(_OWORD *)((char *)v23 + 105) = *(_OWORD *)((char *)v40 + 9);
    v23[5] = v26;
    v23[6] = v27;
    v23[4] = v25;
    v4 = v37;
    v10 = 1 << *(_BYTE *)(v37 + 32);
    if (v7 >= v10)
      goto LABEL_25;
    v9 = v36;
    v28 = *(_QWORD *)(v36 + 8 * v12);
    if ((v28 & (1 << v7)) == 0)
      goto LABEL_26;
    v6 = v35;
    if (*(_DWORD *)(v37 + 36) != v35)
      goto LABEL_27;
    v29 = v28 & (-2 << (v7 & 0x3F));
    if (v29)
    {
      v10 = __clz(__rbit64(v29)) | v7 & 0xFFFFFFFFFFFFFFC0;
      v11 = v34;
    }
    else
    {
      v30 = v12 + 1;
      v31 = (unint64_t)(v10 + 63) >> 6;
      v11 = v34;
      if (v12 + 1 < v31)
      {
        v32 = *(_QWORD *)(v36 + 8 * v30);
        if (v32)
        {
LABEL_20:
          v10 = __clz(__rbit64(v32)) + (v30 << 6);
        }
        else
        {
          while (v31 - 2 != v12)
          {
            v32 = *(_QWORD *)(v33 + 8 * v12++);
            if (v32)
            {
              v30 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    v7 = v10;
    if (v8 == v11)
      return v3;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BB3FD058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v9 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BB3F62EC(v10, a2, a3, (uint64_t)&v12);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1BB3FD194(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t, id))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  int64_t v30;
  _QWORD v31[5];
  char v32;
  char v33[8];
  uint64_t v34;
  uint64_t v35;

  v26 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v35 = v3 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v30 = 0;
  v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = v35;
  if (!v35)
    goto LABEL_7;
LABEL_4:
  v35 = (v5 - 1) & v5;
  for (i = __clz(__rbit64(v5)) | (v30 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v7 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    v11 = v10;
    a2(v31, v8, v9, v11);
    v13 = v31[0];
    v12 = v31[1];
    v15 = v31[2];
    v14 = v31[3];
    v16 = v31[4];
    v17 = v32;

    swift_bridgeObjectRelease();
    result = sub_1BA6A09F0((uint64_t)v31, (uint64_t)v33, &qword_1EF2C35E0, (uint64_t)&type metadata for DebugInspectionCohort);
    if (v34)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BB3937E8(0, v25[2] + 1, 1, v25);
        v25 = (_QWORD *)result;
      }
      v23 = v25[2];
      v22 = v25[3];
      if (v23 >= v22 >> 1)
      {
        result = (uint64_t)sub_1BB3937E8((_QWORD *)(v22 > 1), v23 + 1, 1, v25);
        v25 = (_QWORD *)result;
      }
      v25[2] = v23 + 1;
      v24 = &v25[6 * v23];
      v24[4] = v13;
      v24[5] = v12;
      v24[6] = v15;
      v24[7] = v14;
      v24[8] = v16;
      *((_BYTE *)v24 + 72) = v17 & 1;
      v5 = v35;
      if (v35)
        goto LABEL_4;
    }
    else
    {
      v5 = v35;
      if (v35)
        goto LABEL_4;
    }
LABEL_7:
    v18 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v27)
      goto LABEL_29;
    v19 = *(_QWORD *)(v26 + 8 * v18);
    v20 = v30 + 1;
    if (!v19)
    {
      v20 = v30 + 2;
      if (v30 + 2 >= v27)
        goto LABEL_29;
      v19 = *(_QWORD *)(v26 + 8 * v20);
      if (!v19)
      {
        v20 = v30 + 3;
        if (v30 + 3 >= v27)
          goto LABEL_29;
        v19 = *(_QWORD *)(v26 + 8 * v20);
        if (!v19)
        {
          v20 = v30 + 4;
          if (v30 + 4 >= v27)
            goto LABEL_29;
          v19 = *(_QWORD *)(v26 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v35 = (v19 - 1) & v19;
    v30 = v20;
  }
  v21 = v30 + 5;
  if (v30 + 5 >= v27)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v25;
  }
  v19 = *(_QWORD *)(v26 + 8 * v21);
  if (v19)
  {
    v20 = v30 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v27)
      goto LABEL_29;
    v19 = *(_QWORD *)(v26 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1BB3FD464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    while (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_23:
        v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
        v16 = *v15;
        v17 = v15[1];
        v18 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v11);
        swift_bridgeObjectRetain();
        v19 = sub_1BA6E35A8(v16, v17);
        if ((v20 & 1) != 0)
        {
          v36 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v19);
          v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          v22 = sub_1BB8729A0();
          v34 = v23;
          v35 = v22;

          v24 = objc_msgSend(v36, sel_name);
          v25 = sub_1BB8729A0();
          v32 = v26;
          v33 = v25;

          objc_msgSend(v18, sel_doubleValue);
          v28 = v27;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v37 = sub_1BB3937E8(0, v37[2] + 1, 1, v37);
          v30 = v37[2];
          v29 = v37[3];
          if (v30 >= v29 >> 1)
            v37 = sub_1BB3937E8((_QWORD *)(v29 > 1), v30 + 1, 1, v37);
          v37[2] = v30 + 1;
          v31 = &v37[6 * v30];
          v31[4] = v35;
          v31[5] = v34;
          v31[6] = v33;
          v31[7] = v32;
          v31[8] = v28;
          *((_BYTE *)v31 + 72) = 0;
        }
        else
        {
          swift_bridgeObjectRelease();

        }
      }
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v8)
      goto LABEL_30;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_30;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_30;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_30;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_23;
  }
  v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_30:
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_30;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
}

id sub_1BB3FD748(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  id result;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    v7 = objc_msgSend(v5, sel_publisherTagID);
    v8 = sub_1BB8729A0();
    v10 = v9;

    if (!*(_QWORD *)(a2 + 16) || (v11 = sub_1BA6E35A8(v8, v10), (v12 & 1) == 0))
    {

      swift_bridgeObjectRelease();
      return 0;
    }
    v13 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v11);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v5, sel_topicTagID);
    v15 = sub_1BB8729A0();
    v17 = v16;

    if (*(_QWORD *)(a2 + 16))
    {
      v18 = sub_1BA6E35A8(v15, v17);
      if ((v19 & 1) != 0)
      {
        v20 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v18);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
        v22 = objc_msgSend(v13, sel_name);
        v23 = sub_1BB8729A0();
        v25 = v24;

        *(_QWORD *)(v21 + 32) = v23;
        *(_QWORD *)(v21 + 40) = v25;
        v26 = objc_msgSend(v20, sel_name);
        v27 = sub_1BB8729A0();
        v29 = v28;

        *(_QWORD *)(v21 + 48) = v27;
        *(_QWORD *)(v21 + 56) = v29;

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return (id)v21;
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_19:

    return 0;
  }
  objc_opt_self();
  v30 = swift_dynamicCastObjCClass();
  if (v30)
  {
    v31 = (void *)v30;
    v6 = a1;
    v32 = objc_msgSend(v31, sel_lengthID);
    v33 = sub_1BB8729A0();
    v35 = v34;

    v36 = v33 == 115 && v35 == 0xE100000000000000;
    if (v36 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      return &unk_1E724C8A0;
    }
    v45 = v33 == 109 && v35 == 0xE100000000000000;
    if (v45 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();

      return &unk_1E724C8D0;
    }
    if (v33 == 108 && v35 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v58 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0)
        goto LABEL_19;
    }

    return &unk_1E724C900;
  }
  objc_opt_self();
  v37 = swift_dynamicCastObjCClass();
  if (!v37)
  {
    v46 = objc_msgSend(a1, sel_tagID);
    if (!v46)
      return 0;
    v47 = v46;
    v48 = sub_1BB8729A0();
    v50 = v49;

    if (*(_QWORD *)(a2 + 16))
    {
      swift_bridgeObjectRetain();
      v51 = sub_1BA6E35A8(v48, v50);
      if ((v52 & 1) != 0)
      {
        v53 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v51);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease_n();
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
        v54 = objc_msgSend(v53, sel_name);
        v55 = sub_1BB8729A0();
        v57 = v56;

        *(_QWORD *)(v21 + 32) = v55;
        *(_QWORD *)(v21 + 40) = v57;
        swift_unknownObjectRelease();
        return (id)v21;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v21 + 32) = v48;
    *(_QWORD *)(v21 + 40) = v50;
    return (id)v21;
  }
  v38 = (void *)v37;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  v39 = a1;
  objc_msgSend(v38, sel_groupType);
  result = (id)NSStringFromFCFeedGroupType();
  if (result)
  {
    v41 = result;
    v42 = sub_1BB8729A0();
    v44 = v43;

    *(_QWORD *)(v21 + 32) = v42;
    *(_QWORD *)(v21 + 40) = v44;

    return (id)v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB3FDC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  char v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD *v39;
  int64_t v40;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v40 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    while (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_23:
        v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
        v17 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
        v19 = *v16;
        v18 = v16[1];
        swift_bridgeObjectRetain_n();
        v20 = v17;
        v21 = sub_1BA6E35A8(v19, v18);
        if ((v22 & 1) != 0)
        {
          v36 = *(id *)(*(_QWORD *)(a2 + 56) + 16 * v21);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          v23 = v36;
          v24 = sub_1BB3FD748(v23, a3);
          if (v24)
          {
            v34 = v24;
            sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            sub_1BA6A0BA4();
            v25 = sub_1BB872904();
            v35 = v26;
            v37 = v25;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_getObjectType();
            sub_1BB400014();
            v27 = sub_1BB872A00();
            v35 = v28;
            v37 = v27;
          }
          objc_msgSend(v20, sel_doubleValue, v34);
          v30 = v29;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1BB3937E8(0, v39[2] + 1, 1, v39);
            v39 = (_QWORD *)result;
          }
          v32 = v39[2];
          v31 = v39[3];
          if (v32 >= v31 >> 1)
          {
            result = (uint64_t)sub_1BB3937E8((_QWORD *)(v31 > 1), v32 + 1, 1, v39);
            v39 = (_QWORD *)result;
          }
          v39[2] = v32 + 1;
          v33 = &v39[6 * v32];
          v33[4] = v19;
          v33[5] = v18;
          v33[6] = v37;
          v33[7] = v35;
          v33[8] = v30;
          *((_BYTE *)v33 + 72) = 0;
        }
        else
        {

          result = swift_bridgeObjectRelease_n();
        }
      }
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v13 >= v40)
      goto LABEL_33;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v40)
        goto LABEL_33;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v40)
          goto LABEL_33;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v40)
            goto LABEL_33;
          v14 = *(_QWORD *)(v5 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_23;
  }
  v15 = v13 + 4;
  if (v15 >= v40)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v39;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v40)
      goto LABEL_33;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

_QWORD *sub_1BB3FDFCC(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD *result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v3 = a1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_20:
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_21:
    swift_bridgeObjectRelease();
    return v33;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  v4 = sub_1BB873F30();
  if (!v4)
    goto LABEL_20;
LABEL_3:
  v32 = v3 & 0xC000000000000001;
  v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = 4;
  v29 = v4;
  v30 = v3;
  while (1)
  {
    if (v32)
      v6 = (id)MEMORY[0x1BCCE4630](v5 - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    result = objc_msgSend(v6, sel_tagID);
    if (!result)
      break;
    v10 = result;
    v11 = sub_1BB8729A0();
    v13 = v12;

    if (*(_QWORD *)(a2 + 16) && (v14 = sub_1BA6E35A8(v11, v13), (v15 & 1) != 0))
    {
      v16 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v14);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v16, sel_identifier);
      v18 = sub_1BB8729A0();
      v31 = v19;

      v20 = objc_msgSend(v16, sel_name);
      v21 = sub_1BB8729A0();
      v23 = v22;

      objc_msgSend(v7, sel_score);
      v25 = v24;

      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_1BB3937E8(0, v33[2] + 1, 1, v33);
      v27 = v33[2];
      v26 = v33[3];
      if (v27 >= v26 >> 1)
        v33 = sub_1BB3937E8((_QWORD *)(v26 > 1), v27 + 1, 1, v33);
      v33[2] = v27 + 1;
      v28 = &v33[6 * v27];
      v3 = v30;
      v28[4] = v18;
      v28[5] = v31;
      v28[6] = v21;
      v28[7] = v23;
      v28[8] = v25;
      *((_BYTE *)v28 + 72) = 0;
      v4 = v29;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    ++v5;
    if (v8 == v4)
      goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB3FE250(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  __int128 v19;

  v8 = v7;
  v19 = *a6;
  v14 = *((_QWORD *)a6 + 2);
  v15 = *((_QWORD *)a6 + 3);
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  sub_1BA4C010C(a3, v8 + 40);
  sub_1BA4C010C(a4, v8 + 128);
  *(_OWORD *)(v8 + 96) = v19;
  *(_QWORD *)(v8 + 112) = v14;
  *(_QWORD *)(v8 + 120) = v15;
  *(_QWORD *)(v8 + 80) = a5;
  *(_QWORD *)(v8 + 88) = a7;
  v16 = a1;
  swift_unknownObjectRetain();
  sub_1BB3F5C54();
  v17 = (void *)sub_1BB86E854();
  sub_1BB86E9EC();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t sub_1BB3FE33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[40];
  _BYTE v16[40];

  v5 = *(void **)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  sub_1BA4C010C(a1 + 40, (uint64_t)v16);
  sub_1BA4C010C(a1 + 128, (uint64_t)v15);
  v12 = *(_QWORD *)(a1 + 80);
  v6 = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB386350(a2);
  sub_1BB05B3E0(0);
  sub_1BA4A2870((unint64_t *)&qword_1EF2BA090, (uint64_t (*)(uint64_t))sub_1BB05B3E0, MEMORY[0x1E0DEAF38]);
  v7 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 104);
  v14 = v8;
  type metadata accessor for DebugInspector();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1BB3FE250(v6, v4, (uint64_t)v16, (uint64_t)v15, v7, (__int128 *)&v12, v9);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1BB3FE4B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[2];

  v7 = v6;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  sub_1BA4C010C(a3, v7 + 40);
  sub_1BA4C010C(a4, v7 + 128);
  v38 = a4;
  v39 = a3;
  v13 = type metadata accessor for DebugGroupLayoutKey();
  v14 = (_QWORD *)(a5 + *(int *)(v13 + 24));
  if (a6)
  {
    v15 = v14[4];
    v16 = v14[5];
    __swift_project_boxed_opaque_existential_1(v14 + 1, v15);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
    v18 = a1;
    swift_unknownObjectRetain();
    v40[0] = v17(v15, v16);
    sub_1BB386350(a6);
    sub_1BB05B3E0(0);
    sub_1BA4A2870((unint64_t *)&qword_1EF2BA090, (uint64_t (*)(uint64_t))sub_1BB05B3E0, MEMORY[0x1E0DEAF38]);
    v19 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = v14[4];
    v21 = v14[5];
    __swift_project_boxed_opaque_existential_1(v14 + 1, v20);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
    v23 = a1;
    swift_unknownObjectRetain();
    v19 = v22(v20, v21);
  }
  *(_QWORD *)(v7 + 80) = v19;
  type metadata accessor for DebugGroupLayoutKey();
  v24 = (_QWORD *)(a5 + *(int *)(v13 + 24));
  v25 = v24[4];
  v26 = v24[5];
  __swift_project_boxed_opaque_existential_1(v24 + 1, v25);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 64))(v40, v25, v26);
  sub_1BB00573C((uint64_t)v40, (uint64_t *)v43);
  v27 = v43[1];
  *(_OWORD *)(v7 + 96) = v43[0];
  *(_OWORD *)(v7 + 112) = v27;
  v28 = v24[4];
  v29 = v24[5];
  __swift_project_boxed_opaque_existential_1(v24 + 1, v28);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v29 + 64))(v40, v28, v29);
  v30 = v41;
  if (!v41)
  {
    sub_1BA554698((uint64_t)v40);
LABEL_9:
    v35 = v38;
    v34 = v39;
    v33 = MEMORY[0x1E0DEE9E8];
    goto LABEL_10;
  }
  v31 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  if (!v32)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    goto LABEL_9;
  }
  v33 = *(_QWORD *)(v32 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v35 = v38;
  v34 = v39;
LABEL_10:
  *(_QWORD *)(v7 + 88) = v33;
  sub_1BB3F5C54();
  v36 = (void *)sub_1BB86E854();
  sub_1BB86E9EC();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v35);
  __swift_destroy_boxed_opaque_existential_1(v34);
  sub_1BA4A2E80(a5, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  return v7;
}

uint64_t sub_1BB3FE794()
{
  _QWORD *v0;

  return sub_1BB3F5E50(v0);
}

uint64_t sub_1BB3FE7AC(uint64_t *a1)
{
  _QWORD *v1;

  return sub_1BB3F617C(a1, v1);
}

uint64_t sub_1BB3FE7C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB3FE800@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB3F7D5C(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_1BB3FE810()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB3FE834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v1 = type metadata accessor for FeedPuzzleStatistic();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 32);
  swift_unknownObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_14;
    case 1u:
      type metadata accessor for PuzzleStatisticValue(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        v7 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7))
        {
          v8 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
        }
      }
      v9 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      v10 = v5 + *(int *)(v9 + 20);
      v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 5 || v11 == 4)
      {
        v12 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12))
        {
          v13 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
        }
      }
      v5 += *(int *)(v9 + 24);
LABEL_14:
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 5 || v14 == 4)
      {
        v15 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15))
          goto LABEL_25;
      }
      return swift_deallocObject();
    case 2u:
      v16 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16))
      {
        v17 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v5, v17);
        v18 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        v19 = v5 + *(int *)(v18 + 24);
        swift_bridgeObjectRelease();
        v20 = *(_QWORD *)(v19 + 24);
        if (v20 >> 60 != 15)
          sub_1BA69D314(*(_QWORD *)(v19 + 16), v20);
        swift_bridgeObjectRelease();
      }
      return swift_deallocObject();
    case 3u:
      v21 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      v22 = v5 + *(int *)(v21 + 24);
      v23 = type metadata accessor for PuzzleStreak();
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
      if (!v24(v22, 1, v23))
      {
        v25 = sub_1BB86BEC0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v22, v25);
      }
      v5 += *(int *)(v21 + 28);
      if (!v24(v5, 1, v23))
      {
LABEL_25:
        v26 = sub_1BB86BEC0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v5, v26);
      }
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB3FEB6C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB3FECEC(a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic, 0xD000000000000010, 0x80000001BB98BE10, a2);
}

uint64_t sub_1BB3FEBA0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3FEBDC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3F7BD8(a1, v2 + 16, a2);
}

uint64_t sub_1BB3FEBF4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  if (*(_QWORD *)(v0 + 168))
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocObject();
}

uint64_t sub_1BB3FEC60@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3F7B48(a1, v2 + 16, a2);
}

uint64_t sub_1BB3FEC7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3F7A94(a1, v2 + 16, a2);
}

uint64_t sub_1BB3FEC98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3F79F4(a1, (id *)(v2 + 16), a2);
}

uint64_t sub_1BB3FECBC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB3FECEC(a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed, 0x6465626D45626577, 0xE800000000000000, a2);
}

uint64_t sub_1BB3FECEC@<X0>(void *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return sub_1BB3F7CE4(a1, v5 + ((v10 + 16) & ~v10), a3, a4, a5);
}

uint64_t sub_1BB3FED60()
{
  return sub_1BB400524();
}

void sub_1BB3FED74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C35A0)
  {
    sub_1BB3FEDD8();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C35A0);
  }
}

void sub_1BB3FEDD8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C4FB0)
  {
    sub_1BA49A224(255, (unint64_t *)&unk_1EF2C35B0);
    sub_1BA4EFE00(255, (unint64_t *)&unk_1EF2C4FC0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C4FB0);
  }
}

void *sub_1BB3FEE6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB3F83BC(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BB3FEE88()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3FEEAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3FB400(a1, *(void **)(v1 + 16), "Failed to create inspection for headline %@, error=%@", 53);
}

uint64_t sub_1BB3FEED0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for FeedHeadline(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = v1[10];
  v5 = v3 + v4 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v6 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);

    v8 = v5 + *(int *)(v6 + 28);
    v9 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = v3 + v1[11];
  v11 = sub_1BB871B24();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  if (*(_QWORD *)(v3 + v1[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v1[13]) >= 3uLL)
    swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BB3FF05C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  return sub_1BB3F738C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1BB3FF0B4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E0];
  v6 = (_QWORD *)(v4 + 16);
  v7 = objc_msgSend(a1, sel_globalConversionStats);
  if (v7)
  {
    v8 = v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v5;
    *v6 = 0x8000000000000000;
    sub_1BB4C0794((uint64_t)v8, 42, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
    v5 = aBlock[0];
    *v6 = aBlock[0];

    swift_bridgeObjectRelease();
  }
  v10 = objc_msgSend(a1, sel_publisherID);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1BB8729A0();
    v14 = v13;

    v15 = objc_msgSend(a1, sel_publisherConversionStats);
    if (v15)
    {
      v16 = v15;
      v17 = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v5;
      *v6 = 0x8000000000000000;
      sub_1BB4C0794((uint64_t)v16, v12, v14, v17);
      *v6 = aBlock[0];

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  aBlock[4] = sub_1BB40008C;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB3FC120;
  aBlock[3] = &block_descriptor_68;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateTopicConversionStatsWithBlock_, v18);
  _Block_release(v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BB3FCAEC(v19, a2, (uint64_t)&v22, sub_1BA6AFD6C, (SEL *)&selRef_conversions, (SEL *)&selRef_conversions);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

_QWORD *sub_1BB3FF308(void *a1, uint64_t a2)
{
  void *v3;
  _QWORD *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  double v19;
  double v20;
  float v21;
  unsigned int v22;
  float v23;
  unsigned int v24;
  double v25;
  float v26;
  unsigned int v27;
  _QWORD *result;
  void *v29;
  unsigned int v30;
  void *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  _QWORD *v53;

  v3 = a1;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v53 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = objc_msgSend(a1, sel_publisherID);
  if (!v5)
    goto LABEL_26;
  v6 = v5;
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = objc_msgSend(v3, sel_publisherTagMetadata);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v11 = v10;
  v50 = v7;
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BA6E35A8(v7, v9);
    if ((v13 & 1) != 0)
    {
      v14 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v12);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v15 = objc_msgSend(v14, sel_name);
      swift_unknownObjectRelease();
      v16 = sub_1BB8729A0();
      v49 = v17;

      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  v16 = 0;
  v49 = 0;
LABEL_9:
  v18 = objc_msgSend(v11, sel_hasFlowRate);
  v19 = 0.0;
  v20 = 0.0;
  if (v18)
  {
    objc_msgSend(v11, sel_flowRate);
    v20 = v21;
  }
  v22 = objc_msgSend(v11, sel_hasSubscriptionRate);
  if (v22)
  {
    objc_msgSend(v11, sel_subscriptionRate);
    v19 = v23;
  }
  v24 = objc_msgSend(v11, sel_hasQuality);
  v25 = 0.0;
  if (v24)
  {
    objc_msgSend(v11, sel_quality);
    v25 = v26;
  }
  v27 = objc_msgSend(v11, sel_hasContentAndRelevanceInfo);
  v51 = v3;
  if (v27)
  {
    result = objc_msgSend(v11, sel_contentAndRelevanceInfo);
    if (!result)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v29 = result;
    v47 = objc_msgSend(result, sel_contentRating);

  }
  else
  {
    v47 = 0;
  }
  v48 = v16;
  v30 = objc_msgSend(v11, sel_hasContentAndRelevanceInfo);
  if (!v30)
  {
    v46 = 0;
    goto LABEL_23;
  }
  result = objc_msgSend(v11, sel_contentAndRelevanceInfo);
  if (result)
  {
    v31 = result;
    v46 = objc_msgSend(result, sel_relevanceRating);

LABEL_23:
    v32 = v18 ^ 1;
    v33 = v22 ^ 1;
    v34 = v27 ^ 1;
    v35 = v30 ^ 1;
    v4 = sub_1BB3936B0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v37 = v4[2];
    v36 = v4[3];
    if (v37 >= v36 >> 1)
      v4 = sub_1BB3936B0((_QWORD *)(v36 > 1), v37 + 1, 1, v4);
    v4[2] = v37 + 1;
    v38 = &v4[14 * v37];
    v38[4] = v50;
    v38[5] = v9;
    v38[6] = v48;
    v38[7] = v49;
    *((double *)v38 + 8) = v20;
    *((_BYTE *)v38 + 72) = v32;
    *((double *)v38 + 10) = v19;
    *((_BYTE *)v38 + 88) = v33;
    *((double *)v38 + 12) = v25;
    *((_BYTE *)v38 + 104) = v24 ^ 1;
    v38[14] = 0;
    *((_BYTE *)v38 + 120) = 1;
    *((_DWORD *)v38 + 31) = v47;
    *((_BYTE *)v38 + 128) = v34;
    *((_DWORD *)v38 + 33) = v46;
    *((_BYTE *)v38 + 136) = v35;
    *(_DWORD *)((char *)v38 + 137) = 0;
    *((_BYTE *)v38 + 141) = 0;

    v53 = v4;
    v3 = v51;
LABEL_26:
    v39 = objc_msgSend(v3, sel_topics);
    if (v39)
    {
      v40 = v39;
      sub_1BA49A224(0, &qword_1ED39ECF8);
      v41 = sub_1BB872DB4();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        result = (_QWORD *)sub_1BB873F30();
        v42 = (uint64_t)result;
        if (result)
          goto LABEL_29;
      }
      else
      {
        v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (_QWORD *)swift_bridgeObjectRetain();
        if (v42)
        {
LABEL_29:
          if (v42 >= 1)
          {
            v43 = 0;
            do
            {
              if ((v41 & 0xC000000000000001) != 0)
                v44 = (id)MEMORY[0x1BCCE4630](v43, v41);
              else
                v44 = *(id *)(v41 + 8 * v43 + 32);
              v45 = v44;
              ++v43;
              v52 = v44;
              sub_1BB3FBBF0(&v52, (uint64_t *)&v53, a2);

            }
            while (v42 != v43);
            swift_bridgeObjectRelease_n();
            return v53;
          }
          __break(1u);
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease_n();
    }
    return v4;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BB3FF778(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v3 = objc_msgSend(a1, sel_topicIDs);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v5 = v3;
    v6 = sub_1BB872DB4();

  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BB0D5D6C(v6, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_16;
LABEL_6:
  result = sub_1BAC7B4F8(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v11 = v4;
    v25 = v7 & 0xC000000000000001;
    v12 = v7;
    do
    {
      if (v25)
      {
        v13 = (void *)MEMORY[0x1BCCE4630](v10, v7);
      }
      else
      {
        v13 = *(void **)(v7 + 8 * v10 + 32);
        swift_unknownObjectRetain();
      }
      v14 = objc_msgSend(v13, sel_identifier);
      v15 = sub_1BB8729A0();
      v17 = v16;

      v18 = objc_msgSend(v13, sel_name);
      v19 = sub_1BB8729A0();
      v21 = v20;
      swift_unknownObjectRelease();

      v23 = *(_QWORD *)(v11 + 16);
      v22 = *(_QWORD *)(v11 + 24);
      if (v23 >= v22 >> 1)
        sub_1BAC7B4F8(v22 > 1, v23 + 1, 1);
      ++v10;
      *(_QWORD *)(v11 + 16) = v23 + 1;
      v24 = (_QWORD *)(v11 + 32 * v23);
      v24[4] = v15;
      v24[5] = v17;
      v24[6] = v19;
      v24[7] = v21;
      v7 = v12;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void sub_1BB3FF9A0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_1BB3FC848(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), a4);
}

unint64_t sub_1BB3FF9AC(void *a1)
{
  unint64_t v1;
  id v2;
  id v3;
  unint64_t v4;
  id v6;
  _QWORD *v7;

  v1 = 0xD00000000000001CLL;
  if (!a1)
    return 0xD000000000000010;
  v2 = a1;
  v3 = objc_msgSend(v2, sel_debugFields);
  v4 = (unint64_t)objc_msgSend(v3, sel_groupingReason);

  if ((v4 & 0x8000000000000000) != 0)
  {
    sub_1BB873EA0();
    __break(1u);
    JUMPOUT(0x1BB3FFC1CLL);
  }
  switch(v4)
  {
    case 0uLL:

      v1 = 0x6E776F6E6B6E55;
      break;
    case 1uLL:

      v1 = 0x6465747065636341;
      break;
    case 2uLL:

      v1 = 0xD000000000000016;
      break;
    case 3uLL:

      v1 = 0xD00000000000001DLL;
      break;
    case 4uLL:

      v1 = 0xD000000000000019;
      break;
    case 5uLL:

      v1 = 0xD000000000000013;
      break;
    case 6uLL:

      v1 = 0xD000000000000024;
      break;
    case 7uLL:

      v1 = 0x2064657070696B53;
      break;
    case 8uLL:
    case 9uLL:

      break;
    default:
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v2, sel_debugFields);
      objc_msgSend(v6, sel_groupingReason);

      sub_1BB87420C();
      sub_1BB872AFC(v7);

      swift_bridgeObjectRelease();
      v1 = 0xD000000000000015;
      break;
  }
  return v1;
}

unint64_t sub_1BB3FFC44(void *a1)
{
  id v1;
  id v2;
  id v3;
  unint64_t v4;

  if (!a1)
    return 0xD000000000000010;
  v1 = a1;
  v2 = objc_msgSend(v1, sel_debugFields);
  v3 = objc_msgSend(v2, sel_scoringContext);

  v4 = 0x746C7561666544;
  switch((unint64_t)v3)
  {
    case 0uLL:
      break;
    case 1uLL:
      v4 = 0x6546206369706F54;
      break;
    case 3uLL:
      v4 = 0xD00000000000001BLL;
      break;
    case 4uLL:
      v4 = 0xD000000000000013;
      break;
    case 6uLL:
    case 0xFuLL:
    case 0x13uLL:
    case 0x15uLL:
    case 0x1EuLL:
      v4 = 0xD00000000000001DLL;
      break;
    case 7uLL:
      v4 = 0xD000000000000019;
      break;
    case 8uLL:
      v4 = 0xD000000000000018;
      break;
    case 9uLL:
      v4 = 0xD00000000000001ALL;
      break;
    case 0xAuLL:
      v4 = 0x20666F2074736542;
      break;
    case 0xBuLL:
      v4 = 0x756F5920726F46;
      break;
    case 0xCuLL:
      v4 = 0xD000000000000018;
      break;
    case 0xDuLL:
      v4 = 0x532074736574614CLL;
      break;
    case 0xEuLL:
      v4 = 0x654E206C61636F4CLL;
      break;
    case 0x10uLL:
      v4 = 0x6957207961646F54;
      break;
    case 0x11uLL:
      v4 = 0x6764695720676154;
      break;
    case 0x14uLL:
      v4 = 0xD000000000000017;
      break;
    case 0x16uLL:
      v4 = 0x6867696C68676948;
      break;
    case 0x17uLL:
      v4 = 0xD00000000000001BLL;
      break;
    case 0x18uLL:
      v4 = 0x6465654620676154;
      break;
    case 0x19uLL:
      v4 = 0xD00000000000001ALL;
      break;
    case 0x1AuLL:
      v4 = 0x726F462065726F4DLL;
      break;
    case 0x1BuLL:
      v4 = 0xD00000000000001FLL;
      break;
    case 0x1CuLL:
      v4 = 0xD000000000000024;
      break;
    case 0x1DuLL:
      v4 = 0xD00000000000001ALL;
      break;
    case 0x1FuLL:
      v4 = 0xD00000000000001BLL;
      break;
    case 0x20uLL:
      v4 = 0xD000000000000017;
      break;
    case 0x21uLL:
      v4 = 0xD000000000000016;
      break;
    default:
      v4 = 0x6E776F6E6B6E55;
      break;
  }

  return v4;
}

unint64_t sub_1BB400014()
{
  unint64_t result;

  result = qword_1EF2C35D0;
  if (!qword_1EF2C35D0)
  {
    sub_1BA49A224(255, (unint64_t *)&unk_1EF2C35B0);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2C35D0);
  }
  return result;
}

void sub_1BB40005C(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  sub_1BB3FC638(a1, a2, v3[2], v3[3], v3[4], a3);
}

uint64_t sub_1BB400068()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB40008C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1BB3FC124(a1, a2, a3, v3);
}

void sub_1BB400094(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BB3FC044(a1, a2, a3, *(unsigned int *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1BB4000A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB3FC440(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BB4000A8(unint64_t a1)
{
  uint64_t v1;
  void (*v2)(void);

  v2 = *(void (**)(void))(v1 + 16);
  sub_1BB3F57D8(MEMORY[0x1E0DEE9E0], a1);
  v2();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BB4000F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C35F0;
  if (!qword_1EF2C35F0)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&unk_1EF2C35B0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C35F0);
  }
  return result;
}

uint64_t objectdestroy_26Tm_2()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (int *)type metadata accessor for FeedWebEmbed();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  if (*(_QWORD *)(v2 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + v1[8];
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v7 = v2 + v1[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  swift_release();
  swift_release();
  v8 = v2 + v1[12];
  v9 = (int *)type metadata accessor for FeedHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v10 = v9[10];
    v11 = v8 + v10 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    v12 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      v13 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);

      v6(v11 + *(int *)(v12 + 28), v4);
    }
    v14 = v8 + v9[11];
    v15 = sub_1BB871B24();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    if (*(_QWORD *)(v8 + v9[12] + 8) >= 0x11uLL)
      swift_bridgeObjectRelease();
    if (*(_QWORD *)(v8 + v9[13]) >= 3uLL)
      swift_unknownObjectRelease();

  }
  v17 = v2 + v1[13];
  v18 = type metadata accessor for WebEmbedDataVisualization();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v19 = type metadata accessor for GenericDataVisualization();
      v6(v17 + *(int *)(v19 + 20), v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1BB400414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedWebEmbed() - 8) + 80);
  return sub_1BB3FB8E0(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_1BB40045C()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF2C3600)
  {
    sub_1BAFD3C84(255);
    sub_1BA6EF3B0();
    sub_1BA81E3D0();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF2C3600);
  }
}

uint64_t sub_1BB4004E0()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB40050C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB3F8280(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB400524()
{
  swift_getObjectType();
  return sub_1BB3FCA88();
}

uint64_t objectdestroy_32Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4005A0()
{
  uint64_t v0;

  return sub_1BB3FA568(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB4005B8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB4005E4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB3FA7E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB4005FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C3620)
  {
    sub_1BA5746F8();
    sub_1BB3FED74();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C3620);
  }
}

uint64_t sub_1BB400668()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_1BB40069C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;

  return sub_1BB3FAB30(a1, a2, *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

void *sub_1BB4006A8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD v5[70];

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(v2 + 16))(v5, *a1, a1[1]);
  return memcpy(a2, v5, 0x230uLL);
}

uint64_t sub_1BB400700()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB400724(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3FB400(a1, *(void **)(v1 + 16), "Failed to create inspection for issue %@, error=%@", 50);
}

uint64_t sub_1BB400748(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *__return_ptr, uint64_t, uint64_t, id, uint64_t))
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D589C0]), sel_init);
  v7 = objc_msgSend(v6, sel_personalizationIdentifier);
  v8 = sub_1BB8729A0();
  v10 = v9;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA6E35A8(v8, v10);
    if ((v11 & 1) != 0)
      swift_unknownObjectRetain();
  }
  v12 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1BB3FCDD0(a2, a4);

  swift_unknownObjectRelease();
  return v13;
}

id sub_1BB400860(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for DebugInspectorError(uint64_t a1)
{
  sub_1BB4008A8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BB4008A8(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:

      break;
    default:
      return;
  }
}

uint64_t _s8NewsFeed19DebugInspectorErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB400860(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugInspectorError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB400860(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BB4008A8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugInspectorError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BB4008A8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectorError()
{
  return &type metadata for DebugInspectorError;
}

uint64_t sub_1BB4009F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB3FEC7C(a1, a2);
}

uint64_t sub_1BB400A0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB3FEC98(a1, a2);
}

void sub_1BB400A20(_QWORD *a1@<X8>)
{
  sub_1BB3F5D90(a1);
}

void *sub_1BB400A3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB3FEE6C(a1, a2);
}

uint64_t sub_1BB400A50()
{
  return sub_1BB4005A0();
}

uint64_t sub_1BB400A68(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  int isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;

  if (a1 >> 62)
    goto LABEL_35;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BB873F30())
  {
    v3 = MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = MEMORY[0x1BCCE4630](i - 4, a1);
      v7 = i - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_30;
LABEL_11:
      v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
      swift_beginAccess();
      v9 = *v8;
      swift_bridgeObjectRetain();
      swift_release();
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v3 + 16);
      v12 = v11 + v10;
      if (__OFADD__(v11, v10))
        goto LABEL_31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(_QWORD *)(v3 + 24) >> 1)
      {
        if (*(_QWORD *)(v9 + 16))
          goto LABEL_20;
      }
      else
      {
        if (v11 <= v12)
          v14 = v11 + v10;
        else
          v14 = v11;
        v3 = sub_1BA790D24(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(_QWORD *)(v9 + 16))
        {
LABEL_20:
          v15 = *(_QWORD *)(v3 + 16);
          v16 = (*(_QWORD *)(v3 + 24) >> 1) - v15;
          sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
          if (v16 < v10)
            goto LABEL_33;
          v18 = *(_QWORD *)(v17 - 8);
          v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          v20 = *(_QWORD *)(v18 + 72);
          v21 = v3 + v19 + v20 * v15;
          v22 = v9 + v19;
          v23 = v20 * v10;
          v24 = v21 + v23;
          v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            result = sub_1BB873F84();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            v27 = *(_QWORD *)(v3 + 16);
            v28 = __OFADD__(v27, v10);
            v29 = v27 + v10;
            if (v28)
              goto LABEL_34;
            *(_QWORD *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10)
        goto LABEL_32;
LABEL_5:
      swift_bridgeObjectRelease();
      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    v6 = *(_QWORD *)(a1 + 8 * i);
    swift_retain();
    v7 = i - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB400D04(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  int isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;

  if (a1 >> 62)
    goto LABEL_35;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BB873F30())
  {
    v3 = MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = MEMORY[0x1BCCE4630](i - 4, a1);
      v7 = i - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_30;
LABEL_11:
      v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
      swift_beginAccess();
      v9 = *v8;
      swift_bridgeObjectRetain();
      swift_release();
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v3 + 16);
      v12 = v11 + v10;
      if (__OFADD__(v11, v10))
        goto LABEL_31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(_QWORD *)(v3 + 24) >> 1)
      {
        if (*(_QWORD *)(v9 + 16))
          goto LABEL_20;
      }
      else
      {
        if (v11 <= v12)
          v14 = v11 + v10;
        else
          v14 = v11;
        v3 = sub_1BA79170C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(_QWORD *)(v9 + 16))
        {
LABEL_20:
          v15 = *(_QWORD *)(v3 + 16);
          v16 = (*(_QWORD *)(v3 + 24) >> 1) - v15;
          sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
          if (v16 < v10)
            goto LABEL_33;
          v18 = *(_QWORD *)(v17 - 8);
          v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          v20 = *(_QWORD *)(v18 + 72);
          v21 = v3 + v19 + v20 * v15;
          v22 = v9 + v19;
          v23 = v20 * v10;
          v24 = v21 + v23;
          v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            result = sub_1BB873F84();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            v27 = *(_QWORD *)(v3 + 16);
            v28 = __OFADD__(v27, v10);
            v29 = v27 + v10;
            if (v28)
              goto LABEL_34;
            *(_QWORD *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10)
        goto LABEL_32;
LABEL_5:
      swift_bridgeObjectRelease();
      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    v6 = *(_QWORD *)(a1 + 8 * i);
    swift_retain();
    v7 = i - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB400FA0(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  int isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;

  if (a1 >> 62)
    goto LABEL_35;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BB873F30())
  {
    v3 = MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = MEMORY[0x1BCCE4630](i - 4, a1);
      v7 = i - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_30;
LABEL_11:
      v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      v9 = *v8;
      swift_bridgeObjectRetain();
      swift_release();
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v3 + 16);
      v12 = v11 + v10;
      if (__OFADD__(v11, v10))
        goto LABEL_31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(_QWORD *)(v3 + 24) >> 1)
      {
        if (*(_QWORD *)(v9 + 16))
          goto LABEL_20;
      }
      else
      {
        if (v11 <= v12)
          v14 = v11 + v10;
        else
          v14 = v11;
        v3 = sub_1BA791450(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(_QWORD *)(v9 + 16))
        {
LABEL_20:
          v15 = *(_QWORD *)(v3 + 16);
          v16 = (*(_QWORD *)(v3 + 24) >> 1) - v15;
          sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
          if (v16 < v10)
            goto LABEL_33;
          v18 = *(_QWORD *)(v17 - 8);
          v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          v20 = *(_QWORD *)(v18 + 72);
          v21 = v3 + v19 + v20 * v15;
          v22 = v9 + v19;
          v23 = v20 * v10;
          v24 = v21 + v23;
          v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            result = sub_1BB873F84();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            v27 = *(_QWORD *)(v3 + 16);
            v28 = __OFADD__(v27, v10);
            v29 = v27 + v10;
            if (v28)
              goto LABEL_34;
            *(_QWORD *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10)
        goto LABEL_32;
LABEL_5:
      swift_bridgeObjectRelease();
      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    v6 = *(_QWORD *)(a1 + 8 * i);
    swift_retain();
    v7 = i - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void (*sub_1BB40123C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))(uint64_t, uint64_t)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD **v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD **v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD **v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD **v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t i;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(uint64_t, uint64_t);
  uint64_t v282;
  char *v283;
  char *v284;
  int *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  _QWORD *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  int *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337[2];
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  unsigned __int8 v345;
  unsigned __int8 v346;

  v323 = a8;
  v320 = a7;
  v321 = a6;
  v322 = a5;
  v319 = a2;
  v312 = a1;
  v324 = a10;
  v325 = a9;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v333 = (uint64_t *)((char *)&v282 - v16);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v17);
  v332 = (uint64_t)&v282 - v18;
  v19 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v19);
  v331 = (uint64_t)&v282 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v334 = *((_QWORD *)v285 - 1);
  MEMORY[0x1E0C80A78](v285);
  v283 = (char *)&v282 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v284 = (char *)&v282 - v23;
  MEMORY[0x1E0C80A78](v24);
  v330 = (uint64_t)&v282 - v25;
  MEMORY[0x1E0C80A78](v26);
  v336 = (uint64_t)&v282 - v27;
  MEMORY[0x1E0C80A78](v28);
  v291 = (char *)&v282 - v29;
  MEMORY[0x1E0C80A78](v30);
  v335 = (uint64_t)&v282 - v31;
  MEMORY[0x1E0C80A78](v32);
  v311 = (uint64_t *)((char *)&v282 - v33);
  MEMORY[0x1E0C80A78](v34);
  v310 = (uint64_t)&v282 - v35;
  v308 = sub_1BB86EB84();
  v307 = *(_QWORD *)(v308 - 8);
  MEMORY[0x1E0C80A78](v308);
  v313 = (uint64_t)&v282 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v329 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v329);
  v288 = (uint64_t)&v282 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v290 = (uint64_t)&v282 - v39;
  MEMORY[0x1E0C80A78](v40);
  v293 = (uint64_t)&v282 - v41;
  MEMORY[0x1E0C80A78](v42);
  v328 = (uint64_t)&v282 - v43;
  MEMORY[0x1E0C80A78](v44);
  v326 = (unint64_t)&v282 - v45;
  MEMORY[0x1E0C80A78](v46);
  v315 = (int *)((char *)&v282 - v47);
  MEMORY[0x1E0C80A78](v48);
  v309 = (uint64_t)&v282 - v49;
  MEMORY[0x1E0C80A78](v50);
  v305 = (uint64_t)&v282 - v51;
  MEMORY[0x1E0C80A78](v52);
  v303 = (uint64_t)&v282 - v53;
  sub_1BA8CCEE8();
  v55 = v54;
  MEMORY[0x1E0C80A78](v54);
  v287 = (uint64_t)&v282 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v57);
  v289 = (uint64_t)&v282 - v58;
  MEMORY[0x1E0C80A78](v59);
  v292 = (uint64_t)&v282 - v60;
  MEMORY[0x1E0C80A78](v61);
  v327 = (uint64_t)&v282 - v62;
  MEMORY[0x1E0C80A78](v63);
  v314 = (uint64_t)&v282 - v64;
  MEMORY[0x1E0C80A78](v65);
  v306 = (uint64_t)&v282 - v66;
  MEMORY[0x1E0C80A78](v67);
  v304 = (uint64_t)&v282 - v68;
  MEMORY[0x1E0C80A78](v69);
  v71 = (char *)&v282 - v70;
  MEMORY[0x1E0C80A78](v72);
  v74 = (char *)&v282 - v73;
  MEMORY[0x1E0C80A78](v75);
  v77 = (uint64_t *)((char *)&v282 - v76);
  MEMORY[0x1E0C80A78](v78);
  v80 = (char *)&v282 - v79;
  sub_1BB403A4C(v312, (uint64_t)&v282 - v79);
  v81 = (uint64_t)v80;
  *(_QWORD *)&v80[v55[12]] = a2;
  v82 = a3;
  *(_QWORD *)&v80[v55[16]] = a3;
  v83 = a4;
  *(_QWORD *)&v80[v55[20]] = a4;
  *(_QWORD *)&v80[v55[24]] = a5;
  v84 = v321;
  *(_QWORD *)(v81 + v55[28]) = v321;
  v85 = v320;
  *(_QWORD *)(v81 + v55[32]) = v320;
  v86 = v323;
  *(_QWORD *)(v81 + v55[36]) = v323;
  *(_QWORD *)(v81 + v55[40]) = v325;
  *(_QWORD *)(v81 + v55[44]) = v324;
  v316 = v81;
  v312 = v55[12];
  v302 = v55[16];
  v301 = v55[20];
  v300 = v55[24];
  v299 = v55[28];
  v298 = v55[32];
  v297 = v55[36];
  v296 = v55[40];
  v295 = v55[44];
  sub_1BB403AA0(v81, (uint64_t)v77, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(uint64_t *)((char *)v77 + v312) = v319;
  v318 = v82;
  *(uint64_t *)((char *)v77 + v302) = v82;
  v317 = v83;
  *(uint64_t *)((char *)v77 + v301) = v83;
  *(uint64_t *)((char *)v77 + v300) = v322;
  *(uint64_t *)((char *)v77 + v299) = v84;
  *(uint64_t *)((char *)v77 + v298) = v85;
  *(uint64_t *)((char *)v77 + v297) = v86;
  *(uint64_t *)((char *)v77 + v296) = v325;
  *(uint64_t *)((char *)v77 + v295) = v324;
  v296 = *v77;
  v312 = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v87 = v321;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB403AEC((uint64_t)v77, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v88 = v55[12];
  v302 = v55[16];
  v301 = v55[20];
  v89 = v55[24];
  v90 = v55[28];
  v300 = v55[32];
  v299 = v55[36];
  v298 = v55[40];
  v297 = v55[44];
  v91 = v316;
  sub_1BB403AA0(v316, (uint64_t)v74, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)&v74[v88] = v319;
  v92 = v318;
  *(_QWORD *)&v74[v302] = v318;
  *(_QWORD *)&v74[v301] = v317;
  *(_QWORD *)&v74[v89] = v322;
  *(_QWORD *)&v74[v90] = v87;
  *(_QWORD *)&v74[v300] = v320;
  v93 = v323;
  *(_QWORD *)&v74[v299] = v323;
  *(_QWORD *)&v74[v298] = v325;
  v94 = v324;
  *(_QWORD *)&v74[v297] = v324;
  v95 = v303;
  sub_1BA4C2DD8((uint64_t)v74, v303, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC((uint64_t)v74, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 16))(v313, v95 + *(int *)(v329 + 96), v308);
  sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v96 = v55[12];
  v308 = v55[16];
  v97 = v55[20];
  v307 = v55[24];
  v98 = v55[28];
  v303 = v55[32];
  v302 = v55[36];
  v301 = v55[40];
  v300 = v55[44];
  sub_1BB403AA0(v91, (uint64_t)v71, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v99 = v319;
  *(_QWORD *)&v71[v96] = v319;
  *(_QWORD *)&v71[v308] = v92;
  *(_QWORD *)&v71[v97] = v317;
  *(_QWORD *)&v71[v307] = v322;
  *(_QWORD *)&v71[v98] = v321;
  *(_QWORD *)&v71[v303] = v320;
  *(_QWORD *)&v71[v302] = v93;
  v100 = v325;
  *(_QWORD *)&v71[v301] = v325;
  *(_QWORD *)&v71[v300] = v94;
  v101 = v305;
  sub_1BA4C2DD8((uint64_t)v71, v305, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC((uint64_t)v71, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  LOBYTE(v71) = *(_BYTE *)(v101 + 48);
  sub_1BA4A2E80(v101, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v346 = v71;
  v102 = v55[12];
  v103 = v55[16];
  v308 = v55[20];
  v104 = v55[24];
  v307 = v55[28];
  v305 = v55[32];
  v303 = v55[36];
  v302 = v55[40];
  v301 = v55[44];
  v105 = v316;
  v106 = v304;
  sub_1BB403AA0(v316, v304, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v107 = v106;
  v108 = v99;
  *(_QWORD *)(v107 + v102) = v99;
  *(_QWORD *)(v107 + v103) = v318;
  v109 = v317;
  *(_QWORD *)(v107 + v308) = v317;
  v110 = v322;
  *(_QWORD *)(v107 + v104) = v322;
  v111 = v321;
  *(_QWORD *)(v107 + v307) = v321;
  v112 = v320;
  *(_QWORD *)(v107 + v305) = v320;
  *(_QWORD *)(v107 + v303) = v323;
  *(_QWORD *)(v107 + v302) = v100;
  *(_QWORD *)(v107 + v301) = v324;
  v113 = v107;
  v114 = v309;
  sub_1BA4C2DD8(v107, v309, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v113, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v115 = v114;
  LOBYTE(v114) = *(_BYTE *)(v114 + 49);
  sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v345 = v114;
  v116 = v55[12];
  v309 = v55[16];
  v117 = v55[20];
  v308 = v55[24];
  v307 = v55[28];
  v305 = v55[32];
  v304 = v55[36];
  v303 = v55[40];
  v302 = v55[44];
  v118 = v105;
  v119 = v306;
  sub_1BB403AA0(v118, v306, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)(v119 + v116) = v108;
  *(_QWORD *)(v119 + v309) = v318;
  *(_QWORD *)(v119 + v117) = v109;
  *(_QWORD *)(v119 + v308) = v110;
  *(_QWORD *)(v119 + v307) = v111;
  *(_QWORD *)(v119 + v305) = v112;
  *(_QWORD *)(v119 + v304) = v323;
  *(_QWORD *)(v119 + v303) = v325;
  *(_QWORD *)(v119 + v302) = v324;
  v120 = v315;
  sub_1BA4C2DD8(v119, (uint64_t)v315, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v119, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v121 = *((_QWORD *)v120 + 3);
  v307 = *((_QWORD *)v120 + 2);
  v306 = v121;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v122 = v55[12];
  v123 = v55[16];
  v124 = v55[20];
  v309 = v55[24];
  v125 = v55[28];
  v308 = v55[32];
  v126 = v55[36];
  v127 = v55[40];
  v315 = v55;
  v128 = v55[44];
  v129 = v314;
  sub_1BB403AA0(v316, v314, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v130 = v319;
  *(_QWORD *)(v129 + v122) = v319;
  *(_QWORD *)(v129 + v123) = v318;
  *(_QWORD *)(v129 + v124) = v317;
  *(_QWORD *)(v129 + v309) = v322;
  *(_QWORD *)(v129 + v125) = v321;
  *(_QWORD *)(v129 + v308) = v320;
  *(_QWORD *)(v129 + v126) = v323;
  *(_QWORD *)(v129 + v127) = v325;
  v131 = v130;
  *(_QWORD *)(v129 + v128) = v324;
  v132 = v326;
  v133 = type metadata accessor for FormatPackage;
  sub_1BA4C2DD8(v129, v326, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v129, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v134 = v132;
  v135 = *(_QWORD *)(v132 + 32);
  v136 = *(_QWORD *)(v134 + 40);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v134, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v344 = MEMORY[0x1E0DEE9D8];
  if (v131 >> 62)
  {
    swift_bridgeObjectRetain();
    v137 = sub_1BB873F30();
  }
  else
  {
    v137 = *(_QWORD *)((v131 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v308 = v135;
  if (v137)
  {
    if (v137 < 1)
    {
      __break(1u);
      __break(1u);
      __break(1u);
      goto LABEL_122;
    }
    if ((v131 & 0xC000000000000001) != 0)
    {
      v138 = 0;
      v129 = (uint64_t)&unk_1ED3CA000;
      do
      {
        v139 = MEMORY[0x1BCCE4630](v138++, v131);
        v140 = (_QWORD **)(v139 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        v133 = *v140;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BA7A1BE8((uint64_t)v133);
      }
      while (v137 != v138);
    }
    else
    {
      v133 = 0;
      v129 = (uint64_t)&unk_1ED3CA000;
      do
      {
        v133 = (_QWORD *)((char *)v133 + 1);
        swift_beginAccess();
        v141 = swift_bridgeObjectRetain();
        sub_1BA7A1BE8(v141);
      }
      while ((_QWORD *)v137 != v133);
    }
  }
  swift_bridgeObjectRelease();
  v142 = swift_bridgeObjectRetain();
  sub_1BA7A1BE8(v142);
  v126 = v344;
  v343 = MEMORY[0x1E0DEE9D8];
  if (v137)
  {
    v129 = (uint64_t)&unk_1ED3CA000;
    if ((v131 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v143 = 0;
      do
      {
        v144 = MEMORY[0x1BCCE4630](v143++, v131);
        v145 = (_QWORD **)(v144 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
        swift_beginAccess();
        v133 = *v145;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BA7A5F0C((uint64_t)v133);
      }
      while (v137 != v143);
    }
    else
    {
      swift_bridgeObjectRetain();
      v133 = 0;
      do
      {
        v133 = (_QWORD *)((char *)v133 + 1);
        swift_beginAccess();
        v146 = swift_bridgeObjectRetain();
        sub_1BA7A5F0C(v146);
      }
      while ((_QWORD *)v137 != v133);
    }
    swift_bridgeObjectRelease();
  }
  v326 = v131 >> 62;
  v147 = swift_bridgeObjectRetain();
  sub_1BA7A5F0C(v147);
  v148 = v343;
  v342 = MEMORY[0x1E0DEE9D8];
  v314 = v137;
  if (v137)
  {
    if ((v131 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v149 = 0;
      v129 = (uint64_t)&unk_1ED3CA000;
      v137 = v314;
      do
      {
        v150 = MEMORY[0x1BCCE4630](v149++, v131);
        v151 = (_QWORD **)(v150 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
        swift_beginAccess();
        v133 = *v151;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BA7A102C((uint64_t)v133);
      }
      while (v137 != v149);
    }
    else
    {
      swift_bridgeObjectRetain();
      v133 = 0;
      v129 = (uint64_t)&unk_1ED3CA000;
      v137 = v314;
      do
      {
        v133 = (_QWORD *)((char *)v133 + 1);
        swift_beginAccess();
        v152 = swift_bridgeObjectRetain();
        sub_1BA7A102C(v152);
      }
      while ((_QWORD *)v137 != v133);
    }
    swift_bridgeObjectRelease();
  }
  v153 = swift_bridgeObjectRetain();
  sub_1BA7A102C(v153);
  v303 = v342;
  v341 = MEMORY[0x1E0DEE9D8];
  if (v137)
  {
    if (v137 >= 1)
    {
      if ((v131 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v154 = 0;
        v129 = (uint64_t)&unk_1ED3CA000;
        v137 = v314;
        do
        {
          v155 = MEMORY[0x1BCCE4630](v154++, v131);
          v156 = (_QWORD **)(v155 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
          swift_beginAccess();
          v133 = *v156;
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_1BA791D94((uint64_t)v133);
        }
        while (v137 != v154);
      }
      else
      {
        swift_bridgeObjectRetain();
        v133 = 0;
        v129 = (uint64_t)&unk_1ED3CA000;
        v137 = v314;
        do
        {
          v133 = (_QWORD *)((char *)v133 + 1);
          swift_beginAccess();
          v157 = swift_bridgeObjectRetain();
          sub_1BA791D94(v157);
        }
        while ((_QWORD *)v137 != v133);
      }
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
LABEL_36:
  v158 = swift_bridgeObjectRetain();
  sub_1BA791D94(v158);
  v302 = v341;
  v340 = MEMORY[0x1E0DEE9D8];
  if (!v137)
    goto LABEL_45;
  if (v137 < 1)
  {
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  if ((v131 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v159 = 0;
    v137 = v314;
    do
    {
      v160 = MEMORY[0x1BCCE4630](v159++, v131);
      v161 = (uint64_t *)(v160 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
      swift_beginAccess();
      v162 = *v161;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA7949B4(v162);
    }
    while (v137 != v159);
  }
  else
  {
    swift_bridgeObjectRetain();
    v163 = 0;
    v137 = v314;
    do
    {
      ++v163;
      swift_beginAccess();
      v164 = swift_bridgeObjectRetain();
      sub_1BA7949B4(v164);
    }
    while (v137 != v163);
  }
  swift_bridgeObjectRelease();
LABEL_45:
  v298 = v148;
  v299 = v126;
  v300 = v136;
  v309 = v340;
  v165 = v315[12];
  v166 = v315[16];
  v167 = v315[20];
  v168 = v315[24];
  v131 = v315[28];
  v305 = v315[32];
  v129 = v315[36];
  v304 = v315[40];
  v169 = v315[44];
  v170 = v327;
  sub_1BB403AA0(v316, v327, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)(v170 + v165) = v319;
  *(_QWORD *)(v170 + v166) = v318;
  *(_QWORD *)(v170 + v167) = v317;
  *(_QWORD *)(v170 + v168) = v322;
  *(_QWORD *)(v170 + v131) = v321;
  v136 = v319;
  *(_QWORD *)(v170 + v305) = v320;
  *(_QWORD *)(v170 + v129) = v323;
  *(_QWORD *)(v170 + v304) = v325;
  *(_QWORD *)(v170 + v169) = v324;
  v133 = type metadata accessor for FormatPackage;
  v171 = v328;
  sub_1BA4C2DD8(v170, v328, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v170, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v172 = *(_QWORD *)(v171 + 120);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v171, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v340 = v309;
  sub_1BA7949B4(v172);
  v126 = v340;
  v339 = MEMORY[0x1E0DEE9D8];
  if (!v137)
    goto LABEL_54;
  if (v137 < 1)
  {
LABEL_124:
    __break(1u);
    __break(1u);
    goto LABEL_125;
  }
  if ((v136 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v173 = 0;
    do
    {
      v174 = MEMORY[0x1BCCE4630](v173++, v136);
      v175 = (uint64_t *)(v174 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
      swift_beginAccess();
      v176 = *v175;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA794CEC(v176);
    }
    while (v137 != v173);
  }
  else
  {
    swift_bridgeObjectRetain();
    v177 = 0;
    do
    {
      ++v177;
      swift_beginAccess();
      v178 = swift_bridgeObjectRetain();
      sub_1BA794CEC(v178);
    }
    while (v137 != v177);
  }
  swift_bridgeObjectRelease();
LABEL_54:
  v179 = swift_bridgeObjectRetain();
  sub_1BA794CEC(v179);
  v180 = v339;
  v181 = v294;
  v339 = sub_1BB400A68(v136);
  v182 = swift_bridgeObjectRetain();
  sub_1BA7A53F8(v182);
  v297 = v339;
  v183 = sub_1BB400D04(v136);
  v309 = v181;
  v339 = v183;
  v184 = swift_bridgeObjectRetain();
  sub_1BA791DB8(v184);
  v185 = v339;
  v338 = MEMORY[0x1E0DEE9D8];
  if (v137)
  {
    if ((v136 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v186 = 0;
      do
      {
        v187 = MEMORY[0x1BCCE4630](v186++, v136);
        v188 = (uint64_t *)(v187 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
        swift_beginAccess();
        v189 = *v188;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BA6D3834(v189);
      }
      while (v137 != v186);
    }
    else
    {
      swift_bridgeObjectRetain();
      v190 = 0;
      do
      {
        ++v190;
        swift_beginAccess();
        v191 = swift_bridgeObjectRetain();
        sub_1BA6D3834(v191);
      }
      while (v137 != v190);
    }
    swift_bridgeObjectRelease();
  }
  v286 = v185;
  v294 = v180;
  v295 = v126;
  v305 = v338;
  v192 = v315;
  v193 = v315[12];
  v304 = v315[16];
  v194 = v315[20];
  v195 = v315[24];
  v196 = v315[28];
  v197 = v315[32];
  v198 = v315[36];
  v199 = v315[40];
  v301 = v315[44];
  v200 = v327;
  sub_1BB403AA0(v316, v327, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)(v200 + v193) = v319;
  *(_QWORD *)(v200 + v304) = v318;
  *(_QWORD *)(v200 + v194) = v317;
  *(_QWORD *)(v200 + v195) = v322;
  *(_QWORD *)(v200 + v196) = v321;
  *(_QWORD *)(v200 + v197) = v320;
  *(_QWORD *)(v200 + v198) = v323;
  *(_QWORD *)(v200 + v199) = v325;
  *(_QWORD *)(v200 + v301) = v324;
  v201 = v328;
  sub_1BA4C2DD8(v200, v328, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v200, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v202 = *(_QWORD *)(v201 + 136);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v201, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v338 = v305;
  sub_1BA6D3834(v202);
  v305 = v338;
  v203 = v192[12];
  v328 = v192[16];
  v204 = v192[20];
  v205 = v192[24];
  v206 = v192[28];
  v207 = v192[32];
  v208 = v192[36];
  v137 = v192[40];
  v136 = v192[44];
  v209 = v292;
  sub_1BB403AA0(v316, v292, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)(v209 + v203) = v319;
  *(_QWORD *)(v209 + v328) = v318;
  *(_QWORD *)(v209 + v204) = v317;
  *(_QWORD *)(v209 + v205) = v322;
  *(_QWORD *)(v209 + v206) = v321;
  *(_QWORD *)(v209 + v207) = v320;
  *(_QWORD *)(v209 + v208) = v323;
  v131 = v319;
  *(_QWORD *)(v209 + v137) = v325;
  v126 = v314;
  *(_QWORD *)(v209 + v136) = v324;
  v210 = v293;
  v129 = (uint64_t)type metadata accessor for FormatPackage;
  sub_1BA4C2DD8(v209, v293, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v209, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v133 = *(_QWORD **)(v210 + 144);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v337[0] = MEMORY[0x1E0DEE9D8];
  if (v126)
  {
    if (v126 >= 1)
    {
      if ((v131 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v211 = 0;
        do
        {
          v212 = MEMORY[0x1BCCE4630](v211++, v131);
          v213 = (uint64_t *)(v212 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
          swift_beginAccess();
          v214 = *v213;
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_1BA67FB48(v214);
        }
        while (v126 != v211);
      }
      else
      {
        swift_bridgeObjectRetain();
        v215 = 0;
        do
        {
          ++v215;
          swift_beginAccess();
          v216 = swift_bridgeObjectRetain();
          sub_1BA67FB48(v216);
        }
        while (v126 != v215);
      }
      swift_bridgeObjectRelease();
      goto LABEL_71;
    }
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
LABEL_71:
  v133 = (_QWORD *)sub_1BA78A504(v337[0], (uint64_t)v133);
  swift_bridgeObjectRelease();
  v217 = v309;
  v337[0] = sub_1BB400FA0(v131);
  v218 = swift_bridgeObjectRetain();
  sub_1BA7950C8(v218);
  v129 = v337[0];
  if (v326)
  {
    swift_bridgeObjectRetain();
    v137 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v137 = *(_QWORD *)((v131 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v136 = (uint64_t)v291;
  v304 = v217;
  v301 = (uint64_t)v133;
  v293 = v129;
  if (!v137)
  {
    v309 = MEMORY[0x1E0DEE9D8];
    goto LABEL_88;
  }
  v337[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA7909E8(0, v137 & ~(v137 >> 63), 0);
  if (v137 < 0)
  {
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  v219 = v337[0];
  if ((v131 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v137; ++i)
    {
      v221 = MEMORY[0x1BCCE4630](i, v131);
      sub_1BA4C2DD8(v221 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v136, type metadata accessor for FormatCompilerOptions);
      swift_unknownObjectRelease();
      v337[0] = v219;
      v223 = *(_QWORD *)(v219 + 16);
      v222 = *(_QWORD *)(v219 + 24);
      if (v223 >= v222 >> 1)
      {
        sub_1BA7909E8(v222 > 1, v223 + 1, 1);
        v219 = v337[0];
      }
      *(_QWORD *)(v219 + 16) = v223 + 1;
      sub_1BA5193C4(v136, v219+ ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80))+ *(_QWORD *)(v334 + 72) * v223, type metadata accessor for FormatCompilerOptions);
    }
  }
  else
  {
    v224 = (_QWORD *)(v131 + 32);
    v225 = (uint64_t)v283;
    do
    {
      sub_1BA4C2DD8(*v224 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v225, type metadata accessor for FormatCompilerOptions);
      v337[0] = v219;
      v227 = *(_QWORD *)(v219 + 16);
      v226 = *(_QWORD *)(v219 + 24);
      if (v227 >= v226 >> 1)
      {
        sub_1BA7909E8(v226 > 1, v227 + 1, 1);
        v219 = v337[0];
      }
      *(_QWORD *)(v219 + 16) = v227 + 1;
      sub_1BA5193C4(v225, v219+ ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80))+ *(_QWORD *)(v334 + 72) * v227, type metadata accessor for FormatCompilerOptions);
      ++v224;
      --v137;
    }
    while (v137);
  }
  v309 = v219;
LABEL_88:
  v228 = v315[12];
  v229 = v315[16];
  v230 = v315[20];
  v126 = v315[24];
  v131 = v315[28];
  v231 = v315[32];
  v232 = v315[36];
  v233 = v315[40];
  v328 = v315[44];
  v234 = v289;
  sub_1BB403AA0(v316, v289, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  *(_QWORD *)(v234 + v228) = v319;
  *(_QWORD *)(v234 + v229) = v318;
  *(_QWORD *)(v234 + v230) = v317;
  *(_QWORD *)(v234 + v126) = v322;
  *(_QWORD *)(v234 + v131) = v321;
  *(_QWORD *)(v234 + v231) = v320;
  *(_QWORD *)(v234 + v232) = v323;
  *(_QWORD *)(v234 + v233) = v325;
  *(_QWORD *)(v234 + v328) = v324;
  v129 = v290;
  sub_1BA4C2DD8(v234, v290, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v234, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v133 = v311;
  sub_1BA4C2DD8(v129 + *(int *)(v329 + 92), (uint64_t)v311, type metadata accessor for FormatCompilerOptions);
  sub_1BA4A2E80(v129, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v136 = v335;
  sub_1BA4C2DD8((uint64_t)v133, v335, type metadata accessor for FormatCompilerOptions);
  v235 = *(_QWORD *)(v309 + 16);
  if (v235)
  {
    v236 = v285;
    v237 = v285[7];
    v329 = v136 + v285[6];
    v328 = v136 + v237;
    v327 = v285[8];
    v238 = v309 + ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80));
    v326 = *(_QWORD *)(v334 + 72);
    swift_bridgeObjectRetain();
    v133 = v284;
    v239 = v336;
    v240 = v333;
    do
    {
      v334 = v235;
      sub_1BA4C2DD8(v238, v239, type metadata accessor for FormatCompilerOptions);
      v337[0] = *(_QWORD *)v136;
      swift_bridgeObjectRetain();
      v241 = swift_bridgeObjectRetain();
      sub_1BA791D80(v241);
      v242 = v337[0];
      v337[0] = *(_QWORD *)(v335 + 8);
      swift_bridgeObjectRetain();
      v243 = swift_bridgeObjectRetain();
      sub_1BA791D6C(v243);
      v131 = v337[0];
      v244 = v332;
      sub_1BA6D71BC(v329, v332);
      v245 = v331;
      sub_1BA5193C4(v244, v331, type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1BA7939F0(v328, v336 + v236[7], v240);
      v246 = *(_QWORD *)(v335 + v327);
      swift_bridgeObjectRetain();
      v247 = swift_bridgeObjectRetain();
      v248 = sub_1BA7919B0(v247, v246);
      *v133 = v242;
      v133[1] = v131;
      v136 = v335;
      sub_1BA4C2DD8(v245, (uint64_t)v133 + v236[6], type metadata accessor for FormatCompilerOptions.Newsroom);
      sub_1BA6E70E4((uint64_t)v240, (uint64_t)v133 + v236[7]);
      *(_QWORD *)((char *)v133 + v236[8]) = v248;
      v239 = v336;
      sub_1BA6867EC((uint64_t)v240);
      sub_1BA4A2E80(v245, type metadata accessor for FormatCompilerOptions.Newsroom);
      v129 = v330;
      v126 = (uint64_t)type metadata accessor for FormatCompilerOptions;
      sub_1BA5193C4((uint64_t)v133, v330, type metadata accessor for FormatCompilerOptions);
      sub_1BA4A2E80(v239, type metadata accessor for FormatCompilerOptions);
      sub_1BA4A2E80(v136, type metadata accessor for FormatCompilerOptions);
      sub_1BA5193C4(v129, v136, type metadata accessor for FormatCompilerOptions);
      v238 += v326;
      v235 = v334 - 1;
    }
    while (v334 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1BA5193C4(v136, v310, type metadata accessor for FormatCompilerOptions);
  sub_1BA4A2E80((uint64_t)v311, type metadata accessor for FormatCompilerOptions);
  swift_bridgeObjectRelease();
  v137 = v314;
  if (!v314)
  {
    v251 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v249 = v319;
    goto LABEL_113;
  }
  if (v314 < 1)
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  v249 = v319;
  if ((v319 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v250 = 0;
    v251 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v253 = MEMORY[0x1BCCE4630](v250, v249);
      v254 = *(_QWORD *)(v253 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
      v255 = *(_QWORD *)(v253 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
      sub_1BA6BAD2C(v254, v255);
      swift_unknownObjectRelease();
      if (v255 != 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v251 = sub_1BB38D338(0, v251[2] + 1, 1, v251);
        v257 = v251[2];
        v256 = v251[3];
        if (v257 >= v256 >> 1)
          v251 = sub_1BB38D338((_QWORD *)(v256 > 1), v257 + 1, 1, v251);
        v251[2] = v257 + 1;
        v252 = &v251[2 * v257];
        v252[4] = v254;
        v252[5] = v255;
      }
      ++v250;
    }
    while (v137 != v250);
  }
  else
  {
    swift_bridgeObjectRetain();
    v258 = 0;
    v259 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
    v251 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v261 = *(_QWORD *)(v249 + 8 * v258 + 32) + v259;
      v262 = *(_QWORD *)(v261 + 8);
      if (v262 != 2)
      {
        v263 = *(_QWORD *)v261;
        sub_1BA8C89D0(*(_QWORD *)v261, *(_QWORD *)(v261 + 8));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v251 = sub_1BB38D338(0, v251[2] + 1, 1, v251);
        v265 = v251[2];
        v264 = v251[3];
        if (v265 >= v264 >> 1)
          v251 = sub_1BB38D338((_QWORD *)(v264 > 1), v265 + 1, 1, v251);
        v251[2] = v265 + 1;
        v260 = &v251[2 * v265];
        v260[4] = v263;
        v260[5] = v262;
        v259 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
      }
      ++v258;
    }
    while (v137 != v258);
  }
  swift_bridgeObjectRelease();
LABEL_113:
  v327 = a11;
  v336 = v315[12];
  v335 = v315[16];
  v334 = v315[20];
  v333 = (uint64_t *)v315[24];
  v332 = v315[28];
  v331 = v315[32];
  v330 = v315[36];
  v329 = v315[40];
  v328 = v315[44];
  v266 = v287;
  sub_1BB403AA0(v316, v287, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v267 = v323;
  swift_bridgeObjectRelease();
  v268 = v320;
  swift_bridgeObjectRelease();
  v269 = v321;
  swift_bridgeObjectRelease();
  v270 = v322;
  swift_bridgeObjectRelease();
  v271 = v317;
  swift_bridgeObjectRelease();
  v272 = v318;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v266 + v336) = v249;
  *(_QWORD *)(v266 + v335) = v272;
  *(_QWORD *)(v266 + v334) = v271;
  *(uint64_t *)((char *)v333 + v266) = v270;
  *(_QWORD *)(v266 + v332) = v269;
  *(_QWORD *)(v266 + v331) = v268;
  *(_QWORD *)(v266 + v330) = v267;
  *(_QWORD *)(v266 + v329) = v325;
  *(_QWORD *)(v266 + v328) = v324;
  v273 = v288;
  sub_1BA4C2DD8(v266, v288, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BB403AEC(v266, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v133 = *(_QWORD **)(v273 + 160);
  v129 = *(_QWORD *)(v273 + 168);
  sub_1BA6BAD2C((uint64_t)v133, v129);
  sub_1BA4A2E80(v273, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  v274 = v251[2];
  if (!v274)
  {
    v136 = v300;
    v126 = v299;
    v131 = v298;
    v137 = v327;
LABEL_118:
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  v136 = v300;
  v126 = v299;
  v131 = v298;
  if (v129 != 2)
  {
    swift_bridgeObjectRelease();
    v275 = 1;
    v137 = v327;
    goto LABEL_129;
  }
  v133 = (_QWORD *)v251[4];
  v129 = v251[5];
  sub_1BA8C89D0((uint64_t)v133, v129);
  v137 = v327;
  if (v274 == 1)
    goto LABEL_118;
  swift_bridgeObjectRelease();
  v275 = 1;
  do
  {
    ++v275;
LABEL_129:
    ;
  }
  while (v275 != v274);
LABEL_128:
  v337[0] = (uint64_t)v133;
  v337[1] = v129;
  sub_1BA7C3270(0);
  sub_1BA6BCB7C(0, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v277 = *(unsigned __int8 *)(*(_QWORD *)(v276 - 8) + 80);
  v278 = (v277 + 32) & ~v277;
  v279 = swift_allocObject();
  *(_OWORD *)(v279 + 16) = xmmword_1BB87CE70;
  sub_1BB403AA0(v137, v279 + v278, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v280 = sub_1BB5765C0(v296, v312, v313, &v346, &v345, v307, v306, v308, v136, v126, v131, v303, v302, v295, v294, v297, v286, v305, v301,
           v293,
           v310,
           v337,
           v279);
  sub_1BB403AEC(v137, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA4A2E80(v316, (uint64_t (*)(_QWORD))sub_1BA8CCEE8);
  return v280;
}

uint64_t sub_1BB403A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6BCB7C(0, &qword_1ED3B37D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB403AA0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA6BCB7C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BB403AEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  sub_1BA6BCB7C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t dispatch thunk of static FeedCatalogTraits.followed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t IssueCoverImageProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t IssueCoverImageProcessor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t IssueCoverImageProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IssueCoverImageProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed24IssueCoverImageProcessorC7processySo7UIImageCSg5TeaUI09ProcessedE11RequestType_pF_0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7[40];

  sub_1BA4C010C(a1, (uint64_t)v7);
  sub_1BA54B1AC();
  type metadata accessor for IssueCoverImageProcessorRequest();
  if (!swift_dynamicCast())
    return 0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 112));
  v1 = sub_1BB86FA90();
  v2 = (void *)v1;
  if ((*(_BYTE *)(v6 + 72) & 1) == 0)
  {
    if (v1)
    {
      v3 = sub_1BB873840();
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  if (!v1)
  {
LABEL_8:
    swift_release();
    return 0;
  }
  v3 = sub_1BB873858();
LABEL_7:
  v4 = v3;

  swift_release();
  return v4;
}

uint64_t method lookup function for IssueCoverImageProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IssueCoverImageProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

id SharingPuzzleTypeTextActivityItemSource.__allocating_init(puzzleType:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  objc_super v6;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SharingPuzzleTypeTextActivityItemSource.init(puzzleType:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType] = a1;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText);
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText
                 + 8))
  {
    v2 = *v1;
  }
  else
  {
    v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType), sel_nameForSharing);
    v2 = sub_1BB8729A0();
    v5 = v4;

    *v1 = v2;
    v1[1] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB403DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _UNKNOWN **v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  _UNKNOWN **v15;

  v1 = type metadata accessor for SharingPlainTextBuilder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v14 = v1;
  v15 = &off_1E72897E0;
  v13[0] = inited;
  __swift_project_boxed_opaque_existential_1(v13, v1);
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType), sel_nameForSharing);
  sub_1BB8729A0();

  sub_1BAA4FD74(v1, (uint64_t)&off_1E72897E0, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  v4 = v11;
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 16))(v13, v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  v6 = v14;
  v7 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v8 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v7[8])(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v8;
}

uint64_t sub_1BB403F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void (*v24)(void);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  _UNKNOWN **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _UNKNOWN **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _UNKNOWN **v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79[2];
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[3];
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[3];
  uint64_t v93;
  _UNKNOWN **v94;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  v75 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v76 = (char *)&v73 - v4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v73 - v6;
  v8 = sub_1BB86C67C();
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v74 = (char *)&v73 - v12;
  v13 = type metadata accessor for SharingHTMLBuilder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v93 = v13;
  v94 = &off_1E7301510;
  v92[0] = inited;
  __swift_project_boxed_opaque_existential_1(v92, v13);
  v15 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType);
  v16 = objc_msgSend(v15, sel_nameForSharing);
  v17 = sub_1BB8729A0();

  sub_1BB335628(v17, v13, (uint64_t)&off_1E7301510, v89);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  v18 = v90;
  v19 = v91;
  __swift_project_boxed_opaque_existential_1(v89, v90);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 16))(v92, v18, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
  v20 = objc_msgSend(v15, sel_identifier);
  if (!v20)
  {
    sub_1BB8729A0();
    v20 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_nss_NewsURLForPuzzleTypeID_, v20);

  if (v22)
  {
    sub_1BB86C5EC();

    v23 = v78;
    v24 = *(void (**)(void))(v77 + 32);
    v25 = v10;
    v26 = v77;
    ((void (*)(char *, char *, uint64_t))v24)(v7, v25, v78);
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v27(v7, 0, 1, v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v23) != 1)
    {
      v28 = v74;
      v24();
      v29 = v93;
      v30 = v94;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      ((void (*)(_QWORD *__return_ptr, uint64_t, _UNKNOWN **))v30[2])(v89, v29, v30);
      v31 = v90;
      v32 = v91;
      __swift_project_boxed_opaque_existential_1(v89, v90);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v34 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v35 = sub_1BB86C340();
      v37 = v36;

      v38 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v39 = v32;
      v26 = v77;
      v38(v86, v35, v37, v31, v39);
      swift_bridgeObjectRelease();
      v40 = v87;
      v41 = v88;
      __swift_project_boxed_opaque_existential_1(v86, v87);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v41 + 16))(v83, v40, v41);
      v42 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      sub_1BAAC6DFC();
      v43 = sub_1BB87420C();
      (*(void (**)(__int128 *__return_ptr, uint64_t))(v42 + 56))(&v80, v43);
      swift_bridgeObjectRelease();
      v44 = v81;
      v45 = v82;
      __swift_project_boxed_opaque_existential_1(&v80, v81);
      v46 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v45 + 16);
      v47 = v45;
      v23 = v78;
      v46(v79, v44, v47);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      sub_1BA4CECCC(v79, (uint64_t)v92);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
      v49 = (uint64_t)v75;
      v48 = (uint64_t)v76;
      goto LABEL_8;
    }
  }
  else
  {
    v26 = v77;
    v23 = v78;
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    v27(v7, 1, 1, v78);
  }
  v49 = (uint64_t)v75;
  v48 = (uint64_t)v76;
  sub_1BA7F0A80((uint64_t)v7);
LABEL_8:
  v50 = objc_msgSend(v21, sel_nss_MarketingPageURL);
  if (v50)
  {
    v51 = v50;
    sub_1BB86C5EC();

    v52 = 0;
  }
  else
  {
    v52 = 1;
  }
  v27((char *)v49, v52, 1, v23);
  sub_1BA7F0AD4(v49, v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v48, 1, v23) == 1)
  {
    sub_1BA7F0A80(v48);
  }
  else
  {
    v53 = sub_1BB86C538();
    v55 = v54;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v48, v23);
    v56 = v93;
    v57 = v94;
    __swift_project_boxed_opaque_existential_1(v92, v93);
    ((void (*)(_QWORD *__return_ptr, uint64_t, _UNKNOWN **))v57[2])(v89, v56, v57);
    v58 = v90;
    v59 = v91;
    __swift_project_boxed_opaque_existential_1(v89, v90);
    type metadata accessor for Localized();
    v60 = swift_getObjCClassFromMetadata();
    v61 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v60);
    v62 = sub_1BB86C340();
    v64 = v63;

    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v86, v62, v64, v58, v59);
    swift_bridgeObjectRelease();
    v65 = v87;
    v66 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v66 + 56))(v83, 32, 0xE100000000000000, v65, v66);
    v67 = v84;
    v68 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    (*(void (**)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 48))(&v80, 0x654E20656C707041, 0xEA00000000007377, v53, v55, v67, v68);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    sub_1BA4CECCC(&v80, (uint64_t)v92);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
  }
  v69 = v93;
  v70 = v94;
  __swift_project_boxed_opaque_existential_1(v92, v93);
  v71 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v70[8])(v69, v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  return v71;
}

id SharingPuzzleTypeTextActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingPuzzleTypeTextActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingPuzzleTypeTextActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SharingPuzzleTypeTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v3;
  return result;
}

void SharingPuzzleTypeTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  id v81[2];

  v81[1] = *(id *)MEMORY[0x1E0C80C00];
  if (!a1)
  {
    v7 = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a2 = v7;
    *(_QWORD *)(a2 + 8) = v8;
    return;
  }
  if (sub_1BB8729A0() == 0xD000000000000026 && v5 == 0x80000001BB968360)
  {
    v6 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v9 = sub_1BB874398();
  v10 = a1;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {

    v25 = sub_1BB8729A0();
    v27 = v26;
    if (v25 == sub_1BB8729A0() && v27 == v28)
    {
      v48 = v10;
      goto LABEL_25;
    }
    v30 = sub_1BB874398();
    v31 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      goto LABEL_26;
    v32 = sub_1BB8729A0();
    v34 = v33;
    if (v32 == sub_1BB8729A0() && v34 == v35)
      goto LABEL_25;
    v36 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0)
      goto LABEL_26;
    v37 = sub_1BB8729A0();
    v39 = v38;
    if (v37 == sub_1BB8729A0() && v39 == v40)
      goto LABEL_25;
    v41 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v41 & 1) != 0)
    {
LABEL_26:
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0xE000000000000000;
      return;
    }
    v42 = v31;
    v43 = (void *)sub_1BB872970();
    v44 = sub_1BB8729A0();
    v46 = v45;
    if (v44 == sub_1BB8729A0() && v46 == v47)
    {

LABEL_25:
      swift_bridgeObjectRelease_n();
      goto LABEL_26;
    }
    v49 = sub_1BB874398();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v49 & 1) != 0)
      goto LABEL_26;
    v50 = sub_1BB8729A0();
    v52 = v51;
    if (v50 == sub_1BB8729A0() && v52 == v53)
    {
      swift_bridgeObjectRelease_n();
LABEL_33:
      v55 = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
LABEL_34:
      v57 = v55;
      v58 = v56;
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

LABEL_35:
      *(_QWORD *)a2 = v57;
      *(_QWORD *)(a2 + 8) = v58;
      return;
    }
    v54 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) != 0)
      goto LABEL_33;
    v59 = sub_1BB8729A0();
    v61 = v60;
    if (v59 == sub_1BB8729A0() && v61 == v62)
    {
      swift_bridgeObjectRelease_n();
LABEL_40:
      v55 = sub_1BB403F2C();
      goto LABEL_34;
    }
    v63 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v63 & 1) != 0)
      goto LABEL_40;
    v64 = v42;
    v65 = (void *)sub_1BB872970();
    v66 = sub_1BB8729A0();
    v68 = v67;
    if (v66 == sub_1BB8729A0() && v68 == v69)
      goto LABEL_46;
    v70 = sub_1BB874398();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v70 & 1) == 0)
    {
      v71 = v64;
      v65 = (void *)sub_1BB872970();
      v72 = sub_1BB8729A0();
      v74 = v73;
      if (v72 == sub_1BB8729A0() && v74 == v75)
      {
LABEL_46:

        swift_bridgeObjectRelease_n();
        goto LABEL_47;
      }
      v79 = sub_1BB874398();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v79 & 1) == 0)
      {
        v57 = _s8NewsFeed39SharingPuzzleTypeTextActivityItemSourceC22activityViewController_010subjectForgE0SSSo010UIActivitykL0C_So0oE0aSgtF_0();
        v58 = v80;
        *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

        goto LABEL_35;
      }
    }
LABEL_47:
    v76 = sub_1BB403DC0();
    v78 = v77;
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

    *(_QWORD *)a2 = v76;
    *(_QWORD *)(a2 + 8) = v78;
    return;
  }
LABEL_7:
  v11 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType), sel_nameForSharing);
  v12 = sub_1BB8729A0();
  v14 = v13;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BB4BDCEC(v12, v14, 0xD000000000000010, 0x80000001BB980330, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v16 = (void *)objc_opt_self();
  v17 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v81[0] = 0;
  v18 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, v81);

  v19 = v81[0];
  if (v18)
  {
    v20 = sub_1BB86C6E8();
    v22 = v21;

    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0CB0338];
    *(_QWORD *)a2 = v20;
    *(_QWORD *)(a2 + 8) = v22;
  }
  else
  {
    v23 = v19;
    v24 = (void *)sub_1BB86C484();

    swift_willThrow();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

Swift::String __swiftcall SharingPuzzleTypeTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  unint64_t v3;
  uint64_t v4;
  NSString *v5;
  unint64_t v6;
  char v7;
  NSString *v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  if (dataTypeIdentifierForActivityType.value)
  {
    v3 = 0xD00000000000001DLL;
    if (sub_1BB8729A0() == 0xD000000000000026 && v4 == 0x80000001BB968360)
    {
      v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      v6 = 0x80000001BB968390;
    }
    else
    {
      v7 = sub_1BB874398();
      v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v6 = 0x80000001BB968390;
      }
      else
      {
        v3 = 0;
        v6 = 0xE000000000000000;
      }
    }

  }
  else
  {
    v3 = 0;
    v6 = 0xE000000000000000;
  }
  v9 = v3;
  v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

uint64_t type metadata accessor for SharingPuzzleTypeTextActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingPuzzleTypeTextActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPuzzleTypeTextActivityItemSource.__allocating_init(puzzleType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t FormatTagBinding.Bool.BOOL(from:)(uint64_t a1)
{
  char *v1;

  swift_getObjectType();
  return sub_1BB4065C8(a1, v1);
}

{
  char *v1;
  uint64_t v2;
  char v3;
  char v5;

  v5 = *v1;
  v2 = *(_QWORD *)(a1 + 16);
  swift_getObjectType();
  sub_1BB406434(v2, (uint64_t)&v5);
  return v3 & 1;
}

BOOL static FormatTagBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatTagBinding.Bool.BOOL(from:)(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  char v3;
  char v5;

  v2 = *a1;
  v5 = *v1;
  swift_getObjectType();
  sub_1BB406434(v2, (uint64_t)&v5);
  return v3 & 1;
}

uint64_t FormatTagBinding.Bool.BOOL(from:)()
{
  char *v0;
  id v1;
  char v2;
  char v3;
  char v5;

  v5 = *v0;
  v1 = FCFeedDescriptor.feedTag.getter();
  swift_getObjectType();
  sub_1BB406434((uint64_t)v1, (uint64_t)&v5);
  v3 = v2;
  swift_unknownObjectRelease();
  return v3 & 1;
}

uint64_t sub_1BB4053C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA810A5C(*a1);
  v5 = v4;
  if (v3 == sub_1BA810A5C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB405448()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA810A5C(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4054A8()
{
  unsigned __int8 *v0;

  sub_1BA810A5C(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4054E8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA810A5C(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB405544(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724C288;
}

uint64_t FormatTagBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatTagBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

void sub_1BB4055C0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB405600()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  char v9;

  v9 = 0;
  swift_getObjectType();
  v1 = swift_unknownObjectRetain();
  sub_1BB406434(v1, (uint64_t)&v9);
  v3 = v2;
  swift_unknownObjectRelease();
  v4 = type metadata accessor for FormatInspectionItem(0);
  v5 = (char *)v0 + *(int *)(v4 + 24);
  *v5 = v3 & 1;
  v6 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  *v0 = 0x6E6E616843207349;
  v0[1] = 0xEA00000000006C65;
  v0[2] = 0;
  v0[3] = 0;
  v7 = (char *)v0 + *(int *)(v4 + 28);
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = -1;
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v0, 0, 1, v4);
}

void sub_1BB4062AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X9 }
}

void sub_1BB406328()
{
  _BYTE *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v2 - 49) = 0;
  swift_getObjectType();
  v3 = swift_unknownObjectRetain();
  sub_1BB406434(v3, v2 - 49);
  v5 = v4;
  swift_unknownObjectRelease();
  *v0 = v5 & 1;
  swift_storeEnumTagMultiPayload();
  sub_1BA9BBF70(v1);
}

void sub_1BB406434(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

BOOL sub_1BB406460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FCTagProviding.isChannel.getter(a3);
}

uint64_t sub_1BB4065C8(uint64_t a1, char *a2)
{
  char v2;
  char v4;

  v4 = *a2;
  sub_1BB406434(a1, (uint64_t)&v4);
  return v2 & 1;
}

unint64_t sub_1BB4065F8()
{
  unint64_t result;

  result = qword_1EF2C3668;
  if (!qword_1EF2C3668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Bool, &type metadata for FormatTagBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2C3668);
  }
  return result;
}

unint64_t sub_1BB40663C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE7268C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB406660(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA50A978();
  a1[2] = sub_1BA54EBD4();
  result = sub_1BB4065F8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Bool()
{
  return &type metadata for FormatTagBinding.Bool;
}

ValueMetadata *_s14descr1E730BF49V4BoolO10CodingTypeOMa()
{
  return &_s14descr1E730BF49V4BoolO10CodingTypeON;
}

unint64_t sub_1BB4066B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C3670;
  if (!qword_1EF2C3670)
  {
    sub_1BB406700();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C3670);
  }
  return result;
}

void sub_1BB406700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C3678)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C3678);
  }
}

unint64_t sub_1BB406758()
{
  unint64_t result;

  result = qword_1EF2C3680;
  if (!qword_1EF2C3680)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914A4C, &_s14descr1E730BF49V4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C3680);
  }
  return result;
}

double sub_1BB40679C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  _QWORD v6[3];
  _BYTE v7[16];
  _OWORD v8[2];
  uint64_t v9;

  v6[2] = a1;
  v3 = sub_1BA89F4C0((void (*)(char *))sub_1BB406834, (uint64_t)v6, (uint64_t)&unk_1E724C288, (uint64_t)v7);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v3, v8);
  swift_bridgeObjectRelease();
  result = *(double *)v8;
  v5 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 32) = v9;
  return result;
}

void sub_1BB406834(uint64_t a1)
{
  sub_1BB4055C0(a1);
}

unint64_t FormatDimensionSizing.height.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA71C7D8(v2);
}

unint64_t FormatDimensionSizing.width.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA71C7D8(v2);
}

uint64_t _s8NewsFeed21FormatDimensionSizingV2eeoiySbAC_ACtFZ_0(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  v1 = a1[1];
  v5 = *a1;
  static FormatDimensionSizingValue.== infix(_:_:)((uint64_t)&v5);
  if ((v2 & 1) != 0)
  {
    v5 = v1;
    static FormatDimensionSizingValue.== infix(_:_:)((uint64_t)&v5);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_1BB4068C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4068EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4068EC()
{
  unint64_t result;

  result = qword_1EF2C3688;
  if (!qword_1EF2C3688)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizing, &type metadata for FormatDimensionSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C3688);
  }
  return result;
}

unint64_t sub_1BB406930(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6550EC();
  a1[2] = sub_1BA63FEA8();
  result = sub_1BB406964();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB406964()
{
  unint64_t result;

  result = qword_1EF2C3690;
  if (!qword_1EF2C3690)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizing, &type metadata for FormatDimensionSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C3690);
  }
  return result;
}

unint64_t destroy for FormatDimensionSizing(unint64_t *a1)
{
  sub_1BA71C808(*a1);
  return sub_1BA71C808(a1[1]);
}

unint64_t *_s8NewsFeed21FormatDimensionSizingVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a2;
  sub_1BA71C7D8(*a2);
  *a1 = v4;
  v5 = a2[1];
  sub_1BA71C7D8(v5);
  a1[1] = v5;
  return a1;
}

unint64_t *assignWithCopy for FormatDimensionSizing(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  sub_1BA71C7D8(*a2);
  v5 = *a1;
  *a1 = v4;
  sub_1BA71C808(v5);
  v6 = a2[1];
  sub_1BA71C7D8(v6);
  v7 = a1[1];
  a1[1] = v6;
  sub_1BA71C808(v7);
  return a1;
}

unint64_t *assignWithTake for FormatDimensionSizing(unint64_t *a1, _OWORD *a2)
{
  unint64_t v4;

  sub_1BA71C808(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BA71C808(v4);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDimensionSizing()
{
  return &type metadata for FormatDimensionSizing;
}

uint64_t sub_1BB406AC8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v12;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F1C(v8 > 1, v9 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = (v7 & 0x7FFFFFFFFFFFFFFFLL) == 0;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB406BBC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v12;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
        sub_1BAC79F1C(v9 > 1, v8 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v10 = v12 + 24 * v8;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = (v7 & 0x7FF0000000000000) != 0x7FF0000000000000;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB406CB8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v12;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
        sub_1BAC79F1C(v9 > 1, v8 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v10 = v12 + 24 * v8;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = (v7 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB406DB4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v12;
    v4 = (_QWORD *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = (*v4 & 0xFFFFFFFFFFFFFLL) != 0 && (~*v4 & 0x7FF0000000000000) == 0;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F1C(v8 > 1, v9 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB406EB4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v13;
    v4 = (_QWORD *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v8 = (~*v4 & 0x7FF0000000000000) == 0 && (*v4 & 0xFFFFFFFFFFFFFLL) != 0 && (*v4 & 0x8000000000000) == 0;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_1BAC79F1C(v9 > 1, v10 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 24 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v5;
      *(_BYTE *)(v11 + 48) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB406FC0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v12;
    v4 = (_QWORD *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = ((*v4 >> 52) & 0x7FFLL) != 0x7FF && ((*v4 >> 52) & 0x7FFLL) != 0;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F1C(v8 > 1, v9 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB4070C0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F1C(0, v1, 0);
    v2 = v12;
    v4 = (_QWORD *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = (*v4 & 0xFFFFFFFFFFFFFLL) != 0 && (*v4 & 0x7FF0000000000000) == 0;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
        sub_1BAC79F1C(v9 > 1, v8 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v10 = v12 + 24 * v8;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB4071BC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    sub_1BAC79F38(0, v1, 0);
    v2 = v14;
    v4 = a1 + 48;
    do
    {
      v6 = *(_QWORD *)(v4 - 16);
      v5 = *(_QWORD *)(v4 - 8);
      swift_bridgeObjectRetain();
      v7 = sub_1BB872FDC();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1BAC79F38(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = (_QWORD *)(v14 + 32 * v11);
      v12[4] = v6;
      v12[5] = v5;
      v12[6] = v7;
      v12[7] = v9;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB4072B4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F54(0, v1, 0);
    v2 = v12;
    v4 = (double *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F54(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = ceil(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB4073A8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F54(0, v1, 0);
    v2 = v12;
    v4 = (double *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F54(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = floor(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB40749C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F54(0, v1, 0);
    v2 = v14;
    v4 = (double *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = floor(*v4);
      v8 = ceil(*v4);
      if (*(uint64_t *)v4 >= 0)
        v9 = v8;
      else
        v9 = v7;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1)
        sub_1BAC79F54(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 24 * v11;
      *(_QWORD *)(v12 + 32) = v6;
      *(_QWORD *)(v12 + 40) = v5;
      *(double *)(v12 + 48) = v9;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB4075A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F54(0, v1, 0);
    v2 = v12;
    v4 = (double *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F54(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = round(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB407694(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F54(0, v1, 0);
    v2 = v12;
    v4 = (double *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F54(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = rint(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB407788(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79F54(0, v1, 0);
    v2 = v12;
    v4 = (double *)(a1 + 48);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BAC79F54(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(double *)(v10 + 48) = trunc(v7);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1BB40787C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB4078C0()
{
  uint64_t *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = swift_allocObject();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BB4072B4(v3);
  result = swift_bridgeObjectRelease();
  *(double *)(v2 + 16) = ceil(v1);
  *(_QWORD *)(v2 + 24) = v4;
  *v0 = v2 | 0x3000000000000000;
  return result;
}

BOOL static FormatOptionsNodeStatementModifier.Float.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatOptionsNodeStatementModifier.Float.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatOptionsNodeStatementModifier.Float.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB407D18()
{
  unint64_t result;

  result = qword_1EF2C3698;
  if (!qword_1EF2C3698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Float, &type metadata for FormatOptionsNodeStatementModifier.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2C3698);
  }
  return result;
}

unint64_t sub_1BB407D5C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB407D80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB407D80()
{
  unint64_t result;

  result = qword_1EF2C36A0;
  if (!qword_1EF2C36A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Float, &type metadata for FormatOptionsNodeStatementModifier.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2C36A0);
  }
  return result;
}

unint64_t sub_1BB407DC4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE70E7C();
  a1[2] = sub_1BAEFBEF0();
  result = sub_1BB407D18();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB407DF8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatOptionsNodeStatementModifier.Float.init(from:)(a1, a2);
}

void sub_1BB407E0C(_QWORD *a1)
{
  FormatOptionsNodeStatementModifier.Float.encode(to:)(a1);
}

uint64_t _s5FloatOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BB407E6C + 4 * byte_1BB914B8B[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BB407EA0 + 4 * byte_1BB914B86[v4]))();
}

uint64_t sub_1BB407EA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB407EA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB407EB0);
  return result;
}

uint64_t sub_1BB407EBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB407EC4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BB407EC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB407ED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementModifier.Float()
{
  return &type metadata for FormatOptionsNodeStatementModifier.Float;
}

uint64_t sub_1BB407EEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB407F10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t SharingActivityItemFactoryWithTracker.__allocating_init(tracker:factory:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  sub_1BA4CECCC(a2, v4 + 24);
  return v4;
}

uint64_t SharingActivityItemFactoryWithTracker.init(tracker:factory:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  sub_1BA4CECCC(a2, v2 + 24);
  return v2;
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = v3[6];
  v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, v7, v8);
}

void SharingActivityItemFactoryWithTracker.createLinkPresentationSource(headline:selectedText:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = v4[6];
  v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, v9, v10);
  sub_1BB04C624();
  a4[3] = v12;
  *a4 = v11;
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(issue:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[6];
  v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1, v3, v4);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(channel:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[6];
  v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(feedDescriptor:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[6];
  v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a1, v3, v4);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(puzzle:shareData:)(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v10 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  v6 = *((_BYTE *)a2 + 32);
  v7 = v2[6];
  v8 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v7);
  v11 = v10;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v8 + 40))(a1, &v11, v7, v8);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItemSources(puzzleType:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[6];
  v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4);
}

void SharingActivityItemFactoryWithTracker.createLinkPresentationSource(issue:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2[6];
  v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 72))(a1, v5, v6);
  sub_1BB04C624();
  a2[3] = v8;
  *a2 = v7;
}

void SharingActivityItemFactoryWithTracker.createLinkPresentationSource(channel:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2[6];
  v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 80))(a1, v5, v6);
  sub_1BB04C624();
  a2[3] = v8;
  *a2 = v7;
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:feedItemIdentifier:type:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t *v5;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v10 = *a4;
  v11 = v5[6];
  v12 = v5[7];
  __swift_project_boxed_opaque_existential_1(v5 + 3, v11);
  v14 = v10;
  return sub_1BB35B718(a1, a2, a3, &v14, v5[2], a5, v11, v12);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:type:sourceView:sourceItem:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v8 = *a2;
  v9 = v4[6];
  v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  v12 = v8;
  return (*(uint64_t (**)(uint64_t, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 120))(a1, &v12, v4[2], a3, a4, v9, v10);
}

{
  _QWORD *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v8 = *a2;
  v9 = v4[6];
  v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  v12 = v8;
  return (*(uint64_t (**)(uint64_t, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 144))(a1, &v12, v4[2], a3, a4, v9, v10);
}

{
  _QWORD *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v8 = *a2;
  v9 = v4[6];
  v10 = v4[7];
  __swift_project_boxed_opaque_existential_1(v4 + 3, v9);
  v12 = v8;
  return (*(uint64_t (**)(uint64_t, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 152))(a1, &v12, v4[2], a3, a4, v9, v10);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:type:sourceView:)(uint64_t a1, char *a2, uint64_t a3)
{
  _QWORD *v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v6 = *a2;
  v7 = v3[6];
  v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  v10 = v6;
  return (*(uint64_t (**)(uint64_t, char *, _QWORD, uint64_t, uint64_t, uint64_t))(v8 + 128))(a1, &v10, v3[2], a3, v7, v8);
}

uint64_t SharingActivityItemFactoryWithTracker.createActivityItem(for:type:sourceView:sourceItem:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  return (*(uint64_t (**)(uint64_t))(v3 + 136))(a1);
}

uint64_t SharingActivityItemFactoryWithTracker.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t SharingActivityItemFactoryWithTracker.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharingActivityItemFactoryWithTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingActivityItemFactoryWithTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingActivityItemFactoryWithTracker.__allocating_init(tracker:factory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t GenericDataVisualization.init(responseItem:embedUrl:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;

  v5 = a1[1];
  v6 = a1[2];
  *a3 = *a1;
  a3[1] = v5;
  v7 = type metadata accessor for GenericDataVisualization();
  v8 = (char *)a3 + *(int *)(v7 + 20);
  v9 = sub_1BB86C67C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  *(_QWORD *)((char *)a3 + *(int *)(v7 + 24)) = v6;
  return result;
}

uint64_t GenericDataVisualization.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GenericDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GenericDataVisualization.urlDataSources.getter()
{
  type metadata accessor for GenericDataVisualization();
  return swift_bridgeObjectRetain();
}

uint64_t GenericDataVisualization.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v22 = sub_1BB86C67C();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB408D44(0, &qword_1EF2C36A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v21 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB408AD4();
  v23 = v8;
  v12 = (uint64_t)v24;
  sub_1BB87468C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v24 = a1;
  v15 = v21;
  v14 = v22;
  v27 = 0;
  *v11 = sub_1BB874098();
  v11[1] = v16;
  v26 = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1BB8740D4();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v11 + *(int *)(v9 + 20), v4, v14);
  type metadata accessor for WebEmbedDataVisualizationURLDataSource();
  v25 = 2;
  sub_1BA4A2870(&qword_1ED3AA680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource);
  v17 = sub_1BB874014();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v15);
  *(uint64_t *)((char *)v11 + *(int *)(v9 + 24)) = v17;
  sub_1BB408B18((uint64_t)v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1BB408B5C((uint64_t)v11);
}

unint64_t sub_1BB408AD4()
{
  unint64_t result;

  result = qword_1EF2C36B0;
  if (!qword_1EF2C36B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914ED4, &type metadata for GenericDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C36B0);
  }
  return result;
}

uint64_t sub_1BB408B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericDataVisualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB408B5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GenericDataVisualization();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t GenericDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  sub_1BB408D44(0, &qword_1EF2C36B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB408AD4();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v10 = type metadata accessor for GenericDataVisualization();
    v14 = 1;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    v13 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_1BA865434(0);
    sub_1BAA032F0();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BB408D44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB408AD4();
    v7 = a3(a1, &type metadata for GenericDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB408DA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F4BD0(*a1, *a2);
}

uint64_t sub_1BB408DAC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB408E5C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB408EE8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB408F94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB40972C();
  *a1 = result;
  return result;
}

void sub_1BB408FC0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000007265;
  v4 = 0xE800000000000000;
  v5 = 0x6C72556465626D65;
  if (v2 != 1)
  {
    v5 = 0x53617461446C7275;
    v4 = 0xEE0073656372756FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x696669746E656469;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB409030()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C72556465626D65;
  if (*v0 != 1)
    v1 = 0x53617461446C7275;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB40909C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB40972C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB4090C0()
{
  sub_1BB408AD4();
  return sub_1BB874710();
}

uint64_t sub_1BB4090E8()
{
  sub_1BB408AD4();
  return sub_1BB87471C();
}

uint64_t sub_1BB409110@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GenericDataVisualization.init(from:)(a1, a2);
}

uint64_t sub_1BB409124(_QWORD *a1)
{
  return GenericDataVisualization.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenericDataVisualization(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for GenericDataVisualization(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for GenericDataVisualization(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GenericDataVisualization(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for GenericDataVisualization(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for GenericDataVisualization(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericDataVisualization()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB40948C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for GenericDataVisualization()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB409514(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GenericDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB4095D4 + 4 * byte_1BB914D25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB409608 + 4 * byte_1BB914D20[v4]))();
}

uint64_t sub_1BB409608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB409610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB409618);
  return result;
}

uint64_t sub_1BB409624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB40962CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB409630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB409638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GenericDataVisualization.CodingKeys()
{
  return &type metadata for GenericDataVisualization.CodingKeys;
}

unint64_t sub_1BB409658()
{
  unint64_t result;

  result = qword_1EF2C36C0;
  if (!qword_1EF2C36C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914EAC, &type metadata for GenericDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C36C0);
  }
  return result;
}

unint64_t sub_1BB4096A0()
{
  unint64_t result;

  result = qword_1EF2C36C8;
  if (!qword_1EF2C36C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914DE4, &type metadata for GenericDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C36C8);
  }
  return result;
}

unint64_t sub_1BB4096E8()
{
  unint64_t result;

  result = qword_1EF2C36D0;
  if (!qword_1EF2C36D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914E0C, &type metadata for GenericDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C36D0);
  }
  return result;
}

uint64_t sub_1BB40972C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void destroy for DebugFormatFileSourceError(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for DebugFormatFileSourceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain();
  v5 = v4;
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

_QWORD *assignWithCopy for DebugFormatFileSourceError(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;
  void *v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = v4;
  v6 = (void *)a1[4];
  a1[4] = v4;

  return a1;
}

uint64_t assignWithTake for DebugFormatFileSourceError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFileSourceError()
{
  return &type metadata for DebugFormatFileSourceError;
}

uint64_t FormatContentResource.Resolved.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v23 = a3;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatContentResource.Resolved();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 0x7373612D7377656ELL;
  v25 = 0xEA00000000007465;
  sub_1BB872AFC((_QWORD *)0x7373612D7377656ELL);
  sub_1BB872AFC(v16);
  sub_1BB86C634();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA7F0A80((uint64_t)v7);
    v17 = 1;
    v18 = v23;
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v11, v7, v8);
    *(_QWORD *)v15 = a1;
    *((_QWORD *)v15 + 1) = a2;
    v19(&v15[*(int *)(v12 + 20)], v11, v8);
    v20 = v23;
    sub_1BB409ABC((uint64_t)v15, v23);
    v17 = 0;
    v18 = v20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, v17, 1, v12);
}

uint64_t type metadata accessor for FormatContentResource.Resolved()
{
  uint64_t result;

  result = qword_1ED3B6520;
  if (!qword_1ED3B6520)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB409ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContentResource.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatContentResource.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentResource.Resolved.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentResource.Resolved.assetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatContentResource.Resolved() + 20);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

ValueMetadata *type metadata accessor for FormatContentResource()
{
  return &type metadata for FormatContentResource;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContentResource.Resolved(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86C67C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FormatContentResource.Resolved(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for FormatContentResource.Resolved(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86C67C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for FormatContentResource.Resolved(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FormatContentResource.Resolved(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for FormatContentResource.Resolved(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentResource.Resolved()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB409E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentResource.Resolved()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB409EDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB409F50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BB409FC4()
{
  void *v0;
  char v1;
  char v2;
  uint64_t *v3;
  uint64_t *v4;
  void *v5;
  unsigned __int8 v6;

  sub_1BB6799E0();
  FormatContentSizeCategory.groupLayoutContentSizeCategory.getter();
  sub_1BA7C26A0(v5, v6);
  v0 = (void *)sub_1BB86D75C();
  sub_1BA7C17DC();
  v2 = v1;

  sub_1BA7C2538(v5, v6);
  if ((v2 & 1) == 0)
  {
    sub_1BA7E415C();
    swift_allocError();
    v4 = v3;
    *v3 = sub_1BB86D75C();
    *((_BYTE *)v4 + 40) = 1;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  sub_1BA7C2538(v5, v6);
}

void sub_1BB40A0C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  double v8;
  unint64_t v9;
  double v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  unint64_t v17;
  unint64_t v18;
  double *v19;

  v8 = CACurrentMediaTime();
  a3();
  if (v4)
    return;
  v10 = CACurrentMediaTime();
  v11 = *(_QWORD **)(v3 + 184);
  v12 = *(id *)(v3 + 192);
  v13 = v11[2];
  if (!((unint64_t)v12 >> 62))
  {
    v14 = *(_QWORD *)(((unint64_t)v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_4;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1BB873F30();
  v9 = swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_18;
LABEL_4:
  if (v13 == 0x8000000000000000 && v14 == -1)
  {
    __break(1u);
    return;
  }
  v9 = v13 % v14;
  if (((unint64_t)v12 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(_QWORD *)(((unint64_t)v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *((id *)v12 + v9 + 4);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_19:
  v16 = (id)MEMORY[0x1BCCE4630](v9, v12);
LABEL_12:
  v12 = v16;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_22:
    v11 = sub_1BB392C68(0, v11[2] + 1, 1, v11);
  v18 = v11[2];
  v17 = v11[3];
  if (v18 >= v17 >> 1)
    v11 = sub_1BB392C68((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
  v11[2] = v18 + 1;
  v19 = (double *)&v11[4 * v18];
  *((_QWORD *)v19 + 4) = a1;
  *((_QWORD *)v19 + 5) = a2;
  v19[6] = (v10 - v8) * 1000.0;
  *((_QWORD *)v19 + 7) = v12;
  *(_QWORD *)(v3 + 184) = v11;
}

void sub_1BB40A274(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v10;
  unint64_t v11;
  double v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  unint64_t v19;
  unint64_t v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;

  v10 = CACurrentMediaTime();
  a3(&v23);
  if (v5)
    return;
  v12 = CACurrentMediaTime();
  v13 = *(_QWORD **)(v4 + 184);
  v14 = *(id *)(v4 + 192);
  v15 = v13[2];
  if (!((unint64_t)v14 >> 62))
  {
    v16 = *(_QWORD *)(((unint64_t)v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_4;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1BB873F30();
  v11 = swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_18;
LABEL_4:
  if (v15 == 0x8000000000000000 && v16 == -1)
  {
    __break(1u);
    return;
  }
  v11 = v15 % v16;
  if (((unint64_t)v14 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)(((unint64_t)v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *((id *)v14 + v11 + 4);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_19:
  v18 = (id)MEMORY[0x1BCCE4630](v11, v14);
LABEL_12:
  v14 = v18;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_22:
    v13 = sub_1BB392C68(0, v13[2] + 1, 1, v13);
  v20 = v13[2];
  v19 = v13[3];
  if (v20 >= v19 >> 1)
    v13 = sub_1BB392C68((_QWORD *)(v19 > 1), v20 + 1, 1, v13);
  v13[2] = v20 + 1;
  v21 = (double *)&v13[4 * v20];
  *((_QWORD *)v21 + 4) = a1;
  *((_QWORD *)v21 + 5) = a2;
  v21[6] = (v12 - v10) * 1000.0;
  *((_QWORD *)v21 + 7) = v14;
  *(_QWORD *)(v4 + 184) = v13;
  v22 = v27;
  *(_BYTE *)a4 = v23;
  *(_OWORD *)(a4 + 8) = v24;
  *(_OWORD *)(a4 + 24) = v25;
  *(_OWORD *)(a4 + 40) = v26;
  *(_QWORD *)(a4 + 56) = v22;
  *(_OWORD *)(a4 + 64) = v28;
}

uint64_t sub_1BB40A468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1BB873450();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB87342C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v6);
  v8[0] = sub_1BA657D64();
  sub_1BB872640();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v5, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, v5);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1BB87348C();
  qword_1EF2C36E0 = result;
  return result;
}

id sub_1BB40A638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_1BB86D678();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView);
  if (v7)
  {
    v8 = *(id *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView);
  }
  else
  {
    v9 = v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    v10 = objc_allocWithZone((Class)sub_1BB86D834());
    v11 = (void *)sub_1BB86D828();
    v12 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v11;
    v8 = v11;

    v7 = 0;
  }
  v13 = v7;
  return v8;
}

id sub_1BB40A72C()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  id v3;
  objc_super v5;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_viewportMonitor];
  sub_1BB870954();

  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_1BB40A8A0()
{
  return type metadata accessor for DebugFormatCanvasViewController();
}

uint64_t type metadata accessor for DebugFormatCanvasViewController()
{
  uint64_t result;

  result = qword_1EF2C3740;
  if (!qword_1EF2C3740)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB40A908()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  objc_super v18;

  v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = v2;
  objc_msgSend(v2, sel_setPreservesSuperviewLayoutMargins_, 1);

  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v7;
  objc_msgSend(v7, sel_setClipsToBounds_, 0);

  v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = v9;
  objc_msgSend(v9, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView]);

  v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = v11;
  v13 = sub_1BB40A638();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = sub_1BB40A638();
  if (qword_1EF2A6D80 != -1)
    swift_once();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA4A2870((unint64_t *)&unk_1EF2BCDE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController, (uint64_t)&unk_1BB915070);
  sub_1BB86D21C();
  swift_release();
  sub_1BB86D804();

  v15 = sub_1BB40A638();
  if (qword_1EF2A6D88 != -1)
    swift_once();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BB86D21C();
  swift_release();
  sub_1BB86D810();

  v16 = objc_msgSend(v1, sel_view);
  if (v16)
  {
    v17 = v16;
    sub_1BB870960();

    return;
  }
LABEL_17:
  __break(1u);
}

void sub_1BB40AC3C(unsigned __int8 *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = sub_1BB40A638();

    a3(v4);
  }
}

void sub_1BB40ACE4()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  char *v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  void *v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  CGFloat Width;
  id v51;
  void *v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double Height;
  char *v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  CGFloat v67;
  id v68;
  void *v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  void *v78;
  objc_super v79;
  objc_super v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  v80.receiver = v0;
  v80.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v80, sel_viewWillLayoutSubviews);
  v1 = sub_1BB40A638();
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  objc_msgSend(v2, sel_bounds);

  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = v4;
  objc_msgSend(v4, sel_bounds);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v81.origin.x = v7;
  v81.origin.y = v9;
  v81.size.width = v11;
  v81.size.height = v13;
  CGRectGetHeight(v81);
  sub_1BB8735E8();
  v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = v14;
  objc_msgSend(v14, sel_bounds);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v82.origin.x = v17;
  v82.origin.y = v19;
  v82.size.width = v21;
  v82.size.height = v23;
  CGRectGetHeight(v82);
  sub_1BB873600();
  objc_msgSend(v1, sel_setFrame_);

  v24 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView];
  v79.receiver = v24;
  v79.super_class = (Class)type metadata accessor for DebugFormatContentView();
  objc_msgSendSuper2(&v79, sel_contentScaleFactor);
  v26 = v25;
  v27 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v27, sel_displayScale);
  v29 = v28;

  if (v26 != v29)
    return;
  v30 = objc_msgSend(v0, sel_view);
  if (!v30)
    goto LABEL_18;
  v31 = v30;
  objc_msgSend(v30, sel_bounds);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;

  objc_msgSend(v24, sel_setFrame_, v33, v35, v37, v39);
  v40 = objc_msgSend(v0, sel_view);
  if (!v40)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v41 = v40;
  objc_msgSend(v40, sel_bounds);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;

  v83.origin.x = v43;
  v83.origin.y = v45;
  v83.size.width = v47;
  v83.size.height = v49;
  Width = CGRectGetWidth(v83);
  v51 = objc_msgSend(v0, sel_view);
  if (!v51)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v52 = v51;
  objc_msgSend(v51, sel_bounds);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;

  v84.origin.x = v54;
  v84.origin.y = v56;
  v84.size.width = v58;
  v84.size.height = v60;
  Height = CGRectGetHeight(v84);
  v62 = &v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame];
  v63 = CGRectGetHeight(*(CGRect *)&v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame]);
  if (Height > v63)
    v64 = Height;
  else
    v64 = v63;
  *(_QWORD *)v62 = 0;
  *((_QWORD *)v62 + 1) = 0;
  *((CGFloat *)v62 + 2) = Width;
  *((double *)v62 + 3) = v64;
  v65 = 0;
  v66 = 0;
  v67 = Width;
  CGRectGetHeight(*(CGRect *)(&v64 - 3));
  v68 = objc_msgSend(v24, sel_superview);
  if (v68)
  {
    v69 = v68;
    objc_msgSend(v68, sel_bounds);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v77 = v76;

    v85.origin.x = v71;
    v85.origin.y = v73;
    v85.size.width = v75;
    v85.size.height = v77;
    CGRectGetHeight(v85);
  }
  v78 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_bezelView];
  sub_1BB8735AC();
  sub_1BB8735C4();
  objc_msgSend(v78, sel_setFrame_);
}

id sub_1BB40B120(char *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id result;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v8 = sub_1BB86D7A4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[7];
  v24 = a2[6];
  v25 = v12;
  v26 = a2[8];
  v13 = a2[3];
  v20 = a2[2];
  v21 = v13;
  v14 = a2[5];
  v22 = a2[4];
  v23 = v14;
  v15 = a2[1];
  v19 = *a2;
  result = objc_msgSend(a1, sel_view, v19, v15, v20, v13, v22, v23, v24, v25, v26);
  if (result)
  {
    v17 = result;
    sub_1BAC8E808(result, *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView]);

    v18 = sub_1BB40B250(&v19, a3, (uint64_t)v11, *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView], a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (id)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB40B250(__int128 *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;

  v6 = v5;
  v68 = a5;
  v69 = a4;
  v62 = a3;
  v67 = a2;
  ObjectType = swift_getObjectType();
  v8 = type metadata accessor for GroupLayoutBindingContext();
  v64 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v66 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v9;
  MEMORY[0x1E0C80A78](v10);
  v71 = (uint64_t)&v58 - v11;
  v60 = sub_1BB86D7A4();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86D678();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BB86D660();
  v18 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for GroupLayoutContext();
  v61 = *(char **)(v21 - 8);
  v22 = *((_QWORD *)v61 + 8);
  MEMORY[0x1E0C80A78](v21);
  v63 = (uint64_t)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v70 = (uint64_t)&v58 - v24;
  v25 = a1[6];
  v26 = a1[7];
  v27 = a1[4];
  v78 = a1[5];
  v79 = v25;
  v28 = a1[8];
  v80 = v26;
  v81 = v28;
  v29 = a1[3];
  v75 = a1[2];
  v76 = v29;
  v77 = v27;
  v31 = *a1;
  v30 = a1[1];
  v32 = &v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
  v73 = v31;
  v74 = v30;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v32, v14);
  v33 = objc_msgSend(v6, sel_view);
  if (v33)
  {
    v35 = v33;
    sub_1BAC8E808(v33, *(void **)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView]);

    sub_1BB86D66C();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v36 = v70;
    sub_1BB40CDC0((uint64_t)v20, v62, v70);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v58);
    swift_beginAccess();
    swift_retain();
    v37 = v71;
    sub_1BB86E494();
    swift_release();
    if (qword_1EF2A71E0 != -1)
      swift_once();
    v62 = qword_1EF2C36E0;
    sub_1BB86EC08();
    v38 = v63;
    sub_1BA4C2DD8(v36, v63, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v39 = v66;
    sub_1BA4C2DD8(v37, v66, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v40 = (v61[80] + 16) & ~(unint64_t)v61[80];
    v41 = (v22 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    v61 = v6;
    v42 = (v41 + 151) & 0xFFFFFFFFFFFFFFF8;
    v43 = (*(unsigned __int8 *)(v64 + 80) + v42 + 8) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v44 = (v65 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = swift_allocObject();
    sub_1BA5193C4(v38, v45 + v40, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v46 = (_OWORD *)(v45 + v41);
    v47 = v78;
    v48 = v80;
    v49 = v81;
    v46[6] = v79;
    v46[7] = v48;
    v46[8] = v49;
    v50 = v76;
    v46[2] = v75;
    v46[3] = v50;
    v46[4] = v77;
    v46[5] = v47;
    v51 = v74;
    *v46 = v73;
    v46[1] = v51;
    *(_QWORD *)(v45 + v42) = v67;
    sub_1BA5193C4(v39, v45 + v43, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    *(_QWORD *)(v45 + v44) = v68;
    sub_1BA8C88FC((uint64_t)&v73);
    type metadata accessor for DebugFormatCanvasLayoutResult();
    swift_retain();
    swift_retain();
    sub_1BB86E98C();
    swift_release();
    swift_release();
    sub_1BA657D64();
    v52 = (void *)sub_1BB87345C();
    v53 = swift_allocObject();
    v54 = v69;
    *(_QWORD *)(v53 + 16) = v69;
    type metadata accessor for DebugFormatCanvasLayoutViewResult();
    v55 = v54;
    v56 = sub_1BB86E98C();
    swift_release();

    swift_release();
    sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return v56;
  }
  else
  {
    __break(1u);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 256) + 8))(v13, v60);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB40B8A8(uint64_t *a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 aBlock;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v7 = *a1;
  v8 = (void *)objc_opt_self();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = v7;
  v9[4] = a3;
  v9[5] = a4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BB40EFCC;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)&v30 = sub_1BA4D7948;
  *((_QWORD *)&v30 + 1) = v10;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v29 = sub_1BA4D7928;
  *((_QWORD *)&v29 + 1) = &block_descriptor_69;
  v11 = _Block_copy(&aBlock);
  a2;
  swift_retain();
  v12 = a3;
  v13 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performWithoutAnimation_, v11);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BA65FBAC(0, (unint64_t *)&unk_1EF2C2510);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
    v17 = (_OWORD *)(*(_QWORD *)(v7 + 16) + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history);
    swift_beginAccess();
    aBlock = *v17;
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[4];
    v31 = v17[3];
    v32 = v20;
    v29 = v18;
    v30 = v19;
    v21 = v17[5];
    v22 = v17[6];
    v23 = v17[8];
    v35 = v17[7];
    v36 = v23;
    v33 = v21;
    v34 = v22;
    v24 = v17[9];
    v25 = v17[10];
    v26 = v17[11];
    v40 = *((_QWORD *)v17 + 24);
    v38 = v25;
    v39 = v26;
    v37 = v24;
    memmove((void *)(v16 + 32), v17, 0xC8uLL);
    sub_1BB40F004((uint64_t)&aBlock);
    swift_retain();
    sub_1BB86E494();
    swift_release();
    v27 = v41;
    v41 = v16;
    sub_1BB387388(v27);
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB40BB38(uint64_t a1, void *a2, char *a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(uint64_t *, uint64_t);
  uint64_t v30;
  int v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  int v43;
  char *v44;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  id v50;
  objc_class *v51;
  char *v52;
  uint64_t v53;
  id v54;
  id v55;
  void (*v56)(char *, char *, uint64_t);
  objc_class *v57;
  char *v58;
  id v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  objc_class *v64;
  char *v65;
  char *v66;
  id v67;
  id v68;
  id v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  objc_class *v75;
  char *v76;
  id v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  id v90;
  CGRect *v91;
  id v92;
  char *v93;
  void *v94;
  double v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  double v99;
  CGFloat v100;
  double v101;
  CGFloat v102;
  uint64_t v103;
  void *v104;
  id v105;
  double v106;
  double v107;
  double Width;
  double v109;
  double v110;
  double v111;
  double Height;
  double v113;
  double v114;
  void *v115;
  _QWORD *v116;
  void *v117;
  char *v118;
  id v119;
  char *v120;
  uint64_t (*v121)(uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v125;
  id v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  int v139;
  char *v140;
  int v141;
  id v142;
  uint64_t v143;
  int v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  int v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(char *, unint64_t, uint64_t);
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  objc_super v162;
  objc_super v163;
  objc_super v164;
  objc_super v165;
  uint64_t aBlock[6];
  uint64_t v167;
  uint64_t v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;

  v128 = a3;
  v131 = a2;
  v137 = sub_1BB872610();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v135 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1BB872664();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v132 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_1BB86D840();
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v145 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1BB86D7BC();
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v152 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_1BB86D84C();
  v9 = *(_QWORD *)(v161 - 8);
  MEMORY[0x1E0C80A78](v161);
  v148 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v151 = (char *)&v125 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v125 - v14);
  v160 = sub_1BB86D57C();
  v16 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v140 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v125 - v19;
  v21 = *(char **)(a1 + 24);
  v22 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
  v23 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView];
  v129 = v3;
  v158 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor];
  v24 = v23;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  objc_msgSend(v24, sel_setHidden_, LOBYTE(aBlock[0]));

  v142 = v21;
  objc_msgSend(*(id *)&v21[v22], sel_setClipsToBounds_, 0);
  v167 = MEMORY[0x1E0DEE9E8];
  v168 = MEMORY[0x1E0DEE9E8];
  v130 = a1;
  v127 = *(_QWORD *)(a1 + 16);
  swift_retain();
  v25 = sub_1BB86D864();
  swift_release();
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v143 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutFirstPass;
    v27 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v125 = v25;
    v28 = v25 + v27;
    v150 = *(_QWORD *)(v16 + 72);
    v157 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    v159 = *MEMORY[0x1E0DB5F38];
    v149 = *MEMORY[0x1E0DB5F30];
    v144 = *MEMORY[0x1E0DB5F18];
    v141 = *MEMORY[0x1E0DB5F20];
    v139 = *MEMORY[0x1E0DB5F08];
    v138 = *MEMORY[0x1E0DB5F10];
    v156 = v9;
    v155 = v16;
    v157(v20, v25 + v27, v160);
    while (1)
    {
      sub_1BB86D558();
      v29 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88);
      v30 = v161;
      v31 = v29(v15, v161);
      if (v31 == v159)
      {
        (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v15, v30);
        sub_1BA6EE5AC(aBlock, *v15, v15[1]);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v15, v30);
      }
      v32 = v15;
      v33 = v152;
      sub_1BB86D570();
      v34 = sub_1BB86D7B0();
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v153 + 8))(v33, v154);
      if (v36)
      {
        sub_1BA6EE5AC(aBlock, v34, v36);
        swift_bridgeObjectRelease();
      }
      v37 = v151;
      sub_1BB86D558();
      v38 = v161;
      v39 = v29((uint64_t *)v37, v161);
      v9 = v156;
      v40 = *(void (**)(char *, uint64_t))(v156 + 8);
      v40(v37, v38);
      if (v39 == v149)
      {
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        if ((aBlock[0] & 1) == 0)
        {
LABEL_3:
          (*(void (**)(char *, uint64_t))(v155 + 8))(v20, v160);
          v15 = v32;
          goto LABEL_4;
        }
      }
      v41 = v148;
      sub_1BB86D558();
      v42 = v161;
      v43 = v29((uint64_t *)v41, v161);
      if (v43 == v159)
      {
        (*(void (**)(char *, uint64_t))(v9 + 96))(v41, v42);
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        if ((aBlock[0] & 1) == 0)
          goto LABEL_3;
      }
      else
      {
        v40(v41, v42);
      }
      v44 = v145;
      sub_1BB86D54C();
      v45 = (*(uint64_t (**)(char *, uint64_t))(v146 + 88))(v44, v147);
      v15 = v32;
      v46 = v155;
      if (v45 == v144)
        break;
      if (v45 == v141)
      {
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        if (LOBYTE(aBlock[0]) == 1)
        {
          v47 = v140;
          v48 = v160;
          v56 = (void (*)(char *, char *, uint64_t))v157;
          v157(v140, (unint64_t)v20, v160);
          v50 = objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
          v57 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
          v58 = (char *)objc_allocWithZone(v57);
          v56(&v58[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v47, v48);
          sub_1BB86D564();
          v164.receiver = v58;
          v164.super_class = v57;
          v53 = v155;
          v54 = objc_msgSendSuper2(&v164, sel_initWithFrame_);
          v55 = objc_msgSend(v50, sel_colorWithAlphaComponent_, 0.1);
          goto LABEL_23;
        }
        goto LABEL_31;
      }
      if (v45 == v139)
      {
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        if (LOBYTE(aBlock[0]) == 1)
        {
          v62 = v140;
          v63 = v160;
          v157(v140, (unint64_t)v20, v160);
          v126 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
          v64 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
          v65 = (char *)objc_allocWithZone(v64);
          v157(&v65[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], (unint64_t)v62, v63);
          v66 = v62;
          sub_1BB86D564();
          v162.receiver = v65;
          v162.super_class = v64;
          v67 = objc_msgSendSuper2(&v162, sel_initWithFrame_);
          v68 = v126;
          v69 = objc_msgSend(v126, sel_colorWithAlphaComponent_, 0.1);
          objc_msgSend(v67, sel_setBackgroundColor_, v69);

          v70 = *(void (**)(char *, uint64_t))(v46 + 8);
          v71 = v66;
          v72 = v160;
          v70(v71, v160);
LABEL_30:
          objc_msgSend(v142, sel_addSubview_, v67);

          v70(v20, v72);
          goto LABEL_4;
        }
        goto LABEL_31;
      }
      if (v45 == v138)
      {
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        if (LOBYTE(aBlock[0]) == 1)
        {
          v73 = v140;
          v72 = v160;
          v74 = (void (*)(char *, char *, uint64_t))v157;
          v157(v140, (unint64_t)v20, v160);
          v126 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
          v75 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
          v76 = (char *)objc_allocWithZone(v75);
          v74(&v76[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v73, v72);
          sub_1BB86D564();
          v165.receiver = v76;
          v165.super_class = v75;
          v67 = objc_msgSendSuper2(&v165, sel_initWithFrame_);
          v77 = v126;
          v78 = objc_msgSend(v126, sel_colorWithAlphaComponent_, 0.1);
          objc_msgSend(v67, sel_setBackgroundColor_, v78);

          v70 = *(void (**)(char *, uint64_t))(v46 + 8);
          v79 = v73;
          v9 = v156;
          v70(v79, v72);
          goto LABEL_30;
        }
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v155 + 8))(v20, v160);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v145, v147);
LABEL_4:
      v28 += v150;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        v80 = v167;
        v81 = v168;
        goto LABEL_35;
      }
      v157(v20, v28, v160);
    }
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (LOBYTE(aBlock[0]) == 1)
    {
      v47 = v140;
      v48 = v160;
      v49 = (void (*)(char *, char *, uint64_t))v157;
      v157(v140, (unint64_t)v20, v160);
      v50 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor, v125);
      v51 = (objc_class *)type metadata accessor for DebugFormatCanvasFrameView();
      v52 = (char *)objc_allocWithZone(v51);
      v49(&v52[OBJC_IVAR____TtC8NewsFeed26DebugFormatCanvasFrameView_cursorFrame], v47, v48);
      sub_1BB86D564();
      v163.receiver = v52;
      v53 = v155;
      v163.super_class = v51;
      v54 = objc_msgSendSuper2(&v163, sel_initWithFrame_);
      v55 = objc_msgSend(v50, sel_colorWithAlphaComponent_, 0.1);
LABEL_23:
      v59 = v55;
      objc_msgSend(v54, sel_setBackgroundColor_, v59);

      v60 = *(void (**)(char *, uint64_t))(v53 + 8);
      v61 = v47;
      v9 = v156;
      v60(v61, v48);
      objc_msgSend(v142, sel_addSubview_, v54);

      v60(v20, v48);
      goto LABEL_4;
    }
LABEL_31:
    (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v160);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  v80 = MEMORY[0x1E0DEE9E8];
  v81 = MEMORY[0x1E0DEE9E8];
LABEL_35:
  v82 = v127;
  swift_retain();
  v83 = sub_1BB86D864();
  swift_release();
  v84 = *(_QWORD *)(v83 + 16);
  swift_bridgeObjectRelease();
  v85 = (_QWORD *)(v82 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history);
  swift_beginAccess();
  *v85 = v84;
  v86 = *(_QWORD *)(v81 + 16);
  swift_bridgeObjectRelease();
  v85[1] = v86;
  v87 = *(_QWORD *)(v80 + 16);
  swift_bridgeObjectRelease();
  v85[2] = v87;
  v88 = v129;
  v89 = *(char **)&v129[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView];
  v90 = v142;
  objc_msgSend(v142, sel_bounds);
  objc_msgSend(v89, sel_setFrame_);
  objc_msgSend(v90, sel_frame);
  v91 = (CGRect *)&v89[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame];
  *(CGRect *)&v89[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame] = v169;
  CGRectGetHeight(v169);
  v92 = objc_msgSend(v89, sel_superview);
  v93 = v128;
  if (v92)
  {
    v94 = v92;
    objc_msgSend(v92, sel_bounds);
    v96 = v95;
    v98 = v97;
    v100 = v99;
    v102 = v101;

    v170.origin.x = v96;
    v170.origin.y = v98;
    v170.size.width = v100;
    v170.size.height = v102;
    CGRectGetHeight(v170);
  }
  v103 = v130;
  v104 = *(void **)&v89[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_bezelView];
  sub_1BB8735AC();
  sub_1BB8735C4();
  objc_msgSend(v104, sel_setFrame_);
  objc_msgSend(v142, sel_frame);
  *(CGRect *)&v93[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame] = v171;
  v172 = CGRectOffset(v171, *(CGFloat *)&v93[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset], *(CGFloat *)&v93[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset + 8]);
  objc_msgSend(v93, sel_setFrame_, v172.origin.x, v172.origin.y, v172.size.width, v172.size.height);
  v105 = v131;
  objc_msgSend(v131, sel_contentSize);
  v107 = v106;
  Width = CGRectGetWidth(*v91);
  objc_msgSend(v105, sel_frame);
  v109 = CGRectGetWidth(v173);
  if (Width > v109)
    v109 = Width;
  if (v107 <= v109)
    v107 = v109;
  objc_msgSend(v105, sel_contentSize, v125);
  v111 = v110;
  Height = CGRectGetHeight(*v91);
  objc_msgSend(v105, sel_frame);
  v113 = CGRectGetHeight(v174);
  if (Height > v113)
    v113 = Height;
  if (v111 > v113)
    v114 = v111;
  else
    v114 = v113;
  objc_msgSend(v105, sel_setContentSize_, v107, v114);
  if (MEMORY[0x1BCCE5D40](&v88[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate]))
  {
    sub_1BB1AF814(v103, v93);
    swift_unknownObjectRelease();
  }
  sub_1BA657D64();
  v115 = (void *)sub_1BB87345C();
  v116 = (_QWORD *)swift_allocObject();
  v116[2] = v88;
  v116[3] = v103;
  v116[4] = v105;
  aBlock[4] = (uint64_t)sub_1BB40F134;
  aBlock[5] = (uint64_t)v116;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BA4F1DD8;
  aBlock[3] = (uint64_t)&block_descriptor_13_4;
  v117 = _Block_copy(aBlock);
  v118 = v88;
  swift_retain();
  v119 = v105;
  swift_release();
  v120 = v132;
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v121 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v121, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v121);
  v122 = v135;
  v123 = v137;
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v120, v122, v117);
  _Block_release(v117);

  (*(void (**)(char *, uint64_t))(v136 + 8))(v122, v123);
  return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v120, v134);
}

id sub_1BB40CBFC(char *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id result;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v8 = sub_1BB86D7A4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[7];
  v24 = a2[6];
  v25 = v12;
  v26 = a2[8];
  v13 = a2[3];
  v20 = a2[2];
  v21 = v13;
  v14 = a2[5];
  v22 = a2[4];
  v23 = v14;
  v15 = a2[1];
  v19 = *a2;
  result = objc_msgSend(a1, sel_view, v19, v15, v20, v13, v22, v23, v24, v25, v26);
  if (result)
  {
    v17 = result;
    sub_1BAC8E580(result, *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView]);

    v18 = sub_1BB40B250(&v19, a3, (uint64_t)v11, 0, a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (id)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB40CD1C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(*(_QWORD *)a1 + 24);
  sub_1BB8244EC();
  v5 = v4;
  objc_msgSend(a3, sel_addSubview_, v5);
  v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(a3, sel_setBackgroundColor_, v6);

  *((_BYTE *)a3 + OBJC_IVAR____TtC8NewsFeed25DebugFormatBackgroundView_backgroundState) = 1;
}

uint64_t sub_1BB40CDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  int v45;
  int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unsigned __int8 v51;
  unsigned __int8 v52;

  v44 = a2;
  v7 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86D660();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86D7A4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2;
  v21 = v20;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, v19, v20, v16);
  v47 = v13;
  v48 = v11;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v49 = v10;
  v22(v13, a1, v10);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor);
  v24 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key;
  v25 = v23 + v24 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 28);
  v26 = (int *)type metadata accessor for GroupLayoutContext();
  v27 = *(_QWORD *)(v25 + v26[10]);
  v28 = v25 + v26[6];
  v50 = v9;
  v29 = (uint64_t)v9;
  v30 = v27;
  sub_1BA4C2DD8(v28, v29, type metadata accessor for FeedLayoutSolverOptions);
  swift_retain();
  sub_1BB86D5D0();
  v32 = v31;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v46 = v52;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v45 = v51;
  v33 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
  swift_retain();
  sub_1BB86D708();
  v35 = v34;
  v37 = v36;
  sub_1BB86DD20();
  swift_beginAccess();
  v38 = *(_QWORD *)(v33 + 24);
  if (*(_QWORD *)(v38 + 16) && (v39 = sub_1BB4AB454(v35, v37), (v40 & 1) != 0))
  {
    v41 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v39);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v41 = sub_1BA6A2E0C(MEMORY[0x1E0DEE9D8]);
  }
  type metadata accessor for FormatLayoutSizeSnapshot();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v41;
  sub_1BB86DD2C();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v18, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(a3 + v26[5], v47, v49);
  *(_QWORD *)(a3 + v26[10]) = v30;
  result = sub_1BA5193C4((uint64_t)v50, a3 + v26[6], type metadata accessor for FeedLayoutSolverOptions);
  *(_QWORD *)(a3 + v26[7]) = 0;
  *(_QWORD *)(a3 + v26[8]) = v32;
  *(_BYTE *)(a3 + v26[9]) = v46;
  *(_BYTE *)(a3 + v26[11]) = v45;
  *(_QWORD *)(a3 + v26[12]) = v42;
  return result;
}

uint64_t sub_1BB40D104()
{
  return sub_1BB234D6C();
}

uint64_t *sub_1BB40D134(uint64_t a1, __int128 *a2, uint64_t a3, char *a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  void *v49;
  void *v50;
  char v51;
  _QWORD *v52;
  void *v53;
  unsigned __int8 v54;
  int v55;
  unsigned __int8 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  char *v70;
  uint64_t (*v71)(uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  int64_t *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  __int128 v151;
  char *v152;
  char *v153;
  __int128 v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD v158[5];
  __int128 v159;
  __int128 v160;
  char *v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  unsigned __int8 v175[8];
  _OWORD v176[9];
  uint64_t v177;
  uint64_t v178;
  _QWORD v179[12];
  __int128 v180;
  uint64_t v181;
  __int128 v182;
  _OWORD v183[10];
  __int128 v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;

  v6 = v5;
  v153 = a4;
  v195 = a1;
  v126 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v126);
  v128 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86D660();
  v132 = *(_QWORD *)(v11 - 8);
  v133 = v11;
  MEMORY[0x1E0C80A78](v11);
  v127 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86D7A4();
  v130 = *(_QWORD *)(v13 - 8);
  v131 = v13;
  MEMORY[0x1E0C80A78](v13);
  v129 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB872610();
  v143 = *(_QWORD *)(v15 - 8);
  v144 = v15;
  MEMORY[0x1E0C80A78](v15);
  v141 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB872664();
  v139 = *(_QWORD *)(v17 - 8);
  v140 = v17;
  MEMORY[0x1E0C80A78](v17);
  v138 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatGroupLayoutFactory.Bound();
  v135 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v136 = v20;
  v137 = (uint64_t)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v157 = (uint64_t)&v125 - v22;
  v23 = sub_1BB86D8A0();
  v150 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)&v151 = v23;
  MEMORY[0x1E0C80A78](v23);
  v152 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = (_QWORD *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v149);
  v156 = (uint64_t *)((char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = sub_1BB86EB84();
  v146 = *(_QWORD *)(v26 - 8);
  v147 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v125 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a2[7];
  v192 = a2[6];
  v193 = v32;
  v194 = a2[8];
  v33 = a2[3];
  v188 = a2[2];
  v189 = v33;
  v34 = a2[4];
  v191 = a2[5];
  v190 = v34;
  v35 = *a2;
  v187 = a2[1];
  v186 = v35;
  if (a5)
    sub_1BB47E718();
  v155 = a5;
  v142 = v6;
  v36 = *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor];
  sub_1BA8C88FC((uint64_t)&v186);
  swift_retain();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v37 = v176[0];
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v125 = v38;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BB895110;
  v40 = (void *)objc_opt_self();
  *(_QWORD *)(v39 + 32) = objc_msgSend(v40, sel_systemYellowColor);
  *(_QWORD *)(v39 + 40) = objc_msgSend(v40, sel_systemPurpleColor);
  *(_QWORD *)(v39 + 48) = objc_msgSend(v40, sel_systemBlueColor);
  *(_QWORD *)&v176[0] = v39;
  sub_1BB872DCC();
  *(_OWORD *)((char *)&v183[5] + 8) = v191;
  *(_OWORD *)((char *)&v183[6] + 8) = v192;
  *(_OWORD *)((char *)&v183[7] + 8) = v193;
  *(_OWORD *)((char *)&v183[8] + 8) = v194;
  *(_OWORD *)((char *)&v183[1] + 8) = v187;
  *(_OWORD *)((char *)&v183[2] + 8) = v188;
  *(_OWORD *)((char *)&v183[3] + 8) = v189;
  *(_OWORD *)((char *)&v183[4] + 8) = v190;
  *(_OWORD *)((char *)v183 + 8) = v186;
  v182 = 0uLL;
  *(_QWORD *)&v183[0] = 0;
  *((_QWORD *)&v183[9] + 1) = a3;
  LOBYTE(v184) = v37;
  *((_QWORD *)&v184 + 1) = MEMORY[0x1E0DEE9D8];
  v185 = *(_QWORD *)&v176[0];
  sub_1BA8C88FC((uint64_t)&v186);
  swift_retain();
  v145 = sub_1BB230F34();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  v41 = qword_1EF3D04D8;
  *((_QWORD *)&v163 + 1) = type metadata accessor for DebugFormatLogger();
  *(_QWORD *)&v164 = &off_1E727E580;
  *(_QWORD *)&v162 = v41;
  v42 = *(_QWORD *)(v36 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory);
  swift_weakInit();
  swift_weakAssign();
  sub_1BAF8FF7C((uint64_t)v175, (uint64_t)v158);
  *(_QWORD *)&v154 = v36;
  swift_retain();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BAA6ADB8((uint64_t)v28);
  sub_1BA4A2E80((uint64_t)v31, type metadata accessor for FormatVersioningModeSelection);
  v43 = sub_1BAF8ECB0((uint64_t)v158, (uint64_t)v28, v42);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v28, v147);
  sub_1BAF8FFB8((uint64_t)v158);
  v44 = type metadata accessor for FeedLayoutTracker();
  v45 = swift_allocObject();
  v179[10] = &off_1E7286308;
  v179[9] = v44;
  v179[6] = v45;
  v46 = qword_1EF3D04D8;
  type metadata accessor for FormatOptionConverter();
  v47 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_retain();
  v48 = sub_1BA8EE9A4(a3, v46, v47);
  v176[6] = v192;
  v176[7] = v193;
  v176[8] = v194;
  v176[2] = v188;
  v176[3] = v189;
  v176[4] = v190;
  v176[5] = v191;
  v176[0] = v186;
  v176[1] = v187;
  v134 = a3;
  v177 = a3;
  v178 = v145;
  sub_1BA4CECCC(&v162, (uint64_t)v179);
  v179[5] = v43;
  v179[11] = v48;
  v180 = xmmword_1BB914FD0;
  v181 = v155;
  swift_retain();
  v49 = (void *)v148;
  sub_1BB409FC4();
  v50 = v49;
  if (v49)
  {
    *(_QWORD *)&v162 = 0;
    *((_QWORD *)&v162 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("Format action sent, ");
    v158[0] = v49;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    sub_1BA9719E4((void *)4, 0, 0, v162, *((uint64_t *)&v162 + 1));
    swift_bridgeObjectRelease();

    v50 = 0;
  }
  v51 = v194;
  v52 = sub_1BB6799E0();
  LOBYTE(v158[0]) = v51;
  FormatContentSizeCategory.groupLayoutContentSizeCategory.getter();
  v53 = (void *)v162;
  v54 = BYTE8(v162);
  type metadata accessor for GroupLayoutFactoryValidator();
  *(_QWORD *)(swift_allocObject() + 16) = v52;
  sub_1BA7C1A64();
  swift_bridgeObjectRelease();
  sub_1BA7C2538(v53, v54);
  swift_setDeallocating();
  swift_deallocClassInstance();
  if (v50)
  {
    *(_QWORD *)&v162 = 0;
    *((_QWORD *)&v162 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("ice settings, error=");
    v158[0] = v50;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    sub_1BA9719E4((void *)4, 0, 0, v162, *((uint64_t *)&v162 + 1));
    swift_bridgeObjectRelease();

  }
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v55 = v162;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v56 = v158[0];
  v57 = v153;
  sub_1BA4C010C((uint64_t)(v153 + 8), (uint64_t)&v162);
  v58 = *((_QWORD *)v57 + 6);
  v59 = (uint64_t)v152;
  (*(void (**)(char *, char *, _QWORD))(v150 + 16))(v152, &v57[*((int *)v149 + 13)], v151);
  v175[0] = v56;
  v60 = *((_QWORD *)v57 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v61 = v156;
  v62 = sub_1BA6A4D08(&v162, v58, v55, v59, v175, v60, (uint64_t)v156);
  MEMORY[0x1E0C80A78](v62);
  *(&v125 - 4) = (uint64_t)v176;
  *(&v125 - 3) = (uint64_t)v61;
  *(&v125 - 2) = v195;
  v63 = v157;
  sub_1BB40A0C0(1684957506, 0xE400000000000000, (void (*)(void))sub_1BB40F534);
  sub_1BA657D64();
  v153 = (char *)sub_1BB87345C();
  v64 = v137;
  sub_1BA4C2DD8(v63, v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatGroupLayoutFactory.Bound);
  v65 = (*(unsigned __int8 *)(v135 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
  v66 = swift_allocObject();
  v67 = v142;
  *(_QWORD *)(v66 + 16) = v142;
  sub_1BA5193C4(v64, v66 + v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatGroupLayoutFactory.Bound);
  *(_QWORD *)&v164 = sub_1BB40F784;
  *((_QWORD *)&v164 + 1) = v66;
  *(_QWORD *)&v162 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v162 + 1) = 1107296256;
  *(_QWORD *)&v163 = sub_1BA4F1DD8;
  *((_QWORD *)&v163 + 1) = &block_descriptor_25;
  v68 = _Block_copy(&v162);
  v69 = v67;
  swift_release();
  v152 = 0;
  v70 = v138;
  sub_1BB872634();
  *(_QWORD *)&v162 = MEMORY[0x1E0DEE9D8];
  v71 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v71, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v72 = v157;
  sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v71);
  v73 = v141;
  v74 = v144;
  sub_1BB873BC4();
  v75 = v153;
  MEMORY[0x1BCCE3D90](0, v70, v73, v68);
  _Block_release(v68);

  v76 = v74;
  v77 = v72;
  (*(void (**)(char *, uint64_t))(v143 + 8))(v73, v76);
  v78 = (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v70, v140);
  v79 = &v125;
  MEMORY[0x1E0C80A78](v78);
  *(&v125 - 2) = v77;
  v80 = v152;
  sub_1BB40A274(0x74756F79614CLL, 0xE600000000000000, (void (*)(uint64_t *__return_ptr))sub_1BB40F7B4, (uint64_t)v158);
  if (v80)
  {
    v172 = v183[9];
    v173 = v184;
    v174 = v185;
    v168 = v183[5];
    v169 = v183[6];
    v170 = v183[7];
    v171 = v183[8];
    v164 = v183[1];
    v165 = v183[2];
    v166 = v183[3];
    v167 = v183[4];
    v162 = v182;
    v163 = v183[0];
    sub_1BA985138((uint64_t)&v162);
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatGroupLayoutFactory.Bound);
    sub_1BA79E0D0((uint64_t)v176);
    sub_1BA4A2E80((uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    if (v155)
      sub_1BB47E410();
  }
  else
  {
    LODWORD(v150) = LOBYTE(v158[0]);
    v81 = v158[1];
    v82 = v158[2];
    v83 = v158[3];
    v84 = v158[4];
    v151 = v160;
    v152 = v161;
    v153 = (char *)&v125;
    v149 = v156 + 1;
    v85 = v156[4];
    v86 = v156[5];
    v87 = v156;
    __swift_project_boxed_opaque_existential_1(v156 + 1, v85);
    v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 24))(v85, v86);
    v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v89 + 32) = v134;
    *(_QWORD *)&v162 = v89;
    sub_1BB872DCC();
    v90 = v162;
    swift_retain();
    v91 = v154;
    swift_retain();
    v92 = (_QWORD *)sub_1BB7CBD44(v90, v88, v91);
    swift_release();
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 16);
    v154 = v159;
    v94 = v195;
    v93(v129, v195, v131);
    v95 = v126;
    v96 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v127, v94 + *(int *)(v126 + 20), v133);
    LODWORD(v94) = *(unsigned __int8 *)(v94 + *(int *)(v95 + 44));
    LODWORD(v147) = v94;
    v97 = v87;
    v98 = v87[4];
    v99 = v97[5];
    __swift_project_boxed_opaque_existential_1(v149, v98);
    v148 = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 80))(v98, v99);
    v100 = (int64_t *)v92[14];
    LOBYTE(v162) = v94;
    v101 = v92[18];
    v102 = v92[19];
    v103 = __swift_project_boxed_opaque_existential_1(v92 + 15, v101);
    v104 = v129;
    v105 = sub_1BB3BDD40(v129, v96, (unsigned __int8 *)&v162, (uint64_t)v103, v100, v101, v102);
    v106 = v92[2];
    MEMORY[0x1E0C80A78](v105);
    *(&v125 - 10) = v96;
    *(&v125 - 9) = (uint64_t)v92;
    v107 = v148;
    *(&v125 - 8) = v108;
    *(&v125 - 7) = v107;
    *(&v125 - 6) = (uint64_t)v104;
    *((_BYTE *)&v125 - 40) = v147;
    *(&v125 - 4) = v81;
    *(&v125 - 3) = v82;
    *(&v125 - 2) = v83;
    *(&v125 - 1) = v84;
    swift_bridgeObjectRetain();
    v149 = (_QWORD *)sub_1BA791DFC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BA792480, (uint64_t)(&v125 - 12), v106);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v96, v133);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v104, v131);
    v109 = v128;
    sub_1BA4C2DD8(v195, v128, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    type metadata accessor for DebugFormatCanvasLayoutResult();
    v79 = (uint64_t *)swift_allocObject();
    v110 = v193;
    *((_OWORD *)v79 + 7) = v192;
    *((_OWORD *)v79 + 8) = v110;
    *((_OWORD *)v79 + 9) = v194;
    v111 = v189;
    *((_OWORD *)v79 + 3) = v188;
    *((_OWORD *)v79 + 4) = v111;
    v112 = v191;
    *((_OWORD *)v79 + 5) = v190;
    *((_OWORD *)v79 + 6) = v112;
    v113 = v187;
    *((_OWORD *)v79 + 1) = v186;
    *((_OWORD *)v79 + 2) = v113;
    v79[20] = v134;
    *((_BYTE *)v79 + 168) = v150;
    v79[22] = v81;
    v79[23] = v82;
    v79[24] = v83;
    v79[25] = v84;
    v114 = v151;
    *((_OWORD *)v79 + 13) = v154;
    *((_OWORD *)v79 + 14) = v114;
    v115 = (uint64_t)v79 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_groupLayoutContext;
    v116 = v149;
    v79[30] = (uint64_t)v152;
    v79[31] = (uint64_t)v116;
    sub_1BA5193C4(v109, v115, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v117 = (char *)v79 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history;
    v118 = v184;
    *((_OWORD *)v117 + 10) = v183[9];
    *((_OWORD *)v117 + 11) = v118;
    *((_QWORD *)v117 + 24) = v185;
    v119 = v183[6];
    *((_OWORD *)v117 + 6) = v183[5];
    *((_OWORD *)v117 + 7) = v119;
    v120 = v183[8];
    *((_OWORD *)v117 + 8) = v183[7];
    *((_OWORD *)v117 + 9) = v120;
    v121 = v183[2];
    *((_OWORD *)v117 + 2) = v183[1];
    *((_OWORD *)v117 + 3) = v121;
    v122 = v183[4];
    *((_OWORD *)v117 + 4) = v183[3];
    *((_OWORD *)v117 + 5) = v122;
    v123 = v183[0];
    *(_OWORD *)v117 = v182;
    *((_OWORD *)v117 + 1) = v123;
    sub_1BA8C88FC((uint64_t)&v186);
    swift_retain();
    sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatGroupLayoutFactory.Bound);
    sub_1BA79E0D0((uint64_t)v176);
    sub_1BA4A2E80((uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    if (v155)
      sub_1BB47E410();
  }
  return v79;
}

uint64_t sub_1BB40E17C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v4 = *a1;
  v5 = *(void **)(*a1 + 240);
  if (v5)
  {
    v6 = v5;
    return swift_willThrow();
  }
  else
  {
    if (a3)
    {
      sub_1BB430B08();
      if (qword_1EF2A6DB0 != -1)
        swift_once();
      type metadata accessor for DebugFormatCanvasViewController();
      sub_1BA4A2870((unint64_t *)&unk_1EF2BCDE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController, (uint64_t)&unk_1BB915070);
      sub_1BB86D210();
      if (v18 == 1)
      {
        v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        if (qword_1ED3BBA90 != -1)
          swift_once();
        objc_msgSend(v11, sel_postNotificationName_object_, qword_1ED476890, 0);

      }
    }
    v12 = v4 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history;
    swift_beginAccess();
    v13 = a3;
    v14 = a2;
    swift_retain();
    sub_1BB0EA7A8(0x7265646E6552, 0xE600000000000000, v12, v14, v4, a3);
    v16 = v15;
    swift_endAccess();

    swift_release();
    type metadata accessor for DebugFormatCanvasLayoutViewResult();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v4;
    *(_QWORD *)(v17 + 24) = v16;
    *a4 = v17;
    return swift_retain();
  }
}

id sub_1BB40E38C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  id result;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor];
  sub_1BA4C010C(v8 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_factory, (uint64_t)v31);
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  v9 = *(_QWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a2 + 216);
  LOBYTE(v26) = *(_BYTE *)(a2 + 168);
  v11 = *(_OWORD *)(a2 + 192);
  v27 = *(_OWORD *)(a2 + 176);
  v28 = v11;
  v29 = v9;
  v30 = v10;
  v12 = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = objc_msgSend(a1, sel_view, v26, v27, v28, v9, v10);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, sel_layoutMargins);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v23 = objc_msgSend(a1, sel_traitCollection);
    v24 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
    swift_retain();
    v25 = sub_1BB6D3030((uint64_t)&v26, v12, a3, (uint64_t)v23, v24, (uint64_t)sub_1BB40E534, 0, v16, v18, v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    *a4 = v25;
    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB40E534()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED3C6798 != -1)
    swift_once();
  sub_1BB873CB4();
  sub_1BB872AFC("rmatCanvasViewController.swift");
  type metadata accessor for FeedActionSender();
  sub_1BB873E34();
  if (qword_1ED3BB670 != -1)
    swift_once();
  v0 = (id)qword_1ED4768A8;
  v1 = sub_1BB8732DC();
  sub_1BA7AA598();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1BB86EF44("%{public}@", 10, 2, &dword_1BA493000, v0, v1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB40E6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5[5];

  result = sub_1BA79BB1C(a2, a3, v5);
  if (!v3)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1ED3B8000);
    type metadata accessor for FormatGroupLayoutFactory.Bound();
    return swift_dynamicCast();
  }
  return result;
}

uint64_t sub_1BB40E740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unsigned int *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v4 = sub_1BB86D678();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - v9;
  if (*(_BYTE *)(a2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 52)))
    v11 = (unsigned int *)MEMORY[0x1E0DB5D88];
  else
    v11 = (unsigned int *)MEMORY[0x1E0DB5CF8];
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v10, *v11, v4);
  v12 = a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v12, v10, v4);
  swift_endAccess();
  v13 = sub_1BB40A638();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  sub_1BB86D81C();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_1BB40E87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  sub_1BB40F7CC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  result = sub_1BB86DB28();
  if (!v1)
  {
    sub_1BA6B0C1C(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1BB40E970()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D678();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BB40EA68()
{
  return sub_1BA4A2870((unint64_t *)&unk_1EF2BCDE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController, (uint64_t)&unk_1BB915070);
}

id sub_1BB40EA94(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  objc_class *ObjectType;
  objc_super v19;
  uint64_t v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1BB870990();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9E20];
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v7 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView;
  v8 = objc_allocWithZone((Class)type metadata accessor for DebugFormatContentView());
  v9 = v2;
  *(_QWORD *)&v2[v7] = objc_msgSend(v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = &v9[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
  v11 = *MEMORY[0x1E0DB5CF8];
  v12 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView] = 0;
  v13 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_viewportMonitor;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB800, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  sub_1BB870984();
  v20 = v14;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3EF0, v6, MEMORY[0x1E0DB9E28]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AADB0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334(&qword_1ED3AADC0, (unint64_t *)&unk_1ED3AADB0, v6);
  sub_1BB873BC4();
  v15 = objc_allocWithZone((Class)sub_1BB8709A8());
  *(_QWORD *)&v9[v13] = sub_1BB87099C();
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_editor] = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_scrollView] = a2;
  swift_retain();
  v16 = a2;

  v19.receiver = v9;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BB40ECFC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB40ED20(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1BB40AC3C(a1, v1, (void (*)(uint64_t))MEMORY[0x1E0DB5ED8]);
}

void sub_1BB40ED40(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1BB40AC3C(a1, v1, (void (*)(uint64_t))MEMORY[0x1E0DB5EE0]);
}

void sub_1BB40ED60()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = sub_1BB870990();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9E20];
  MEMORY[0x1E0C80A78](v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatContentView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_columnSystem];
  v5 = *MEMORY[0x1E0DB5CF8];
  v6 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController____lazy_storage___columnView] = 0;
  v7 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_viewportMonitor;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB800, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  sub_1BB870984();
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3EF0, v2, MEMORY[0x1E0DB9E28]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AADB0, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334(&qword_1ED3AADC0, (unint64_t *)&unk_1ED3AADB0, v2);
  sub_1BB873BC4();
  v8 = objc_allocWithZone((Class)sub_1BB8709A8());
  *(_QWORD *)&v0[v7] = sub_1BB87099C();

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB40EF90()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB40EFCC()
{
  uint64_t v0;

  return sub_1BB40BB38(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_1BB40EFF4()
{
  return swift_deallocObject();
}

uint64_t sub_1BB40F004(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6BAD2C(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB40F100()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB40F134()
{
  sub_1BA4A2870(&qword_1EF2C3750, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutView, (uint64_t)&unk_1BB8EA2F0);
  return sub_1BB870978();
}

uint64_t sub_1BB40F198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for GroupLayoutContext();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64) + v3 + 7;
  v5 = type metadata accessor for GroupLayoutBindingContext();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v0 + v3;
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + *(int *)(v1 + 20);
  v10 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + *(int *)(v1 + 24);
  if (*(_QWORD *)(v11 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v12 = v4 & 0xFFFFFFFFFFFFFFF8;
  v13 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v12 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v16 = v0 + ((v6 + ((v12 + 151) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6);
  __swift_destroy_boxed_opaque_existential_1(v16 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v16 + *(int *)(v5 + 52);
  v18 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BB40F404@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t *result;
  __int128 v17[9];

  v4 = *(_QWORD *)(type metadata accessor for GroupLayoutContext() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 151) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(type metadata accessor for GroupLayoutBindingContext() - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v1 + v7);
  v11 = *(_QWORD *)(v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = *(_OWORD *)(v1 + v6 + 112);
  v17[6] = *(_OWORD *)(v1 + v6 + 96);
  v17[7] = v12;
  v17[8] = *(_OWORD *)(v1 + v6 + 128);
  v13 = *(_OWORD *)(v1 + v6 + 48);
  v17[2] = *(_OWORD *)(v1 + v6 + 32);
  v17[3] = v13;
  v14 = *(_OWORD *)(v1 + v6 + 80);
  v17[4] = *(_OWORD *)(v1 + v6 + 64);
  v17[5] = v14;
  v15 = *(_OWORD *)(v1 + v6 + 16);
  v17[0] = *(_OWORD *)(v1 + v6);
  v17[1] = v15;
  result = sub_1BB40D134(v1 + v5, v17, v10, (char *)(v1 + v9), v11);
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1BB40F4F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB40F51C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1BB40E17C(a1, a2, *(void **)(v3 + 16), a3);
}

uint64_t sub_1BB40F534()
{
  uint64_t *v0;

  return sub_1BB40E6B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BB40F550()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for FormatGroupLayoutFactory.Bound();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v3 + 8);
  v4 = v3 + v1[6];
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for GroupLayoutContext();
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v9 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  swift_release();
  v13 = v3 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[12]);
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[14]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB40F784()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatGroupLayoutFactory.Bound() - 8) + 80);
  return sub_1BB40E740(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BB40F7B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB40E87C(a1);
}

void sub_1BB40F7CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C45B0)
  {
    type metadata accessor for FormatLayoutAttributes();
    sub_1BA7399D0();
    sub_1BA4A2870(&qword_1ED3C9F20, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v0 = sub_1BB86DB1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C45B0);
  }
}

BOOL static FormatHeadlineBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BB40F880(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA813BEC(*a1);
  v5 = v4;
  if (v3 == sub_1BA813BEC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB40F908()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA813BEC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB40F968()
{
  unsigned __int8 *v0;

  sub_1BA813BEC(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB40F9A8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA813BEC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB40FA04(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724D008;
}

uint64_t FormatHeadlineBinding.Command.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatHeadlineBinding.Command.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB40FA84()
{
  unint64_t result;

  result = qword_1EF2C3758;
  if (!qword_1EF2C3758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Command, &type metadata for FormatHeadlineBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C3758);
  }
  return result;
}

unint64_t sub_1BB40FAC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB40FAEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB40FAEC()
{
  unint64_t result;

  result = qword_1EF2C3760;
  if (!qword_1EF2C3760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Command, &type metadata for FormatHeadlineBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C3760);
  }
  return result;
}

unint64_t sub_1BB40FB30(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA59D98C();
  a1[2] = sub_1BA5C9B84();
  result = sub_1BB40FA84();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Command()
{
  return &type metadata for FormatHeadlineBinding.Command;
}

ValueMetadata *_s14descr1E730C861C7CommandO10CodingTypeOMa()
{
  return &_s14descr1E730C861C7CommandO10CodingTypeON;
}

unint64_t sub_1BB40FB88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C3768;
  if (!qword_1EF2C3768)
  {
    sub_1BB40FBD0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C3768);
  }
  return result;
}

void sub_1BB40FBD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C3770)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C3770);
  }
}

unint64_t sub_1BB40FC28()
{
  unint64_t result;

  result = qword_1EF2C3778;
  if (!qword_1EF2C3778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915344, &_s14descr1E730C861C7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C3778);
  }
  return result;
}

uint64_t sub_1BB40FC6C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v8);
  LOBYTE(a1) = *a1;
  sub_1BA76C878(a2, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA8DACF0(a3);
  sub_1BB40FD44(a1, a3, a4);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1EF2A9750, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 0, 1, v10);
}

void sub_1BB40FD44(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v25[5];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25[2] = a3;
  v25[3] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v4);
  v25[0] = (char *)v25 - v5;
  sub_1BA4A3FB4(0, &qword_1ED3C6110, (void (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext);
  MEMORY[0x1E0C80A78](v6);
  v26 = type metadata accessor for FormatInspectionItem(0);
  v25[1] = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25[4] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA813BEC(a1);
  v10 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_1BA689E44(v8, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    v27 = v11;
    v28 = v13;
    sub_1BA7114A0();
    v14 = sub_1BB873ABC();
    v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v17 = sub_1BA9C0430(1uLL, v8, v10);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v17, v19, v21, v23);
    swift_bridgeObjectRelease();
    v27 = v14;
    v28 = v16;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB40FF48@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v1;
  sub_1BB872AFC(a1);
  v5 = *(_QWORD *)(v4 - 136);
  v6 = *(_QWORD *)(v4 - 128);
  v7 = *(_QWORD **)(v4 - 160);
  if (qword_1ED3C4B08 != -1)
    swift_once();
  v8 = *(_QWORD *)(v4 - 192);
  sub_1BA76C878(v2, v8);
  v9 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  v10 = swift_retain();
  v11 = sub_1BAFEC5E0(v10, v8);
  swift_release();
  sub_1BA8DAD20(*(_QWORD *)(v4 - 168));
  v12 = *(_QWORD *)(v4 - 152);
  v13 = (_QWORD *)((char *)v7 + *(int *)(v12 + 24));
  *v13 = v11;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *v7 = v5;
  v7[1] = v6;
  v7[2] = 0;
  v7[3] = 0;
  v15 = (char *)v7 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = -1;
  sub_1BA717468(v2);
  v16 = *(_QWORD *)(v4 - 176);
  sub_1BAFBC4F8((uint64_t)v7, v16);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 56))(v16, 0, 1, v12);
}

uint64_t FormatSponsoredBannerNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNodeStyle.filledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.unfilledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t FormatSponsoredBannerNodeStyle.__allocating_init(identifier:class:selectors:filledColor:unfilledColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, char a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = swift_allocObject();
  v17 = *a6;
  v18 = *a7;
  swift_beginAccess();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v16 + 48) = a5;
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = v18;
  *(_BYTE *)(v16 + 72) = a8;
  return v16;
}

uint64_t FormatSponsoredBannerNodeStyle.init(identifier:class:selectors:filledColor:unfilledColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, char a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;

  v15 = *a6;
  v16 = *a7;
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = v15;
  *(_QWORD *)(v8 + 64) = v16;
  *(_BYTE *)(v8 + 72) = a8;
  return v8;
}

uint64_t FormatSponsoredBannerNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5E800C(*(_QWORD *)(v0 + 56));
  sub_1BA5E800C(*(_QWORD *)(v0 + 64));
  return v0;
}

uint64_t FormatSponsoredBannerNodeStyle.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5E800C(*(_QWORD *)(v0 + 56));
  sub_1BA5E800C(*(_QWORD *)(v0 + 64));
  return swift_deallocClassInstance();
}

uint64_t sub_1BB410CFC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEBDC0C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB410D24(_QWORD *a1)
{
  return FormatSponsoredBannerNodeStyle.encode(to:)(a1);
}

BOOL sub_1BB410D44(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed30FormatSponsoredBannerNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.filledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.unfilledColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1BB410D80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSponsoredBannerNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BB410D94(_QWORD *a1)
{
  return FormatSponsoredBannerNodeStyle.Selector.encode(to:)(a1);
}

uint64_t _s8NewsFeed30FormatSponsoredBannerNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 32);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (v9 = sub_1BB874398(), result = 0, (v9 & 1) != 0))
  {
    if ((~v2 & 0xF000000000000007) != 0)
    {
      v16 = v2;
      if ((~v6 & 0xF000000000000007) != 0)
      {
        swift_retain_n();
        static FormatColor.== infix(_:_:)((uint64_t)&v16);
        v13 = v12;
        swift_release();
        sub_1BA5E800C(v2);
        if ((v13 & 1) == 0)
          return 0;
        goto LABEL_13;
      }
      swift_retain();
    }
    else if ((~v6 & 0xF000000000000007) == 0)
    {
LABEL_13:
      if ((~v3 & 0xF000000000000007) == 0)
      {
        if ((~v5 & 0xF000000000000007) == 0)
        {
LABEL_23:
          if (v4 == 2)
          {
            if (v7 == 2)
              return 1;
          }
          else if (v7 != 2 && ((((v4 & 1) == 0) ^ v7) & 1) != 0)
          {
            return 1;
          }
          return 0;
        }
        goto LABEL_18;
      }
      v16 = v3;
      if ((~v5 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_18:
        sub_1BA5E7FF4(v5);
        sub_1BA5E800C(v3);
        v11 = v5;
        goto LABEL_19;
      }
      swift_retain_n();
      static FormatColor.== infix(_:_:)((uint64_t)&v16);
      v15 = v14;
      swift_release();
      sub_1BA5E800C(v3);
      if ((v15 & 1) != 0)
        goto LABEL_23;
      return 0;
    }
    sub_1BA5E7FF4(v6);
    sub_1BA5E800C(v2);
    v11 = v6;
LABEL_19:
    sub_1BA5E800C(v11);
    return 0;
  }
  return result;
}

uint64_t sub_1BB410F50(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB411054(&qword_1EF2C3780, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatSponsoredBannerNodeStyle()
{
  return objc_opt_self();
}

uint64_t sub_1BB410FA4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BB411054(&qword_1ED3ADC58, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  result = sub_1BB411054(&qword_1EF2B5B10, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB410FF0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB411054(&qword_1ED3ADC58, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  a1[2] = sub_1BB411054(&qword_1EF2B5B10, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  result = sub_1BB411054(&qword_1EF2C3788, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB411054(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSponsoredBannerNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB411090(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4110B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4110B4()
{
  unint64_t result;

  result = qword_1EF2C3790;
  if (!qword_1EF2C3790)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerNodeStyle.Selector, &type metadata for FormatSponsoredBannerNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C3790);
  }
  return result;
}

unint64_t sub_1BB4110F8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAEEB5D8();
  result = sub_1BAEEB570();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB411124(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEEB5D8();
  a1[2] = sub_1BAEEB570();
  result = sub_1BB411158();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB411158()
{
  unint64_t result;

  result = qword_1EF2C3798[0];
  if (!qword_1EF2C3798[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerNodeStyle.Selector, &type metadata for FormatSponsoredBannerNodeStyle.Selector);
    atomic_store(result, qword_1EF2C3798);
  }
  return result;
}

uint64_t sub_1BB41119C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4111E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSponsoredBannerNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSponsoredBannerNodeStyle.__allocating_init(identifier:class:selectors:filledColor:unfilledColor:ignoresSmartInvertColors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t destroy for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) != 0)
    result = swift_release();
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  if ((~v6 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BAA5FA24(a1 + 16);
    v5 = *(_QWORD *)(a2 + 16);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = (_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = v8 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) != 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *v7 = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_1BAA5FA24(a1 + 24);
    v8 = *(_QWORD *)(a2 + 24);
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
LABEL_13:
    *v7 = v8;
    goto LABEL_15;
  }
  *v7 = v8;
  swift_retain();
LABEL_15:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FormatSponsoredBannerNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24(a1 + 16);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  v7 = (_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *v7 = v8;
      swift_release();
      goto LABEL_11;
    }
    sub_1BAA5FA24(a1 + 24);
  }
  *v7 = v8;
LABEL_11:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSponsoredBannerNodeStyle.Selector()
{
  return &type metadata for FormatSponsoredBannerNodeStyle.Selector;
}

uint64_t sub_1BB41150C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB411590(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (uint64_t *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v12 = *v11;
    v13 = v11[1];
    sub_1BA69D44C(*v11, v13);
    *v10 = v12;
    v10[1] = v13;
    *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BB411678(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BA69D314(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4116C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = v8[1];
  sub_1BA69D44C(*v8, v10);
  *v7 = v9;
  v7[1] = v10;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB411754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = v8[1];
  sub_1BA69D44C(*v8, v10);
  v11 = *v7;
  v12 = v7[1];
  *v7 = v9;
  v7[1] = v10;
  sub_1BA69D314(v11, v12);
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB4117F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB411860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = *v7;
  v10 = v7[1];
  v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_1BA69D314(v9, v10);
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB4118E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB411964 + 4 * byte_1BB915610[v10]))();
  }
}

void sub_1BB4119F0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BB411AEC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BB411B68);
}

void sub_1BB411AF4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB411AFCLL);
  JUMPOUT(0x1BB411B68);
}

void sub_1BB411B44()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB411B68);
}

void sub_1BB411B4C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB411B68);
}

uint64_t sub_1BB411B54(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BB411B68);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BB411B64);
    JUMPOUT(0x1BB411B60);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for DebugFormatServiceResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatServiceResult);
}

uint64_t sub_1BB411B8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;

  v35 = a5;
  v34 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DebugFormatServiceResult.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1BCCE5B24](&unk_1BB9157D8, v13);
  v41 = sub_1BB874104();
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v15 = (char *)&v32 - v14;
  v39 = a2;
  v36 = a3;
  v37 = type metadata accessor for DebugFormatServiceResult(0, a2, a3, a4);
  v16 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v18 = (char *)&v32 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42 = v15;
  v19 = v43;
  sub_1BB87468C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v43 = v16;
  v20 = v38;
  v21 = v39;
  v22 = v18;
  v23 = v37;
  v46 = 0;
  sub_1BA92B850();
  sub_1BB8740D4();
  v24 = v44;
  v25 = v45;
  v26 = &v18[*(int *)(v23 + 44)];
  *(_QWORD *)v26 = v44;
  *((_QWORD *)v26 + 1) = v25;
  v46 = 1;
  v32 = v25;
  v33 = v24;
  sub_1BA69D44C(v24, v25);
  sub_1BAB5E838();
  sub_1BB8740D4();
  *(_QWORD *)&v18[*(int *)(v23 + 48)] = v44;
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  v27 = swift_bridgeObjectRetain();
  sub_1BACC8234(v27);
  v28 = v21;
  v29 = v32;
  v36 = 0;
  sub_1BB86DC78();
  sub_1BA69D314(v33, v29);
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v42, v41);
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v22, v40, v28);
  v30 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v35, v22, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v22, v23);
}

uint64_t sub_1BB411F08(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  __int128 v13;
  char v14;

  v4 = type metadata accessor for DebugFormatServiceResult.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32));
  MEMORY[0x1BCCE5B24](&unk_1BB9157D8, v4);
  v5 = sub_1BB8741D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = v12[0];
  sub_1BB8746C8();
  v13 = *(_OWORD *)(v9 + *(int *)(a2 + 44));
  v14 = 0;
  sub_1BA92B43C();
  v10 = v12[1];
  sub_1BB8741AC();
  if (!v10)
  {
    *(_QWORD *)&v13 = *(_QWORD *)(v9 + *(int *)(a2 + 48));
    v14 = 1;
    sub_1BAB5E958();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB412080()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1BB4120D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x704F676E69646F63;
  else
    return 1635017060;
}

uint64_t sub_1BB41210C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB915738, a3);
  return sub_1BB874440();
}

uint64_t sub_1BB412160(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB915738, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BB4121AC()
{
  MEMORY[0x1BCCE5B24](&unk_1BB915738);
  return sub_1BB872D54();
}

uint64_t sub_1BB4121FC()
{
  MEMORY[0x1BCCE5B24](&unk_1BB915738);
  return sub_1BB872D48();
}

uint64_t sub_1BB41224C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB412080();
  *a1 = result;
  return result;
}

uint64_t sub_1BB412284@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB4120D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB4122B8()
{
  char *v0;

  return sub_1BB4120D0(*v0);
}

uint64_t sub_1BB4122CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB412080();
  *a1 = result;
  return result;
}

uint64_t sub_1BB4122FC(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB9157D8, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB412330(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB9157D8, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BB412364@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB411B8C(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BB412384(_QWORD *a1, uint64_t a2)
{
  return sub_1BB411F08(a1, a2);
}

uint64_t type metadata accessor for DebugFormatServiceResult.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugFormatServiceResult.CodingKeys);
}

uint64_t sub_1BB4123A4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4123F0 + 4 * byte_1BB915624[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB412424 + 4 * byte_1BB91561F[v4]))();
}

uint64_t sub_1BB412424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB41242C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB412434);
  return result;
}

uint64_t sub_1BB412440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB412448);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB41244C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB412454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BB412460()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB412470()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB412480()
{
  JUMPOUT(0x1BCCE5B24);
}

ValueMetadata *type metadata accessor for M6_V1()
{
  return &type metadata for M6_V1;
}

uint64_t sub_1BB4124A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t *v31;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[8];
  void *v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  __int128 v60;
  unsigned __int8 v61;
  ValueMetadata *v62;
  unint64_t v63;

  v36 = a2;
  v37 = a1;
  v48 = a3;
  v39 = sub_1BB86C8E0();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v5 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = type metadata accessor for GroupLayoutBindingContext();
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = v7;
  v46 = type metadata accessor for GroupLayoutContext();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = &v34[-v11];
  v42 = &v34[-v11];
  v13 = *v3;
  v35 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v62 = &type metadata for M6_V1;
  v16 = sub_1BA8EDD20();
  v63 = v16;
  LOBYTE(v60) = v13;
  *((_QWORD *)&v60 + 1) = v14;
  v61 = v15;
  v17 = v36;
  sub_1BA4C2DD8(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  v18 = v37;
  v45 = sub_1BB3E12E4(0, 0, 0, 0, 0);
  sub_1BA4C2DD8(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4C2DD8(v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v19 = sub_1BB86C8C8();
  v21 = v20;
  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v5, v39);
  v58 = &type metadata for M6_V1;
  v59 = v16;
  v55[0] = v35;
  v56 = v14;
  v57 = v15;
  type metadata accessor for GroupLayoutKey();
  v22 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v53 = sub_1BB874734();
  v54 = v23;
  v51 = 95;
  v52 = 0xE100000000000000;
  v49 = 45;
  v50 = 0xE100000000000000;
  sub_1BA7114A0();
  v24 = sub_1BB873B04();
  v26 = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 24) = v26;
  v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *v27 = v19;
  v27[1] = v21;
  sub_1BA4C010C((uint64_t)v55, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4((uint64_t)v40, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v28, 0, 1, v47);
  v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v41, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v29, 0, 1, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  sub_1BA7C2538(v14, v15);
  v30 = (int *)type metadata accessor for M6_V1.Bound();
  v31 = v48;
  v48[3] = (uint64_t)v30;
  v31[4] = sub_1BA4A2870(&qword_1ED39E908, (uint64_t (*)(uint64_t))type metadata accessor for M6_V1.Bound, (uint64_t)&unk_1BB9158E8);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v31);
  sub_1BA4CECCC(&v60, (uint64_t)boxed_opaque_existential_0);
  result = sub_1BA5193C4((uint64_t)v42, (uint64_t)boxed_opaque_existential_0 + v30[5], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v30[6]) = v45;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v30[7]) = v22;
  return result;
}

double sub_1BB4128D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v8 = type metadata accessor for M6_V1.Bound();
  v9 = *(_QWORD *)(v2 + *(int *)(v8 + 24));
  v29 = v2;
  swift_bridgeObjectRetain();
  v10 = sub_1BA8A3388((void (*)(_OWORD *__return_ptr, uint64_t))sub_1BB414854, (uint64_t)v28, v9);
  swift_bridgeObjectRelease();
  v11 = v2 + *(int *)(v8 + 20);
  v12 = v11 + *(int *)(type metadata accessor for GroupLayoutContext() + 24);
  if (*(_BYTE *)(v12 + 21) == 1)
  {
    sub_1BB412D70(v10, v11);
  }
  else
  {
    v13 = *(_BYTE *)(v12 + 20);
    v14 = *MEMORY[0x1E0DB5D88];
    v15 = sub_1BB86D678();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v7, v14, v15);
    v16 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
    MEMORY[0x1E0C80A78](v16);
    *((_QWORD *)&v27 - 4) = v10;
    *((_QWORD *)&v27 - 3) = v11;
    LOWORD(v25) = v13;
    sub_1BB3E2A08(0, (unint64_t *)&unk_1ED39DF80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
    swift_allocObject();
    sub_1BB86DB34();
  }
  v17 = sub_1BB86DB40();
  v27 = v31;
  v18 = v32;
  v19 = v33;
  v30 = v34;
  *(_QWORD *)&v31 = v10;
  MEMORY[0x1E0C80A78](v17);
  v26 = v10;
  sub_1BA4C576C(0, &qword_1ED39EA10);
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED39EA38);
  sub_1BB3F5538();
  v20 = sub_1BB3F5590();
  swift_bridgeObjectRetain();
  v25 = v20;
  v21 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31 = v21;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v22 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = *(double *)&v27;
  *(_OWORD *)(a1 + 8) = v27;
  *(_QWORD *)(a1 + 24) = v18;
  *(_QWORD *)(a1 + 32) = v19;
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v22;
  *(_QWORD *)(a1 + 48) = v24;
  return result;
}

uint64_t sub_1BB412C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16[2];
  _BYTE v17[40];
  _QWORD v18[6];
  __int128 v19[2];
  __int128 v20[2];

  v6 = type metadata accessor for M6_V1.Bound();
  v7 = *(_QWORD *)(a2 + *(int *)(v6 + 28));
  sub_1BA982E70(a1, (uint64_t)(a3 + 1));
  v8 = a2 + *(int *)(v6 + 20);
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + *(int *)(v9 + 40)) + 16);
  v11 = *(double *)(v8 + *(int *)(v9 + 32));
  sub_1BA4C010C(v10 + 16, (uint64_t)v20);
  sub_1BA4C010C(v10 + 56, (uint64_t)v19);
  v12 = v11 * *(double *)(v10 + 96);
  sub_1BA4CECCC(v20, (uint64_t)v17);
  sub_1BA4CECCC(v19, (uint64_t)v18);
  *(double *)&v18[5] = v12;
  sub_1BA4C010C((uint64_t)v18, (uint64_t)v16);
  v13 = type metadata accessor for CategoryViewStyler();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0x4030000000000000;
  sub_1BA4CECCC(v16, v14 + 24);
  a3[23] = v13;
  a3[24] = &off_1E7293398;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  a3[20] = v14;
  *a3 = v7;
  return result;
}

uint64_t sub_1BB412D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = a2 + *(int *)(v8 + 24);
  v10 = *(_BYTE *)(v9 + 20);
  v11 = *(_BYTE *)(v9 + 21);
  v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + *(int *)(v8 + 40)) + 24) + 16);
  v23 = a1;
  sub_1BA4C576C(0, &qword_1ED39EA10);
  sub_1BB3F5684();
  swift_retain();
  v13 = sub_1BB8730F0();
  v14 = *MEMORY[0x1E0DB5D88];
  v15 = sub_1BB86D678();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v7, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v19 = v13;
  v20 = v12;
  v21 = v10;
  v22 = v11;
  sub_1BB3E2A08(0, (unint64_t *)&unk_1ED39DF80, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v16 = sub_1BB86DB34();
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB412F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  _OWORD v38[10];
  uint64_t v39;

  v35 = a5;
  v37 = a4;
  v36 = a6;
  v9 = sub_1BB86D7A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  v14 = swift_allocObject();
  sub_1BB3E28DC(a2, v14 + 16);
  v15 = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(v14 + 344) = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(v14 + 360) = v15;
  v16 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v14 + 264) = *(_OWORD *)(a3 + 48);
  v17 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v14 + 280) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v14 + 296) = v17;
  v18 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v14 + 312) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v14 + 328) = v18;
  v19 = v37;
  v20 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v14 + 216) = *(_OWORD *)a3;
  *(_OWORD *)(v14 + 232) = v20;
  *(_QWORD *)(v14 + 376) = *(_QWORD *)(a3 + 160);
  *(_OWORD *)(v14 + 248) = v16;
  v21 = v19 + *(int *)(type metadata accessor for M6_V1.Bound() + 20);
  result = type metadata accessor for GroupLayoutContext();
  v23 = *(_QWORD *)(v21 + *(int *)(result + 28));
  v24 = __OFADD__(v23, a1);
  v25 = v23 + a1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    v26 = result;
    *(_QWORD *)(v14 + 384) = v25;
    *(_QWORD *)(v13 + 16) = v14 | 0x8000000000000000;
    v27 = *(_OWORD *)(a3 + 144);
    v38[8] = *(_OWORD *)(a3 + 128);
    v38[9] = v27;
    v39 = *(_QWORD *)(a3 + 160);
    v28 = *(_OWORD *)(a3 + 80);
    v38[4] = *(_OWORD *)(a3 + 64);
    v38[5] = v28;
    v29 = *(_OWORD *)(a3 + 112);
    v38[6] = *(_OWORD *)(a3 + 96);
    v38[7] = v29;
    v30 = *(_OWORD *)(a3 + 16);
    v38[0] = *(_OWORD *)a3;
    v38[1] = v30;
    v31 = *(_OWORD *)(a3 + 48);
    v38[2] = *(_OWORD *)(a3 + 32);
    v38[3] = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v9);
    v32 = -2;
    if (!*(_BYTE *)(v21 + *(int *)(v26 + 24) + 21))
      v32 = -1;
    v33 = sub_1BB41496C((uint64_t)v38, (uint64_t)v12, a1, *(_QWORD *)(v35 + 16) + v32);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(_QWORD *)(v13 + 24) = v33;
    *v36 = v13 | 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1BB413114(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)&v15[-v11];
  v19 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 6;
  *v12 = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63F8], v9);
  v16 = a2;
  v17 = a3;
  v18 = a4 & 0x101;
  sub_1BB3E2A08(0, &qword_1ED39E2D8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB3F5704();
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BB41326C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(unint64_t, _QWORD, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  void (*v46)(uint64_t *, uint64_t);
  void (*v47)(uint64_t *, _QWORD, uint64_t);
  uint64_t v48;
  uint64_t v49;

  LODWORD(v48) = a4;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v38 - v10);
  v49 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DB5A38], v12);
  *v11 = v13;
  v15 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104);
  v15(v11, *MEMORY[0x1E0DB6318], v8);
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BB3F575C();
  sub_1BB86D4EC();
  v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  result = v19(v11, v8);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v45 = v17;
    v22 = a2 + 32;
    v44 = *MEMORY[0x1E0DB6410];
    v23 = *MEMORY[0x1E0DB5C80];
    v42 = v48 & 1;
    v43 = v23;
    v41 = (v48 >> 8) & 1;
    v38 = a2;
    swift_bridgeObjectRetain();
    v40 = xmmword_1BB87CE70;
    v39 = v18;
    v46 = (void (*)(uint64_t *, uint64_t))v19;
    v47 = v15;
    do
    {
      v48 = v21;
      v49 = a1;
      v15(v11, v44, v8);
      sub_1BB3E2A84();
      sub_1BA4CDF6C(0, &qword_1ED39E2C0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v25 = v24;
      v26 = v11;
      v27 = v8;
      v28 = a1;
      v29 = a3;
      v30 = *(_QWORD *)(v24 - 8);
      v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v40;
      v33 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v30 + 104);
      a3 = v29;
      a1 = v28;
      v8 = v27;
      v11 = v26;
      v15 = v47;
      v34 = v33(v32 + v31, v43, v25);
      MEMORY[0x1E0C80A78](v34);
      *(&v38 - 4) = a3;
      *(&v38 - 3) = v22;
      v37 = v39;
      sub_1BB86D498();
      v35 = v46;
      v36 = v48;
      swift_bridgeObjectRelease();
      v35(v11, v8);
      v22 += 200;
      v21 = v36 - 1;
    }
    while (v21);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB413568(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)&v15[-v11];
  v19 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 6;
  *v12 = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63F8], v9);
  v16 = a2;
  v17 = a3;
  v18 = a4 & 0x101;
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  sub_1BB3F575C();
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BB4136C0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  _BYTE v21[152];
  uint64_t v22;
  uint64_t v23;

  sub_1BB3E2B4C();
  v19 = v8;
  v18 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v17 = v11;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v17 - v14;
  v23 = a1;
  swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB63C0], v12);
  v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                  + 16);
  sub_1BA982E70(a3 + 8, (uint64_t)v21);
  v20 = a4 & 0x101;
  sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  type metadata accessor for CategoryViewLayoutAttributesFactory();
  sub_1BB3E2924();
  sub_1BB3E2C74();
  sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
  swift_retain();
  sub_1BB86D684();
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  sub_1BB3F575C();
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v17);
}

uint64_t sub_1BB413968(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)&v15[-v11];
  v19 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 6;
  *v12 = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB63F8], v9);
  v16 = a2;
  v17 = a3;
  v18 = a4 & 0x101;
  sub_1BB3E2A08(0, &qword_1ED39E2D8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB3F5704();
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BB413AC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(unint64_t, _QWORD, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  __int128 v38;
  unint64_t v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  void (*v45)(uint64_t *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v40 = a4;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v37 - v10);
  v49 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DB5A38], v12);
  *v11 = v13;
  v15 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104);
  v15(v11, *MEMORY[0x1E0DB6318], v8);
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BB3F575C();
  sub_1BB86D4EC();
  v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  result = v19(v11, v8);
  v48 = a2;
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v43 = *MEMORY[0x1E0DB6410];
    v22 = *MEMORY[0x1E0DB5C80];
    v41 = v40 & 1;
    v42 = v22;
    v40 = (v40 >> 8) & 1;
    swift_bridgeObjectRetain();
    v39 = v18;
    v23 = 0;
    v38 = xmmword_1BB87CE70;
    v37[1] = v17;
    v46 = a1;
    v47 = v8;
    v44 = v21;
    v45 = (void (*)(uint64_t *, uint64_t))v19;
    do
    {
      v24 = *(_QWORD *)(v48 + 8 * v23++ + 32);
      v49 = a1;
      v15(v11, v43, v8);
      sub_1BB3E2A84();
      sub_1BA4CDF6C(0, &qword_1ED39E2C0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v26 = v25;
      v27 = v15;
      v28 = a3;
      v29 = *(_QWORD *)(v25 - 8);
      v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v38;
      v32 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v29 + 104);
      a3 = v28;
      v15 = v27;
      v33 = v32(v31 + v30, v42, v26);
      MEMORY[0x1E0C80A78](v33);
      v37[-4] = a3;
      v37[-3] = v24;
      swift_bridgeObjectRetain();
      v36 = v39;
      sub_1BB86D498();
      v35 = v44;
      v34 = v45;
      swift_bridgeObjectRelease();
      a1 = v46;
      v8 = v47;
      v34(v11, v47);
      swift_bridgeObjectRelease();
    }
    while (v35 != v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB413DCC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _DWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)v24 - v11);
  v26 = a1;
  v31 = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 3;
  *v12 = v13;
  v14 = *MEMORY[0x1E0DB63F8];
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  v27 = a2;
  v28 = a2;
  v29 = a3;
  v24[1] = a4 & 1;
  v30 = a4 & 0x101;
  sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BB3F575C();
  v23 = v18;
  v25 = v17;
  sub_1BB86D4BC();
  v19 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  result = v19(v12, v9);
  if (*(_QWORD *)(a3 + 16) >= 2uLL)
  {
    v31 = v26;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = 3;
    *v12 = v21;
    v22 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v12, v14, v9);
    MEMORY[0x1E0C80A78](v22);
    *(_QWORD *)&v24[-8] = v27;
    *(_QWORD *)&v24[-6] = a3;
    v23 = v18;
    sub_1BB86D4BC();
    return v19(v12, v9);
  }
  return result;
}

uint64_t sub_1BB413FFC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  _BYTE v27[152];
  uint64_t v28;
  uint64_t v29;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  v29 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v24 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v25 = v14;
  result = v19(v17, v18, v14);
  v28 = a2;
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BA982E70(a3 + 40, (uint64_t)v27);
    v26 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v23 = v9;
    sub_1BB3E2924();
    v22 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3F575C();
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB4142B0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  _BYTE v27[152];
  uint64_t v28;
  uint64_t v29;

  sub_1BB3E2B4C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED39E2F0, (uint64_t (*)(void))sub_1BB3E2924, (uint64_t)&type metadata for CategoryViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  v29 = a1;
  swift_getKeyPath();
  v18 = *MEMORY[0x1E0DB63C0];
  v24 = v15;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v25 = v14;
  result = v19(v17, v18, v14);
  v28 = a2;
  if (*(_QWORD *)(a3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1BA982E70(a3 + 240, (uint64_t)v27);
    v26 = a4 & 0x101;
    sub_1BA4CDF6C(0, &qword_1ED39E2E8, (uint64_t (*)(void))sub_1BB3E2C30, (uint64_t)&type metadata for CategoryViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
    type metadata accessor for CategoryViewLayoutAttributesFactory();
    v23 = v9;
    sub_1BB3E2924();
    v22 = v10;
    sub_1BB3E2C74();
    sub_1BA4A2870(&qword_1ED39E8F8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for CategoryViewLayoutAttributesFactory);
    swift_retain();
    sub_1BB86D684();
    sub_1BB3E2A08(0, &qword_1ED39E2B8, MEMORY[0x1E0DB5A10]);
    sub_1BB3F575C();
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
  return result;
}

uint64_t sub_1BB41456C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB4124A0(a1, a2, a3);
}

uint64_t sub_1BB414580()
{
  return sub_1BB690B9C();
}

unint64_t sub_1BB414590(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB4145BC();
  result = sub_1BB414600();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB4145BC()
{
  unint64_t result;

  result = qword_1ED39E1F0;
  if (!qword_1ED39E1F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915830, &type metadata for M6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED39E1F0);
  }
  return result;
}

unint64_t sub_1BB414600()
{
  unint64_t result;

  result = qword_1ED39E9A8;
  if (!qword_1ED39E9A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915858, &type metadata for M6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED39E9A8);
  }
  return result;
}

uint64_t type metadata accessor for M6_V1.Bound()
{
  uint64_t result;

  result = qword_1ED39E910;
  if (!qword_1ED39E910)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB414680()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB41468C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB414708()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB414714(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB414788()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB414818(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED39E900, (uint64_t (*)(uint64_t))type metadata accessor for M6_V1.Bound, (uint64_t)&unk_1BB9158C0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB414854@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB412C28(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB414870(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB413114);
}

uint64_t sub_1BB41487C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB412F10(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BB414884(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB413968);
}

uint64_t sub_1BB414890()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4148A0(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB413AC0);
}

uint64_t sub_1BB4148AC(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB413DCC);
}

uint64_t sub_1BB4148B8(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB413FFC);
}

uint64_t sub_1BB4148C4(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB4142B0);
}

uint64_t sub_1BB4148D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB414900()
{
  _QWORD *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  if (v0[15])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  if (v0[20])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 22));
  return swift_deallocObject();
}

uint64_t sub_1BB41496C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4;
  double v5;
  double v6;
  double v7;
  CGFloat MinX;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  if (a3 >= a4)
    return MEMORY[0x1E0DEE9D8];
  v5 = *(double *)(a1 + 152);
  v4 = *(double *)(a1 + 160);
  v7 = *(double *)(a1 + 136);
  v6 = *(double *)(a1 + 144);
  v23 = *(CGRect *)(a1 + 96);
  v22 = v23;
  MinX = CGRectGetMinX(v23);
  MEMORY[0x1BCCE3EF8](v7 + MinX, v7, v6, v5, v4);
  v24.origin.x = v7;
  v24.origin.y = v6;
  v24.size.width = v5;
  v24.size.height = v4;
  CGRectGetMaxY(v24);
  sub_1BB8735E8();
  v25.origin.x = v7;
  v25.origin.y = v6;
  v25.size.width = v5;
  v25.size.height = v4;
  CGRectGetWidth(v25);
  CGRectGetMinX(v22);
  sub_1BB8735F4();
  sub_1BB86D774();
  sub_1BB873600();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_1BA4B07F0(0, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8) + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
  v20 = (_QWORD *)(v19 + v18);
  *v20 = v10;
  v20[1] = v12;
  v20[2] = v14;
  v20[3] = v16;
  swift_storeEnumTagMultiPayload();
  return v19;
}

uint64_t sub_1BB414B4C(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB41326C);
}

uint64_t sub_1BB414B58(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB413568);
}

uint64_t sub_1BB414B64(uint64_t a1)
{
  return sub_1BB3E2B28(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1BB4136C0);
}

_QWORD *assignWithCopy for InternalErrorViewLayout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for InternalErrorViewLayout(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedLayoutEntity()
{
  return &type metadata for FeedLayoutEntity;
}

uint64_t sub_1BB414CF0()
{
  if (qword_1EF2A6C98 != -1)
    swift_once();
  qword_1ED476418 = qword_1EF2AC7F0;
  unk_1ED476420 = *(_QWORD *)algn_1EF2AC7F8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB414D40(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB414D68 + 4 * byte_1BB915930[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1BB414D68()
{
  return 0x6449646E696BLL;
}

uint64_t sub_1BB414D7C()
{
  return 0x644974756F79616CLL;
}

uint64_t sub_1BB414D94()
{
  return 0x7364496D657469;
}

uint64_t sub_1BB414DAC()
{
  return 0x736E6D756C6F63;
}

unint64_t sub_1BB414DC4()
{
  return 0xD000000000000013;
}

uint64_t sub_1BB414DE0()
{
  return 0x644970756F7267;
}

uint64_t sub_1BB414DF8()
{
  return 0x496E6F6973736573;
}

uint64_t sub_1BB414E14(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BB41798C(0, &qword_1EF2C38B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB417948();
  sub_1BB8746C8();
  v12 = *v3;
  HIBYTE(v11) = 0;
  sub_1BA50CAA8(0, &qword_1ED39A670, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  sub_1BB4179E8((unint64_t *)&qword_1EF2AD4A0, MEMORY[0x1E0DB2990]);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = v3[1];
    HIBYTE(v11) = 1;
    sub_1BB8741AC();
    v12 = v3[2];
    HIBYTE(v11) = 2;
    sub_1BB8741AC();
    v12 = v3[3];
    HIBYTE(v11) = 3;
    sub_1BB8741AC();
    v12 = v3[4];
    HIBYTE(v11) = 4;
    sub_1BA50CAA8(0, &qword_1ED39A688, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BB417A48((unint64_t *)&qword_1EF2BC2E8, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v12 = v3[5];
    HIBYTE(v11) = 5;
    sub_1BB8741AC();
    v12 = v3[6];
    HIBYTE(v11) = 6;
    sub_1BB8741AC();
    v12 = v3[7];
    HIBYTE(v11) = 7;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB415124()
{
  unsigned __int8 *v0;

  return sub_1BB414D40(*v0);
}

uint64_t sub_1BB41512C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB416F5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB415150()
{
  sub_1BB417948();
  return sub_1BB874710();
}

uint64_t sub_1BB415178()
{
  sub_1BB417948();
  return sub_1BB87471C();
}

uint64_t sub_1BB4151A0()
{
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F0AC();
}

uint64_t sub_1BB415288()
{
  uint64_t v0;

  if (qword_1ED39F408 != -1)
    swift_once();
  v0 = qword_1ED476418;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BB4152E4()
{
  sub_1BA5C6D0C();
  return sub_1BB86F004();
}

uint64_t sub_1BB41531C()
{
  sub_1BA5C6D0C();
  return sub_1BB86F01C();
}

uint64_t sub_1BB415354()
{
  sub_1BA5C6D0C();
  return sub_1BB86F010();
}

double sub_1BB4153A4@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;

  sub_1BB417288((uint64_t *)v5);
  v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  result = *(double *)&v6;
  v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

double sub_1BB4153E0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1BB415548(a1, (void (**)(char *, uint64_t, uint64_t, uint64_t))v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1BB415420(_QWORD *a1)
{
  return sub_1BB414E14(a1);
}

uint64_t sub_1BB415434()
{
  sub_1BA5C6D0C();
  return sub_1BB86F040();
}

uint64_t sub_1BB41546C()
{
  sub_1BA5C6D0C();
  return sub_1BB86F034();
}

uint64_t sub_1BB4154AC()
{
  sub_1BA5C6D0C();
  return sub_1BB86F028();
}

unint64_t sub_1BB415504()
{
  unint64_t result;

  result = qword_1EF2C38A0;
  if (!qword_1EF2C38A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915AAC, &type metadata for FeedLayoutEntity);
    atomic_store(result, (unint64_t *)&qword_1EF2C38A0);
  }
  return result;
}

uint64_t sub_1BB415548@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  void (**v42)(char *, uint64_t, uint64_t, uint64_t);
  void (**v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  char v58;
  uint64_t v59;

  v57 = (_QWORD *)a1;
  v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))a2;
  sub_1BB41798C(0, &qword_1EF2C38A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v54 = (char *)&v43 - v3;
  sub_1BA50CAF0(0, &qword_1ED39A6F0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8]);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - v7;
  v9 = MEMORY[0x1E0DEA968];
  v10 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v9, v10, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v19(v16, 1, 1, v17);
  v19(v13, 1, 1, v18);
  sub_1BA50CAA8(0, &qword_1ED39A708, v9, v10, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v9, v10, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v51 = sub_1BB86F058();
  v19(v16, 1, 1, v18);
  v19(v13, 1, 1, v18);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v50 = sub_1BB86F058();
  v19(v16, 1, 1, v18);
  v19(v13, 1, 1, v18);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v48 = sub_1BB86F058();
  v53 = v19;
  v19(v16, 1, 1, v18);
  v52 = v13;
  v19(v13, 1, 1, v18);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v49 = sub_1BB86F058();
  v20 = MEMORY[0x1E0DEB418];
  sub_1BA50CAA8(0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v23(v8, 1, 1, v21);
  v23(v56, 1, 1, v22);
  v24 = MEMORY[0x1E0DB2EE8];
  sub_1BA50CAA8(0, &qword_1ED39A720, v20, MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A688, v20, v24, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v47 = sub_1BB86F058();
  v25 = v53;
  v53(v16, 1, 1, v18);
  v26 = v52;
  v25(v52, 1, 1, v18);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v56 = (char *)sub_1BB86F058();
  v25(v16, 1, 1, v18);
  v25(v26, 1, 1, v18);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v46 = sub_1BB86F058();
  v25(v16, 1, 1, v18);
  v25(v26, 1, 1, v18);
  v27 = v57;
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v28 = sub_1BB86F058();
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  sub_1BB417948();
  v29 = v55;
  v30 = v54;
  sub_1BB87468C();
  if (v29)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    v55 = v28;
    v58 = 0;
    sub_1BB4179E8((unint64_t *)&qword_1EF2AD468, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v31 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v59;
    swift_retain();
    swift_release();
    v58 = 1;
    sub_1BB8740D4();
    v53 = v31;
    v32 = v59;
    swift_retain();
    swift_release();
    v58 = 2;
    sub_1BB8740D4();
    v33 = v59;
    swift_retain();
    swift_release();
    v58 = 3;
    sub_1BB8740D4();
    v34 = v59;
    swift_retain();
    swift_release();
    v58 = 4;
    sub_1BB417A48((unint64_t *)&qword_1EF2BC2D0, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v35 = (char *)v59;
    swift_retain();
    swift_release();
    v58 = 5;
    sub_1BB8740D4();
    v52 = v35;
    v36 = v59;
    swift_retain();
    swift_release();
    v58 = 6;
    sub_1BB8740D4();
    v51 = v59;
    swift_retain();
    swift_release();
    v58 = 7;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v45);
    v37 = v59;
    swift_retain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    swift_release();
    swift_release();
    swift_release();
    v38 = v52;
    swift_release();
    swift_release();
    v39 = v33;
    swift_release();
    swift_release();
    v40 = v53;
    result = swift_release();
    v42 = v43;
    *v43 = v40;
    v42[1] = v32;
    v42[2] = v39;
    v42[3] = v34;
    v42[4] = v38;
    v42[5] = v36;
    v42[6] = v51;
    v42[7] = v37;
  }
  return result;
}

uint64_t sub_1BB4161DC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v61 = a2;
  v63 = a1;
  v58 = a3;
  sub_1BA50CAF0(0, &qword_1ED39A6F0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8]);
  MEMORY[0x1E0C80A78](v3);
  v64 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v51 - v6;
  v7 = MEMORY[0x1E0DEA968];
  v8 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v51 - v13;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v7, v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v17(v14, 1, 1, v15);
  v17(v11, 1, 1, v16);
  sub_1BA50CAA8(0, &qword_1ED39A708, v7, v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v7, v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v60 = sub_1BB86F058();
  v17(v14, 1, 1, v16);
  v17(v11, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v57 = sub_1BB86F058();
  v17(v14, 1, 1, v16);
  v17(v11, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v56 = sub_1BB86F058();
  v52 = v14;
  v54 = v17;
  v17(v14, 1, 1, v16);
  v53 = v11;
  v17(v11, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v55 = sub_1BB86F058();
  v18 = MEMORY[0x1E0DEB418];
  v19 = MEMORY[0x1E0DB2EE8];
  sub_1BA50CAA8(0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v22(v62, 1, 1, v20);
  v22(v64, 1, 1, v21);
  sub_1BA50CAA8(0, &qword_1ED39A720, v18, v19, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A688, v18, v19, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v59 = sub_1BB86F058();
  v23 = v52;
  v24 = v54;
  v54(v52, 1, 1, v16);
  v25 = v53;
  v24(v53, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v62 = (char *)sub_1BB86F058();
  v24(v23, 1, 1, v16);
  v24(v25, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v26 = sub_1BB86F058();
  v24(v23, 1, 1, v16);
  v24(v25, 1, 1, v16);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v27 = sub_1BB86F058();
  swift_retain_n();
  swift_retain();
  v28 = v57;
  swift_retain();
  v29 = v56;
  swift_retain();
  v30 = v55;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v31 = v63;
  v32 = v63[3];
  v65 = v63[2];
  v66 = v32;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v33 = v31[1];
  v65 = *v31;
  v66 = v33;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v64 = (char *)v26;
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v34 = v31[5];
  v35 = v31;
  v65 = v31[4];
  v66 = v34;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v36 = v30;
  swift_release();
  swift_release();
  swift_release();
  v37 = v60;
  swift_release();
  v65 = v35[6];
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  swift_bridgeObjectRetain();
  v38 = sub_1BB872904();
  v40 = v39;
  swift_bridgeObjectRelease();
  v65 = v38;
  v66 = v40;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v41 = v59;
  swift_retain();
  v42 = v62;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v65 = v63[12];
  LOBYTE(v66) = 0;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v65 = UIContentSizeCategory.description.getter();
  v66 = v43;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v61, v61[3]);
  v65 = sub_1BB86DEE8();
  v66 = v44;
  sub_1BB86F238();
  swift_release();
  v45 = v37;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v46 = v64;
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v47 = (uint64_t)v63;
  v48 = v63[9];
  v65 = v63[8];
  v66 = v48;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BB417AA8(v47);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  v50 = v58;
  *v58 = v45;
  v50[1] = v28;
  v50[2] = v29;
  v50[3] = v36;
  v50[4] = v41;
  v50[5] = (uint64_t)v42;
  v50[6] = (uint64_t)v46;
  v50[7] = v27;
  return result;
}

uint64_t sub_1BB416F5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449646E696BLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x644974756F79616CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7364496D657469 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB95BC00 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x644970756F7267 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BB417288@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v37 = a1;
  sub_1BA50CAF0(0, &qword_1ED39A6F0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8]);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - v4;
  v6 = MEMORY[0x1E0DEA968];
  v7 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - v12;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v6, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v16(v13, 1, 1, v14);
  v16(v10, 1, 1, v15);
  sub_1BA50CAA8(0, &qword_1ED39A708, v6, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v6, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v38 = sub_1BB86F058();
  v16(v13, 1, 1, v15);
  v16(v10, 1, 1, v15);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v36 = sub_1BB86F058();
  v16(v13, 1, 1, v15);
  v16(v10, 1, 1, v15);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v34 = sub_1BB86F058();
  v32 = v16;
  v16(v13, 1, 1, v15);
  v31 = v10;
  v16(v10, 1, 1, v15);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v33 = sub_1BB86F058();
  v17 = MEMORY[0x1E0DEB418];
  v18 = MEMORY[0x1E0DB2EE8];
  sub_1BA50CAA8(0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v21(v5, 1, 1, v19);
  v21(v35, 1, 1, v20);
  sub_1BA50CAA8(0, &qword_1ED39A720, v17, v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A688, v17, v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v22 = sub_1BB86F058();
  v23 = v32;
  v32(v13, 1, 1, v15);
  v24 = v31;
  v23(v31, 1, 1, v15);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v25 = sub_1BB86F058();
  v23(v13, 1, 1, v15);
  v23(v24, 1, 1, v15);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v26 = sub_1BB86F058();
  v23(v13, 1, 1, v15);
  v23(v24, 1, 1, v15);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  result = sub_1BB86F058();
  v28 = v37;
  v29 = v36;
  *v37 = v38;
  v28[1] = v29;
  v30 = v33;
  v28[2] = v34;
  v28[3] = v30;
  v28[4] = v22;
  v28[5] = v25;
  v28[6] = v26;
  v28[7] = result;
  return result;
}

unint64_t sub_1BB417948()
{
  unint64_t result;

  result = qword_1EF2C38B0;
  if (!qword_1EF2C38B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915C8C, &type metadata for FeedLayoutEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C38B0);
  }
  return result;
}

void sub_1BB41798C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB417948();
    v7 = a3(a1, &type metadata for FeedLayoutEntity.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB4179E8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA50CAA8(255, &qword_1ED39A670, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB417A48(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA50CAA8(255, &qword_1ED39A688, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB417AA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedLayoutCacheKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for FeedLayoutEntity.LayoutEntity()
{
  return &type metadata for FeedLayoutEntity.LayoutEntity;
}

uint64_t storeEnumTagSinglePayload for FeedLayoutEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB417B40 + 4 * byte_1BB91593D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB417B74 + 4 * byte_1BB915938[v4]))();
}

uint64_t sub_1BB417B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB417B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB417B84);
  return result;
}

uint64_t sub_1BB417B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB417B98);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB417B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB417BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedLayoutEntity.CodingKeys()
{
  return &type metadata for FeedLayoutEntity.CodingKeys;
}

unint64_t sub_1BB417BC4()
{
  unint64_t result;

  result = qword_1EF2C38C0;
  if (!qword_1EF2C38C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915BE4, &type metadata for FeedLayoutEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C38C0);
  }
  return result;
}

unint64_t sub_1BB417C0C()
{
  unint64_t result;

  result = qword_1EF2C38C8;
  if (!qword_1EF2C38C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915B54, &type metadata for FeedLayoutEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C38C8);
  }
  return result;
}

unint64_t sub_1BB417C54()
{
  unint64_t result;

  result = qword_1EF2C38D0;
  if (!qword_1EF2C38D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915B7C, &type metadata for FeedLayoutEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C38D0);
  }
  return result;
}

uint64_t FormatCustomItem.selectors.getter()
{
  type metadata accessor for FormatCustomItem();
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomItem.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomItem.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomItem.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatCustomItem();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))sub_1BA648404);
}

uint64_t FormatCustomItem.properties.getter()
{
  type metadata accessor for FormatCustomItem();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB417D70(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatCustomItem() + 32);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatCustomItem.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatCustomItem() + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatCustomItem.selectors.modify())()
{
  type metadata accessor for FormatCustomItem();
  return nullsub_1;
}

uint64_t sub_1BB417E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB418E4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB417E44()
{
  sub_1BA648680();
  return sub_1BB874710();
}

uint64_t sub_1BB417E6C()
{
  sub_1BA648680();
  return sub_1BB87471C();
}

uint64_t FormatCustomItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;

  v3 = v1;
  sub_1BA648420(0, &qword_1ED39C150, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA648680();
  sub_1BB8746C8();
  LOBYTE(v17) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_1BB87417C();
    v10 = type metadata accessor for FormatCustomItem();
    LOBYTE(v17) = 2;
    type metadata accessor for FormatCustomItem.Action();
    sub_1BA4A2870(&qword_1ED3A5940, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t)&protocol conformance descriptor for FormatCustomItem.Action);
    sub_1BB87414C();
    v17 = *(_QWORD *)(v3 + *(int *)(v10 + 28));
    LOBYTE(v15) = 3;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
    sub_1BA5DBB94((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v11 = *(_QWORD *)(v3 + *(int *)(v10 + 32));
    if (*(_QWORD *)(v11 + 16))
    {
      v16 = 4;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v15 = v12;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v15);
      swift_release();
      v17 = (uint64_t)v15;
      sub_1BB418610();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB418168(_QWORD *a1)
{
  return FormatCustomItem.encode(to:)(a1);
}

uint64_t _s8NewsFeed16FormatCustomItemV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_1BB86C67C();
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3A0E80, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v40 - v7;
  v8 = type metadata accessor for FormatCustomItem.Action();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3A29E8, sub_1BA648404);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v40 - v13;
  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v15);
  v47 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v40 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - v21;
  if (*a1 == *a2 && a1[1] == a2[1] || (v23 = 0, (sub_1BB874398() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v23 = 0, (sub_1BB874398() & 1) != 0))
    {
      v41 = v4;
      v24 = (int *)type metadata accessor for FormatCustomItem();
      sub_1BA4C2DD8((uint64_t)a1 + v24[6], (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA648404);
      sub_1BA4C2DD8((uint64_t)a2 + v24[6], (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA648404);
      v25 = (uint64_t)&v14[*(int *)(v12 + 48)];
      sub_1BA4C2DD8((uint64_t)v22, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA648404);
      sub_1BA4C2DD8((uint64_t)v19, v25, (uint64_t (*)(_QWORD))sub_1BA648404);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v26((uint64_t)v14, 1, v8) == 1)
      {
        sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA648404);
        sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA648404);
        if (v26(v25, 1, v8) == 1)
        {
          sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA648404);
LABEL_14:
          if ((sub_1BA8880B0(*(_QWORD *)((char *)a1 + v24[7]), *(_QWORD *)((char *)a2 + v24[7])) & 1) != 0)
          {
            v36 = v24[8];
            v37 = *(_QWORD *)((char *)a1 + v36);
            v38 = *(_QWORD *)((char *)a2 + v36);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v23 = sub_1BA6EB330(v37, v38);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v23 & 1;
          }
LABEL_16:
          v23 = 0;
          return v23 & 1;
        }
      }
      else
      {
        v27 = v47;
        sub_1BA4C2DD8((uint64_t)v14, v47, (uint64_t (*)(_QWORD))sub_1BA648404);
        if (v26(v25, 1, v8) != 1)
        {
          v28 = v46;
          sub_1BA5193C4(v25, v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
          v29 = v43;
          v30 = v43 + *(int *)(v42 + 48);
          sub_1BA4C2DD8(v27, v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
          sub_1BA4C2DD8(v28, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
          v31 = v44;
          v32 = v45;
          v33 = v29;
          v34 = v41;
          (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v44, v33, v41);
          LODWORD(v43) = MEMORY[0x1BCCDCEFC](v31, v30);
          v35 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
          v35(v30, v34);
          v35((uint64_t)v31, v34);
          sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
          sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA648404);
          sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA648404);
          sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
          sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA648404);
          if ((v43 & 1) == 0)
            goto LABEL_16;
          goto LABEL_14;
        }
        sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA648404);
        sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA648404);
        sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
      }
      sub_1BB41906C((uint64_t)v14);
      goto LABEL_16;
    }
  }
  return v23 & 1;
}

unint64_t sub_1BB418610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB668;
  if (!qword_1ED3AB668)
  {
    sub_1BA648420(255, &qword_1ED39C150, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB668);
  }
  return result;
}

uint64_t sub_1BB418668(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED39CC30, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem, (uint64_t)&protocol conformance descriptor for FormatCustomItem);
  a1[2] = sub_1BA4A2870(&qword_1ED39B330, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem, (uint64_t)&protocol conformance descriptor for FormatCustomItem);
  result = sub_1BA4A2870(&qword_1EF2C38D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem, (uint64_t)&protocol conformance descriptor for FormatCustomItem);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4186E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatCustomItem() + 32));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCustomItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for FormatCustomItem.Action();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BA648404(0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v11, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *assignWithCopy for FormatCustomItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FormatCustomItem.Action();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v17 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA648404(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatCustomItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatCustomItem.Action();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BA648404(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for FormatCustomItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FormatCustomItem.Action();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v19 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v9, v10, v19);
      goto LABEL_7;
    }
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1BA648404(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v16 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB418C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA648404(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BB418CC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA648404(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatCustomItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB418D84 + 4 * byte_1BB915CEA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB418DB8 + 4 * byte_1BB915CE5[v4]))();
}

uint64_t sub_1BB418DB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB418DC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB418DC8);
  return result;
}

uint64_t sub_1BB418DD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB418DDCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB418DE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB418DE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomItem.CodingKeys()
{
  return &type metadata for FormatCustomItem.CodingKeys;
}

unint64_t sub_1BB418E08()
{
  unint64_t result;

  result = qword_1EF2C38E0;
  if (!qword_1EF2C38E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915E9C, &type metadata for FormatCustomItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C38E0);
  }
  return result;
}

uint64_t sub_1BB418E4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BB41906C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3A29E8, sub_1BA648404);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB4190B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v43 = *a2;
    *(_QWORD *)a1 = *a2;
    v44 = v43 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a1 + 16;
    v9 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v9;
    v10 = v9;
    v11 = a1;
    v51 = a1;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v12(v8, (uint64_t)(a2 + 2), v10);
    v13 = *(int *)(a3 + 24);
    v50 = a3;
    v14 = v11 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_BYTE *)v14 = *((_BYTE *)a2 + v13);
    v16 = *(_OWORD *)((char *)a2 + v13 + 32);
    *(_OWORD *)(v14 + 32) = v16;
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(v11 + v13 + 8, (uint64_t)a2 + v13 + 8);
    v17 = *(_QWORD *)(v15 + 56);
    *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
    *(_QWORD *)(v14 + 56) = v17;
    v18 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + 64) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 72) = v18;
    *(_QWORD *)(v14 + 80) = *(_QWORD *)(v15 + 80);
    *(_BYTE *)(v14 + 88) = *(_BYTE *)(v15 + 88);
    *(_QWORD *)(v14 + 96) = *(_QWORD *)(v15 + 96);
    v19 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v20 = v19[13];
    v48 = v15 + v20;
    v49 = v14 + v20;
    v21 = sub_1BB86D8A0();
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v49, v48, v21);
    *(_QWORD *)(v14 + v19[14]) = *(_QWORD *)(v15 + v19[14]);
    *(_QWORD *)(v14 + v19[15]) = *(_QWORD *)(v15 + v19[15]);
    *(_BYTE *)(v14 + v19[16]) = *(_BYTE *)(v15 + v19[16]);
    *(_QWORD *)(v14 + v19[17]) = *(_QWORD *)(v15 + v19[17]);
    *(_QWORD *)(v14 + v19[18]) = *(_QWORD *)(v15 + v19[18]);
    *(_QWORD *)(v14 + v19[19]) = *(_QWORD *)(v15 + v19[19]);
    v22 = *(int *)(v50 + 28);
    v23 = v51 + v22;
    v24 = (uint64_t)a2 + v22;
    v25 = sub_1BB86D7A4();
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    v27 = (int *)type metadata accessor for GroupLayoutContext();
    v28 = v27[5];
    v29 = v23 + v28;
    v30 = v24 + v28;
    v31 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v27[6];
    v33 = v23 + v32;
    v34 = v24 + v32;
    *(_OWORD *)v33 = *(_OWORD *)(v24 + v32);
    *(_BYTE *)(v33 + 16) = *(_BYTE *)(v24 + v32 + 16);
    *(_WORD *)(v33 + 17) = *(_WORD *)(v24 + v32 + 17);
    *(_BYTE *)(v33 + 19) = *(_BYTE *)(v24 + v32 + 19);
    *(_DWORD *)(v33 + 20) = *(_DWORD *)(v24 + v32 + 20);
    v35 = *(_QWORD *)(v24 + v32 + 24);
    if (v35 >= 2)
      v35 = swift_bridgeObjectRetain();
    *(_QWORD *)(v33 + 24) = v35;
    v36 = type metadata accessor for FeedLayoutSolverOptions(0);
    v37 = *(int *)(v36 + 36);
    v38 = (void *)(v33 + v37);
    v39 = (const void *)(v34 + v37);
    v40 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      sub_1BA914C98();
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v45 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v38, v39, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    *(_QWORD *)(v33 + *(int *)(v36 + 40)) = *(_QWORD *)(v34 + *(int *)(v36 + 40));
    *(_QWORD *)(v23 + v27[7]) = *(_QWORD *)(v24 + v27[7]);
    *(_QWORD *)(v23 + v27[8]) = *(_QWORD *)(v24 + v27[8]);
    *(_BYTE *)(v23 + v27[9]) = *(_BYTE *)(v24 + v27[9]);
    *(_QWORD *)(v23 + v27[10]) = *(_QWORD *)(v24 + v27[10]);
    *(_BYTE *)(v23 + v27[11]) = *(_BYTE *)(v24 + v27[11]);
    *(_QWORD *)(v23 + v27[12]) = *(_QWORD *)(v24 + v27[12]);
    swift_retain();
    v44 = v51;
  }
  swift_retain();
  return v44;
}

uint64_t sub_1BB419450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = a1 + *(int *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v6 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = v7 + *(int *)(v9 + 20);
  v11 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v7 + *(int *)(v9 + 24);
  if (*(_QWORD *)(v12 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1BB4195E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_OWORD *)(a2 + v11 + 32);
  *(_OWORD *)(v12 + 32) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + v11 + 8, a2 + v11 + 8);
  v15 = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = v15;
  v16 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = v16;
  *(_QWORD *)(v12 + 80) = *(_QWORD *)(v13 + 80);
  *(_BYTE *)(v12 + 88) = *(_BYTE *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  v17 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v18 = v17[13];
  v44 = v13 + v18;
  v45 = v12 + v18;
  v19 = sub_1BB86D8A0();
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v45, v44, v19);
  *(_QWORD *)(v12 + v17[14]) = *(_QWORD *)(v13 + v17[14]);
  *(_QWORD *)(v12 + v17[15]) = *(_QWORD *)(v13 + v17[15]);
  *(_BYTE *)(v12 + v17[16]) = *(_BYTE *)(v13 + v17[16]);
  *(_QWORD *)(v12 + v17[17]) = *(_QWORD *)(v13 + v17[17]);
  *(_QWORD *)(v12 + v17[18]) = *(_QWORD *)(v13 + v17[18]);
  *(_QWORD *)(v12 + v17[19]) = *(_QWORD *)(v13 + v17[19]);
  v20 = *(int *)(a3 + 28);
  v47 = a1;
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1BB86D7A4();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  v25 = (int *)type metadata accessor for GroupLayoutContext();
  v26 = v25[5];
  v27 = v21 + v26;
  v28 = v22 + v26;
  v29 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v30 = v25[6];
  v31 = v21 + v30;
  v32 = v22 + v30;
  *(_OWORD *)v31 = *(_OWORD *)(v22 + v30);
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v22 + v30 + 16);
  *(_WORD *)(v31 + 17) = *(_WORD *)(v22 + v30 + 17);
  *(_BYTE *)(v31 + 19) = *(_BYTE *)(v22 + v30 + 19);
  *(_DWORD *)(v31 + 20) = *(_DWORD *)(v22 + v30 + 20);
  v33 = *(_QWORD *)(v22 + v30 + 24);
  if (v33 >= 2)
    v33 = swift_bridgeObjectRetain();
  *(_QWORD *)(v31 + 24) = v33;
  v34 = type metadata accessor for FeedLayoutSolverOptions(0);
  v35 = *(int *)(v34 + 36);
  v36 = (void *)(v31 + v35);
  v37 = (const void *)(v32 + v35);
  v38 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_1BA914C98();
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v41 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v36, v37, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  *(_QWORD *)(v31 + *(int *)(v34 + 40)) = *(_QWORD *)(v32 + *(int *)(v34 + 40));
  *(_QWORD *)(v21 + v25[7]) = *(_QWORD *)(v22 + v25[7]);
  *(_QWORD *)(v21 + v25[8]) = *(_QWORD *)(v22 + v25[8]);
  *(_BYTE *)(v21 + v25[9]) = *(_BYTE *)(v22 + v25[9]);
  *(_QWORD *)(v21 + v25[10]) = *(_QWORD *)(v22 + v25[10]);
  *(_BYTE *)(v21 + v25[11]) = *(_BYTE *)(v22 + v25[11]);
  *(_QWORD *)(v21 + v25[12]) = *(_QWORD *)(v22 + v25[12]);
  swift_retain();
  swift_retain();
  return v47;
}

_QWORD *sub_1BB419954(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  size_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v6 + 8), (_QWORD *)((char *)a2 + v6 + 8));
  *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[88] = v8[88];
  *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v10 = v9[13];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1BB86D8A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)&v7[v9[14]] = *(_QWORD *)&v8[v9[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[15]] = *(_QWORD *)&v8[v9[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[16]] = v8[v9[16]];
  *(_QWORD *)&v7[v9[17]] = *(_QWORD *)&v8[v9[17]];
  *(_QWORD *)&v7[v9[18]] = *(_QWORD *)&v8[v9[18]];
  *(_QWORD *)&v7[v9[19]] = *(_QWORD *)&v8[v9[19]];
  v14 = *(int *)(a3 + 28);
  v45 = a1;
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = (int *)type metadata accessor for GroupLayoutContext();
  v19 = v18[5];
  v20 = &v15[v19];
  v21 = &v16[v19];
  v22 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = v18[6];
  v24 = &v15[v23];
  v25 = &v16[v23];
  v26 = *(_OWORD *)&v16[v23];
  v24[16] = v16[v23 + 16];
  *(_OWORD *)v24 = v26;
  v24[17] = v16[v23 + 17];
  v24[18] = v16[v23 + 18];
  v24[19] = v16[v23 + 19];
  v24[20] = v16[v23 + 20];
  v24[21] = v16[v23 + 21];
  v24[22] = v16[v23 + 22];
  v24[23] = v16[v23 + 23];
  v27 = (unint64_t *)&v15[v23 + 24];
  v28 = *(_QWORD *)&v16[v23 + 24];
  if (*v27 >= 2)
  {
    if (v28 >= 2)
    {
      *v27 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v27 = *((_QWORD *)v25 + 3);
    }
  }
  else
  {
    *v27 = v28;
    if (v28 >= 2)
      swift_bridgeObjectRetain();
  }
  v44 = type metadata accessor for FeedLayoutSolverOptions(0);
  v29 = *(int *)(v44 + 36);
  v30 = (uint64_t)&v24[v29];
  v31 = &v25[v29];
  v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v43 = v30;
  LODWORD(v30) = v34(v30, 1, v32);
  v35 = v34((uint64_t)v31, 1, v32);
  if ((_DWORD)v30)
  {
    if (!v35)
    {
      v40 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v43, v31, v40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v43, 0, 1, v32);
      goto LABEL_16;
    }
    sub_1BA914C98();
    v37 = *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64);
    v38 = (void *)v43;
  }
  else
  {
    if (!v35)
    {
      v41 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v43, v31, v41);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v43, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v37 = *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64);
    v38 = (void *)v43;
  }
  memcpy(v38, v31, v37);
LABEL_16:
  *(_QWORD *)&v24[*(int *)(v44 + 40)] = *(_QWORD *)&v25[*(int *)(v44 + 40)];
  *(_QWORD *)&v15[v18[7]] = *(_QWORD *)&v16[v18[7]];
  *(_QWORD *)&v15[v18[8]] = *(_QWORD *)&v16[v18[8]];
  v15[v18[9]] = v16[v18[9]];
  *(_QWORD *)&v15[v18[10]] = *(_QWORD *)&v16[v18[10]];
  swift_retain();
  swift_release();
  v15[v18[11]] = v16[v18[11]];
  *(_QWORD *)&v15[v18[12]] = *(_QWORD *)&v16[v18[12]];
  swift_retain();
  swift_release();
  return v45;
}

uint64_t sub_1BB419DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *__dst;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(a2 + v7 + 40);
  v10 = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(a2 + v7 + 80);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(a2 + v7 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(a2 + v7 + 96);
  v11 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v12 = v11[13];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_QWORD *)(v8 + v11[14]) = *(_QWORD *)(v9 + v11[14]);
  *(_QWORD *)(v8 + v11[15]) = *(_QWORD *)(v9 + v11[15]);
  *(_BYTE *)(v8 + v11[16]) = *(_BYTE *)(v9 + v11[16]);
  *(_QWORD *)(v8 + v11[17]) = *(_QWORD *)(v9 + v11[17]);
  *(_QWORD *)(v8 + v11[18]) = *(_QWORD *)(v9 + v11[18]);
  *(_QWORD *)(v8 + v11[19]) = *(_QWORD *)(v9 + v11[19]);
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = (int *)type metadata accessor for GroupLayoutContext();
  v21 = v20[5];
  v22 = v17 + v21;
  v23 = v18 + v21;
  v24 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = v20[6];
  v26 = v17 + v25;
  v27 = v18 + v25;
  *(_OWORD *)v26 = *(_OWORD *)(v18 + v25);
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v18 + v25 + 16);
  *(_WORD *)(v26 + 17) = *(_WORD *)(v18 + v25 + 17);
  *(_BYTE *)(v26 + 19) = *(_BYTE *)(v18 + v25 + 19);
  *(_DWORD *)(v26 + 20) = *(_DWORD *)(v18 + v25 + 20);
  *(_QWORD *)(v26 + 24) = *(_QWORD *)(v18 + v25 + 24);
  v28 = type metadata accessor for FeedLayoutSolverOptions(0);
  v29 = *(int *)(v28 + 36);
  __dst = (void *)(v26 + v29);
  v30 = (const void *)(v27 + v29);
  v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    sub_1BA914C98();
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(__dst, v30, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(_QWORD *)(v26 + *(int *)(v28 + 40)) = *(_QWORD *)(v27 + *(int *)(v28 + 40));
  *(_QWORD *)(v17 + v20[7]) = *(_QWORD *)(v18 + v20[7]);
  *(_QWORD *)(v17 + v20[8]) = *(_QWORD *)(v18 + v20[8]);
  *(_BYTE *)(v17 + v20[9]) = *(_BYTE *)(v18 + v20[9]);
  *(_QWORD *)(v17 + v20[10]) = *(_QWORD *)(v18 + v20[10]);
  *(_BYTE *)(v17 + v20[11]) = *(_BYTE *)(v18 + v20[11]);
  *(_QWORD *)(v17 + v20[12]) = *(_QWORD *)(v18 + v20[12]);
  return a1;
}

uint64_t sub_1BB41A098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  __swift_destroy_boxed_opaque_existential_1(a1 + v8 + 8);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  v11 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 80) = *(_QWORD *)(v10 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 88) = *(_BYTE *)(v10 + 88);
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(v10 + 96);
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v13 = v12[13];
  v14 = v9 + v13;
  v15 = v10 + v13;
  v16 = sub_1BB86D8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  *(_QWORD *)(v9 + v12[14]) = *(_QWORD *)(v10 + v12[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + v12[15]) = *(_QWORD *)(v10 + v12[15]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v12[16]) = *(_BYTE *)(v10 + v12[16]);
  *(_QWORD *)(v9 + v12[17]) = *(_QWORD *)(v10 + v12[17]);
  *(_QWORD *)(v9 + v12[18]) = *(_QWORD *)(v10 + v12[18]);
  *(_QWORD *)(v9 + v12[19]) = *(_QWORD *)(v10 + v12[19]);
  v17 = *(int *)(a3 + 28);
  v47 = a1;
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = (int *)type metadata accessor for GroupLayoutContext();
  v22 = v21[5];
  v23 = v18 + v22;
  v24 = v19 + v22;
  v25 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  v26 = v21[6];
  v27 = v18 + v26;
  v28 = v19 + v26;
  *(_OWORD *)v27 = *(_OWORD *)(v19 + v26);
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v19 + v26 + 16);
  *(_BYTE *)(v27 + 17) = *(_BYTE *)(v19 + v26 + 17);
  *(_BYTE *)(v27 + 18) = *(_BYTE *)(v19 + v26 + 18);
  *(_BYTE *)(v27 + 19) = *(_BYTE *)(v19 + v26 + 19);
  *(_BYTE *)(v27 + 20) = *(_BYTE *)(v19 + v26 + 20);
  *(_BYTE *)(v27 + 21) = *(_BYTE *)(v19 + v26 + 21);
  *(_BYTE *)(v27 + 22) = *(_BYTE *)(v19 + v26 + 22);
  *(_BYTE *)(v27 + 23) = *(_BYTE *)(v19 + v26 + 23);
  v29 = (unint64_t *)(v18 + v26 + 24);
  v30 = *(_QWORD *)(v19 + v26 + 24);
  if (*v29 < 2)
    goto LABEL_4;
  if (v30 < 2)
  {
    sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v30 = *(_QWORD *)(v28 + 24);
LABEL_4:
    *v29 = v30;
    goto LABEL_6;
  }
  *v29 = v30;
  swift_bridgeObjectRelease();
LABEL_6:
  v46 = type metadata accessor for FeedLayoutSolverOptions(0);
  v31 = *(int *)(v46 + 36);
  v32 = v27 + v31;
  v33 = (const void *)(v28 + v31);
  v34 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  v45 = v32;
  LODWORD(v32) = v36(v32, 1, v34);
  v37 = v36((uint64_t)v33, 1, v34);
  if ((_DWORD)v32)
  {
    if (!v37)
    {
      v42 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v45, v33, v42);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v45, 0, 1, v34);
      goto LABEL_14;
    }
    sub_1BA914C98();
    v39 = *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64);
    v40 = (void *)v45;
  }
  else
  {
    if (!v37)
    {
      v43 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v45, v33, v43);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v45, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v39 = *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64);
    v40 = (void *)v45;
  }
  memcpy(v40, v33, v39);
LABEL_14:
  *(_QWORD *)(v27 + *(int *)(v46 + 40)) = *(_QWORD *)(v28 + *(int *)(v46 + 40));
  *(_QWORD *)(v18 + v21[7]) = *(_QWORD *)(v19 + v21[7]);
  *(_QWORD *)(v18 + v21[8]) = *(_QWORD *)(v19 + v21[8]);
  *(_BYTE *)(v18 + v21[9]) = *(_BYTE *)(v19 + v21[9]);
  *(_QWORD *)(v18 + v21[10]) = *(_QWORD *)(v19 + v21[10]);
  swift_release();
  *(_BYTE *)(v18 + v21[11]) = *(_BYTE *)(v19 + v21[11]);
  *(_QWORD *)(v18 + v21[12]) = *(_QWORD *)(v19 + v21[12]);
  swift_release();
  return v47;
}

uint64_t sub_1BB41A4A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB41A4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutBindingContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for GroupLayoutContext();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB41A54C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB41A558(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutBindingContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for GroupLayoutContext();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DebugGroupLayoutKey()
{
  uint64_t result;

  result = qword_1ED3B0000;
  if (!qword_1ED3B0000)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB41A630()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GroupLayoutContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BB41A6C8(uint64_t *a1, uint64_t *a2)
{
  int v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v6 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      v8 = type metadata accessor for GenericDataVisualization();
      v9 = *(int *)(v8 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BB86C67C();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB41A7E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
  v3 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BB41A87C(_QWORD *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  type metadata accessor for WebEmbedDataVisualization();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = type metadata accessor for GenericDataVisualization();
    v8 = *(int *)(v7 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = v5;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB41A964(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    type metadata accessor for WebEmbedDataVisualization();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      v5 = type metadata accessor for GenericDataVisualization();
      v6 = *(int *)(v5 + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BB86C67C();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BB41AA68(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v5 = type metadata accessor for GenericDataVisualization();
    v6 = *(int *)(v5 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    *(_QWORD *)((char *)a1 + *(int *)(v5 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1BB41AB30(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v4 = type metadata accessor for WebEmbedDataVisualization();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v5 = type metadata accessor for GenericDataVisualization();
      v6 = *(int *)(v5 + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB41AC10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB41AC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedDataVisualization();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB41AC58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB41AC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedDataVisualization();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WebEmbedDatastoreCacheKey()
{
  uint64_t result;

  result = qword_1ED3D2458;
  if (!qword_1ED3D2458)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB41ACE0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WebEmbedDataVisualization();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB41AD48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  int64_t v49;
  int v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  int64_t v73;
  char v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  int64_t v90;
  char v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int64_t v109;
  int64_t v110;
  char v111;
  uint64_t v112;
  int64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  int64_t v129;
  char v130;
  uint64_t v131;
  int64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int64_t v148;
  int64_t v149;
  char v150;
  uint64_t v151;
  int64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int64_t v169;
  int64_t v170;
  char v171;
  uint64_t v172;
  int64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int64_t v190;
  int64_t v191;
  char v192;
  uint64_t v193;
  int64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(uint64_t);
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int64_t v211;
  int64_t v212;
  char v213;
  uint64_t v214;
  int64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void (*v227)(uint64_t);
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int64_t v232;
  int64_t v233;
  char v234;
  uint64_t v235;
  int64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(uint64_t);
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int64_t v253;
  int64_t v254;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v262;
  uint64_t v263;
  int64_t v264;
  uint64_t v265;
  uint64_t v266;
  void (*v267)(uint64_t);
  uint64_t v268;
  uint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t result;
  _QWORD v276[11];
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  unint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;

  v307 = type metadata accessor for WebEmbedDataVisualization();
  v3 = *(_QWORD *)(v307 - 8);
  MEMORY[0x1E0C80A78](v307);
  v309 = (_QWORD *)((char *)v276 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  WebEmbedDataVisualization.identifier.getter();
  v313 = a1;
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v306 = sub_1BB47BEC4();
  v308 = v1;
  v5 = sub_1BB47B828();
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
    goto LABEL_255;
  }
  v327 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = v5 + v327;
  v8 = *(_QWORD *)(v3 + 72);
  v276[8] = v5;
  swift_bridgeObjectRetain();
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  v332 = v8;
  v288 = v6;
  v287 = v7;
  while (1)
  {
    v304 = v9;
    v305 = sub_1BB47BEC4();
    v11 = sub_1BB47B828();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
      break;
    swift_bridgeObjectRelease();
    v266 = MEMORY[0x1E0DEE9D8];
LABEL_234:
    v334 = v266;
    v248 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v249 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v248, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v248, MEMORY[0x1E0CB0018]);
    v250 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v305;
    sub_1BB3839F8(v250);
    v251 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v252 = *(_QWORD *)(v251 + 16);
    v253 = *(_QWORD *)(v10 + 16);
    v254 = v253 + v252;
    if (__OFADD__(v253, v252))
      goto LABEL_277;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v254 <= *(_QWORD *)(v10 + 24) >> 1)
    {
      if (!*(_QWORD *)(v251 + 16))
        goto LABEL_251;
    }
    else
    {
      if (v253 <= v254)
        v264 = v253 + v252;
      else
        v264 = v253;
      v10 = sub_1BA6C2E20(isUniquelyReferenced_nonNull_native, v264, 1, v10);
      if (!*(_QWORD *)(v251 + 16))
      {
LABEL_251:
        if (v252)
          goto LABEL_279;
        goto LABEL_252;
      }
    }
    v256 = *(_QWORD *)(v10 + 16);
    if ((*(_QWORD *)(v10 + 24) >> 1) - v256 < v252)
      goto LABEL_292;
    v257 = *(_QWORD *)(v249 - 8);
    v258 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
    v259 = *(_QWORD *)(v257 + 72);
    v260 = v10 + v258 + v259 * v256;
    if (v251 + v258 < v260 + v259 * v252 && v260 < v251 + v258 + v259 * v252)
      goto LABEL_306;
    swift_arrayInitWithCopy();
    if (v252)
    {
      v262 = *(_QWORD *)(v10 + 16);
      v65 = __OFADD__(v262, v252);
      v263 = v262 + v252;
      if (v65)
        goto LABEL_300;
      *(_QWORD *)(v10 + 16) = v263;
    }
LABEL_252:
    v265 = v304 + 1;
    swift_bridgeObjectRelease();
    v9 = v265;
    if (v265 == v288)
      goto LABEL_265;
  }
  v13 = v11 + v327;
  v276[7] = v11;
  swift_bridgeObjectRetain();
  v14 = 0;
  v320 = MEMORY[0x1E0DEE9D8];
  v286 = v12;
  v285 = v13;
  while (1)
  {
    v302 = v14;
    v303 = sub_1BB47BEC4();
    v15 = sub_1BB47B828();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
      break;
    swift_bridgeObjectRelease();
    v247 = MEMORY[0x1E0DEE9D8];
LABEL_213:
    v334 = v247;
    v227 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v228 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v227, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v227, MEMORY[0x1E0CB0018]);
    v229 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v303;
    sub_1BB3839F8(v229);
    v230 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v231 = *(_QWORD *)(v230 + 16);
    v232 = *(_QWORD *)(v320 + 16);
    v233 = v232 + v231;
    if (__OFADD__(v232, v231))
      goto LABEL_280;
    v234 = swift_isUniquelyReferenced_nonNull_native();
    v235 = v320;
    if ((v234 & 1) == 0 || v233 > *(_QWORD *)(v320 + 24) >> 1)
    {
      if (v232 <= v233)
        v236 = v232 + v231;
      else
        v236 = v232;
      v235 = sub_1BA6C2E20(v234, v236, 1, v320);
    }
    v237 = *(_QWORD *)(v230 + 16);
    v320 = v235;
    if (v237)
    {
      v238 = *(_QWORD *)(v235 + 16);
      if ((*(_QWORD *)(v235 + 24) >> 1) - v238 < v231)
        goto LABEL_293;
      v239 = *(_QWORD *)(v228 - 8);
      v240 = (*(unsigned __int8 *)(v239 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v239 + 80);
      v241 = *(_QWORD *)(v239 + 72);
      v242 = v235 + v240 + v241 * v238;
      if (v230 + v240 < v242 + v241 * v231 && v242 < v230 + v240 + v241 * v231)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v231)
      {
        v244 = *(_QWORD *)(v320 + 16);
        v65 = __OFADD__(v244, v231);
        v245 = v244 + v231;
        if (v65)
          goto LABEL_301;
        *(_QWORD *)(v320 + 16) = v245;
      }
    }
    else if (v231)
    {
      goto LABEL_281;
    }
    v246 = v302 + 1;
    swift_bridgeObjectRelease();
    v14 = v246;
    if (v246 == v286)
    {
      swift_bridgeObjectRelease_n();
      v266 = v320;
      goto LABEL_234;
    }
  }
  v17 = v15 + v327;
  v276[6] = v15;
  swift_bridgeObjectRetain();
  v18 = 0;
  v318 = MEMORY[0x1E0DEE9D8];
  v284 = v16;
  v283 = v17;
  while (1)
  {
    v299 = v18;
    v301 = sub_1BB47BEC4();
    v19 = sub_1BB47B828();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
      break;
    swift_bridgeObjectRelease();
    v226 = MEMORY[0x1E0DEE9D8];
LABEL_192:
    v334 = v226;
    v206 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v207 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v206, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v206, MEMORY[0x1E0CB0018]);
    v208 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v301;
    sub_1BB3839F8(v208);
    v209 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v210 = *(_QWORD *)(v209 + 16);
    v211 = *(_QWORD *)(v318 + 16);
    v212 = v211 + v210;
    if (__OFADD__(v211, v210))
      goto LABEL_282;
    v213 = swift_isUniquelyReferenced_nonNull_native();
    v214 = v318;
    if ((v213 & 1) == 0 || v212 > *(_QWORD *)(v318 + 24) >> 1)
    {
      if (v211 <= v212)
        v215 = v211 + v210;
      else
        v215 = v211;
      v214 = sub_1BA6C2E20(v213, v215, 1, v318);
    }
    v216 = *(_QWORD *)(v209 + 16);
    v318 = v214;
    if (v216)
    {
      v217 = *(_QWORD *)(v214 + 16);
      if ((*(_QWORD *)(v214 + 24) >> 1) - v217 < v210)
        goto LABEL_294;
      v218 = *(_QWORD *)(v207 - 8);
      v219 = (*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80);
      v220 = *(_QWORD *)(v218 + 72);
      v221 = v214 + v219 + v220 * v217;
      if (v209 + v219 < v221 + v220 * v210 && v221 < v209 + v219 + v220 * v210)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v210)
      {
        v223 = *(_QWORD *)(v318 + 16);
        v65 = __OFADD__(v223, v210);
        v224 = v223 + v210;
        if (v65)
          goto LABEL_302;
        *(_QWORD *)(v318 + 16) = v224;
      }
    }
    else if (v210)
    {
      goto LABEL_283;
    }
    v225 = v299 + 1;
    swift_bridgeObjectRelease();
    v18 = v225;
    if (v225 == v284)
    {
      swift_bridgeObjectRelease_n();
      v247 = v318;
      goto LABEL_213;
    }
  }
  v21 = v19 + v327;
  v276[4] = v19;
  swift_bridgeObjectRetain();
  v22 = 0;
  v317 = MEMORY[0x1E0DEE9D8];
  v282 = v20;
  v281 = v21;
  while (1)
  {
    v296 = v22;
    v297 = sub_1BB47BEC4();
    v23 = sub_1BB47B828();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
      break;
    swift_bridgeObjectRelease();
    v205 = MEMORY[0x1E0DEE9D8];
LABEL_171:
    v334 = v205;
    v185 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v186 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v185, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v185, MEMORY[0x1E0CB0018]);
    v187 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v297;
    sub_1BB3839F8(v187);
    v188 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v189 = *(_QWORD *)(v188 + 16);
    v190 = *(_QWORD *)(v317 + 16);
    v191 = v190 + v189;
    if (__OFADD__(v190, v189))
      goto LABEL_284;
    v192 = swift_isUniquelyReferenced_nonNull_native();
    v193 = v317;
    if ((v192 & 1) == 0 || v191 > *(_QWORD *)(v317 + 24) >> 1)
    {
      if (v190 <= v191)
        v194 = v190 + v189;
      else
        v194 = v190;
      v193 = sub_1BA6C2E20(v192, v194, 1, v317);
    }
    v195 = *(_QWORD *)(v188 + 16);
    v317 = v193;
    if (v195)
    {
      v196 = *(_QWORD *)(v193 + 16);
      if ((*(_QWORD *)(v193 + 24) >> 1) - v196 < v189)
        goto LABEL_295;
      v197 = *(_QWORD *)(v186 - 8);
      v198 = (*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80);
      v199 = *(_QWORD *)(v197 + 72);
      v200 = v193 + v198 + v199 * v196;
      if (v188 + v198 < v200 + v199 * v189 && v200 < v188 + v198 + v199 * v189)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v189)
      {
        v202 = *(_QWORD *)(v317 + 16);
        v65 = __OFADD__(v202, v189);
        v203 = v202 + v189;
        if (v65)
          goto LABEL_303;
        *(_QWORD *)(v317 + 16) = v203;
      }
    }
    else if (v189)
    {
      goto LABEL_285;
    }
    v204 = v296 + 1;
    swift_bridgeObjectRelease();
    v22 = v204;
    if (v204 == v282)
    {
      swift_bridgeObjectRelease_n();
      v226 = v317;
      goto LABEL_192;
    }
  }
  v25 = v23 + v327;
  v276[3] = v23;
  swift_bridgeObjectRetain();
  v26 = 0;
  v316 = MEMORY[0x1E0DEE9D8];
  v279 = v24;
  v278 = v25;
  while (1)
  {
    v293 = v26;
    v294 = sub_1BB47BEC4();
    v27 = sub_1BB47B828();
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
      break;
    swift_bridgeObjectRelease();
    v184 = MEMORY[0x1E0DEE9D8];
LABEL_150:
    v334 = v184;
    v164 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v165 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v164, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v164, MEMORY[0x1E0CB0018]);
    v166 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v294;
    sub_1BB3839F8(v166);
    v167 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v168 = *(_QWORD *)(v167 + 16);
    v169 = *(_QWORD *)(v316 + 16);
    v170 = v169 + v168;
    if (__OFADD__(v169, v168))
      goto LABEL_286;
    v171 = swift_isUniquelyReferenced_nonNull_native();
    v172 = v316;
    if ((v171 & 1) == 0 || v170 > *(_QWORD *)(v316 + 24) >> 1)
    {
      if (v169 <= v170)
        v173 = v169 + v168;
      else
        v173 = v169;
      v172 = sub_1BA6C2E20(v171, v173, 1, v316);
    }
    v174 = *(_QWORD *)(v167 + 16);
    v316 = v172;
    if (v174)
    {
      v175 = *(_QWORD *)(v172 + 16);
      if ((*(_QWORD *)(v172 + 24) >> 1) - v175 < v168)
        goto LABEL_296;
      v176 = *(_QWORD *)(v165 - 8);
      v177 = (*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80);
      v178 = *(_QWORD *)(v176 + 72);
      v179 = v172 + v177 + v178 * v175;
      if (v167 + v177 < v179 + v178 * v168 && v179 < v167 + v177 + v178 * v168)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v168)
      {
        v181 = *(_QWORD *)(v316 + 16);
        v65 = __OFADD__(v181, v168);
        v182 = v181 + v168;
        if (v65)
          goto LABEL_304;
        *(_QWORD *)(v316 + 16) = v182;
      }
    }
    else if (v168)
    {
      goto LABEL_288;
    }
    v183 = v293 + 1;
    swift_bridgeObjectRelease();
    v26 = v183;
    if (v183 == v279)
    {
      swift_bridgeObjectRelease_n();
      v205 = v316;
      goto LABEL_171;
    }
  }
  v29 = v27 + v327;
  v276[2] = v27;
  swift_bridgeObjectRetain();
  v30 = 0;
  v315 = MEMORY[0x1E0DEE9D8];
  v277 = v28;
  v276[10] = v29;
  while (1)
  {
    v291 = v30;
    v292 = sub_1BB47BEC4();
    v31 = sub_1BB47B828();
    v295 = *(_QWORD *)(v31 + 16);
    if (v295)
      break;
    swift_bridgeObjectRelease();
    v163 = MEMORY[0x1E0DEE9D8];
LABEL_129:
    v334 = v163;
    v143 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v144 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v143, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v143, MEMORY[0x1E0CB0018]);
    v145 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v292;
    sub_1BB3839F8(v145);
    v146 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v147 = *(_QWORD *)(v146 + 16);
    v148 = *(_QWORD *)(v315 + 16);
    v149 = v148 + v147;
    if (__OFADD__(v148, v147))
      goto LABEL_287;
    v150 = swift_isUniquelyReferenced_nonNull_native();
    v151 = v315;
    if ((v150 & 1) == 0 || v149 > *(_QWORD *)(v315 + 24) >> 1)
    {
      if (v148 <= v149)
        v152 = v148 + v147;
      else
        v152 = v148;
      v151 = sub_1BA6C2E20(v150, v152, 1, v315);
    }
    v153 = *(_QWORD *)(v146 + 16);
    v315 = v151;
    if (v153)
    {
      v154 = *(_QWORD *)(v151 + 16);
      if ((*(_QWORD *)(v151 + 24) >> 1) - v154 < v147)
        goto LABEL_297;
      v155 = *(_QWORD *)(v144 - 8);
      v156 = (*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
      v157 = *(_QWORD *)(v155 + 72);
      v158 = v151 + v156 + v157 * v154;
      if (v146 + v156 < v158 + v157 * v147 && v158 < v146 + v156 + v157 * v147)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v147)
      {
        v160 = *(_QWORD *)(v315 + 16);
        v65 = __OFADD__(v160, v147);
        v161 = v160 + v147;
        if (v65)
          goto LABEL_305;
        *(_QWORD *)(v315 + 16) = v161;
      }
    }
    else if (v147)
    {
      goto LABEL_289;
    }
    v162 = v291 + 1;
    swift_bridgeObjectRelease();
    v30 = v162;
    if (v162 == v277)
    {
      swift_bridgeObjectRelease_n();
      v184 = v315;
      goto LABEL_150;
    }
  }
  v32 = v31 + v327;
  v276[1] = v31;
  swift_bridgeObjectRetain();
  v33 = 0;
  v319 = MEMORY[0x1E0DEE9D8];
  v289 = v10;
  v280 = v32;
  while (1)
  {
    v298 = v33;
    v300 = sub_1BB47BEC4();
    v34 = sub_1BB47B828();
    v310 = *(_QWORD *)(v34 + 16);
    if (v310)
      break;
    swift_bridgeObjectRelease();
    v142 = MEMORY[0x1E0DEE9D8];
LABEL_108:
    v334 = v142;
    v123 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v124 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v123, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v123, MEMORY[0x1E0CB0018]);
    v125 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v300;
    sub_1BB3839F8(v125);
    v126 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v127 = *(_QWORD *)(v126 + 16);
    v128 = *(_QWORD *)(v319 + 16);
    v129 = v128 + v127;
    if (__OFADD__(v128, v127))
      goto LABEL_276;
    v130 = swift_isUniquelyReferenced_nonNull_native();
    v131 = v319;
    if ((v130 & 1) == 0 || v129 > *(_QWORD *)(v319 + 24) >> 1)
    {
      if (v128 <= v129)
        v132 = v128 + v127;
      else
        v132 = v128;
      v131 = sub_1BA6C2E20(v130, v132, 1, v319);
    }
    v133 = *(_QWORD *)(v126 + 16);
    v319 = v131;
    if (v133)
    {
      v134 = *(_QWORD *)(v131 + 16);
      if ((*(_QWORD *)(v131 + 24) >> 1) - v134 < v127)
        goto LABEL_291;
      v135 = *(_QWORD *)(v124 - 8);
      v136 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
      v137 = *(_QWORD *)(v135 + 72);
      v138 = v131 + v136 + v137 * v134;
      if (v126 + v136 < v138 + v137 * v127 && v138 < v126 + v136 + v137 * v127)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v127)
      {
        v140 = *(_QWORD *)(v319 + 16);
        v65 = __OFADD__(v140, v127);
        v141 = v140 + v127;
        if (v65)
          goto LABEL_299;
        *(_QWORD *)(v319 + 16) = v141;
      }
    }
    else if (v127)
    {
      goto LABEL_278;
    }
    v33 = v298 + 1;
    swift_bridgeObjectRelease();
    if (v33 == v295)
    {
      swift_bridgeObjectRelease_n();
      v163 = v319;
      goto LABEL_129;
    }
  }
  v35 = v34 + v327;
  v276[5] = v34;
  swift_bridgeObjectRetain();
  v36 = 0;
  v321 = MEMORY[0x1E0DEE9D8];
  v290 = v35;
  while (1)
  {
    v311 = v36;
    v312 = sub_1BB47BEC4();
    v37 = sub_1BB47B828();
    v322 = *(_QWORD *)(v37 + 16);
    if (v322)
      break;
    swift_bridgeObjectRelease();
    v103 = MEMORY[0x1E0DEE9D8];
LABEL_86:
    v334 = v103;
    v104 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v105 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v104, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v104, MEMORY[0x1E0CB0018]);
    v106 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v312;
    sub_1BB3839F8(v106);
    v107 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v108 = *(_QWORD *)(v107 + 16);
    v109 = *(_QWORD *)(v321 + 16);
    v110 = v109 + v108;
    if (__OFADD__(v109, v108))
      goto LABEL_274;
    v111 = swift_isUniquelyReferenced_nonNull_native();
    v112 = v321;
    if ((v111 & 1) == 0 || v110 > *(_QWORD *)(v321 + 24) >> 1)
    {
      if (v109 <= v110)
        v113 = v109 + v108;
      else
        v113 = v109;
      v112 = sub_1BA6C2E20(v111, v113, 1, v321);
    }
    v10 = v289;
    v114 = *(_QWORD *)(v107 + 16);
    v321 = v112;
    if (v114)
    {
      v115 = *(_QWORD *)(v112 + 16);
      if ((*(_QWORD *)(v112 + 24) >> 1) - v115 < v108)
        goto LABEL_290;
      v116 = *(_QWORD *)(v105 - 8);
      v117 = (*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
      v118 = *(_QWORD *)(v116 + 72);
      v119 = v112 + v117 + v118 * v115;
      if (v107 + v117 < v119 + v118 * v108 && v119 < v107 + v117 + v118 * v108)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v108)
      {
        v121 = *(_QWORD *)(v321 + 16);
        v65 = __OFADD__(v121, v108);
        v122 = v121 + v108;
        if (v65)
          goto LABEL_298;
        *(_QWORD *)(v321 + 16) = v122;
      }
    }
    else if (v108)
    {
      goto LABEL_275;
    }
    v36 = v311 + 1;
    swift_bridgeObjectRelease();
    if (v36 == v310)
    {
      swift_bridgeObjectRelease_n();
      v142 = v321;
      goto LABEL_108;
    }
  }
  v323 = v37 + v327;
  v276[9] = v37;
  swift_bridgeObjectRetain();
  v38 = 0;
  v326 = MEMORY[0x1E0DEE9D8];
LABEL_21:
  v324 = v38;
  v325 = sub_1BB47BEC4();
  v40 = sub_1BB47B828();
  v329 = *(_QWORD *)(v40 + 16);
  if (!v329)
  {
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
    goto LABEL_68;
  }
  v328 = v40 + v327;
  v314 = v40;
  swift_bridgeObjectRetain();
  v10 = 0;
  v41 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v331 = v41;
    v330 = sub_1BB47BEC4();
    v42 = sub_1BB47B828();
    v43 = *(_QWORD *)(v42 + 16);
    if (v43)
      break;
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
LABEL_49:
    v334 = v45;
    v67 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v68 = sub_1BB86C67C();
    sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v67, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v67, MEMORY[0x1E0CB0018]);
    v69 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v334 = v330;
    sub_1BB3839F8(v69);
    v70 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v71 = *(_QWORD *)(v70 + 16);
    v41 = v331;
    v72 = *(_QWORD *)(v331 + 16);
    v73 = v72 + v71;
    if (__OFADD__(v72, v71))
    {
      __break(1u);
LABEL_267:
      __break(1u);
LABEL_268:
      __break(1u);
LABEL_269:
      __break(1u);
LABEL_270:
      __break(1u);
LABEL_271:
      __break(1u);
LABEL_272:
      __break(1u);
      goto LABEL_273;
    }
    v74 = swift_isUniquelyReferenced_nonNull_native();
    if ((v74 & 1) == 0 || v73 > *(_QWORD *)(v41 + 24) >> 1)
    {
      if (v72 <= v73)
        v75 = v72 + v71;
      else
        v75 = v72;
      v41 = sub_1BA6C2E20(v74, v75, 1, v41);
    }
    if (*(_QWORD *)(v70 + 16))
    {
      v76 = *(_QWORD *)(v41 + 16);
      if ((*(_QWORD *)(v41 + 24) >> 1) - v76 < v71)
        goto LABEL_268;
      v77 = *(_QWORD *)(v68 - 8);
      v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      v79 = *(_QWORD *)(v77 + 72);
      v80 = v41 + v78 + v79 * v76;
      if (v70 + v78 < v80 + v79 * v71 && v80 < v70 + v78 + v79 * v71)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v71)
      {
        v82 = *(_QWORD *)(v41 + 16);
        v65 = __OFADD__(v82, v71);
        v83 = v82 + v71;
        if (v65)
          goto LABEL_269;
        *(_QWORD *)(v41 + 16) = v83;
      }
    }
    else if (v71)
    {
      goto LABEL_267;
    }
    ++v10;
    swift_bridgeObjectRelease();
    if (v10 == v329)
    {
      swift_bridgeObjectRelease_n();
LABEL_68:
      v334 = v41;
      v84 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v85 = sub_1BB86C67C();
      sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v84, MEMORY[0x1E0DEAF38]);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v84, MEMORY[0x1E0CB0018]);
      v86 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v334 = v325;
      sub_1BB3839F8(v86);
      v87 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v88 = *(_QWORD *)(v87 + 16);
      v89 = *(_QWORD *)(v326 + 16);
      v90 = v89 + v88;
      if (__OFADD__(v89, v88))
        goto LABEL_270;
      v91 = swift_isUniquelyReferenced_nonNull_native();
      v92 = v326;
      if ((v91 & 1) == 0 || v90 > *(_QWORD *)(v326 + 24) >> 1)
      {
        if (v89 <= v90)
          v93 = v89 + v88;
        else
          v93 = v89;
        v92 = sub_1BA6C2E20(v91, v93, 1, v326);
      }
      v94 = *(_QWORD *)(v87 + 16);
      v326 = v92;
      if (!v94)
      {
        v39 = v324;
        if (!v88)
          goto LABEL_20;
        goto LABEL_271;
      }
      v95 = *(_QWORD *)(v92 + 16);
      if ((*(_QWORD *)(v92 + 24) >> 1) - v95 < v88)
        goto LABEL_272;
      v96 = *(_QWORD *)(v85 - 8);
      v97 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      v98 = *(_QWORD *)(v96 + 72);
      v99 = v92 + v97 + v98 * v95;
      if (v87 + v97 < v99 + v98 * v88 && v99 < v87 + v97 + v98 * v88)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      v39 = v324;
      if (v88)
      {
        v101 = *(_QWORD *)(v326 + 16);
        v65 = __OFADD__(v101, v88);
        v102 = v101 + v88;
        if (!v65)
        {
          *(_QWORD *)(v326 + 16) = v102;
          goto LABEL_20;
        }
LABEL_273:
        __break(1u);
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        __break(1u);
LABEL_280:
        __break(1u);
LABEL_281:
        __break(1u);
LABEL_282:
        __break(1u);
LABEL_283:
        __break(1u);
LABEL_284:
        __break(1u);
LABEL_285:
        __break(1u);
LABEL_286:
        __break(1u);
LABEL_287:
        __break(1u);
LABEL_288:
        __break(1u);
LABEL_289:
        __break(1u);
LABEL_290:
        __break(1u);
LABEL_291:
        __break(1u);
LABEL_292:
        __break(1u);
LABEL_293:
        __break(1u);
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        __break(1u);
LABEL_302:
        __break(1u);
LABEL_303:
        __break(1u);
LABEL_304:
        __break(1u);
LABEL_305:
        __break(1u);
LABEL_306:
        result = sub_1BB873F84();
        __break(1u);
        return result;
      }
LABEL_20:
      v38 = v39 + 1;
      swift_bridgeObjectRelease();
      if (v38 == v322)
      {
        swift_bridgeObjectRelease_n();
        v103 = v326;
        goto LABEL_86;
      }
      goto LABEL_21;
    }
  }
  v44 = v42 + v327;
  swift_bridgeObjectRetain();
  v45 = MEMORY[0x1E0DEE9D8];
  while (2)
  {
    sub_1BB47C23C(&v334);
    v46 = v334;
    v47 = *(_QWORD *)(v334 + 16);
    v48 = *(_QWORD *)(v45 + 16);
    v49 = v48 + v47;
    if (!__OFADD__(v48, v47))
    {
      v50 = swift_isUniquelyReferenced_nonNull_native();
      if (v50 && v49 <= *(_QWORD *)(v45 + 24) >> 1)
      {
        if (!*(_QWORD *)(v46 + 16))
        {
LABEL_27:
          if (v47)
            goto LABEL_262;
          goto LABEL_28;
        }
      }
      else
      {
        if (v48 <= v49)
          v51 = v48 + v47;
        else
          v51 = v48;
        v45 = sub_1BA6C2E20(v50, v51, 1, v45);
        if (!*(_QWORD *)(v46 + 16))
          goto LABEL_27;
      }
      v52 = *(_QWORD *)(v45 + 16);
      v53 = (*(_QWORD *)(v45 + 24) >> 1) - v52;
      v54 = sub_1BB86C67C();
      if (v53 < v47)
        goto LABEL_263;
      v55 = *(_QWORD *)(v54 - 8);
      v56 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      v57 = *(_QWORD *)(v55 + 72);
      v58 = v45 + v56 + v57 * v52;
      v59 = v46 + v56;
      v60 = v57 * v47;
      v61 = v58 + v60;
      v62 = v59 + v60;
      if (v59 < v61 && v58 < v62)
        goto LABEL_306;
      swift_arrayInitWithCopy();
      if (v47)
      {
        v64 = *(_QWORD *)(v45 + 16);
        v65 = __OFADD__(v64, v47);
        v66 = v64 + v47;
        if (v65)
          goto LABEL_264;
        *(_QWORD *)(v45 + 16) = v66;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      v44 += v332;
      if (!--v43)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_49;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_262:
  __break(1u);
LABEL_263:
  __break(1u);
LABEL_264:
  __break(1u);
LABEL_265:
  swift_bridgeObjectRelease_n();
LABEL_255:
  v334 = v10;
  v267 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BB86C67C();
  sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v267, MEMORY[0x1E0DEAF38]);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v267, MEMORY[0x1E0CB0018]);
  v268 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v334 = v306;
  sub_1BB3839F8(v268);
  v269 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  sub_1BA56BD8C(v313, v269);
  swift_bridgeObjectRelease();
  v270 = v309;
  sub_1BA4C2DD8(v308, (uint64_t)v309, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v270, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v271 = 0;
    goto LABEL_259;
  }
  v333 = *v270;
  SportsDataVisualization.config.getter();
  swift_release();
  v271 = v334;
  v272 = v335;
  if (v335)
  {
    sub_1BB8745E4();
    SportsDataVisualizationConfig.hash(into:)();
    v273 = v271;
    v274 = v272;
  }
  else
  {
LABEL_259:
    sub_1BB8745E4();
    v273 = v271;
    v274 = 0;
  }
  return sub_1BA993900(v273, v274);
}

uint64_t sub_1BB41CA00()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  sub_1BB41AD48((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t sub_1BB41CA40()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  sub_1BB41AD48((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t sub_1BB41CA78(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int64_t v92;
  int64_t v93;
  int v94;
  int64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  char isUniquelyReferenced_nonNull_native;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  int64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  BOOL v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  int v196;
  int64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int64_t v208;
  int64_t v209;
  char v210;
  int64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int64_t v221;
  int64_t v222;
  char v223;
  int64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int64_t v234;
  int64_t v235;
  char v236;
  uint64_t v237;
  int64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  _QWORD *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  _QWORD v259[4];
  _QWORD *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  char *v290;
  unint64_t v291;
  unint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  char *v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  char *v305;
  _QWORD v306[6];
  char *v307;
  uint64_t v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;

  v305 = (char *)sub_1BB86C67C();
  v4 = *((_QWORD *)v305 - 1);
  MEMORY[0x1E0C80A78](v305);
  v290 = (char *)v259 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v302 = (char *)v259 - v7;
  MEMORY[0x1E0C80A78](v8);
  v294 = (char *)v259 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v259 - v11;
  MEMORY[0x1E0C80A78](v13);
  v303 = (char *)v259 - v14;
  MEMORY[0x1E0C80A78](v15);
  v285 = (char *)v259 - v16;
  v289 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v289);
  v288 = (unint64_t)v259 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA89C564();
  v268 = v18;
  v267 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v266 = (char *)v259 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v295 = type metadata accessor for WebEmbedDataVisualization();
  v274 = *(_QWORD *)(v295 - 8);
  MEMORY[0x1E0C80A78](v295);
  v21 = (int64_t)v259 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v262 = (char *)v259 - v23;
  MEMORY[0x1E0C80A78](v24);
  v286 = (uint64_t)v259 - v25;
  MEMORY[0x1E0C80A78](v26);
  v272 = (uint64_t)v259 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v259 - v29;
  MEMORY[0x1E0C80A78](v31);
  v282 = (uint64_t)v259 - v32;
  v33 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v33);
  v270 = (uint64_t)v259 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v271 = (uint64_t)v259 - v36;
  MEMORY[0x1E0C80A78](v37);
  v284 = (uint64_t)v259 - v38;
  MEMORY[0x1E0C80A78](v39);
  v283 = (uint64_t)v259 - v40;
  v277 = a1;
  v41 = WebEmbedDataVisualization.identifier.getter();
  v43 = v42;
  v278 = a2;
  if (v41 == WebEmbedDataVisualization.identifier.getter() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA4C2DD8(v277, v283, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BA4C2DD8(v278, v284, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  }
  else
  {
    v45 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v283;
    sub_1BA4C2DD8(v277, v283, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BA4C2DD8(v278, v284, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    if ((v45 & 1) == 0)
    {
      sub_1BA4A2E80(v284, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      v152 = v271;
      sub_1BA4C2DD8(v277, v271, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      v153 = v270;
      sub_1BA4C2DD8(v278, v270, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      goto LABEL_147;
    }
  }
  v47 = WebEmbedDataVisualization.urlDataSources.getter();
  if ((unint64_t)v47 >> 62)
    goto LABEL_163;
  v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  v49 = MEMORY[0x1E0DEE9D8];
  v293 = v30;
  v260 = (_QWORD *)v21;
  if (v48)
  {
    v307 = (char *)MEMORY[0x1E0DEE9D8];
    sub_1BAC79D98(0, v48 & ~(v48 >> 63), 0);
    if (v48 < 0)
    {
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
      goto LABEL_169;
    }
    v50 = 0;
    v51 = (uint64_t)v307;
    do
    {
      if ((v47 & 0xC000000000000001) != 0)
      {
        v52 = MEMORY[0x1BCCE4630](v50, v47);
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v12, v52 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v12, *(_QWORD *)(v47 + 8 * v50 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
      }
      v307 = (char *)v51;
      v54 = *(_QWORD *)(v51 + 16);
      v53 = *(_QWORD *)(v51 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_1BAC79D98(v53 > 1, v54 + 1, 1);
        v51 = (uint64_t)v307;
      }
      ++v50;
      *(_QWORD *)(v51 + 16) = v54 + 1;
      (*(void (**)(unint64_t, char *, char *))(v4 + 32))(v51+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v54, v12, v305);
    }
    while (v48 != v50);
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x1E0DEE9D8];
    v30 = v293;
  }
  else
  {
    swift_bridgeObjectRelease();
    v51 = MEMORY[0x1E0DEE9D8];
  }
  v307 = (char *)v51;
  v55 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA81D804(0, &qword_1ED3AAD50, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v57 = v56;
  v58 = sub_1BB41F658((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v55, MEMORY[0x1E0DEAF38]);
  v59 = sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))v55, MEMORY[0x1E0CB0018]);
  v300 = (char *)v58;
  v301 = v57;
  v299 = (char *)v59;
  v47 = 0;
  v261 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v60 = sub_1BB47B828();
  v263 = *(_QWORD *)(v60 + 16);
  v12 = v285;
  if (!v263)
  {
    swift_bridgeObjectRelease();
    v143 = MEMORY[0x1E0DEE9D8];
    goto LABEL_135;
  }
  v298 = 0;
  v287 = (*(unsigned __int8 *)(v274 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v274 + 80);
  v61 = v60 + v287;
  v47 = *(_QWORD *)(v274 + 72);
  v259[1] = v60;
  swift_bridgeObjectRetain();
  v62 = 0;
  v273 = v49;
  v304 = v47;
  v259[3] = v61;
LABEL_20:
  v264 = v62;
  v265 = sub_1BB47BEC4();
  v63 = sub_1BB47B828();
  v275 = *(_QWORD *)(v63 + 16);
  if (!v275)
  {
    swift_bridgeObjectRelease();
    v21 = v49;
    goto LABEL_113;
  }
  v276 = v63 + v287;
  v259[2] = v63;
  swift_bridgeObjectRetain();
  v64 = 0;
  v21 = v49;
LABEL_24:
  v65 = v276 + v64 * v47;
  v66 = v282;
  sub_1BA4C2DD8(v65, v282, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v281 = v21;
  v280 = v64;
  v297 = v65;
  if (EnumCaseMultiPayload != 1)
    __asm { BR              X10 }
  v68 = v66;
  a2 = v288;
  sub_1BB41F698(v68, v288);
  v47 = *(_QWORD *)(a2 + *(int *)(v289 + 24));
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(a2, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  if ((unint64_t)v47 >> 62)
  {
    swift_bridgeObjectRetain();
    v73 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v73)
      goto LABEL_39;
LABEL_29:
    v307 = (char *)v49;
    sub_1BAC79D98(0, v73 & ~(v73 >> 63), 0);
    if (v73 < 0)
      goto LABEL_162;
    v21 = 0;
    v69 = (uint64_t)v307;
    do
    {
      if ((v47 & 0xC000000000000001) != 0)
      {
        v70 = MEMORY[0x1BCCE4630](v21, v47);
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v12, v70 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v12, *(_QWORD *)(v47 + 8 * v21 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
      }
      v307 = (char *)v69;
      v72 = *(_QWORD *)(v69 + 16);
      v71 = *(_QWORD *)(v69 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_1BAC79D98(v71 > 1, v72 + 1, 1);
        v69 = (uint64_t)v307;
      }
      ++v21;
      *(_QWORD *)(v69 + 16) = v72 + 1;
      (*(void (**)(unint64_t, char *, char *))(v4 + 32))(v69+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v72, v12, v305);
    }
    while (v73 != v21);
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x1E0DEE9D8];
    v30 = v293;
    goto LABEL_40;
  }
  v73 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v73)
    goto LABEL_29;
LABEL_39:
  swift_bridgeObjectRelease();
  v69 = v49;
LABEL_40:
  v307 = (char *)v69;
  v47 = v298;
  v279 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v74 = sub_1BB47B828();
  v292 = *(_QWORD *)(v74 + 16);
  if (!v292)
  {
    swift_bridgeObjectRelease();
    v76 = v49;
    goto LABEL_98;
  }
  v291 = v74 + v287;
  v269 = v74;
  swift_bridgeObjectRetain();
  v75 = 0;
  v76 = v49;
  while (1)
  {
    v296 = v75;
    v12 = (char *)(v291 + v75 * v304);
    sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v77 = swift_getEnumCaseMultiPayload();
    v298 = v76;
    if (v77 != 1)
      __asm { BR              X10 }
    a2 = v288;
    sub_1BB41F698((uint64_t)v30, v288);
    v78 = *(_QWORD *)(a2 + *(int *)(v289 + 24));
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(a2, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    if (v78 >> 62)
    {
      swift_bridgeObjectRetain();
      v79 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v79)
      {
LABEL_57:
        swift_bridgeObjectRelease();
        v86 = v49;
        goto LABEL_58;
      }
    }
    else
    {
      v79 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v79)
        goto LABEL_57;
    }
    v307 = (char *)v49;
    sub_1BAC79D98(0, v79 & ~(v79 >> 63), 0);
    if (v79 < 0)
      goto LABEL_157;
    v80 = sub_1BB6CAD08(v78);
    v81 = 0;
    do
    {
      if (v80)
      {
        v82 = *(_QWORD *)(v78 + 8 * v81 + 32);
        swift_retain();
      }
      else
      {
        v82 = MEMORY[0x1BCCE4630](v81, v78);
      }
      ++v81;
      v83 = (uint64_t)v303;
      (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v303, v82 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
      swift_release();
      sub_1BB575B64();
      v84 = *((_QWORD *)v307 + 2);
      sub_1BB575CD4(v84);
      v85 = sub_1BB575E14(v84, v83);
      nullsub_1(v85);
    }
    while (v79 != v81);
    swift_bridgeObjectRelease();
    v86 = (uint64_t)v307;
    v49 = MEMORY[0x1E0DEE9D8];
LABEL_58:
    v307 = (char *)v86;
    v297 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v87 = sub_1BB47B828();
    v88 = *(_QWORD *)(v87 + 16);
    if (v88)
      break;
    swift_bridgeObjectRelease();
    v90 = v49;
LABEL_82:
    v307 = (char *)v90;
    v12 = v300;
    v30 = v299;
    v104 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v307 = (char *)v297;
    sub_1BB3839F8(v104);
    a2 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v105 = *(_QWORD *)(a2 + 16);
    v76 = v298;
    v106 = *(_QWORD *)(v298 + 16);
    v21 = v106 + v105;
    if (__OFADD__(v106, v105))
    {
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      v48 = sub_1BB873F30();
      goto LABEL_7;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v21 > *(_QWORD *)(v76 + 24) >> 1)
    {
      if (v106 <= v21)
        v108 = v106 + v105;
      else
        v108 = v106;
      v76 = sub_1BA6C2E20(isUniquelyReferenced_nonNull_native, v108, 1, v76);
    }
    v30 = v293;
    v109 = v296;
    if (*(_QWORD *)(a2 + 16))
    {
      v110 = *(_QWORD *)(v76 + 16);
      if ((*(_QWORD *)(v76 + 24) >> 1) - v110 < v105)
        goto LABEL_158;
      v111 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v112 = *(_QWORD *)(v4 + 72);
      v113 = v76 + v111 + v112 * v110;
      if (a2 + v111 < v113 + v112 * v105 && v113 < a2 + v111 + v112 * v105)
        goto LABEL_324;
      swift_arrayInitWithCopy();
      if (v105)
      {
        v114 = *(_QWORD *)(v76 + 16);
        v102 = __OFADD__(v114, v105);
        v115 = v114 + v105;
        if (v102)
          goto LABEL_159;
        *(_QWORD *)(v76 + 16) = v115;
      }
    }
    else if (v105)
    {
      goto LABEL_156;
    }
    v75 = v109 + 1;
    swift_bridgeObjectRelease();
    if (v75 == v292)
    {
      swift_bridgeObjectRelease_n();
LABEL_98:
      v307 = (char *)v76;
      v12 = v300;
      v30 = v299;
      v116 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v307 = (char *)v279;
      sub_1BB3839F8(v116);
      a2 = sub_1BB872BC8();
      v298 = v47;
      swift_bridgeObjectRelease();
      v117 = *(_QWORD *)(a2 + 16);
      v21 = v281;
      v47 = *(_QWORD *)(v281 + 16);
      v118 = v47 + v117;
      if (__OFADD__(v47, v117))
        goto LABEL_160;
      v119 = swift_isUniquelyReferenced_nonNull_native();
      if ((v119 & 1) == 0 || v118 > *(_QWORD *)(v21 + 24) >> 1)
      {
        if (v47 <= v118)
          v120 = v47 + v117;
        else
          v120 = v47;
        v21 = sub_1BA6C2E20(v119, v120, 1, v21);
      }
      v12 = v285;
      v30 = v293;
      v47 = v304;
      v121 = v280;
      if (!*(_QWORD *)(a2 + 16))
      {
        if (!v117)
          goto LABEL_23;
        goto LABEL_161;
      }
      v122 = *(_QWORD *)(v21 + 16);
      if ((*(_QWORD *)(v21 + 24) >> 1) - v122 < v117)
      {
        __break(1u);
        JUMPOUT(0x1BB41E21CLL);
      }
      v123 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v124 = *(_QWORD *)(v4 + 72);
      v125 = v21 + v123 + v124 * v122;
      if (a2 + v123 < v125 + v124 * v117 && v125 < a2 + v123 + v124 * v117)
        goto LABEL_324;
      swift_arrayInitWithCopy();
      if (!v117)
        goto LABEL_23;
      v126 = *(_QWORD *)(v21 + 16);
      v102 = __OFADD__(v126, v117);
      v127 = v126 + v117;
      if (v102)
        goto LABEL_166;
      *(_QWORD *)(v21 + 16) = v127;
LABEL_23:
      v64 = v121 + 1;
      swift_bridgeObjectRelease();
      if (v64 != v275)
        goto LABEL_24;
      swift_bridgeObjectRelease_n();
LABEL_113:
      v307 = (char *)v21;
      v128 = v298;
      v129 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v307 = (char *)v265;
      sub_1BB3839F8(v129);
      a2 = sub_1BB872BC8();
      v298 = v128;
      swift_bridgeObjectRelease();
      v130 = *(_QWORD *)(a2 + 16);
      v47 = *(_QWORD *)(v273 + 16);
      v131 = v47 + v130;
      if (__OFADD__(v47, v130))
        goto LABEL_167;
      v132 = swift_isUniquelyReferenced_nonNull_native();
      v133 = v273;
      if ((v132 & 1) == 0 || v131 > *(_QWORD *)(v273 + 24) >> 1)
      {
        if (v47 <= v131)
          v134 = v47 + v130;
        else
          v134 = v47;
        v133 = sub_1BA6C2E20(v132, v134, 1, v273);
      }
      v12 = v285;
      v30 = v293;
      v47 = v304;
      v135 = *(_QWORD *)(a2 + 16);
      v273 = v133;
      if (!v135)
      {
        if (!v130)
          goto LABEL_131;
        goto LABEL_168;
      }
      v136 = *(_QWORD *)(v133 + 16);
      if ((*(_QWORD *)(v133 + 24) >> 1) - v136 < v130)
      {
        __break(1u);
LABEL_317:
        __break(1u);
LABEL_318:
        __break(1u);
        goto LABEL_319;
      }
      v137 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v138 = *(_QWORD *)(v4 + 72);
      v139 = v133 + v137 + v138 * v136;
      if (a2 + v137 < v139 + v138 * v130 && v139 < a2 + v137 + v138 * v130)
      {
LABEL_324:
        sub_1BB873F84();
        __break(1u);
        JUMPOUT(0x1BB41F5E8);
      }
      swift_arrayInitWithCopy();
      if (v130)
      {
        v141 = *(_QWORD *)(v273 + 16);
        v102 = __OFADD__(v141, v130);
        v142 = v141 + v130;
        if (!v102)
        {
          *(_QWORD *)(v273 + 16) = v142;
          goto LABEL_131;
        }
LABEL_319:
        __break(1u);
LABEL_320:
        __break(1u);
LABEL_321:
        __break(1u);
LABEL_322:
        __break(1u);
        JUMPOUT(0x1BB41F58CLL);
      }
LABEL_131:
      v62 = v264 + 1;
      swift_bridgeObjectRelease();
      if (v62 == v263)
        goto LABEL_154;
      goto LABEL_20;
    }
  }
  v89 = v87 + v287;
  swift_bridgeObjectRetain();
  v90 = v49;
  while (1)
  {
    sub_1BB47C23C((uint64_t *)&v307);
    v91 = (uint64_t)v307;
    v49 = *((_QWORD *)v307 + 2);
    v92 = *(_QWORD *)(v90 + 16);
    v93 = v92 + v49;
    if (__OFADD__(v92, v49))
      break;
    v94 = swift_isUniquelyReferenced_nonNull_native();
    if (v94 && v93 <= *(_QWORD *)(v90 + 24) >> 1)
    {
      if (*(_QWORD *)(v91 + 16))
        goto LABEL_71;
    }
    else
    {
      if (v92 <= v93)
        v95 = v92 + v49;
      else
        v95 = v92;
      v90 = sub_1BA6C2E20(v94, v95, 1, v90);
      if (*(_QWORD *)(v91 + 16))
      {
LABEL_71:
        v96 = *(_QWORD *)(v90 + 16);
        if ((*(_QWORD *)(v90 + 24) >> 1) - v96 < v49)
          goto LABEL_152;
        v97 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
        v98 = *(_QWORD *)(v4 + 72);
        v99 = v90 + v97 + v98 * v96;
        if (v91 + v97 < v99 + v98 * v49 && v99 < v91 + v97 + v98 * v49)
          goto LABEL_324;
        swift_arrayInitWithCopy();
        if (v49)
        {
          v101 = *(_QWORD *)(v90 + 16);
          v102 = __OFADD__(v101, v49);
          v103 = v101 + v49;
          if (v102)
            goto LABEL_153;
          *(_QWORD *)(v90 + 16) = v103;
        }
        goto LABEL_61;
      }
    }
    if (v49)
      goto LABEL_151;
LABEL_61:
    swift_bridgeObjectRelease();
    v89 += v304;
    if (!--v88)
    {
      swift_bridgeObjectRelease_n();
      v49 = MEMORY[0x1E0DEE9D8];
      goto LABEL_82;
    }
  }
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  swift_bridgeObjectRelease_n();
  v143 = v273;
  v47 = v298;
LABEL_135:
  v307 = (char *)v143;
  v144 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v307 = (char *)v261;
  sub_1BB3839F8(v144);
  v145 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  a2 = WebEmbedDataVisualization.urlDataSources.getter();
  v273 = v145;
  if (a2 >> 62)
  {
LABEL_169:
    v146 = sub_1BB873F30();
    if (!v146)
      goto LABEL_170;
LABEL_137:
    v307 = (char *)v49;
    sub_1BAC79D98(0, v146 & ~(v146 >> 63), 0);
    if ((v146 & 0x8000000000000000) == 0)
    {
      v147 = 0;
      v148 = (uint64_t)v307;
      do
      {
        if ((a2 & 0xC000000000000001) != 0)
        {
          v149 = MEMORY[0x1BCCE4630](v147, a2);
          (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v290, v149 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v290, *(_QWORD *)(a2 + 8 * v147 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
        }
        v307 = (char *)v148;
        v151 = *(_QWORD *)(v148 + 16);
        v150 = *(_QWORD *)(v148 + 24);
        if (v151 >= v150 >> 1)
        {
          sub_1BAC79D98(v150 > 1, v151 + 1, 1);
          v148 = (uint64_t)v307;
        }
        ++v147;
        *(_QWORD *)(v148 + 16) = v151 + 1;
        (*(void (**)(unint64_t, char *, char *))(v4 + 32))(v148+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v151, v290, v305);
        v49 = MEMORY[0x1E0DEE9D8];
      }
      while (v146 != v147);
      swift_bridgeObjectRelease();
      goto LABEL_171;
    }
    goto LABEL_317;
  }
  v146 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v146)
    goto LABEL_137;
LABEL_170:
  swift_bridgeObjectRelease();
  v148 = MEMORY[0x1E0DEE9D8];
LABEL_171:
  v307 = (char *)v148;
  v269 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v156 = sub_1BB47B828();
  v275 = *(_QWORD *)(v156 + 16);
  if (!v275)
  {
    swift_bridgeObjectRelease();
    v258 = MEMORY[0x1E0DEE9D8];
LABEL_290:
    v307 = (char *)v258;
    v248 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v307 = (char *)v269;
    sub_1BB3839F8(v248);
    v249 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    LOBYTE(v248) = sub_1BA809094(v273, v249);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v284, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BA4A2E80(v283, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v152 = v271;
    sub_1BA4C2DD8(v277, v271, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v153 = v270;
    sub_1BA4C2DD8(v278, v270, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    if ((v248 & 1) != 0)
    {
      v194 = v262;
      sub_1BA4C2DD8(v152, (uint64_t)v262, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BA4A2E80((uint64_t)v194, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v250 = 0;
        v193 = 0;
        v251 = 0;
        v252 = 0;
        v253 = 0;
        v254 = 0;
        goto LABEL_297;
      }
LABEL_296:
      v306[0] = *(_QWORD *)v194;
      SportsDataVisualization.config.getter();
      swift_release();
      v250 = (uint64_t)v307;
      v193 = v308;
      v251 = v309;
      v252 = v310;
      v253 = v311;
      v254 = v312;
LABEL_297:
      v305 = (char *)v250;
      v255 = v260;
      sub_1BA4C2DD8(v153, (uint64_t)v260, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BA4A2E80((uint64_t)v255, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v189 = 0;
        v195 = 0;
        v194 = 0;
        v47 = 0;
        v256 = 0;
        v257 = 0;
        v303 = 0;
        v304 = 0;
        if (v193)
        {
LABEL_299:
          v307 = v305;
          v308 = v193;
          v309 = v251;
          v310 = v252;
          v311 = v253;
          v312 = v254;
          if (!v195)
            goto LABEL_305;
          v306[0] = v189;
          v306[1] = v195;
          v306[2] = v194;
          v306[3] = v47;
          v306[4] = v256;
          v306[5] = v257;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v154 = _s8NewsFeed29SportsDataVisualizationConfigV2eeoiySbAC_ACtFZ_0(&v307, v306);
          sub_1BA993900(v189, v195);
          sub_1BA4A2E80(v270, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
          sub_1BA4A2E80(v271, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_1BA993900((uint64_t)v305, v193);
          return v154 & 1;
        }
      }
      else
      {
        v306[0] = *v255;
        SportsDataVisualization.config.getter();
        swift_release();
        v189 = (uint64_t)v307;
        v195 = v308;
        v194 = (char *)v309;
        v47 = v310;
        v256 = v311;
        v257 = v312;
        v303 = v312;
        v304 = v311;
        if (v193)
          goto LABEL_299;
      }
      v301 = v47;
      v302 = v194;
      sub_1BA4A2E80(v270, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      sub_1BA4A2E80(v271, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      if (v195)
        goto LABEL_306;
      sub_1BA993900((uint64_t)v305, 0);
      v154 = 1;
      return v154 & 1;
    }
LABEL_147:
    sub_1BA4A2E80(v153, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BA4A2E80(v152, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    goto LABEL_148;
  }
  v292 = (*(unsigned __int8 *)(v274 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v274 + 80);
  v157 = v156 + v292;
  v158 = *(_QWORD *)(v274 + 72);
  v264 = v156;
  swift_bridgeObjectRetain();
  v159 = 0;
  v281 = v49;
  v265 = v157;
  v304 = v158;
  while (1)
  {
    v276 = v159;
    v279 = sub_1BB47BEC4();
    v160 = sub_1BB47B828();
    v282 = *(_QWORD *)(v160 + 16);
    if (v282)
      break;
    swift_bridgeObjectRelease();
    v162 = v49;
LABEL_268:
    v307 = (char *)v162;
    v231 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v307 = (char *)v279;
    sub_1BB3839F8(v231);
    v232 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v233 = *(_QWORD *)(v232 + 16);
    v234 = *(_QWORD *)(v281 + 16);
    v235 = v234 + v233;
    if (__OFADD__(v234, v233))
      goto LABEL_320;
    v236 = swift_isUniquelyReferenced_nonNull_native();
    v237 = v281;
    if ((v236 & 1) == 0 || v235 > *(_QWORD *)(v281 + 24) >> 1)
    {
      if (v234 <= v235)
        v238 = v234 + v233;
      else
        v238 = v234;
      v237 = sub_1BA6C2E20(v236, v238, 1, v281);
    }
    v239 = *(_QWORD *)(v232 + 16);
    v281 = v237;
    if (v239)
    {
      v240 = *(_QWORD *)(v237 + 16);
      if ((*(_QWORD *)(v237 + 24) >> 1) - v240 < v233)
        goto LABEL_322;
      v241 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v242 = *(_QWORD *)(v4 + 72);
      v243 = v237 + v241 + v242 * v240;
      if (v232 + v241 < v243 + v242 * v233 && v243 < v232 + v241 + v242 * v233)
        goto LABEL_324;
      swift_arrayInitWithCopy();
      if (v233)
      {
        v245 = *(_QWORD *)(v281 + 16);
        v102 = __OFADD__(v245, v233);
        v246 = v245 + v233;
        if (v102)
        {
          __break(1u);
          JUMPOUT(0x1BB41F594);
        }
        *(_QWORD *)(v281 + 16) = v246;
      }
    }
    else if (v233)
    {
      goto LABEL_321;
    }
    v247 = v276 + 1;
    swift_bridgeObjectRelease();
    v159 = v247;
    if (v247 == v275)
    {
      swift_bridgeObjectRelease_n();
      v258 = v281;
      goto LABEL_290;
    }
  }
  v285 = (char *)(v160 + v292);
  v274 = v160;
  swift_bridgeObjectRetain();
  v161 = 0;
  v162 = v49;
  while (2)
  {
    v163 = v272;
    sub_1BA4C2DD8((uint64_t)&v285[v161 * v304], v272, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v164 = swift_getEnumCaseMultiPayload();
    v291 = v162;
    v287 = v161;
    if (v164 != 1)
      __asm { BR              X10 }
    v165 = v288;
    sub_1BB41F698(v163, v288);
    v166 = *(_QWORD *)(v165 + *(int *)(v289 + 24));
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(v165, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    if (v166 >> 62)
    {
      swift_bridgeObjectRetain();
      v172 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v172)
      {
LABEL_192:
        swift_bridgeObjectRelease();
        v168 = v49;
        goto LABEL_193;
      }
    }
    else
    {
      v172 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v172)
        goto LABEL_192;
    }
    v307 = (char *)v49;
    sub_1BAC79D98(0, v172 & ~(v172 >> 63), 0);
    if (v172 < 0)
      goto LABEL_314;
    v303 = (char *)v47;
    v167 = 0;
    v168 = (uint64_t)v307;
    do
    {
      if ((v166 & 0xC000000000000001) != 0)
      {
        v169 = MEMORY[0x1BCCE4630](v167, v166);
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v294, v169 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v294, *(_QWORD *)(v166 + 8 * v167 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
      }
      v307 = (char *)v168;
      v171 = *(_QWORD *)(v168 + 16);
      v170 = *(_QWORD *)(v168 + 24);
      if (v171 >= v170 >> 1)
      {
        sub_1BAC79D98(v170 > 1, v171 + 1, 1);
        v168 = (uint64_t)v307;
      }
      ++v167;
      *(_QWORD *)(v168 + 16) = v171 + 1;
      (*(void (**)(unint64_t, char *, char *))(v4 + 32))(v168+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v171, v294, v305);
    }
    while (v172 != v167);
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x1E0DEE9D8];
    v47 = (uint64_t)v303;
LABEL_193:
    v307 = (char *)v168;
    v290 = (char *)sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v173 = sub_1BB47B828();
    v296 = *(_QWORD *)(v173 + 16);
    if (!v296)
    {
      swift_bridgeObjectRelease();
      v175 = v49;
      goto LABEL_252;
    }
    v293 = (char *)(v173 + v292);
    v280 = v173;
    swift_bridgeObjectRetain();
    v174 = 0;
    v175 = v49;
LABEL_197:
    v176 = v286;
    sub_1BA4C2DD8((uint64_t)&v293[v174 * v304], v286, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v177 = swift_getEnumCaseMultiPayload();
    v297 = v174;
    if (v177 != 1)
      __asm { BR              X10 }
    v178 = v288;
    sub_1BB41F698(v176, v288);
    v179 = *(_QWORD *)(v178 + *(int *)(v289 + 24));
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(v178, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    if (v179 >> 62)
    {
      swift_bridgeObjectRetain();
      v180 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      v303 = (char *)v175;
      if (!v180)
        goto LABEL_210;
LABEL_202:
      v307 = (char *)sub_1BA6B0504();
      sub_1BB5759F0(v180);
      if (v180 < 0)
        goto LABEL_309;
      v181 = sub_1BB6CAD08(v179);
      v182 = 0;
      do
      {
        if (v181)
        {
          v183 = *(_QWORD *)(v179 + 8 * v182 + 32);
          swift_retain();
        }
        else
        {
          v183 = MEMORY[0x1BCCE4630](v182, v179);
        }
        ++v182;
        v184 = (uint64_t)v302;
        (*(void (**)(char *, uint64_t, char *))(v4 + 16))(v302, v183 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v305);
        swift_release();
        sub_1BB575B64();
        v185 = *((_QWORD *)v307 + 2);
        sub_1BB575CD4(v185);
        v186 = sub_1BB575E14(v185, v184);
        nullsub_1(v186);
      }
      while (v180 != v182);
      swift_bridgeObjectRelease();
      v187 = (uint64_t)v307;
      v49 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v180 = *(_QWORD *)((v179 & 0xFFFFFFFFFFFFF8) + 0x10);
      v303 = (char *)v175;
      if (v180)
        goto LABEL_202;
LABEL_210:
      v187 = sub_1BA90B918(0);
      swift_bridgeObjectRelease();
    }
    v307 = (char *)v187;
    v298 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v188 = sub_1BB47B828();
    v189 = v188;
    v190 = *(_QWORD *)(v188 + 16);
    if (!v190)
    {
      swift_bridgeObjectRelease();
      v153 = v49;
LABEL_235:
      v307 = (char *)v153;
      v205 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v307 = (char *)v298;
      sub_1BB3839F8(v205);
      v206 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v207 = *(_QWORD *)(v206 + 16);
      v175 = (unint64_t)v303;
      v208 = *((_QWORD *)v303 + 2);
      v209 = v208 + v207;
      if (__OFADD__(v208, v207))
      {
        __break(1u);
LABEL_308:
        __break(1u);
LABEL_309:
        __break(1u);
LABEL_310:
        __break(1u);
LABEL_311:
        __break(1u);
LABEL_312:
        __break(1u);
LABEL_313:
        __break(1u);
LABEL_314:
        __break(1u);
LABEL_315:
        __break(1u);
        JUMPOUT(0x1BB41F568);
      }
      v210 = swift_isUniquelyReferenced_nonNull_native();
      if ((v210 & 1) != 0 && v209 <= *(_QWORD *)(v175 + 24) >> 1)
      {
        if (!*(_QWORD *)(v206 + 16))
          goto LABEL_195;
      }
      else
      {
        if (v208 <= v209)
          v211 = v208 + v207;
        else
          v211 = v208;
        v175 = sub_1BA6C2E20(v210, v211, 1, v175);
        if (!*(_QWORD *)(v206 + 16))
        {
LABEL_195:
          if (v207)
            goto LABEL_308;
          goto LABEL_196;
        }
      }
      v212 = *(_QWORD *)(v175 + 16);
      if ((*(_QWORD *)(v175 + 24) >> 1) - v212 < v207)
        goto LABEL_310;
      v213 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v214 = *(_QWORD *)(v4 + 72);
      v215 = v175 + v213 + v214 * v212;
      if (v206 + v213 < v215 + v214 * v207 && v215 < v206 + v213 + v214 * v207)
        goto LABEL_324;
      swift_arrayInitWithCopy();
      if (v207)
      {
        v216 = *(_QWORD *)(v175 + 16);
        v102 = __OFADD__(v216, v207);
        v217 = v216 + v207;
        if (v102)
          goto LABEL_311;
        *(_QWORD *)(v175 + 16) = v217;
      }
LABEL_196:
      v174 = v297 + 1;
      swift_bridgeObjectRelease();
      if (v174 == v296)
      {
        swift_bridgeObjectRelease_n();
LABEL_252:
        v307 = (char *)v175;
        v218 = sub_1BB872BC8();
        swift_bridgeObjectRelease();
        v307 = v290;
        sub_1BB3839F8(v218);
        v219 = sub_1BB872BC8();
        swift_bridgeObjectRelease();
        v220 = *(_QWORD *)(v219 + 16);
        v162 = v291;
        v221 = *(_QWORD *)(v291 + 16);
        v222 = v221 + v220;
        if (__OFADD__(v221, v220))
          goto LABEL_312;
        v223 = swift_isUniquelyReferenced_nonNull_native();
        if ((v223 & 1) != 0 && v222 <= *(_QWORD *)(v162 + 24) >> 1)
        {
          if (*(_QWORD *)(v219 + 16))
            goto LABEL_261;
        }
        else
        {
          if (v221 <= v222)
            v224 = v221 + v220;
          else
            v224 = v221;
          v162 = sub_1BA6C2E20(v223, v224, 1, v162);
          if (*(_QWORD *)(v219 + 16))
          {
LABEL_261:
            v225 = *(_QWORD *)(v162 + 16);
            if ((*(_QWORD *)(v162 + 24) >> 1) - v225 < v220)
              goto LABEL_315;
            v226 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
            v227 = *(_QWORD *)(v4 + 72);
            v228 = v162 + v226 + v227 * v225;
            if (v219 + v226 < v228 + v227 * v220 && v228 < v219 + v226 + v227 * v220)
              goto LABEL_324;
            swift_arrayInitWithCopy();
            if (v220)
            {
              v229 = *(_QWORD *)(v162 + 16);
              v102 = __OFADD__(v229, v220);
              v230 = v229 + v220;
              if (v102)
                goto LABEL_318;
              *(_QWORD *)(v162 + 16) = v230;
            }
            goto LABEL_176;
          }
        }
        if (v220)
          goto LABEL_313;
LABEL_176:
        v161 = v287 + 1;
        swift_bridgeObjectRelease();
        if (v161 == v282)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_268;
        }
        continue;
      }
      goto LABEL_197;
    }
    break;
  }
  v191 = v188 + v292;
  swift_bridgeObjectRetain();
  v153 = v49;
  while (2)
  {
    sub_1BB47C23C((uint64_t *)&v307);
    v192 = (uint64_t)v307;
    v193 = *((_QWORD *)v307 + 2);
    v194 = *(char **)(v153 + 16);
    v195 = (uint64_t)&v194[v193];
    if (__OFADD__(v194, v193))
    {
      __break(1u);
LABEL_294:
      __break(1u);
LABEL_295:
      __break(1u);
      goto LABEL_296;
    }
    v196 = swift_isUniquelyReferenced_nonNull_native();
    if (v196 && v195 <= *(_QWORD *)(v153 + 24) >> 1)
    {
      if (!*(_QWORD *)(v192 + 16))
      {
LABEL_213:
        if (v193)
          goto LABEL_294;
        goto LABEL_214;
      }
    }
    else
    {
      if ((uint64_t)v194 <= v195)
        v197 = (int64_t)&v194[v193];
      else
        v197 = (int64_t)v194;
      v153 = sub_1BA6C2E20(v196, v197, 1, v153);
      if (!*(_QWORD *)(v192 + 16))
        goto LABEL_213;
    }
    v198 = *(_QWORD *)(v153 + 16);
    if ((*(_QWORD *)(v153 + 24) >> 1) - v198 < v193)
      goto LABEL_295;
    v199 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v200 = *(_QWORD *)(v4 + 72);
    v201 = v153 + v199 + v200 * v198;
    if (v192 + v199 < v201 + v200 * v193 && v201 < v192 + v199 + v200 * v193)
      goto LABEL_324;
    swift_arrayInitWithCopy();
    if (!v193)
    {
LABEL_214:
      swift_bridgeObjectRelease();
      v191 += v304;
      if (!--v190)
      {
        swift_bridgeObjectRelease_n();
        v49 = MEMORY[0x1E0DEE9D8];
        goto LABEL_235;
      }
      continue;
    }
    break;
  }
  v203 = *(_QWORD *)(v153 + 16);
  v102 = __OFADD__(v203, v193);
  v204 = v203 + v193;
  if (!v102)
  {
    *(_QWORD *)(v153 + 16) = v204;
    goto LABEL_214;
  }
  __break(1u);
LABEL_305:
  v301 = v47;
  v302 = v194;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v270, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  sub_1BA4A2E80(v271, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
LABEL_306:
  sub_1BA993900((uint64_t)v305, v193);
  sub_1BA993900(v189, v195);
LABEL_148:
  v154 = 0;
  return v154 & 1;
}

uint64_t sub_1BB41F658(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA81D804(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB41F698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericDataVisualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB41F6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v50 - v9;
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  v16 = type metadata accessor for FormatSlotDefinitionItemSet();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v55 = (uint64_t)&v50 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v50 - v22;
  v25 = v24;
  sub_1BA57B488(a1, (uint64_t)v15, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  v54 = v17;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v26(v15, 1, v25) == 1)
  {
    sub_1BA502AD0((uint64_t)v15, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return sub_1BA57B488(a2, a3, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  }
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  sub_1BA57B488(a2, (uint64_t)v12, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  v28 = (uint64_t)v23;
  if (v26(v12, 1, v25) == 1)
  {
    sub_1BA502AD0((uint64_t)v12, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    sub_1BA5193C4((uint64_t)v23, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(a3, 0, 1, v25);
  }
  v29 = v25;
  v30 = v55;
  sub_1BA5193C4((uint64_t)v12, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  v31 = *(_QWORD *)(v28 + 8);
  v32 = *(_QWORD *)(v30 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1BA857E18(v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0)
    goto LABEL_11;
  v34 = a3;
  swift_bridgeObjectRetain();
  v35 = swift_bridgeObjectRetain();
  v36 = sub_1BA90C438(v35, v31);
  v37 = *(_DWORD *)v28;
  v38 = 0x7FFFFFFF;
  if (*(_DWORD *)v28 == 0x7FFFFFFF)
  {
    v40 = 0x7FFFFFFF;
    v30 = (uint64_t)v52;
    v41 = (uint64_t)v53;
    goto LABEL_13;
  }
  v39 = *(_DWORD *)v30;
  v40 = 0x7FFFFFFF;
  v30 = (uint64_t)v52;
  v41 = (uint64_t)v53;
  if (v39 != 0x7FFFFFFF)
  {
    v40 = v37 + v39;
    if (__OFADD__(v37, v39))
    {
      __break(1u);
LABEL_11:
      type metadata accessor for FormatDerivedDataError();
      sub_1BA87DD80();
      swift_allocError();
      *v42 = 0xD000000000000028;
      v42[1] = 0x80000001BB959F80;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      return sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    }
  }
LABEL_13:
  v43 = *(_DWORD *)(v28 + 4);
  if (v43 == 0x7FFFFFFF)
  {
LABEL_18:
    v45 = (uint64_t)v51;
    goto LABEL_19;
  }
  v44 = *(_DWORD *)(v55 + 4);
  v45 = (uint64_t)v51;
  if (v44 != 0x7FFFFFFF)
  {
    v38 = v43 + v44;
    if (__OFADD__(v43, v44))
    {
      __break(1u);
      goto LABEL_18;
    }
  }
LABEL_19:
  LODWORD(v52) = v40;
  v53 = (char *)v36;
  sub_1BA57B488(v28 + *(int *)(v29 + 36), v45, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  sub_1BA4C2DD8(v55, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  v46 = sub_1BB86E710();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
    v48 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
    sub_1BA57B488(v30 + *(int *)(v29 + 36), v41, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    sub_1BA502AD0(v45, (unint64_t *)&qword_1ED3C47E8, v48);
  }
  else
  {
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v41, v45, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v41, 0, 1, v46);
  }
  sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  *(_DWORD *)v34 = (_DWORD)v52;
  *(_DWORD *)(v34 + 4) = v38;
  v49 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v34 + 8) = v53;
  *(_QWORD *)(v34 + 16) = v49;
  *(_QWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 32) = 0;
  sub_1BA6E7324(v41, v34 + *(int *)(v29 + 36));
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v34, 0, 1, v29);
}

uint64_t sub_1BB41FC38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  unsigned int v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, _QWORD, uint64_t, _QWORD *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int isUniquelyReferenced_nonNull_native;
  char v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  _OWORD *v83;
  __int128 v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  int64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v4 = v3;
  v91 = a1;
  v92 = a3;
  v6 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v85 - v11;
  sub_1BA4A3FB4(0, &qword_1EF2C39D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
  MEMORY[0x1E0C80A78](v13);
  v98 = (uint64_t)&v85 - v14;
  v15 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v97 = (uint64_t)&v85 - v19;
  sub_1BA4A3FB4(0, &qword_1EF2C51B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v85 - v21;
  v93 = a2;
  v107 = a2[5];
  v23 = sub_1BB42514C(v107);
  if (!v23)
    goto LABEL_63;
  v24 = *((unsigned __int16 *)v23 + 30);
  if (v24 >> 13
    || (v25 = (_QWORD *)v23[4], (v23[4] & 0xC0) != 0x80)
    || *((_OWORD *)v23 + 1) != 0
    || v23[4] != 128)
  {
    swift_release();
LABEL_63:
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    *v72 = 0xD000000000000027;
    v72[1] = 0x80000001BB98C330;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v86 = v17;
  v87 = v12;
  v88 = v9;
  v89 = v6;
  v90 = v7;
  v26 = v23[5];
  v27 = v23[6];
  v28 = *((unsigned int *)v23 + 14) | ((unint64_t)(unsigned __int16)v24 << 32);
  v102 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v29 = v23;
  swift_beginAccess();
  v85 = v29;
  v30 = v29[8];
  if (v30 >> 62)
    goto LABEL_74;
  v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1BB425B48(0, 0, v25, v26, v27, v28);
  swift_bridgeObjectRetain();
  v96 = v3;
  if (v31)
    goto LABEL_8;
LABEL_16:
  while (2)
  {
    swift_bridgeObjectRelease();
    v34 = v93[1];
    v35 = *(_QWORD *)(v34 + 56);
    v94 = v34 + 56;
    v36 = 1 << *(_BYTE *)(v34 + 32);
    v37 = -1;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    v4 = v37 & v35;
    v95 = (unint64_t)(v36 + 63) >> 6;
    swift_bridgeObjectRetain();
    v26 = 0;
    v30 = v89;
    v28 = v90;
    v38 = v98;
    v99 = v34;
    while (v4)
    {
      v39 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v40 = v39 | (v26 << 6);
LABEL_33:
      v44 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * v40);
      v27 = *v44;
      v45 = v44[1];
      v25 = v102;
      if (v102[2])
      {
        swift_bridgeObjectRetain_n();
        v46 = sub_1BA6E35A8(v27, v45);
        if ((v47 & 1) != 0)
        {
          sub_1BA4C2DD8(v25[7] + *(_QWORD *)(v28 + 72) * v46, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
          (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v28 + 56))(v22, 0, 1, v30);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v28 + 56))(v22, 1, 1, v30);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v28 + 56))(v22, 1, 1, v30);
        swift_bridgeObjectRetain();
      }
      if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v28 + 48))(v22, 1, v30) == 1)
      {
        sub_1BA502AD0((uint64_t)v22, &qword_1EF2C51B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
        v25 = *(_QWORD **)(v100 + 16);
        if (!v25[2])
        {
          v55 = type metadata accessor for FormatCompilingSlotDefinition(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v38, 1, 1, v55);
          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
        v48 = sub_1BA6E35A8(v27, v45);
        if ((v49 & 1) != 0)
        {
          v50 = v48;
          v51 = v25[7];
          v25 = (_QWORD *)type metadata accessor for FormatCompilingSlotDefinition(0);
          v52 = *(v25 - 1);
          v53 = v51 + *(_QWORD *)(v52 + 72) * v50;
          v30 = v89;
          v38 = v98;
          sub_1BA4C2DD8(v53, v98, type metadata accessor for FormatCompilingSlotDefinition);
          v54 = *(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v52 + 56);
          v28 = v90;
          v54(v38, 0, 1, v25);
        }
        else
        {
          v25 = (_QWORD *)type metadata accessor for FormatCompilingSlotDefinition(0);
          v38 = v98;
          (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(*(v25 - 1) + 56))(v98, 1, 1, v25);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for FormatCompilingSlotDefinition(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(*(v25 - 1) + 48))(v38, 1, v25) == 1)
        {
LABEL_46:
          sub_1BA502AD0(v38, &qword_1EF2C39D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
          swift_bridgeObjectRelease();
          v34 = v99;
        }
        else
        {
          v56 = (uint64_t)v86;
          sub_1BA4C2DD8(v38, (uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          sub_1BA4A2E80(v38, type metadata accessor for FormatCompilingSlotDefinition);
          v57 = v56;
          v58 = v97;
          sub_1BA5193C4(v57, v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          v59 = v58;
          v60 = (uint64_t)v87;
          sub_1BA4C2DD8(v59, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          sub_1BA5193C4(v60, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
          v25 = v102;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v101 = v25;
          v30 = sub_1BA6E35A8(v27, v45);
          v63 = v25[2];
          v64 = (v62 & 1) == 0;
          v65 = v63 + v64;
          if (__OFADD__(v63, v64))
            goto LABEL_71;
          v66 = v62;
          if (v25[3] >= v65)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1BB4C57E0();
          }
          else
          {
            sub_1BB4B39D0(v65, isUniquelyReferenced_nonNull_native);
            v67 = sub_1BA6E35A8(v27, v45);
            if ((v66 & 1) != (v68 & 1))
            {
              result = sub_1BB874560();
              __break(1u);
              return result;
            }
            v30 = v67;
          }
          v38 = v98;
          v25 = v101;
          if ((v66 & 1) != 0)
          {
            v28 = v90;
            sub_1BA7229AC((uint64_t)v88, v101[7] + *(_QWORD *)(v90 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
          }
          else
          {
            v101[(v30 >> 6) + 8] |= 1 << v30;
            v69 = (uint64_t *)(v25[6] + 16 * v30);
            *v69 = v27;
            v69[1] = v45;
            v28 = v90;
            sub_1BA5193C4((uint64_t)v88, v25[7] + *(_QWORD *)(v90 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
            v70 = v25[2];
            v41 = __OFADD__(v70, 1);
            v71 = v70 + 1;
            if (v41)
              goto LABEL_73;
            v25[2] = v71;
            swift_bridgeObjectRetain();
          }
          v30 = v89;
          v102 = v25;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA4A2E80(v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          v34 = v99;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1BA502AD0((uint64_t)v22, &qword_1EF2C51B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
        v34 = v99;
      }
    }
    v41 = __OFADD__(v26++, 1);
    if (v41)
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v26 >= v95)
    {
LABEL_64:
      swift_release();
      v74 = swift_bridgeObjectRetain();
      v75 = sub_1BA574368(v74);
      if (*(_QWORD *)(v34 + 16) <= *(_QWORD *)(v75 + 16) >> 3)
      {
        v101 = (_QWORD *)v75;
        sub_1BB024F00(v34);
        swift_release();
        v76 = (uint64_t)v101;
      }
      else
      {
        v76 = sub_1BA4BDEF4(v34, v75);
        swift_release();
      }
      v77 = v92;
      sub_1BA4C2DD8(v91, v92, (uint64_t (*)(_QWORD))sub_1BA7B06D8);
      v78 = v93;
      v79 = *v93;
      v80 = v93[3];
      v105 = v93[2];
      v106 = v79;
      v103 = v93[4];
      v104 = v80;
      v81 = (uint64_t)v102;
      v82 = (int *)type metadata accessor for FormatDerivedDataBinderResult();
      v83 = (_OWORD *)(v77 + v82[5]);
      v84 = v78[1];
      *v83 = *v78;
      v83[1] = v84;
      v83[2] = v78[2];
      *(_QWORD *)(v77 + v82[6]) = v81;
      *(_QWORD *)(v77 + v82[7]) = v76;
      swift_bridgeObjectRetain();
      sub_1BA781758((uint64_t)&v106);
      sub_1BA781758((uint64_t)&v105);
      sub_1BA781758((uint64_t)&v104);
      sub_1BA781758((uint64_t)&v103);
      return sub_1BA781758((uint64_t)&v107);
    }
    v42 = *(_QWORD *)(v94 + 8 * v26);
    if (v42)
    {
LABEL_32:
      v4 = (v42 - 1) & v42;
      v40 = __clz(__rbit64(v42)) + (v26 << 6);
      goto LABEL_33;
    }
    v43 = v26 + 1;
    if (v26 + 1 >= v95)
      goto LABEL_64;
    v42 = *(_QWORD *)(v94 + 8 * v43);
    if (v42)
      goto LABEL_31;
    v43 = v26 + 2;
    if (v26 + 2 >= v95)
      goto LABEL_64;
    v42 = *(_QWORD *)(v94 + 8 * v43);
    if (v42)
      goto LABEL_31;
    v43 = v26 + 3;
    if (v26 + 3 >= v95)
      goto LABEL_64;
    v42 = *(_QWORD *)(v94 + 8 * v43);
    if (v42)
    {
LABEL_31:
      v26 = v43;
      goto LABEL_32;
    }
    while (1)
    {
      v26 = v43 + 1;
      if (__OFADD__(v43, 1))
        break;
      if (v26 >= v95)
        goto LABEL_64;
      v42 = *(_QWORD *)(v94 + 8 * v26);
      ++v43;
      if (v42)
        goto LABEL_32;
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    sub_1BB425B48(0, 0, v25, v26, v27, v28);
    swift_bridgeObjectRetain();
    v31 = sub_1BB873F30();
    v96 = v4;
    if (!v31)
      continue;
    break;
  }
LABEL_8:
  v4 = v30 & 0xC000000000000001;
  v32 = 4;
  while (1)
  {
    v25 = (_QWORD *)(v32 - 4);
    if (v4)
    {
      v28 = MEMORY[0x1BCCE4630](v32 - 4, v30);
      v26 = v32 - 3;
      if (__OFADD__(v25, 1))
        goto LABEL_70;
    }
    else
    {
      v28 = *(_QWORD *)(v30 + 8 * v32);
      swift_retain();
      v26 = v32 - 3;
      if (__OFADD__(v25, 1))
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
    LOBYTE(v25) = v100;
    v33 = v96;
    sub_1BB420614(v28, (uint64_t *)&v102);
    v96 = v33;
    if (v33)
      break;
    swift_release();
    ++v32;
    if (v26 == v31)
      goto LABEL_16;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB420614(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  unsigned int v18;
  _QWORD *v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned __int8 v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_1BA4A3FB4(0, &qword_1EF2C51B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  MEMORY[0x1E0C80A78](v5);
  v69 = (uint64_t)&v58 - v6;
  v7 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  v70 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2C39D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - v11;
  v13 = type metadata accessor for FormatCompilingSlotDefinition(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(unsigned __int16 *)(a1 + 60);
  if ((v18 >> 13) - 1 < 3)
    goto LABEL_2;
  if (v18 >> 13)
  {
    swift_beginAccess();
    v32 = *(_QWORD *)(a1 + 64);
    if (v32 >> 62)
      goto LABEL_39;
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v33)
      return swift_bridgeObjectRelease();
LABEL_11:
    v34 = 4;
    while (1)
    {
      v35 = v34 - 4;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v36 = MEMORY[0x1BCCE4630](v34 - 4, v32);
        v37 = v34 - 3;
        if (__OFADD__(v35, 1))
          goto LABEL_38;
      }
      else
      {
        v36 = *(_QWORD *)(v32 + 8 * v34);
        swift_retain();
        v37 = v34 - 3;
        if (__OFADD__(v35, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          swift_bridgeObjectRetain();
          v33 = sub_1BB873F30();
          if (!v33)
            return swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      sub_1BB420614(v36, a2);
      swift_release();
      if (!v2)
      {
        ++v34;
        if (v37 != v33)
          continue;
      }
      return swift_bridgeObjectRelease();
    }
  }
  v21 = *(_QWORD *)(a1 + 32);
  if (v21 >= 0x40u)
  {
LABEL_2:
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    *v19 = 0xD00000000000004DLL;
    v19[1] = 0x80000001BB98C360;
LABEL_3:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v59 = a2;
  v60 = v17;
  v23 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(a1 + 40);
  v63 = *(_QWORD *)(a1 + 48);
  v64 = v24;
  v62 = *(unsigned int *)(a1 + 56) | ((unint64_t)(unsigned __int16)v18 << 32);
  v25 = *(_QWORD *)(v71 + 16);
  v26 = *(_QWORD *)(v25 + 16);
  v67 = v23;
  v68 = v22;
  v65 = v21;
  v66 = v25;
  if (v26)
  {
    v61 = v9;
    v27 = v22;
    v28 = v21;
    sub_1BA895B64(v23, v22, v21);
    sub_1BA895B64(v23, v27, v28);
    v29 = v66;
    v30 = sub_1BA6E35A8(v23, v27);
    if ((v31 & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v14 + 72) * v30, (uint64_t)v12, type metadata accessor for FormatCompilingSlotDefinition);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    }
    v41 = v65;
    sub_1BAA5AE40(v23, v68, v65, v64, v63, v62);
    v9 = v61;
  }
  else
  {
    v38 = v23;
    v39 = v22;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v14 + 56))(v12, 1, 1, v13, v15);
    v40 = v38;
    v41 = v65;
    sub_1BA895B64(v40, v39, v65);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BA502AD0((uint64_t)v12, &qword_1EF2C39D8, (void (*)(uint64_t))type metadata accessor for FormatCompilingSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v43 = v42;
    v44 = swift_bridgeObjectRetain();
    v45 = sub_1BA85C6FC(v44);
    swift_bridgeObjectRelease();
    *v43 = 0;
    v43[1] = 0xE000000000000000;
    v46 = v68;
    v43[2] = v67;
    v43[3] = v46;
    v43[4] = v45;
    goto LABEL_3;
  }
  v47 = (uint64_t)v12;
  v48 = (uint64_t)v60;
  sub_1BA5193C4(v47, (uint64_t)v60, type metadata accessor for FormatCompilingSlotDefinition);
  v50 = v67;
  v49 = v68;
  sub_1BB420C6C(v59, v67, v68, v41 & 1, v48, (uint64_t)v9);
  if (v2)
  {
    sub_1BA4A2E80(v48, type metadata accessor for FormatCompilingSlotDefinition);
    return sub_1BAA5AE40(v50, v49, v41, v64, v63, v62);
  }
  swift_beginAccess();
  v51 = *(_QWORD *)(a1 + 64);
  if (v51 >> 62)
    goto LABEL_42;
  v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v52)
  {
LABEL_29:
    v53 = v51 & 0xC000000000000001;
    v54 = 4;
    v61 = (char *)v7;
    v66 = v51;
    do
    {
      v55 = v54 - 4;
      if (v53)
      {
        v51 = MEMORY[0x1BCCE4630](v54 - 4, v51);
        v7 = v54 - 3;
        if (__OFADD__(v55, 1))
          goto LABEL_41;
      }
      else
      {
        v51 = *(_QWORD *)(v51 + 8 * v54);
        swift_retain();
        v7 = v54 - 3;
        if (__OFADD__(v55, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          swift_bridgeObjectRetain();
          v52 = sub_1BB873F30();
          if (!v52)
            break;
          goto LABEL_29;
        }
      }
      sub_1BB420EA8((_QWORD *)v51, (uint64_t)v9);
      swift_release();
      ++v54;
      v56 = v7 == v52;
      v7 = (uint64_t)v61;
      v51 = v66;
    }
    while (!v56);
  }
  swift_bridgeObjectRelease();
  v57 = v69;
  sub_1BA4C2DD8((uint64_t)v9, v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v57, 0, 1, v7);
  sub_1BB4AA110(v57, v67, v68);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
  return sub_1BA4A2E80((uint64_t)v60, type metadata accessor for FormatCompilingSlotDefinition);
}

uint64_t sub_1BB420C6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v24;
  _BYTE v25[12];
  int v26;

  v26 = a4;
  sub_1BA4A3FB4(0, &qword_1EF2C51B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v25[-v12];
  v14 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = *a1;
  if (!*(_QWORD *)(v19 + 16))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double))(v15 + 56))(v13, 1, 1, v14, v16);
LABEL_7:
    sub_1BA502AD0((uint64_t)v13, &qword_1EF2C51B0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    return sub_1BA4C2DD8(a5, a6, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  }
  swift_bridgeObjectRetain();
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v21 & 1) != 0)
  {
    sub_1BA4C2DD8(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v15 + 72) * v20, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v22, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_7;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
  if ((v26 & 1) != 0)
    return sub_1BA5193C4((uint64_t)v18, a6, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  *v24 = a2;
  v24[1] = a3;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_willThrow();
  return sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

void sub_1BB420EA8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[19];
  _BYTE v18[48];
  _WORD v19[108];
  char *v20;

  v17[8] = a2;
  v3 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1E0C80A78](v3);
  v17[9] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v5);
  v17[5] = (char *)v17 - v6;
  v7 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1E0C80A78](v7);
  v20 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  v17[6] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v17[0] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v17[1] = (char *)v17 - v12;
  v13 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v13);
  v14 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1E0C80A78](v14);
  v17[7] = (char *)v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA5ADC8((uint64_t)(a1 + 2), (uint64_t)v18);
  v16 = a1[2];
  v17[3] = a1[3];
  v17[4] = v16;
  v17[2] = a1[4];
  sub_1BAA5ADC8((uint64_t)v18, (uint64_t)v19);
  __asm { BR              X11 }
}

uint64_t sub_1BB4210B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __n128 *v9;
  void (*v10)(void);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(v1 + 240) = a1;
  *(_WORD *)(v1 + 244) = WORD2(a1) & 0x1FFF;
  sub_1BB425B84((__n128 *)(v1 + 200), (__n128 *)(v1 + 248));
  sub_1BB425B84((__n128 *)(v1 + 248), (__n128 *)(v7 - 136));
  v8 = *(_BYTE *)(v7 - 120);
  if ((v8 & 0xC0) == 0x40)
  {
    *(_BYTE *)(v7 - 120) = v8 & 0x3F;
    sub_1BA7BE748((__n128 *)(v7 - 136), (__n128 *)(v7 - 112));
    v9 = *(__n128 **)(v1 + 56);
    v10 = *(void (**)(void))(*(_QWORD *)(v1 + 48) + 56);
    *(_QWORD *)(v7 - 72) = (char *)v9 + *(int *)(v5 + 20);
    v10();
    sub_1BA7BE748((__n128 *)(v7 - 112), v9);
    swift_beginAccess();
    v11 = *(_QWORD *)(v4 + 64);
    if (v11 >> 62)
    {
      sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      swift_bridgeObjectRetain();
      v12 = sub_1BB873F30();
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v1 + 72) = v6;
    *(_QWORD *)(v1 + 32) = v3;
    if (v12)
    {
      v13 = 4;
      while (1)
      {
        v14 = v13 - 4;
        if ((v11 & 0xC000000000000001) != 0)
        {
          v15 = MEMORY[0x1BCCE4630](v13 - 4, v11);
          v16 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v16)
            goto LABEL_16;
        }
        else
        {
          v15 = *(_QWORD *)(v11 + 8 * v13);
          swift_retain();
          v16 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v16)
          {
LABEL_16:
            __break(1u);
            JUMPOUT(0x1BB4218A0);
          }
        }
        sub_1BB421994(v15, *(_QWORD *)(v1 + 56));
        swift_release();
        if (v2)
          break;
        ++v13;
        if (v17 == v12)
          goto LABEL_13;
      }
      sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
      swift_bridgeObjectRelease();
      return sub_1BA4A2E80(*(_QWORD *)(v1 + 56), (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingItemResult);
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1BB060880();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      v19 = *(uint64_t **)(v1 + 56);
      v20 = *v19;
      v21 = v19[1];
      *(_QWORD *)(inited + 32) = *v19;
      *(_QWORD *)(inited + 40) = v21;
      sub_1BA682148(v20, v21);
      v22 = sub_1BA8639BC(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      v23 = *(_QWORD **)(v1 + 8);
      v24 = (char *)v23 + *(int *)(*(_QWORD *)(v1 + 72) + 36);
      v25 = sub_1BB86E710();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
      *v23 = 0x100000001;
      v26 = MEMORY[0x1E0DEE9D8];
      v23[1] = v22;
      v23[2] = v26;
      v23[3] = 0;
      v23[4] = 0;
      v27 = *(_QWORD **)(v1 + 32);
      v28 = *(_QWORD *)(v1 + 64);
      sub_1BB5F9054((uint64_t)v23, *(_QWORD *)(v7 - 72), v27);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BA7229AC((uint64_t)v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
      return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingItemResult);
    }
  }
  else
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v31 = v30;
    *(_QWORD *)(v1 + 128) = 0;
    *(_QWORD *)(v1 + 136) = 0xE000000000000000;
    sub_1BB873CB4();
    v32 = *(_QWORD *)(v1 + 136);
    *(_QWORD *)(v1 + 128) = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v1 + 136) = v32;
    sub_1BB872AFC(" valid within switch");
    sub_1BA895B64(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
    sub_1BAA51F70(v1 + 152);
    sub_1BB425BC0(v1 + 152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
    v33 = *(_QWORD *)(v1 + 136);
    *v31 = *(_QWORD *)(v1 + 128);
    v31[1] = v33;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

void sub_1BB421994(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  _BYTE v11[48];
  _WORD v12[100];
  char *v13;

  v10[3] = a2;
  v3 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1E0C80A78](v4);
  v13 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v6);
  v10[2] = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FormatDerivedDataBindingAuxiliaryResult();
  MEMORY[0x1E0C80A78](v9);
  sub_1BAA5ADC8(a1 + 16, (uint64_t)v11);
  sub_1BAA5ADC8((uint64_t)v11, (uint64_t)v12);
  __asm { BR              X11 }
}

uint64_t sub_1BB421B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  *(_DWORD *)(v1 + 144) = a1;
  *(_WORD *)(v1 + 148) = WORD2(a1) & 0x1FFF;
  sub_1BB425B84((__n128 *)(v1 + 104), (__n128 *)(v1 + 152));
  sub_1BB425B84((__n128 *)(v1 + 152), (__n128 *)(v6 - 120));
  v7 = *(unsigned __int8 *)(v6 - 104);
  if ((v7 & 0xC0) != 0x80 || v7 != 128 || *(_QWORD *)(v6 - 112) || *(_QWORD *)(v6 - 120) != 4)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v20 = v19;
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0xE000000000000000;
    sub_1BB873CB4();
    v21 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 32) = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 40) = v21;
    sub_1BB872AFC("lid within a slot, ");
    sub_1BB425BC0(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    sub_1BAA51F70(v1 + 56);
    sub_1BB425BC0(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
    v22 = *(_QWORD *)(v1 + 40);
    *v20 = *(_QWORD *)(v1 + 32);
    v20[1] = v22;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v8 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v1 + 8) = v5;
  if (v9 >> 62)
  {
    sub_1BB425BC0(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    if (v10)
    {
LABEL_7:
      v11 = v9 & 0xC000000000000001;
      v12 = 4;
      *(_QWORD *)(v6 - 72) = v9;
      while (1)
      {
        v13 = v12 - 4;
        if (v11)
        {
          v14 = MEMORY[0x1BCCE4630](v12 - 4, v9);
          v15 = __OFADD__(v13, 1);
          v16 = v12 - 3;
          if (v15)
            goto LABEL_21;
        }
        else
        {
          v14 = *(_QWORD *)(v9 + 8 * v12);
          swift_retain();
          v15 = __OFADD__(v13, 1);
          v16 = v12 - 3;
          if (v15)
          {
LABEL_21:
            __break(1u);
            JUMPOUT(0x1BB422204);
          }
        }
        sub_1BB42326C(v14, v4);
        swift_release();
        if (v2)
          break;
        ++v12;
        v9 = *(_QWORD *)(v6 - 72);
        if (v16 == v10)
          goto LABEL_15;
      }
      sub_1BB425BC0(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
      swift_bridgeObjectRelease();
      return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingAuxiliaryResult);
    }
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1BB425BC0(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_7;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v1 + 24) + *(int *)(type metadata accessor for FormatDerivedDataBindingItemResult() + 20);
  v18 = *(_QWORD *)(v1 + 8);
  sub_1BB41F6DC(v17, v4, v18);
  if (!v2)
    sub_1BAA442C4(v18, v17);
  sub_1BB425BC0(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingAuxiliaryResult);
}

void sub_1BB4222EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v4[48];
  _BYTE v5[40];
  uint64_t v7;

  v7 = a2;
  v3 = type metadata accessor for FormatDerivedDataBindingSwitchCaseResult();
  MEMORY[0x1E0C80A78](v3);
  sub_1BAA5ADC8(a1 + 16, (uint64_t)v4);
  sub_1BAA5ADC8((uint64_t)v4, (uint64_t)v5);
  __asm { BR              X11 }
}

uint64_t sub_1BB422394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v1 - 168) = a1;
  *(_WORD *)(v1 - 164) = WORD2(a1) & 0x1FFF;
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  v3 = v2;
  *(_QWORD *)(v1 - 280) = 0;
  *(_QWORD *)(v1 - 272) = 0xE000000000000000;
  sub_1BB873CB4();
  v4 = *(_QWORD *)(v1 - 272);
  *(_QWORD *)(v1 - 280) = *(_QWORD *)(v1 - 280);
  *(_QWORD *)(v1 - 272) = v4;
  sub_1BB872AFC("t not create items inside items");
  sub_1BB425BC0(v1 - 256, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
  sub_1BAA51F70(v1 - 256);
  sub_1BB425BC0(v1 - 256, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
  v5 = *(_QWORD *)(v1 - 272);
  *v3 = *(_QWORD *)(v1 - 280);
  v3[1] = v5;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BB422758(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[17];
  _BYTE v20[48];
  _WORD v21[108];
  char *v22;

  v19[6] = a2;
  v3 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1E0C80A78](v3);
  v22 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1E0C80A78](v5);
  v19[7] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v7);
  v19[4] = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v19[5] = (char *)v19 - v10;
  MEMORY[0x1E0C80A78](v11);
  v19[1] = (char *)v19 - v12;
  MEMORY[0x1E0C80A78](v13);
  v19[3] = (char *)v19 - v14;
  MEMORY[0x1E0C80A78](v15);
  v19[2] = (char *)v19 - v16;
  MEMORY[0x1E0C80A78](v17);
  v18 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1E0C80A78](v18);
  sub_1BAA5ADC8(a1 + 16, (uint64_t)v20);
  sub_1BAA5ADC8((uint64_t)v20, (uint64_t)v21);
  __asm { BR              X11 }
}

uint64_t sub_1BB42295C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  *(_DWORD *)(v1 + 224) = a1;
  *(_WORD *)(v1 + 228) = WORD2(a1) & 0x1FFF;
  sub_1BB425B84((__n128 *)(v1 + 184), (__n128 *)(v1 + 232));
  sub_1BB425B84((__n128 *)(v1 + 232), (__n128 *)(v8 - 136));
  v9 = *(_BYTE *)(v8 - 120);
  if ((v9 & 0xC0) == 0x40)
  {
    *(_QWORD *)(v1 + 56) = v5;
    *(_BYTE *)(v8 - 120) = v9 & 0x3F;
    sub_1BA7BE748((__n128 *)(v8 - 136), (__n128 *)(v8 - 112));
    v10 = (char *)v6 + *(int *)(v7 + 20);
    v11 = type metadata accessor for FormatSlotDefinitionItemSet();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    *(_QWORD *)(v1 + 32) = v12;
    *(_QWORD *)(v1 + 40) = v11;
    v12(v10, 1, 1);
    sub_1BA7BE748((__n128 *)(v8 - 112), v6);
    swift_beginAccess();
    v13 = *(_QWORD *)(v4 + 64);
    if (v13 >> 62)
    {
      sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      swift_bridgeObjectRetain();
      v14 = sub_1BB873F30();
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v8 - 72) = v6;
    *(_QWORD *)v1 = v3;
    if (v14)
    {
      v15 = 4;
      while (1)
      {
        v16 = v15 - 4;
        if ((v13 & 0xC000000000000001) != 0)
        {
          v17 = MEMORY[0x1BCCE4630](v15 - 4, v13);
          v18 = __OFADD__(v16, 1);
          v19 = v15 - 3;
          if (v18)
            goto LABEL_19;
        }
        else
        {
          v17 = *(_QWORD *)(v13 + 8 * v15);
          swift_retain();
          v18 = __OFADD__(v16, 1);
          v19 = v15 - 3;
          if (v18)
          {
LABEL_19:
            __break(1u);
            JUMPOUT(0x1BB42317CLL);
          }
        }
        sub_1BB421994(v17, *(_QWORD *)(v8 - 72));
        swift_release();
        if (v2)
          break;
        ++v15;
        if (v19 == v14)
          goto LABEL_13;
      }
      sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(v8 - 72);
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v1 + 48) + *(int *)(*(_QWORD *)v1 + 20);
      sub_1BB060880();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      v22 = *(uint64_t **)(v8 - 72);
      v23 = *v22;
      v24 = v22[1];
      *(_QWORD *)(inited + 32) = *v22;
      *(_QWORD *)(inited + 40) = v24;
      sub_1BA682148(v23, v24);
      v25 = sub_1BA8639BC(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      v26 = *(_QWORD *)(v1 + 40);
      v27 = *(_QWORD **)(v1 + 16);
      v28 = (char *)v27 + *(int *)(v26 + 36);
      v29 = sub_1BB86E710();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
      *v27 = 0x100000001;
      v30 = MEMORY[0x1E0DEE9D8];
      v27[1] = v25;
      v27[2] = v30;
      v27[3] = 0;
      v27[4] = 0;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1 + 32))(v27, 0, 1, v26);
      v31 = *(_QWORD *)(v1 + 56);
      sub_1BB41F6DC(v20, (uint64_t)v27, v31);
      sub_1BA502AD0((uint64_t)v27, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      if (!v2)
        sub_1BAA442C4(v31, v20);
      sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
      v32 = (uint64_t)v22;
    }
    return sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingItemResult);
  }
  else
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v34 = v33;
    *(_QWORD *)(v1 + 112) = 0;
    *(_QWORD *)(v1 + 120) = 0xE000000000000000;
    sub_1BB873CB4();
    v35 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v1 + 112) = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v1 + 120) = v35;
    sub_1BB872AFC("t not create items inside items");
    sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    sub_1BAA51F70(v1 + 136);
    sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
    v36 = *(_QWORD *)(v1 + 120);
    *v34 = *(_QWORD *)(v1 + 112);
    v34[1] = v36;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

void sub_1BB42326C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[11];
  _BYTE v18[48];
  _WORD v19[108];
  char *v20;

  v17[5] = a2;
  v3 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v5);
  v17[4] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v17[1] = (char *)v17 - v9;
  MEMORY[0x1E0C80A78](v10);
  v17[2] = (char *)v17 - v11;
  MEMORY[0x1E0C80A78](v12);
  v17[3] = (char *)v17 - v13;
  v14 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1E0C80A78](v14);
  v17[7] = (char *)v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1E0C80A78](v16);
  v17[6] = a1;
  sub_1BAA5ADC8(a1 + 16, (uint64_t)v18);
  sub_1BAA5ADC8((uint64_t)v18, (uint64_t)v19);
  __asm { BR              X11 }
}

uint64_t sub_1BB423454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  *(_DWORD *)(v1 + 176) = a1;
  *(_WORD *)(v1 + 180) = WORD2(a1) & 0x1FFF;
  sub_1BB425B84((__n128 *)(v1 + 136), (__n128 *)(v1 + 184));
  sub_1BB425B84((__n128 *)(v1 + 184), (__n128 *)(v5 - 136));
  v6 = *(_BYTE *)(v5 - 120);
  if ((v6 & 0xC0) != 0x40)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v20 = v19;
    *(_QWORD *)(v1 + 64) = 0;
    *(_QWORD *)(v1 + 72) = 0xE000000000000000;
    sub_1BB873CB4();
    v21 = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v1 + 64) = *(_QWORD *)(v1 + 64);
    *(_QWORD *)(v1 + 72) = v21;
    sub_1BB872AFC("t not create items inside items");
    sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    sub_1BAA51F70(v1 + 88);
    sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
    v22 = *(_QWORD *)(v1 + 72);
    *v20 = *(_QWORD *)(v1 + 64);
    v20[1] = v22;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  *(_BYTE *)(v5 - 120) = v6 & 0x3F;
  sub_1BA7BE748((__n128 *)(v5 - 136), (__n128 *)(v5 - 112));
  v7 = (char *)v3 + *(int *)(v4 + 20);
  v8 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1BA7BE748((__n128 *)(v5 - 112), v3);
  v9 = *(_QWORD *)(v1 + 48);
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v5 - 72) = v10;
  if (v10 >> 62)
  {
    sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    v12 = *(_QWORD *)(v5 - 72);
    sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    swift_bridgeObjectRetain();
    v11 = sub_1BB873F30();
    if (v11)
    {
LABEL_4:
      v13 = v12 & 0xC000000000000001;
      v14 = 4;
      while (1)
      {
        v15 = v14 - 4;
        if (v13)
        {
          v16 = MEMORY[0x1BCCE4630](v14 - 4, v12);
          v17 = __OFADD__(v15, 1);
          v18 = v14 - 3;
          if (v17)
            goto LABEL_16;
        }
        else
        {
          v16 = *(_QWORD *)(v12 + 8 * v14);
          swift_retain();
          v17 = __OFADD__(v15, 1);
          v18 = v14 - 3;
          if (v17)
          {
LABEL_16:
            __break(1u);
            JUMPOUT(0x1BB423C18);
          }
        }
        sub_1BB421994(v16, (uint64_t)v3);
        swift_release();
        if (v2)
          break;
        ++v14;
        v12 = *(_QWORD *)(v5 - 72);
        if (v18 == v11)
          goto LABEL_12;
      }
      sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
      swift_bridgeObjectRelease();
      return sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingItemResult);
    }
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    v12 = *(_QWORD *)(v5 - 72);
    sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_4;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  sub_1BB06063C((uint64_t *)v3);
  sub_1BB425BC0(v1 + 88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BAA5AE40);
  return sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingItemResult);
}

uint64_t sub_1BB423D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[17];
  _BYTE v21[48];
  _WORD v22[36];

  v4 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  MEMORY[0x1E0C80A78](v4);
  v20[7] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  MEMORY[0x1E0C80A78](v6);
  v20[6] = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatDerivedDataBindingAuxiliaryResult();
  MEMORY[0x1E0C80A78](v8);
  v20[4] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v20[1] = (char *)v20 - v12;
  MEMORY[0x1E0C80A78](v13);
  v20[3] = (char *)v20 - v14;
  MEMORY[0x1E0C80A78](v15);
  v20[2] = (char *)v20 - v16;
  v17 = type metadata accessor for FormatDerivedDataBindingItemResult();
  MEMORY[0x1E0C80A78](v17);
  v20[5] = a2;
  if (*(_BYTE *)(a2 + 9) == 1)
  {
    sub_1BAA5ADC8(a1 + 16, (uint64_t)v21);
    sub_1BAA5ADC8((uint64_t)v21, (uint64_t)v22);
    __asm { BR              X11 }
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  *(_BYTE *)v18 = 5;
  *(_QWORD *)(v18 + 8) = 0xD00000000000007ALL;
  *(_QWORD *)(v18 + 16) = 0x80000001BB97A660;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BB424354(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_DWORD *)(v1 + 224) = a1;
  *(_WORD *)(v1 + 228) = WORD2(a1) & 0x1FFF;
  v6 = *(_OWORD *)(v1 + 200);
  v7 = *(_OWORD *)(v1 + 214);
  *(_OWORD *)(v5 - 192) = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(v5 - 176) = v6;
  *(_OWORD *)(v1 + 318) = v7;
  v8 = *(_OWORD **)(v1 + 56);
  v9 = (char *)v8 + *(int *)(v4 + 20);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = *(_OWORD *)(v5 - 176);
  *v8 = *(_OWORD *)(v5 - 192);
  v8[1] = v11;
  *(_OWORD *)((char *)v8 + 30) = *(_OWORD *)(v1 + 318);
  swift_beginAccess();
  v12 = *(_QWORD *)(v3 + 64);
  if (v12 >> 62)
  {
    sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    swift_bridgeObjectRetain();
    v13 = sub_1BB873F30();
    if (!v13)
      goto LABEL_11;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1BB425BC0(v1 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1BB425B48);
    swift_bridgeObjectRetain();
    if (!v13)
      goto LABEL_11;
  }
  v14 = 4;
  do
  {
    v15 = v14 - 4;
    if ((v12 & 0xC000000000000001) != 0)
    {
      v16 = MEMORY[0x1BCCE4630](v14 - 4, v12);
      v17 = v14 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_14;
    }
    else
    {
      v16 = *(_QWORD *)(v12 + 8 * v14);
      swift_retain();
      v17 = v14 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_14:
        __break(1u);
        JUMPOUT(0x1BB4248C4);
      }
    }
    sub_1BB422758(v16, *(_QWORD *)(v1 + 56));
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      JUMPOUT(0x1BB4248B0);
    }
    swift_release();
    ++v14;
  }
  while (v17 != v13);
LABEL_11:
  swift_bridgeObjectRelease();
  sub_1BB10F140();
  JUMPOUT(0x1BB424494);
}

void sub_1BB4244A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)(v1 + 224) = a1;
  *(_WORD *)(v1 + 228) = WORD2(a1) & 0x1FFF;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (!v5)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5)
      goto LABEL_13;
  }
  v6 = 4;
  while (1)
  {
    v7 = v6 - 4;
    if ((v4 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x1BCCE4630](v6 - 4, v4);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_14;
    }
    else
    {
      v8 = *(_QWORD *)(v4 + 8 * v6);
      swift_retain();
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_14:
        __break(1u);
        JUMPOUT(0x1BB4248C8);
      }
    }
    sub_1BB423D10(v8, *(_QWORD *)(v1 + 40));
    if (v2)
      break;
    swift_release();
    ++v6;
    if (v9 == v5)
      goto LABEL_13;
  }
  swift_release();
LABEL_13:
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BB424330);
}

uint64_t sub_1BB424A00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDerivedDataBinder()
{
  return objc_opt_self();
}

uint64_t sub_1BB424A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t result;
  int64_t v27;
  unint64_t v28;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t *v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[2];
  unsigned __int8 v84;
  uint64_t v85;

  v5 = v4;
  v6 = v3;
  v77 = a3;
  sub_1BAA9864C();
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v71 = (uint64_t)&v65 - v12;
  v13 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v13);
  v78 = (uint64_t)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  v76 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v75 = (uint64_t)&v65 - v18;
  if (*(_QWORD *)(a2 + 16))
  {
    swift_beginAccess();
    v19 = swift_bridgeObjectRetain();
    sub_1BB55245C(v19);
    swift_endAccess();
  }
  if (*(_QWORD *)(a1 + 16))
  {
    swift_beginAccess();
    v20 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v20);
    swift_endAccess();
  }
  v21 = *(_QWORD *)(v77 + 56);
  v68 = v77 + 56;
  v22 = 1 << *(_BYTE *)(v77 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v25 = (uint64_t *)(v6 + 24);
  v66 = (unint64_t *)(v6 + 32);
  v67 = (unint64_t *)(v6 + 40);
  v69 = (unint64_t)(v22 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v27 = 0;
  while (1)
  {
    if (v24)
    {
      v81 = (v24 - 1) & v24;
      v28 = __clz(__rbit64(v24)) | (v27 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v27++, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v27 >= v69)
      return swift_release();
    v30 = *(_QWORD *)(v68 + 8 * v27);
    if (!v30)
      break;
LABEL_22:
    v81 = (v30 - 1) & v30;
    v28 = __clz(__rbit64(v30)) + (v27 << 6);
LABEL_23:
    v32 = v75;
    sub_1BA4C2DD8(*(_QWORD *)(v77 + 48) + *(_QWORD *)(v76 + 72) * v28, v75, type metadata accessor for FormatDerivedDataResultOptionReference);
    sub_1BA5193C4(v32, (uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
    v33 = swift_bridgeObjectRetain();
    v34 = sub_1BB16103C(v33);
    if (v5)
    {
      sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
      return swift_release();
    }
    v37 = v34;
    v38 = v35;
    v39 = v36;
    v79 = v27;
    v80 = 0;
    v41 = *((_QWORD *)v16 + 1);
    v40 = *((_QWORD *)v16 + 2);
    swift_beginAccess();
    v42 = *v25;
    v43 = *(_QWORD *)(*v25 + 16);
    swift_bridgeObjectRetain();
    if (v43)
    {
      v44 = sub_1BA6E35A8(v41, v40);
      v45 = MEMORY[0x1E0DEE9E8];
      if ((v46 & 1) != 0)
      {
        v45 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v44);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v45 = MEMORY[0x1E0DEE9E8];
    }
    swift_bridgeObjectRelease();
    v85 = v45;
    swift_endAccess();
    sub_1BA9ED4DC(v37, v38, v39);
    sub_1BA9D9CB4((uint64_t)v83, v37, v38, v39);
    sub_1BA865168(v83[0], v83[1], v84);
    v47 = v85;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v82 = *v25;
    *v25 = 0x8000000000000000;
    sub_1BB4BF54C(v47, v41, v40, isUniquelyReferenced_nonNull_native);
    *v25 = v82;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v49 = v78;
    sub_1BA4C2DD8((uint64_t)&v16[*(int *)(v70 + 28)], v78, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    sub_1BA8D4E18();
    v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50);
    v52 = *(int *)(v74 + 48);
    if (v51 == 1)
    {
      v53 = v71 + v52;
      sub_1BA4C2DD8((uint64_t)v16, v71, type metadata accessor for FormatDerivedDataResultOptionReference);
      *(_QWORD *)v53 = v37;
      *(_QWORD *)(v53 + 8) = v38;
      *(_BYTE *)(v53 + 16) = v39;
      v54 = v66;
      swift_beginAccess();
      v55 = *v54;
      v56 = swift_isUniquelyReferenced_nonNull_native();
      *v54 = v55;
      v5 = v80;
      if ((v56 & 1) == 0)
      {
        v55 = sub_1BB390D38(0, *(_QWORD *)(v55 + 16) + 1, 1, v55);
        *v66 = v55;
      }
      v58 = *(_QWORD *)(v55 + 16);
      v57 = *(_QWORD *)(v55 + 24);
      if (v58 >= v57 >> 1)
      {
        v55 = sub_1BB390D38(v57 > 1, v58 + 1, 1, v55);
        *v66 = v55;
      }
      *(_QWORD *)(v55 + 16) = v58 + 1;
      sub_1BA5193C4(v71, v55+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v73 + 72) * v58, (uint64_t (*)(_QWORD))sub_1BAA9864C);
      swift_endAccess();
      result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
    }
    else
    {
      v59 = v72 + v52;
      sub_1BA4C2DD8((uint64_t)v16, v72, type metadata accessor for FormatDerivedDataResultOptionReference);
      *(_QWORD *)v59 = v37;
      *(_QWORD *)(v59 + 8) = v38;
      *(_BYTE *)(v59 + 16) = v39;
      v60 = v67;
      swift_beginAccess();
      v61 = *v60;
      v62 = swift_isUniquelyReferenced_nonNull_native();
      *v60 = v61;
      v5 = v80;
      if ((v62 & 1) == 0)
      {
        v61 = sub_1BB390D38(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
        *v67 = v61;
      }
      v64 = *(_QWORD *)(v61 + 16);
      v63 = *(_QWORD *)(v61 + 24);
      if (v64 >= v63 >> 1)
      {
        v61 = sub_1BB390D38(v63 > 1, v64 + 1, 1, v61);
        *v67 = v61;
      }
      *(_QWORD *)(v61 + 16) = v64 + 1;
      sub_1BA5193C4(v72, v61+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v73 + 72) * v64, (uint64_t (*)(_QWORD))sub_1BAA9864C);
      swift_endAccess();
      sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatDerivedDataResultOptionReference);
      result = sub_1BA502AD0(v78, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
    }
    v27 = v79;
    v24 = v81;
  }
  v31 = v27 + 1;
  if (v27 + 1 >= v69)
    return swift_release();
  v30 = *(_QWORD *)(v68 + 8 * v31);
  if (v30)
    goto LABEL_21;
  v31 = v27 + 2;
  if (v27 + 2 >= v69)
    return swift_release();
  v30 = *(_QWORD *)(v68 + 8 * v31);
  if (v30)
    goto LABEL_21;
  v31 = v27 + 3;
  if (v27 + 3 >= v69)
    return swift_release();
  v30 = *(_QWORD *)(v68 + 8 * v31);
  if (v30)
  {
LABEL_21:
    v27 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v27 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v27 >= v69)
      return swift_release();
    v30 = *(_QWORD *)(v68 + 8 * v27);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_45:
  __break(1u);
  return result;
}

_QWORD *sub_1BB42514C(uint64_t a1)
{
  uint64_t i;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
    {
      v2 = *(_QWORD *)(v4 + 32 * i + 8);
      if (*(_QWORD *)(v2 + 16))
      {
        swift_bridgeObjectRetain();
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for FormatDerivedDataBindingNode();
    result = (_QWORD *)swift_allocObject();
    result[2] = 0;
    result[3] = 0;
    result[5] = 0;
    result[6] = 0;
    result[4] = 128;
    *(_QWORD *)((char *)result + 54) = 0;
    result[8] = MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BB425B48(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  switch((a6 >> 45) & 7)
  {
    case 0uLL:
      result = sub_1BA895B64(result, a2, a3);
      break;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

__n128 *sub_1BB425B84(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

uint64_t sub_1BB425BC0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  return a1;
}

uint64_t sub_1BB425C6C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed10FormatView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedLayoutCacheItem.groupLayoutIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedLayoutCacheItem.layoutResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_BYTE *)(v1 + 72);
  v6 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedLayoutCache.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BA8414AC();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BB86E7AC();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_QWORD *)(v0 + 72) = 0;
  return v0;
}

uint64_t FeedLayoutCache.init()()
{
  uint64_t v0;

  sub_1BA8414AC();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BB86E7AC();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_QWORD *)(v0 + 72) = 0;
  return v0;
}

_QWORD *FeedLayoutCache.__allocating_init(database:)(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)swift_allocObject();
  sub_1BA8414AC();
  swift_allocObject();
  v2[2] = sub_1BB86E7AC();
  v2[8] = 0;
  v2[9] = 0;
  sub_1BA83A2F8(a1, (uint64_t)(v2 + 3));
  return v2;
}

uint64_t FeedLayoutCache.lookup(cacheKey:)()
{
  return sub_1BB86E7D0();
}

uint64_t FeedLayoutCache.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BA6A7554(v0 + 24);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedLayoutCache.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BA6A7554(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FeedLayoutCacheKey.hashValue.getter()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  FeedLayoutCacheKey.hash(into:)((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t sub_1BB425F08()
{
  _BYTE v1[72];

  sub_1BB8745CC();
  FeedLayoutCacheKey.hash(into:)((uint64_t)v1);
  return sub_1BB874608();
}

uint64_t sub_1BB425F48()
{
  sub_1BB8745FC();
  return sub_1BB8745FC();
}

uint64_t assignWithCopy for FeedLayoutCacheItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for FeedLayoutCacheItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for FeedLayoutCacheItem()
{
  return &type metadata for FeedLayoutCacheItem;
}

uint64_t dispatch thunk of FeedLayoutCacheType.set(session:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FeedLayoutCacheType.lookup(cacheKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedLayoutCacheType.bindLookup(cacheKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FeedLayoutCacheType.store(cacheKey:feedGroupLayout:layoutResult:saveToDatabase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t method lookup function for FeedLayoutCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedLayoutCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FeedLayoutCache.__allocating_init(database:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedLayoutCacheKey(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v8 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v8;
    v9 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v9;
    v10 = (void *)a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v10;
    *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
    *(_QWORD *)(a1 + 120) = a2[15];
    v11 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v11;
    v12 = *(int *)(a3 + 76);
    v18 = (uint64_t)a2 + v12;
    v19 = a1 + v12;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    v13 = sub_1BB86D93C();
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v10;
    swift_retain();
    v17(v19, v18, v13);
  }
  return v3;
}

uint64_t assignWithCopy for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v6 = *(void **)(a2 + 104);
  v7 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v6;
  v8 = v6;

  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v9 = *(int *)(a3 + 76);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  v7 = *(int *)(a3 + 76);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v10 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;

  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v14 = *(int *)(a3 + 76);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedLayoutCacheKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB426598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86D93C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 76), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedLayoutCacheKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB426620(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86D93C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 76), a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of PublisherLogoImageStylerType.publisherLogoTheme(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

BOOL static FormatSwitchListValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = type metadata accessor for FormatSwitchListValue.CaseValue(0, a3, a4, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB9164D8, v6);
  if ((sub_1BB872EEC() & 1) == 0)
    return 0;
  if (!v4)
  {
    if (!v5)
      return 1;
    goto LABEL_9;
  }
  if (!v5)
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_1BB872EEC();
  swift_bridgeObjectRelease_n();
  return (v7 & 1) != 0;
}

uint64_t FormatSwitchListValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v4;
  v26 = a1;
  v27 = a2;
  v7 = sub_1BB86EB00();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v12 = type metadata accessor for FormatSwitchListValue.CaseValue(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v11);
  v13 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1BCCE37E4](v13, v12))
    return swift_bridgeObjectRelease();
  v14 = 0;
  v15 = (uint64_t *)(v10 + 40);
  v23 = v10;
  while (1)
  {
    v16 = sub_1BB872E80();
    result = sub_1BB872E38();
    if ((v16 & 1) == 0)
      break;
    if (__OFADD__(v14, 1))
      goto LABEL_15;
    v19 = *(v15 - 1);
    v18 = *v15;
    v28 = v14 + 1;
    v29 = v19;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BA7049A8();
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    v31 = 0;
    swift_release();
    if ((sub_1BB86EAF4() & 1) == 0)
    {
      v29 = v19;
      v30 = v18;
      v20 = v31;
      sub_1BABD9464();
      v31 = v20;
      if (v20)
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    v21 = sub_1BB86EAE8();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
    if ((v21 & 1) == 0)
    {
      v22 = MEMORY[0x1BCCE37E4](v23, v12);
      ++v14;
      v15 += 2;
      v5 = v31;
      if (v28 != v22)
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  result = sub_1BB873D08();
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1BB4269B4(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatExpression.== infix(_:_:)((uint64_t)&v3);
  if ((v1 & 1) != 0)
    return sub_1BB872EEC();
  else
    return 0;
}

uint64_t sub_1BB426A28(uint64_t *a1)
{
  return sub_1BB4269B4(a1);
}

uint64_t FormatSwitchListValue.DefaultValue.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatSwitchListValue.DefaultValue.== infix(_:_:)()
{
  return sub_1BB872EEC();
}

uint64_t sub_1BB426A4C()
{
  return static FormatSwitchListValue.DefaultValue.== infix(_:_:)();
}

BOOL sub_1BB426A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatSwitchListValue.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BB426A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatSwitchListValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t sub_1BB426A78(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchListValue<A>.DefaultValue);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB426AA4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&protocol conformance descriptor for FormatSwitchListValue<A>.DefaultValue, (uint64_t)&protocol conformance descriptor for FormatSwitchListValue<A>.DefaultValue, (uint64_t)&protocol conformance descriptor for FormatSwitchListValue<A>.DefaultValue);
}

uint64_t sub_1BB426AC0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchListValue<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB426AEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&protocol conformance descriptor for FormatSwitchListValue<A>, (uint64_t)&protocol conformance descriptor for FormatSwitchListValue<A>, (uint64_t)&protocol conformance descriptor for FormatSwitchListValue<A>);
}

_QWORD *assignWithCopy for FormatCompilerSlotDefinitionItemSetAuxiliary(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB426B64(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&unk_1BB9164B0, (uint64_t)&unk_1BB916488, (uint64_t)&unk_1BB9164D8);
}

uint64_t sub_1BB426B80(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&unk_1BB916450);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t FormatGroup.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.requirements.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatGroup.contentSizeCategory.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

uint64_t FormatGroup.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroup.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.types.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatGroup.init(identifier:name:description:priority:columns:columnSystem:children:styles:sortBy:selectors:options:types:contentSizeCategory:requirements:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, _OWORD *a10, __int128 a11, __n128 a12, uint64_t a13, uint64_t a14, char *a15, uint64_t a16)
{
  __n128 result;
  char v17;
  char v18;

  result = a12;
  v17 = *a7;
  v18 = *a15;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = v17;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = *a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 112) = a13;
  *(_QWORD *)(a9 + 120) = a14;
  *(_BYTE *)(a9 + 128) = v18;
  *(_QWORD *)(a9 + 136) = a16;
  return result;
}

uint64_t FormatGroup.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatGroup.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t FormatGroup.sortBy.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroup.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroup.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatGroup.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatGroup.description.modify())(_QWORD)
{
  return nullsub_1;
}

_BYTE *FormatGroup.priority.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*FormatGroup.priority.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.columns.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatGroup.columns.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.columnSystem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA6BAD2C(v2, v3);
}

uint64_t FormatGroup.columnSystem.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BA79DDC8(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v3;
  return result;
}

uint64_t (*FormatGroup.columnSystem.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatGroup.children.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.styles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatGroup.styles.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.sortBy.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatGroup.sortBy.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatGroup.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatGroup.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.types.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*FormatGroup.types.modify())(_QWORD)
{
  return nullsub_1;
}

_BYTE *FormatGroup.contentSizeCategory.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 128) = *result;
  return result;
}

uint64_t (*FormatGroup.contentSizeCategory.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroup.requirements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 136) = a1;
  return result;
}

uint64_t (*FormatGroup.requirements.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB426FA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed11FormatGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  BOOL v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  unint64_t v46;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  v43 = *(_QWORD *)(a1 + 56);
  v39 = *(_QWORD *)(a1 + 64);
  v41 = *(_QWORD *)(a1 + 72);
  v37 = *(_QWORD *)(a1 + 80);
  v35 = *(_QWORD *)(a1 + 88);
  v33 = *(_QWORD *)(a1 + 96);
  v31 = *(_QWORD *)(a1 + 104);
  v29 = *(_QWORD *)(a1 + 112);
  v27 = *(_QWORD *)(a1 + 120);
  v25 = *(_BYTE *)(a1 + 128);
  v23 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v42 = *(_QWORD *)(a2 + 56);
  v38 = *(_QWORD *)(a2 + 64);
  v40 = *(_QWORD *)(a2 + 72);
  v36 = *(_QWORD *)(a2 + 80);
  v34 = *(_QWORD *)(a2 + 88);
  v32 = *(_QWORD *)(a2 + 96);
  v30 = *(_QWORD *)(a2 + 104);
  v28 = *(_QWORD *)(a2 + 112);
  v26 = *(_QWORD *)(a2 + 120);
  v24 = *(_BYTE *)(a2 + 128);
  v22 = *(_QWORD *)(a2 + 136);
  if ((*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)) && (sub_1BB874398() & 1) == 0)
    return 0;
  if (v4)
  {
    if (!v8 || (v2 != v7 || v4 != v8) && (sub_1BB874398() & 1) == 0)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if (v5)
  {
    if (!v10 || (v3 != v9 || v5 != v10) && (sub_1BB874398() & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  sub_1BB7FCFAC(v6);
  if ((v11 & 1) == 0 || (sub_1BA579D0C(v43, v42) & 1) == 0)
    return 0;
  if (v41 != 2)
  {
    v45 = v39;
    v46 = v41;
    if (v40 != 2)
    {
      v44[0] = v38;
      v44[1] = v40;
      sub_1BA6BAD2C(v39, v41);
      sub_1BA8C89D0(v39, v41);
      v12 = _s8NewsFeed23FormatGroupColumnSystemO2eeoiySbAC_ACtFZ_0(&v45, (uint64_t)v44);
      sub_1BA78DE14(v45, v46);
      sub_1BA79DDC8(v39, v41);
      if (!v12)
        return 0;
      goto LABEL_27;
    }
    sub_1BA8C89D0(v39, v41);
    sub_1BA8C89D0(v39, v41);
    sub_1BA78DE14(v39, v41);
LABEL_25:
    sub_1BA6BAD2C(v38, v40);
    sub_1BA79DDC8(v39, v41);
    sub_1BA79DDC8(v38, v40);
    return 0;
  }
  if (v40 != 2)
    goto LABEL_25;
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA883A18(v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA883C24(v35, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = sub_1BA88E0F8(v33, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16 = sub_1BA6EB330(v31, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = sub_1BA883260(v29, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v18 = sub_1BA88ABB4(v27, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v18 & 1) != 0)
            {
              LOBYTE(v45) = v25;
              LOBYTE(v44[0]) = v24;
              _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0((uint64_t)&v45);
              if ((v19 & 1) != 0)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v20 = sub_1BA892300(v23, v22);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v20 & 1;
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

unint64_t sub_1BB427410(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA896A68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB427434(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA7B9D34();
  a1[2] = sub_1BA836FB8();
  result = sub_1BB427468();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB427468()
{
  unint64_t result;

  result = qword_1ED3D01A0;
  if (!qword_1ED3D01A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroup, &type metadata for FormatGroup);
    atomic_store(result, (unint64_t *)&qword_1ED3D01A0);
  }
  return result;
}

uint64_t sub_1BB4274AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4274B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BB4274F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB427504(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1BB427544@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 48);
  return result;
}

_BYTE *sub_1BB427550(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 48) = *result;
  return result;
}

uint64_t sub_1BB42755C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB427568(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1BB4275A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4275B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1BB4275F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB427600(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1BB427640@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB42764C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_1BB42768C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB427698(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 104) = v3;
  return result;
}

uint64_t sub_1BB4276D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4276E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_1BB427724@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB427730(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 120) = v3;
  return result;
}

uint64_t sub_1BB427770@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 128);
  return result;
}

_BYTE *sub_1BB42777C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 128) = *result;
  return result;
}

uint64_t sub_1BB427788@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB427794(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 136) = v3;
  return result;
}

uint64_t assignWithCopy for FormatGroup(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a2 + 72);
  if (v4 == 2)
  {
    if (v5 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_1BA92760C(a1 + 64);
    goto LABEL_11;
  }
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1BB0EA510(a1 + 64);
    goto LABEL_11;
  }
  if (v5 < 2)
  {
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
LABEL_8:
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
LABEL_12:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v7 = (_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a2 + 72);
  if (v8 != 2)
  {
    if (v9 == 2)
    {
      sub_1BA92760C(a1 + 64);
    }
    else if (v8 >= 2)
    {
      if (v9 >= 2)
      {
        *(_BYTE *)(a1 + 64) = *v7;
        *(_QWORD *)(a1 + 72) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1BB0EA510(a1 + 64);
    }
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroup()
{
  return &type metadata for FormatGroup;
}

uint64_t sub_1BB427B38(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = sub_1BB428BF4(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BB427B84()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatUploadDiffHunk()
{
  return objc_opt_self();
}

void sub_1BB427BC8(uint64_t a1)
{
  __asm { BR              X10 }
}

_QWORD *sub_1BB427C2C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BB872A78();
  sub_1BA69D314(v3, v2);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteData + 8);
  if (v4 >> 60 != 15)
    __asm { BR              X10 }
  sub_1BA7114A0();
  v5 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  v6 = sub_1BB873B4C();
  swift_bridgeObjectRelease();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_systemGreenColor);
  v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.3);

  v10 = objc_msgSend(v7, sel_systemRedColor);
  v11 = objc_msgSend(v10, sel_colorWithAlphaComponent_, 0.3);

  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BB4283B4(v12, v9, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1BB4283B4(v14, v11, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[2] = v1;
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1BB4287D0(v16, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[3] = v17;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1BB4287D0(v18, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v0[4] = v19;
  return v0;
}

uint64_t sub_1BB4283B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  double v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t inited;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v40;

  result = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = (void *)*MEMORY[0x1E0DC1138];
    v8 = *MEMORY[0x1E0DC1440];
    v9 = (void *)*MEMORY[0x1E0DC1140];
    v37 = (void *)*MEMORY[0x1E0DC1100];
    v10 = (uint64_t *)(a3 + 56);
    do
    {
      v11 = *(v10 - 3);
      v12 = *(v10 - 2);
      v14 = *(v10 - 1);
      v13 = *v10;
      v15 = sub_1BA79296C(v6, a1);
      swift_bridgeObjectRetain();
      MEMORY[0x1BCCE334C](v11, v12, v14, v13);
      swift_bridgeObjectRelease();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      if (v15)
      {
        *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
        *(_QWORD *)(inited + 32) = v7;
        v17 = (void *)objc_opt_self();
        v18 = v7;
        v19 = objc_msgSend(v17, sel_monospacedSystemFontOfSize_weight_, 12.0, v8);
        v20 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
        *(_QWORD *)(inited + 40) = v19;
        *(_QWORD *)(inited + 64) = v20;
        *(_QWORD *)(inited + 72) = v9;
        v21 = (void *)objc_opt_self();
        v22 = v9;
        v23 = objc_msgSend(v21, sel_labelColor);
        v24 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
        *(_QWORD *)(inited + 80) = v23;
        *(_QWORD *)(inited + 104) = v24;
        *(_QWORD *)(inited + 112) = v37;
        *(_QWORD *)(inited + 144) = v24;
        *(_QWORD *)(inited + 120) = a2;
        v25 = v37;
        v26 = a2;
      }
      else
      {
        *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
        *(_QWORD *)(inited + 32) = v7;
        v29 = (void *)objc_opt_self();
        v30 = v7;
        v31 = objc_msgSend(v29, sel_monospacedSystemFontOfSize_weight_, 12.0, v8);
        v32 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
        *(_QWORD *)(inited + 40) = v31;
        *(_QWORD *)(inited + 64) = v32;
        *(_QWORD *)(inited + 72) = v9;
        v33 = (void *)objc_opt_self();
        v34 = v9;
        v35 = objc_msgSend(v33, sel_labelColor);
        *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
        *(_QWORD *)(inited + 80) = v35;
      }
      sub_1BA76E82C(inited);
      v27 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v28 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BA76F768();
      v36 = (void *)sub_1BB872760();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_initWithString_attributes_, v28, v36);

      MEMORY[0x1BCCE36AC]();
      if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      ++v6;
      sub_1BB872DCC();
      v10 += 4;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    return v40;
  }
  return result;
}

uint64_t sub_1BB4287D0(uint64_t a1, unint64_t a2)
{
  uint64_t v5;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_bridgeObjectRetain();
    return sub_1BB427B38(a1, a2);
  }
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1BB428870@<X0>(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *result;
  _QWORD *v22;

  v8 = *a1 - 5;
  if (__OFSUB__(*a1, 5))
  {
    __break(1u);
    goto LABEL_35;
  }
  v9 = a1[1];
  v5 = v9 + 5;
  if (__OFADD__(v9, 5))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v3 = a2;
  v4 = a2 >> 62;
  if (!(a2 >> 62))
  {
    v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 - 1;
    if (!__OFSUB__(v10, 1))
      goto LABEL_5;
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_36:
  swift_bridgeObjectRetain();
  v10 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v11 = v10 - 1;
  if (__OFSUB__(v10, 1))
    goto LABEL_38;
LABEL_5:
  v10 = v8 & ~(v8 >> 63);
  if (v11 >= (uint64_t)v5)
    v6 = v5;
  else
    v6 = v11;
  if (v6 < v10)
    goto LABEL_39;
  if (v4)
  {
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    if (sub_1BB873F30() < v10)
      goto LABEL_40;
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8 < (unint64_t)v10)
      goto LABEL_40;
  }
  if (v8 <= v6)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v12 = v6 + 1;
  if ((v3 & 0xC000000000000001) != 0 && v10 != v12)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
    v13 = v10;
    do
    {
      v14 = v13 + 1;
      sub_1BB873CFC();
      v13 = v14;
    }
    while (v12 != v14);
  }
  v22 = (_QWORD *)a3;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F3C();
    v4 = v15;
    a3 = v16;
    v5 = v17;
    swift_bridgeObjectRelease_n();
    if ((v5 & 1) != 0)
      goto LABEL_27;
LABEL_26:
    v18 = sub_1BA85E448(v8, v4, a3, v5);
    goto LABEL_33;
  }
  v8 = v3 & 0xFFFFFFFFFFFFFF8;
  v4 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v5 = (2 * v12) | 1;
  a3 = v10;
  if ((v5 & 1) == 0)
    goto LABEL_26;
LABEL_27:
  sub_1BB874434();
  swift_unknownObjectRetain_n();
  v19 = swift_dynamicCastClass();
  if (!v19)
  {
    swift_unknownObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  v20 = *(_QWORD *)(v19 + 16);
  swift_release();
  if (__OFSUB__(v5 >> 1, a3))
    goto LABEL_42;
  if (v20 != (v5 >> 1) - a3)
  {
LABEL_43:
    swift_unknownObjectRelease();
    goto LABEL_26;
  }
  v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
LABEL_33:
  swift_unknownObjectRelease();
  type metadata accessor for DebugFormatUploadDiffHunk();
  result = (_QWORD *)swift_allocObject();
  result[3] = v10;
  result[4] = v6;
  result[2] = v18;
  *v22 = result;
  return result;
}

uint64_t sub_1BB428B28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatUploadDiffChangeSet()
{
  return objc_opt_self();
}

void sub_1BB428B7C()
{
  sub_1BA86B20C();
}

uint64_t sub_1BB428BA0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A94A8, (uint64_t (*)(uint64_t))sub_1BA86B498, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB428BF4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  __int128 *i;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    for (i = (__int128 *)(a1 + 32); ; ++i)
    {
      v9 = *i;
      sub_1BB428870(&v9, a2, (uint64_t)&v10);
      if (v3)
        break;
      v3 = 0;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (!--v5)
        return v11;
    }
    return swift_release();
  }
  return result;
}

uint64_t *sub_1BB428CE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t started;
  uint64_t v12;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v10 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
        started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        v14 = sub_1BB86C8B0();
        v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        v15(v7, v8, v14);
        v16 = type metadata accessor for StartTimeEndTime(0);
        v15(&v7[*(int *)(v16 + 20)], &v8[*(int *)(v16 + 20)], v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t sub_1BB429094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      v6 = sub_1BB86C8B0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
      break;
    case 8:
    case 9:
      v7 = sub_1BB86C8B0();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v9(v4, v7);
      v8 = v4 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v7);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1BB429170(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;
  void (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v9 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
      started = type metadata accessor for StartTime(0);
      v6[*(int *)(started + 20)] = v7[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v11 = sub_1BB86C8B0();
      v12 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(v6, v7, v11);
      v13 = type metadata accessor for StartTimeEndTime(0);
      v12(&v6[*(int *)(v13 + 20)], &v7[*(int *)(v13 + 20)], v11);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1BB4294D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t started;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BA4A2E80((uint64_t)a1 + v6, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v10 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
        started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v12 = sub_1BB86C8B0();
        v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        v13(v7, v8, v12);
        v14 = type metadata accessor for StartTimeEndTime(0);
        v13(&v7[*(int *)(v14 + 20)], &v8[*(int *)(v14 + 20)], v12);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1BB429860(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t started;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v8 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
      started = type metadata accessor for StartTime(0);
      v5[*(int *)(started + 20)] = v6[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v10 = sub_1BB86C8B0();
      v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v5, v6, v10);
      v12 = type metadata accessor for StartTimeEndTime(0);
      v11(&v5[*(int *)(v12 + 20)], &v6[*(int *)(v12 + 20)], v10);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1BB429BB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t started;
  uint64_t v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BA4A2E80((uint64_t)a1 + v7, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    v10 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v11 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
        started = type metadata accessor for StartTime(0);
        v8[*(int *)(started + 20)] = v9[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v13 = sub_1BB86C8B0();
        v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
        v14(v8, v9, v13);
        v15 = type metadata accessor for StartTimeEndTime(0);
        v14(&v8[*(int *)(v15 + 20)], &v9[*(int *)(v15 + 20)], v13);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB429F38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB429F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB429FC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB429FCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsEventStatusResponseEmbed()
{
  uint64_t result;

  result = qword_1ED3A8EA0;
  if (!qword_1ED3A8EA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB42A07C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SportsDataVisualizationResponseEventStatus(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB42A0F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[5];
  uint64_t v22;

  v19 = a2;
  v4 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1E0C80A78](v4);
  v20 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB42A600(0, &qword_1ED3AB4C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v22 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = type metadata accessor for SportsEventStatusResponseEmbed();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42A534();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = (uint64_t)a1;
  v14 = (uint64_t)v20;
  LOBYTE(v21[0]) = 0;
  v15 = v22;
  *v12 = sub_1BB874098();
  v12[1] = v16;
  sub_1BA4C010C(v13, (uint64_t)v21);
  SportsDataVisualizationResponseEventStatus.init(from:)(v21, v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  sub_1BB42A578(v14, (uint64_t)v12 + *(int *)(v10 + 20));
  sub_1BB42A5BC((uint64_t)v12, v19);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
}

uint64_t sub_1BB42A314(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB42A600(0, &qword_1EF2C3B40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42A534();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB87417C();
  if (!v1)
  {
    type metadata accessor for SportsEventStatusResponseEmbed();
    v9[14] = 1;
    type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    sub_1BB42A65C();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB42A458()
{
  _BYTE *v0;

  if (*v0)
    return 0x737574617473;
  else
    return 0x6163696E6F6E6163;
}

uint64_t sub_1BB42A498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB42A848(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB42A4BC()
{
  sub_1BB42A534();
  return sub_1BB874710();
}

uint64_t sub_1BB42A4E4()
{
  sub_1BB42A534();
  return sub_1BB87471C();
}

uint64_t sub_1BB42A50C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB42A0F0(a1, a2);
}

uint64_t sub_1BB42A520(_QWORD *a1)
{
  return sub_1BB42A314(a1);
}

unint64_t sub_1BB42A534()
{
  unint64_t result;

  result = qword_1ED3A8E80;
  if (!qword_1ED3A8E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91683C, &type metadata for SportsEventStatusResponseEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8E80);
  }
  return result;
}

uint64_t sub_1BB42A578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB42A5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB42A600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB42A534();
    v7 = a3(a1, &type metadata for SportsEventStatusResponseEmbed.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB42A65C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AC5B8;
  if (!qword_1ED3AC5B8)
  {
    v1 = type metadata accessor for SportsDataVisualizationResponseEventStatus(255);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationResponseEventStatus, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AC5B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsEventStatusResponseEmbed.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB42A6F0 + 4 * byte_1BB9166E1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB42A724 + 4 * byte_1BB9166DC[v4]))();
}

uint64_t sub_1BB42A724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42A72C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB42A734);
  return result;
}

uint64_t sub_1BB42A740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB42A748);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB42A74C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42A754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventStatusResponseEmbed.CodingKeys()
{
  return &type metadata for SportsEventStatusResponseEmbed.CodingKeys;
}

unint64_t sub_1BB42A774()
{
  unint64_t result;

  result = qword_1EF2C3B48;
  if (!qword_1EF2C3B48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916814, &type metadata for SportsEventStatusResponseEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B48);
  }
  return result;
}

unint64_t sub_1BB42A7BC()
{
  unint64_t result;

  result = qword_1ED3A8E90;
  if (!qword_1ED3A8E90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916784, &type metadata for SportsEventStatusResponseEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8E90);
  }
  return result;
}

unint64_t sub_1BB42A804()
{
  unint64_t result;

  result = qword_1ED3A8E88;
  if (!qword_1ED3A8E88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9167AC, &type metadata for SportsEventStatusResponseEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8E88);
  }
  return result;
}

uint64_t sub_1BB42A848(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6163696E6F6E6163 && a2 == 0xEB0000000064496CLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t SportsRecord.wins.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecord.losses.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecord.ties.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsRecord.rank.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SportsRecord.recordDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v6)
  {
    v8 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    sub_1BA7AA598();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87FC80;
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1BA6A2D8C();
    *(_QWORD *)(v10 + 32) = v2;
    *(_QWORD *)(v10 + 40) = v1;
    *(_QWORD *)(v10 + 96) = v11;
    *(_QWORD *)(v10 + 104) = v12;
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 72) = v4;
    *(_QWORD *)(v10 + 80) = v3;
    *(_QWORD *)(v10 + 136) = v11;
    *(_QWORD *)(v10 + 144) = v12;
    *(_QWORD *)(v10 + 112) = v5;
    *(_QWORD *)(v10 + 120) = v6;
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    sub_1BA7AA598();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87A390;
    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    v16 = sub_1BA6A2D8C();
    *(_QWORD *)(v14 + 32) = v2;
    *(_QWORD *)(v14 + 40) = v1;
    *(_QWORD *)(v14 + 96) = v15;
    *(_QWORD *)(v14 + 104) = v16;
    *(_QWORD *)(v14 + 64) = v16;
    *(_QWORD *)(v14 + 72) = v4;
    *(_QWORD *)(v14 + 80) = v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BB42AC3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB42AC64 + 4 * byte_1BB91688C[*v0]))(1936615799, 0xE400000000000000);
}

uint64_t sub_1BB42AC64()
{
  return 0x736573736F6CLL;
}

uint64_t sub_1BB42AC78()
{
  return 1936025972;
}

uint64_t sub_1BB42AC84()
{
  return 1802396018;
}

uint64_t sub_1BB42AC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB42B7F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB42ACB4()
{
  sub_1BB42B368();
  return sub_1BB874710();
}

uint64_t sub_1BB42ACDC()
{
  sub_1BB42B368();
  return sub_1BB87471C();
}

uint64_t SportsRecord.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_1BB42B3F0(0, &qword_1EF2C3B50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = v1[2];
  v21 = v1[3];
  v22 = v8;
  v9 = v1[4];
  v19 = v1[5];
  v20 = v9;
  v10 = v1[6];
  v17 = v1[7];
  v18 = v10;
  v16 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42B368();
  sub_1BB8746C8();
  LOBYTE(v24) = 0;
  v11 = v23;
  sub_1BB87417C();
  if (!v11)
  {
    v13 = v17;
    v12 = v18;
    LOBYTE(v24) = 1;
    sub_1BB87417C();
    LOBYTE(v24) = 2;
    sub_1BB87411C();
    v24 = v12;
    v25 = v13;
    v26 = v16;
    v27 = 3;
    sub_1BB42B3AC();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SportsRecord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  sub_1BB42B3F0(0, &qword_1EF2C3B68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42B368();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v28) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v26 = v10;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v27 = v14;
  v25 = v13;
  LOBYTE(v28) = 2;
  swift_bridgeObjectRetain();
  v23 = sub_1BB87402C();
  v31 = 3;
  v16 = v15;
  sub_1BB42B44C();
  v24 = v16;
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v28;
  v19 = v29;
  v20 = v30;
  swift_bridgeObjectRetain();
  v21 = v27;
  *a2 = v26;
  a2[1] = v12;
  v22 = v24;
  a2[2] = v25;
  a2[3] = v21;
  a2[4] = v23;
  a2[5] = v22;
  a2[6] = v18;
  a2[7] = v19;
  a2[8] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB42B1AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsRecord.init(from:)(a1, a2);
}

uint64_t sub_1BB42B1C0(_QWORD *a1)
{
  return SportsRecord.encode(to:)(a1);
}

uint64_t _s8NewsFeed12SportsRecordV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a1[8];
  v7 = a2[2];
  v8 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v18 = a2[6];
  v19 = a1[6];
  v11 = a2[8];
  v16 = a2[7];
  v17 = a1[7];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_1BB874398(), result = 0, (v14 & 1) != 0))
    {
      if (v5)
      {
        if (!v9)
          return 0;
        if (v3 != v10 || v5 != v9)
        {
          v15 = sub_1BB874398();
          result = 0;
          if ((v15 & 1) == 0)
            return result;
        }
      }
      else if (v9)
      {
        return 0;
      }
      if (v6)
      {
        if (v11)
        {
          if (v19 == v18)
          {
            if (v17 != v16 || v6 != v11)
              return sub_1BB874398();
            return 1;
          }
          return 0;
        }
        swift_bridgeObjectRetain();
      }
      else if (!v11)
      {
        return 1;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1BB42B368()
{
  unint64_t result;

  result = qword_1EF2C3B58;
  if (!qword_1EF2C3B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9169FC, &type metadata for SportsRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B58);
  }
  return result;
}

unint64_t sub_1BB42B3AC()
{
  unint64_t result;

  result = qword_1EF2C3B60;
  if (!qword_1EF2C3B60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsRecordRank, &type metadata for SportsRecordRank);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B60);
  }
  return result;
}

void sub_1BB42B3F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB42B368();
    v7 = a3(a1, &type metadata for SportsRecord.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB42B44C()
{
  unint64_t result;

  result = qword_1EF2C3B70;
  if (!qword_1EF2C3B70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsRecordRank, &type metadata for SportsRecordRank);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B70);
  }
  return result;
}

uint64_t destroy for SportsRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsRecord(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for SportsRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB42B6A0 + 4 * byte_1BB916895[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB42B6D4 + 4 * byte_1BB916890[v4]))();
}

uint64_t sub_1BB42B6D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42B6DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB42B6E4);
  return result;
}

uint64_t sub_1BB42B6F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB42B6F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB42B6FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42B704(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsRecord.CodingKeys()
{
  return &type metadata for SportsRecord.CodingKeys;
}

unint64_t sub_1BB42B724()
{
  unint64_t result;

  result = qword_1EF2C3B78;
  if (!qword_1EF2C3B78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9169D4, &type metadata for SportsRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B78);
  }
  return result;
}

unint64_t sub_1BB42B76C()
{
  unint64_t result;

  result = qword_1EF2C3B80;
  if (!qword_1EF2C3B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916944, &type metadata for SportsRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B80);
  }
  return result;
}

unint64_t sub_1BB42B7B4()
{
  unint64_t result;

  result = qword_1EF2C3B88;
  if (!qword_1EF2C3B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91696C, &type metadata for SportsRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3B88);
  }
  return result;
}

uint64_t sub_1BB42B7F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1936615799 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736573736F6CLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1936025972 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1802396018 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t FeedJournalFormatter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FeedJournalFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedJournalFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB42B99C()
{
  return 0x73726579616C70;
}

uint64_t sub_1BB42B9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73726579616C70 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB42BA48()
{
  sub_1BB42BBB0();
  return sub_1BB874710();
}

uint64_t sub_1BB42BA70()
{
  sub_1BB42BBB0();
  return sub_1BB87471C();
}

uint64_t SportsRoster.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB42BE78(0, &qword_1EF2C3B90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42BBB0();
  sub_1BB8746C8();
  sub_1BB42BBF4();
  sub_1BA4A2870(qword_1EF2C3B98, (uint64_t (*)(uint64_t))sub_1BB42BBF4, MEMORY[0x1E0DB3A30]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB42BBB0()
{
  unint64_t result;

  result = qword_1ED3A56B0;
  if (!qword_1ED3A56B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916BA8, &type metadata for SportsRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A56B0);
  }
  return result;
}

void sub_1BB42BBF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3958)
  {
    type metadata accessor for SportsRosterPlayer();
    sub_1BA4A2870(&qword_1ED3A6510, (uint64_t (*)(uint64_t))type metadata accessor for SportsRosterPlayer, (uint64_t)&protocol conformance descriptor for SportsRosterPlayer);
    sub_1BA4A2870(&qword_1ED3A6508, (uint64_t (*)(uint64_t))type metadata accessor for SportsRosterPlayer, (uint64_t)&protocol conformance descriptor for SportsRosterPlayer);
    v0 = sub_1BB86E1F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3958);
  }
}

uint64_t SportsRoster.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v19 = a2;
  sub_1BB42BBF4();
  v21 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v22 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB42BE78(0, &qword_1ED3AB408, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v20 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for SportsRoster();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42BBB0();
  sub_1BB87468C();
  if (!v2)
  {
    v14 = (uint64_t)v13;
    sub_1BA4A2870(&qword_1ED3A3950, (uint64_t (*)(uint64_t))sub_1BB42BBF4, MEMORY[0x1E0DB3A38]);
    v16 = v20;
    v15 = v21;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v22, v15);
    sub_1BB42BF10(v14, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB42BE78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB42BBB0();
    v7 = a3(a1, &type metadata for SportsRoster.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for SportsRoster()
{
  uint64_t result;

  result = qword_1ED3A56E0;
  if (!qword_1ED3A56E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB42BF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsRoster();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB42BF54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsRoster.init(from:)(a1, a2);
}

uint64_t sub_1BB42BF68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB42BE78(0, &qword_1EF2C3B90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB42BBB0();
  sub_1BB8746C8();
  sub_1BB42BBF4();
  sub_1BA4A2870(qword_1EF2C3B98, (uint64_t (*)(uint64_t))sub_1BB42BBF4, MEMORY[0x1E0DB3A30]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for SportsRoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for SportsRoster(uint64_t a1)
{
  uint64_t v2;

  sub_1BB42BBF4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SportsRoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SportsRoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SportsRoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SportsRoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsRoster()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB42C20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SportsRoster()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB42C254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB42BBF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1BB42C294()
{
  unint64_t v0;

  sub_1BB42BBF4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for SportsRoster.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB42C33C + 4 * byte_1BB916A78[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB42C35C + 4 * byte_1BB916A7D[v4]))();
}

_BYTE *sub_1BB42C33C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB42C35C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB42C364(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB42C36C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB42C374(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB42C37C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsRoster.CodingKeys()
{
  return &type metadata for SportsRoster.CodingKeys;
}

unint64_t sub_1BB42C39C()
{
  unint64_t result;

  result = qword_1EF2C3BC8;
  if (!qword_1EF2C3BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916B80, &type metadata for SportsRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3BC8);
  }
  return result;
}

unint64_t sub_1BB42C3E4()
{
  unint64_t result;

  result = qword_1ED3A56C0;
  if (!qword_1ED3A56C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916AF0, &type metadata for SportsRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A56C0);
  }
  return result;
}

unint64_t sub_1BB42C42C()
{
  unint64_t result;

  result = qword_1ED3A56B8;
  if (!qword_1ED3A56B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916B18, &type metadata for SportsRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A56B8);
  }
  return result;
}

Swift::Bool __swiftcall IssueCoverView.prepareForReuse(identifier:)(Swift::String_optional identifier)
{
  char *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v4;
  void *v5;
  BOOL v6;
  uint64_t v7;
  Swift::Bool result;
  char *v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  id v21;

  object = identifier.value._object;
  countAndFlagsBits = identifier.value._countAndFlagsBits;
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier + 8];
  if (v5)
  {
    if (!object)
      goto LABEL_13;
    v6 = *v4 == identifier.value._countAndFlagsBits && v5 == object;
    if (!v6 && (sub_1BB874398() & 1) == 0)
      goto LABEL_13;
  }
  else if (object)
  {
    goto LABEL_13;
  }
  objc_msgSend(v1, sel_bounds);
  if ((v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds + 32] & 1) == 0
    && CGRectEqualToRect(*(CGRect *)&v7, *(CGRect *)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds]))
  {
    return 0;
  }
LABEL_13:
  *v4 = countAndFlagsBits;
  v4[1] = (uint64_t)object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = &v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  if (v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] != 1)
  {
    v21 = sub_1BA67AAC0();
    sub_1BB871710();

    return 1;
  }
  v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = 0;

  v14 = sub_1BA67ABF0();
  v15 = objc_msgSend(v14, sel_subviews);

  sub_1BA81CF48();
  v16 = sub_1BB872DB4();

  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_16;
LABEL_24:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_24;
LABEL_16:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1BCCE4630](i, v16);
      else
        v19 = *(id *)(v16 + 8 * i + 32);
      v20 = v19;
      objc_msgSend(v19, sel_removeFromSuperview);

    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id IssueCoverView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

Swift::Void __swiftcall IssueCoverView.setMultiSelectionEditing(_:selected:)(Swift::Bool _, Swift::Bool selected)
{
  void *v2;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;

  v4 = objc_msgSend(v2, sel_layer);
  v5 = objc_msgSend(v2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  v7 = v6;

  objc_msgSend(v4, sel_setRasterizationScale_, v7);
  v8 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v8, sel_setShouldRasterize_, _);

}

void sub_1BB42C794(char a1, char a2)
{
  void *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  if (a1 == a2)
    return;
  if (!a1)
  {
    v4 = sub_1BA67AAC0();
    goto LABEL_6;
  }
  if (a1 == 1)
  {
    v4 = sub_1BA67ABF0();
LABEL_6:
    v5 = v4;
    objc_msgSend(v4, sel_removeFromSuperview);

  }
  if (!a2)
  {
    v8 = sub_1BA67AAC0();
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v8, sel_setFrame_);

    v9 = sub_1BA67AAC0();
    objc_msgSend(v9, sel_setContentMode_, 4);

    v7 = sub_1BA67AAC0();
    goto LABEL_12;
  }
  if (a2 == 1)
  {
    v6 = sub_1BA67ABF0();
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v6, sel_setFrame_);

    v7 = sub_1BA67ABF0();
LABEL_12:
    v10 = v7;
    objc_msgSend(v2, sel_addSubview_);

  }
}

id IssueCoverView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

Swift::Void __swiftcall IssueCoverView.layoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v1 = v0;
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_layoutSubviews);
  if (!v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content])
  {
    v4 = sub_1BA67AAC0();
    objc_msgSend(v1, sel_bounds);
    goto LABEL_6;
  }
  if (v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] == 1)
  {
    v2 = sub_1BA67ABF0();
    objc_msgSend(v1, sel_bounds);
    sub_1BB8736F0();

    v3 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v1, sel_bounds);
LABEL_6:
      sub_1BB8736F0();

    }
  }
}

id IssueCoverView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IssueCoverView.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t IssueCoverView.shouldMonitorScroll.getter()
{
  return 0;
}

uint64_t IssueCoverView.blueprintViewportMonitor(_:willDisplayCellWith:)()
{
  return sub_1BB42D078();
}

uint64_t IssueCoverView.blueprintViewportMonitor(_:didEndDisplayingCellWith:)()
{
  return sub_1BB42D0F8();
}

uint64_t IssueCoverView.blueprintViewportMonitorWillDisplaySupplementaryView(_:)()
{
  return sub_1BB42D078();
}

uint64_t IssueCoverView.blueprintViewportMonitorDidEndDisplayingSupplementaryView(_:)()
{
  return sub_1BB42D0F8();
}

uint64_t sub_1BB42CB10()
{
  swift_getObjectType();
  return sub_1BB870EE8();
}

uint64_t sub_1BB42CB54()
{
  return sub_1BB42D078();
}

uint64_t sub_1BB42CB68()
{
  return sub_1BB42D0F8();
}

void sub_1BB42CB7C(char a1)
{
  void **v1;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;

  v3 = *v1;
  v4 = objc_msgSend(v3, sel_layer);
  v5 = objc_msgSend(v3, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  v7 = v6;

  objc_msgSend(v4, sel_setRasterizationScale_, v7);
  v8 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v8, sel_setShouldRasterize_, a1 & 1);

}

void sub_1BB42CC4C()
{
  sub_1BB42D2A8(&qword_1EF2C3C10, (uint64_t)&protocol conformance descriptor for IssueCoverView);
  JUMPOUT(0x1BCCE1E7CLL);
}

void sub_1BB42CC84(uint64_t a1, uint64_t a2, _BYTE *a3, _QWORD *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  uint64_t v10;
  BOOL v16;
  uint64_t v17;
  char v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v10 = *(_QWORD *)&a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier + 8];
  if (v10)
  {
    v16 = *(_QWORD *)&a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier] == a1 && v10 == a2;
    if (v16 || (sub_1BB874398() & 1) != 0)
    {
      v17 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content;
      v18 = a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content];
      a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 0;
      sub_1BB42C794(v18, 0);
      if (!a3[v17])
      {
        v19 = sub_1BA67AAC0();
        sub_1BA899214(v19, a4, a5, a6, a7, a8, a9);

        objc_msgSend(a3, sel_bounds);
        v20 = &a3[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
        *(_QWORD *)v20 = v21;
        *((_QWORD *)v20 + 1) = v22;
        *((_QWORD *)v20 + 2) = v23;
        *((_QWORD *)v20 + 3) = v24;
        v20[32] = 0;
      }
    }
  }
}

void sub_1BB42CD80(uint64_t a1, uint64_t a2, id a3, _BYTE *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v14;
  uint64_t v15;
  BOOL v21;
  uint64_t v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  char v31;
  id v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v14 = &a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  v15 = *(_QWORD *)&a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier + 8];
  if (v15)
  {
    v21 = *v14 == a1 && v15 == a2;
    if (v21 || (sub_1BB874398() & 1) != 0)
    {
      v22 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content;
      v23 = a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content];
      a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 1;
      if (v23)
      {
        if (v23 == 1)
          goto LABEL_12;
      }
      else
      {
        v24 = sub_1BA67AAC0();
        objc_msgSend(v24, sel_removeFromSuperview);

      }
      v25 = sub_1BA67ABF0();
      objc_msgSend(a4, sel_bounds);
      objc_msgSend(v25, sel_setFrame_);

      v26 = sub_1BA67ABF0();
      objc_msgSend(a4, sel_addSubview_, v26);

      if (a4[v22] != 1)
        return;
LABEL_12:
      v27 = objc_msgSend(a3, sel_superview);
      v28 = sub_1BA67ABF0();
      v29 = v28;
      if (v27)
      {
        sub_1BA81CF48();
        v30 = v27;
        v31 = sub_1BB8738B8();

        if ((v31 & 1) != 0)
          goto LABEL_17;
      }
      else
      {

      }
      v32 = sub_1BA67ABF0();
      objc_msgSend(v32, sel_addSubview_, a3);

      v33 = *(void **)&a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
      *(_QWORD *)&a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = a3;

      v34 = a3;
LABEL_17:
      sub_1BA898954(a3, a5, a6, a7, a8, a9, a10, a11, a12, a13);
      objc_msgSend(a4, sel_bounds);
      v35 = &a4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
      *(_QWORD *)v35 = v36;
      *((_QWORD *)v35 + 1) = v37;
      *((_QWORD *)v35 + 2) = v38;
      *((_QWORD *)v35 + 3) = v39;
      v35[32] = 0;
    }
  }
}

void _s8NewsFeed14IssueCoverViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = 0;
  v1 = &v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 2;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB42D078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + qword_1ED3AF858);
    result = swift_beginAccess();
    v4 = *(unsigned __int8 *)(v2 + 17);
    *(_BYTE *)(v2 + 17) = 1;
    if ((v4 & 0xFFFFFFC1) != 1)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB42D0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + qword_1ED3AF858);
    result = swift_beginAccess();
    v4 = *(unsigned __int8 *)(v2 + 17);
    *(_BYTE *)(v2 + 17) = 0;
    if ((v4 & 0xFFFFFFC1) != 0)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB42D170()
{
  return sub_1BB42D2A8(&qword_1EF2C3C00, (uint64_t)&protocol conformance descriptor for IssueCoverView);
}

uint64_t storeEnumTagSinglePayload for IssueCoverViewContent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB42D1E0 + 4 * byte_1BB916C05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB42D214 + 4 * byte_1BB916C00[v4]))();
}

uint64_t sub_1BB42D214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42D21C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB42D224);
  return result;
}

uint64_t sub_1BB42D230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB42D238);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB42D23C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42D244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverViewContent()
{
  return &type metadata for IssueCoverViewContent;
}

unint64_t sub_1BB42D264()
{
  unint64_t result;

  result = qword_1EF2C3C08;
  if (!qword_1EF2C3C08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916D28, &type metadata for IssueCoverViewContent);
    atomic_store(result, (unint64_t *)&qword_1EF2C3C08);
  }
  return result;
}

uint64_t sub_1BB42D2A8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IssueCoverView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOfflineModel()
{
  return &type metadata for FormatOfflineModel;
}

void sub_1BB42D2F4()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1BB86C340();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BB98CB70);
  v7 = sub_1BB86C340();
  v9 = v8;

  qword_1ED4764C8 = 0xD000000000000013;
  unk_1ED4764D0 = 0x80000001BB98CB50;
  qword_1ED4764D8 = v3;
  unk_1ED4764E0 = v5;
  qword_1ED4764E8 = v7;
  unk_1ED4764F0 = v9;
  qword_1ED4764F8 = MEMORY[0x1E0DEE9D8];
}

void sub_1BB42D46C()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1BB86C340();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BB98CAA0);
  v7 = sub_1BB86C340();
  v9 = v8;

  qword_1EF3D0808 = 0xD000000000000013;
  unk_1EF3D0810 = 0x80000001BB98CA80;
  qword_1EF3D0818 = v3;
  unk_1EF3D0820 = v5;
  qword_1EF3D0828 = v7;
  unk_1EF3D0830 = v9;
  qword_1EF3D0838 = MEMORY[0x1E0DEE9D8];
}

void sub_1BB42D5E0()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1BB86C340();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BB98C970);
  v7 = sub_1BB86C340();
  v9 = v8;

  qword_1EF3D0840 = 0xD000000000000014;
  *(_QWORD *)algn_1EF3D0848 = 0x80000001BB98C950;
  qword_1EF3D0850 = v3;
  unk_1EF3D0858 = v5;
  qword_1EF3D0860 = v7;
  unk_1EF3D0868 = v9;
  qword_1EF3D0870 = MEMORY[0x1E0DEE9D8];
}

void sub_1BB42D754()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1BB86C340();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BB98C870);
  v7 = sub_1BB86C340();
  v9 = v8;

  qword_1EF3D0878 = 0xD000000000000016;
  unk_1EF3D0880 = 0x80000001BB98C850;
  qword_1EF3D0888 = v3;
  unk_1EF3D0890 = v5;
  qword_1EF3D0898 = v7;
  unk_1EF3D08A0 = v9;
  qword_1EF3D08A8 = MEMORY[0x1E0DEE9D8];
}

void sub_1BB42D8C8()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = sub_1BB86C340();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BB98C770);
  v7 = sub_1BB86C340();
  v9 = v8;

  qword_1EF3D08B0 = 0xD000000000000017;
  *(_QWORD *)algn_1EF3D08B8 = 0x80000001BB98C730;
  qword_1EF3D08C0 = v3;
  unk_1EF3D08C8 = v5;
  qword_1EF3D08D0 = v7;
  unk_1EF3D08D8 = v9;
  qword_1EF3D08E0 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB42DA3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A71E8 != -1)
    swift_once();
  v2 = unk_1EF3D0810;
  v3 = qword_1EF3D0818;
  v4 = unk_1EF3D0820;
  v5 = qword_1EF3D0828;
  v6 = unk_1EF3D0830;
  v7 = qword_1EF3D0838;
  *a1 = qword_1EF3D0808;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB42DAC8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A71F0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF3D0848;
  v3 = qword_1EF3D0850;
  v4 = unk_1EF3D0858;
  v5 = qword_1EF3D0860;
  v6 = unk_1EF3D0868;
  v7 = qword_1EF3D0870;
  *a1 = qword_1EF3D0840;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB42DB54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A71F8 != -1)
    swift_once();
  v2 = unk_1EF3D0880;
  v3 = qword_1EF3D0888;
  v4 = unk_1EF3D0890;
  v5 = qword_1EF3D0898;
  v6 = unk_1EF3D08A0;
  v7 = qword_1EF3D08A8;
  *a1 = qword_1EF3D0878;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB42DBE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A7200 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF3D08B8;
  v3 = qword_1EF3D08C0;
  v4 = unk_1EF3D08C8;
  v5 = qword_1EF3D08D0;
  v6 = unk_1EF3D08D8;
  v7 = qword_1EF3D08E0;
  *a1 = qword_1EF3D08B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void FeedModel<>.init(model:context:namespace:)(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for FeedModel();
}

__n128 sub_1BB42DD0C(int *a1)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 result;
  _QWORD *v10;
  uint64_t (**v11)();
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = v4 + a1[13];
  *(_QWORD *)v8 = v5;
  *(_BYTE *)(v8 + 8) = v6;
  *(_BYTE *)(v8 + 9) = v7;
  *(_BYTE *)(v8 + 10) = v1;
  *(_BYTE *)(v8 + 11) = v2;
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v3 + 16);
  *(_QWORD *)(v8 + 32) = v15;
  *(_QWORD *)(v8 + 40) = v14;
  *(_BYTE *)(v8 + 48) = v13;
  *(_QWORD *)(v8 + 56) = v12;
  result = *(__n128 *)(v3 + 64);
  *(__n128 *)(v8 + 64) = result;
  v10 = (_QWORD *)(v4 + a1[14]);
  *v10 = v16;
  v10[1] = v17;
  v11 = (uint64_t (**)())(v4 + a1[16]);
  *v11 = sub_1BA647E00;
  v11[1] = 0;
  return result;
}

uint64_t FeedModel.namespace.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 56));
  swift_bridgeObjectRetain();
  return v2;
}

void FeedModel<>.copy(withNew:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;

  v31 = a3;
  v32 = a4;
  v34 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](a1);
  v33 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(a2 + 16);
  v8 = MEMORY[0x1E0C80A78](v7);
  v29 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v10 + 16))(v8);
  v11 = *(int *)(a2 + 56);
  v12 = v4 + *(int *)(a2 + 52);
  v13 = *(void **)v12;
  v14 = *(_BYTE *)(v12 + 9);
  v15 = *(_BYTE *)(v12 + 10);
  v16 = *(_BYTE *)(v12 + 11);
  v17 = *(_QWORD *)(v12 + 16);
  v18 = *(_QWORD *)(v12 + 24);
  v20 = *(_QWORD *)(v12 + 32);
  v19 = *(_QWORD *)(v12 + 40);
  v21 = *(_BYTE *)(v12 + 48);
  v36 = *(_BYTE *)(v12 + 8);
  v23 = *(void **)(v12 + 56);
  v22 = *(_QWORD *)(v12 + 64);
  v24 = *(_QWORD *)(v12 + 72);
  v35 = v13;
  v37 = v14;
  v38 = v15;
  v39 = v16;
  v40 = v17;
  v41 = v18;
  v42 = v20;
  v43 = v19;
  v44 = v21;
  v45 = v23;
  v46 = v22;
  v47 = v24;
  v27 = *(_QWORD *)(v4 + v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v33, v4 + *(int *)(a2 + 60), v34);
  v25 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v20, v19);
  v26 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FeedModel<>.init(model:context:namespace:metadata:)(v29, v30, v32);
}

uint64_t sub_1BB42DF88()
{
  return swift_deallocObject();
}

void FeedModel<>.copy(withNew:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v24 = a3;
  v23 = *(_QWORD *)(a2 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v7, v5);
  v9 = (uint64_t *)(v3 + *(int *)(a2 + 52));
  v10 = *v9;
  v11 = *((_BYTE *)v9 + 9);
  v12 = *((_BYTE *)v9 + 10);
  v13 = *((_BYTE *)v9 + 11);
  v14 = v9[2];
  v15 = v9[3];
  v16 = v9[4];
  v17 = v9[5];
  v18 = *((_BYTE *)v9 + 48);
  v26 = *((_BYTE *)v9 + 8);
  v19 = v9[7];
  v20 = v9[8];
  v22 = v9[9];
  v25 = v10;
  v27 = v11;
  v28 = v12;
  v29 = v13;
  v30 = v14;
  v31 = v15;
  v32 = v16;
  v33 = v17;
  v34 = v18;
  v35 = v19;
  v36 = v20;
  v37 = v22;
  FeedModel<>.init(model:context:namespace:)((uint64_t)v7, v23, v24);
}

uint64_t sub_1BB42E084()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v4 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v2, v3);
  swift_bridgeObjectRetain();
  v5 = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1BB42E0E4()
{
  static FeedModel.== infix(_:_:)();
}

uint64_t *sub_1BB42E0F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  id v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  id v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64) + 7;
  v11 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v10 + ((v9 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v32 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v17 = *(void **)v16;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
    *(_BYTE *)(v15 + 9) = *(_BYTE *)(v16 + 9);
    *(_BYTE *)(v15 + 10) = *(_BYTE *)(v16 + 10);
    *(_BYTE *)(v15 + 11) = *(_BYTE *)(v16 + 11);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
    v18 = *(_QWORD *)(v16 + 40) - 1;
    v19 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 >= 3)
    {
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    }
    *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
    v20 = *(void **)(v16 + 56);
    *(_QWORD *)(v15 + 56) = v20;
    *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
    v21 = (_QWORD *)((v15 + 87) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v16 + 87) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v21[1] = v22[1];
    v23 = (char *)v22 + v9;
    v24 = ((unint64_t)v21 + v9 + 16) & v32;
    v25 = (unint64_t)(v23 + 16) & v32;
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v27 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v24, v25, v5);
    v28 = (_QWORD *)((v10 + v25) & 0xFFFFFFFFFFFFFFF8);
    v29 = v28[1];
    v30 = (_QWORD *)((v10 + v24) & 0xFFFFFFFFFFFFFFF8);
    *v30 = *v28;
    v30[1] = v29;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BB42E32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(void **)v9;
  v11 = *(void **)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v12 = v10;

  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_BYTE *)(v8 + 9) = *(_BYTE *)(v9 + 9);
  *(_BYTE *)(v8 + 10) = *(_BYTE *)(v9 + 10);
  *(_BYTE *)(v8 + 11) = *(_BYTE *)(v9 + 11);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v9 + 40) - 1;
  if ((unint64_t)(*(_QWORD *)(v8 + 40) - 1) >= 3)
  {
    if (v13 >= 3)
    {
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BB1E4E14(v8 + 32);
    goto LABEL_6;
  }
  if (v13 < 3)
  {
LABEL_6:
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    goto LABEL_8;
  }
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v14 = *(void **)(v8 + 56);
  v15 = *(void **)(v9 + 56);
  *(_QWORD *)(v8 + 56) = v15;
  v16 = v15;

  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (_QWORD *)((v8 + 87) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v9 + 87) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((unint64_t)v17 + v20 + 16) & ~v20;
  v22 = ((unint64_t)v18 + v20 + 16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v21, v22);
  v23 = *(_QWORD *)(v19 + 64) + 7;
  v24 = (_QWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BB42E54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_OWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_OWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = v9[4];
  v12 = v9[1];
  v11 = v9[2];
  v8[3] = v9[3];
  v8[4] = v10;
  v8[1] = v12;
  v8[2] = v11;
  v13 = (_OWORD *)(((unint64_t)v8 + 87) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v13 + v16 + 16) & ~v16;
  v18 = ((unint64_t)v14 + v16 + 16) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v17, v18);
  *(_OWORD *)((*(_QWORD *)(v15 + 64) + 7 + v17) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v15 + 64) + 7 + v18) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB42E624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(void **)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;

  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  *(_BYTE *)(v8 + 9) = *(_BYTE *)(v9 + 9);
  *(_BYTE *)(v8 + 10) = *(_BYTE *)(v9 + 10);
  *(_BYTE *)(v8 + 11) = *(_BYTE *)(v9 + 11);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v8 + 40) - 1) >= 3)
  {
    if ((unint64_t)(*(_QWORD *)(v9 + 40) - 1) >= 3)
    {
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BB1E4E14(v8 + 32);
  }
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
LABEL_6:
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v11 = *(void **)(v8 + 56);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);

  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)((v8 + 87) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v9 + 87) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = ((unint64_t)v12 + v15 + 16) & ~v15;
  v17 = ((unint64_t)v13 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v16, v17);
  *(_OWORD *)((*(_QWORD *)(v14 + 64) + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v14 + 64)
                                                                                       + 7
                                                                                       + v17) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BB42E7DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t *v16;
  unint64_t v17;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v5 <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v4 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  if (!a2)
    return 0;
  v9 = *(_QWORD *)(v4 + 64);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = v10 + 16;
  if (v8 >= a2)
  {
    if (v5 == v8)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 48))(a1, *(unsigned int *)(v4 + 84), v3);
    }
    else
    {
      v16 = (unint64_t *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((v7 & 0x80000000) != 0)
      {
        return (*(uint64_t (**)(unint64_t))(v6 + 48))((v11
                                                                      + (((unint64_t)v16 + 87) & 0xFFFFFFFFFFFFFFF8)) & ~v10);
      }
      else
      {
        v17 = *v16;
        if (v17 >= 0xFFFFFFFF)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  else
  {
    if (((((*(_QWORD *)(v6 + 64)
           + ((v11 + ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)) & ~v10)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v12 = 2;
    else
      v12 = a2 - v8 + 1;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB42E890 + 4 * byte_1BB916DB8[v14]))();
  }
}

void sub_1BB42E940(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0u;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + ((*(unsigned __int8 *)(v6 + 80) + 16 + ((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 87) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X4 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 16 + ((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 87) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ ((*(unsigned __int8 *)(v6 + 80)+ 16+ ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1BB42EA70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BB42EB1CLL);
}

void sub_1BB42EA78(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB42EA80);
  JUMPOUT(0x1BB42EB1CLL);
}

void sub_1BB42EAB8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB42EB1CLL);
}

void sub_1BB42EAC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB42EB1CLL);
}

void sub_1BB42EAC8(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v2 != v4)
    {
      if ((v3 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) == 0)
          JUMPOUT(0x1BB42EB18);
        JUMPOUT(0x1BB42EAFCLL);
      }
      JUMPOUT(0x1BB42EAD4);
    }
    JUMPOUT(0x1BB42EAE8);
  }
  JUMPOUT(0x1BB42EB1CLL);
}

void sub_1BB42EBE0()
{

}

void sub_1BB42EC0C()
{
  sub_1BB42EE84(&qword_1EF2C3C28, (uint64_t)&unk_1BB916ED0);
  JUMPOUT(0x1BCCE1E7CLL);
}

void __swiftcall UIView.moveDebugButton(to:)(UIButton_optional *__return_ptr retstr, UIView *to)
{
  uint64_t v3;

  v3 = sub_1BB42EC8C();
  if (v3)
    -[UIView addSubview:](to, sel_addSubview_, v3);
}

uint64_t sub_1BB42EC8C()
{
  void *v0;
  id v1;
  unint64_t v2;
  unint64_t v3;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = objc_msgSend(v0, sel_subviews);
  sub_1BA81CF48();
  v2 = sub_1BB872DB4();

  if (v2 >> 62)
    goto LABEL_22;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    while (__OFSUB__(v3--, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v3 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_23;
    }
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = (id)MEMORY[0x1BCCE4630](v3, v2);
      goto LABEL_9;
    }
    if ((v3 & 0x8000000000000000) != 0)
      goto LABEL_20;
    if (v3 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_21;
    v5 = *(id *)(v2 + 32 + 8 * v3);
LABEL_9:
    v6 = v5;
    type metadata accessor for DebugButton();
    v7 = swift_dynamicCastClass();
    if (v7)
    {
      v11 = v7;
      swift_bridgeObjectRelease();
      return v11;
    }
    v8 = objc_msgSend(v6, sel_subviews);
    v9 = sub_1BB872DB4();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v10)
    {
      v13 = swift_bridgeObjectRelease();
      v14 = sub_1BB42EC8C(v13);

      return v14;
    }

  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB42EE60()
{
  return sub_1BB42EE84(&qword_1EF2C3C20, (uint64_t)&unk_1BB916E98);
}

uint64_t sub_1BB42EE84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugButton();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB42EEC4()
{
  unint64_t result;

  result = qword_1EF2C3C30;
  if (!qword_1EF2C3C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916F54, &type metadata for FormatInspectionIssueSeverity);
    atomic_store(result, (unint64_t *)&qword_1EF2C3C30);
  }
  return result;
}

id sub_1BB42EF08(char a1)
{
  if ((a1 & 1) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.988235294, 0.729411765, 0.0117647059, 1.0);
  else
    return objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
}

uint64_t sub_1BB42EF70(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E696E726157;
  else
    return 0x726F727245;
}

uint64_t sub_1BB42EFA4(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_1BB42EFB8(_BYTE *a1, _BYTE *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1BB42EFCC(_BYTE *a1, _BYTE *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1BB42EFE0(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_1BB42EFF4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1BB42F084(v5, v7) & 1;
}

unint64_t sub_1BB42F040()
{
  unint64_t result;

  result = qword_1EF2C3C38;
  if (!qword_1EF2C3C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB916F7C, &type metadata for FormatInspectionIssue);
    atomic_store(result, (unint64_t *)&qword_1EF2C3C38);
  }
  return result;
}

uint64_t sub_1BB42F084(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  BOOL v5;
  char v6;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v5 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v5 || (v6 = sub_1BB874398(), result = 0, (v6 & 1) != 0))
  {
    if (a1[3] == a2[3] && a1[4] == a2[4])
      return 1;
    else
      return sub_1BB874398();
  }
  return result;
}

uint64_t destroy for FormatInspectionIssue()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatInspectionIssue(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatInspectionIssue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatInspectionIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionIssue()
{
  return &type metadata for FormatInspectionIssue;
}

uint64_t storeEnumTagSinglePayload for FormatInspectionIssueSeverity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB42F328 + 4 * byte_1BB916F05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB42F35C + 4 * byte_1BB916F00[v4]))();
}

uint64_t sub_1BB42F35C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42F364(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB42F36CLL);
  return result;
}

uint64_t sub_1BB42F378(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB42F380);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB42F384(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB42F38C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionIssueSeverity()
{
  return &type metadata for FormatInspectionIssueSeverity;
}

uint64_t static FeedPlatform.current.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C10B8 != -1)
    swift_once();
  v2 = qword_1ED3C10A0;
  v3 = unk_1ED3C10A8;
  *a1 = qword_1ED3C10A0;
  a1[1] = v3;
  return sub_1BA653B2C(v2, v3);
}

void static FeedPlatform.unknown.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

_QWORD *FeedPlatform.encode(to:)(_QWORD *result)
{
  uint64_t v1;
  _BYTE v2[24];
  uint64_t v3;

  switch(*(_QWORD *)(v1 + 8))
  {
    case 0:
      return result;
    default:
      __swift_project_boxed_opaque_existential_1(result, result[3]);
      sub_1BB8746B0();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
      sub_1BB8743E0();
      result = (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
      break;
  }
  return result;
}

uint64_t FeedPlatform.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 1 || v1 == 2 || v1 == 3)
    return sub_1BB8745D8();
  v3 = *v0;
  sub_1BB8745D8();
  if (!v1)
    return sub_1BB8745E4();
  sub_1BB8745E4();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return sub_1BA6DB13C(v3, v1);
}

uint64_t FeedPlatform.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_1BB8745CC();
  if (v2 == 1 || v2 == 2 || v2 == 3)
  {
    sub_1BB8745D8();
  }
  else
  {
    sub_1BB8745D8();
    sub_1BB8745E4();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      sub_1BA6DB13C(v1, v2);
    }
  }
  return sub_1BB874608();
}

_QWORD *sub_1BB42F72C(_QWORD *a1)
{
  return FeedPlatform.encode(to:)(a1);
}

uint64_t sub_1BB42F744()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 1 || v1 == 2 || v1 == 3)
    return sub_1BB8745D8();
  v3 = *v0;
  sub_1BB8745D8();
  if (!v1)
    return sub_1BB8745E4();
  sub_1BB8745E4();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return sub_1BA6DB13C(v3, v1);
}

_QWORD *assignWithCopy for FeedPlatform(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedPlatform(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB42F920(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1BB42F940(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPlatform()
{
  return &type metadata for FeedPlatform;
}

NewsFeed::FeedOptionList __swiftcall FeedOptionList.init(contentOptions:contentGroupOptions:)(Swift::OpaquePointer contentOptions, Swift::OpaquePointer contentGroupOptions)
{
  Swift::OpaquePointer *v2;
  NewsFeed::FeedOptionList result;

  v2->_rawValue = contentOptions._rawValue;
  v2[1]._rawValue = contentGroupOptions._rawValue;
  result.contentGroupOptions = contentGroupOptions;
  result.contentOptions = contentOptions;
  return result;
}

uint64_t FeedOptionList.contentOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedOptionList.contentGroupOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedOptionList.groupItem.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  v2 = v1[1];
  *a1 = v3;
  a1[1] = v2;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB42F9E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  v2 = v1[1];
  *a1 = v3;
  a1[1] = v2;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB42FA38(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40);
}

uint64_t sub_1BB42FA40()
{
  sub_1BB86F778();
  return sub_1BB86F76C();
}

uint64_t sub_1BB42FA7C()
{
  return 48;
}

__n128 sub_1BB42FA88(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_1BB42FA9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a2 + a1 - 16) + 16))(*(_QWORD *)(a2 + a1 - 40));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1BB42FAD8()
{
  return 48;
}

__n128 sub_1BB42FAE4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

_QWORD *Commands.RemoveIssues.Prompt.__allocating_init(issues:actions:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t Commands.RemoveIssues.Prompt.issues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Commands.RemoveIssues.Prompt.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Commands.RemoveIssues.Prompt.completion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1BA4BEB58(v1);
  return v1;
}

_QWORD *Commands.RemoveIssues.Prompt.init(issues:actions:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

BOOL static Commands.RemoveIssues.Prompt.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Commands.RemoveIssues.Prompt.Action.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t Commands.RemoveIssues.Prompt.Action.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t Commands.RemoveIssues.Prompt.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    sub_1BB872904();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v14);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v15);
    v16 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCE36DC](v16, &type metadata for Commands.RemoveIssues.Prompt.Action);
    sub_1BB872AFC(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v18);
    return 0x3D7365757373697BLL;
  }
  swift_bridgeObjectRetain();
  v2 = sub_1BB873F30();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v20 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA7447E8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v19 = v0;
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCE4630](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_identifier, v19);
      v8 = sub_1BB8729A0();
      v10 = v9;

      v12 = *(_QWORD *)(v20 + 16);
      v11 = *(_QWORD *)(v20 + 24);
      if (v12 >= v11 >> 1)
        sub_1BA7447E8(v11 > 1, v12 + 1, 1);
      ++v4;
      *(_QWORD *)(v20 + 16) = v12 + 1;
      v13 = v20 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
    }
    while (v2 != v4);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t Commands.RemoveIssues.Prompt.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA49EBE0(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t Commands.RemoveIssues.Prompt.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA49EBE0(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_1BB42FF08()
{
  return Commands.RemoveIssues.Prompt.description.getter();
}

uint64_t static ContextMenuItem.removeIssueFromMyMagazines(issue:)(void *a1)
{
  return sub_1BB42FF60(a1, &qword_1ED39EED8);
}

uint64_t static ContextMenuItem.removeDownload(issue:)(void *a1)
{
  return sub_1BB42FF60(a1, &qword_1ED39EEC0);
}

uint64_t sub_1BB42FF60(void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v8 = *a2;
  v9 = a1;
  if (v8 != -1)
    swift_once();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v10 + 32) = v9;
  v21 = v10;
  sub_1BB872DCC();
  v11 = v21;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = (void *)objc_opt_self();
  v14 = v9;
  swift_retain();
  v15 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB28 != -1)
    swift_once();
  v16 = (void *)qword_1ED3AF880;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8520], v4);
  v21 = v11;
  swift_allocObject();
  v17 = v16;
  v18 = sub_1BB86FB20();

  return v18;
}

uint64_t static SharingActivity.removeIssuePrompt(issue:actions:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v5 + 32) = a1;
  v14 = v5;
  sub_1BB872DCC();
  type metadata accessor for Commands.RemoveIssues.Prompt();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v14;
  v6[3] = a2;
  v6[4] = 0;
  v6[5] = 0;
  v7 = qword_1ED39EFA0;
  v8 = a1;
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_retain();
  swift_retain();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB28 != -1)
    swift_once();
  v11 = (id)qword_1ED3AF880;
  sub_1BB8703D8();
  swift_allocObject();
  v12 = sub_1BB86FC94();
  swift_release();
  return v12;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE17removeIssuePrompt5issue7actionsACSgSo7FCIssueCSg_SayAA8CommandsCADE12RemoveIssuesV0J0C6ActionOGtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t ObjCClassFromMetadata;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v8 + 32) = a1;
  v21 = (_QWORD *)v8;
  sub_1BB872DCC();
  v9 = v21;
  type metadata accessor for Commands.RemoveIssues.Prompt();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a2;
  v10[4] = 0;
  v10[5] = 0;
  v11 = qword_1ED39EFA0;
  v12 = a1;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB28 != -1)
    swift_once();
  v16 = (void *)qword_1ED3AF880;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8520], v4);
  v21 = v10;
  sub_1BB86FB38();
  swift_allocObject();
  v17 = v16;
  v18 = sub_1BB86FB20();
  swift_release();

  return v18;
}

unint64_t sub_1BB4306D8()
{
  unint64_t result;

  result = qword_1EF2C3C40;
  if (!qword_1EF2C3C40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for Commands.RemoveIssues.Prompt.Action, &type metadata for Commands.RemoveIssues.Prompt.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2C3C40);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.RemoveIssues()
{
  return &type metadata for Commands.RemoveIssues;
}

uint64_t method lookup function for Commands.RemoveIssues.Prompt()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Commands.RemoveIssues.Prompt.__allocating_init(issues:actions:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t _s12RemoveIssuesV6PromptC6ActionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB43078C + 4 * byte_1BB91721D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4307C0 + 4 * byte_1BB917218[v4]))();
}

uint64_t sub_1BB4307C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4307C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4307D0);
  return result;
}

uint64_t sub_1BB4307DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4307E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4307E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4307F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Commands.RemoveIssues.Prompt.Action()
{
  return &type metadata for Commands.RemoveIssues.Prompt.Action;
}

uint64_t destroy for FeedAppConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FeedAppConfig(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeedAppConfig(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedAppConfig(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BB4309B8(double a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  double v10;
  objc_super v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v12.receiver = v1;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, sel_setContentScaleFactor_, a1);
  v4 = objc_msgSend(v1, sel_subviews);
  sub_1BA81CF48();
  v5 = sub_1BB872DB4();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_10;
LABEL_3:
  if (v6 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCE4630](v7, v5);
      else
        v8 = *(id *)(v5 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v11.receiver = v1;
      v11.super_class = ObjectType;
      objc_msgSendSuper2(&v11, sel_contentScaleFactor);
      sub_1BB430D94(v9, v10);

    }
    while (v6 != v7);
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1BB430B08()
{
  char *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  __int128 v10[2];
  uint64_t v11;
  id v12;
  _QWORD v13[4];

  v1 = objc_msgSend(v0, sel_subviews);
  sub_1BA81CF48();
  v2 = sub_1BB872DB4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    v5 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_bezelView];
    v9 = v5;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE4630](v4, v2);
      else
        v6 = *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = v5;
      if (v6 != v5)
      {
        v12 = v6;
        sub_1BB0DA2B4();
        v8 = v7;
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_1BA4CECCC(v10, (uint64_t)v13);
          __swift_project_boxed_opaque_existential_1(v13, v13[3]);
          v5 = v9;
          sub_1BB871554();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        }
        else
        {
          v11 = 0;
          memset(v10, 0, sizeof(v10));
          sub_1BB0DA308((uint64_t)v10);
        }
        objc_msgSend(v8, sel_removeFromSuperview);
      }
      ++v4;

    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
}

void sub_1BB430D94(void *a1, double a2)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;

  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
    objc_msgSend(a1, sel_setContentScaleFactor_, a2);
  v4 = objc_msgSend(a1, sel_subviews);
  sub_1BA81CF48();
  v5 = sub_1BB872DB4();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_5;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_12;
LABEL_5:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCE4630](i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      sub_1BB430D94(a2);

    }
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatContentView()
{
  return objc_opt_self();
}

uint64_t FormatNotExpression.expression.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t static FormatNotExpression.== infix(_:_:)(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatExpression.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

unint64_t sub_1BB4310FC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB431120();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB431120()
{
  unint64_t result;

  result = qword_1EF2C3C80;
  if (!qword_1EF2C3C80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNotExpression, &type metadata for FormatNotExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C3C80);
  }
  return result;
}

unint64_t sub_1BB431164(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6752B0();
  a1[2] = sub_1BA653090();
  result = sub_1BB431198();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB431198()
{
  unint64_t result;

  result = qword_1EF2C3C88;
  if (!qword_1EF2C3C88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNotExpression, &type metadata for FormatNotExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C3C88);
  }
  return result;
}

uint64_t sub_1BB4311DC(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatExpression.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

ValueMetadata *type metadata accessor for FormatNotExpression()
{
  return &type metadata for FormatNotExpression;
}

uint64_t static CoverIssueViewLayout.makeLayoutForMagazineFeedGroup(context:factories:options:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v21;

  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[40];
  v9 = a1[41];
  __swift_project_boxed_opaque_existential_1(a1 + 37, v8);
  v10 = (*(double (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  if (qword_1ED39E210 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED476400, sel_size);
  v13 = v10 * (v11 / v12);
  v14 = a1[40];
  v15 = a1[41];
  __swift_project_boxed_opaque_existential_1(a1 + 37, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
  v16 = a1[40];
  v17 = a1[41];
  __swift_project_boxed_opaque_existential_1(a1 + 37, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  *(&v21 - 6) = a2;
  *(&v21 - 5) = (uint64_t)a1;
  *((double *)&v21 - 4) = v13;
  *((double *)&v21 - 3) = v10;
  *((double *)&v21 - 2) = v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6208], v4);
  sub_1BAA46860(0, (unint64_t *)&qword_1ED39C2F0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  return sub_1BB86DB34();
}

uint64_t sub_1BB431404(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = &v20[-v16];
  v26 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v14 + 104))(&v20[-v16], *MEMORY[0x1E0DB6410], v13, v15);
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v18 = MEMORY[0x1E0DB5DD0];
  sub_1BAA46860(0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAA468DC(&qword_1ED39C2B0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1BB431564(void *a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void (*v16)(uint64_t *);
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *, uint64_t);
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(uint64_t *, uint64_t);
  void *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD);
  void (*v55)(uint64_t *);
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  void (*v60)(uint64_t *, uint64_t);
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, _QWORD, uint64_t);
  void (*v68)(uint64_t *);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t *, uint64_t);
  uint64_t v73;
  uint64_t v75;
  uint64_t *v76;
  void (*v77)(_QWORD);
  uint64_t v78;
  uint64_t KeyPath;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  void (*v86)(uint64_t *, uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t *);
  void *v89;
  char v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  char v100;
  void *v101;
  uint64_t v102;
  _BYTE v103[40];
  char v104;
  uint64_t v105;
  void *v106;
  _OWORD v107[6];
  __int128 v108;
  _OWORD v109[3];

  v77 = a2;
  v89 = a1;
  sub_1BB16AF40();
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v5;
  MEMORY[0x1E0C80A78](v5);
  v81 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v75 - v13);
  *(_QWORD *)&v107[0] = a1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0x4024000000000000;
  *v14 = v15;
  v16 = *(void (**)(uint64_t *))(v9 + 104);
  v84 = *MEMORY[0x1E0DB63F0];
  v16(v14);
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v19 = v18;
  v20 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v17, MEMORY[0x1E0DB5A18]);
  v87 = v19;
  v85 = v20;
  sub_1BB86D4EC();
  v21 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v76 = v14;
  v86 = v21;
  v21(v14, v8);
  v106 = v89;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v80 = v11;
  v78 = v8;
  v88 = v16;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v11, v22, v8);
  v105 = *((_QWORD *)v77 + 3);
  v23 = *(_OWORD *)(a3 + 88);
  v24 = *(_OWORD *)(a3 + 120);
  v108 = *(_OWORD *)(a3 + 104);
  v109[0] = v24;
  *(_OWORD *)((char *)v109 + 9) = *(_OWORD *)(a3 + 129);
  v25 = *(_OWORD *)(a3 + 24);
  v26 = *(_OWORD *)(a3 + 56);
  v107[2] = *(_OWORD *)(a3 + 40);
  v107[3] = v26;
  v107[4] = *(_OWORD *)(a3 + 72);
  v107[5] = v23;
  v107[0] = *(_OWORD *)(a3 + 8);
  v107[1] = v25;
  v27 = *(void **)&v107[0];
  if ((_QWORD)v23 == 1 || (v28 = (void *)*((_QWORD *)&v108 + 1)) == 0)
  {
    swift_retain();
    sub_1BA8D1F08((uint64_t)v107);
    FCIssue.issueCoverModel.getter((uint64_t)&v101);
    sub_1BA8D1FE4((uint64_t)v107);
    v27 = v101;
    v29 = v102;
    v35 = *(_OWORD *)v103;
    v32 = *(_OWORD *)&v103[16];
    v34 = *(_QWORD *)&v103[32];
    v33 = v104;
  }
  else
  {
    v29 = *(_QWORD *)&v109[0];
    v101 = *(void **)&v107[0];
    v102 = *(_QWORD *)&v109[0];
    *(_QWORD *)v103 = *((_QWORD *)&v108 + 1);
    memset(&v103[8], 0, 32);
    v104 = 0;
    swift_retain();
    v30 = v28;
    v31 = v27;
    v32 = 0uLL;
    v33 = 0;
    v34 = 0;
    v35 = (unint64_t)v28;
  }
  v95 = v27;
  v96 = v29;
  v97 = v35;
  v98 = v32;
  v99 = v34;
  v100 = v33;
  v36 = *(_QWORD *)(a3 + 320);
  v37 = *(_QWORD *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 296), v36);
  v38 = (*(double (**)(uint64_t, uint64_t))(v37 + 64))(v36, v37);
  v90 = 0;
  v91 = 0x4010000000000000;
  v92 = v38;
  v93 = -1;
  v94 = 0x3FE0000000000000;
  sub_1BA4CDF6C(0, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA915CEC();
  sub_1BB16B024();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v39 = v81;
  sub_1BB86D684();
  v40 = v80;
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v39, v83);
  v41 = v78;
  v42 = v86;
  v86((uint64_t *)v40, v78);
  v83 = a3;
  v101 = v89;
  v43 = v89;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = 0x4024000000000000;
  v45 = v76;
  *v76 = v44;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v88)(v45, v84, v41);
  sub_1BB86D4EC();
  v42(v45, v41);
  v101 = v43;
  sub_1BA71C838();
  v47 = v46;
  v82 = v46;
  v48 = swift_allocBox();
  v50 = v49;
  v51 = v49 + *(int *)(v47 + 48);
  LODWORD(v81) = *MEMORY[0x1E0DB5F98];
  v52 = v81;
  v53 = sub_1BB86D894();
  v54 = *(void (**)(_QWORD))(*(_QWORD *)(v53 - 8) + 104);
  v77 = v54;
  ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v50, v52, v53);
  LODWORD(v80) = *MEMORY[0x1E0DB5FB8];
  v54(v51);
  *v45 = v48;
  LODWORD(KeyPath) = *MEMORY[0x1E0DB63D0];
  v55 = v88;
  v56 = ((uint64_t (*)(uint64_t *))v88)(v45);
  MEMORY[0x1E0C80A78](v56);
  sub_1BB86D498();
  v57 = v41;
  v58 = v45;
  v59 = v41;
  v60 = v86;
  v86(v45, v57);
  v61 = v89;
  v101 = v89;
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = 0x401C000000000000;
  *v45 = v62;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v55)(v45, v84, v59);
  sub_1BB86D4EC();
  v60(v45, v59);
  v101 = v61;
  v63 = v82;
  v64 = swift_allocBox();
  v66 = v65 + *(int *)(v63 + 48);
  v67 = (void (*)(uint64_t, _QWORD, uint64_t))v77;
  ((void (*)(uint64_t, _QWORD, uint64_t))v77)(v65, v81, v53);
  v67(v66, v80, v53);
  *v58 = v64;
  v68 = v88;
  v69 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v88)(v58, KeyPath, v59);
  MEMORY[0x1E0C80A78](v69);
  sub_1BB86D498();
  v70 = v59;
  v71 = v59;
  v72 = v86;
  v86(v58, v71);
  v101 = v61;
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = 0x4038000000000000;
  *v58 = v73;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v68)(v58, v84, v70);
  sub_1BB86D4EC();
  v72(v58, v70);
  v101 = v61;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v68)(v58, *MEMORY[0x1E0DB63C0], v70);
  sub_1BB86D540();
  return ((uint64_t (*)(uint64_t *, uint64_t))v72)(v58, v70);
}

uint64_t sub_1BB431D6C(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t **v9;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t *, _QWORD, uint64_t **);
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD *);
  void (*v32)(uint64_t *, uint64_t **);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t **v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, _QWORD *);
  uint64_t v56;
  uint64_t *v57;
  uint64_t **v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[7];
  char v64;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v10 = v9;
  v61 = (uint64_t)*(v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v60 = (uint64_t *)((char *)&v57 - v11);
  v12 = a2[7];
  sub_1BA915B28((uint64_t)a2, (uint64_t)v63);
  v13 = (unsigned int *)MEMORY[0x1E0DB5FA0];
  if ((v12 & 1) != 0)
  {
    v14 = v64;
    sub_1BA915C30((uint64_t)v63);
    if ((v14 & 8) == 0)
    {
      v62 = a1;
      sub_1BA71C838();
      v16 = v15;
      v17 = swift_allocBox();
      v19 = v18;
      v57 = (uint64_t *)((char *)v18 + *(int *)(v16 + 48));
      v58 = (uint64_t **)v17;
      v20 = swift_allocObject();
      *(double *)(v20 + 16) = a3;
      *v19 = v20;
      v21 = *v13;
      v22 = sub_1BB86D894();
      v23 = *(void (**)(void))(*(_QWORD *)(v22 - 8) + 104);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v23)(v19, v21, v22);
      v24 = swift_allocObject();
      v59 = a1;
      v26 = a2[40];
      v25 = a2[41];
      __swift_project_boxed_opaque_existential_1(a2 + 37, v26);
      *(double *)(v24 + 16) = (*(double (**)(uint64_t, uint64_t))(v25 + 24))(v26, v25);
      *v57 = v24;
      v23();
      v27 = v60;
      v28 = v61;
      *v60 = (uint64_t)v58;
      v29 = *(uint64_t (**)(uint64_t *, _QWORD, uint64_t **))(v28 + 104);
      v30 = v29(v27, *MEMORY[0x1E0DB63D0], v10);
      v58 = &v57;
      MEMORY[0x1E0C80A78](v30);
      *(&v57 - 4) = a2;
      *((double *)&v57 - 3) = a3;
      v31 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
      v56 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v31, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4BC();
      v32 = *(void (**)(uint64_t *, uint64_t **))(v28 + 8);
      a1 = v59;
      v32(v27, v10);
      v62 = a1;
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = 0x4010000000000000;
      *v27 = v33;
      v29(v27, *MEMORY[0x1E0DB63E8], v10);
      sub_1BB86D4EC();
      v32(v27, v10);
      v13 = (unsigned int *)MEMORY[0x1E0DB5FA0];
    }
  }
  else
  {
    sub_1BA915C30((uint64_t)v63);
  }
  v63[0] = a1;
  sub_1BA71C838();
  v35 = v34;
  v59 = swift_allocBox();
  v37 = v36;
  v38 = (uint64_t *)((char *)v36 + *(int *)(v35 + 48));
  v39 = sub_1BB86D894();
  v40 = swift_allocBox();
  v42 = v41;
  v43 = swift_allocObject();
  *(double *)(v43 + 16) = a5 + 12.0;
  *v42 = v43;
  v44 = *v13;
  v45 = *(_QWORD *)(v39 - 8);
  v58 = v10;
  v46 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v45 + 104);
  v46(v42, v44, v39);
  *v37 = v40;
  v46(v37, *MEMORY[0x1E0DB5FA8], v39);
  v47 = swift_allocObject();
  v48 = a2[40];
  v49 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v48);
  *(double *)(v47 + 16) = (*(double (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
  *v38 = v47;
  v46(v38, v44, v39);
  v50 = v60;
  *v60 = v59;
  v51 = v61;
  v52 = v58;
  v53 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t **))(v61 + 104))(v50, *MEMORY[0x1E0DB63D0], v58);
  MEMORY[0x1E0C80A78](v53);
  v54 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v56 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v54, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  return (*(uint64_t (**)(uint64_t *, uint64_t **))(v51 + 8))(v50, v52);
}

uint64_t sub_1BB43224C(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD v35[3];
  void (*v36)(uint64_t *, uint64_t);
  void (*v37)(uint64_t *, uint64_t, uint64_t);
  uint64_t v38;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v35 - v11);
  v38 = a1;
  v13 = swift_allocObject();
  v14 = a2 + 37;
  v15 = a2[40];
  v16 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v15);
  v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  v19 = a2[40];
  v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(v14, v19);
  *(double *)(v13 + 16) = (v17 - (*(double (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18)) * 0.5;
  *v12 = v13;
  v20 = *MEMORY[0x1E0DB63F0];
  v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v37(v12, v20, v9);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v35[2] = v22;
  v35[1] = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v36 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v36(v12, v9);
  v38 = a1;
  swift_getKeyPath();
  sub_1BA71C838();
  v24 = v23;
  v25 = swift_allocBox();
  v27 = v26;
  v28 = (uint64_t *)((char *)v26 + *(int *)(v24 + 48));
  v29 = swift_allocObject();
  *(double *)(v29 + 16) = a3;
  *v27 = v29;
  v30 = *MEMORY[0x1E0DB5FA0];
  v31 = sub_1BB86D894();
  v32 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
  v32(v27, v30, v31);
  v33 = swift_allocObject();
  *(double *)(v33 + 16) = a4;
  *v28 = v33;
  v32(v28, v30, v31);
  *v12 = v25;
  v37(v12, *MEMORY[0x1E0DB63D0], v9);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v36)(v12, v9);
}

uint64_t sub_1BB432540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t, _QWORD *);
  id v19;
  _QWORD v20[2];

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v20 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 336);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v18, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v19 = v17;
    sub_1BB86D4E0();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB432780(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, _QWORD *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v54[3];
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void (*KeyPath)(uint64_t *, uint64_t);
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t *, uint64_t, uint64_t);
  uint64_t v67;

  v62 = a1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v54 - v9);
  v11 = (void *)sub_1BAA466F8(a2);
  v67 = a1;
  KeyPath = (void (*)(uint64_t *, uint64_t))swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *v10 = v12;
  v13 = *MEMORY[0x1E0DB6340];
  v66 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  v66(v10, v13, v7);
  sub_1BAA46934();
  v65 = v14;
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v56 = *(_QWORD *)(v17 + 72);
  v19 = v56;
  v20 = (v18 + 32) & ~v18;
  v63 = v20;
  v64 = v18 | 7;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
  v22 = v21 + v20;
  *(_QWORD *)(v21 + v20) = 0x4034000000000000;
  v23 = *MEMORY[0x1E0DB6030];
  v24 = sub_1BB86D8F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  v25 = *MEMORY[0x1E0DB6120];
  v26 = sub_1BB86D9B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v22, v25, v26);
  v27 = *MEMORY[0x1E0DB5B98];
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104);
  v58 = v16;
  v28(v22, v27, v16);
  v57 = v28;
  v29 = v22 + v19;
  sub_1BA7FDE2C();
  v31 = (_QWORD *)(v29 + *(int *)(v30 + 48));
  v32 = *MEMORY[0x1E0DB6000];
  v33 = sub_1BB86D8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v29, v32, v33);
  v61 = 0x80000001BB968120;
  *v31 = 0xD000000000000016;
  v31[1] = 0x80000001BB968120;
  v28(v29, *MEMORY[0x1E0DB5BF8], v16);
  v34 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v54[2] = v35;
  v54[1] = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v34, MEMORY[0x1E0DB5A18]);
  v54[0] = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v55 = v11;
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v36 = v59;
  KeyPath(v10, v59);
  v67 = v62;
  swift_getKeyPath();
  sub_1BA71C838();
  v38 = v37;
  v39 = swift_allocBox();
  v41 = v40;
  v42 = (uint64_t *)((char *)v40 + *(int *)(v38 + 48));
  v43 = swift_allocObject();
  *(double *)(v43 + 16) = a3;
  *v41 = v43;
  v44 = *MEMORY[0x1E0DB5FA0];
  v45 = sub_1BB86D894();
  v46 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104);
  v46(v41, v44, v45);
  v47 = swift_allocObject();
  *(double *)(v47 + 16) = a3;
  *v42 = v47;
  v46(v42, v44, v45);
  *v10 = v39;
  v66(v10, *MEMORY[0x1E0DB63D0], v36);
  v48 = v63;
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BB87CE70;
  v50 = v49 + v48;
  v51 = *MEMORY[0x1E0DB5C58];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
  v57(v50, *MEMORY[0x1E0DB5C68], v58);
  sub_1BB86D4E0();

  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))KeyPath)(v10, v36);
}

uint64_t sub_1BB432C88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];

  v26[2] = *a1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - v5);
  v26[3] = a1;
  v26[1] = swift_getKeyPath();
  sub_1BA71C838();
  v8 = v7;
  v9 = swift_allocBox();
  v11 = v10;
  v12 = (uint64_t *)(v10 + *(int *)(v8 + 48));
  v13 = *MEMORY[0x1E0DB5F98];
  v14 = sub_1BB86D894();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  v15(v11, v13, v14);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0x4000000000000000;
  *v12 = v16;
  v15((uint64_t)v12, *MEMORY[0x1E0DB5FA0], v14);
  *v6 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB63D0], v3);
  sub_1BAA46934();
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  v22 = v21 + v20;
  v23 = *MEMORY[0x1E0DB5C30];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E0DB5C68], v18);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB432F48(uint64_t a1)
{
  return sub_1BB432F60(a1, sub_1BB431404);
}

uint64_t sub_1BB432F54(uint64_t a1)
{
  return sub_1BB432F60(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, double, double, double))sub_1BB431564);
}

uint64_t sub_1BB432F60(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, double, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48));
}

uint64_t sub_1BB432F74()
{
  return swift_deallocObject();
}

uint64_t sub_1BB432F84(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB431D6C(a1, *(uint64_t **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_1BB432F94(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB432780(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1BB432FA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB432FC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB432540(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB432FCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB43224C(a1, *(_QWORD **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1BB4330C0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed11FormatLabel_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB4330FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *);
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_link))
  {
    v11 = *(void (**)(char *))(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock);
    if (v11)
    {
      v12 = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_label, v8);
      if (v12)
      {
        v13 = (void *)v12;
        swift_retain();
        sub_1BA4BEB58((uint64_t)v11);
        objc_msgSend(a1, sel_locationInView_, v13);
        sub_1BAAC52BC((uint64_t)v5, v14, v15);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          swift_release();
          sub_1BA49EBE0((uint64_t)v11);

          sub_1BA7F0A80((uint64_t)v5);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
          v11(v10);
          swift_release();
          sub_1BA49EBE0((uint64_t)v11);

          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
      }
    }
  }
}

BOOL sub_1BB433354(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  sub_1BA6EF3B0();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_link))
    return 0;
  v7 = (void *)MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_label, v4);
  if (!v7)
    return 0;
  v8 = v7;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock))
  {

    return 0;
  }
  swift_retain();
  objc_msgSend(a1, sel_locationInView_, v8);
  sub_1BAAC52BC((uint64_t)v6, v9, v10);

  swift_release();
  v11 = sub_1BB86C67C();
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) != 1;
  sub_1BA7F0A80((uint64_t)v6);
  return v12;
}

void sub_1BB4334B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  __asm { BR              X9 }
}

void sub_1BB433558()
{
  JUMPOUT(0x1BB433528);
}

void sub_1BB433564()
{
  JUMPOUT(0x1BB433528);
}

void sub_1BB433570()
{
  JUMPOUT(0x1BB433528);
}

void sub_1BB43357C()
{
  JUMPOUT(0x1BB433528);
}

void sub_1BB433588()
{
  JUMPOUT(0x1BB433528);
}

void sub_1BB433594()
{
  JUMPOUT(0x1BB433528);
}

uint64_t sub_1BB4335A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpressionLogicCompare.init(from:)(a1, a2);
}

uint64_t sub_1BB4335B8(_QWORD *a1)
{
  return FormatFrameExpressionLogicCompare.encode(to:)(a1);
}

unint64_t sub_1BB4335CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4335F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4335F0()
{
  unint64_t result;

  result = qword_1EF2C3D30;
  if (!qword_1EF2C3D30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicCompare, &type metadata for FormatFrameExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1EF2C3D30);
  }
  return result;
}

unint64_t sub_1BB433634(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE77634();
  a1[2] = sub_1BAEF9C24();
  result = sub_1BB433668();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB433668()
{
  unint64_t result;

  result = qword_1EF2C3D38;
  if (!qword_1EF2C3D38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicCompare, &type metadata for FormatFrameExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1EF2C3D38);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFrameExpressionLogicCompare()
{
  return &type metadata for FormatFrameExpressionLogicCompare;
}

void static FormatTextSize.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB433718()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  if (v0 >> 61)
  {
    sub_1BA725020(v0);
    sub_1BA725020(v1);
    sub_1BA725050(v1);
    sub_1BA725050(v0);
    v3 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 16);
    sub_1BA725020(v0);
    sub_1BA725020(v1);
    static FormatSize.== infix(_:_:)((uint64_t)&v5);
    v3 = v2;
    sub_1BA725050(v1);
    sub_1BA725050(v0);
  }
  return v3 & 1;
}

unint64_t sub_1BB433958()
{
  return 0xD000000000000014;
}

void sub_1BB433974(char *a1)
{
  sub_1BB802474(*a1);
}

uint64_t sub_1BB433980()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D421C((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB4339C4(uint64_t a1)
{
  char *v1;

  sub_1BA9D421C(a1, *v1);
}

uint64_t sub_1BB4339CC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D421C((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB433A10()
{
  uint64_t v0;

  sub_1BA719718(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB433A34()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB433A5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9590)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9590);
  }
}

uint64_t sub_1BB433AB0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB433AD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D2AE8;
  if (!qword_1ED3D2AE8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3D2AF0, (uint64_t (*)(void))sub_1BAEE4E14, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AE8);
  }
  return result;
}

uint64_t sub_1BB433B3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA725050(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1BB433B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v6;

  sub_1BB6403E8(a1, a4, a2, a3, &v6);
  v4 = v6;
  sub_1BA7253B0();
  return sub_1BA725050(v4);
}

uint64_t sub_1BB433C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1BA7A8EA0();
  if (v5)
    *a5 = v5;
  return result;
}

unint64_t sub_1BB433C6C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA650CD0();
  a1[2] = sub_1BA7636D8();
  result = sub_1BB433CA0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB433CA0()
{
  unint64_t result;

  result = qword_1ED3D2518;
  if (!qword_1ED3D2518)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextSize, &type metadata for FormatTextSize);
    atomic_store(result, (unint64_t *)&qword_1ED3D2518);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatTextSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA725020(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatTextSize(unint64_t *a1)
{
  return sub_1BA725050(*a1);
}

unint64_t *assignWithCopy for FormatTextSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA725020(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA725050(v4);
  return a1;
}

unint64_t *assignWithTake for FormatTextSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA725050(v3);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextSize()
{
  return &type metadata for FormatTextSize;
}

ValueMetadata *type metadata accessor for FormatTextSize.CodingType()
{
  return &type metadata for FormatTextSize.CodingType;
}

unint64_t sub_1BB433DA8()
{
  unint64_t result;

  result = qword_1EF2C3D40[0];
  if (!qword_1EF2C3D40[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9177FC, &type metadata for FormatTextSize.CodingType);
    atomic_store(result, qword_1EF2C3D40);
  }
  return result;
}

uint64_t sub_1BB433DEC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BA740E88(0, v1, 0);
    v2 = v15;
    v4 = a1 + 56;
    do
    {
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA724A8C();
      v6 = v5;
      v8 = v7;
      v10 = v9;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v12 = *(_QWORD *)(v15 + 16);
      v11 = *(_QWORD *)(v15 + 24);
      if (v12 >= v11 >> 1)
        sub_1BA740E88(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = v15 + 24 * v12;
      *(_QWORD *)(v13 + 32) = v6;
      *(_QWORD *)(v13 + 40) = v8;
      *(_BYTE *)(v13 + 48) = v10 & 1;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB433F40()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB433F64()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB433F90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB433FB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA725050(*(_QWORD *)(v0 + 24));
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB434000(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB433B68(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BB434024()
{
  return swift_deallocObject();
}

uint64_t sub_1BB434034(uint64_t a1, _QWORD *a2)
{
  return sub_1BA7A8E80(a1, a2);
}

uint64_t WebEmbedDataVisualizationURLDataSourceContentType.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 == 0x617453746E657665 && a2 == 0xEF61746144636974;
  if (v4 || (v5 = a2, v6 = a1, (sub_1BB874398() & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 0;
  }
  else if (v6 == 0x76694C746E657665 && v5 == 0xED00006174614465 || (sub_1BB874398() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 1;
  }
  else if (v6 == 0x746144746E657665 && v5 == 0xE900000000000061 || (sub_1BB874398() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 2;
  }
  else if (v6 == 0x61446E6F73616573 && v5 == 0xEA00000000006174 || (result = sub_1BB874398(), (result & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    v5 = 3;
  }
  *a3 = v6;
  a3[1] = v5;
  return result;
}

uint64_t WebEmbedDataVisualizationURLDataSourceContentType.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = 0x617453746E657665;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v3 = 0x76694C746E657665;
      break;
    case 2uLL:
      v3 = 0x746144746E657665;
      break;
    case 3uLL:
      v3 = 0x61446E6F73616573;
      break;
    default:
      v3 = v1;
      break;
  }
  sub_1BA6EE1A4(v1, v2);
  return v3;
}

double sub_1BB434340@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;

  WebEmbedDataVisualizationURLDataSourceContentType.init(rawValue:)(*a1, a1[1], &v4);
  result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1BB43437C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = 0xEF61746144636974;
  v5 = 0x617453746E657665;
  switch(v3)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
      v4 = 0xED00006174614465;
      v5 = 0x76694C746E657665;
LABEL_3:
      *a1 = v5;
      a1[1] = v4;
      break;
    case 2uLL:
      *a1 = 0x746144746E657665;
      a1[1] = 0xE900000000000061;
      break;
    case 3uLL:
      *a1 = 0x61446E6F73616573;
      a1[1] = 0xEA00000000006174;
      break;
    default:
      *a1 = v2;
      a1[1] = v3;
      break;
  }
  return sub_1BA6EE1A4(v2, v3);
}

uint64_t sub_1BB434438()
{
  sub_1BB434504();
  return sub_1BB872D60();
}

uint64_t sub_1BB434494()
{
  sub_1BB434504();
  return sub_1BB872D0C();
}

uint64_t sub_1BB4344E0(uint64_t a1, uint64_t a2)
{
  return sub_1BB7ECBFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

ValueMetadata *type metadata accessor for WebEmbedDataVisualizationURLDataSourceContentType()
{
  return &type metadata for WebEmbedDataVisualizationURLDataSourceContentType;
}

unint64_t sub_1BB434504()
{
  unint64_t result;

  result = qword_1ED3AAB18;
  if (!qword_1ED3AAB18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSourceContentType, &type metadata for WebEmbedDataVisualizationURLDataSourceContentType);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB18);
  }
  return result;
}

uint64_t sub_1BB434548(void *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  if ((a3 & 1) != 0)
  {
    v10 = a1;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v3[1] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3[1] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    return sub_1BB872DCC();
  }
  else
  {
    v7 = *v3;
    if (*(_QWORD *)(*v4 + 16) && (v8 = sub_1BB4CF560(a2), (v9 & 1) != 0))
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = MEMORY[0x1E0DEE9D8];
    }
    v12 = a1;
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4BFC3C(v15, a2, isUniquelyReferenced_nonNull_native);
    *v4 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4346B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OwnerCachePool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OwnerCachePool);
}

void sub_1BB4346F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 56) == 1)
  {
    v4 = *(_QWORD *)(a1 + 40);
    v5 = *(_QWORD *)(a1 + 48);
    v6 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

    switch((unint64_t)v7)
    {
      case 0uLL:
        goto LABEL_6;
      case 1uLL:
        v3 = v4;
        goto LABEL_6;
      case 5uLL:
        if (v2 < v5)
          goto LABEL_7;
        break;
      default:
        if (v2 < 0)
          goto LABEL_7;
        break;
    }
  }
  else
  {
LABEL_6:
    if (v2 < v3)
    {
LABEL_7:
      v8 = sub_1BB1E0E08(1);
      swift_beginAccess();
      v9 = v8;
      MEMORY[0x1BCCE36AC]();
      if (*(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        goto LABEL_14;
      while (1)
      {
        sub_1BB872E8C();
        sub_1BB872DCC();
        swift_endAccess();

        v10 = *(_QWORD *)(a1 + 64);
        v11 = __OFADD__(v10, 1);
        v12 = v10 + 1;
        if (!v11)
          break;
        __break(1u);
LABEL_14:
        sub_1BB872E44();
      }
      *(_QWORD *)(a1 + 64) = v12;
    }
  }
}

uint64_t dispatch thunk of AssetHandleFactoryType.createAssetHandle(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AssetHandleFactoryType.createAssetHandle(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1BB434888()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1BB4348B4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *v0;
  v2 = *(void **)(*v0 + 16);
  v3 = (void *)sub_1BB872970();
  v4 = objc_msgSend(v2, sel_assetHandleForResourceID_contentContext_, v3, *(_QWORD *)(v1 + 24));

  return v4;
}

id sub_1BB434910()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1BB86C58C();
  v3 = objc_msgSend(v1, sel_assetHandleForURL_lifetimeHint_, v2, 1);

  return v3;
}

double FormatBindingFontSize.size.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void FormatBindingFontSize.scaling.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t *FormatBindingFontSize.init(size:scaling:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  __int16 v4;

  v3 = *result;
  v4 = *((_WORD *)result + 4);
  *(double *)a2 = a3;
  *(_QWORD *)(a2 + 8) = v3;
  *(_WORD *)(a2 + 16) = v4;
  return result;
}

void FormatBindingFontSize.size.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FormatBindingFontSize.size.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBindingFontSize.scaling.setter(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_WORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*FormatBindingFontSize.scaling.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB4349E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFontSize.init(from:)(a1, a2);
}

uint64_t sub_1BB4349F4(_QWORD *a1)
{
  return FormatBindingFontSize.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatBindingFontSizeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(_WORD *)(a1 + 16);
  v3 = *(_WORD *)(a2 + 16);
  if ((v2 & 0xFF00) == 0xC00)
    return (v3 & 0xFF00) == 0xC00;
  if ((v3 & 0xFF00) != 0xC00)
  {
    if ((v2 & 1) != 0)
    {
      if ((v3 & 1) == 0)
        return 0;
    }
    else if ((v3 & 1) != 0 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    {
      return 0;
    }
    v4 = FormatFontScalingStyle.rawValue.getter();
    v6 = v5;
    if (v4 == FormatFontScalingStyle.rawValue.getter() && v6 == v7)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      return 1;
  }
  return 0;
}

unint64_t sub_1BB434B18(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB434B3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB434B3C()
{
  unint64_t result;

  result = qword_1EF2C3DC8;
  if (!qword_1EF2C3DC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFontSize, &type metadata for FormatBindingFontSize);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DC8);
  }
  return result;
}

unint64_t sub_1BB434B80(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE71884();
  a1[2] = sub_1BAEF0F9C();
  result = sub_1BB434BB4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB434BB4()
{
  unint64_t result;

  result = qword_1EF2C3DD0;
  if (!qword_1EF2C3DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFontSize, &type metadata for FormatBindingFontSize);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DD0);
  }
  return result;
}

double sub_1BB434BF8@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

double sub_1BB434C04(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1BB434C10@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)(result + 8);
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1BB434C24(uint64_t result, uint64_t a2)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)result;
  *(_WORD *)(a2 + 16) = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatBindingFontSize(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF4 && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 244);
  if (*(unsigned __int8 *)(a1 + 17) <= 0xCu)
    v3 = 12;
  else
    v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = v3 - 13;
  if (*(unsigned __int8 *)(a1 + 17) < 0xCu)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBindingFontSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 244;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF4)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xF4)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 12;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingFontSize()
{
  return &type metadata for FormatBindingFontSize;
}

uint64_t sub_1BB434CE4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatNumberBinding.init(from:)(a1, a2);
}

uint64_t sub_1BB434CF8(_QWORD *a1)
{
  return FormatNumberBinding.encode(to:)(a1);
}

BOOL _s8NewsFeed19FormatNumberBindingO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;

  v2 = *a1;
  v3 = *a2;
  v4 = (v2 >> 5) & 3;
  if (v4)
  {
    if (v4 == 1)
    {
      v5 = (v3 ^ v2) & 0xFFFFFF9F;
      return (v3 & 0x60) == 0x20 && v5 == 0;
    }
    if ((v3 & 0x60) == 0x40)
    {
      if ((v2 & 0x80) != 0)
      {
        if ((v3 & 0x80) != 0 && ((v3 ^ v2) & 0x1F) == 0)
          return 1;
      }
      else if ((v3 & 0x80) == 0 && ((v3 ^ v2) & 1) == 0)
      {
        return 1;
      }
    }
  }
  else if (!(v3 & 0x60 | (v3 ^ v2) & 1))
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1BB434D94(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB434DB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB434DB8()
{
  unint64_t result;

  result = qword_1EF2C3DD8;
  if (!qword_1EF2C3DD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberBinding, &type metadata for FormatNumberBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DD8);
  }
  return result;
}

unint64_t sub_1BB434DFC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEA7CFC();
  a1[2] = sub_1BAEEF134();
  result = sub_1BB434E30();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB434E30()
{
  unint64_t result;

  result = qword_1EF2C3DE0;
  if (!qword_1EF2C3DE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberBinding, &type metadata for FormatNumberBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatNumberBinding(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 242 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 242) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD)
    return ((uint64_t (*)(void))((char *)&loc_1BB434EC0 + 4 * byte_1BB917AE5[v4]))();
  *a1 = a2 - 14;
  return ((uint64_t (*)(void))((char *)sub_1BB434EF4 + 4 * byte_1BB917AE0[v4]))();
}

uint64_t sub_1BB434EF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB434EFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB434F04);
  return result;
}

uint64_t sub_1BB434F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB434F24);
  *(_BYTE *)result = 8 * ((((-a2 >> 2) & 3) - 4 * a2) & 0xF);
  return result;
}

uint64_t sub_1BB434F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB434F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatNumberBinding()
{
  return &type metadata for FormatNumberBinding;
}

uint64_t sub_1BB434F4C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v1, 0);
  v2 = v26;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v22 = v1;
  v24 = a1 + 64;
  v23 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v25 = v7;
    v12 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0x80000001BB98D000);
    sub_1BB872AFC(v13);

    result = swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v26 + 16);
    v15 = *(_QWORD *)(v26 + 24);
    if (v14 >= v15 >> 1)
      result = sub_1BA7447E8(v15 > 1, v14 + 1, 1);
    *(_QWORD *)(v26 + 16) = v14 + 1;
    v16 = v26 + 16 * v14;
    *(_QWORD *)(v16 + 32) = 0xD000000000000010;
    *(_QWORD *)(v16 + 40) = 0x80000001BB98D000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v17 = *(_QWORD *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23)
      goto LABEL_27;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v25 + 1;
    v6 = v9;
    if (v25 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

double FeedIssue.init(identifier:issue:badge:issueTraits:premiumBadge:overrides:scoreProfile:userHasAccess:state:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char *a11)
{
  char v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  id v22;
  id v23;
  uint64_t v24;
  double result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;

  v13 = *a4;
  v14 = *a5;
  v15 = *a6;
  v16 = *a7;
  v17 = a7[1];
  v18 = a7[2];
  v19 = *a11;
  if (a2)
  {
    v20 = a2;
  }
  else
  {
    v30 = a8;
    v29 = *a11;
    v27 = a7[1];
    v28 = *a7;
    v26 = a7[2];
    v22 = a3;
    v23 = objc_msgSend(v22, sel_identifier);
    a1 = sub_1BB8729A0();
    v20 = v24;

    v18 = v26;
    v17 = v27;
    v16 = v28;
    v19 = v29;
    a8 = v30;
  }
  *(_QWORD *)a9 = a3;
  *(_QWORD *)(a9 + 8) = a1;
  *(_QWORD *)(a9 + 16) = v20;
  *(_BYTE *)(a9 + 24) = v13;
  *(_BYTE *)(a9 + 25) = v15;
  *(_QWORD *)(a9 + 32) = 0;
  *(_BYTE *)(a9 + 40) = 0;
  *(_QWORD *)(a9 + 48) = v14;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a10 & 1;
  *(_OWORD *)(a9 + 72) = v16;
  *(_OWORD *)(a9 + 88) = v17;
  *(_OWORD *)(a9 + 104) = v18;
  result = 0.0;
  *(_OWORD *)(a9 + 120) = xmmword_1BB8E2870;
  *(_BYTE *)(a9 + 136) = v19;
  return result;
}

void static FeedIssue.State.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FeedIssue.debugIdentifier.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedIssue.debugSourceName.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(objc_msgSend(*v0, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedIssue.debugTitle.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_coverDate);
  v2 = sub_1BB8729A0();

  return v2;
}

id FeedIssue.debugAssetHandle.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_coverImageAssetHandle);
}

void *FeedIssue.debugScoreProfile.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void FeedIssue.traits.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char v12;

  if ((*(_BYTE *)(v1 + 64) & 1) != 0)
  {
    FCIssue.issueCoverModel.getter((uint64_t)&v5);
    if (v12)
    {
      if (v12 == 1)
      {
        sub_1BA899748(v5, v6, v7, v8, v9, v10, v11, 1);
        v3 = 16448;
      }
      else
      {
        v3 = 0;
      }
    }
    else
    {
      sub_1BA899748(v5, v6, v7, v8, v9, v10, v11, 0);
      v3 = 64;
    }
  }
  else
  {
    FCIssue.issueCoverModel.getter((uint64_t)&v5);
    if (v12)
    {
      if (v12 == 1)
      {
        sub_1BA899748(v5, v6, v7, v8, v9, v10, v11, 1);
        v4 = 16448;
      }
      else
      {
        v4 = 0;
      }
    }
    else
    {
      sub_1BA899748(v5, v6, v7, v8, v9, v10, v11, 0);
      v4 = 64;
    }
    v3 = v4 | 0x1000;
  }
  *a1 = v3;
}

uint64_t FeedIssue.additionalFormatFeedItems.getter()
{
  void **v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *v0;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  v3 = objc_msgSend(v1, sel_sourceChannel);
  *(_QWORD *)(v2 + 56) = &type metadata for FeedTag;
  *(_QWORD *)(v2 + 64) = sub_1BA6A96BC();
  v4 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = v4;
  v5 = objc_msgSend(v3, sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  *(_OWORD *)(v4 + 96) = xmmword_1BB87FC90;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_BYTE *)(v4 + 160) = 0;
  *(_QWORD *)(v4 + 16) = v6;
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = 0xE000000000000000;
  *(_QWORD *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 56) = 0;
  v9 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = v9;
  return v2;
}

uint64_t FeedIssue.feedContextIdentifier.getter()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];

  v1 = v0[6];
  v2 = v0[7];
  v3 = v0[4];
  v26 = v0[5];
  v27 = v1;
  v28[0] = v2;
  *(_OWORD *)((char *)v28 + 9) = *(__int128 *)((char *)v0 + 121);
  v4 = v0[2];
  v24 = v0[3];
  v25 = v3;
  v5 = *v0;
  v22 = v0[1];
  v23 = v4;
  v21 = v5;
  v19 = *((_QWORD *)&v5 + 1);
  v20 = v22;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v6);
  if (v25 != 1)
  {
    sub_1BA8D1F08((uint64_t)&v21);
    FCIssue.issueCoverModel.getter((uint64_t)&v11);
    if (!v18)
    {
      sub_1BA899748((void *)v11, v12, v13, v14, v15, v16, v17, 0);
      goto LABEL_11;
    }
    if (v18 != 1)
    {
LABEL_11:
      sub_1BA8D1FE4((uint64_t)&v21);
      goto LABEL_12;
    }
LABEL_7:
    sub_1BA899748((void *)v11, v12, v13, v14, v15, v16, v17, 1);
    goto LABEL_11;
  }
  sub_1BA8D1F08((uint64_t)&v21);
  FCIssue.issueCoverModel.getter((uint64_t)&v11);
  if (v18)
  {
    if (v18 != 1)
      goto LABEL_11;
    goto LABEL_7;
  }
  sub_1BA899748((void *)v11, v12, v13, v14, v15, v16, v17, 0);
  sub_1BA8D1FE4((uint64_t)&v21);
LABEL_12:
  v11 = 91;
  v12 = 0xE100000000000000;
  sub_1BA78E0E8();
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  return v19;
}

void FeedIssue.issueCover.getter(uint64_t a1@<X8>)
{
  void **v1;
  void *v2;
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;

  v2 = *v1;
  v3 = v1[13];
  if (v1[10] == (void *)1 || v3 == 0)
  {
    FCIssue.issueCoverModel.getter(a1);
  }
  else
  {
    v5 = v1[14];
    *(_QWORD *)a1 = v2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v3;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_BYTE *)(a1 + 56) = 0;
    v8 = v2;
    v6 = v3;
    v7 = v8;
  }
}

uint64_t sub_1BB435950()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  if (*(_QWORD *)(v0 + 80) >= 2uLL)
  {
    v8 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    v1 = *(id *)v0;
    v2 = objc_msgSend(*(id *)v0, sel_title);
    v3 = sub_1BB8729A0();
    v5 = v4;

    swift_bridgeObjectRelease();
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v7 = objc_msgSend(v1, sel_title);
    }
    else
    {
      v7 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_name);
      swift_unknownObjectRelease();
    }
    v8 = sub_1BB8729A0();
    swift_bridgeObjectRelease();

  }
  return v8;
}

uint64_t sub_1BB435A5C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  v1 = *v0;
  if ((_DWORD)v1)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    v1 = sub_1BB872A24();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t CoverViewBadge.hash(into:)()
{
  return sub_1BB8745D8();
}

BOOL static CoverViewBadge.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CoverViewBadge.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

id FeedIssue.Overrides.Image.assetHandle.getter()
{
  id *v0;

  return *v0;
}

double FeedIssue.Overrides.Image.aspectRatio.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t FeedIssue.Overrides.Image.init(assetHandle:aspectRatio:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  return result;
}

uint64_t FeedIssue.Overrides.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedIssue.Overrides.coverDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id FeedIssue.Overrides.image.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 32);
  *a1 = v2;
  return (id)v2;
}

__n128 FeedIssue.Overrides.init(title:coverDate:image:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X4>, __n128 *a6@<X8>)
{
  __n128 result;

  a6->n128_u64[0] = a1;
  a6->n128_u64[1] = a2;
  a6[1].n128_u64[0] = a3;
  a6[1].n128_u64[1] = a4;
  result = *a5;
  a6[2] = *a5;
  return result;
}

id FeedIssue.issue.getter()
{
  id *v0;

  return *v0;
}

uint64_t FeedIssue.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedIssue.badge.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

void FeedIssue.premiumBadge.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

void FeedIssue.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

void FeedIssue.issueTraits.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
}

id FeedIssue.scoreProfile.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

uint64_t FeedIssue.userHasAccess.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FeedIssue.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

void FeedIssue.state.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 136);
}

NewsFeed::FeedIssue::Traits __swiftcall FeedIssue.Traits.init(rawValue:)(NewsFeed::FeedIssue::Traits rawValue)
{
  NewsFeed::FeedIssue::Traits *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FeedIssue.Traits.downloadable.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FeedIssue.Traits.badgeable.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static FeedIssue.Traits.followed.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static FeedIssue.Traits.downloaded.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FeedIssue.Traits.myMagazineMember.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static FeedIssue.Traits.channelIssuesFeedMember.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static FeedIssue.Traits.sourcedFromDownloads.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void static FeedIssue.Traits.sourcedFromMyMagazines.getter(_QWORD *a1@<X8>)
{
  *a1 = 128;
}

void static FeedIssue.Traits.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FeedIssue.Traits.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1BB435DD0(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

uint64_t FeedIssue.copy(overrides:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  void *v10;
  char v11;
  char v12;
  __int128 v13;
  id v14;
  id v15;
  id v16;

  v3 = *a1;
  v4 = a1[3];
  v6 = *(void **)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_WORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(void **)(v2 + 56);
  v11 = *(_BYTE *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 136);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v7;
  *(_WORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v10;
  *(_BYTE *)(a2 + 64) = v11;
  *(_QWORD *)(a2 + 72) = v3;
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a2 + 96) = v4;
  v13 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 104) = v13;
  *(_OWORD *)(a2 + 120) = xmmword_1BB8E2870;
  *(_BYTE *)(a2 + 136) = v12;
  v14 = (id)v13;
  v15 = v10;
  swift_bridgeObjectRetain();
  v16 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedIssue.groupItem.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BB4363A8((void (*)(_QWORD))type metadata accessor for FeedGroupItem, a1);
}

uint64_t sub_1BB435EAC@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BB436460((void (*)(_QWORD))type metadata accessor for FeedGroupItem, a1);
}

BOOL static FeedIssue.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedIssue.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  id v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - v4;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v13 = *(void **)v1;
  v14 = *(_OWORD *)(v1 + 88);
  v15 = *(_OWORD *)(v1 + 120);
  v40 = *(_OWORD *)(v1 + 104);
  v41 = v15;
  v42 = *(_BYTE *)(v1 + 136);
  v16 = *(_OWORD *)(v1 + 24);
  v17 = *(_OWORD *)(v1 + 56);
  v36 = *(_OWORD *)(v1 + 40);
  v37 = v17;
  v38 = *(_OWORD *)(v1 + 72);
  v39 = v14;
  v34 = *(_OWORD *)(v1 + 8);
  v35 = v16;
  v18 = objc_msgSend(v13, sel_identifier);
  if (!v18)
  {
    sub_1BB8729A0();
    v18 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v19 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForIssueID_, v18);

  if (v19)
  {
    sub_1BB86C5EC();

    v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v20(v5, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v20(v12, v5, v6);
      sub_1BB86C58C();
      v30 = v39;
      v31 = v40;
      v32 = v41;
      v26 = v35;
      v27 = v36;
      v28 = v37;
      v29 = v38;
      v24 = v13;
      v33 = v42;
      v25 = v34;
      sub_1BB435950();
      sub_1BB8714AC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v21 = sub_1BB8714B8();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_1BA7F0A80((uint64_t)v5);
  v23 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
}

uint64_t sub_1BB4361B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB4361E4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(objc_msgSend(*v0, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t sub_1BB43625C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_coverDate);
  v2 = sub_1BB8729A0();

  return v2;
}

id sub_1BB4362B0()
{
  id *v0;

  return objc_msgSend(*v0, sel_coverImageAssetHandle);
}

void *sub_1BB4362D4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void FeedIssue.State.blockedState.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

NewsFeed::FeedIssue::State __swiftcall FeedIssue.State.init(blockedState:)(NewsFeed::FeedIssue::State blockedState)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)blockedState.blockedState;
  return blockedState;
}

uint64_t FeedIssue.State.selectors.getter()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  v1 = *v0;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
  v3 = 0xD000000000000012;
  if (v1)
    v3 = 0xD000000000000015;
  v4 = 0x80000001BB9627A0;
  if (v1)
    v4 = 0x80000001BB962780;
  *(_QWORD *)(result + 32) = v3;
  *(_QWORD *)(result + 40) = v4;
  return result;
}

uint64_t FeedIssue.feedItem.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BB4363A8((void (*)(_QWORD))type metadata accessor for FeedItem, a1);
}

uint64_t sub_1BB4363A8@<X0>(void (*a1)(_QWORD)@<X0>, _OWORD *a2@<X8>)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v3 = v2[5];
  v4 = v2[7];
  v20 = v2[6];
  v21[0] = v4;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v2 + 121);
  v5 = v2[1];
  v6 = v2[3];
  v16 = v2[2];
  v7 = v16;
  v17 = v6;
  v8 = v2[3];
  v9 = v2[5];
  v18 = v2[4];
  v10 = v18;
  v19 = v9;
  v11 = v2[1];
  v15[0] = *v2;
  v12 = v15[0];
  v15[1] = v11;
  v13 = v2[7];
  a2[6] = v20;
  a2[7] = v13;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v2 + 121);
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v3;
  *a2 = v12;
  a2[1] = v5;
  a1(0);
  swift_storeEnumTagMultiPayload();
  return sub_1BA8D1F08((uint64_t)v15);
}

uint64_t sub_1BB436450@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BB436460((void (*)(_QWORD))type metadata accessor for FeedItem, a1);
}

uint64_t sub_1BB436460@<X0>(void (*a1)(_QWORD)@<X2>, _OWORD *a2@<X8>)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v3 = v2[5];
  v4 = v2[7];
  v20 = v2[6];
  v21[0] = v4;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v2 + 121);
  v5 = v2[1];
  v6 = v2[3];
  v16 = v2[2];
  v7 = v16;
  v17 = v6;
  v8 = v2[3];
  v9 = v2[5];
  v18 = v2[4];
  v10 = v18;
  v19 = v9;
  v11 = v2[1];
  v15[0] = *v2;
  v12 = v15[0];
  v15[1] = v11;
  v13 = v2[7];
  a2[6] = v20;
  a2[7] = v13;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v2 + 121);
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v3;
  *a2 = v12;
  a2[1] = v5;
  a1(0);
  swift_storeEnumTagMultiPayload();
  return sub_1BA8D1F08((uint64_t)v15);
}

uint64_t sub_1BB436508()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BA6B3DC0();
  v1 = v0[2];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v9;
    v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      v3 += 2;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0x2D70756F7267;
      *(_QWORD *)(v7 + 40) = 0xE600000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t sub_1BB436634()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB436690(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v42 = a1;
  v7 = type metadata accessor for SharedItem();
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v40 - v10;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v43 = v9;
  sub_1BA79F380(0, (unint64_t *)&qword_1EF2C5230, (void (*)(uint64_t))type metadata accessor for SharedItem);
  result = sub_1BB873F6C();
  v12 = result;
  v41 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *v42;
  v14 = 0;
  v15 = result + 64;
  v16 = v43;
  v17 = (uint64_t)v44;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v46 = v14;
      v19 = v18 | (v14 << 6);
    }
    else
    {
      v20 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v20 >= v41)
        return v12;
      v21 = v42[v20];
      v22 = v14 + 1;
      if (!v21)
      {
        v22 = v14 + 2;
        if (v14 + 2 >= v41)
          return v12;
        v21 = v42[v22];
        if (!v21)
        {
          v22 = v14 + 3;
          if (v14 + 3 >= v41)
            return v12;
          v21 = v42[v22];
          if (!v21)
          {
            v23 = v14 + 4;
            if (v14 + 4 >= v41)
              return v12;
            v21 = v42[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v41)
                  return v12;
                v21 = v42[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v14 + 4;
          }
        }
      }
LABEL_24:
      v13 = (v21 - 1) & v21;
      v46 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = a4[7];
    v25 = a4;
    v26 = (uint64_t *)(a4[6] + 16 * v19);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v45 + 72);
    sub_1BAF52AB4(v24 + v29 * v19, v17);
    sub_1BAF52BCC(v17, v16);
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    result = sub_1BB874608();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      v33 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      v16 = v43;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v30) >> 6;
      v16 = v43;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v36 = v32 == v35;
        if (v32 == v35)
          v32 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v32);
      }
      while (v37 == -1);
      v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(_QWORD *)(v15 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    v38 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v33);
    *v38 = v28;
    v38[1] = v27;
    result = sub_1BAF52BCC(v16, *(_QWORD *)(v12 + 56) + v33 * v29);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v25;
    v14 = v46;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

BOOL _s8NewsFeed0B5IssueV2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _BOOL8 result;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[25];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[25];

  v2 = a1[7];
  v30 = a1[6];
  *(_OWORD *)v31 = v2;
  *(_OWORD *)&v31[9] = *(__int128 *)((char *)a1 + 121);
  v3 = a1[3];
  v26 = a1[2];
  v27 = v3;
  v4 = a1[5];
  v28 = a1[4];
  v29 = v4;
  v5 = a1[1];
  v24 = *a1;
  v25 = v5;
  v6 = a2[7];
  v38 = a2[6];
  *(_OWORD *)v39 = v6;
  *(_OWORD *)&v39[9] = *(__int128 *)((char *)a2 + 121);
  v7 = a2[3];
  v34 = a2[2];
  v35 = v7;
  v8 = a2[5];
  v36 = a2[4];
  v37 = v8;
  v9 = a2[1];
  v32 = *a2;
  v33 = v9;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
  if ((sub_1BB8738B8() & 1) == 0)
    return 0;
  v10 = v28;
  if (v28 == 1)
  {
    sub_1BA8D1F08((uint64_t)&v24);
    FCIssue.issueCoverModel.getter((uint64_t)&v16);
    if (v23)
    {
      if (v23 == 1)
      {
        sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 1);
        sub_1BA8D1FE4((uint64_t)&v24);
        v11 = 16448;
      }
      else
      {
        sub_1BA8D1FE4((uint64_t)&v24);
        v11 = 0;
      }
    }
    else
    {
      sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 0);
      v11 = 64;
      sub_1BA8D1FE4((uint64_t)&v24);
    }
  }
  else
  {
    sub_1BA8D1F08((uint64_t)&v24);
    FCIssue.issueCoverModel.getter((uint64_t)&v16);
    if (v23)
    {
      if (v23 == 1)
      {
        sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 1);
        v12 = 16448;
      }
      else
      {
        v12 = 0;
      }
    }
    else
    {
      sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 0);
      v12 = 64;
    }
    sub_1BA8D1FE4((uint64_t)&v24);
    v11 = v12 | 0x1000;
  }
  v13 = v36;
  if (v36 == 1)
  {
    sub_1BA8D1F08((uint64_t)&v32);
    FCIssue.issueCoverModel.getter((uint64_t)&v16);
    if (v23)
    {
      if (v23 == 1)
      {
        sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 1);
        sub_1BA8D1FE4((uint64_t)&v32);
        if (v11 != 16448)
          return 0;
      }
      else
      {
        sub_1BA8D1FE4((uint64_t)&v32);
        if (v11)
          return 0;
      }
    }
    else
    {
      sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 0);
      sub_1BA8D1FE4((uint64_t)&v32);
      if (v11 != 64)
        return 0;
    }
  }
  else
  {
    sub_1BA8D1F08((uint64_t)&v32);
    FCIssue.issueCoverModel.getter((uint64_t)&v16);
    if (v23)
    {
      if (v23 == 1)
      {
        sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 1);
        v14 = 16448;
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      sub_1BA899748(v16, v17, v18, v19, v20, v21, v22, 0);
      v14 = 64;
    }
    sub_1BA8D1FE4((uint64_t)&v32);
    if (v11 != (v14 | 0x1000))
      return 0;
  }
  result = 0;
  if (v10 == v13 && (_QWORD)v27 == (_QWORD)v35)
  {
    if (v31[24] == v39[24])
      return BYTE8(v25) == BYTE8(v33);
    return 0;
  }
  return result;
}

unint64_t sub_1BB436D2C()
{
  unint64_t result;

  result = qword_1EF2C3DE8;
  if (!qword_1EF2C3DE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverViewBadge, &type metadata for CoverViewBadge);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DE8);
  }
  return result;
}

unint64_t sub_1BB436D70(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB436D94();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB436D94()
{
  unint64_t result;

  result = qword_1EF2C3DF0;
  if (!qword_1EF2C3DF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssue.Traits, &type metadata for FeedIssue.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DF0);
  }
  return result;
}

unint64_t sub_1BB436DDC()
{
  unint64_t result;

  result = qword_1EF2C3DF8;
  if (!qword_1EF2C3DF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssue.Traits, &type metadata for FeedIssue.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2C3DF8);
  }
  return result;
}

unint64_t sub_1BB436E24()
{
  unint64_t result;

  result = qword_1EF2C3E00;
  if (!qword_1EF2C3E00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssue.Traits, &type metadata for FeedIssue.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E00);
  }
  return result;
}

unint64_t sub_1BB436E6C()
{
  unint64_t result;

  result = qword_1ED39C8E8;
  if (!qword_1ED39C8E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssue.Traits, &type metadata for FeedIssue.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED39C8E8);
  }
  return result;
}

unint64_t sub_1BB436EB4()
{
  unint64_t result;

  result = qword_1ED39C8F0;
  if (!qword_1ED39C8F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssue.Traits, &type metadata for FeedIssue.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED39C8F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CoverViewBadge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB436F44 + 4 * byte_1BB917BBD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB436F78 + 4 * asc_1BB917BB8[v4]))();
}

uint64_t sub_1BB436F78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB436F80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB436F88);
  return result;
}

uint64_t sub_1BB436F94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB436F9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB436FA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB436FA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoverViewBadge()
{
  return &type metadata for CoverViewBadge;
}

uint64_t assignWithCopy for FeedIssue(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v7 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v10 = v8;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v11 = (__int128 *)(a1 + 72);
  v12 = (__int128 *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) == 1)
  {
    if (v13 == 1)
    {
      v14 = *v12;
      v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
      *v11 = v14;
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v18 = *(void **)(a2 + 104);
      *(_QWORD *)(a1 + 104) = v18;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = v18;
    }
  }
  else if (v13 == 1)
  {
    sub_1BB4371DC(a1 + 72);
    v17 = *(_OWORD *)(a2 + 88);
    v16 = *(_OWORD *)(a2 + 104);
    *v11 = *v12;
    *(_OWORD *)(a1 + 88) = v17;
    *(_OWORD *)(a1 + 104) = v16;
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *(void **)(a2 + 104);
    v21 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v20;
    v22 = v20;

    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  v23 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
  {
    if (v23 >= 0x11)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1BA905D68(a1 + 120);
    goto LABEL_13;
  }
  if (v23 < 0x11)
  {
LABEL_13:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
LABEL_15:
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t sub_1BB4371DC(uint64_t a1)
{
  destroy for FeedIssue.Overrides(a1);
  return a1;
}

uint64_t assignWithTake for FeedIssue(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  unint64_t v13;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  if (*(_QWORD *)(a1 + 80) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 80);
  if (v8 == 1)
  {
    sub_1BB4371DC(a1 + 72);
LABEL_4:
    v9 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
LABEL_6:
  v12 = (_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
  {
    v13 = *(_QWORD *)(a2 + 128);
    if (v13 >= 0x11)
    {
      *(_QWORD *)(a1 + 120) = *v12;
      *(_QWORD *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1BA905D68(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)v12;
LABEL_11:
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedIssue(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 137))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void destroy for FeedIssue.Overrides(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for FeedIssue.Overrides(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v6 = (void *)a2[4];
  v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for FeedIssue.Overrides(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for FeedIssue.Overrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FeedIssue.Overrides()
{
  return &type metadata for FeedIssue.Overrides;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedIssue.Overrides.Image(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for FeedIssue.Overrides.Image(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FeedIssue.Overrides.Image(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for FeedIssue.Overrides.Image()
{
  return &type metadata for FeedIssue.Overrides.Image;
}

uint64_t storeEnumTagSinglePayload for FeedIssue.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB437668 + 4 * byte_1BB917BC7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB43769C + 4 * byte_1BB917BC2[v4]))();
}

uint64_t sub_1BB43769C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4376A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4376ACLL);
  return result;
}

uint64_t sub_1BB4376B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4376C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4376C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4376CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedIssue.State()
{
  return &type metadata for FeedIssue.State;
}

void sub_1BB4376E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C3E08)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C3E08);
  }
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.properties.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinitionItemSetAuxiliary.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliary.items.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4377A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliary.init(from:)(a1, a2);
}

uint64_t sub_1BB4377B4(_QWORD *a1)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliary.encode(to:)(a1);
}

uint64_t _s8NewsFeed44FormatCompilerSlotDefinitionItemSetAuxiliaryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA882848(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    return 0;
  if (v2)
  {
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v7 = sub_1BA882848(v2, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v7 & 1;
    }
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  if (v4)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t sub_1BB43789C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4378C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4378C0()
{
  unint64_t result;

  result = qword_1EF2C3E10;
  if (!qword_1EF2C3E10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliary, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E10);
  }
  return result;
}

unint64_t sub_1BB437904(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8A7EC();
  a1[2] = sub_1BAEF449C();
  result = sub_1BB437938();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB437938()
{
  unint64_t result;

  result = qword_1EF2C3E18;
  if (!qword_1EF2C3E18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliary, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E18);
  }
  return result;
}

uint64_t sub_1BB43797C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB437988(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary()
{
  return &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliary;
}

uint64_t FormatBackgroundLayoutSolver.resolve(background:options:layoutOptions:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  const char *v34;
  const char *v35;
  const char *v36;
  unint64_t v37;
  const char *v38;
  unint64_t v39;
  const char **v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  __int128 v57;
  void *v58;
  uint64_t v59;
  const char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char **v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;

  v75 = a3;
  v71 = *v3;
  v5 = sub_1BB8705C4();
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  v74 = *(_QWORD *)(v72 + 64);
  MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatContentPool();
  v8 = *(_QWORD *)(v7 - 8);
  v68 = *(_QWORD *)(v8 + 64);
  v69 = v8;
  MEMORY[0x1E0C80A78](v7);
  v67 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v76 = (const char **)((char *)&v62 - v11);
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v62 - v13;
  v15 = type metadata accessor for FormatContent(0);
  v66 = *(_QWORD *)(v15 - 8);
  v65 = *(_QWORD *)(v66 + 64);
  MEMORY[0x1E0C80A78](v15);
  v64 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v62 - v18;
  v20 = a2[1];
  v77 = *a2;
  v78 = v20;
  v79 = *((_QWORD *)a2 + 4);
  v21 = (id)v77;
  v22 = FCFeedDescriptor.feedTag.getter();

  v23 = objc_msgSend(v22, sel_identifier);
  swift_unknownObjectRelease();
  v24 = sub_1BB8729A0();
  v26 = v25;

  v27 = sub_1BB871E24();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v14, 1, 1, v27);
  v80 = 0;
  v63 = v19;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, v24, v26, 0, 0, 0, 0, v19, 0, 0, (uint64_t)v14, 0, &v80, 0, 0);
  swift_bridgeObjectRelease();
  sub_1BA604728((uint64_t)v14, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  sub_1BA65E330();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8856E0;
  v30 = v21;
  v31 = FCFeedDescriptor.feedTag.getter();

  *(_QWORD *)(inited + 32) = v31;
  v80 = inited;
  sub_1BB872DCC();
  v32 = v80;
  v28(v14, 1, 1, v27);
  v33 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = (const char *)sub_1BA8F28DC(MEMORY[0x1E0DEE9D8]);
  v35 = (const char *)sub_1BA8F28DC((uint64_t)v33);
  v36 = (const char *)sub_1BA8F2AF8((uint64_t)v33);
  v37 = sub_1BA8F2C60((uint64_t)v33);
  v38 = (const char *)sub_1BA8F2C74((uint64_t)v33);
  v39 = sub_1BA8F2AEC((uint64_t)v33);
  v61 = (const char *)v37;
  v40 = v76;
  FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)((unint64_t)v33, v34, (unint64_t)v33, v32, v35, v36, v33, v33, v76, (unint64_t)v33, v33, v33, v61, v38, (unint64_t)v33, v39, (uint64_t)v14);
  v41 = (void *)sub_1BB86E6F8();
  v42 = (uint64_t)v19;
  v43 = v64;
  sub_1BA4C2DD8(v42, v64, type metadata accessor for FormatContent);
  v44 = v67;
  sub_1BA4C2DD8((uint64_t)v40, v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  v45 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v46 = (v65 + *(unsigned __int8 *)(v69 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v47 = (v68 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject();
  sub_1BA5193C4(v43, v48 + v45, type metadata accessor for FormatContent);
  sub_1BA5193C4(v44, v48 + v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  v49 = v48 + v47;
  v50 = v78;
  *(_OWORD *)v49 = v77;
  *(_OWORD *)(v49 + 16) = v50;
  *(_QWORD *)(v49 + 32) = v79;
  sub_1BB16CFFC((uint64_t)&v77);
  type metadata accessor for FormatContent.Resolved();
  sub_1BB86EC08();

  swift_release();
  v51 = v72;
  v52 = v73;
  v53 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v70, v75, v73);
  v54 = v51;
  v55 = (*(unsigned __int8 *)(v51 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v56 = swift_allocObject();
  v57 = v78;
  *(_OWORD *)(v56 + 16) = v77;
  *(_OWORD *)(v56 + 32) = v57;
  *(_QWORD *)(v56 + 48) = v79;
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v56 + v55, v53, v52);
  sub_1BB16CFFC((uint64_t)&v77);
  v58 = (void *)sub_1BB86E854();
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  v59 = sub_1BB86E980();
  swift_release();
  swift_release();

  sub_1BA4A2E80((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4A2E80((uint64_t)v63, type metadata accessor for FormatContent);
  return v59;
}

uint64_t FormatBackgroundLayoutSolver.resolve(content:options:layoutOptions:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v24 = a3;
  v25 = *v3;
  v6 = sub_1BB8705C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatContent.Resolved();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = a2[1];
  v26 = *a2;
  v27 = v13;
  v28 = *((_QWORD *)a2 + 4);
  v14 = (void *)sub_1BB86E6F8();
  sub_1BA4C2DD8(a1, (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v24, v6);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (*(unsigned __int8 *)(v7 + 80) + v16 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v19 = v18 + v16;
  v20 = v27;
  *(_OWORD *)v19 = v26;
  *(_OWORD *)(v19 + 16) = v20;
  *(_QWORD *)(v19 + 32) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v9, v6);
  sub_1BB16CFFC((uint64_t)&v26);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  v21 = sub_1BB86EC08();

  swift_release();
  return v21;
}

uint64_t FormatBackgroundLayoutSolver.__allocating_init(feedLayoutSolver:formatService:decorationProviderFactory:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  sub_1BA4CECCC(a2, v6 + 24);
  *(_QWORD *)(v6 + 64) = a3;
  return v6;
}

uint64_t FormatBackgroundLayoutSolver.init(feedLayoutSolver:formatService:decorationProviderFactory:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  sub_1BA4CECCC(a2, v3 + 24);
  *(_QWORD *)(v3 + 64) = a3;
  return v3;
}

uint64_t sub_1BB4381F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  id v26;

  v8 = *(_QWORD *)(a4 + 32);
  v9 = (int *)type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + 3;
  v13 = a1[6];
  v14 = a1[7];
  v15 = *(_OWORD *)a4;
  v24 = *(_OWORD *)(a4 + 16);
  v25 = v15;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  *((_QWORD *)v11 + 3) = &type metadata for FormatBackgroundGroupContext;
  *((_QWORD *)v11 + 4) = &off_1E7341588;
  v16 = swift_allocObject();
  *(_QWORD *)v11 = v16;
  v17 = v24;
  *(_OWORD *)(v16 + 16) = v25;
  *(_OWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 48) = v8;
  *(_QWORD *)&v11[v9[15]] = 0;
  *((_QWORD *)v11 + 5) = 0;
  v11[48] = 1;
  *(_OWORD *)(v11 + 56) = xmmword_1BB886D10;
  *((_QWORD *)v11 + 9) = 0;
  *((_QWORD *)v11 + 10) = 0;
  sub_1BB16CFFC(a4);
  sub_1BB16CFFC(a4);
  if (qword_1ED3BE7C0 != -1)
    swift_once();
  v18 = type metadata accessor for FormatTransformData();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED4768B8);
  sub_1BA4C2DD8(v19, (uint64_t)&v11[v9[10]], (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
  *(_QWORD *)&v11[v9[11]] = MEMORY[0x1E0DEE9E8];
  v20 = *(void **)(a4 + 16);
  v26 = *(id *)(a4 + 8);
  *(_QWORD *)&v11[v9[12]] = v26;
  sub_1BA745810(&v26);
  v21 = v20;
  sub_1BB16D040(a4);
  *(_QWORD *)&v11[v9[13]] = v21;
  v11[v9[14]] = 0;
  v22 = FormatServiceType.resolve(content:pool:options:)(a2, a3, (uint64_t)v11, v13, v14);
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  return v22;
}

uint64_t sub_1BB4383EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id *v18;
  uint64_t v20;
  uint64_t v21;

  v1 = type metadata accessor for FormatContent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FormatContentPool();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = v5;
  v21 = *(_QWORD *)(v6 + 64);
  v8 = v0 + v3;
  swift_bridgeObjectRelease();
  v9 = v0 + v3 + *(int *)(v1 + 20);
  v10 = sub_1BB86C8B0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v8 + *(int *)(v1 + 40);
  v12 = sub_1BB871E24();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v7;
  v16 = v0 + v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v0 + v7 + *(int *)(v20 + 100);
  if (!v14(v16 + *(int *)(v20 + 100), 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v17, v12);
  v18 = (id *)(v0 + ((v21 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4386A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for FormatContent(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatContentPool() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1BB4381F0(a1, v1 + v4, v1 + v7, v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1BB43872C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a4;
  v26 = a2;
  v22 = a1;
  v5 = sub_1BB8705C4();
  v6 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = type metadata accessor for FormatContent.Resolved();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BB86E6F8();
  sub_1BA4C2DD8(v22, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v5);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (*(unsigned __int8 *)(v6 + 80) + v13 + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v11, v15 + v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v16 = v15 + v13;
  v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v16 = *(_OWORD *)a3;
  *(_OWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(a3 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
  sub_1BB16CFFC(a3);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  type metadata accessor for FormatBackgroundLayoutSolver();
  v18 = (void *)v25;
  v19 = sub_1BB86EC08();

  swift_release();
  return v19;
}

uint64_t sub_1BB4388F4()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB8705C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BB438980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB8705C4() - 8) + 80);
  return sub_1BB43872C(a1, a2, v2 + 16, v2 + ((v5 + 56) & ~v5));
}

uint64_t sub_1BB4389DC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a3 + 16);
  v6[0] = *(_OWORD *)a3;
  v6[1] = v4;
  v7 = *(_QWORD *)(a3 + 32);
  *(_QWORD *)&v6[0] = sub_1BB438A80(a2, (uint64_t)v6, a4);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C3E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatBackgroundLayoutSolverResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB438A6C(uint64_t a1)
{
  return sub_1BB16E240(a1);
}

uint64_t sub_1BB438A80(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  int v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v90[2];
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[12];
  char *v98;
  uint64_t v99;
  void *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  _QWORD *v122;
  _QWORD v123[8];
  char v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  _QWORD v134[5];
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  char v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  _BYTE v146[57];
  char v147;

  v6 = sub_1BB8705C4();
  v118 = *(_QWORD *)(v6 - 8);
  v119 = v6;
  MEMORY[0x1E0C80A78](v6);
  v117 = (char *)v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v8);
  v116 = (uint64_t)v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C2200, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6148], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v115 = (char *)v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v114 = (char *)v97 - v13;
  MEMORY[0x1E0C80A78](v14);
  v113 = (char *)v97 - v15;
  MEMORY[0x1E0C80A78](v16);
  v112 = (char *)v97 - v17;
  v108 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v108);
  v19 = (char *)v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BB86D93C();
  MEMORY[0x1E0C80A78](v20);
  v101 = (char *)v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1BB86D7A4();
  v106 = *(_QWORD *)(v22 - 8);
  v107 = v22;
  MEMORY[0x1E0C80A78](v22);
  v104 = (char *)v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v120 = sub_1BB86D678();
  v24 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v98 = (char *)v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB439520();
  v110 = *(_QWORD *)(v26 - 8);
  v111 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(void **)a2;
  v100 = *(void **)(a2 + 16);
  sub_1BB4395B4();
  sub_1BB43960C((unint64_t *)&unk_1EF2CB050, MEMORY[0x1E0DB6F08]);
  sub_1BB43960C(&qword_1EF2C3E40, MEMORY[0x1E0DB6EF8]);
  sub_1BB86E380();
  v30 = *a1;
  v31 = a1[1];
  *(_QWORD *)&v143 = 0;
  v141 = 0u;
  v142 = 0u;
  memset(v146, 0, sizeof(v146));
  v147 = 1;
  v32 = *(_QWORD *)((char *)a1 + *(int *)(v8 + 32));
  v123[2] = MEMORY[0x1E0DEE9D8];
  v123[3] = v30;
  v123[4] = v31;
  v123[5] = &v141;
  v122 = a1;
  v123[6] = a1;
  v123[7] = v28;
  v109 = v28;
  v124 = 1;
  v125 = v29;
  v126 = MEMORY[0x1E0DEE9E8];
  v127 = 0;
  v128 = 0;
  v129 = v146;
  v133 = 0;
  v131 = 0u;
  v132 = 0u;
  v130 = 0u;
  v33 = v29;
  swift_bridgeObjectRetain();
  v103 = sub_1BA8A1C10((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB43974C, (uint64_t)v123, v32);

  swift_bridgeObjectRelease();
  sub_1BA604728((uint64_t)&v141, (uint64_t)qword_1ED3B1AB0, (uint64_t)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable, (uint64_t (*)(_QWORD))sub_1BA65DC00);
  v99 = *(_QWORD *)(v121 + 16);
  v34 = v33;
  FCFeedDescriptor.feedKind.getter((char *)&v135);

  v35 = v135;
  v141 = 0u;
  v142 = 0u;
  v143 = 0u;
  v144 = 0u;
  v145 = 0u;
  v36 = *MEMORY[0x1E0DB5D88];
  v102 = v24;
  v37 = *(void (**)(char *, uint64_t, _QWORD))(v24 + 104);
  v38 = (uint64_t)v98;
  v37(v98, v36, v120);
  sub_1BB8705B8();
  v97[10] = v40;
  v97[11] = v39;
  sub_1BB8705B8();
  v97[8] = v42;
  v97[9] = v41;
  sub_1BB87054C();
  v97[6] = v44;
  v97[7] = v43;
  sub_1BB8704F8();
  v97[4] = v46;
  v97[5] = v45;
  sub_1BB870558();
  v97[2] = v48;
  v97[3] = v47;
  sub_1BB870540();
  sub_1BB870510();
  v97[0] = v50;
  v97[1] = v49;
  v52 = v51;
  v54 = v53;
  sub_1BB87057C();
  v56 = v55;
  v58 = v57;
  sub_1BB870534();
  sub_1BB870570();
  v105 = a3;
  sub_1BB870528();
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v66 = v65;
  if (qword_1ED3BC390 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v95 = v64;
  v96 = v66;
  v93 = v60;
  v94 = v62;
  v91 = v56;
  v92 = v58;
  v90[0] = v52;
  v90[1] = v54;
  v67 = (uint64_t)v104;
  sub_1BB86D6F0();
  v68 = v108;
  v69 = &v19[*(int *)(v108 + 36)];
  v70 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  *(_QWORD *)(v19 + 17) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *(_QWORD *)&v19[*(int *)(v68 + 40)] = 0;
  v71 = sub_1BB702600(0, 0, v100, v35, (uint64_t)&v141, v38, v67, (uint64_t)v19);
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FeedLayoutSolverOptions);
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v67, v107);
  (*(void (**)(uint64_t, _QWORD))(v102 + 8))(v38, v120);
  v72 = v103;
  v73 = FormatDecorationProviderFactory.create(content:regions:options:)((uint64_t)v122, v103, MEMORY[0x1E0DEE9D8]);
  v74 = type metadata accessor for FormatDecorationProvider();
  v134[4] = &protocol witness table for FormatDecorationProvider;
  v134[3] = v74;
  v134[0] = v73;
  v75 = sub_1BB86D9C0();
  v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56);
  v76(v112, 1, 1, v75);
  v76(v113, 1, 1, v75);
  v76(v114, 1, 1, v75);
  v76(v115, 1, 1, v75);
  sub_1BB86D990();
  swift_allocObject();
  swift_retain();
  v77 = sub_1BB86D984();
  MEMORY[0x1E0C80A78](v77);
  v91 = v72;
  v92 = v78;
  LOBYTE(v93) = 1;
  v94 = v134;
  v95 = v71;
  sub_1BB709618(0, 0, 1, (void (*)(__int128 *))sub_1BB4397A8, (uint64_t)v90, (uint64_t)&v135);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v111);
  sub_1BA604728((uint64_t)v134, (uint64_t)&qword_1ED3B2800, (uint64_t)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType, (uint64_t (*)(_QWORD))sub_1BA65DC00);
  v121 = v135;
  v79 = v136;
  v80 = v137;
  v81 = v139;
  v82 = v140;
  v120 = v138;
  v83 = v116;
  sub_1BA4C2DD8((uint64_t)v122, v116, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v85 = v117;
  v84 = v118;
  v86 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v105, v119);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  v87 = swift_allocObject();
  v88 = v87 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult;
  *(_OWORD *)v88 = v121;
  *(_QWORD *)(v88 + 16) = v79;
  *(_QWORD *)(v88 + 24) = v80;
  *(_OWORD *)(v88 + 32) = v120;
  *(_QWORD *)(v88 + 48) = v81;
  *(_BYTE *)(v88 + 56) = v82;
  sub_1BA5193C4(v83, v87 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v87 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions, v85, v86);
  return v87;
}

uint64_t sub_1BB439314()
{
  type metadata accessor for FeedItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB439350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BB86C8E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v4 = sub_1BB86C8C8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BB4393E0()
{
  sub_1BB8745CC();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB43942C()
{
  sub_1BB439CBC();
  return sub_1BB86EC50();
}

uint64_t sub_1BB439464()
{
  sub_1BB8745CC();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t FormatBackgroundLayoutSolver.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return v0;
}

uint64_t FormatBackgroundLayoutSolver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatBackgroundLayoutSolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatBackgroundLayoutSolver.__allocating_init(feedLayoutSolver:formatService:decorationProviderFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1BB439520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C3E30)
  {
    sub_1BB4395B4();
    sub_1BB43960C((unint64_t *)&unk_1EF2CB050, MEMORY[0x1E0DB6F08]);
    sub_1BB43960C(&qword_1EF2C3E40, MEMORY[0x1E0DB6EF8]);
    v0 = sub_1BB86E38C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C3E30);
  }
}

void sub_1BB4395B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1798)
  {
    sub_1BAC883D8();
    v0 = sub_1BB86F778();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1798);
  }
}

uint64_t sub_1BB43960C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BB4395B4();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB43964C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char v27;
  uint64_t result;
  uint64_t v30;
  _QWORD v31[11];
  _BYTE v32[8];

  v27 = a8 & 1;
  sub_1BA561D1C(a1, (uint64_t)v31);
  result = sub_1BB6FBD34(v31, a2, a3, a4, a5, a6, a7, v27, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             (uint64_t)v32);
  if (!v30)
    *a9 = result;
  return result;
}

uint64_t sub_1BB43974C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB43964C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144),
           *(_QWORD *)(v2 + 152),
           *(_QWORD *)(v2 + 160));
}

uint64_t sub_1BB4397A8@<X0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB708714(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t objectdestroy_5Tm_5()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = (int *)type metadata accessor for FormatContent.Resolved();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v37 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BB8705C4();
  v6 = *(_QWORD *)(v5 - 8);
  v36 = *(unsigned __int8 *)(v6 + 80);
  v7 = v0 + v4;
  swift_bridgeObjectRelease();
  v8 = v0 + v4 + v1[5];
  v9 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v10 = v0 + v4 + v1[14];
  v11 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v33 = (v3 + 16) & ~v3;
    v34 = v6;
    v35 = v5;
    swift_bridgeObjectRelease();
    v12 = v10 + v11[5];
    swift_bridgeObjectRelease();
    v13 = type metadata accessor for FormatWebEmbed();
    v14 = v12 + *(int *)(v13 + 20);
    v15 = sub_1BB86C67C();
    v16 = *(_QWORD *)(v15 - 8);
    v32 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v32(v14, v15);
    v17 = v12 + *(int *)(v13 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15))
      v32(v17, v15);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v18 = v10 + v11[8];
    v19 = type metadata accessor for WebEmbedDataVisualization();
    v4 = v33;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v20 = type metadata accessor for GenericDataVisualization();
        v32(v18 + *(int *)(v20 + 20), v15);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v21 = v10 + v11[9];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    v23 = v22;
    v24 = *(_QWORD *)(v22 - 8);
    v6 = v34;
    v5 = v35;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
  }

  swift_bridgeObjectRelease();
  v25 = v7 + v1[18];
  v26 = sub_1BB871E24();
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  v28 = (v37 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + v36 + 40) & ~v36;
  v30 = v0 + v28;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v29, v5);
  return swift_deallocObject();
}

uint64_t sub_1BB439B94()
{
  id *v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for FormatBackgroundLayoutSolver.HiddenModel()
{
  return &type metadata for FormatBackgroundLayoutSolver.HiddenModel;
}

unint64_t sub_1BB439BE4()
{
  unint64_t result;

  result = qword_1EF2C3E48;
  if (!qword_1EF2C3E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9180CC, &type metadata for FormatBackgroundLayoutSolver.HiddenModel);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E48);
  }
  return result;
}

unint64_t sub_1BB439C2C()
{
  unint64_t result;

  result = qword_1EF2C3E50;
  if (!qword_1EF2C3E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9180F4, &type metadata for FormatBackgroundLayoutSolver.HiddenModel);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E50);
  }
  return result;
}

unint64_t sub_1BB439C74()
{
  unint64_t result;

  result = qword_1EF2C3E58;
  if (!qword_1EF2C3E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918134, &type metadata for FormatBackgroundLayoutSolver.HiddenModel);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E58);
  }
  return result;
}

unint64_t sub_1BB439CBC()
{
  unint64_t result;

  result = qword_1EF2C3E60;
  if (!qword_1EF2C3E60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918194, &type metadata for FormatBackgroundLayoutSolver.HiddenModel);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E60);
  }
  return result;
}

unint64_t sub_1BB439D04()
{
  unint64_t result;

  result = qword_1EF2C3E68;
  if (!qword_1EF2C3E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91815C, &type metadata for FormatBackgroundLayoutSolver.HiddenModel);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E68);
  }
  return result;
}

double static Double.oneHour.getter()
{
  return 3600.0;
}

double static Double.oneDay.getter()
{
  return 86400.0;
}

uint64_t Double.milliseconds.getter(double a1)
{
  double v1;
  uint64_t result;

  v1 = a1 * 1000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18)
    return (uint64_t)v1;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB439DC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;

  sub_1BB43AB94(0, &qword_1EF2C3E88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v1 + 24);
  v22 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v19 = *(_QWORD *)(v1 + 40);
  v20 = v9;
  v26 = *(unsigned __int8 *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v17 = *(_QWORD *)(v1 + 64);
  v18 = v10;
  v11 = *(_QWORD *)(v1 + 72);
  v14 = *(_QWORD *)(v1 + 80);
  v15 = *(_QWORD *)(v1 + 88);
  v16 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB43AB0C();
  sub_1BB8746C8();
  LOBYTE(v24) = 0;
  v12 = v23;
  sub_1BB87417C();
  if (!v12)
  {
    LOBYTE(v24) = 1;
    sub_1BB87417C();
    LOBYTE(v24) = 2;
    sub_1BB87417C();
    LOBYTE(v24) = 3;
    sub_1BB874188();
    LOBYTE(v24) = 4;
    sub_1BB87411C();
    v24 = v16;
    v27 = 5;
    sub_1BA6D249C();
    sub_1BA585B78((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BB87414C();
    v24 = v14;
    v25 = v15;
    v27 = 6;
    sub_1BB43ABF0();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB43A05C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;

  sub_1BB43AB94(0, &qword_1EF2C3E70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB43AB0C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v37) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v36 = v10;
  LOBYTE(v37) = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v34 = v13;
  v35 = v12;
  LOBYTE(v37) = 2;
  swift_bridgeObjectRetain();
  v16 = v15;
  v33 = sub_1BB874098();
  LOBYTE(v37) = 3;
  v19 = v18;
  swift_bridgeObjectRetain();
  v39 = sub_1BB8740A4();
  v31 = v19;
  LOBYTE(v37) = 4;
  v30 = sub_1BB87402C();
  v21 = v20;
  sub_1BA6D249C();
  v40 = 5;
  sub_1BA585B78((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v32 = v21;
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v22 = v37;
  v40 = 6;
  sub_1BB43AB50();
  v29 = v22;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  LOBYTE(v19) = v39 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v37;
  v23 = v38;
  swift_bridgeObjectRetain();
  v25 = v35;
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v25;
  *(_QWORD *)(a2 + 16) = v34;
  *(_QWORD *)(a2 + 24) = v16;
  v26 = v31;
  *(_QWORD *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v26;
  *(_BYTE *)(a2 + 48) = v19;
  v27 = v29;
  v28 = v32;
  *(_QWORD *)(a2 + 56) = v30;
  *(_QWORD *)(a2 + 64) = v28;
  *(_QWORD *)(a2 + 72) = v27;
  *(_QWORD *)(a2 + 80) = v24;
  *(_QWORD *)(a2 + 88) = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB43A54C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB43A574 + 4 * byte_1BB918210[*v0]))(7955819, 0xE300000000000000);
}

uint64_t sub_1BB43A574()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1BB43A588()
{
  return 0x7470697263736564;
}

uint64_t sub_1BB43A5A8()
{
  return 0x6465726975716572;
}

uint64_t sub_1BB43A5C0()
{
  return 0x56746C7561666564;
}

uint64_t sub_1BB43A5E0()
{
  return 0x656C626973736F70;
}

uint64_t sub_1BB43A604()
{
  return 0x6E656D656C456975;
}

uint64_t sub_1BB43A620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB43ADD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB43A644()
{
  sub_1BB43AB0C();
  return sub_1BB874710();
}

uint64_t sub_1BB43A66C()
{
  sub_1BB43AB0C();
  return sub_1BB87471C();
}

uint64_t sub_1BB43A694@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB43A05C(a1, a2);
}

uint64_t sub_1BB43A6A8(_QWORD *a1)
{
  return sub_1BB439DC0(a1);
}

uint64_t sub_1BB43A6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v23 = *(_QWORD *)(a1 + 56);
  v24 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v21 = *(_QWORD **)(a1 + 72);
  v22 = *(_QWORD *)(a2 + 56);
  v25 = *(_QWORD *)(a2 + 64);
  v20 = *(_QWORD **)(a2 + 72);
  v18 = *(_OWORD *)(a2 + 80);
  v19 = *(_OWORD *)(a1 + 80);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), v13 = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_1BB874398(), v13 = 0, (v14 & 1) != 0))
    {
      if (v4 == v9 && v5 == v10)
      {
        if (v6 != v11)
          goto LABEL_25;
      }
      else
      {
        v15 = sub_1BB874398();
        v13 = 0;
        if ((v15 & 1) == 0 || ((v6 ^ v11) & 1) != 0)
          return v13 & 1;
      }
      if (v24)
      {
        if (!v25)
          goto LABEL_25;
        if (v23 != v22 || v24 != v25)
        {
          v16 = sub_1BB874398();
          v13 = 0;
          if ((v16 & 1) == 0)
            return v13 & 1;
        }
      }
      else if (v25)
      {
        goto LABEL_25;
      }
      if (v21)
      {
        if (!v20 || (sub_1BA6A45BC(v21, v20) & 1) == 0)
          goto LABEL_25;
        goto LABEL_23;
      }
      if (!v20)
      {
LABEL_23:
        v26 = v18;
        v27 = v19;
        v13 = sub_1BAFC4004((uint64_t)&v27, (uint64_t)&v26);
        return v13 & 1;
      }
LABEL_25:
      v13 = 0;
    }
  }
  return v13 & 1;
}

uint64_t destroy for DebugFormatTemplateKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatTemplateKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatTemplateKey(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatTemplateKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKey()
{
  return &type metadata for DebugFormatTemplateKey;
}

unint64_t sub_1BB43AB0C()
{
  unint64_t result;

  result = qword_1EF2C3E78;
  if (!qword_1EF2C3E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918384, &type metadata for DebugFormatTemplateKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E78);
  }
  return result;
}

unint64_t sub_1BB43AB50()
{
  unint64_t result;

  result = qword_1EF2C3E80;
  if (!qword_1EF2C3E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDD90, &type metadata for DebugFormatTemplateKeyUIElement);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E80);
  }
  return result;
}

void sub_1BB43AB94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB43AB0C();
    v7 = a3(a1, &type metadata for DebugFormatTemplateKey.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB43ABF0()
{
  unint64_t result;

  result = qword_1EF2C3E90;
  if (!qword_1EF2C3E90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDD68, &type metadata for DebugFormatTemplateKeyUIElement);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTemplateKey.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB43AC80 + 4 * byte_1BB91821C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB43ACB4 + 4 * byte_1BB918217[v4]))();
}

uint64_t sub_1BB43ACB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB43ACBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB43ACC4);
  return result;
}

uint64_t sub_1BB43ACD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB43ACD8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB43ACDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB43ACE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKey.CodingKeys()
{
  return &type metadata for DebugFormatTemplateKey.CodingKeys;
}

unint64_t sub_1BB43AD04()
{
  unint64_t result;

  result = qword_1EF2C3E98;
  if (!qword_1EF2C3E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91835C, &type metadata for DebugFormatTemplateKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3E98);
  }
  return result;
}

unint64_t sub_1BB43AD4C()
{
  unint64_t result;

  result = qword_1EF2C3EA0;
  if (!qword_1EF2C3EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9182CC, &type metadata for DebugFormatTemplateKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3EA0);
  }
  return result;
}

unint64_t sub_1BB43AD94()
{
  unint64_t result;

  result = qword_1EF2C3EA8;
  if (!qword_1EF2C3EA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9182F4, &type metadata for DebugFormatTemplateKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C3EA8);
  }
  return result;
}

uint64_t sub_1BB43ADD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x56746C7561666564 && a2 == 0xEC00000065756C61 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C626973736F70 && a2 == 0xEE007365756C6156 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E656D656C456975 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t FormatItem.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.types.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatItem.init(identifier:name:description:kind:traits:children:style:styles:selectors:options:types:accessibilityRole:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13, char *a14)
{
  __n128 result;
  char v15;

  result = a11;
  v15 = *a14;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_OWORD *)(a9 + 48) = *a7;
  *(_QWORD *)(a9 + 64) = a8;
  *(_OWORD *)(a9 + 72) = a10;
  *(__n128 *)(a9 + 88) = a11;
  *(_QWORD *)(a9 + 104) = a12;
  *(_QWORD *)(a9 + 112) = a13;
  *(_BYTE *)(a9 + 120) = v15;
  return result;
}

uint64_t FormatItem.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItem.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItem.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItem.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItem.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatItem.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatItem.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA682148(v2, v3);
}

uint64_t FormatItem.traits.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FormatItem.traits.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatItem.children.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.style.getter()
{
  return swift_retain();
}

uint64_t FormatItem.styles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatItem.styles.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatItem.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatItem.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatItem.types.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatItem.types.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatItem.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 120);
}

uint64_t sub_1BB43B3F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed10FormatItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41[4];

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v39 = *(_OWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 64);
  v37 = *(_QWORD *)(a1 + 72);
  v35 = *(_QWORD *)(a1 + 80);
  v33 = *(_QWORD *)(a1 + 88);
  v31 = *(_QWORD *)(a1 + 96);
  v29 = *(_QWORD *)(a1 + 104);
  v27 = *(_QWORD *)(a1 + 112);
  v25 = *(unsigned __int8 *)(a1 + 120);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v38 = *(_OWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 64);
  v36 = *(_QWORD *)(a2 + 72);
  v34 = *(_QWORD *)(a2 + 80);
  v32 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v28 = *(_QWORD *)(a2 + 104);
  v26 = *(_QWORD *)(a2 + 112);
  v24 = *(unsigned __int8 *)(a2 + 120);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v7)
        return 0;
      if (v2 != v8 || v4 != v7)
      {
        v14 = sub_1BB874398();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v5)
    {
      if (!v9)
        return 0;
      if (v3 != v10 || v5 != v9)
      {
        v15 = sub_1BB874398();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    v40 = v38;
    *(_OWORD *)v41 = v39;
    if ((_s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(v41, (uint64_t *)&v40) & 1) == 0)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA88E0F8(v6, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA883A18(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      return 0;
    if (v35)
    {
      if (!v34)
        return 0;
      type metadata accessor for FormatItemNodeStyle(0);
      swift_retain();
      v18 = swift_retain();
      v19 = static FormatItemNodeStyle.== infix(_:_:)(v18, v34);
      swift_release();
      swift_release();
      if ((v19 & 1) == 0)
        return 0;
LABEL_26:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1BA883C24(v33, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        return 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_1BA6EB330(v31, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
        return 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = sub_1BA883260(v29, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        return 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1BA88ABB4(v27, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
        return 0;
      if (v25 == 7)
      {
        if (v24 != 7)
          return 0;
      }
      else
      {
        LOBYTE(v41[0]) = v25;
        if (v24 == 7)
          return 0;
        LOBYTE(v40) = v24;
        if (!_s8NewsFeed23FormatAccessibilityRoleO2eeoiySbAC_ACtFZ_0((unsigned __int8 *)v41, (unsigned __int8 *)&v40))
          return 0;
      }
      return 1;
    }
    if (!v34)
      goto LABEL_26;
    return 0;
  }
  return result;
}

unint64_t sub_1BB43B7AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8969CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB43B7D0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8377DC();
  a1[2] = sub_1BA837820();
  result = sub_1BB43B804();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB43B804()
{
  unint64_t result;

  result = qword_1ED3D0128;
  if (!qword_1ED3D0128)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItem, &type metadata for FormatItem);
    atomic_store(result, (unint64_t *)&qword_1ED3D0128);
  }
  return result;
}

uint64_t sub_1BB43B848@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43B854(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BB43B894@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43B8A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1BB43B8E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43B8EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1BB43B92C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43B938(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 72) = v3;
  return result;
}

uint64_t sub_1BB43B978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43B984(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1BB43B9C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43B9D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_1BB43BA10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43BA1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 104) = v3;
  return result;
}

uint64_t sub_1BB43BA5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB43BA68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 112) = v3;
  return result;
}

uint64_t assignWithCopy for FormatItem(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
  {
    if (v4 >= 0xF)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA905D68(a1 + 48);
    goto LABEL_6;
  }
  if (v4 < 0xF)
  {
LABEL_6:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for FormatItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
  {
    v8 = *(_QWORD *)(a2 + 56);
    if (v8 >= 0xF)
    {
      *(_QWORD *)(a1 + 48) = *v7;
      *(_QWORD *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA905D68(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for FormatItem()
{
  return &type metadata for FormatItem;
}

ValueMetadata *type metadata accessor for H6_V1()
{
  return &type metadata for H6_V1;
}

uint64_t sub_1BB43BD90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C4038, (uint64_t (*)(void))sub_1BB43EA9C, (uint64_t)&type metadata for H6_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB43EA9C();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB43EAE0(&qword_1EF2C4040, (uint64_t (*)(void))sub_1BAF5F1B0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB43BF4C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 0x656D617266;
}

uint64_t sub_1BB43BF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB43ED00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB43BFAC()
{
  sub_1BB43EA9C();
  return sub_1BB874710();
}

uint64_t sub_1BB43BFD4()
{
  sub_1BB43EA9C();
  return sub_1BB87471C();
}

double sub_1BB43BFFC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB43E880(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB43C040(_QWORD *a1)
{
  return sub_1BB43BD90(a1);
}

uint64_t sub_1BB43C054()
{
  sub_1BB43E1AC();
  return sub_1BB86D96C();
}

uint64_t sub_1BB43C0BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1EF2C4010, (uint64_t (*)(void))sub_1BB43E83C, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5EA8]);
  swift_allocObject();
  result = sub_1BB86D7C8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BB43C15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[8];
  void *v52;
  unsigned __int8 v53;
  ValueMetadata *v54;
  unint64_t v55;

  v42 = a2;
  v43 = a1;
  v44 = a3;
  v37 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for GroupLayoutBindingContext();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v35 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  v38 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  sub_1BA4C2DD8(a1, v35, v16);
  sub_1BA4C2DD8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v17 = sub_1BB86C8C8();
  v34 = v18;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v37);
  v54 = &type metadata for H6_V1;
  v37 = sub_1BA8EDEFC();
  v55 = v37;
  v51[0] = v13;
  v52 = v14;
  v53 = v15;
  type metadata accessor for GroupLayoutKey();
  v19 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v49 = sub_1BB874734();
  v50 = v20;
  v47 = 95;
  v48 = 0xE100000000000000;
  v45 = 45;
  v46 = 0xE100000000000000;
  sub_1BA7114A0();
  v21 = sub_1BB873B04();
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 24) = v23;
  v24 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v25 = v34;
  *v24 = v17;
  v24[1] = v25;
  sub_1BA4C010C((uint64_t)v51, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v26 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v35, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v39);
  v27 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v11, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v27, 0, 1, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  sub_1BA7C2538(v14, v15);
  v28 = type metadata accessor for H6_V1.Bound();
  v29 = v44;
  v44[3] = v28;
  v29[4] = sub_1BA4A2870(qword_1EF2C3EC0, (uint64_t (*)(uint64_t))type metadata accessor for H6_V1.Bound, (uint64_t)&unk_1BB9185A0);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  v31 = v37;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for H6_V1;
  boxed_opaque_existential_0[5] = v31;
  *((_BYTE *)boxed_opaque_existential_0 + 8) = v38;
  boxed_opaque_existential_0[2] = (uint64_t)v14;
  *((_BYTE *)boxed_opaque_existential_0 + 24) = v15;
  sub_1BA4C2DD8(v42, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  result = sub_1BB3E0F34(0, 0, 0, 0, 0);
  *boxed_opaque_existential_0 = v19;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

double sub_1BB43C4F4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for H6_V1.Bound() + 28));
  v28 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BB141F90((void (*)(_QWORD *__return_ptr, uint64_t))sub_1BB43E148, (uint64_t)v27, v8);
  swift_bridgeObjectRelease();
  v23 = v9;
  *(_QWORD *)&v30 = v9;
  sub_1BA4AD288(0, &qword_1EF2C3F68, (uint64_t)&type metadata for HGroupLayoutContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v11 = v10;
  sub_1BA5C69E0(&qword_1EF2C3F70, &qword_1EF2C3F68, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E0DEAF50]);
  v24 = v11;
  v12 = sub_1BB8730F0();
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v25 = v12;
  v26 = v2;
  sub_1BB43E5F4(0, &qword_1EF2C3F78, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  sub_1BB86DB40();
  v22 = v30;
  v15 = v31;
  v16 = v32;
  v29 = v33;
  *(_QWORD *)&v30 = v23;
  sub_1BA4AD288(0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v17 = MEMORY[0x1E0DEAF38];
  sub_1BA5C69E0(&qword_1EF2C3F98, &qword_1EF2C3F68, (uint64_t)&type metadata for HGroupLayoutContext, MEMORY[0x1E0DEAF38]);
  sub_1BA5C69E0(&qword_1EF2C3FA0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, v17);
  swift_bridgeObjectRetain();
  v18 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v30 = v18;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, v17);
  sub_1BA6B39A0();
  v19 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = *(double *)&v22;
  *(_OWORD *)(a1 + 8) = v22;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v16;
  v21 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v21;
  return result;
}

uint64_t sub_1BB43C874@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[3];
  _OWORD v35[9];
  char v36;
  __int128 v37[2];
  __int128 v38[2];
  __int128 v39[2];
  __int128 v40[9];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[32];
  _BYTE v57[137];
  char v58;

  sub_1BA982FE4(a1, (uint64_t)&v49);
  if (!v58)
  {
    v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    v29 = v51;
    v30 = v52;
    v31 = v53;
    v32 = v54;
    v27 = v49;
    v28 = v50;
    v47 = v55;
    v48[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)&v56[9];
    v43 = v51;
    v44 = v52;
    v45 = v53;
    v46 = v54;
    v13 = *a2;
    v41 = v49;
    v42 = v50;
    sub_1BA90EFB8(v35);
    sub_1BA8EDBB0((uint64_t)v35, (uint64_t)v40);
    v14 = (char *)a2 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
    v15 = type metadata accessor for GroupLayoutContext();
    v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
    v17 = *(double *)&v14[*(int *)(v15 + 32)];
    sub_1BA4C010C(v16 + 16, (uint64_t)v38);
    sub_1BA4C010C(v16 + 56, (uint64_t)v37);
    v18 = v17 * *(double *)(v16 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    v19 = swift_allocObject();
    sub_1BA4CECCC(v38, v19 + 16);
    sub_1BA4CECCC(v37, v19 + 56);
    *(double *)(v19 + 96) = v18;
    swift_retain();
    sub_1BA8D1F08((uint64_t)&v27);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v19 + 16);
    __swift_destroy_boxed_opaque_existential_1(v19 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    result = sub_1BA8D1FE4((uint64_t)&v27);
    goto LABEL_5;
  }
  if (v58 == 1)
  {
    v33 = v55;
    v34[0] = *(_OWORD *)v56;
    *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v56[9];
    v29 = v51;
    v30 = v52;
    v31 = v53;
    v32 = v54;
    v27 = v49;
    v28 = v50;
    sub_1BA8EDBB0((uint64_t)v57, (uint64_t)v35);
    v5 = *a2;
    v47 = v33;
    v48[0] = v34[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v34 + 9);
    v43 = v29;
    v44 = v30;
    v45 = v31;
    v46 = v32;
    v41 = v27;
    v42 = v28;
    sub_1BA8EDBB0((uint64_t)v35, (uint64_t)v40);
    v6 = (char *)a2 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
    v7 = type metadata accessor for GroupLayoutContext();
    v8 = *(_QWORD *)(*(_QWORD *)&v6[*(int *)(v7 + 40)] + 16);
    v9 = *(double *)&v6[*(int *)(v7 + 32)];
    sub_1BA4C010C(v8 + 16, (uint64_t)v38);
    sub_1BA4C010C(v8 + 56, (uint64_t)v37);
    v10 = v9 * *(double *)(v8 + 96);
    type metadata accessor for FeedLayoutStylerFactory();
    v11 = swift_allocObject();
    sub_1BA4CECCC(v38, v11 + 16);
    sub_1BA4CECCC(v37, v11 + 56);
    *(double *)(v11 + 96) = v10;
    swift_retain();
    sub_1BA8D1F08((uint64_t)&v27);
    sub_1BA8966F8((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB43E670);
    FeedLayoutStylerFactory.styler()((uint64_t *)v39);
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v11 + 16);
    __swift_destroy_boxed_opaque_existential_1(v11 + 56);
    swift_deallocClassInstance();
    CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v5, &v41, (uint64_t)v40, (uint64_t)v39, a3);
    sub_1BA8D1FE4((uint64_t)&v27);
    result = sub_1BA8966F8((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA90EF2C);
LABEL_5:
    *(_BYTE *)(a3 + 392) = 0;
    return result;
  }
  v35[6] = v55;
  v35[7] = *(_OWORD *)v56;
  v35[8] = *(_OWORD *)&v56[16];
  v36 = v57[0];
  v35[2] = v51;
  v35[3] = v52;
  v35[4] = v53;
  v35[5] = v54;
  v35[0] = v49;
  v35[1] = v50;
  v20 = *a2;
  sub_1BA6A955C((uint64_t)v35, (uint64_t)&v27);
  v21 = (char *)a2 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
  v22 = type metadata accessor for GroupLayoutContext();
  v23 = *(_QWORD *)(*(_QWORD *)&v21[*(int *)(v22 + 40)] + 16);
  v24 = *(double *)&v21[*(int *)(v22 + 32)];
  sub_1BA4C010C(v23 + 16, (uint64_t)v40);
  sub_1BA4C010C(v23 + 56, (uint64_t)v39);
  v25 = v24 * *(double *)(v23 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v26 = swift_allocObject();
  sub_1BA4CECCC(v40, v26 + 16);
  sub_1BA4CECCC(v39, v26 + 56);
  *(double *)(v26 + 96) = v25;
  swift_retain();
  FeedLayoutStylerFactory.styler()((uint64_t *)&v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v26 + 16);
  __swift_destroy_boxed_opaque_existential_1(v26 + 56);
  swift_deallocClassInstance();
  CoverChannelViewLayout.Context.init(key:model:styler:)(v20, (uint64_t)&v27, (uint64_t)&v41, (_QWORD *)a3);
  result = sub_1BA6A94C4((uint64_t)v35);
  *(_BYTE *)(a3 + 392) = 1;
  return result;
}

void sub_1BB43CCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  unsigned int v22;
  void (*v23)(char *, _QWORD, uint64_t);
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1BA4CDF6C(0, &qword_1EF2C3FB0, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - v8;
  v27 = a2;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v24 = *MEMORY[0x1E0DB63C0];
    v23 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
    v22 = *MEMORY[0x1E0DB5C80];
    swift_bridgeObjectRetain();
    v11 = 0;
    v21 = xmmword_1BB87CE70;
    v19 = a3;
    v20 = v7;
    v25 = a1;
    v12 = MEMORY[0x1E0DB5DD0];
    do
    {
      ++v11;
      v28 = a1;
      v23(v9, v24, v7);
      sub_1BB43E4B0();
      sub_1BA4CDF6C(0, &qword_1EF2C3FC0, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v21;
      v18 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, v22, v14);
      MEMORY[0x1E0C80A78](v18);
      sub_1BB43E5F4(0, &qword_1EF2C3FC8, (uint64_t (*)(uint64_t, _QWORD *))v12);
      sub_1BB43E52C(&qword_1EF2C3FD0, &qword_1EF2C3FC8, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
      swift_bridgeObjectRetain();
      a1 = v25;
      sub_1BB86D498();
      v7 = v20;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
      swift_bridgeObjectRelease();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1BB43CF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, _QWORD *);
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  double (*v63)(uint64_t, uint64_t);
  double v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t *v68;
  unint64_t *v69;
  ValueMetadata *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  double v82;
  uint64_t (*v83)(uint64_t, _QWORD *);
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  unint64_t *v87;
  ValueMetadata *v88;
  uint64_t *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t *v94;
  unsigned int v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t KeyPath;
  uint64_t v104;
  unsigned int v105;
  __int128 v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD v123[25];
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE v127[24];
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  _BYTE v132[392];
  uint64_t v133;

  v116 = a1;
  v117 = a3;
  v4 = sub_1BB86DA20();
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  MEMORY[0x1E0C80A78](v4);
  v102 = (uint64_t *)((char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C3FB0, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v118 = v6;
  v122 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v100 = (uint64_t *)((char *)&v92 - v10);
  v11 = sub_1BB86DA38();
  v114 = *(_QWORD *)(v11 - 8);
  v115 = v11;
  MEMORY[0x1E0C80A78](v11);
  v113 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  if (!v13)
    return;
  v14 = a2 + 32;
  v112 = (char *)&v133;
  v105 = *MEMORY[0x1E0DB6208];
  v111 = *MEMORY[0x1E0DB5FB0];
  v110 = *MEMORY[0x1E0DB5FB8];
  v109 = *MEMORY[0x1E0DB63D0];
  v108 = *MEMORY[0x1E0DB5C30];
  v107 = *MEMORY[0x1E0DB5C68];
  v96 = &v123[10];
  v101 = (uint64_t)&v123[5] + 8;
  v94 = &v126;
  v93 = *MEMORY[0x1E0DB61D0];
  v95 = *MEMORY[0x1E0DB61C0];
  v92 = a2;
  swift_bridgeObjectRetain();
  v15 = 0;
  v106 = xmmword_1BB87CE70;
  v97 = v8;
  while (1)
  {
    sub_1BB43E1F0(v14, (uint64_t)v132);
    v43 = *v112;
    v120 = v14;
    v121 = v13;
    v119 = v15;
    if ((v43 & 1) == 0)
    {
      memcpy(v123, v132, 0x188uLL);
      if ((BYTE8(v123[3]) & 0x10) != 0)
      {
        v16 = v117 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
        v17 = type metadata accessor for GroupLayoutContext();
        v18 = *(_QWORD *)(*(_QWORD *)(v16 + *(int *)(v17 + 40)) + 24);
        v19 = MEMORY[0x1E0C80A78](v17);
        *(&v92 - 4) = (uint64_t)v123;
        *(&v92 - 3) = v18;
        v90 = v20;
      }
      else
      {
        v71 = v117 + *(int *)(type metadata accessor for H6_V1.Bound() + 24);
        v72 = type metadata accessor for GroupLayoutContext();
        v73 = *(_QWORD *)(*(_QWORD *)(v71 + *(int *)(v72 + 40)) + 24);
        v19 = MEMORY[0x1E0C80A78](v72);
        v90 = v123;
        v91 = v73;
      }
      (*(void (**)(char *, _QWORD, uint64_t, double))(v114 + 104))(v113, v105, v115, v19);
      sub_1BA915C74();
      swift_allocObject();
      swift_retain();
      v104 = sub_1BB86DB34();
      swift_release();
      v124 = v116;
      KeyPath = swift_getKeyPath();
      sub_1BA71C838();
      v22 = v21;
      v23 = swift_allocBox();
      v25 = v24;
      v26 = (char *)v24 + *(int *)(v22 + 48);
      sub_1BB86D42C();
      v27 = swift_allocBox();
      sub_1BB86D420();
      *v25 = v27;
      v28 = sub_1BB86D894();
      v29 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
      v29(v25, v111, v28);
      v29((uint64_t *)v26, v110, v28);
      v30 = v100;
      *v100 = v23;
      v31 = v118;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v122 + 104))(v30, v109, v118);
      sub_1BB43E4B0();
      sub_1BA4CDF6C(0, &qword_1EF2C3FC0, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v33 = v32;
      v34 = *(_QWORD *)(v32 - 8);
      v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v106;
      v37 = v36 + v35;
      sub_1BA4CDF6C(0, &qword_1EF2C3FD8, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E0DB5C60]);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v37, v108, v38);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v34 + 104))(v37, v107, v33);
      v39 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB43E5F4(0, &qword_1EF2C3FE0, MEMORY[0x1E0DB5A10]);
      v41 = v40;
      v42 = sub_1BB43E52C(&qword_1EF2C3FE8, &qword_1EF2C3FE0, v39, MEMORY[0x1E0DB5A18]);
      v90 = v41;
      v91 = v42;
      v15 = v119;
      sub_1BB86D528();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v122 + 8))(v30, v31);
      sub_1BA915C30((uint64_t)v123);
      v8 = v97;
      goto LABEL_5;
    }
    v123[12] = *(_OWORD *)&v132[192];
    v123[13] = *(_OWORD *)&v132[208];
    v123[14] = *(_OWORD *)&v132[224];
    *(_QWORD *)&v123[15] = *(_QWORD *)&v132[240];
    v123[8] = *(_OWORD *)&v132[128];
    v123[9] = *(_OWORD *)&v132[144];
    v123[10] = *(_OWORD *)&v132[160];
    v123[11] = *(_OWORD *)&v132[176];
    v123[4] = *(_OWORD *)&v132[64];
    v123[5] = *(_OWORD *)&v132[80];
    v123[6] = *(_OWORD *)&v132[96];
    v123[7] = *(_OWORD *)&v132[112];
    v123[0] = *(_OWORD *)v132;
    v123[1] = *(_OWORD *)&v132[16];
    v123[2] = *(_OWORD *)&v132[32];
    v123[3] = *(_OWORD *)&v132[48];
    v131 = v116;
    v104 = swift_getKeyPath();
    sub_1BA71C838();
    v45 = v44;
    v46 = swift_allocBox();
    v48 = v47;
    v49 = (char *)v47 + *(int *)(v45 + 48);
    sub_1BB86D42C();
    v50 = swift_allocBox();
    sub_1BB86D420();
    *v48 = v50;
    v51 = sub_1BB86D894();
    v52 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104);
    v52(v48, v111, v51);
    v52((uint64_t *)v49, v110, v51);
    *v8 = v46;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v122 + 104))(v8, v109, v118);
    sub_1BB43E4B0();
    sub_1BA4CDF6C(0, &qword_1EF2C3FC0, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v54 = v53;
    v55 = *(_QWORD *)(v53 - 8);
    v56 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v106;
    v58 = v57 + v56;
    sub_1BA4CDF6C(0, &qword_1EF2C3FD8, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v58, v108, v59);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v55 + 104))(v58, v107, v54);
    type metadata accessor for H6_V1.Bound();
    type metadata accessor for GroupLayoutContext();
    v60 = *((_QWORD *)&v123[11] + 1);
    v61 = *(_QWORD *)&v123[12];
    v62 = v96;
    __swift_project_boxed_opaque_existential_1(v96, *((uint64_t *)&v123[11] + 1));
    v63 = *(double (**)(uint64_t, uint64_t))(v61 + 48);
    swift_retain();
    v64 = v63(v60, v61);
    v65 = *((_QWORD *)&v123[11] + 1);
    v66 = *(_QWORD *)&v123[12];
    __swift_project_boxed_opaque_existential_1(v62, *((uint64_t *)&v123[11] + 1));
    v67 = (*(double (**)(uint64_t, uint64_t))(v66 + 56))(v65, v66);
    sub_1BA90C818(v101, (uint64_t)&v124, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
    if (v125 == 1)
    {
      v68 = &v124;
      v69 = &qword_1ED3A5228;
      v70 = &type metadata for FeedTag.Overrides;
LABEL_18:
      sub_1BA6ED734((uint64_t)v68, v69, (uint64_t)v70);
      v75 = v95;
      goto LABEL_19;
    }
    sub_1BA90C818((uint64_t)v94, (uint64_t)v127, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
    sub_1BA90C870((uint64_t)&v124);
    if (!v128)
    {
      v68 = (uint64_t *)v127;
      v69 = (unint64_t *)&unk_1EF2AA6F0;
      v70 = &type metadata for FeedTag.Overrides.Image;
      goto LABEL_18;
    }
    v74 = v130;
    sub_1BA90CA40((uint64_t)v127);
    v75 = v95;
    if ((v74 & 1) == 0)
      break;
LABEL_19:
    v78 = v98;
    v79 = v99;
    v80 = v102;
    v81 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v98 + 104))(v102, v75, v99);
    v82 = MEMORY[0x1E0C80A78](v81);
    *(&v92 - 4) = (uint64_t)v80;
    *((double *)&v92 - 3) = v64 + v67 + v67;
    v90 = v123;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v114 + 104))(v113, v105, v115, v82);
    sub_1BB43E57C();
    swift_allocObject();
    sub_1BB86DB34();
    (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v80, v79);
    swift_release();
    v83 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB43E5F4(0, &qword_1EF2C3FE0, MEMORY[0x1E0DB5A10]);
    v85 = v84;
    v86 = sub_1BB43E52C(&qword_1EF2C3FE8, &qword_1EF2C3FE0, v83, MEMORY[0x1E0DB5A18]);
    v90 = v85;
    v91 = v86;
    v15 = v119;
    sub_1BB86D528();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v122 + 8))(v8, v118);
    sub_1BB43E22C((uint64_t)v123);
LABEL_5:
    v14 = v120 + 400;
    v13 = v121 - 1;
    if (v121 == 1)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1BA90C818(v101, (uint64_t)&v124, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v125 == 1)
  {
    v87 = &qword_1ED3A5228;
    v88 = &type metadata for FeedTag.Overrides;
    v89 = &v124;
    goto LABEL_24;
  }
  sub_1BA90C818((uint64_t)v94, (uint64_t)v127, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
  sub_1BA90C870((uint64_t)&v124);
  if (v128)
  {
    v76 = v129;
    v77 = v130;
    sub_1BA90CA40((uint64_t)v127);
    if ((v77 & 1) != 0)
      goto LABEL_25;
    *v102 = v76;
    v75 = v93;
    goto LABEL_19;
  }
  v87 = (unint64_t *)&unk_1EF2AA6F0;
  v88 = &type metadata for FeedTag.Overrides.Image;
  v89 = (uint64_t *)v127;
LABEL_24:
  sub_1BA6ED734((uint64_t)v89, v87, (uint64_t)v88);
LABEL_25:
  __break(1u);
}

void *sub_1BB43DAD0@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  _BYTE __dst[392];

  memcpy(__dst, __src, 0x180uLL);
  sub_1BAF5F328((uint64_t)__dst);
  return sub_1BAF5F314(__dst, a2);
}

void *sub_1BB43DB28@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[25];

  v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  v4 = a1[11];
  v10[10] = a1[10];
  v10[11] = v4;
  v5 = a1[5];
  v10[4] = a1[4];
  v10[5] = v5;
  v6 = a1[7];
  v10[6] = a1[6];
  v10[7] = v6;
  v7 = a1[1];
  v10[0] = *a1;
  v10[1] = v7;
  v8 = a1[3];
  v10[2] = a1[2];
  v10[3] = v8;
  sub_1BAF5F308((uint64_t)v10);
  return sub_1BAF5F314(v10, a2);
}

uint64_t sub_1BB43DBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[25];
  _BYTE v44[392];
  _BYTE v45[400];
  uint64_t v46;
  _BYTE v47[392];

  v8 = sub_1BB86C8E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF5F314(a3, v47);
  sub_1BB43E1F0(a2, (uint64_t)v45);
  sub_1BAF5F314(v47, &v46);
  if ((v45[392] & 1) == 0)
  {
    sub_1BB43E1F0((uint64_t)v45, (uint64_t)v43);
    sub_1BAF5F314(v47, v44);
    v33 = sub_1BAF5D6A4((uint64_t)v44);
    v34 = nullsub_1();
    if (v33 != 1)
    {
      v40 = (const void *)v34;
      v41 = swift_allocObject();
      memcpy((void *)(v41 + 16), v43, 0x188uLL);
      memcpy((void *)(v41 + 408), v40, 0x180uLL);
      *(_QWORD *)(v41 + 792) = a1;
      v32 = v41 | 0x5000000000000000;
      goto LABEL_9;
    }
    sub_1BA915C30((uint64_t)v43);
LABEL_7:
    v35 = swift_allocObject();
    sub_1BB86C8D4();
    v36 = sub_1BB86C8C8();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_QWORD *)(v35 + 16) = v36;
    *(_QWORD *)(v35 + 24) = v38;
    *a4 = v35;
    return sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))sub_1BB43E284);
  }
  sub_1BB43E1F0((uint64_t)v45, (uint64_t)v43);
  sub_1BAF5F314(v47, v44);
  v12 = sub_1BAF5D6A4((uint64_t)v44);
  v13 = nullsub_1();
  if (v12 != 1)
  {
    sub_1BB43E22C((uint64_t)v43);
    goto LABEL_7;
  }
  v14 = (__int128 *)v13;
  v15 = swift_allocObject();
  v16 = v43[13];
  *(_OWORD *)(v15 + 208) = v43[12];
  *(_OWORD *)(v15 + 224) = v16;
  *(_OWORD *)(v15 + 240) = v43[14];
  *(_QWORD *)(v15 + 256) = *(_QWORD *)&v43[15];
  v17 = v43[9];
  *(_OWORD *)(v15 + 144) = v43[8];
  *(_OWORD *)(v15 + 160) = v17;
  v18 = v43[11];
  *(_OWORD *)(v15 + 176) = v43[10];
  *(_OWORD *)(v15 + 192) = v18;
  v19 = v43[5];
  *(_OWORD *)(v15 + 80) = v43[4];
  *(_OWORD *)(v15 + 96) = v19;
  v20 = v43[7];
  *(_OWORD *)(v15 + 112) = v43[6];
  *(_OWORD *)(v15 + 128) = v20;
  v21 = v43[1];
  *(_OWORD *)(v15 + 16) = v43[0];
  *(_OWORD *)(v15 + 32) = v21;
  v22 = v43[3];
  *(_OWORD *)(v15 + 48) = v43[2];
  *(_OWORD *)(v15 + 64) = v22;
  v23 = *v14;
  v24 = v14[1];
  v25 = v14[3];
  *(_OWORD *)(v15 + 296) = v14[2];
  *(_OWORD *)(v15 + 312) = v25;
  *(_OWORD *)(v15 + 280) = v24;
  *(_OWORD *)(v15 + 264) = v23;
  v26 = v14[4];
  v27 = v14[5];
  v28 = v14[7];
  *(_OWORD *)(v15 + 360) = v14[6];
  *(_OWORD *)(v15 + 376) = v28;
  *(_OWORD *)(v15 + 328) = v26;
  *(_OWORD *)(v15 + 344) = v27;
  v29 = v14[8];
  v30 = v14[9];
  v31 = v14[11];
  *(_OWORD *)(v15 + 424) = v14[10];
  *(_OWORD *)(v15 + 440) = v31;
  *(_OWORD *)(v15 + 392) = v29;
  *(_OWORD *)(v15 + 408) = v30;
  *(_QWORD *)(v15 + 456) = a1;
  v32 = v15 | 0x6000000000000000;
LABEL_9:
  *a4 = v32;
  return sub_1BB43E384((uint64_t)v45);
}

uint64_t sub_1BB43DE54(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA97505C(*(_QWORD *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_1BB43DE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB43C15C(a1, a2, a3);
}

uint64_t sub_1BB43DE78()
{
  return sub_1BB690BB4();
}

unint64_t sub_1BB43DE88(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB43DEB4();
  result = sub_1BB43DEF8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB43DEB4()
{
  unint64_t result;

  result = qword_1EF2C3EB0;
  if (!qword_1EF2C3EB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9184EC, &type metadata for H6_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C3EB0);
  }
  return result;
}

unint64_t sub_1BB43DEF8()
{
  unint64_t result;

  result = qword_1EF2C3EB8;
  if (!qword_1EF2C3EB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918514, &type metadata for H6_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C3EB8);
  }
  return result;
}

uint64_t type metadata accessor for H6_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2C3F20;
  if (!qword_1EF2C3F20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB43DF78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB43DF84(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB43E000()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB43E00C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB43E080()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB43E10C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C3F60, (uint64_t (*)(uint64_t))type metadata accessor for H6_V1.Bound, (uint64_t)&unk_1BB918578);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB43E148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB43C874(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1BB43E160(uint64_t a1)
{
  uint64_t v1;

  sub_1BB43CCDC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BB43E168()
{
  unint64_t result;

  result = qword_1EF2C3F80;
  if (!qword_1EF2C3F80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9186D0, &type metadata for H6_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C3F80);
  }
  return result;
}

unint64_t sub_1BB43E1AC()
{
  unint64_t result;

  result = qword_1EF2C3F88;
  if (!qword_1EF2C3F88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9186A0, &type metadata for H6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C3F88);
  }
  return result;
}

uint64_t sub_1BB43E1F0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HGroupLayoutContext(a2, a1);
  return a2;
}

uint64_t sub_1BB43E22C(uint64_t a1)
{
  destroy for CoverChannelViewLayout.Context(a1);
  return a1;
}

uint64_t sub_1BB43E260()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB43E284()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C3FA8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C3FA8);
  }
}

uint64_t sub_1BB43E2E8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 144))
      __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB43E384(uint64_t a1)
{
  destroy for HGroupLayoutContext(a1);
  return a1;
}

uint64_t sub_1BB43E3B8()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB43E4B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C3FB8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C3FC0, (uint64_t (*)(void))sub_1BB43E168, (uint64_t)&type metadata for H6_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C3FB8);
  }
}

void sub_1BB43E524(uint64_t a1)
{
  uint64_t v1;

  sub_1BB43CF68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB43E52C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB43E5F4(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB43E56C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB4EFFFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(double *)(v1 + 24));
}

void sub_1BB43E57C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AECF0)
  {
    sub_1BAA8B238();
    sub_1BAA8B27C();
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AECF0);
  }
}

void sub_1BB43E5F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for H6_V1.Layout;
    v8[1] = &type metadata for H6_V1.Layout.Attributes;
    v8[2] = sub_1BB43E168();
    v8[3] = sub_1BB43E1AC();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void *sub_1BB43E670(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  id v18;
  id v19;

  if (result)
  {
    v18 = result;
    swift_bridgeObjectRetain();
    v19 = a8;
    sub_1BA8D1FA8(a10, a11, a12, a13, a14);
    return (void *)sub_1BA75A650(a16, a17);
  }
  return result;
}

ValueMetadata *type metadata accessor for H6_V1.Layout.Attributes()
{
  return &type metadata for H6_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for H6_V1.Layout()
{
  return &type metadata for H6_V1.Layout;
}

unint64_t sub_1BB43E720()
{
  unint64_t result;

  result = qword_1EF2C3FF0;
  if (!qword_1EF2C3FF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918640, &type metadata for H6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C3FF0);
  }
  return result;
}

unint64_t sub_1BB43E768()
{
  unint64_t result;

  result = qword_1EF2C3FF8;
  if (!qword_1EF2C3FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918618, &type metadata for H6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C3FF8);
  }
  return result;
}

unint64_t sub_1BB43E7B0()
{
  unint64_t result;

  result = qword_1EF2C4000;
  if (!qword_1EF2C4000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9185F0, &type metadata for H6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C4000);
  }
  return result;
}

unint64_t sub_1BB43E7F8()
{
  unint64_t result;

  result = qword_1EF2C4008;
  if (!qword_1EF2C4008)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918668, &type metadata for H6_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C4008);
  }
  return result;
}

unint64_t sub_1BB43E83C()
{
  unint64_t result;

  result = qword_1EF2C4018;
  if (!qword_1EF2C4018)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D720C, &type metadata for HMultiLayoutItem);
    atomic_store(result, (unint64_t *)&qword_1EF2C4018);
  }
  return result;
}

uint64_t sub_1BB43E880@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C4020, (uint64_t (*)(void))sub_1BB43EA9C, (uint64_t)&type metadata for H6_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB43EA9C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4AD288(0, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = 1;
  sub_1BB43EAE0(&qword_1EF2C4030, (uint64_t (*)(void))sub_1BAF5F168, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB43EA9C()
{
  unint64_t result;

  result = qword_1EF2C4028;
  if (!qword_1EF2C4028)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9187C4, &type metadata for H6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4028);
  }
  return result;
}

uint64_t sub_1BB43EAE0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2C3F90, (uint64_t)&type metadata for HMultiLayoutItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for H6_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB43EBA8 + 4 * byte_1BB9184DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB43EBDC + 4 * asc_1BB9184D8[v4]))();
}

uint64_t sub_1BB43EBDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB43EBE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB43EBECLL);
  return result;
}

uint64_t sub_1BB43EBF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB43EC00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB43EC04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB43EC0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for H6_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for H6_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB43EC2C()
{
  unint64_t result;

  result = qword_1EF2C4048;
  if (!qword_1EF2C4048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91879C, &type metadata for H6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4048);
  }
  return result;
}

unint64_t sub_1BB43EC74()
{
  unint64_t result;

  result = qword_1EF2C4050;
  if (!qword_1EF2C4050)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91870C, &type metadata for H6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4050);
  }
  return result;
}

unint64_t sub_1BB43ECBC()
{
  unint64_t result;

  result = qword_1EF2C4058;
  if (!qword_1EF2C4058)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918734, &type metadata for H6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4058);
  }
  return result;
}

uint64_t sub_1BB43ED00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataConfigurationServiceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB43EE34 + 4 * byte_1BB918820[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB43EE54 + 4 * byte_1BB918825[v4]))();
}

_BYTE *sub_1BB43EE34(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB43EE54(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB43EE5C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB43EE64(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB43EE6C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB43EE74(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfigurationServiceError()
{
  return &type metadata for SportsDataConfigurationServiceError;
}

unint64_t sub_1BB43EE94()
{
  unint64_t result;

  result = qword_1EF2C4060;
  if (!qword_1EF2C4060)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918894, &type metadata for SportsDataConfigurationServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2C4060);
  }
  return result;
}

uint64_t sub_1BB43EEE0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindingFloatExpressionLogic.init(from:)(a1, a2);
}

uint64_t sub_1BB43EEF4(_QWORD *a1)
{
  return FormatBindingFloatExpressionLogic.encode(to:)(a1);
}

void FormatBindingFloatExpressionLogicCompare.operator.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatBindingFloatExpressionLogicCompare.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1BB43EF28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFloatExpressionLogicCompare.init(from:)(a1, a2);
}

uint64_t sub_1BB43EF3C(_QWORD *a1)
{
  return FormatBindingFloatExpressionLogicCompare.encode(to:)(a1);
}

uint64_t _s8NewsFeed40FormatBindingFloatExpressionLogicCompareV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 8);
  LOBYTE(v10) = *(_BYTE *)a1;
  v2 = FormatOperator.rawValue.getter();
  v4 = v3;
  if (v2 == FormatOperator.rawValue.getter() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  v10 = v1;
  static FormatFloat.== infix(_:_:)((uint64_t)&v10);
  return v8 & 1;
}

uint64_t _s8NewsFeed33FormatBindingFloatExpressionLogicO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  char v8[8];
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  v5 = *a1;
  if (v5 == 12)
  {
    if (*a2 != 12)
      goto LABEL_8;
  }
  else
  {
    if (v5 != 13)
    {
      if ((v4 & 0xFE) != 0xC)
      {
        v8[0] = *a1;
        v9 = v2;
        sub_1BAC6535C(v4);
        sub_1BAC6535C(v3);
        sub_1BAC6535C(v3);
        sub_1BAC6535C(v4);
        v6 = _s8NewsFeed40FormatBindingFloatExpressionLogicCompareV2eeoiySbAC_ACtFZ_0((uint64_t)v8);
        sub_1BAC653C4(v3);
        sub_1BAC653C4(v4);
        sub_1BAC653C4(v4);
        sub_1BAC653C4(v3);
        return v6 & 1;
      }
      goto LABEL_8;
    }
    if (*a2 != 13)
    {
LABEL_8:
      sub_1BAC6535C(*a1);
      sub_1BAC6535C(v4);
      sub_1BAC653C4(v3);
      sub_1BAC653C4(v4);
      v6 = 0;
      return v6 & 1;
    }
  }
  sub_1BAC653C4(*a1);
  sub_1BAC653C4(v4);
  v6 = 1;
  return v6 & 1;
}

unint64_t sub_1BB43F170(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB43F194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB43F194()
{
  unint64_t result;

  result = qword_1EF2C4068;
  if (!qword_1EF2C4068)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogic, &type metadata for FormatBindingFloatExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2C4068);
  }
  return result;
}

uint64_t sub_1BB43F1D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA946E1C, (uint64_t (*)(void))sub_1BA946E64, (uint64_t (*)(void))sub_1BB43F1F4);
}

unint64_t sub_1BB43F1F4()
{
  unint64_t result;

  result = qword_1EF2C4070;
  if (!qword_1EF2C4070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogic, &type metadata for FormatBindingFloatExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2C4070);
  }
  return result;
}

unint64_t sub_1BB43F238(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB43F25C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB43F25C()
{
  unint64_t result;

  result = qword_1EF2C4078;
  if (!qword_1EF2C4078)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogicCompare, &type metadata for FormatBindingFloatExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1EF2C4078);
  }
  return result;
}

uint64_t sub_1BB43F2A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE840C4, (uint64_t (*)(void))sub_1BAEF5B08, (uint64_t (*)(void))sub_1BB43F2BC);
}

unint64_t sub_1BB43F2BC()
{
  unint64_t result;

  result = qword_1EF2C4080;
  if (!qword_1EF2C4080)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogicCompare, &type metadata for FormatBindingFloatExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1EF2C4080);
  }
  return result;
}

unsigned __int8 *destroy for FormatBindingFloatExpressionLogic(unsigned __int8 *result)
{
  if (*result <= 0xBu)
    return (unsigned __int8 *)swift_release();
  return result;
}

uint64_t _s8NewsFeed33FormatBindingFloatExpressionLogicOwCP_0(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v3;

  v3 = *a2;
  if (v3 > 0xB)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_BYTE *)a1 = v3;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    swift_retain();
  }
  return a1;
}

unsigned __int8 *assignWithCopy for FormatBindingFloatExpressionLogic(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;

  v4 = *a2;
  if (*a1 > 0xBu)
  {
    if (v4 <= 0xB)
    {
      *a1 = v4;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 > 0xB)
  {
    swift_release();
    goto LABEL_7;
  }
  *a1 = v4;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_retain();
  swift_release();
  return a1;
}

unsigned __int8 *assignWithTake for FormatBindingFloatExpressionLogic(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;

  if (*a1 > 0xBu)
    goto LABEL_5;
  v4 = *a2;
  if (v4 > 0xB)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = v4;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingFloatExpressionLogic()
{
  return &type metadata for FormatBindingFloatExpressionLogic;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatBindingFloatExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for FormatBindingFloatExpressionLogicCompare()
{
  return swift_release();
}

uint64_t assignWithCopy for FormatBindingFloatExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatBindingFloatExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingFloatExpressionLogicCompare()
{
  return &type metadata for FormatBindingFloatExpressionLogicCompare;
}

uint64_t FCSportsEventController.fetchSportsEvents(for:cachePolicy:)(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86EA58();
  }
  else
  {
    sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

void sub_1BB43F640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD v18[6];

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_retain();
  sub_1BA57F420(a6);
  v15 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a6;
  v16[5] = sub_1BAAAC18C;
  v16[6] = v14;
  v18[4] = sub_1BB440F38;
  v18[5] = v16;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1BB43F900;
  v18[3] = &block_descriptor_32_0;
  v17 = _Block_copy(v18);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a5, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v15, a7, 25, v17);
  _Block_release(v17);

}

void sub_1BB43F794(uint64_t a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  id v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;

  if (a2)
  {
    v8 = a2;
    a3(a2);

  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BB440D5C(a5, a1);
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
    v17 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(v12 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)(v12 + 8 * i + 32))
        {
          v16 = swift_unknownObjectRetain();
          MEMORY[0x1BCCE36AC](v16);
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
      }
      swift_bridgeObjectRelease();
      v13 = v17;
    }
    swift_bridgeObjectRelease();
    a6(v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB43F900(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BA814ABC();
    v4 = sub_1BB87276C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t FCSportsEventController.fetchSportsEventsMap(for:)(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1BA4B07F0(0, &qword_1ED3A3A98, (uint64_t (*)(uint64_t))sub_1BB440A88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86EA58();
  }
  else
  {
    sub_1BA8F3E58(MEMORY[0x1E0DEE9D8]);
    sub_1BA4B07F0(0, &qword_1ED3A3A98, (uint64_t (*)(uint64_t))sub_1BB440A88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

void sub_1BB43FA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_retain();
  sub_1BA57F420(a6);
  v13 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = sub_1BA573ED8;
  v15[5] = v12;
  v17[4] = sub_1BB440EF8;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BB43F900;
  v17[3] = &block_descriptor_23_1;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v13, v14, 25, v16);
  _Block_release(v16);

}

void sub_1BB43FBDC(unint64_t a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(unint64_t))
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;

  if (a2)
  {
    v7 = a2;
    if (qword_1ED3AAC10 != -1)
      swift_once();
    v8 = (id)qword_1ED476750;
    v9 = sub_1BB8732F4();
    sub_1BA7AA598();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    swift_getErrorValue();
    v11 = sub_1BB87456C();
    v13 = v12;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v13;
    sub_1BB86EF44("Failed to fetch event for sport event, error=%{public}@", 55, 2, &dword_1BA493000, v8, v9, v10);

    swift_bridgeObjectRelease();
    a3(a2);

  }
  else
  {
    if (a1)
      v15 = a1;
    else
      v15 = sub_1BA8F3E58(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRetain();
    a5(v15);
    swift_bridgeObjectRelease();
  }
}

uint64_t FCSportsEventController.fetchSportsEvent(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v9;

  sub_1BA6EA07C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v5 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v5, sel_defaultCachePolicy);
  sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86EA58();
  swift_bridgeObjectRelease();

  v6 = (void *)sub_1BB86E854();
  sub_1BA814ABC();
  v7 = sub_1BB86E968();
  swift_release();

  return v7;
}

uint64_t FCSportsEventController.fetchSportsEvents(for:)(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  v3 = v2;
  if (*(_QWORD *)(a1 + 16))
  {
    MEMORY[0x1E0C80A78](v2);
    sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v4 = sub_1BB86EA58();
  }
  else
  {
    sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v4 = sub_1BB86E9E0();
  }

  return v4;
}

uint64_t sub_1BB43FFBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BB440E64();
    swift_allocError();
    return swift_willThrow();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCE4630](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1BA4B07F0(0, &qword_1EF2C40B8, (uint64_t (*)(uint64_t))sub_1BA814ABC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4400D4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86EA58();
  }
  else
  {
    sub_1BA4B07F0(0, &qword_1ED3A10E0, (uint64_t (*)(uint64_t))sub_1BB440A64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

uint64_t sub_1BB4401BC(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1BA4B07F0(0, &qword_1ED3A3A98, (uint64_t (*)(uint64_t))sub_1BB440A88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86EA58();
  }
  else
  {
    sub_1BA8F3E58(MEMORY[0x1E0DEE9D8]);
    sub_1BA4B07F0(0, &qword_1ED3A3A98, (uint64_t (*)(uint64_t))sub_1BB440A88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

uint64_t sub_1BB4402A4(uint64_t a1, uint64_t a2)
{
  return FCSportsEventController.fetchSportsEvent(for:)(a1, a2);
}

uint64_t sub_1BB4402C4(uint64_t a1)
{
  return FCSportsEventController.fetchSportsEvents(for:)(a1);
}

uint64_t FCSportsEventController.fetchSportsEventsAsync(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BB440300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v1 + 16))
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  sub_1BB440A64(0);
  *v5 = v0;
  v5[1] = sub_1BA978D78;
  return sub_1BB874518();
}

void sub_1BB4403EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD aBlock[6];

  sub_1BB440BEC(0, &qword_1EF2C40B0, sub_1BB440A64);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)aBlock - v12;
  sub_1BA57F420(a3);
  v14 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v13, v9);
  *(_QWORD *)(v16 + ((v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_1BB440CEC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB43F900;
  aBlock[3] = &block_descriptor_14;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a2, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v14, a4, 25, v17);
  _Block_release(v17);

}

uint64_t sub_1BB44058C(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  id v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;

  if (a2)
  {
    v4 = a2;
    sub_1BB440BEC(0, &qword_1EF2C40B0, sub_1BB440A64);
    return sub_1BB872F34();
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB440D5C(a4, a1);
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)(v8 + 8 * i + 32))
        {
          v11 = swift_unknownObjectRetain();
          MEMORY[0x1BCCE36AC](v11);
          if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1BB440BEC(0, &qword_1EF2C40B0, sub_1BB440A64);
    return sub_1BB872F40();
  }
}

uint64_t FCSportsEventController.fetchSportsEventsMapAsync(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1BB44071C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v4;
    sub_1BB440A88();
    *v4 = v0;
    v4[1] = sub_1BA98051C;
    return sub_1BB874518();
  }
  else
  {
    v6 = sub_1BA8F3E58(MEMORY[0x1E0DEE9D8]);
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v6);
  }
}

void sub_1BB4407FC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  sub_1BB440BEC(0, (unint64_t *)&unk_1EF2C40A0, (void (*)(uint64_t))sub_1BB440A88);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)aBlock - v9;
  sub_1BA57F420(a3);
  v11 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v10, v7);
  aBlock[4] = sub_1BB440B90;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB43F900;
  aBlock[3] = &block_descriptor_70;
  v15 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchSportsEventsForSportsEventIDs_cachePolicy_qualityOfService_completionHandler_, v11, v12, 25, v15);
  _Block_release(v15);

}

uint64_t sub_1BB4409A4(uint64_t a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
    sub_1BB440BEC(0, (unint64_t *)&unk_1EF2C40A0, (void (*)(uint64_t))sub_1BB440A88);
    return sub_1BB872F34();
  }
  else
  {
    if (!a1)
      sub_1BA8F3E58(MEMORY[0x1E0DEE9D8]);
    sub_1BB440BEC(0, (unint64_t *)&unk_1EF2C40A0, (void (*)(uint64_t))sub_1BB440A88);
    swift_bridgeObjectRetain();
    return sub_1BB872F40();
  }
}

void sub_1BB440A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BB43F640(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

void sub_1BB440A64(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A16D8, (uint64_t (*)(uint64_t))sub_1BA814ABC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BB440A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BB43FA70(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1BB440A88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AACB0)
  {
    sub_1BA814ABC();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AACB0);
  }
}

void sub_1BB440AEC(uint64_t a1)
{
  uint64_t v1;

  sub_1BB4403EC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1BB440AF8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB4407FC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEvents(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEventsMap(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEvent(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of SportsEventControllerType.fetchSportsEvents(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1BB440B20()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB440BEC(0, (unint64_t *)&unk_1EF2C40A0, (void (*)(uint64_t))sub_1BB440A88);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB440B90(uint64_t a1, void *a2)
{
  sub_1BB440BEC(0, (unint64_t *)&unk_1EF2C40A0, (void (*)(uint64_t))sub_1BB440A88);
  return sub_1BB4409A4(a1, a2);
}

void sub_1BB440BEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    v4 = sub_1BB872F4C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BB440C68()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB440BEC(0, &qword_1EF2C40B0, sub_1BB440A64);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB440CEC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1BB440BEC(0, &qword_1EF2C40B0, sub_1BB440A64);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1BB44058C(a1, a2, v2 + v7, *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB440D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (a2 && *(_QWORD *)(a2 + 16))
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BA6E35A8(v7, v8);
        if ((v9 & 1) != 0)
          swift_unknownObjectRetain();
        swift_bridgeObjectRelease_n();
      }
      v6 += 2;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      --v3;
    }
    while (v3);
    return v10;
  }
  return result;
}

unint64_t sub_1BB440E64()
{
  unint64_t result;

  result = qword_1EF2C40C0;
  if (!qword_1EF2C40C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918BA8, &_s6ErrorsON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2C40C0);
  }
  return result;
}

uint64_t sub_1BB440EA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB440ECC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB440EF8(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BB43FBDC(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(unint64_t))(v2 + 32));
}

uint64_t sub_1BB440F04()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB440F38(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BB43F794(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(uint64_t))(v2 + 40));
}

uint64_t _s6ErrorsOwst_1(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB440F88 + 4 * asc_1BB918AD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB440FA8 + 4 * byte_1BB918AD5[v4]))();
}

_BYTE *sub_1BB440F88(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB440FA8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB440FB0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB440FB8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB440FC0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB440FC8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s6ErrorsOMa_2()
{
  return &_s6ErrorsON_1;
}

unint64_t sub_1BB440FE8()
{
  unint64_t result;

  result = qword_1EF2C40D0;
  if (!qword_1EF2C40D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918B80, &_s6ErrorsON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2C40D0);
  }
  return result;
}

uint64_t static FormatProcessedColor.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v2 = a1[1];
  v3 = *(_QWORD *)(a2 + 8);
  v6 = *a1;
  static FormatColor.== infix(_:_:)((uint64_t)&v6);
  if ((v4 & 1) != 0)
    return sub_1BA8884D4(v2, v3);
  else
    return 0;
}

unint64_t sub_1BB4410A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE882E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB4410CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v2 = a1[1];
  v3 = *(_QWORD *)(a2 + 8);
  v6 = *a1;
  static FormatColor.== infix(_:_:)((uint64_t)&v6);
  if ((v4 & 1) != 0)
    return sub_1BA8884D4(v2, v3);
  else
    return 0;
}

unint64_t sub_1BB441124(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6B86C4();
  a1[2] = sub_1BA673310();
  result = sub_1BB441158();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB441158()
{
  unint64_t result;

  result = qword_1EF2C40E0;
  if (!qword_1EF2C40E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProcessedColor, &type metadata for FormatProcessedColor);
    atomic_store(result, (unint64_t *)&qword_1EF2C40E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProcessedColor()
{
  return &type metadata for FormatProcessedColor;
}

NewsFeed::FormatContentSubgroupSection __swiftcall FormatContentSubgroupSection.init(identifier:contents:)(Swift::String identifier, Swift::OpaquePointer contents)
{
  uint64_t v2;
  NewsFeed::FormatContentSubgroupSection result;

  *(Swift::String *)v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = contents;
  result.identifier = identifier;
  result.contents = contents;
  return result;
}

uint64_t FormatContentSubgroupSection.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroupSection.contents.getter()
{
  return swift_bridgeObjectRetain();
}

void static FormatContentSubgroupSection.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
    sub_1BA8824C0(v2, v3);
}

uint64_t sub_1BB44124C()
{
  _BYTE *v0;

  if (*v0)
    return 0x73746E65746E6F63;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB44128C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB441A5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB4412B0()
{
  sub_1BB44146C();
  return sub_1BB874710();
}

uint64_t sub_1BB4412D8()
{
  sub_1BB44146C();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupSection.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  char v15;

  sub_1BB4416E8(0, &qword_1EF2C40E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - v6;
  v13[0] = *(_QWORD *)(v1 + 16);
  v8 = a1[3];
  v9 = a1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1BB44146C();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v13[1] = v13[0];
    v14 = 1;
    sub_1BB4414B0();
    sub_1BB441744((unint64_t *)&qword_1ED39D9A8, (uint64_t (*)(void))sub_1BB2AC124, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1BB44146C()
{
  unint64_t result;

  result = qword_1EF2C40F0;
  if (!qword_1EF2C40F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918E60, &type metadata for FormatContentSubgroupSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C40F0);
  }
  return result;
}

void sub_1BB4414B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9490)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9490);
  }
}

uint64_t FormatContentSubgroupSection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;

  sub_1BB4416E8(0, &qword_1EF2C40F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB44146C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  sub_1BB4414B0();
  v16 = 1;
  sub_1BB441744((unint64_t *)&qword_1ED3B9498, (uint64_t (*)(void))sub_1BA831760, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v15[1];
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB4416E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB44146C();
    v7 = a3(a1, &type metadata for FormatContentSubgroupSection.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB441744(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BB4414B0();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB4417A8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82368C();
  a1[2] = sub_1BB2AC1E0();
  result = sub_1BB4417DC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4417DC()
{
  unint64_t result;

  result = qword_1EF2C4100;
  if (!qword_1EF2C4100)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupSection, &type metadata for FormatContentSubgroupSection);
    atomic_store(result, (unint64_t *)&qword_1EF2C4100);
  }
  return result;
}

uint64_t sub_1BB441820@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupSection.init(from:)(a1, a2);
}

uint64_t sub_1BB441834(_QWORD *a1)
{
  return FormatContentSubgroupSection.encode(to:)(a1);
}

void sub_1BB441848(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
    sub_1BA8824C0(v2, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupSection()
{
  return &type metadata for FormatContentSubgroupSection;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupSection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB441904 + 4 * byte_1BB918CD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB441938 + 4 * asc_1BB918CD0[v4]))();
}

uint64_t sub_1BB441938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB441940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB441948);
  return result;
}

uint64_t sub_1BB441954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB44195CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB441960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB441968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupSection.CodingKeys()
{
  return &type metadata for FormatContentSubgroupSection.CodingKeys;
}

unint64_t sub_1BB441988()
{
  unint64_t result;

  result = qword_1EF2C4108;
  if (!qword_1EF2C4108)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918E38, &type metadata for FormatContentSubgroupSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4108);
  }
  return result;
}

unint64_t sub_1BB4419D0()
{
  unint64_t result;

  result = qword_1EF2C4110;
  if (!qword_1EF2C4110)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918DA8, &type metadata for FormatContentSubgroupSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4110);
  }
  return result;
}

unint64_t sub_1BB441A18()
{
  unint64_t result;

  result = qword_1EF2C4118;
  if (!qword_1EF2C4118)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB918DD0, &type metadata for FormatContentSubgroupSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4118);
  }
  return result;
}

uint64_t sub_1BB441A5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_1BB441B58(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  objc_super v19;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame];
  v5 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_editor] = a1;
  v6 = objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerPaneViewController());
  v7 = swift_retain_n();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_debuggerPaneViewController] = sub_1BB7D5338(v7);
  v8 = (void *)sub_1BB872970();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v10 = &v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v13 = v2;
  *(_QWORD *)&v2[v11] = objc_msgSend(v12, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v9;
  swift_retain();
  v15 = v9;

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
  v16 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  v17 = (void *)sub_1BB872970();
  objc_msgSend(v16, sel_setTitle_, v17);

  swift_release();
  return v16;
}

id sub_1BB441E68()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    swift_retain();
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    swift_release();
    sub_1BB86E470();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

