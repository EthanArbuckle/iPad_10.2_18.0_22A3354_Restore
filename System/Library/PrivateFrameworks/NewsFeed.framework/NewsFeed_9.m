uint64_t sub_1BAA39AC8(uint64_t a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v26;

  v10 = (_QWORD *)*a2;
  sub_1BA7AA598();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v11 + 32) = a4;
  *(_QWORD *)(v11 + 40) = a5;
  swift_bridgeObjectRetain();
  v12 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager atomic rebuild did fetch service config, id=%{public}@", 67, 2, &dword_1BA493000, a3, v12, v11);
  swift_bridgeObjectRelease();
  v13 = v10[13];
  v14 = v10[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  static FeedLocation.topOfFeed(_:)(a1, AssociatedTypeWitness, AssociatedConformanceWitness, &v26);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v14;
  v18 = v10[11];
  v17[3] = v18;
  v17[4] = v10[12];
  v17[5] = a7;
  v17[6] = v13;
  v19 = v10[14];
  v17[7] = v19;
  v17[8] = v10[15];
  v17[9] = a3;
  v17[10] = a4;
  v17[11] = a5;
  v17[12] = a6;
  swift_bridgeObjectRetain();
  v20 = a3;
  swift_retain();
  v21 = FeedServiceType.fetchAll(from:until:)(&v26, (uint64_t)sub_1BAA3CF18, (uint64_t)v17, v18, v19);
  swift_release();
  swift_release();
  return v21;
}

BOOL sub_1BAA39CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1BA7AA598();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  v10 = MEMORY[0x1BCCE37B4](a1, AssociatedTypeWitness);
  v11 = MEMORY[0x1E0DEB418];
  v12 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v8 + 104) = v12;
  *(_QWORD *)(v8 + 72) = v10;
  swift_retain();
  sub_1BB86EC20();
  swift_release();
  *(_QWORD *)(v8 + 136) = v11;
  *(_QWORD *)(v8 + 144) = v12;
  *(_QWORD *)(v8 + 112) = v15;
  v13 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager atomic rebuild fetched more groups, id=%{public}@, count=%lu, limit=%lu", 84, 2, &dword_1BA493000, a2, v13, v8);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86EC20();
  swift_release();
  return v10 >= v15;
}

uint64_t sub_1BAA39E98(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  uint64_t AssociatedTypeWitness;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(void);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73[16];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v69 = a8;
  v67 = a7;
  v68 = a6;
  v62 = a4;
  v64 = a3;
  v70 = a2;
  v71 = a9;
  v12 = *(_QWORD **)a2;
  v13 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v14 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v66 = *(_QWORD *)(v72 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v63 = (char *)&v53 - v15;
  v55 = *a1;
  v16 = v55;
  sub_1BA7AA598();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  v61 = a5;
  v18 = swift_getAssociatedTypeWitness();
  v54 = v18;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  v89 = FeedServiceFetchResult.emittedGroups.getter(v16, v18, AssociatedConformanceWitness);
  v21 = v12[11];
  v20 = v12[12];
  v82 = v13;
  v83 = v21;
  v58 = v13;
  v22 = v71;
  v84 = v20;
  v85 = v71;
  v24 = v12[14];
  v23 = v12[15];
  v59 = v14;
  v86 = v14;
  v87 = v24;
  v56 = v24;
  v88 = v23;
  v25 = v23;
  v57 = v23;
  KeyPath = swift_getKeyPath();
  v74 = v13;
  v75 = v21;
  v76 = v20;
  v77 = v22;
  v27 = v20;
  v78 = v14;
  v79 = v24;
  v80 = v25;
  v81 = KeyPath;
  v28 = v54;
  swift_getAssociatedTypeWitness();
  v29 = AssociatedConformanceWitness;
  v30 = v28;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v31 = sub_1BB872EE0();
  v32 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v31);
  v33 = MEMORY[0x1E0DEA968];
  v34 = v60;
  v36 = sub_1BAA52384((void (*)(char *, char *))sub_1BAA3CD0C, (uint64_t)v73, v31, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v32, MEMORY[0x1E0DEDD18], v35);
  v60 = v34;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v33, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v17 + 96) = v37;
  *(_QWORD *)(v17 + 104) = sub_1BAA3CD34();
  *(_QWORD *)(v17 + 72) = v36;
  v38 = sub_1BB87330C();
  v39 = v64;
  sub_1BB86EF44("Feed manager atomic rebuild finished fetching groups, id=%{public}@, groups=%{public}@", 86, 2, &dword_1BA493000, v64, v38, v17);
  swift_bridgeObjectRelease();
  v40 = v55;
  FeedServiceFetchResult.emittedGroups.getter(v55, v30, v29);
  v68 = (uint64_t (*)(void))v68();
  swift_bridgeObjectRelease();
  v41 = v72;
  v42 = v63;
  v43 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v63, v69, AssociatedTypeWitness);
  v44 = (*(unsigned __int8 *)(v41 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v45 = (char *)swift_allocObject();
  *((_QWORD *)v45 + 2) = v58;
  *((_QWORD *)v45 + 3) = v21;
  v46 = v71;
  *((_QWORD *)v45 + 4) = v27;
  *((_QWORD *)v45 + 5) = v46;
  v47 = v56;
  *((_QWORD *)v45 + 6) = v59;
  *((_QWORD *)v45 + 7) = v47;
  *((_QWORD *)v45 + 8) = v57;
  *((_QWORD *)v45 + 9) = v39;
  v48 = v61;
  *((_QWORD *)v45 + 10) = v62;
  *((_QWORD *)v45 + 11) = v48;
  *((_QWORD *)v45 + 12) = v40;
  *((_QWORD *)v45 + 13) = v70;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v45[v44], v42, v43);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v49 = v39;
  v50 = (void *)sub_1BB86E854();
  v51 = sub_1BB86E974();
  swift_release();

  swift_release();
  return v51;
}

uint64_t sub_1BAA3A370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedConformanceWitness() + 8) + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  v4 = swift_checkMetadataState();
  result = v3(v4, v2);
  *a1 = result;
  a1[1] = v6;
  return result;
}

void sub_1BAA3A4A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int16 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  unsigned __int8 v112;

  v79 = a8;
  v94 = a7;
  v100 = a5;
  v80 = a1;
  v78 = a9;
  v96 = a6;
  v12 = *a6;
  v93 = type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1E0C80A78](v93);
  v92 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v12 + 96);
  v85 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v15);
  v95 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v17);
  v102 = (uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v101 = (uint64_t)&v74 - v20;
  v21 = *(_QWORD *)(v12 + 104);
  v22 = *(_QWORD *)(v12 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v91 = sub_1BB873A2C();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v74 - v24;
  sub_1BA7AA598();
  v81 = v25;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  v82 = sub_1BA6A2D8C();
  *(_QWORD *)(v26 + 64) = v82;
  v83 = a3;
  *(_QWORD *)(v26 + 32) = a3;
  *(_QWORD *)(v26 + 40) = a4;
  v84 = a4;
  swift_bridgeObjectRetain();
  v27 = sub_1BB87330C();
  v77 = a2;
  sub_1BB86EF44("Feed manager atomic rebuild finished pre-commit, id=%{public}@", 62, 2, &dword_1BA493000, a2, v27, v26);
  swift_bridgeObjectRelease();
  v28 = CACurrentMediaTime();
  v98 = v22;
  v99 = v21;
  v29 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1BA546D3C(v100);
  if (v31 < 0)
  {
    v52 = *(_QWORD *)(v12 + 88);
    *(_QWORD *)&v107 = v98;
    *((_QWORD *)&v107 + 1) = v52;
    *(_QWORD *)&v108 = v14;
    *((_QWORD *)&v108 + 1) = v99;
    v109 = *(_OWORD *)(v12 + 112);
    type metadata accessor for FeedManager.Errors();
  }
  v32 = v31;
  v75 = v14;
  v76 = v12;
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v34 = (uint64_t)v89;
  v33(v89, 1, 1, v29);
  v112 = 4;
  v35 = sub_1BB86C8B0();
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v36(v101, 1, 1, v35);
  v36(v102, 1, 1, v35);
  type metadata accessor for FeedGroupEmitter(0, v29, AssociatedConformanceWitness, v37);
  swift_retain();
  v38 = sub_1BB872E68();
  v74 = AssociatedConformanceWitness;
  v87 = v38;
  sub_1BB872EE0();
  swift_getTupleTypeMetadata2();
  sub_1BB872E68();
  v39 = sub_1BB8727CC();
  v40 = sub_1BB872E68();
  v41 = sub_1BB872E68();
  v110 = 0u;
  v111 = 0u;
  v108 = 0u;
  v109 = 0u;
  v107 = 0u;
  v106 = 0;
  v105 = 0u;
  v103 = 0;
  v104 = 256;
  v43 = v101;
  v42 = v102;
  v86 = v32;
  v88 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v34, 0, &v112, v101, v102, v87, v39, v40, v41, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)&v107,
          (uint64_t *)&v105,
          (uint64_t)&v103,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v34, v91);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = FeedCursorContainer.init(cursor:)(v88);
  swift_getAssociatedTypeWitness();
  v45 = swift_getAssociatedConformanceWitness();
  v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  swift_retain();
  v47 = swift_checkMetadataState();
  v48 = (uint64_t)v92;
  v46(v47, v45);
  LOBYTE(v35) = *(_BYTE *)(v48 + *(int *)(v93 + 28));
  sub_1BA4A2E80(v48, type metadata accessor for FeedServiceOptions);
  LOBYTE(v107) = v35;
  v49 = v95;
  v50 = v97;
  sub_1BA5466FC(&v107, v95);
  if (v50)
  {
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  v51 = v75;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 + 120) + 80))(v44 | 0x8000000000000000, 1, v75);
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v49, v51);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1BB87D7A0;
  v54 = MEMORY[0x1E0DEA968];
  v55 = v82;
  *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v53 + 64) = v55;
  v56 = v84;
  *(_QWORD *)(v53 + 32) = v83;
  *(_QWORD *)(v53 + 40) = v56;
  v57 = v54;
  sub_1BA546D3C(v100);
  v59 = v58;
  swift_retain();
  swift_bridgeObjectRetain();
  v60 = FeedCursorContainer.rootCursorContainer.getter(v59);
  swift_release();
  v61 = sub_1BA630F34((uint64_t)v60);
  v63 = v62;
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)(v53 + 96) = v57;
  *(_QWORD *)(v53 + 104) = v55;
  *(_QWORD *)(v53 + 72) = v61;
  *(_QWORD *)(v53 + 80) = v63;
  qos_class_self();
  v64 = (id)FCStringFromQoSClass();
  if (!v64)
    goto LABEL_14;
  v65 = v64;
  v66 = sub_1BB8729A0();
  v68 = v67;

  *(_QWORD *)(v53 + 136) = v57;
  *(_QWORD *)(v53 + 144) = v55;
  *(_QWORD *)(v53 + 112) = v66;
  *(_QWORD *)(v53 + 120) = v68;
  v69 = (CACurrentMediaTime() - v28) * 1000.0;
  v70 = v80;
  if ((~*(_QWORD *)&v69 & 0x7FF0000000000000) != 0)
  {
    v71 = v79;
    if (v69 > -9.22337204e18)
    {
      if (v69 < 9.22337204e18)
      {
        v72 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v53 + 176) = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(v53 + 184) = v72;
        *(_QWORD *)(v53 + 152) = (uint64_t)v69;
        v73 = sub_1BB87330C();
        sub_1BB86EF44("Feed manager atomic rebuild finished committing to database, id=%{public}@, rootCursorIdentifier=%{public}@, qos=%{public}@, time=%lldms", 136, 2, &dword_1BA493000, v77, v73, v53);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v78, v70, v71);
        return;
      }
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t sub_1BAA3AD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1BA7AA598();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = a4;
  *(_QWORD *)(v8 + 40) = a5;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  swift_bridgeObjectRetain();
  sub_1BB873E34();
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 80) = 0xE000000000000000;
  v11 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager atomic rebuild failed, id=%{public}@, error=%{public}@", 67, 2, &dword_1BA493000, a3, v11, v8);
  return swift_bridgeObjectRelease();
}

uint64_t FeedManager.fetchReplaceGroup(from:)()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  sub_1BB86EC14();
  v3 = (void *)sub_1BB86E854();
  v4 = sub_1BB86E98C();
  swift_release();

  return v4;
}

uint64_t sub_1BAA3AF90@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;
  void (*v15)(uint64_t, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;

  v18 = a3;
  v4 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v17 - v6;
  v19 = *(_QWORD *)(v4 + 96);
  v17 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  FeedServiceFetchResult.serviceContext.getter(v11);
  v12 = v20;
  sub_1BA5464B0((uint64_t)v10);
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  v14 = v18;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  v15 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 + 120) + 80);
  v16 = v19;
  v15(v11, 0, v19);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v16);
  *v14 = v11;
  return swift_retain();
}

uint64_t sub_1BAA3B15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedConformanceWitness;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v33 = a2;
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v26 - v8;
  v10 = v4[12];
  v31 = v4[11];
  v32 = v10;
  v35 = v6;
  v36 = v31;
  v37 = v10;
  v38 = v5;
  v11 = v4[15];
  v29 = v4[14];
  v30 = v11;
  v39 = v29;
  v40 = v11;
  v41 = a1;
  v12 = swift_getAssociatedTypeWitness();
  v27 = v12;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursor(0, v12, AssociatedConformanceWitness, v13);
  sub_1BB86EC14();
  v14 = (void *)sub_1BB86E854();
  v26 = sub_1BB86E980();
  swift_release();

  v15 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v33, AssociatedTypeWitness);
  v16 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = (char *)swift_allocObject();
  v18 = v31;
  *((_QWORD *)v17 + 2) = v6;
  *((_QWORD *)v17 + 3) = v18;
  *((_QWORD *)v17 + 4) = v32;
  *((_QWORD *)v17 + 5) = v5;
  v19 = v30;
  *((_QWORD *)v17 + 6) = v29;
  *((_QWORD *)v17 + 7) = v19;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v16], v9, v15);
  v20 = (void *)sub_1BB86E854();
  v21 = v27;
  swift_getTupleTypeMetadata2();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v22 = (void *)sub_1BB86E854();
  type metadata accessor for FeedLocation(0, v21, AssociatedConformanceWitness, v23);
  v24 = sub_1BB86E98C();
  swift_release();

  return v24;
}

uint64_t sub_1BAA3B3EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;

  v41 = a4;
  v42 = a2;
  v7 = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v9 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v10 = &protocol requirements base descriptor for FeedServiceConfigFetcherType;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)&v33 - v13;
  swift_getAssociatedConformanceWitness();
  v39 = a3;
  if (!FeedServiceContextType.canReadFromNetwork()())
  {
    swift_willThrow();
    v32 = a1;
    return (uint64_t)v10;
  }
  v36 = v8;
  v37 = v4;
  v14 = *(_QWORD *)(v42 + 48);
  sub_1BA7AA598();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v43 = 0;
  v44 = 0xE000000000000000;
  v45 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v16 = v43;
  v17 = v44;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v17;
  v18 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager preparing read from the network; database returned with error=%{public}@",
    85,
    2,
    &dword_1BA493000,
    v14,
    v18,
    v15);
  swift_bridgeObjectRelease();
  LOBYTE(v43) = 2;
  sub_1BA83A9D8();
  v19 = sub_1BB86E1D0();
  result = MEMORY[0x1BCCDEB28](v19);
  v35 = result;
  if (result)
  {
    v34 = sub_1BB86E6F8();
    v21 = v40;
    v22 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v38, v39, AssociatedTypeWitness);
    v23 = (*(unsigned __int8 *)(v21 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = (char *)swift_allocObject();
    *((_QWORD *)v25 + 2) = v9;
    *((_QWORD *)v25 + 3) = v7[11];
    v26 = v36;
    *((_QWORD *)v25 + 4) = v7[12];
    *((_QWORD *)v25 + 5) = v26;
    *((_QWORD *)v25 + 6) = v7[14];
    v27 = v42;
    *((_QWORD *)v25 + 7) = v7[15];
    *((_QWORD *)v25 + 8) = v27;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v25[v23], v22, AssociatedTypeWitness);
    *(_QWORD *)&v25[v24] = v41;
    v28 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedLocation(0, v28, AssociatedConformanceWitness, v30);
    swift_retain();
    swift_retain();
    v31 = (void *)v34;
    v10 = (void *)sub_1BB86E968();
    swift_release();

    swift_release();
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAA3B728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v23[0] = a4;
  v5 = *(_QWORD **)a2;
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)v23 - v11;
  v23[1] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v6 + 48))(a3, v7, v6, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, AssociatedTypeWitness);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v7;
  *((_QWORD *)v14 + 3) = v5[11];
  *((_QWORD *)v14 + 4) = v5[12];
  *((_QWORD *)v14 + 5) = v6;
  *((_QWORD *)v14 + 6) = v5[14];
  v15 = v5[15];
  v16 = v23[0];
  *((_QWORD *)v14 + 7) = v15;
  *((_QWORD *)v14 + 8) = v16;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, AssociatedTypeWitness);
  swift_retain();
  v17 = (void *)sub_1BB86E854();
  v18 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedLocation(0, v18, AssociatedConformanceWitness, v20);
  v21 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_1BAA3B908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t result;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v27 = a3;
  v28 = a4;
  v24 = a2;
  v25 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v23[0] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - v9;
  v23[1] = a2 + 16;
  v11 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursorTracker(255, v11, AssociatedConformanceWitness, v13);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v26 = swift_allocBox();
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v15, v25, v11);
  swift_beginAccess();
  v17 = 0;
  v18 = *(_QWORD *)(v24 + 16);
  if ((~v18 & 0xF000000000000007) != 0)
  {
    v17 = sub_1BA819AE4(v18);
    swift_retain();
  }
  v19 = *(int *)(TupleTypeMetadata2 + 48);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v20(v10, v27, AssociatedTypeWitness);
  if (!v17)
  {
    v21 = v23[0];
    v20((char *)v23[0], (uint64_t)v10, AssociatedTypeWitness);
    v17 = FeedCursorTracker.__allocating_init(context:)(v21);
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, AssociatedTypeWitness);
  *(_QWORD *)(v16 + v19) = v17;
  *v28 = v26;
  return result;
}

uint64_t sub_1BAA3BB14(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;

  v20 = a1;
  v6 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceError(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  if (!swift_dynamicCast())
    goto LABEL_8;
  if (v19 != 6 || v15 != 1 || v17 | v16 | v18)
  {
    sub_1BAA3D18C(v15, v16, v17, v18, v19);
    goto LABEL_8;
  }
  swift_beginAccess();
  v10 = *(_QWORD *)(a3 + 16);
  if ((~v10 & 0xF000000000000007) == 0)
  {
LABEL_8:
    swift_willThrow();
    v13 = a1;
    return a2;
  }
  v11 = *(_QWORD *)(a2 + 48);
  swift_retain();
  v12 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager loading from cache since refresh yielded no new content", 68, 2, &dword_1BA493000, v11, v12, MEMORY[0x1E0DEE9D8]);
  sub_1BA838824(v10, (uint64_t *)&v20);
  a2 = sub_1BA59B288();
  sub_1BA62ECD4(v10);
  swift_release();
  return a2;
}

uint64_t sub_1BAA3BCE0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return FeedCursorContainer.cursor()(a1, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
}

uint64_t sub_1BAA3BD70(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;

  v2 = (_QWORD *)*a2;
  v3 = *a1;
  v4 = a2[6];
  v5 = sub_1BB87330C();
  v6 = sub_1BB86EF44("Feed manager waiting on loading gate for refreshing feed location", 65, 2, &dword_1BA493000, v4, v5, MEMORY[0x1E0DEE9D8]);
  result = MEMORY[0x1BCCDEB28](v6);
  if (result)
  {
    v8 = (void *)sub_1BB86E6F8();
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v2[10];
    v9[3] = v2[11];
    v9[4] = v2[12];
    v9[5] = v2[13];
    v9[6] = v2[14];
    v9[7] = v2[15];
    v9[8] = v3;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    type metadata accessor for FeedCursor(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
    swift_retain();
    v13 = sub_1BB86E974();
    swift_release();

    swift_release();
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA3BEEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD **)a2;
  v4 = *a1;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v6, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = v3[11];
  v7[4] = v3[12];
  v7[5] = v5;
  v7[6] = v3[14];
  v7[7] = v3[15];
  v7[8] = v4;
  swift_retain();
  v8 = (void *)sub_1BB86E854();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedCursor(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  swift_getTupleTypeMetadata2();
  v12 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1BAA3C040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  int *TupleTypeMetadata;
  _QWORD *v27;
  char *v28;
  void (*v29)(uint64_t, uint64_t);
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  char v33;
  char v34;
  char v35;
  char v36;
  ValueMetadata *v37;
  ValueMetadata *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  void (**v57)(char *, _QWORD);
  uint64_t v58;
  void (**v59)(_QWORD *, id);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  char v64[48];
  uint64_t v65;
  uint64_t v66;
  ValueMetadata *v67;
  ValueMetadata *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;

  v58 = a1;
  v63 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v59 = (void (**)(_QWORD *, id))swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  v62 = v7;
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)&v48 - v8;
  v54 = (_QWORD *)swift_checkMetadataState();
  v57 = (void (**)(char *, _QWORD))*(v54 - 1);
  MEMORY[0x1E0C80A78](v54);
  v10 = (char *)&v48 - v9;
  v12 = type metadata accessor for FeedCursor(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)&v48 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - v18;
  v20 = *(_QWORD *)(a2 + 48);
  v21 = sub_1BB87330C();
  sub_1BB86EF44("Feed manager fetched latest config", 34, 2, &dword_1BA493000, v20, v21, MEMORY[0x1E0DEE9D8]);
  v22 = *(int *)(TupleTypeMetadata2 + 48);
  v23 = &v15[v22];
  v24 = *(_QWORD *)v58;
  v60 = v16;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v25(v23, v58 + v22, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v23, AssociatedTypeWitness);
  strcpy(v64, "cursor serviceConfig strategy trigger ");
  v65 = v12;
  v66 = AssociatedTypeWitness;
  v52 = AssociatedTypeWitness;
  v67 = &type metadata for FeedRefreshStrategy;
  v68 = &type metadata for FeedRefreshTrigger;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v58 = swift_allocBox();
  v55 = v27;
  v28 = (char *)v27 + TupleTypeMetadata[12];
  v51 = (char *)v27 + TupleTypeMetadata[16];
  v56 = TupleTypeMetadata[20];
  *v27 = v24;
  v53 = v19;
  v25(v28, (uint64_t)v19, AssociatedTypeWitness);
  v29 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v50 = v24;
  swift_retain_n();
  v29(AssociatedTypeWitness, AssociatedConformanceWitness);
  v30 = v54;
  v59[6](v54, v59);
  ((void (**)(char *, _QWORD *))v57)[1](v10, v30);
  v31 = v24 + qword_1ED476788;
  v32 = *(void **)(v24 + qword_1ED476788);
  v33 = *(_BYTE *)(v24 + qword_1ED476788 + 8);
  v34 = *(_BYTE *)(v24 + qword_1ED476788 + 9);
  v35 = *(_BYTE *)(v24 + qword_1ED476788 + 10);
  v36 = *(_BYTE *)(v24 + qword_1ED476788 + 11);
  v37 = *(ValueMetadata **)(v24 + qword_1ED476788 + 16);
  v38 = *(ValueMetadata **)(v24 + qword_1ED476788 + 24);
  v39 = *(_QWORD *)(v24 + qword_1ED476788 + 32);
  v40 = *(_QWORD *)(v24 + qword_1ED476788 + 40);
  v41 = *(_BYTE *)(v31 + 48);
  v43 = *(void **)(v31 + 56);
  v42 = *(_QWORD *)(v31 + 64);
  v49 = *(_QWORD *)(v31 + 72);
  v65 = (uint64_t)v32;
  LOBYTE(v66) = v33;
  BYTE1(v66) = v34;
  BYTE2(v66) = v35;
  BYTE3(v66) = v36;
  v67 = v37;
  v68 = v38;
  v69 = v39;
  v70 = v40;
  v71 = v41;
  v72 = v43;
  v73 = v42;
  v74 = v49;
  v44 = v61;
  v45 = swift_getAssociatedConformanceWitness();
  v54 = *(_QWORD **)(v45 + 32);
  v57 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v39, v40);
  v59 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v75;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v54)(&v65, v44, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  sub_1BA6DB13C(v39, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v44);
  result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v53, v52);
  *((_BYTE *)v55 + v56) = 1;
  *v63 = v58 | 0x4000000000000000;
  return result;
}

uint64_t sub_1BAA3C5C8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return FeedManager.atomicRebuild<A>(context:policy:preCommit:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1BAA3C5E8()
{
  return FeedManager.state.getter();
}

uint64_t sub_1BAA3C608()
{
  return FeedManager.fetchReplaceGroup(from:)();
}

_QWORD *sub_1BAA3C628(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;

  v7 = v6;
  v38 = a5;
  v39 = a6;
  v36 = a3;
  v37 = a4;
  v35 = a2;
  v9 = *v6;
  v10 = *(_QWORD *)(*v6 + 80);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  sub_1BB86EAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v34 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v17 = (char *)&v30 - v16;
  v18 = *a1;
  v31 = a1[1];
  v32 = v18;
  v33 = *((unsigned __int8 *)a1 + 32);
  v41 = 0;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED39EE08, (uint64_t)&type metadata for FeedManagerLoadSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  v6[3] = sub_1BB86E1A0();
  v19 = (char *)v7 + *(_QWORD *)(*v7 + 184);
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = *(_QWORD *)(*v6 + 192);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
  v40 = *((_OWORD *)a1 + 1);
  v21(v17, 1, 1, TupleTypeMetadata2);
  v22 = *(_QWORD *)(v9 + 88);
  v23 = sub_1BA59B49C((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v34);
  *(_QWORD *)((char *)v7 + v20) = v23;
  v24 = v31;
  v7[4] = v32;
  v7[5] = v24;
  *((_OWORD *)v7 + 3) = v40;
  *((_BYTE *)v7 + 64) = v33;
  v25 = (char *)v7 + *(_QWORD *)(*v7 + 152);
  v26 = sub_1BB873A2C();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v25, v35, v26);
  v27((char *)v7 + *(_QWORD *)(*v7 + 160), v36, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))((char *)v7 + *(_QWORD *)(*v7 + 168), v37, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))((char *)v7 + *(_QWORD *)(*v7 + 176), v38, v10);
  v28 = v39;
  if (!v39)
  {
    type metadata accessor for FeedLoadingGate(0);
    swift_allocObject();
    v28 = sub_1BA59BD6C(1, (id)v40);
  }
  v7[2] = v28;
  return v7;
}

uint64_t sub_1BAA3C914()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3C938()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BAA3C9B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 104) + 48))(v1 + ((v3 + 72) & ~v3), *(_QWORD *)(*(_QWORD *)a1 + 80));
}

uint64_t sub_1BAA3CA2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3CA60(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1BAA39AC8(a1, a2, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BAA3CA80()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BAA3CB1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1BAA39E98(a1, a2, *(void **)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(uint64_t (**)(void))(v2 + 96), *(_QWORD *)(v2 + 104), v2 + ((v6 + 112) & ~v6), v5);
}

uint64_t sub_1BAA3CBA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA3CBD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BAA3AD8C(a1, a2, v2[3], v2[4], v2[5]);
}

uint64_t sub_1BAA3CBDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3CC04()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 112) + 40))(*(_QWORD *)(v0 + 24), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 88));
}

uint64_t sub_1BAA3CC44@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAA3AF90(a1, a2, a3);
}

uint64_t sub_1BAA3CC5C()
{
  return swift_getAssociatedConformanceWitness();
}

ValueMetadata *type metadata accessor for FeedManagerLoadSource()
{
  return &type metadata for FeedManagerLoadSource;
}

uint64_t dispatch thunk of FeedManagerType.loadingGate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedManagerType.loadingSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedManagerType.prepare(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedManagerType.readAndFetch(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedManagerType.save(snapshot:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedManagerType.atomicRebuild<A>(context:policy:preCommit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t method lookup function for FeedManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedManager.__allocating_init(feed:database:offlineDatabase:service:serviceConfigFetcher:loadingGate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

void type metadata accessor for FeedManager.Errors()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BAA3CCE4()
{
  return 56;
}

__n128 sub_1BAA3CCF0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_1BAA3CD0C()
{
  return swift_getAtKeyPath();
}

unint64_t sub_1BAA3CD34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2FA8;
  if (!qword_1ED3A2FA8)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2FA8);
  }
  return result;
}

uint64_t sub_1BAA3CD94()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_1BAA3CE3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  sub_1BAA3A4A4(a1, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD **)(v2 + 104), v2 + ((v6 + 112) & ~v6), v5, a2);
}

uint64_t sub_1BAA3CEBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3CEE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1BAA3CF18(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA39CA4(a1, v1[9], v1[10], v1[11]);
}

uint64_t sub_1BAA3CF58()
{
  uint64_t v0;

  return sub_1BAA392D4(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1BAA3CF80(uint64_t a1, uint64_t a2)
{
  return sub_1BAA3D550(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BAA3941C);
}

uint64_t sub_1BAA3CF9C()
{
  uint64_t v0;

  if ((~*(_QWORD *)(v0 + 16) & 0xF000000000000007) != 0)
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3CFD0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3D064()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3D0F0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1BAA3B3EC(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BAA3D174(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAA3BB14(a1, a2, v2);
}

uint64_t sub_1BAA3D18C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1BA5B18CC(a2);
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAA3D200()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3D224()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3D2CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BAA3B728(a1, *(_QWORD *)(v1 + 64), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BAA3D344()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BAA3D3D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1BAA3B908(a1, *(_QWORD *)(v2 + 64), v2 + ((v5 + 72) & ~v5), a2);
}

uint64_t sub_1BAA3D480()
{
  uint64_t v0;

  return sub_1BAA3BCE0(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1BAA3D4A4(uint64_t *a1, _QWORD *a2)
{
  return sub_1BAA3BD70(a1, a2);
}

uint64_t objectdestroy_26Tm_0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BAA3D534(uint64_t a1, uint64_t a2)
{
  return sub_1BAA3D550(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BAA3BEEC);
}

uint64_t sub_1BAA3D550(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return a3(a1, a2, v3 + ((v7 + 64) & ~v7));
}

uint64_t sub_1BAA3D5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAA3C040(a1, a2, a3);
}

uint64_t sub_1BAA3D5D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA3D5FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 80);
  v7 = (char *)a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *a2 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v7, a1, v6);
  return swift_retain();
}

uint64_t sub_1BAA3D67C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  return swift_retain();
}

uint64_t _s8NewsFeed21FeedManagerLoadSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAA3D6E4 + 4 * byte_1BB8924AB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAA3D718 + 4 * byte_1BB8924A6[v4]))();
}

uint64_t sub_1BAA3D718(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA3D720(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA3D728);
  return result;
}

uint64_t sub_1BAA3D734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA3D73CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAA3D740(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA3D748(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAA3D754()
{
  JUMPOUT(0x1BCCE5B24);
}

void _s8NewsFeed18FormatGroupBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAA3D7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v18;
  char v19;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (v9 > 0xF)
  {
    sub_1BA7143C8(v28, v29, v8, v11, v10, a6, a7);
    sub_1BA739218(v27, v13, v7, v12, v25, v26, v9, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
    sub_1BA739218(v28, v29, v8, v11, v10, a6, a7, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
    sub_1BA739218(v27, v13, v7, v12, v25, v26, v9, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
    v19 = 0;
  }
  else
  {
    *(_QWORD *)(v14 - 144) = v28;
    *(_QWORD *)(v14 - 136) = v29;
    *(_QWORD *)(v14 - 128) = v8;
    *(_QWORD *)(v14 - 120) = v11;
    *(_QWORD *)(v14 - 112) = v10;
    *(_QWORD *)(v14 - 104) = a6;
    *(_BYTE *)(v14 - 96) = a7;
    v15 = v8;
    v24 = v10;
    sub_1BA739218(v27, v13, v7, v12, v25, v26, v9, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
    v23 = v15;
    sub_1BA739218(v28, v29, v15, v11, v24, a6, a7, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
    sub_1BA739218(v28, v29, v15, v11, v24, a6, a7, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
    sub_1BA739218(v27, v13, v7, v12, v25, v26, v9, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
    _s8NewsFeed21FormatHeadlineBindingV4TextO2eeoiySbAE_AEtFZ_0(v14 - 144);
    v19 = v18;
    sub_1BA739218(v28, v29, v23, v11, v24, a6, a7, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
    sub_1BA739218(v27, v13, v7, v12, v25, v26, v9, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
    sub_1BA739218(v27, v13, v7, v12, v25, v26, v9, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
    sub_1BA739218(v28, v29, v23, v11, v24, a6, a7, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
  }
  return v19 & 1;
}

unint64_t sub_1BAA3E3AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA3E3D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA3E3D0()
{
  unint64_t result;

  result = qword_1EF2ADC80;
  if (!qword_1EF2ADC80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Text, &type metadata for FormatGroupBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2ADC80);
  }
  return result;
}

unint64_t sub_1BAA3E414(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA622048();
  a1[2] = sub_1BA61FBAC();
  result = sub_1BAA3E448();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA3E448()
{
  unint64_t result;

  result = qword_1EF2ADC88;
  if (!qword_1EF2ADC88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Text, &type metadata for FormatGroupBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2ADC88);
  }
  return result;
}

uint64_t _s4TextOwxx_1(uint64_t a1)
{
  return sub_1BA739218(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48), (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
}

uint64_t _s4TextOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA739218(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s4TextOwca_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA739218(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(void))sub_1BA7143C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968180, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968170);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BA739218(v10, v11, v12, v13, v14, v15, v16, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
  return a1;
}

uint64_t _s4TextOwta_1(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BA739218(v4, v6, v5, v7, v8, v9, v11, (uint64_t (*)(void))sub_1BA6EF818, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA968240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA968124);
  return a1;
}

uint64_t sub_1BAA3E6B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 4;
}

uint64_t sub_1BAA3E6C4(uint64_t result)
{
  *(_BYTE *)(result + 48) &= 0xFu;
  return result;
}

uint64_t sub_1BAA3E6D4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = *(_BYTE *)(result + 48) & 7 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Text()
{
  return &type metadata for FormatGroupBinding.Text;
}

uint64_t FormatFontTrait.description.getter()
{
  return FormatFontTrait.rawValue.getter();
}

uint64_t sub_1BAA3E728(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB802140(*a1, *a2);
}

uint64_t sub_1BAA3E734()
{
  sub_1BB8745CC();
  FormatFontTrait.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAA3E798()
{
  FormatFontTrait.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA3E7E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatFontTrait.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAA3E80C()
{
  return FormatFontTrait.rawValue.getter();
}

uint64_t sub_1BAA3E844()
{
  return sub_1BB64A260();
}

uint64_t sub_1BAA3E850()
{
  return sub_1BB64AA70();
}

uint64_t sub_1BAA3E85C()
{
  return sub_1BB649A50();
}

uint64_t _s8NewsFeed15FormatFontTraitO1loiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FormatFontTrait.rawValue.getter();
  v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BAA3E904(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAA3E930();
  result = sub_1BA4DE00C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAA3E930()
{
  unint64_t result;

  result = qword_1EF2ADC90;
  if (!qword_1EF2ADC90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontTrait, &type metadata for FormatFontTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2ADC90);
  }
  return result;
}

unint64_t sub_1BAA3E974(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA3E998();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA3E998()
{
  unint64_t result;

  result = qword_1EF2ADC98;
  if (!qword_1EF2ADC98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontTrait, &type metadata for FormatFontTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2ADC98);
  }
  return result;
}

unint64_t sub_1BAA3E9DC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8341EC();
  a1[2] = sub_1BA8342B8();
  result = sub_1BA834230();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatFontTrait()
{
  return &type metadata for FormatFontTrait;
}

uint64_t FormatOptionsNodeStatementOption.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionsNodeStatementOption.throws.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FormatOptionsNodeStatementOption.throws.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormatOptionsNodeStatementOption.throws.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static FormatOptionsNodeStatementOption.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_1BB874398();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

unint64_t sub_1BAA3EAC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA3EAEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA3EAEC()
{
  unint64_t result;

  result = qword_1EF2ADCA0;
  if (!qword_1EF2ADCA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementOption, &type metadata for FormatOptionsNodeStatementOption);
    atomic_store(result, (unint64_t *)&qword_1EF2ADCA0);
  }
  return result;
}

unint64_t sub_1BAA3EB30(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAA3EB64();
  a1[2] = sub_1BAA3EBA8();
  result = sub_1BAA3EBEC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA3EB64()
{
  unint64_t result;

  result = qword_1ED3C2930;
  if (!qword_1ED3C2930)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementOption, &type metadata for FormatOptionsNodeStatementOption);
    atomic_store(result, (unint64_t *)&qword_1ED3C2930);
  }
  return result;
}

unint64_t sub_1BAA3EBA8()
{
  unint64_t result;

  result = qword_1ED3A2DA0;
  if (!qword_1ED3A2DA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementOption, &type metadata for FormatOptionsNodeStatementOption);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DA0);
  }
  return result;
}

unint64_t sub_1BAA3EBEC()
{
  unint64_t result;

  result = qword_1EF2ADCA8;
  if (!qword_1EF2ADCA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementOption, &type metadata for FormatOptionsNodeStatementOption);
    atomic_store(result, (unint64_t *)&qword_1EF2ADCA8);
  }
  return result;
}

uint64_t sub_1BAA3EC30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionsNodeStatementOption.init(from:)(a1, a2);
}

uint64_t sub_1BAA3EC44(_QWORD *a1)
{
  return FormatOptionsNodeStatementOption.encode(to:)(a1);
}

uint64_t sub_1BAA3EC58(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_1BB874398();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t sub_1BAA3ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  if (qword_1ED3BB4A8 != -1)
    swift_once();
  v4 = qword_1ED3B9688;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3D7F90(v2, v1, v4, v3 ^ 1u);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA3ED64@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16);
  return result;
}

_BYTE *sub_1BAA3ED70(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementOption()
{
  return &type metadata for FormatOptionsNodeStatementOption;
}

void sub_1BAA3ED8C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD *v37;
  int v38;
  uint64_t v39;

  v37 = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1E0C80A78](v4);
  v36[0] = (char *)v36 - v5;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - v7;
  v9 = type metadata accessor for FormatOption();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v36 - v14);
  v16 = *(_QWORD *)v2;
  v17 = *(_QWORD *)(v2 + 8);
  v38 = *(unsigned __int8 *)(v2 + 16);
  sub_1BA7E8004(v16, v17, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA98DC18((uint64_t)v8);
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    v18 = (void *)swift_allocError();
    *v19 = v16;
    v19[1] = v17;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    sub_1BA8569CC((uint64_t)v8, (uint64_t)v15);
    v21 = *v15;
    v20 = v15[1];
    v22 = v15[2];
    swift_bridgeObjectRetain();
    v23 = v22;
    v24 = (void *)v36[1];
    sub_1BA7EB598(a1, v23);
    if (!v24)
    {
      v26 = v39;
      *v12 = v21;
      v12[1] = v20;
      v12[2] = v26;
      v12[3] = 1;
      v27 = (char *)v12 + *(int *)(v9 + 28);
      v28 = type metadata accessor for FormatVersionRequirement(0);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
      v29(v27, 1, 1, v28);
      swift_retain();
      sub_1BA900B74((uint64_t)v12);
      v30 = v36[0];
      v29((char *)v36[0], 1, 1, v28);
      sub_1BA6EA07C();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      v32 = v15[1];
      *(_QWORD *)(inited + 32) = *v15;
      *(_QWORD *)(inited + 40) = v32;
      swift_bridgeObjectRetain();
      v33 = sub_1BA862444(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_1BA900B74((uint64_t)v15);
      v34 = v37;
      *v37 = v26;
      v34[1] = v33;
      v35 = type metadata accessor for FormatOptionsNodeStatementResult();
      sub_1BA8D81BC(v30, (uint64_t)v34 + *(int *)(v35 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
      return;
    }
    swift_bridgeObjectRelease();
    sub_1BA900B74((uint64_t)v15);
    v18 = v24;
  }
  if ((v38 & 1) != 0)
  {
    swift_willThrow();
  }
  else
  {
    v25 = type metadata accessor for FormatOptionsNodeStatementResult();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v37, 1, 1, v25);

  }
}

uint64_t FormatDerivedDataWarning.file.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA84AF70(v1 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file, a1);
}

uint64_t FormatDerivedDataWarning.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDerivedDataWarning.deinit()
{
  uint64_t v0;

  sub_1BAA3F140(v0 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BAA3F140(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatFile();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatDerivedDataWarning.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BAA3F140(v0 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAA3F1BC()
{
  return type metadata accessor for FormatDerivedDataWarning();
}

uint64_t type metadata accessor for FormatDerivedDataWarning()
{
  uint64_t result;

  result = qword_1EF2ADCD8;
  if (!qword_1EF2ADCD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAA3F200()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatFile();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FormatDerivedDataWarning()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatButtonNodeState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA3F2B4 + 4 * byte_1BB892C00[*v0]))(0x64656C6261736964, 0xE800000000000000);
}

uint64_t sub_1BAA3F2B4()
{
  return 0x64657375636F66;
}

uint64_t sub_1BAA3F2CC()
{
  return 0x6867696C68676968;
}

uint64_t sub_1BAA3F2EC()
{
  return 0x64657463656C6573;
}

void sub_1BAA3F300(char *a1)
{
  sub_1BB7F47D4(*a1);
}

void sub_1BAA3F30C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAA3F358()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAA3F3CC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAA3F408()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA3F468()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAA3F498 + 4 * byte_1BB892C10[*v0]))();
}

void sub_1BAA3F498(_QWORD *a1@<X8>)
{
  *a1 = 0x64657375636F66;
  a1[1] = 0xE700000000000000;
}

void sub_1BAA3F4B4(_QWORD *a1@<X8>)
{
  *a1 = 0x6867696C68676968;
  a1[1] = 0xEB00000000646574;
}

void sub_1BAA3F4D8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x64657463656C6573;
  a1[1] = v1;
}

void sub_1BAA3F4F8(unsigned __int8 *a1, char *a2)
{
  sub_1BB649E64(*a1, *a2);
}

void sub_1BAA3F504(char *a1)
{
  sub_1BB64A680(*a1);
}

void sub_1BAA3F510(unsigned __int8 *a1, char *a2)
{
  sub_1BB649670(*a1, *a2);
}

void _s8NewsFeed21FormatButtonNodeStateO1loiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BAA3F570@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BAA3F5D4 + 4 * byte_1BB892C18[a1]))(0x64657375636F66);
}

uint64_t sub_1BAA3F5D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64657375636F66 && v1 == 0xE700000000000000)
    v2 = 0;
  else
    v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

unint64_t sub_1BAA3F680(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAA3F6AC();
  result = sub_1BA4BDEB0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAA3F6AC()
{
  unint64_t result;

  result = qword_1EF2ADD68;
  if (!qword_1EF2ADD68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeState, &type metadata for FormatButtonNodeState);
    atomic_store(result, (unint64_t *)&qword_1EF2ADD68);
  }
  return result;
}

unint64_t sub_1BAA3F6F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA3F714();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA3F714()
{
  unint64_t result;

  result = qword_1EF2ADD70;
  if (!qword_1EF2ADD70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeState, &type metadata for FormatButtonNodeState);
    atomic_store(result, (unint64_t *)&qword_1EF2ADD70);
  }
  return result;
}

unint64_t sub_1BAA3F758(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82BBE0();
  a1[2] = sub_1BA82BCAC();
  result = sub_1BA82BC24();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatButtonNodeState()
{
  return &type metadata for FormatButtonNodeState;
}

ValueMetadata *type metadata accessor for FormatOptionSelector()
{
  return &type metadata for FormatOptionSelector;
}

uint64_t sub_1BAA3F7AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  if (a3)
  {
    LOBYTE(v18) = 0;
    v19 = 0;
    v20 = 0;
    sub_1BAA3FF44();
    swift_bridgeObjectRetain();
    sub_1BB8741AC();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return swift_bridgeObjectRelease();
    }
    v19 = a2;
    v20 = a3;
    v18 = xmmword_1BB87FC90;
    sub_1BA6462A8(0, v12, v13, v14);
    sub_1BA6B8708((unint64_t *)&qword_1ED39C9D0, (uint64_t)&protocol conformance descriptor for FormatValue<A>, v16, v17);
    sub_1BB8741AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v18) = 1;
    sub_1BAA3FF44();
    v19 = 0;
    v20 = 0;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BAA3F988(char *a1, char *a2)
{
  return sub_1BB7FB084(*a1, *a2);
}

uint64_t sub_1BAA3F994()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAA3FA10()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA3FA68()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAA3FAE0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAA3FB3C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x636974617473;
  if (*v1)
    v2 = 0x63696D616E7964;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAA3FB78()
{
  sub_1BAA4009C();
  return sub_1BB872D60();
}

uint64_t sub_1BAA3FBD4()
{
  sub_1BAA4009C();
  return sub_1BB872D0C();
}

_QWORD *sub_1BAA3FC20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1BAA3FC60(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1BAA3FC48(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BAA3F7AC(a1, *v1, v1[1]);
}

_QWORD *sub_1BAA3FC60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v22 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
    goto LABEL_12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BAA3FF00();
    v23 = 0;
    v24 = 0;
    sub_1BB8740D4();
    if ((v22 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v8 = 0;
    }
    else
    {
      sub_1BA6462A8(0, v14, v15, v16);
      v22 = xmmword_1BB87FC90;
      sub_1BA6B8708((unint64_t *)&qword_1ED3B34B8, (uint64_t)&protocol conformance descriptor for FormatValue<A>, v19, v20);
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v8 = v23;
    }
    goto LABEL_12;
  }
  v11 = sub_1BB8740EC();
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v13 = (_QWORD **)(v11 + 40);
  while (1)
  {
    v8 = *v13;
    if ((unint64_t)*v13 >= 4)
      break;
    v13 += 2;
    if (!--v12)
      goto LABEL_7;
  }
  v17 = (uint64_t)*(v13 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v8;
  *(_QWORD *)(v18 + 16) = &unk_1E7267EC8;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, (unint64_t)v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1BAA3FF00()
{
  unint64_t result;

  result = qword_1EF2ADD78;
  if (!qword_1EF2ADD78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB892F3C, &type metadata for FormatOptionSelector.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ADD78);
  }
  return result;
}

unint64_t sub_1BAA3FF44()
{
  unint64_t result;

  result = qword_1EF2ADD80;
  if (!qword_1EF2ADD80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB892F14, &type metadata for FormatOptionSelector.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ADD80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatOptionSelector.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA3FFD4 + 4 * byte_1BB892DF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA40008 + 4 * byte_1BB892DF0[v4]))();
}

uint64_t sub_1BAA40008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA40010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA40018);
  return result;
}

uint64_t sub_1BAA40024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA4002CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA40030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA40038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionSelector.CodingType()
{
  return &type metadata for FormatOptionSelector.CodingType;
}

unint64_t sub_1BAA40058()
{
  unint64_t result;

  result = qword_1EF2ADD88;
  if (!qword_1EF2ADD88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB892EEC, &type metadata for FormatOptionSelector.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ADD88);
  }
  return result;
}

unint64_t sub_1BAA4009C()
{
  unint64_t result;

  result = qword_1EF2ADD90;
  if (!qword_1EF2ADD90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB892E74, &type metadata for FormatOptionSelector.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ADD90);
  }
  return result;
}

uint64_t FormatBindingContent.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindingContent.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindingContent.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindingContent.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
  return sub_1BAA40194(v3, a1);
}

uint64_t sub_1BAA40194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA401DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindingContent.init(from:)(a1, a2);
}

uint64_t sub_1BAA401F0(_QWORD *a1)
{
  return FormatBindingContent.encode(to:)(a1);
}

uint64_t _s8NewsFeed20FormatBindingContentV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
  {
    v5 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v5 || (sub_1BB874398() & 1) != 0)
    {
      v6 = a1[5];
      v7 = a2[5];
      if (v6)
      {
        if (v7 && (a1[4] == a2[4] && v6 == v7 || (sub_1BB874398() & 1) != 0))
          goto LABEL_16;
      }
      else if (!v7)
      {
LABEL_16:
        v8 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        return static FormatContent.== infix(_:_:)((char *)a1 + v8, (char *)a2 + v8);
      }
    }
  }
  return 0;
}

uint64_t sub_1BAA402C8(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAA40360(&qword_1EF2ADD98, (uint64_t)&protocol conformance descriptor for FormatBindingContent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA402FC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAA40360(&qword_1EF2ADDA0, (uint64_t)&protocol conformance descriptor for FormatBindingContent);
  a1[2] = sub_1BAA40360(&qword_1EF2ADDA8, (uint64_t)&protocol conformance descriptor for FormatBindingContent);
  result = sub_1BAA40360(&qword_1EF2ADDB0, (uint64_t)&protocol conformance descriptor for FormatBindingContent);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAA40360(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatBindingContent();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatBindingContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  char *__dsta;
  char *__dst;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v38 = *a2;
    *a1 = *a2;
    v39 = v38 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = (int *)type metadata accessor for FormatContent(0);
    v13 = v12[5];
    __dsta = (char *)v9 + v13;
    v14 = &v10[v13];
    v15 = sub_1BB86C8B0();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(__dsta, v14, v15);
    v17 = v12[6];
    v18 = (_QWORD *)((char *)v9 + v17);
    v19 = &v10[v17];
    v20 = *((_QWORD *)v19 + 1);
    *v18 = *(_QWORD *)v19;
    v18[1] = v20;
    v21 = v12[7];
    v22 = (_QWORD *)((char *)v9 + v21);
    v23 = &v10[v21];
    v24 = *((_QWORD *)v23 + 1);
    *v22 = *(_QWORD *)v23;
    v22[1] = v24;
    v25 = v12[8];
    v26 = (_QWORD *)((char *)v9 + v25);
    v27 = &v10[v25];
    v28 = *((_QWORD *)v27 + 1);
    *v26 = *(_QWORD *)v27;
    v26[1] = v28;
    v29 = v12[9];
    v30 = (_QWORD *)((char *)v9 + v29);
    v31 = &v10[v29];
    v32 = *((_QWORD *)v31 + 1);
    *v30 = *(_QWORD *)v31;
    v30[1] = v32;
    v33 = v12[10];
    __dst = (char *)v9 + v33;
    v34 = &v10[v33];
    v35 = sub_1BB871E24();
    v36 = *(_QWORD *)(v35 - 8);
    v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v34, 1, v35))
    {
      sub_1BA6D940C(0);
      memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
    }
    *(_QWORD *)((char *)v9 + v12[11]) = *(_QWORD *)&v10[v12[11]];
    *(_QWORD *)((char *)v9 + v12[12]) = *(_QWORD *)&v10[v12[12]];
    *(_QWORD *)((char *)v9 + v12[13]) = *(_QWORD *)&v10[v12[13]];
    *(_QWORD *)((char *)v9 + v12[14]) = *(_QWORD *)&v10[v12[14]];
    *(_QWORD *)((char *)v9 + v12[15]) = *(_QWORD *)&v10[v12[15]];
    *(_QWORD *)((char *)v9 + v12[16]) = *(_QWORD *)&v10[v12[16]];
    *(_QWORD *)((char *)v9 + v12[17]) = *(_QWORD *)&v10[v12[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  return (uint64_t *)v39;
}

uint64_t destroy for FormatBindingContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for FormatContent(0);
  v6 = v4 + *(int *)(v5 + 20);
  v7 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v4 + *(int *)(v5 + 40);
  v9 = sub_1BB871E24();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatBindingContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  char *__dsta;
  char *__dst;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = (int *)type metadata accessor for FormatContent(0);
  v11 = v10[5];
  __dsta = (char *)v7 + v11;
  v12 = &v8[v11];
  v13 = sub_1BB86C8B0();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(__dsta, v12, v13);
  v15 = v10[6];
  v16 = (_QWORD *)((char *)v7 + v15);
  v17 = &v8[v15];
  v18 = *((_QWORD *)v17 + 1);
  *v16 = *(_QWORD *)v17;
  v16[1] = v18;
  v19 = v10[7];
  v20 = (_QWORD *)((char *)v7 + v19);
  v21 = &v8[v19];
  v22 = *((_QWORD *)v21 + 1);
  *v20 = *(_QWORD *)v21;
  v20[1] = v22;
  v23 = v10[8];
  v24 = (_QWORD *)((char *)v7 + v23);
  v25 = &v8[v23];
  v26 = *((_QWORD *)v25 + 1);
  *v24 = *(_QWORD *)v25;
  v24[1] = v26;
  v27 = v10[9];
  v28 = (_QWORD *)((char *)v7 + v27);
  v29 = &v8[v27];
  v30 = *((_QWORD *)v29 + 1);
  *v28 = *(_QWORD *)v29;
  v28[1] = v30;
  v31 = v10[10];
  __dst = (char *)v7 + v31;
  v32 = &v8[v31];
  v33 = sub_1BB871E24();
  v34 = *(_QWORD *)(v33 - 8);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37(v32, 1, v33))
  {
    sub_1BA6D940C(0);
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
  }
  *(_QWORD *)((char *)v7 + v10[11]) = *(_QWORD *)&v8[v10[11]];
  *(_QWORD *)((char *)v7 + v10[12]) = *(_QWORD *)&v8[v10[12]];
  *(_QWORD *)((char *)v7 + v10[13]) = *(_QWORD *)&v8[v10[13]];
  *(_QWORD *)((char *)v7 + v10[14]) = *(_QWORD *)&v8[v10[14]];
  *(_QWORD *)((char *)v7 + v10[15]) = *(_QWORD *)&v8[v10[15]];
  *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)&v8[v10[16]];
  *(_QWORD *)((char *)v7 + v10[17]) = *(_QWORD *)&v8[v10[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatBindingContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for FormatContent(0);
  v10 = v9[5];
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = v9[6];
  v15 = (_QWORD *)((char *)v7 + v14);
  v16 = &v8[v14];
  *v15 = *(_QWORD *)v16;
  v15[1] = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v9[7];
  v18 = (_QWORD *)((char *)v7 + v17);
  v19 = &v8[v17];
  *v18 = *(_QWORD *)v19;
  v18[1] = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v9[8];
  v21 = (_QWORD *)((char *)v7 + v20);
  v22 = &v8[v20];
  *v21 = *(_QWORD *)v22;
  v21[1] = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v9[9];
  v24 = (_QWORD *)((char *)v7 + v23);
  v25 = &v8[v23];
  *v24 = *(_QWORD *)v25;
  v24[1] = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = v9[10];
  v27 = (char *)v7 + v26;
  v28 = &v8[v26];
  v29 = sub_1BB871E24();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    sub_1BA6D940C(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_7:
  *(_QWORD *)((char *)v7 + v9[11]) = *(_QWORD *)&v8[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[12]) = *(_QWORD *)&v8[v9[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[13]) = *(_QWORD *)&v8[v9[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[14]) = *(_QWORD *)&v8[v9[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[15]) = *(_QWORD *)&v8[v9[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[16]) = *(_QWORD *)&v8[v9[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[17]) = *(_QWORD *)&v8[v9[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatBindingContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  v8 = (int *)type metadata accessor for FormatContent(0);
  v9 = v8[5];
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&v6[v8[6]] = *(_OWORD *)&v7[v8[6]];
  *(_OWORD *)&v6[v8[7]] = *(_OWORD *)&v7[v8[7]];
  *(_OWORD *)&v6[v8[8]] = *(_OWORD *)&v7[v8[8]];
  *(_OWORD *)&v6[v8[9]] = *(_OWORD *)&v7[v8[9]];
  v13 = v8[10];
  v14 = &v6[v13];
  v15 = &v7[v13];
  v16 = sub_1BB871E24();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1BA6D940C(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_QWORD *)&v6[v8[11]] = *(_QWORD *)&v7[v8[11]];
  *(_QWORD *)&v6[v8[12]] = *(_QWORD *)&v7[v8[12]];
  *(_QWORD *)&v6[v8[13]] = *(_QWORD *)&v7[v8[13]];
  *(_QWORD *)&v6[v8[14]] = *(_QWORD *)&v7[v8[14]];
  *(_QWORD *)&v6[v8[15]] = *(_QWORD *)&v7[v8[15]];
  *(_QWORD *)&v6[v8[16]] = *(_QWORD *)&v7[v8[16]];
  *(_QWORD *)&v6[v8[17]] = *(_QWORD *)&v7[v8[17]];
  return a1;
}

_QWORD *assignWithTake for FormatBindingContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)((char *)a2 + v9 + 8);
  *v10 = *(_QWORD *)((char *)a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v13 = (int *)type metadata accessor for FormatContent(0);
  v14 = v13[5];
  v15 = (char *)v10 + v14;
  v16 = &v11[v14];
  v17 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = v13[6];
  v19 = (_QWORD *)((char *)v10 + v18);
  v20 = &v11[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v13[7];
  v24 = (_QWORD *)((char *)v10 + v23);
  v25 = &v11[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = v13[8];
  v29 = (_QWORD *)((char *)v10 + v28);
  v30 = &v11[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = v13[9];
  v34 = (_QWORD *)((char *)v10 + v33);
  v35 = &v11[v33];
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = v13[10];
  v39 = (char *)v10 + v38;
  v40 = &v11[v38];
  v41 = sub_1BB871E24();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
    goto LABEL_6;
  }
  if (v45)
  {
LABEL_6:
    sub_1BA6D940C(0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_7:
  *(_QWORD *)((char *)v10 + v13[11]) = *(_QWORD *)&v11[v13[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v13[12]) = *(_QWORD *)&v11[v13[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v13[13]) = *(_QWORD *)&v11[v13[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v13[14]) = *(_QWORD *)&v11[v13[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v13[15]) = *(_QWORD *)&v11[v13[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v13[16]) = *(_QWORD *)&v11[v13[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v13[17]) = *(_QWORD *)&v11[v13[17]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindingContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA41158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatBindingContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA411E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAA41258(uint64_t a1)
{
  if (a1 < 0)
    swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for FormatStateMachineOutput(uint64_t *a1)
{
  return sub_1BA86DA90(*a1);
}

uint64_t *_s8NewsFeed24FormatStateMachineOutputOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1BAA41258(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for FormatStateMachineOutput(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1BAA41258(*a2);
  v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1BA86DA90(v6);
  return a1;
}

uint64_t *assignWithTake for FormatStateMachineOutput(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1BA86DA90(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatStateMachineOutput(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatStateMachineOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineOutput()
{
  return &type metadata for FormatStateMachineOutput;
}

uint64_t sub_1BAA41438(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  _QWORD *v24;
  uint64_t v25;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = (_QWORD *)result;
    v7 = *(_QWORD *)(*(_QWORD *)(result + 24) + 16);
    if (v7)
    {
      v23 = a4;
      v24 = (_QWORD *)result;
      v8 = swift_bridgeObjectRetain();
      v9 = 0;
      v25 = v8;
      while (1)
      {
        v11 = *(_QWORD *)(v8 + v9 + 32);
        v10 = *(_QWORD *)(v8 + v9 + 40);
        v12 = *(_BYTE *)(v8 + v9 + 48);
        v13 = *(_QWORD *)(v8 + v9 + 80);
        v14 = *(_QWORD *)(v8 + v9 + 88);
        v15 = *(_QWORD *)(v8 + v9 + 64);
        v16 = *(_QWORD *)(v8 + v9 + 72);
        v17 = *(_QWORD *)(v8 + v9 + 56);
        v29 = v11;
        v30 = v10;
        LOBYTE(v31) = v12;
        v32 = v17;
        v33 = v15;
        v34 = v16;
        v35 = v13;
        v36 = v14;
        v27[0] = v11;
        v27[1] = v10;
        v28 = v12;
        sub_1BA73B1CC(v11, v10, v12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA73B1CC(v11, v10, v12);
        v18 = a1(v27);
        sub_1BA73B1B8(v11, v10, v12);
        if ((v18 & 1) != 0)
          break;
        sub_1BA73B1B8(v11, v10, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 += 64;
        --v7;
        v8 = v25;
        if (!v7)
        {
          swift_bridgeObjectRelease();
          a4 = v23;
          v6 = v24;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      v23(&v32);
      swift_release();
      sub_1BA73B1B8(v11, v10, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
LABEL_7:
      v19 = v6[5];
      v21 = v6[6];
      v20 = v6[7];
      v22 = v6[8];
      v29 = v6[4];
      v30 = v19;
      v31 = v21;
      v32 = v20;
      v33 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a4(&v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BAA41654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(_QWORD *), uint64_t), _QWORD *);
  uint64_t result;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v8 = *v5;
  v9 = v5[1];
  v10 = v5[2];
  if (*v5 < 0)
  {
    v18 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = objc_msgSend(v18, sel_defaultCenter);
    v20 = (void *)sub_1BB872970();
    v21 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v8 & 0x7FFFFFFFFFFFFFFFLL;
    v22[3] = v9;
    v22[4] = v10;
    v22[5] = a3;
    v22[6] = a4;
    aBlock[4] = sub_1BAA41E30;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BAA41C14;
    aBlock[3] = &block_descriptor_14;
    v23 = _Block_copy(aBlock);
    sub_1BAA41258(v8);
    swift_retain();
    swift_release();
    v24 = objc_msgSend(v19, sel_addObserverForName_object_queue_usingBlock_, v20, 0, v21, v23);
    _Block_release(v23);

    v25 = type metadata accessor for FormatNotificationCenterObserver();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v24;
    a5[3] = v25;
    a5[4] = sub_1BAA41E40();
    result = sub_1BA86DA90(v8);
    *a5 = v26;
  }
  else
  {
    v13 = *(_QWORD *)(v8 + 16);
    v14 = swift_allocObject();
    swift_weakInit();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v14;
    v15[3] = a3;
    v15[4] = a4;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(_QWORD *), uint64_t), _QWORD *))(v13 + 72);
    sub_1BAA41258(v8);
    swift_retain();
    swift_retain();
    v16(a1, a2, sub_1BAA41ED8, v15);
    swift_release();
    swift_release();
    return sub_1BA86DA90(v8);
  }
  return result;
}

uint64_t sub_1BAA4190C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  __int128 v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[8];
  __int128 v31;
  __int128 v32;

  v8 = sub_1BB86BEE4();
  if (!v8)
  {
    v31 = 0u;
    v32 = 0u;
    return sub_1BA6EDA74((uint64_t)&v31);
  }
  v9 = v8;
  *(_QWORD *)&v22 = 1635017060;
  *((_QWORD *)&v22 + 1) = 0xE400000000000000;
  sub_1BB873C48();
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1BB4AB200((uint64_t)v30), (v11 & 1) != 0))
  {
    sub_1BA747A10(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BA9ECE7C((uint64_t)v30);
  if (!*((_QWORD *)&v32 + 1))
    return sub_1BA6EDA74((uint64_t)&v31);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v26 = v30[4];
    v27 = v30[5];
    v28 = v30[6];
    v29 = v30[7];
    v22 = v30[0];
    v23 = v30[1];
    v24 = v30[2];
    v25 = v30[3];
    if (a4)
    {
      if (v22 != __PAIR128__(a4, a3) && (sub_1BB874398() & 1) == 0)
        return sub_1BAA41EE4((uint64_t)&v22);
      v19 = *((_QWORD *)&v27 + 1);
      v20 = v28;
      v21 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a5(&v19);
      sub_1BAA41EE4((uint64_t)&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *((_QWORD *)&v27 + 1);
      v20 = v28;
      v21 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a5(&v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED39E3A8 != -1)
        swift_once();
      v13 = qword_1ED476410;
      sub_1BB86DF9C();
      v14 = v23;
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v13 + 16) = 0x8000000000000000;
      sub_1BB4BDCEC(v17, v18, v14, *((uint64_t *)&v14 + 1), isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v13 + 16) = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      sub_1BAA41EE4((uint64_t)&v22);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAA41C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1BB86BEF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1BB86BECC();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BAA41CB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  type metadata accessor for FormatLayoutViewToken();
  swift_unknownObjectRetain();
  v0 = swift_dynamicCastClass();
  if (!v0)
    return swift_unknownObjectRelease();
  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatLayoutViewToken_children);
  swift_beginAccess();
  v2 = swift_unknownObjectRetain();
  MEMORY[0x1BCCE36AC](v2);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BAA41D98()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatNotificationCenterObserver()
{
  return objc_opt_self();
}

uint64_t sub_1BAA41DDC()
{
  return sub_1BAA41CB8();
}

uint64_t sub_1BAA41DFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA41E30(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA4190C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40));
}

unint64_t sub_1BAA41E40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E848;
  if (!qword_1ED39E848)
  {
    v1 = type metadata accessor for FormatNotificationCenterObserver();
    result = MEMORY[0x1BCCE5B24](&unk_1BB893110, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E848);
  }
  return result;
}

uint64_t sub_1BAA41E88()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAA41EAC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA41ED8(uint64_t (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_1BAA41438(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24));
}

uint64_t sub_1BAA41EE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C1F54(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BAA41FA0()
{
  qword_1EF3D0508 = 0x4064000000000000;
}

char *sub_1BAA41FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  objc_super v81;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_cursor] = 0;
  v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer;
  v9 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v10 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v9, sel_init);
  v11 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel;
  *(_QWORD *)&v10[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView;
  *(_QWORD *)&v10[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel;
  *(_QWORD *)&v10[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel;
  *(_QWORD *)&v10[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView;
  *(_QWORD *)&v10[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer;
  *(_QWORD *)&v10[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);

  if (a3)
  {
    v19 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  v81.receiver = v10;
  v81.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v81, sel_initWithStyle_reuseIdentifier_, a1, v19, a2);

  v21 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView;
  v22 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView];
  v23 = (void *)objc_opt_self();
  v24 = v20;
  v25 = v22;
  v26 = objc_msgSend(v23, sel_systemYellowColor);
  v27 = objc_msgSend(v26, sel_colorWithAlphaComponent_, 0.3);

  objc_msgSend(v25, sel_setBackgroundColor_, v27);
  v28 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v28, sel_addSubview_, *(_QWORD *)&v20[v21]);

  v29 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer;
  v30 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer];
  objc_msgSend(v30, sel_setLineWidth_, 1.0);
  sub_1BA65E330();
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BB8856E0;
  sub_1BA78DE28();
  v32 = v30;
  *(_QWORD *)(v31 + 32) = sub_1BB8738A0();
  sub_1BB872DCC();
  v33 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_setLineDashPattern_, v33);

  v34 = *(id *)&v24[v29];
  v35 = objc_msgSend(v23, sel_lightGrayColor);
  v36 = objc_msgSend(v35, sel_CGColor);

  objc_msgSend(v34, sel_setStrokeColor_, v36);
  v37 = *(id *)&v24[v29];
  v38 = objc_msgSend(v23, sel_clearColor);
  v39 = objc_msgSend(v38, (SEL)&selRef_traitCollection);

  objc_msgSend(v37, sel_setFillColor_, v39);
  v40 = objc_msgSend(v24, sel_contentView);
  v41 = objc_msgSend(v40, sel_layer);

  objc_msgSend(v41, sel_addSublayer_, *(_QWORD *)&v24[v29]);
  v42 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel;
  v43 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel];
  v44 = (void *)objc_opt_self();
  v45 = v43;
  v46 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v45, sel_setFont_, v46);

  v47 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v47, sel_addSubview_, *(_QWORD *)&v24[v42]);

  v48 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel;
  v49 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel];
  v50 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v49, sel_setFont_, v50);

  v51 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v51, sel_addSubview_, *(_QWORD *)&v24[v48]);

  v52 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel;
  v53 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel];
  v54 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v53, sel_setFont_, v54);

  v55 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v55, sel_addSubview_, *(_QWORD *)&v24[v52]);

  v56 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel;
  v57 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel];
  v58 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v57, sel_setFont_, v58);

  v59 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v59, sel_addSubview_, *(_QWORD *)&v24[v56]);

  v60 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel;
  v61 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel];
  v62 = objc_msgSend(v44, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v61, sel_setFont_, v62);

  v63 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v63, sel_addSubview_, *(_QWORD *)&v24[v60]);

  v64 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView;
  v65 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView];
  v66 = objc_msgSend(v23, sel_systemYellowColor);
  objc_msgSend(v65, sel_setBackgroundColor_, v66);

  v67 = *(void **)&v24[v64];
  objc_msgSend(v67, sel_setFrame_, 0.0, 0.0, 4.0, 4.0);
  v68 = objc_msgSend(v67, sel_layer);
  objc_msgSend(v68, sel_setCornerRadius_, 2.0);

  v69 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v69, sel_addSubview_, *(_QWORD *)&v24[v64]);

  v70 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer;
  v71 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer];
  objc_msgSend(v71, sel_setLineWidth_, 1.0);
  v72 = v71;
  v73 = objc_msgSend(v23, sel_clearColor);
  v74 = objc_msgSend(v73, sel_CGColor);

  objc_msgSend(v72, sel_setFillColor_, v74);
  v75 = *(void **)&v24[v70];
  objc_msgSend(v75, sel_setLineJoin_, *MEMORY[0x1E0CD3030]);
  objc_msgSend(v75, sel_setLineCap_, *MEMORY[0x1E0CD3010]);
  v76 = objc_msgSend(v24, sel_contentView);
  v77 = objc_msgSend(v76, sel_layer);

  v78 = *(id *)&v24[v70];
  objc_msgSend(v77, sel_addSublayer_, v78);

  return v24;
}

id sub_1BAA428FC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id result;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  double Width;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  double Height;
  double v32;
  double v33;
  void *v34;
  void *v35;
  char *v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  void *v43;
  CGFloat v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void *v61;
  double MaxX;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double MinY;
  id v69;
  id v70;
  void *v71;
  double MinX;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double MaxY;
  id v79;
  void *v80;
  void *v81;
  char *v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  void *v85;
  CGFloat v86;
  CGFloat v87;
  double v88;
  double v89;
  double v90;
  void *v91;
  void *v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  double v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  objc_super v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB86D9E4();
  v105 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v107 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1BB86D7F8();
  v104 = *(void (**)(char *, uint64_t))(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v106 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86DBE8();
  v102 = *(_QWORD *)(v5 - 8);
  v103 = v5;
  MEMORY[0x1E0C80A78](v5);
  v101 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86D7BC();
  v99 = *(_QWORD *)(v7 - 8);
  v100 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86D84C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86DA08();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112.receiver = v0;
  v112.super_class = ObjectType;
  result = objc_msgSendSuper2(&v112, sel_layoutSubviews, v16);
  v20 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_cursor];
  if (v20)
  {
    v108 = v2;
    v98 = v0;
    v21 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel];
    v110 = 0x203A73736150;
    v111 = 0xE600000000000000;
    swift_retain();
    sub_1BB86DAB0();
    sub_1BB86D9FC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    sub_1BA4A2870(&qword_1EF2ADE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5F40], MEMORY[0x1E0DB5F48]);
    sub_1BB87420C();
    sub_1BB872AFC(v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v23 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setText_, v23);

    objc_msgSend(v21, sel_sizeToFit);
    objc_msgSend(v21, sel_frame);
    Width = CGRectGetWidth(v113);
    objc_msgSend(v21, sel_frame);
    objc_msgSend(v21, sel_setFrame_, 16.0, 8.0, Width, CGRectGetHeight(v114));
    v25 = v98;
    v26 = *(void **)&v98[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel];
    v110 = 0x676E697A69736552;
    v111 = 0xEA0000000000203ALL;
    v27 = v20;
    sub_1BB86DAE0();
    sub_1BA4A2870(&qword_1EF2ADE38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E90], MEMORY[0x1E0DB5E98]);
    v28 = v100;
    sub_1BB87420C();
    sub_1BB872AFC(v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v9, v28);
    v30 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_setText_, v30);

    objc_msgSend(v26, sel_sizeToFit);
    objc_msgSend(v25, sel_bounds);
    Height = CGRectGetHeight(v115);
    objc_msgSend(v26, sel_frame);
    v32 = Height - CGRectGetHeight(v116) + -8.0;
    objc_msgSend(v26, sel_frame);
    v33 = CGRectGetWidth(v117);
    objc_msgSend(v26, sel_frame);
    objc_msgSend(v26, sel_setFrame_, 16.0, v32, v33, CGRectGetHeight(v118));
    v34 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel];
    sub_1BB86DABC();
    sub_1BB86DAC8();
    sub_1BB873594();
    sub_1BB6ED5D4();
    v35 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setText_, v35);

    objc_msgSend(v34, sel_sizeToFit);
    v36 = v25;
    v37 = objc_msgSend(v25, sel_contentView);
    objc_msgSend(v37, sel_center);
    v39 = v38;
    v41 = v40;

    objc_msgSend(v34, sel_setCenter_, v39, v41);
    objc_msgSend(v25, sel_bounds);
    v42 = CGRectGetWidth(v119) * 0.5;
    v43 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer];
    objc_msgSend(v25, sel_bounds);
    v44 = CGRectGetWidth(v120) * 0.5 - v42 * 0.5;
    objc_msgSend(v25, sel_bounds);
    objc_msgSend(v43, sel_setFrame_, v44, CGRectGetHeight(v121) * 0.5 + -40.0, v42, 80.0);
    v45 = v43;
    objc_msgSend(v43, sel_bounds);
    v50 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v46, v47, v48, v49);
    v51 = objc_msgSend(v50, sel_CGPath);

    objc_msgSend(v45, sel_setPath_, v51);
    sub_1BB86DABC();
    CGRectGetWidth(v122);
    v52 = v27;
    if ((sub_1BB86DC30() & 1) == 0)
    {
      sub_1BB86DABC();
      CGRectGetWidth(v123);
    }
    sub_1BB86DABC();
    CGRectGetHeight(v124);
    if ((sub_1BB86DC30() & 1) == 0)
    {
      sub_1BB86DABC();
      CGRectGetHeight(v125);
    }
    sub_1BB86DA74();
    if ((sub_1BB86DC30() & 1) == 0)
      sub_1BB86DA74();
    sub_1BB86DA74();
    if ((sub_1BB86DC30() & 1) == 0)
      sub_1BB86DA74();
    v53 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView];
    objc_msgSend(v45, sel_frame);
    objc_msgSend(v53, (SEL)&selRef_readingList_didAddArticles_removeArticles_eventInitiationLevel_);
    v54 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer];
    v55 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
    v56 = objc_msgSend(v55, sel_CGColor);

    objc_msgSend(v54, sel_setStrokeColor_, v56);
    v57 = v101;
    sub_1BB86DAEC();
    v59 = v102;
    v58 = v103;
    v60 = (*(uint64_t (**)(char *, uint64_t))(v102 + 88))(v57, v103);
    if (v60 == *MEMORY[0x1E0DB6490])
    {
      v61 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView];
      objc_msgSend(v53, sel_frame);
      MaxX = CGRectGetMaxX(v126);
      objc_msgSend(v53, sel_frame);
      objc_msgSend(v61, sel_setCenter_, MaxX, CGRectGetMinY(v127));
      objc_msgSend(v61, sel_center);
      v64 = v63;
      v66 = v65;
      objc_msgSend(v45, sel_frame);
      v67 = CGRectGetMaxX(v128);
      objc_msgSend(v45, sel_frame);
      MinY = CGRectGetMinY(v129);
      v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
      objc_msgSend(v69, sel_moveToPoint_, v64, v66);
      objc_msgSend(v69, sel_addLineToPoint_, v67, MinY);
      sub_1BAA50618(v69, v64, v66, v67, MinY);
      v70 = objc_msgSend(v69, sel_CGPath);
    }
    else
    {
      if (v60 != *MEMORY[0x1E0DB6498])
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v58);
        goto LABEL_16;
      }
      v71 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView];
      objc_msgSend(v53, sel_frame);
      MinX = CGRectGetMinX(v130);
      objc_msgSend(v53, sel_frame);
      objc_msgSend(v71, sel_setCenter_, MinX, CGRectGetMaxY(v131));
      objc_msgSend(v71, sel_center);
      v74 = v73;
      v76 = v75;
      objc_msgSend(v45, sel_frame);
      v77 = CGRectGetMinX(v132);
      objc_msgSend(v45, sel_frame);
      MaxY = CGRectGetMaxY(v133);
      v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
      objc_msgSend(v69, sel_moveToPoint_, v74, v76);
      objc_msgSend(v69, sel_addLineToPoint_, v77, MaxY);
      sub_1BAA50618(v69, v74, v76, v77, MaxY);
      v70 = objc_msgSend(v69, sel_CGPath);
    }
    v79 = v70;

    objc_msgSend(v54, sel_setPath_, v79);
LABEL_16:
    v80 = v45;
    v81 = *(void **)&v36[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel];
    v82 = v106;
    sub_1BB86DA98();
    v83 = v107;
    sub_1BB86D7E0();
    v84 = (void (*)(char *, uint64_t))*((_QWORD *)v104 + 1);
    v103 = v52;
    v104 = v84;
    v84(v82, v109);
    sub_1BB86D9D8();
    v105 = *(_QWORD *)(v105 + 8);
    ((void (*)(char *, uint64_t))v105)(v83, v108);
    v85 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v81, sel_setText_, v85);

    objc_msgSend(v81, sel_sizeToFit);
    objc_msgSend(v36, sel_bounds);
    v86 = CGRectGetWidth(v134) * 0.5;
    objc_msgSend(v81, sel_bounds);
    v87 = v86 - CGRectGetWidth(v135) * 0.5;
    objc_msgSend(v80, sel_frame);
    v88 = CGRectGetMinY(v136);
    objc_msgSend(v81, sel_bounds);
    v89 = v88 - CGRectGetHeight(v137) + -4.0;
    objc_msgSend(v81, sel_bounds);
    v90 = CGRectGetWidth(v138);
    objc_msgSend(v81, sel_bounds);
    objc_msgSend(v81, sel_setFrame_, v87, v89, v90, CGRectGetHeight(v139));
    v91 = *(void **)&v36[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel];
    sub_1BB86DA98();
    sub_1BB86D7EC();
    v104(v82, v109);
    sub_1BB86D9D8();
    ((void (*)(char *, uint64_t))v105)(v83, v108);
    v92 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v91, sel_setText_, v92);

    objc_msgSend(v91, sel_sizeToFit);
    objc_msgSend(v80, sel_frame);
    v93 = CGRectGetMaxX(v140) + 4.0;
    objc_msgSend(v36, sel_bounds);
    v94 = CGRectGetHeight(v141) * 0.5;
    objc_msgSend(v91, sel_bounds);
    v95 = v94 - CGRectGetHeight(v142) * 0.5;
    objc_msgSend(v91, sel_bounds);
    v96 = CGRectGetWidth(v143);
    objc_msgSend(v91, sel_bounds);
    objc_msgSend(v91, sel_setFrame_, v93, v95, v96, CGRectGetHeight(v144));
    return (id)swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatInspectorCursorCell()
{
  return objc_opt_self();
}

void sub_1BAA43690()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_cursor] = 0;
  v1 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v2 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_frameLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_widthSizingConstraintLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_heightSizingConstraintLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_filledAreaView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_passLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_resizingLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_positionView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInspectorCursorCell_directionLayer;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FormatFrameNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFrameNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatFrameNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatFrameNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatFrameNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatFrameNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatFrameNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatFrameNode.__allocating_init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)swift_allocObject();
  v9 = *a3;
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v9;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

_QWORD *FormatFrameNode.init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;

  v8 = *a3;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = v8;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatFrameNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatFrameNode.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAA43B84(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAA43C5C(&qword_1EF2ADE40, (uint64_t)&protocol conformance descriptor for FormatFrameNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA43BB8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAA43C5C(&qword_1ED3BD508, (uint64_t)&protocol conformance descriptor for FormatFrameNode);
  a1[2] = sub_1BAA43C5C(&qword_1ED39FA30, (uint64_t)&protocol conformance descriptor for FormatFrameNode);
  result = sub_1BAA43C5C(&qword_1EF2ADE48, (uint64_t)&protocol conformance descriptor for FormatFrameNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAA43C1C(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed15FormatFrameNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BAA43C28(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAA43C5C(&qword_1EF2ADE50, (uint64_t)&protocol conformance descriptor for FormatFrameNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA43C5C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatFrameNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAA43C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v17 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v19 = *(_QWORD *)(a4 + 16);
  v18 = *(_QWORD *)(a4 + 24);
  v20 = *(_QWORD *)(v17 + 40);
  if (v20)
  {
    v28 = *(_QWORD *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v21);
    sub_1BB872AFC(v22);
    swift_bridgeObjectRelease();
    v19 = v28;
    v18 = v20;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v23 = swift_allocObject();
  v25 = *(_QWORD *)(a4 + 16);
  v24 = *(_QWORD *)(a4 + 24);
  type metadata accessor for FormatFrameNodeLayoutAttributes();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_QWORD *)(v26 + 32) = v19;
  *(_QWORD *)(v26 + 40) = v18;
  *(_QWORD *)(v26 + 48) = v25;
  *(_QWORD *)(v26 + 56) = v24;
  *(double *)(v26 + 64) = a6;
  *(double *)(v26 + 72) = a7;
  *(double *)(v26 + 80) = a8;
  *(double *)(v26 + 88) = a9;
  *(_QWORD *)(v23 + 16) = v26;
  *a5 = v23 | 0x4000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA43DF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA43E44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatFrameNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatFrameNode.__allocating_init(identifier:size:adjustments:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BAA43EA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA43EC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for FormatSlotDefinitionItemSet();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, qword_1EF2ADE58, v5);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - v16;
  v18 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  v19 = *(int *)(v18 + 20);
  v32 = a1;
  sub_1BAA44168(a1 + v19, (uint64_t)v17);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v21 = v2;
  LODWORD(v2) = v20(v17, 1, v2);
  sub_1BAA441BC((uint64_t)v17);
  if ((_DWORD)v2 == 1)
  {
    v29 = v11;
    v22 = (uint64_t)v30;
    v23 = v31;
    sub_1BAA44168(v32 + *(int *)(v18 + 24), (uint64_t)v14);
    if (v20(v14, 1, v21) == 1)
    {
      return sub_1BAA441BC((uint64_t)v14);
    }
    else
    {
      sub_1BA8C88F0((uint64_t)v14, v22);
      v26 = v23 + *(int *)(type metadata accessor for FormatDerivedDataBindingItemResult() + 20);
      sub_1BAA44244(v22, (uint64_t)v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v21);
      v27 = (uint64_t)v29;
      v28 = v33;
      sub_1BB41F6DC(v26, (uint64_t)v8, (uint64_t)v29);
      sub_1BAA441BC((uint64_t)v8);
      result = sub_1BAA44288(v22);
      if (!v28)
        return sub_1BAA442C4(v27, v26);
    }
  }
  else
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    *(_BYTE *)v25 = 6;
    *(_QWORD *)(v25 + 8) = 0xD00000000000002FLL;
    *(_QWORD *)(v25 + 16) = 0x80000001BB9680E0;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BAA44168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA441BC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatDerivedDataBindingItemResult()
{
  uint64_t result;

  result = qword_1EF2ADEB8;
  if (!qword_1EF2ADEB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAA44244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA44288(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA442C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1BAA44318(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7 >= 0xF)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for FormatSlotDefinitionItemSet();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v10 = *v11;
      v15 = v11[2];
      v10[1] = v11[1];
      v10[2] = v15;
      v16 = v11[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16)
      {
        v17 = v11[4];
        v10[3] = v16;
        v10[4] = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)(v11 + 3);
      }
      v18 = *(int *)(v12 + 36);
      v19 = (char *)v10 + v18;
      v20 = (char *)v11 + v18;
      v21 = sub_1BB86E710();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_1BAA44504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 8) >= 0xFuLL)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v7 = v4 + *(int *)(v5 + 36);
    v8 = sub_1BB86E710();
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

_QWORD *sub_1BAA445DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  if (v6 >= 0xF)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v13 = v9[2];
    v8[1] = v9[1];
    v8[2] = v13;
    v14 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14)
    {
      v15 = v9[4];
      v8[3] = v14;
      v8[4] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    }
    v16 = *(int *)(v10 + 36);
    v17 = (char *)v8 + v16;
    v18 = (char *)v9 + v16;
    v19 = sub_1BB86E710();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

_QWORD *sub_1BAA4479C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;

  v6 = a2[1];
  if (a1[1] < 0xFuLL)
  {
    if (v6 >= 0xF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 < 0xF)
  {
    sub_1BA905D68((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288(v8);
      goto LABEL_14;
    }
    *(_DWORD *)v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *((_DWORD *)v9 + 1);
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *((_QWORD *)v9 + 3);
    if (*(_QWORD *)(v8 + 24))
    {
      if (v20)
      {
        *(_QWORD *)(v8 + 24) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_29:
        v28 = *(int *)(v10 + 36);
        v29 = (void *)(v8 + v28);
        v30 = &v9[v28];
        v31 = sub_1BB86E710();
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
        v34 = v33(v29, 1, v31);
        v35 = v33(v30, 1, v31);
        if (v34)
        {
          if (!v35)
          {
            (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
            return a1;
          }
        }
        else
        {
          if (!v35)
          {
            (*(void (**)(void *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v17 = *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64);
        v18 = v29;
        v19 = v30;
        goto LABEL_15;
      }
      sub_1BAA44B5C(v8 + 24);
    }
    else if (v20)
    {
      *(_QWORD *)(v8 + 24) = v20;
      *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    goto LABEL_29;
  }
  if (v14)
  {
LABEL_14:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
    v18 = (void *)v8;
    v19 = v9;
LABEL_15:
    memcpy(v18, v19, v17);
    return a1;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *((_DWORD *)v9 + 1);
  *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
  *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(_QWORD *)(v8 + 24) = v15;
    *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  }
  v21 = *(int *)(v10 + 36);
  v22 = (void *)(v8 + v21);
  v23 = &v9[v21];
  v24 = sub_1BB86E710();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BAA44B5C(uint64_t a1)
{
  destroy for FormatSizeEquation();
  return a1;
}

_OWORD *sub_1BAA44B90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for FormatSlotDefinitionItemSet();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    *(_OWORD *)(v5 + 1) = *(_OWORD *)(v6 + 1);
    *(_OWORD *)(v5 + 3) = *(_OWORD *)(v6 + 3);
    v10 = *(int *)(v7 + 36);
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = sub_1BB86E710();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1BAA44CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;

  if (*(_QWORD *)(a1 + 8) < 0xFuLL)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 < 0xF)
  {
    sub_1BA905D68(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288((uint64_t)v8);
      goto LABEL_12;
    }
    *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_bridgeObjectRelease();
    v25 = v9[3];
    if (v8[3])
    {
      if (v25)
      {
        v8[3] = v25;
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        swift_bridgeObjectRelease();
LABEL_22:
        v27 = *(int *)(v10 + 36);
        v28 = (char *)v8 + v27;
        v29 = (char *)v9 + v27;
        v30 = sub_1BB86E710();
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
        v33 = v32(v28, 1, v30);
        v34 = v32(v29, 1, v30);
        if (v33)
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
            return a1;
          }
        }
        else
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v22 = *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64);
        v23 = v28;
        v24 = v29;
        goto LABEL_13;
      }
      sub_1BAA44B5C((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    goto LABEL_22;
  }
  if (v14)
  {
LABEL_12:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
    v23 = (char *)v8;
    v24 = (char *)v9;
LABEL_13:
    memcpy(v23, v24, v22);
    return a1;
  }
  *v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  v15 = *(int *)(v10 + 36);
  v16 = (char *)v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_1BB86E710();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BAA44FF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA44FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483632)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 15;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_1BAA45094()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA450A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483632)
  {
    *(_QWORD *)(result + 8) = (a2 + 14);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1BAA45124()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t static CoverIssueViewLayout.make18ColumnCatalogLayout(context:factories:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86DA38();
  v5 = MEMORY[0x1E0C80A78](v4);
  v10 = a1;
  v11 = a2;
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB6208], v5);
  sub_1BAA46860(0, (unint64_t *)&qword_1ED39C2F0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  return sub_1BB86DB34();
}

void sub_1BAA45270(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  id v20;
  double v21;
  uint64_t (*v22)(void);
  _BYTE v23[16];
  _QWORD *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  id v28;
  double v29;
  uint64_t v30;
  CGRect v31;

  sub_1BAA46998(0, &qword_1ED39C300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = &v23[-v9];
  v11 = a2[40];
  v12 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v11);
  v13 = (*(double (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  v14 = a2[40];
  v15 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v14);
  v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
  v17 = v13 + v16 + v16;
  v18 = (void *)sub_1BAA466F8((uint64_t)a2);
  if ((a2[7] & 4) != 0)
    v19 = 0.0;
  else
    v19 = 20.0;
  v20 = v18;
  sub_1BB87363C();
  objc_msgSend(v20, sel_boundingRectWithSize_options_context_, 35, 0);
  v21 = v19 + v17 + 20.0 + CGRectGetWidth(v31) + 10.0;
  v30 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB6410], v7);
  v24 = a2;
  v25 = a3;
  v26 = v21;
  v27 = 0x4024000000000000;
  v28 = v20;
  v29 = v19;
  v22 = MEMORY[0x1E0DB5DD0];
  sub_1BAA46860(0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAA468DC(&qword_1ED39C2B0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))v22, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);

}

void sub_1BAA45488(uint64_t a1)
{
  uint64_t v1;

  sub_1BAA45270(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAA45490(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v20)(uint64_t, _QWORD *);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  void (*v34)(uint64_t *, _QWORD, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t *, _QWORD, uint64_t);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  _QWORD *v51;

  v45 = a4;
  v42 = a2;
  v43 = a3;
  sub_1BAA46998(0, &qword_1ED39C300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v38 - v15);
  v51 = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0x4024000000000000;
  *v16 = v17;
  v19 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104);
  v44 = *MEMORY[0x1E0DB63F0];
  v18 = v44;
  v19(v16, v44, v13);
  v39 = v19;
  v20 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v22 = v21;
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v20, MEMORY[0x1E0DB5A18]);
  v41 = v22;
  sub_1BB86D4EC();
  v23 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v23(v16, v13);
  sub_1BB29A360(a2, v43, a1);
  v51 = a1;
  v40 = a1;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0x4030000000000000;
  *v16 = v24;
  v19(v16, v18, v13);
  sub_1BB86D4EC();
  v23(v16, v13);
  v51 = a1;
  sub_1BA71C838();
  v26 = v25;
  v27 = swift_allocBox();
  v29 = v28;
  v30 = v28 + *(int *)(v26 + 48);
  v31 = *MEMORY[0x1E0DB5F98];
  v32 = sub_1BB86D894();
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104);
  v33(v29, v31, v32);
  v33(v30, *MEMORY[0x1E0DB5FB8], v32);
  *v16 = v27;
  v34 = v39;
  v39(v16, *MEMORY[0x1E0DB63D0], v13);
  v46 = a5;
  v47 = v42;
  v48 = a6;
  v49 = v45;
  v50 = a7;
  sub_1BB86D498();
  v23(v16, v13);
  v35 = v40;
  v51 = v40;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = 0x404C000000000000;
  *v16 = v36;
  v34(v16, v44, v13);
  sub_1BB86D4EC();
  v23(v16, v13);
  v51 = v35;
  v34(v16, *MEMORY[0x1E0DB63C0], v13);
  sub_1BB86D540();
  return ((uint64_t (*)(uint64_t *, uint64_t))v23)(v16, v13);
}

uint64_t sub_1BAA45830(uint64_t a1, _QWORD *a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  void (*v33)(uint64_t *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  _QWORD *v53;
  uint64_t v54;

  v49 = a1;
  v50 = a3;
  sub_1BAA46998(0, &qword_1ED39C300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v45 - v12);
  v54 = a1;
  sub_1BA71C838();
  v15 = v14;
  v46 = swift_allocBox();
  v17 = v16;
  v18 = (uint64_t *)((char *)v16 + *(int *)(v15 + 48));
  v19 = sub_1BB86D894();
  v20 = swift_allocBox();
  v22 = v21;
  v23 = swift_allocObject();
  *(double *)(v23 + 16) = a4;
  *v22 = v23;
  v24 = *MEMORY[0x1E0DB5FA0];
  v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
  v25(v22, v24, v19);
  *v17 = v20;
  v25(v17, *MEMORY[0x1E0DB5FA8], v19);
  v26 = swift_allocObject();
  v28 = a2[40];
  v27 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v28);
  *(double *)(v26 + 16) = (*(double (**)(uint64_t, uint64_t))(v27 + 24))(v28, v27);
  *v18 = v26;
  v25(v18, v24, v19);
  v29 = v47;
  *v13 = v46;
  v30 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v29 + 104);
  v31 = v48;
  v30(v13, *MEMORY[0x1E0DB63D0], v48);
  v53 = a2;
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v32, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  v33 = *(void (**)(uint64_t *, uint64_t))(v29 + 8);
  v33(v13, v31);
  v34 = v49;
  v54 = v49;
  v35 = swift_allocObject();
  *(double *)(v35 + 16) = a5;
  *v13 = v35;
  v30(v13, *MEMORY[0x1E0DB63E8], v31);
  sub_1BB86D4EC();
  v33(v13, v31);
  v54 = v34;
  v30(v13, *MEMORY[0x1E0DB6410], v31);
  sub_1BAA46934();
  sub_1BAA46998(0, &qword_1ED39C298, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v37 = v36;
  v38 = *(_QWORD *)(v36 - 8);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
  v41 = v40 + v39;
  v42 = *MEMORY[0x1E0DB5C58];
  sub_1BAA46998(0, &qword_1ED39C288, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v38 + 104))(v41, *MEMORY[0x1E0DB5C68], v37);
  v51 = v50;
  v52 = a6;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v13, v31);
}

uint64_t sub_1BAA45C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  id v27;
  _QWORD v28[2];

  sub_1BAA46998(0, &qword_1ED39C300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v28 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 336);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    sub_1BAA46934();
    sub_1BAA46998(0, &qword_1ED39C298, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BB87CE70;
    v23 = v22 + v21;
    v24 = *MEMORY[0x1E0DB5C48];
    sub_1BAA46998(0, &qword_1ED39C288, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E0DB5C68], v19);
    v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v26, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v27 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA45F0C(uint64_t a1, void *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t, uint64_t);
  void (*v27)(unint64_t, _QWORD, uint64_t);
  _QWORD *v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  id v30;
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t *, uint64_t);
  _QWORD v35[2];
  id v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  void (*v41)(uint64_t *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;

  v36 = a2;
  v42 = a1;
  sub_1BAA46998(0, &qword_1ED39C300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v39 = v8;
  v9 = v8;
  MEMORY[0x1E0C80A78](v6);
  v11 = (_QWORD *)((char *)v35 - v10);
  v43 = a1;
  KeyPath = swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  v37 = v11;
  *v11 = v12;
  v13 = *MEMORY[0x1E0DB6340];
  v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v41(v11, v13, v7);
  sub_1BAA46934();
  sub_1BAA46998(0, &qword_1ED39C298, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  v35[1] = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1BB87A390;
  v20 = v19 + v18;
  *(double *)(v19 + v18) = a3;
  v21 = *MEMORY[0x1E0DB6030];
  v22 = sub_1BB86D8F4();
  v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
  v23(v20, v21, v22);
  v24 = *MEMORY[0x1E0DB6120];
  v25 = sub_1BB86D9B4();
  v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v26(v20, v24, v25);
  v27 = *(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104);
  v27(v20, *MEMORY[0x1E0DB5B98], v15);
  v28 = (_QWORD *)(v20 + v17);
  *v28 = 0x4008000000000000;
  v23((unint64_t)v28, v21, v22);
  v26((unint64_t)v28, v24, v25);
  v27((unint64_t)v28, *MEMORY[0x1E0DB5BA8], v15);
  v29 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v29, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v30 = v36;
  v31 = v37;
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  v32 = v38;
  v33 = *(void (**)(uint64_t *, uint64_t))(v39 + 8);
  v33(v31, v38);
  v43 = v42;
  swift_getKeyPath();
  v41(v31, *MEMORY[0x1E0DB63D8], v32);
  sub_1BB86D4E0();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v31, v32);
}

uint64_t sub_1BAA46270(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  void (*v37)(uint64_t *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(void);
  unsigned int v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  void (*KeyPath)(uint64_t *, uint64_t);
  unsigned int v72;
  void (*v73)(uint64_t *);
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;

  v1 = *a1;
  v74 = (uint64_t)a1;
  v75 = v1;
  sub_1BAA46998(0, &qword_1ED39C300, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v57 = *(_QWORD *)(v3 - 8);
  v5 = v57;
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v56 - v6);
  v76 = a1;
  KeyPath = (void (*)(uint64_t *, uint64_t))swift_getKeyPath();
  sub_1BA71C838();
  v9 = v8;
  v10 = swift_allocBox();
  v12 = v11;
  v13 = (uint64_t *)(v11 + *(int *)(v9 + 48));
  v14 = *MEMORY[0x1E0DB5F98];
  v15 = sub_1BB86D894();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104);
  v16(v12, v14, v15);
  v70 = v16;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0x4000000000000000;
  *v13 = v17;
  v69 = *MEMORY[0x1E0DB5FA0];
  ((void (*)(uint64_t *))v16)(v13);
  *v7 = v10;
  v72 = *MEMORY[0x1E0DB63D0];
  v73 = *(void (**)(uint64_t *))(v5 + 104);
  v73(v7);
  sub_1BAA46934();
  v68 = v18;
  sub_1BAA46998(0, &qword_1ED39C298, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v20 = *(_QWORD *)(v19 - 8);
  v60 = v19;
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v65 = v23;
  v66 = v21;
  v67 = v22 | 7;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  v25 = v24 + v23;
  v62 = *MEMORY[0x1E0DB5C30];
  v26 = v62;
  sub_1BAA46998(0, &qword_1ED39C288, MEMORY[0x1E0DB5C60]);
  v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104);
  v28 = v26;
  v29 = v27;
  v61(v25, v28);
  v59 = *MEMORY[0x1E0DB5C68];
  v58 = *(void (**)(void))(v20 + 104);
  ((void (*)(uint64_t))v58)(v25);
  v64 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  v63 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = *(void (**)(uint64_t *, uint64_t))(v57 + 8);
  KeyPath(v7, v4);
  v76 = (_QWORD *)v74;
  v74 = swift_getKeyPath();
  v30 = swift_allocBox();
  v32 = v31;
  v33 = (uint64_t *)((char *)v31 + *(int *)(v9 + 48));
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0x403C000000000000;
  *v32 = v34;
  v35 = v32;
  v36 = v69;
  v37 = (void (*)(uint64_t *, uint64_t, uint64_t))v70;
  v70((uint64_t)v35, v69, v15);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = 0x403C000000000000;
  *v33 = v38;
  v37(v33, v36, v15);
  *v7 = v30;
  v56 = v4;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v73)(v7, v72, v4);
  v39 = v65;
  v40 = 2 * v66;
  v41 = v66;
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1BB87FC80;
  v43 = v42 + v39;
  v44 = v29;
  v45 = v61;
  ((void (*)(uint64_t, _QWORD, uint64_t))v61)(v43, v62, v29);
  v46 = v59;
  v47 = v60;
  v48 = v58;
  ((void (*)(uint64_t, _QWORD, uint64_t))v58)(v43, v59, v60);
  v49 = v43 + v41;
  ((void (*)(uint64_t, _QWORD, uint64_t))v45)(v49, *MEMORY[0x1E0DB5C58], v44);
  ((void (*)(uint64_t, uint64_t, uint64_t))v48)(v49, v46, v47);
  __asm { FMOV            V0.2D, #-10.0 }
  *(_OWORD *)(v43 + v40) = _Q0;
  v48();
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))KeyPath)(v7, v56);
}

uint64_t sub_1BAA466F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_1BB8726B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = qword_1ED3B2F88;
  if ((*(_BYTE *)(a1 + 56) & 4) == 0)
  {
    v7 = *(_QWORD *)(a1 + 368);
    if ((*(_BYTE *)(v7 + qword_1ED3B2F88) & 1) != 0)
      return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
    sub_1BA657D64();
    *v5 = sub_1BB87345C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF738], v2);
    a1 = sub_1BB8726D0();
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    if ((a1 & 1) != 0)
      return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
    __break(1u);
  }
  v7 = *(_QWORD *)(a1 + 376);
  if ((*(_BYTE *)(v7 + v6) & 1) != 0)
    return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
  sub_1BA657D64();
  *v5 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF738], v2);
  v8 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
    return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
  __break(1u);
  return result;
}

uint64_t sub_1BAA4683C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BAA45490(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 56));
}

uint64_t sub_1BAA46850()
{
  return swift_deallocObject();
}

void sub_1BAA46860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for CoverIssueViewLayout;
    v8[1] = &type metadata for CoverIssueViewLayout.Attributes;
    v8[2] = sub_1BA915CEC();
    v8[3] = sub_1BA915D30();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BAA468DC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAA46860(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAA4691C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA45830(a1, *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 40), *(double *)(v1 + 16), *(double *)(v1 + 32), *(double *)(v1 + 48));
}

void sub_1BAA46934()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DC00)
  {
    sub_1BAA46998(255, &qword_1ED39C298, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DC00);
  }
}

void sub_1BAA46998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA915CEC();
    v7 = a3(a1, &type metadata for CoverIssueViewLayout, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAA469F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA45C20(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAA469FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA45F0C(a1, *(void **)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1BAA46A08()
{
  uint64_t v0;

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for WebEmbedDatastoreContents()
{
  return &type metadata for WebEmbedDatastoreContents;
}

uint64_t *sub_1BAA46A3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    type metadata accessor for WebEmbedDataSourceCacheEntry();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = *((_QWORD *)v8 + 1);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = v9;
      swift_retain();
    }
    else
    {
      v11 = sub_1BB86C8B0();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(v7, v8, v11);
      v13 = (int *)type metadata accessor for WebEmbedDataSourceJson();
      *(_QWORD *)&v7[v13[5]] = *(_QWORD *)&v8[v13[5]];
      v14 = v13[6];
      v15 = &v7[v14];
      v16 = &v8[v14];
      v17 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      v18 = v13[7];
      v19 = &v7[v18];
      v20 = &v8[v18];
      swift_bridgeObjectRetain();
      v12(v19, v20, v11);
      v21 = v13[8];
      v22 = &v7[v21];
      v23 = &v8[v21];
      v24 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      v25 = v13[9];
      v26 = &v7[v25];
      v27 = &v8[v25];
      v28 = sub_1BB86BC8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v13[10];
      v30 = *(void **)&v8[v29];
      *(_QWORD *)&v7[v29] = v30;
      v31 = v30;
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_1BAA46BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for WebEmbedDataSourceCacheEntry();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
  }
  else
  {
    v5 = sub_1BB86C8B0();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(v4, v5);
    v7 = (int *)type metadata accessor for WebEmbedDataSourceJson();
    swift_bridgeObjectRelease();
    v6(v4 + v7[7], v5);
    v8 = v4 + v7[8];
    v9 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v4 + v7[9];
    v11 = sub_1BB86BC8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  }
}

_QWORD *sub_1BAA46CEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  type metadata accessor for WebEmbedDataSourceCacheEntry();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *((_QWORD *)v7 + 1);
    *(_QWORD *)v6 = *(_QWORD *)v7;
    *((_QWORD *)v6 + 1) = v8;
    swift_retain();
  }
  else
  {
    v9 = sub_1BB86C8B0();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(v6, v7, v9);
    v11 = (int *)type metadata accessor for WebEmbedDataSourceJson();
    *(_QWORD *)&v6[v11[5]] = *(_QWORD *)&v7[v11[5]];
    v12 = v11[6];
    v13 = &v6[v12];
    v14 = &v7[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = v11[7];
    v17 = &v6[v16];
    v18 = &v7[v16];
    swift_bridgeObjectRetain();
    v10(v17, v18, v9);
    v19 = v11[8];
    v20 = &v6[v19];
    v21 = &v7[v19];
    v22 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = v11[9];
    v24 = &v6[v23];
    v25 = &v7[v23];
    v26 = sub_1BB86BC8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = v11[10];
    v28 = *(void **)&v7[v27];
    *(_QWORD *)&v6[v27] = v28;
    v29 = v28;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BAA46E64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BAA47014((uint64_t)a1 + v6);
    type metadata accessor for WebEmbedDataSourceCacheEntry();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
      swift_retain();
    }
    else
    {
      v9 = sub_1BB86C8B0();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      v11 = (int *)type metadata accessor for WebEmbedDataSourceJson();
      *(_QWORD *)&v7[v11[5]] = *(_QWORD *)&v8[v11[5]];
      v12 = v11[6];
      v13 = &v7[v12];
      v14 = &v8[v12];
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      v15 = v11[7];
      v16 = &v7[v15];
      v17 = &v8[v15];
      swift_bridgeObjectRetain();
      v10(v16, v17, v9);
      v18 = v11[8];
      v19 = &v7[v18];
      v20 = &v8[v18];
      v21 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = v11[9];
      v23 = &v7[v22];
      v24 = &v8[v22];
      v25 = sub_1BB86BC8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      v26 = v11[10];
      v27 = *(void **)&v8[v26];
      *(_QWORD *)&v7[v26] = v27;
      v28 = v27;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BAA47014(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1BAA47050(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1BB86C8B0();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(v5, v6, v8);
    v10 = (int *)type metadata accessor for WebEmbedDataSourceJson();
    *(_QWORD *)&v5[v10[5]] = *(_QWORD *)&v6[v10[5]];
    *(_OWORD *)&v5[v10[6]] = *(_OWORD *)&v6[v10[6]];
    v9(&v5[v10[7]], &v6[v10[7]], v8);
    v11 = v10[8];
    v12 = &v5[v11];
    v13 = &v6[v11];
    v14 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = v10[9];
    v16 = &v5[v15];
    v17 = &v6[v15];
    v18 = sub_1BB86BC8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_QWORD *)&v5[v10[10]] = *(_QWORD *)&v6[v10[10]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1BAA471A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BAA47014((uint64_t)a1 + v7);
    v10 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = sub_1BB86C8B0();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v12(v8, v9, v11);
      v13 = (int *)type metadata accessor for WebEmbedDataSourceJson();
      *(_QWORD *)&v8[v13[5]] = *(_QWORD *)&v9[v13[5]];
      *(_OWORD *)&v8[v13[6]] = *(_OWORD *)&v9[v13[6]];
      v12(&v8[v13[7]], &v9[v13[7]], v11);
      v14 = v13[8];
      v15 = &v8[v14];
      v16 = &v9[v14];
      v17 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = v13[9];
      v19 = &v8[v18];
      v20 = &v9[v18];
      v21 = sub_1BB86BC8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_QWORD *)&v8[v13[10]] = *(_QWORD *)&v9[v13[10]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAA47310()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA4731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BAA47398()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA473A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WebEmbedDatastoreProperty()
{
  uint64_t result;

  result = qword_1ED3A7A78;
  if (!qword_1ED3A7A78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAA47454()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WebEmbedDataSourceCacheEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BAA474C8()
{
  return 0xD000000000000016;
}

unint64_t sub_1BAA474E4()
{
  return 0xD000000000000014;
}

unint64_t sub_1BAA47500()
{
  return 0xD000000000000017;
}

unint64_t sub_1BAA4751C()
{
  return 0xD000000000000019;
}

unint64_t sub_1BAA47538()
{
  return 0xD000000000000012;
}

unint64_t sub_1BAA47554()
{
  return 0xD000000000000014;
}

unint64_t sub_1BAA47570()
{
  return 0xD000000000000017;
}

unint64_t sub_1BAA4758C()
{
  return 0xD000000000000016;
}

unint64_t sub_1BAA475A8()
{
  return 0xD000000000000017;
}

unint64_t sub_1BAA475C4()
{
  return 0xD000000000000018;
}

unint64_t sub_1BAA475E0()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1BAA475FC()
{
  return 0xD000000000000018;
}

unint64_t sub_1BAA47618()
{
  return 0xD000000000000015;
}

unint64_t sub_1BAA47634()
{
  return 0xD000000000000019;
}

unint64_t sub_1BAA47650()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1BAA4766C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatItemKind.puzzleStatistic");
  sub_1BB872AFC(v0);
  sub_1BB872AFC(v1);
  return 0;
}

uint64_t sub_1BAA476FC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BAA47758@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BAA477B8()
{
  sub_1BA6088A4();
  return sub_1BB874710();
}

uint64_t sub_1BAA477E0()
{
  sub_1BA6088A4();
  return sub_1BB87471C();
}

uint64_t sub_1BAA47808()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA47854()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAA47868()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA478B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAA47934()
{
  sub_1BA608A2C();
  return sub_1BB874710();
}

uint64_t sub_1BAA4795C()
{
  sub_1BA608A2C();
  return sub_1BB87471C();
}

uint64_t FormatItemKind.hashValue.getter()
{
  sub_1BB8745CC();
  FormatItemKind.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BAA479D0()
{
  sub_1BB8745CC();
  FormatItemKind.hash(into:)();
  return sub_1BB874608();
}

uint64_t FormatItemKind.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = 0x656C6369747261;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v3 = 0x6575737369;
      break;
    case 2uLL:
      v3 = 0x6465626D45626577;
      break;
    case 3uLL:
      v3 = 0x6172546F69647561;
      break;
    case 4uLL:
      v3 = 6775156;
      break;
    case 5uLL:
      v3 = 0x65726F6373;
      break;
    case 6uLL:
      v3 = 0x676E69646E617473;
      break;
    case 7uLL:
      v3 = 0x74656B63617262;
      break;
    case 8uLL:
      v3 = 0x65726F6353786F62;
      break;
    case 9uLL:
      v3 = 0x726F6353656E696CLL;
      break;
    case 0xAuLL:
      v3 = 0x65527972756A6E69;
      break;
    case 0xBuLL:
      v3 = 0x6579616C5079656BLL;
      break;
    case 0xCuLL:
      v3 = 0x656C7A7A7570;
      break;
    case 0xDuLL:
      v3 = 0x7954656C7A7A7570;
      break;
    case 0xEuLL:
      v3 = 0x7453656C7A7A7570;
      break;
    default:
      v3 = v1;
      break;
  }
  sub_1BA682148(v1, v2);
  return v3;
}

uint64_t sub_1BAA47BF0()
{
  return sub_1BB64A568();
}

uint64_t sub_1BAA47C04()
{
  return sub_1BB64AD84();
}

uint64_t sub_1BAA47C18()
{
  return sub_1BB649D48();
}

uint64_t sub_1BAA47C2C()
{
  return sub_1BAA4766C();
}

uint64_t _s8NewsFeed14FormatItemKindO1loiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FormatItemKind.description.getter();
  v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BAA47CD8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA47CFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA47CFC()
{
  unint64_t result;

  result = qword_1EF2ADEF0;
  if (!qword_1EF2ADEF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemKind, &type metadata for FormatItemKind);
    atomic_store(result, (unint64_t *)&qword_1EF2ADEF0);
  }
  return result;
}

unint64_t sub_1BAA47D40(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5B7D34();
  a1[2] = sub_1BA7850D0();
  result = sub_1BA835440();
  a1[3] = result;
  return result;
}

_QWORD *assignWithCopy for FeedItem.Kind(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedItem.Kind(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatItemKind()
{
  return &type metadata for FormatItemKind;
}

ValueMetadata *type metadata accessor for FormatItemKind.Object()
{
  return &type metadata for FormatItemKind.Object;
}

ValueMetadata *type metadata accessor for FormatItemKind.CodingType()
{
  return &type metadata for FormatItemKind.CodingType;
}

uint64_t storeEnumTagSinglePayload for FormatItemKind.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA47EF0 + 4 * byte_1BB893428[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA47F24 + 4 * byte_1BB893423[v4]))();
}

uint64_t sub_1BAA47F24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA47F2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA47F34);
  return result;
}

uint64_t sub_1BAA47F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA47F48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA47F4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA47F54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemKind.CodingKeys()
{
  return &type metadata for FormatItemKind.CodingKeys;
}

unint64_t sub_1BAA47F74()
{
  unint64_t result;

  result = qword_1EF2ADEF8;
  if (!qword_1EF2ADEF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8936D4, &type metadata for FormatItemKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2ADEF8);
  }
  return result;
}

unint64_t sub_1BAA47FBC()
{
  unint64_t result;

  result = qword_1EF2ADF00;
  if (!qword_1EF2ADF00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB893774, &type metadata for FormatItemKind.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2ADF00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatItemKind.Object.CodingKeys()
{
  return &type metadata for FormatItemKind.Object.CodingKeys;
}

unint64_t sub_1BAA48014()
{
  unint64_t result;

  result = qword_1EF2ADF08;
  if (!qword_1EF2ADF08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89391C, &type metadata for FormatItemKind.Object.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2ADF08);
  }
  return result;
}

id SharingArticleTextActivityItemSource.__allocating_init(headline:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
  v4 = v3;
  v5 = (void *)swift_unknownObjectRetain();
  v6 = sub_1BAA48174(v5);
  v7 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
  *v7 = v6;
  v7[1] = v8;

  v11.receiver = v4;
  v11.super_class = v1;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_unknownObjectRelease();
  return v9;
}

id SharingArticleTextActivityItemSource.init(headline:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
  v4 = v1;
  v5 = (void *)swift_unknownObjectRetain();
  v6 = sub_1BAA48174(v5);
  v7 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
  *v7 = v6;
  v7[1] = v8;

  v11.receiver = v4;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1BAA48174(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  void *v11;

  v2 = objc_msgSend(a1, sel_title);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1BB8729A0();

    v5 = objc_msgSend(a1, sel_sourceName);
    if (v5)
    {
      v6 = v5;
      sub_1BB8729A0();

      sub_1BB872AFC(v7);
      sub_1BB872AFC(v8);
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
  }
  v10 = objc_msgSend(a1, sel_title);
  if (!v10)
  {
    v10 = objc_msgSend(a1, sel_sourceName);
    if (!v10)
      return 0;
  }
  v11 = v10;
  v9 = sub_1BB8729A0();

  return v9;
}

uint64_t SharingArticleTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle + 8);
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SharingArticleTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  char v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  char v57;
  id v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  char v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  uint64_t v74;

  v3 = v2;
  v74 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    if (sub_1BB8729A0() == 0xD000000000000026 && v6 == 0x80000001BB968360)
    {
      v7 = a1;
      swift_bridgeObjectRelease();
LABEL_6:
      v10 = (void *)sub_1BB8727B4();
      v73 = (unint64_t)v10;
      v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle);
      v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle + 8);
      if (v11)
        v13 = 0;
      else
        v13 = v12 == 0xE000000000000000;
      if (!v13 && (sub_1BB874398() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v72 = v10;
        sub_1BB4BDCEC(v11, v12, 0x2D656C6369747261, 0xED0000656C746974, isUniquelyReferenced_nonNull_native);
        v73 = (unint64_t)v10;
        swift_bridgeObjectRelease();
      }
      v15 = OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline;
      v16 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline), sel_shortExcerpt);
      if (v16)
      {

        v17 = objc_msgSend(*(id *)(v3 + v15), sel_shortExcerpt);
        if (v17)
        {
          v18 = v17;
          v19 = sub_1BB8729A0();
          v21 = v20;

          v22 = swift_isUniquelyReferenced_nonNull_native();
          v72 = v10;
          v73 = 0x8000000000000000;
          sub_1BB4BDCEC(v19, v21, 0x2D656C6369747261, 0xEF7972616D6D7573, v22);
        }
        else
        {
          sub_1BAA48FA4(0x2D656C6369747261, 0xEF7972616D6D7573);
        }
        swift_bridgeObjectRelease();
      }
      v38 = (void *)objc_opt_self();
      v39 = (void *)sub_1BB872760();
      swift_bridgeObjectRelease();
      v72 = 0;
      v40 = objc_msgSend(v38, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v39, 1, &v72);

      v41 = v72;
      if (v40)
      {
        v42 = sub_1BB86C6E8();
        v44 = v43;

        *(_QWORD *)(a2 + 24) = MEMORY[0x1E0CB0338];
        *(_QWORD *)a2 = v42;
        *(_QWORD *)(a2 + 8) = v44;
        return;
      }
      v45 = v41;
      v46 = (void *)sub_1BB86C484();

      swift_willThrow();
      goto LABEL_28;
    }
    v8 = sub_1BB874398();
    v9 = a1;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_6;

    v23 = (void *)*MEMORY[0x1E0CEB1E0];
    v24 = sub_1BB8729A0();
    v26 = v25;
    if (v24 == sub_1BB8729A0() && v26 == v27)
      goto LABEL_23;
    v29 = sub_1BB874398();
    v30 = v23;
    v31 = v9;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
LABEL_28:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
    v23 = (void *)*MEMORY[0x1E0CEB1C0];
    v32 = sub_1BB8729A0();
    v34 = v33;
    if (v32 == sub_1BB8729A0() && v34 == v35)
    {
LABEL_23:
      v36 = v23;
      v37 = v9;

      swift_bridgeObjectRelease_n();
      goto LABEL_28;
    }
    v47 = sub_1BB874398();
    v48 = v23;
    v49 = v31;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v47 & 1) != 0)
      goto LABEL_28;
    v50 = (void *)*MEMORY[0x1E0CEB1F0];
    v51 = sub_1BB8729A0();
    v53 = v52;
    if (v51 == sub_1BB8729A0() && v53 == v54)
    {
      v55 = v50;
      v56 = v49;

LABEL_37:
      swift_bridgeObjectRelease_n();
      goto LABEL_38;
    }
    v57 = sub_1BB874398();
    v58 = v50;
    v59 = v49;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
    {
LABEL_38:
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0xE000000000000000;
      return;
    }
    v60 = (void *)*MEMORY[0x1E0CEB1D0];
    v61 = sub_1BB8729A0();
    v63 = v62;
    if (v61 == sub_1BB8729A0() && v63 == v64)
    {
      v65 = v60;
      v66 = v59;

      goto LABEL_37;
    }
    v67 = sub_1BB874398();
    v68 = v60;
    v69 = v59;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v67 & 1) != 0)
      goto LABEL_38;
  }
  v71 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle);
  v70 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle + 8);
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
  *(_QWORD *)a2 = v71;
  *(_QWORD *)(a2 + 8) = v70;
  swift_bridgeObjectRetain();
}

Swift::String __swiftcall SharingArticleTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  unint64_t v3;
  uint64_t v4;
  NSString *v5;
  unint64_t v6;
  char v7;
  NSString *v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  if (dataTypeIdentifierForActivityType.value)
  {
    v3 = 0xD00000000000001DLL;
    if (sub_1BB8729A0() == 0xD000000000000026 && v4 == 0x80000001BB968360)
    {
      v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      v6 = 0x80000001BB968390;
    }
    else
    {
      v7 = sub_1BB874398();
      v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v6 = 0x80000001BB968390;
      }
      else
      {
        v3 = 0;
        v6 = 0xE000000000000000;
      }
    }

  }
  else
  {
    v3 = 0;
    v6 = 0xE000000000000000;
  }
  v9 = v3;
  v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

id SharingArticleTextActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingArticleTextActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingArticleTextActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1BAA48D9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4C18B8();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1BA76EAE0((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1BAF0D988(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_1BAA48E8C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6EDA24(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4C1AA4();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1BB873E58();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_1BA76EAE0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1BAF0DB5C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1BAA48F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic, (void (*)(unint64_t, uint64_t))sub_1BAF0DDE0, (void (*)(void))sub_1BB4C1D30, a3);
}

uint64_t sub_1BAA48FA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C216C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_1BAF0DDEC(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BAA49088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data, (void (*)(unint64_t, uint64_t))sub_1BAF0DFC0, (void (*)(void))sub_1BB4C2E80, a3);
}

uint64_t sub_1BAA490A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v10;
  unint64_t v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v10 = v6;
  swift_bridgeObjectRetain();
  v14 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v10;
    v23 = *v10;
    *v10 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      v17 = v23;
    }
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v17 + 56);
    v19 = a3(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_1BA5193C4(v18 + *(_QWORD *)(v20 + 72) * v14, a6, a3);
    a4(v14, v17);
    *v10 = v17;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a6, 0, 1, v19);
  }
  else
  {
    v22 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a6, 1, 1, v22);
  }
}

uint64_t sub_1BAA491E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BB4AB2C8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C38BC();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1BAF0DFCC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BAA492BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C3C88();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1BA81C0AC(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1BAA49398@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  double result;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4C3E44();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 104 * v8;
    v13 = *(_OWORD *)(v12 + 80);
    *(_OWORD *)(a3 + 64) = *(_OWORD *)(v12 + 64);
    *(_OWORD *)(a3 + 80) = v13;
    *(_QWORD *)(a3 + 96) = *(_QWORD *)(v12 + 96);
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v14;
    v15 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v15;
    sub_1BAF0E230(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 96) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BAA494B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4C4994();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_1BB86C8B0();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_1BAF0E410(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_1BB86C8B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1BAA495E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption, (void (*)(unint64_t, uint64_t))sub_1BAF0E41C, (void (*)(void))sub_1BB4C5354, a3);
}

uint64_t sub_1BAA495FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(unint64_t, uint64_t))sub_1BAF0E428, (void (*)(void))sub_1BB4C57E0, a3);
}

uint64_t sub_1BAA49618(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BB4AB52C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C5810();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for WebEmbedDatastoreCacheKey();
  sub_1BAA49E6C(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1BAF0E434(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1BAA496E8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BB4AB200(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4C6310();
      v9 = v11;
    }
    sub_1BA9ECE7C(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1BA76EAE0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1BAF0E6C0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1BAA497D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BB4AB584(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C64F0();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1BA81C0AC(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BAA4989C(uint64_t a1, uint64_t a2)
{
  return sub_1BA4A7578(a1, a2, (void (*)(unint64_t, uint64_t))sub_1BA81C280, (void (*)(void))sub_1BB4C69F4);
}

uint64_t sub_1BAA498B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1BB4CF560(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C6D98();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_1BAF0E888(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BAA49944(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1BB4CF560(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BB4C6F44();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_1BAF0E888(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BAA499D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem, (void (*)(unint64_t, uint64_t))sub_1BAF0EA1C, (void (*)(void))sub_1BB4C70EC, a3);
}

uint64_t sub_1BAA499F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage, (void (*)(unint64_t, uint64_t))sub_1BAF0EA28, (void (*)(void))sub_1BB4C75A0, a3);
}

uint64_t sub_1BAA49A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile, (void (*)(unint64_t, uint64_t))sub_1BAF0EA34, (void (*)(void))sub_1BB4C7BF8, a3);
}

uint64_t sub_1BAA49A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAA490A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster, (void (*)(unint64_t, uint64_t))sub_1BAF0EC58, (void (*)(void))sub_1BB4C92E8, a3);
}

uint64_t sub_1BAA49A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  _OWORD v13[8];

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *(_QWORD *)&v13[0] = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4CA158();
      v11 = *(_QWORD *)&v13[0];
    }
    swift_bridgeObjectRelease();
    memmove(a3, (const void *)(*(_QWORD *)(v11 + 56) + (v8 << 7)), 0x80uLL);
    sub_1BAF0EE6C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return nullsub_1();
  }
  else
  {
    sub_1BA8EBB18(v13);
    return sub_1BA5193C4((uint64_t)v13, (uint64_t)a3, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  }
}

double sub_1BAA49B48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  char v9;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  double result;
  uint64_t v15;

  v5 = v4;
  v9 = a3 & 1;
  swift_bridgeObjectRetain();
  v10 = sub_1BB4AB848(a1, a2, v9);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v5;
    v15 = *v5;
    *v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4CA5A8();
      v13 = v15;
    }
    sub_1BAA49EA8();
    sub_1BA76EAE0((_OWORD *)(*(_QWORD *)(v13 + 56) + 32 * v10), a4);
    sub_1BAF0F040(v10, v13);
    *v5 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

double sub_1BAA49C48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BA6E35A8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BB4CA7C8();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1BA4CECCC((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_1BAF0F290(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

id _s8NewsFeed36SharingArticleTextActivityItemSourceC22activityViewController_010subjectForF4TypeSSSo010UIActivityjK0C_So0oN0aSgtF_0()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline;
  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline), sel_sourceName);
  if (result)
  {
    v3 = result;
    sub_1BB8729A0();

    v4 = sub_1BB872A24();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(*(id *)(v0 + v1), sel_title);
    if (v5)
    {
      v6 = v5;
      sub_1BB8729A0();

      sub_1BB872AFC(v7);
      sub_1BB872AFC(v8);
      swift_bridgeObjectRelease();
      return (id)v4;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SharingArticleTextActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingArticleTextActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingArticleTextActivityItemSource.__allocating_init(headline:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BAA49E6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA49EA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA49EB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFont.init(from:)(a1, a2);
}

void sub_1BAA49ECC(_QWORD *a1)
{
  FormatBindingFont.encode(to:)(a1);
}

uint64_t sub_1BAA49EE0(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t *v32;

  v32 = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
  MEMORY[0x1E0C80A78](v2);
  v31 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v29 - v5;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  v12 = *(_QWORD *)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)v11 = *(_QWORD *)v1;
  *((_QWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 2) = v14;
  v11[24] = v15;
  type metadata accessor for FormatFontResource(0);
  swift_storeEnumTagMultiPayload();
  v16 = type metadata accessor for FormatResource(0);
  swift_storeEnumTagMultiPayload();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  sub_1BAA4AC48((uint64_t)v11, (uint64_t)v8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v8, 1, v16) == 1)
  {
    sub_1BA745F88(v12, v13, v14, v15);
    return sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = v8;
    v19 = v31;
    sub_1BAA4AC48((uint64_t)v11, v31);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v19, 1, v16);
    if ((_DWORD)result != 1)
    {
      v21 = v32[1];
      sub_1BA745F88(v12, v13, v14, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_1BA6D25A4(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
      v8 = v30;
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
        v21 = sub_1BA6D25A4(v22 > 1, v23 + 1, 1, v21);
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_1BA9CA044(v31, v21+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v23);
      v32[1] = v21;
LABEL_16:
      sub_1BAA4AC9C((uint64_t)v8);
      return sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
    }
    __break(1u);
  }
  else
  {
    v31 = v17;
    v24 = (uint64_t)v30;
    sub_1BAA4AC48((uint64_t)v11, (uint64_t)v30);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v24, 1, v16);
    if ((_DWORD)result != 1)
    {
      v25 = *v32;
      sub_1BA745F88(v12, v13, v14, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_1BA6D25A4(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
      v26 = v31;
      v28 = *(_QWORD *)(v25 + 16);
      v27 = *(_QWORD *)(v25 + 24);
      if (v28 >= v27 >> 1)
        v25 = sub_1BA6D25A4(v27 > 1, v28 + 1, 1, v25);
      *(_QWORD *)(v25 + 16) = v28 + 1;
      sub_1BA9CA044((uint64_t)v30, v25+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v28);
      *v32 = v25;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAA4A268(unint64_t *a1)
{
  return sub_1BAA49EE0(a1);
}

uint64_t sub_1BAA4A27C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];

  if (*(unsigned __int8 *)(v1 + 24) >= 3u)
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    v7 = 10;
    sub_1BA745F88(v5, v4, v3, 3);
    result = sub_1BB6B84D4(v8, &v7);
    if (!v2)
    {
      v6 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAA4A340(uint64_t a1)
{
  return sub_1BAA4A27C(a1);
}

void FormatBindingFont.bind(binder:context:)()
{
  sub_1BAA4A7EC();
}

void sub_1BAA4A36C()
{
  sub_1BAA4A7EC();
}

void _s8NewsFeed17FormatBindingFontO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BAA4A3D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  _QWORD v10[2];
  __int16 v11;
  char v12;
  _QWORD v13[2];
  __int16 v14;
  char v15;

  if (v7)
  {
    sub_1BA745F88(v3, v2, v0, v7);
    sub_1BA6F3F50(v6, v5, v4, v1);
    sub_1BA6F3F50(v3, v2, v0, v7);
    v8 = 0;
  }
  else
  {
    v13[0] = v6;
    v13[1] = v5;
    v14 = v4;
    v15 = BYTE2(v4);
    v10[0] = v3;
    v10[1] = v2;
    v11 = v0;
    v12 = BYTE2(v0);
    v8 = _s8NewsFeed16FormatTagBindingV4FontO2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v10);
    sub_1BA6F3F50(v6, v5, v4, 0);
    sub_1BA6F3F50(v3, v2, v0, 0);
  }
  return v8 & 1;
}

void sub_1BAA4A7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - v4;
  if (*(unsigned __int8 *)(v0 + 24) >= 3u)
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA502AD0((uint64_t)v5, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BAA4A908(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA4A92C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA4A92C()
{
  unint64_t result;

  result = qword_1EF2ADF48;
  if (!qword_1EF2ADF48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFont, &type metadata for FormatBindingFont);
    atomic_store(result, (unint64_t *)&qword_1EF2ADF48);
  }
  return result;
}

unint64_t sub_1BAA4A970(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAA4A9A4();
  a1[2] = sub_1BAA4A9E8();
  result = sub_1BAA4AA2C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA4A9A4()
{
  unint64_t result;

  result = qword_1ED39CD30;
  if (!qword_1ED39CD30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFont, &type metadata for FormatBindingFont);
    atomic_store(result, (unint64_t *)&qword_1ED39CD30);
  }
  return result;
}

unint64_t sub_1BAA4A9E8()
{
  unint64_t result;

  result = qword_1ED3A2A28;
  if (!qword_1ED3A2A28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFont, &type metadata for FormatBindingFont);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A28);
  }
  return result;
}

unint64_t sub_1BAA4AA2C()
{
  unint64_t result;

  result = qword_1EF2ADF50;
  if (!qword_1EF2ADF50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFont, &type metadata for FormatBindingFont);
    atomic_store(result, (unint64_t *)&qword_1EF2ADF50);
  }
  return result;
}

uint64_t destroy for FormatColorBinding(uint64_t a1)
{
  return sub_1BA6F3F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatColorBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA745F88(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatColorBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA745F88(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA6F3F50(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatColorBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA6F3F50(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindingFont(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBindingFont(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAA4AC28(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1BAA4AC30(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingFont()
{
  return &type metadata for FormatBindingFont;
}

uint64_t sub_1BAA4AC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA4AC9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatResource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NewsFeed::FormatPatternAnchor_optional __swiftcall FormatPatternAnchor.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatPatternAnchor_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatPatternAnchor.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA4AD58 + 4 * byte_1BB893B10[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_1BAA4AD58()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BAA4AD6C()
{
  return 1952867692;
}

uint64_t sub_1BAA4AD7C()
{
  return 0x7468676972;
}

uint64_t sub_1BAA4AD90()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BAA4ADA8()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BAA4ADC0()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BAA4ADDC()
{
  return 0x69526D6F74746F62;
}

void sub_1BAA4ADFC(char *a1)
{
  sub_1BB7FCC1C(*a1);
}

unint64_t sub_1BAA4AE0C()
{
  unint64_t result;

  result = qword_1ED3AD620;
  if (!qword_1ED3AD620)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternAnchor, &type metadata for FormatPatternAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED3AD620);
  }
  return result;
}

void sub_1BAA4AE50()
{
  char *v0;

  sub_1BAB0A204(0, *v0);
}

void sub_1BAA4AE5C(uint64_t a1)
{
  char *v1;

  sub_1BA9D3710(a1, *v1);
}

void sub_1BAA4AE64(uint64_t a1)
{
  char *v1;

  sub_1BAB0A204(a1, *v1);
}

NewsFeed::FormatPatternAnchor_optional sub_1BAA4AE6C(Swift::String *a1)
{
  return FormatPatternAnchor.init(rawValue:)(*a1);
}

uint64_t sub_1BAA4AE78()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAA4AEA0 + 4 * byte_1BB893B18[*v0]))();
}

void sub_1BAA4AEA0(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74746F62;
  a1[1] = 0xE600000000000000;
}

void sub_1BAA4AEB8(_QWORD *a1@<X8>)
{
  *a1 = 1952867692;
  a1[1] = 0xE400000000000000;
}

void sub_1BAA4AECC(_QWORD *a1@<X8>)
{
  *a1 = 0x7468676972;
  a1[1] = 0xE500000000000000;
}

void sub_1BAA4AEE4(_QWORD *a1@<X8>)
{
  *a1 = 0x7466654C706F74;
  a1[1] = 0xE700000000000000;
}

void sub_1BAA4AF00(_QWORD *a1@<X8>)
{
  *a1 = 0x7468676952706F74;
  a1[1] = 0xE800000000000000;
}

void sub_1BAA4AF1C(_QWORD *a1@<X8>)
{
  *a1 = 0x654C6D6F74746F62;
  a1[1] = 0xEA00000000007466;
}

void sub_1BAA4AF3C(_QWORD *a1@<X8>)
{
  *a1 = 0x69526D6F74746F62;
  a1[1] = 0xEB00000000746867;
}

unint64_t sub_1BAA4AF60(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAA4AF8C();
  result = sub_1BAA4AFD0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAA4AF8C()
{
  unint64_t result;

  result = qword_1EF2ADF58;
  if (!qword_1EF2ADF58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternAnchor, &type metadata for FormatPatternAnchor);
    atomic_store(result, (unint64_t *)&qword_1EF2ADF58);
  }
  return result;
}

unint64_t sub_1BAA4AFD0()
{
  unint64_t result;

  result = qword_1ED39CE98;
  if (!qword_1ED39CE98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternAnchor, &type metadata for FormatPatternAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED39CE98);
  }
  return result;
}

unint64_t sub_1BAA4B014(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA4B038();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA4B038()
{
  unint64_t result;

  result = qword_1ED3AD628;
  if (!qword_1ED3AD628)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternAnchor, &type metadata for FormatPatternAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED3AD628);
  }
  return result;
}

unint64_t sub_1BAA4B07C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAA4B0B0();
  a1[2] = sub_1BAA4B0F4();
  result = sub_1BAA4AE0C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA4B0B0()
{
  unint64_t result;

  result = qword_1ED39CEA0;
  if (!qword_1ED39CEA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternAnchor, &type metadata for FormatPatternAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED39CEA0);
  }
  return result;
}

unint64_t sub_1BAA4B0F4()
{
  unint64_t result;

  result = qword_1ED39CE90;
  if (!qword_1ED39CE90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternAnchor, &type metadata for FormatPatternAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED39CE90);
  }
  return result;
}

uint64_t sub_1BAA4B138()
{
  sub_1BAA4AFD0();
  return sub_1BB872D60();
}

uint64_t sub_1BAA4B194(_QWORD *a1)
{
  return FormatPatternAnchor.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatPatternAnchor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BAA4B1F4 + 4 * byte_1BB893B25[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BAA4B228 + 4 * byte_1BB893B20[v4]))();
}

uint64_t sub_1BAA4B228(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA4B230(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA4B238);
  return result;
}

uint64_t sub_1BAA4B244(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA4B24CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BAA4B250(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA4B258(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternAnchor()
{
  return &type metadata for FormatPatternAnchor;
}

uint64_t PuzzleHistoryInfo.asDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  double v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0DEE9E0];
  sub_1BA76D70C(v1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    result = sub_1BB86C85C();
    if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) != 0)
    {
      if (v10 > -9.22337204e18)
      {
        if (v10 < 9.22337204e18)
        {
          v26 = MEMORY[0x1E0DEB418];
          *(_QWORD *)&v25 = (uint64_t)v10;
          sub_1BA76EAE0(&v25, v24);
          v11 = v27;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v23 = v11;
          sub_1BA785F30(v24, 0xD000000000000012, 0x80000001BB968440, isUniquelyReferenced_nonNull_native);
          v27 = v23;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          goto LABEL_7;
        }
LABEL_16:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA76D78C);
LABEL_7:
  v13 = type metadata accessor for PuzzleHistoryInfo();
  v14 = v1 + *(int *)(v13 + 20);
  if ((*(_BYTE *)(v14 + 8) & 1) != 0)
  {
    sub_1BAA48D9C(0xD000000000000011, 0x80000001BB968420, &v25);
    sub_1BA4A2E80((uint64_t)&v25, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
  }
  else
  {
    v15 = *(_QWORD *)v14;
    v26 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v25 = v15;
    sub_1BA76EAE0(&v25, v24);
    v16 = v27;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    v23 = v16;
    sub_1BA785F30(v24, 0xD000000000000011, 0x80000001BB968420, v17);
    v27 = v23;
    swift_bridgeObjectRelease();
  }
  v18 = v1 + *(int *)(v13 + 24);
  if ((*(_BYTE *)(v18 + 8) & 1) != 0)
  {
    sub_1BAA48D9C(0x726F635374736562, 0xE900000000000065, &v25);
    sub_1BA4A2E80((uint64_t)&v25, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
    return v27;
  }
  else
  {
    v20 = *(_QWORD *)v18;
    v26 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v25 = v20;
    sub_1BA76EAE0(&v25, v24);
    v21 = v27;
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v23 = v21;
    sub_1BA785F30(v24, 0x726F635374736562, 0xE900000000000065, v22);
    v19 = v23;
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t type metadata accessor for PuzzleHistoryInfo()
{
  uint64_t result;

  result = qword_1EF2ADFB8;
  if (!qword_1EF2ADFB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleHistoryInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1BA76D78C();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = (char *)a1 + v12;
    v16 = (char *)a2 + v12;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
  }
  return a1;
}

uint64_t destroy for PuzzleHistoryInfo(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

char *initializeWithCopy for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BA76D78C();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v13 = &a1[v10];
  v14 = &a2[v10];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  return a1;
}

char *assignWithCopy for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BA76D78C();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  return a1;
}

char *initializeWithTake for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BA76D78C();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v13 = &a1[v10];
  v14 = &a2[v10];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  return a1;
}

char *assignWithTake for PuzzleHistoryInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BA76D78C();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleHistoryInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA4BB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA76D78C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PuzzleHistoryInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA4BBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA76D78C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1BAA4BC04()
{
  unint64_t v0;

  sub_1BA76D78C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void *static FormatCodingAllCornersStrategy.defaultValue.getter()
{
  return &unk_1E7267FB8;
}

BOOL static FormatCodingAllCornersStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return (sub_1BA620178(a1, (uint64_t)&unk_1E7267FE0) & 1) == 0;
}

unint64_t sub_1BAA4BCA8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA4BCCC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA4BCCC()
{
  unint64_t result;

  result = qword_1EF2ADFF8;
  if (!qword_1EF2ADFF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingAllCornersStrategy, &type metadata for FormatCodingAllCornersStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2ADFF8);
  }
  return result;
}

uint64_t sub_1BAA4BD10()
{
  return sub_1BAA4BDBC((unint64_t *)&qword_1ED3B93E0, (uint64_t (*)(void))sub_1BA8363F4, MEMORY[0x1E0DEAF40]);
}

void sub_1BAA4BD3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B93D8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B93D8);
  }
}

uint64_t sub_1BAA4BD90()
{
  return sub_1BAA4BDBC((unint64_t *)&qword_1ED39BE08, (uint64_t (*)(void))sub_1BA836438, MEMORY[0x1E0DEAF10]);
}

uint64_t sub_1BAA4BDBC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BAA4BD3C();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAA4BE20(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724D5F8;
}

BOOL sub_1BAA4BE30(uint64_t *a1)
{
  return (sub_1BA620178(*a1, (uint64_t)&unk_1E724BE58) & 1) == 0;
}

ValueMetadata *type metadata accessor for FormatCodingAllCornersStrategy()
{
  return &type metadata for FormatCodingAllCornersStrategy;
}

NewsFeed::ArticleThumbnailViewStyle __swiftcall ArticleThumbnailViewStyle.init(parentBackgroundColor:)(NewsFeed::ArticleThumbnailViewStyle parentBackgroundColor)
{
  NewsFeed::ArticleThumbnailViewStyle *v1;

  v1->parentBackgroundColor.super.isa = parentBackgroundColor.parentBackgroundColor.super.isa;
  return parentBackgroundColor;
}

id ArticleThumbnailViewStyle.parentBackgroundColor.getter()
{
  id *v0;

  return *v0;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewStyle()
{
  return &type metadata for ArticleThumbnailViewStyle;
}

uint64_t dispatch thunk of ArticleThumbnailViewRendererType.render(_:on:with:traits:articleThumbnailViewStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1BAA4BE90(uint64_t a1, void *a2, __int128 *a3, uint64_t a4, void **a5)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  Swift::String_optional v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  __int128 v55[2];
  _OWORD v56[2];
  _QWORD v57[4];
  __int128 v58;
  __int128 v59;
  _BYTE v60[25];

  v7 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(unsigned __int8 *)(a1 + 40);
  v12 = a3[1];
  v58 = *a3;
  v59 = v12;
  *(_OWORD *)v60 = a3[2];
  *(_OWORD *)&v60[9] = *(__int128 *)((char *)a3 + 41);
  v51 = *a5;
  v13 = v10;
  if (v11 == 1)
  {
    sub_1BAA4D714((uint64_t)v7, v6, v8, v9, v10, 1);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v14 = objc_msgSend(v7, sel_identifier);
    v15 = sub_1BB8729A0();
    v17 = v16;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    v18 = (void *)v13;
  }
  else
  {
    v19 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
    v15 = sub_1BB8729A0();
    v17 = v20;

    v18 = (void *)v13;
    sub_1BA6DD544((uint64_t)v7, v6, v8, v9, v13, 0);
  }
  v49 = v6;
  sub_1BA6DD544((uint64_t)v7, v6, v8, v9, (uint64_t)v18, v11);
  v21.value._countAndFlagsBits = v15;
  v21.value._object = v17;
  ArticleThumbnailView.prepareForReuse(identifier:)(v21);
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setFrame_, v58, v59);
  v22 = v51;
  if (v51)
  {
    __swift_project_boxed_opaque_existential_1(v53 + 7, v53[10]);
    *(_QWORD *)&v55[0] = v51;
    v23 = v51;
    v18 = (void *)v13;
    sub_1BB4973C0(a2, v60[16], (void **)v55, *(double *)&v60[8]);

    v22 = v51;
  }
  if ((v11 & 1) == 0)
  {
    v35 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v52 = sub_1BB8729A0();
    v36 = (uint64_t)v18;
    v38 = v37;

    sub_1BAA4D714((uint64_t)v7, v49, v8, v9, v36, 0);
    v39 = v22;
    swift_retain();
    v40 = a2;
    v41 = v22;
    v42 = v40;
    sub_1BB6BBFA0(v52, v38, (uint64_t)v42, v41, v53, v42, (uint64_t)v7, &v58);
    sub_1BA6DD544((uint64_t)v7, v49, v8, v9, v36, 0);
    swift_bridgeObjectRelease();

    swift_release();
    return sub_1BA6DD544((uint64_t)v7, v49, v8, v9, v36, 0);
  }
  v24 = *(_QWORD *)(a4 + 16);
  if (!v24)
  {
LABEL_11:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
LABEL_12:
    v26 = objc_msgSend(v18, sel_identifier, v6, v8);
    v27 = sub_1BB8729A0();
    v28 = (uint64_t)v18;
    v30 = v29;

    v31 = v22;
    swift_retain();
    v32 = v22;
    v33 = a2;
    swift_unknownObjectRetain();
    sub_1BB6BBFA0(v27, v30, (uint64_t)v33, v32, v53, v33, v28, &v58);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    return swift_unknownObjectRelease_n();
  }
  v25 = 0;
  while ((*(_BYTE *)(a4 + v25 + 32) & 1) == 0)
  {
    if (v24 == ++v25)
      goto LABEL_11;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (UIAccessibilityIsReduceMotionEnabled())
    goto LABEL_12;
  v57[0] = v7;
  v57[1] = v6;
  v57[2] = v8;
  v57[3] = v9;
  v55[0] = v58;
  v55[1] = v59;
  v56[0] = *(_OWORD *)v60;
  *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)&v60[9];
  v54 = v22;
  sub_1BAA4C3EC((uint64_t)v57, a2, v55, a4, &v54);
  sub_1BA657D64();
  v43 = (void *)sub_1BB87345C();
  v44 = swift_allocObject();
  swift_weakInit();
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v18;
  *(_QWORD *)(v45 + 32) = a2;
  v46 = v59;
  *(_OWORD *)(v45 + 40) = v58;
  *(_OWORD *)(v45 + 56) = v46;
  *(_OWORD *)(v45 + 72) = *(_OWORD *)v60;
  *(_OWORD *)(v45 + 81) = *(_OWORD *)&v60[9];
  *(_QWORD *)(v45 + 104) = v22;
  v47 = v22;
  v48 = a2;
  swift_unknownObjectRetain();
  sub_1BB86EA1C();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BAA4C3EC(uint64_t a1, void *a2, __int128 *a3, uint64_t a4, void **a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  void *v25;
  void *v26;
  void (*v27)(_QWORD *, void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v38;
  uint64_t v39;
  void *v40;
  _QWORD v41[5];
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[3];

  v6 = v5;
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v39 = *(_QWORD *)(a1 + 24);
  v11 = a3[1];
  v45 = *a3;
  v46 = v11;
  v47[0] = a3[2];
  *(_OWORD *)((char *)v47 + 9) = *(__int128 *)((char *)a3 + 41);
  v40 = *a5;
  sub_1BA4C010C(v5 + 152, (uint64_t)v42);
  v12 = v43;
  v13 = v44;
  v38 = v8;
  v14 = objc_msgSend(v8, sel_identifier, __swift_project_boxed_opaque_existential_1(v42, v43));
  v15 = sub_1BB8729A0();
  v17 = v16;

  v18 = type metadata accessor for LayeredMediaLoader();
  v19 = (_QWORD *)swift_allocObject();
  v20 = type metadata accessor for LayeredMediaParser();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v15;
  v21[3] = v17;
  v21[4] = v10;
  v21[5] = v39;
  v19[5] = v20;
  v19[6] = &protocol witness table for LayeredMediaParser;
  v19[2] = v21;
  v41[3] = v18;
  v41[4] = &protocol witness table for LayeredMediaLoader;
  v41[0] = v19;
  v22 = *(_QWORD *)(a4 + 16);
  if (v22)
  {
    v23 = (_BYTE *)(a4 + 32);
    v24 = &unk_1E7268008;
    v25 = v38;
    v26 = a2;
    while (*v23 == 1)
    {
      ++v23;
      if (!--v22)
      {
        v24 = (void *)MEMORY[0x1E0DEE9D8];
        break;
      }
    }
  }
  else
  {
    v24 = (void *)MEMORY[0x1E0DEE9D8];
    v25 = v38;
    v26 = a2;
  }
  v27 = *(void (**)(_QWORD *, void *, uint64_t, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  v27(v41, v24, v12, v13);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v28 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  MEMORY[0x1E0C80A78](v28);
  type metadata accessor for LayeredMediaView(0);
  sub_1BB86EC14();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 32) = v9;
  v30 = v46;
  *(_OWORD *)(v29 + 72) = v45;
  *(_QWORD *)(v29 + 16) = v26;
  *(_QWORD *)(v29 + 24) = v25;
  *(_QWORD *)(v29 + 40) = v10;
  *(_QWORD *)(v29 + 48) = v39;
  *(_QWORD *)(v29 + 56) = v40;
  *(_QWORD *)(v29 + 64) = v6;
  *(_OWORD *)(v29 + 88) = v30;
  *(_OWORD *)(v29 + 104) = v47[0];
  *(_OWORD *)(v29 + 113) = *(_OWORD *)((char *)v47 + 9);
  v31 = v40;
  swift_retain();
  v32 = v26;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v33 = (void *)sub_1BB86E854();
  sub_1BB86E968();
  swift_release();
  swift_release();

  v34 = (void *)sub_1BB86E854();
  v35 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  return v35;
}

uint64_t sub_1BAA4C724(uint64_t a1, uint64_t a2, void *a3, void *a4, _OWORD *a5, void *a6)
{
  uint64_t result;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = (_QWORD *)result;
    v12 = objc_msgSend(a3, sel_identifier);
    v13 = sub_1BB8729A0();
    v15 = v14;

    v16 = a6;
    swift_retain();
    v17 = a4;
    swift_unknownObjectRetain();
    sub_1BB6BBFA0(v13, v15, (uint64_t)v17, a6, v11, v17, (uint64_t)a3, a5);
    swift_bridgeObjectRelease();

    swift_release_n();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BAA4C838(char *a1, void *a2, _QWORD *a3, void *a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  void *v27;
  id v28;
  id v29;
  _OWORD *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;

  v31 = a6;
  sub_1BA65805C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (_OWORD **)((char *)&v31 - v17);
  if (a2)
  {
    __swift_project_boxed_opaque_existential_1(a3 + 7, a3[10]);
    v32 = (char *)v15;
    *(_QWORD *)&v33 = a2;
    v19 = a2;
    v15 = (uint64_t *)v32;
    sub_1BB4975D4(a1, (void **)&v33);

  }
  v32 = a1;
  v20 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v20, sel_scale);
  v22 = v21;

  v23 = objc_msgSend(a4, sel_traitCollection);
  v24 = (char *)v18 + *(int *)(v13 + 24);
  v25 = sub_1BB86F550();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v24, 1, 1, v25);
  *v18 = v22;
  v18[1] = v23;
  sub_1BAA4D900((uint64_t)v18, (uint64_t)v15);
  v26(v12, 1, 1, v25);
  v35 = 0;
  v33 = 0u;
  v34 = 0u;
  v27 = (void *)swift_unknownObjectRetain();
  v28 = sub_1BB5B0C48(v27, v31, v15, (uint64_t)v12, (uint64_t)&v33);
  if (v28)
  {
    v29 = v28;
    *((_QWORD *)&v34 + 1) = type metadata accessor for ThumbnailProcessorRequest();
    v35 = sub_1BAA4D980();
    *(_QWORD *)&v33 = v29;
  }
  else
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
  }
  sub_1BA657DA0((uint64_t)&v33, a3 + 12, v32, 0, 0);
  sub_1BAA4D944((uint64_t)v18);
  return sub_1BA65DBBC((uint64_t)&v33, (unint64_t *)&qword_1ED3C2258, (unint64_t *)&qword_1ED3B0A08, MEMORY[0x1E0DBA438]);
}

uint64_t sub_1BAA4CACC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(void);
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED3D4438, (uint64_t)&type metadata for LayeredMediaLayer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86EC14();
  swift_retain();
  v4 = (void *)sub_1BB86E854();
  sub_1BA4AD288(0, &qword_1ED39DA08, (uint64_t)&type metadata for LayeredMediaLayerRenderable, (uint64_t (*)(_QWORD, uint64_t))v3);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v5 = (void *)sub_1BB86DE94();
  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v7;
  type metadata accessor for LayeredMediaView(0);
  swift_retain();
  v8 = sub_1BB86E974();
  swift_release();

  swift_release();
  return v8;
}

uint64_t sub_1BAA4CC14()
{
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BAA4CC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, int a12)
{
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  swift_retain();
  v19 = objc_msgSend(a6, sel_identifier);
  v20 = sub_1BB8729A0();
  v22 = v21;

  v23 = a10;
  swift_retain();
  v24 = a5;
  swift_retain();
  swift_retain();
  sub_1BB6BC1C8(v20, v22, a9, (uint64_t)v24, a10, a11, a12, v24, (uint64_t)sub_1BA4D7948, v18, a3, a4);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release_n();
  return swift_release();
}

void sub_1BAA4CDD4(id a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  _QWORD *v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35[5];

  if (a2)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 56), *(_QWORD *)(a3 + 80));
    v35[0] = a2;
    v15 = a2;
    sub_1BB4975F0(a1, v35);

  }
  objc_msgSend(a1, sel_setClipsToBounds_, 1);
  sub_1BB873594();
  objc_msgSend(a1, sel_setFrame_);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v17, sel_nativeBounds);
  v19 = v18;
  v21 = v20;

  objc_msgSend(a5, sel_bounds);
  v23 = v22;
  v25 = v24;
  v26 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v26, sel_scale);
  v28 = v27;

  v35[0] = v19;
  v35[1] = v21;
  v35[2] = v23;
  v35[3] = v25;
  v35[4] = v28;
  v29 = objc_msgSend(a1, sel_setAlpha_, 0.0);
  MEMORY[0x1E0C80A78](v29);
  sub_1BB86EC14();
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = a1;
  v30[3] = a6;
  v30[4] = a7;
  v31 = a1;
  swift_retain();
  v32 = (void *)sub_1BB86E854();
  type metadata accessor for ArticleThumbnailViewRenderer();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = a8;
  *(_QWORD *)(v33 + 24) = a9;
  swift_retain();
  v34 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BAA4D074(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1BB86F850();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BA89993C(a1 + 16, (uint64_t)&v17);
  if (!v18)
  {
    sub_1BA65DBBC((uint64_t)&v17, &qword_1ED3B0A00, (unint64_t *)&unk_1ED3B09F0, MEMORY[0x1E0DB9CB8]);
    goto LABEL_7;
  }
  sub_1BA4CECCC(&v17, (uint64_t)&v19);
  v22 = v6;
  __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
  sub_1BB86F838();
  v10 = sub_1BB870894();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    v15 = *(_OWORD *)(a3 + 16);
    v19 = *(_OWORD *)a3;
    v20 = v15;
    v21 = *(_QWORD *)(a3 + 32);
    return sub_1BA84B47C(a2, &v19);
  }
  if (qword_1ED39EA60 != -1)
    swift_once();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 56) = *(_QWORD *)(a3 + 32);
  type metadata accessor for LayeredMediaViewRenderer();
  v13 = a2;
  v14 = sub_1BB86EC08();
  swift_release();
  return v14;
}

id sub_1BAA4D29C(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD aBlock[3];
  void *v18;
  id (*v19)();
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_1BB86F850();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BA89993C(a2 + 16, (uint64_t)&v21);
  if (v22)
  {
    sub_1BA4CECCC(&v21, (uint64_t)aBlock);
    v23 = v7;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v18);
    sub_1BB86F844();
    v11 = sub_1BB870894();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if ((v11 & 1) == 0)
      return objc_msgSend(a3, sel_setAlpha_, 1.0);
  }
  else
  {
    sub_1BA65DBBC((uint64_t)&v21, &qword_1ED3B0A00, (unint64_t *)&unk_1ED3B09F0, MEMORY[0x1E0DB9CB8]);
  }
  v13 = (void *)objc_opt_self();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  v19 = sub_1BA899A20;
  v20 = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  v18 = &block_descriptor_15;
  v15 = _Block_copy(aBlock);
  v16 = a3;
  swift_release();
  objc_msgSend(v13, sel_animateWithDuration_animations_, v15, 0.15);
  _Block_release(v15);
  return (id)a4();
}

uint64_t sub_1BAA4D4B8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED39E0B0 != -1)
    swift_once();
  v0 = (id)qword_1ED4763D0;
  v1 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to display thumbnail with error %{public}@", 49, 2, &dword_1BA493000, v0, v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA4D604()
{
  uint64_t v0;

  sub_1BA65DBBC(v0 + 16, &qword_1ED3B0A00, (unint64_t *)&unk_1ED3B09F0, MEMORY[0x1E0DB9CB8]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAA4D670(uint64_t a1, void *a2, __int128 *a3, uint64_t a4, void **a5)
{
  return sub_1BAA4BE90(a1, a2, a3, a4, a5);
}

uint64_t sub_1BAA4D690()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAA4D6B4()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BAA4D6F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA4C724(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), (_OWORD *)(v1 + 40), *(void **)(v1 + 104));
}

uint64_t sub_1BAA4D714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1BAA4D748()
{
  uint64_t v0;

  return sub_1BAA4CACC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAA4D760()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA4D7A4()
{
  return sub_1BAA4CC14();
}

uint64_t sub_1BAA4D7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAA4CC98(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(void **)(v4 + 56), *(void **)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80));
}

uint64_t sub_1BAA4D804()
{
  uint64_t v0;

  return sub_1BAA4D074(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BAA4D820()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_1BAA4D84C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAA4D29C(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

uint64_t sub_1BAA4D868()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA4D88C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BAA4D8B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BAA4D8D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA4D900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageRequestOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA4D944(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImageRequestOptions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BAA4D980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CFF58;
  if (!qword_1ED3CFF58)
  {
    v1 = type metadata accessor for ThumbnailProcessorRequest();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ThumbnailProcessorRequest, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CFF58);
  }
  return result;
}

void sub_1BAA4DA00(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  double v21;
  double v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v31;

  v7 = v6;
  v12 = *a4;
  v13 = a4[1];
  v14 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BB4AB03C(3);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(a3 + 56) + 16 * v15;
      if (*(_BYTE *)(v17 + 8) == 3)
      {
        v18 = *(id *)v17;
        objc_msgSend(a2, sel_frame);
        sub_1BB8736F0();
        objc_msgSend(v18, sel_bounds);
        sub_1BB8736F0();
        v19 = objc_msgSend(v18, sel_layer);
        v20 = objc_msgSend(a2, sel_layer);
        objc_msgSend(v20, sel_cornerRadius);
        v22 = v21;

        objc_msgSend(v19, sel_setCornerRadius_, v22);
        v23 = objc_msgSend(v18, sel_layer);
        v24 = objc_msgSend(a2, sel_layer);
        v29 = a6;
        v25 = objc_msgSend(v24, sel_maskedCorners);

        objc_msgSend(v23, sel_setMaskedCorners_, v25);
        v26 = objc_msgSend(v18, sel_layer);
        v27 = objc_msgSend(a2, sel_layer);
        v28 = objc_msgSend(v27, sel_cornerCurve);

        objc_msgSend(v26, sel_setCornerCurve_, v28);
        sub_1BB87372C();
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
        v31 = v12;
        swift_retain();
        sub_1BA677D24(a1, v18, &v31, v13, a3, a5, v29);
        swift_release();

      }
    }
  }
}

void sub_1BAA4DC8C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  v9 = v8;
  v36 = a8;
  v37 = a5;
  v38 = a6;
  v35 = a1;
  v14 = type metadata accessor for FormatViewBackground.Mica(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BB4AB03C(4);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(a3 + 56) + 16 * v18;
      if (*(_BYTE *)(v20 + 8) == 4)
      {
        v21 = *(id *)v20;
        objc_msgSend(a2, sel_frame);
        sub_1BB8736F0();
        v22 = objc_msgSend(v21, sel_layer);
        v23 = objc_msgSend(a2, (SEL)&selRef_ne_stopPictureInPicture);
        objc_msgSend(v23, sel_cornerRadius);
        v25 = v24;

        objc_msgSend(v22, sel_setCornerRadius_, v25);
        v26 = objc_msgSend(v21, sel_layer);
        v27 = objc_msgSend(a2, sel_layer);
        v34 = a7;
        v28 = objc_msgSend(v27, sel_maskedCorners);

        objc_msgSend(v26, sel_setMaskedCorners_, v28);
        v29 = objc_msgSend(v21, sel_layer);
        v30 = objc_msgSend(a2, sel_layer);
        v31 = objc_msgSend(v30, sel_cornerCurve);

        objc_msgSend(v29, sel_setCornerCurve_, v31);
        sub_1BB87372C();
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 56), *(_QWORD *)(v9 + 80));
        v39 = *a4;
        sub_1BA4C2DD8((uint64_t)a4, (uint64_t)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FormatViewBackground.Mica);
        v32 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        v33 = swift_allocObject();
        sub_1BA5193C4((uint64_t)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, type metadata accessor for FormatViewBackground.Mica);
        swift_retain();
        sub_1BB185704(v35, (uint64_t)v21, &v39, v37, v38, (uint64_t)sub_1BAA4E14C, v33, v34, v36);

        swift_release();
        swift_release();
      }
    }
  }
}

uint64_t sub_1BAA4DFA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v10 = *(_BYTE *)(a1 + 152);
  sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  sub_1BAA4E044(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1BAA4E044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    return swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA5DCC4C(a7);
}

uint64_t sub_1BAA4E0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for FormatViewBackground.Mica(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_1BB86FBD4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BAA4E14C()
{
  type metadata accessor for FormatViewBackground.Mica(0);
  return sub_1BB87153C();
}

double GeoLocation.latitude.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double GeoLocation.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

NewsFeed::GeoLocation __swiftcall GeoLocation.init(latitude:longitude:)(Swift::Double latitude, Swift::Double longitude)
{
  Swift::Double *v2;
  NewsFeed::GeoLocation result;

  *v2 = latitude;
  v2[1] = longitude;
  result.longitude = longitude;
  result.latitude = latitude;
  return result;
}

BOOL static GeoLocation.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GeoLocation.hash(into:)()
{
  sub_1BB8745FC();
  return sub_1BB8745FC();
}

uint64_t sub_1BAA4E21C()
{
  _BYTE *v0;

  if (*v0)
    return 0x64757469676E6F6CLL;
  else
    return 0x656475746974616CLL;
}

uint64_t sub_1BAA4E25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA4EA74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA4E280()
{
  sub_1BAA4E3F4();
  return sub_1BB874710();
}

uint64_t sub_1BAA4E2A8()
{
  sub_1BAA4E3F4();
  return sub_1BB87471C();
}

uint64_t GeoLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BAA4E6BC(0, &qword_1EF2AE060, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA4E3F4();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB874194();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BB874194();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAA4E3F4()
{
  unint64_t result;

  result = qword_1ED3A54A8;
  if (!qword_1ED3A54A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8940B0, &type metadata for GeoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54A8);
  }
  return result;
}

uint64_t GeoLocation.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  return sub_1BB874608();
}

uint64_t GeoLocation.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1BAA4E6BC(0, &qword_1ED3AB3F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA4E3F4();
  sub_1BB87468C();
  if (!v2)
  {
    v17 = 0;
    sub_1BB8740B0();
    v11 = v10;
    v16 = 1;
    sub_1BB8740B0();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAA4E5F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return GeoLocation.init(from:)(a1, a2);
}

uint64_t sub_1BAA4E604(_QWORD *a1)
{
  return GeoLocation.encode(to:)(a1);
}

uint64_t sub_1BAA4E61C()
{
  sub_1BB8745FC();
  return sub_1BB8745FC();
}

uint64_t sub_1BAA4E660()
{
  sub_1BB8745CC();
  sub_1BB8745FC();
  sub_1BB8745FC();
  return sub_1BB874608();
}

void sub_1BAA4E6BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAA4E3F4();
    v7 = a3(a1, &type metadata for GeoLocation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

NewsFeed::GeoLocation __swiftcall GeoLocation.init(from:)(CLLocation from)
{
  _QWORD *v1;
  Class isa;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  NewsFeed::GeoLocation result;

  isa = from.super.isa;
  v3 = v1;
  -[objc_class coordinate](from.super.isa, sel_coordinate);
  v5 = v4;
  -[objc_class coordinate](isa, sel_coordinate);
  v7 = v6;

  *v3 = v5;
  v3[1] = v7;
  result.longitude = v9;
  result.latitude = v8;
  return result;
}

uint64_t GeoLocation.identifier.getter()
{
  _QWORD *v0;

  sub_1BB872FF4();
  sub_1BB872AFC(v0);
  sub_1BB872FF4();
  return 0;
}

unint64_t sub_1BAA4E7F8()
{
  unint64_t result;

  result = qword_1EF2AE068;
  if (!qword_1EF2AE068)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GeoLocation, &type metadata for GeoLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2AE068);
  }
  return result;
}

uint64_t sub_1BAA4E83C()
{
  _QWORD *v0;

  sub_1BB872FF4();
  sub_1BB872AFC(v0);
  sub_1BB872FF4();
  return 0;
}

ValueMetadata *type metadata accessor for GeoLocation()
{
  return &type metadata for GeoLocation;
}

uint64_t storeEnumTagSinglePayload for GeoLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA4E91C + 4 * byte_1BB893EED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA4E950 + 4 * byte_1BB893EE8[v4]))();
}

uint64_t sub_1BAA4E950(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA4E958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA4E960);
  return result;
}

uint64_t sub_1BAA4E96C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA4E974);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA4E978(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA4E980(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeoLocation.CodingKeys()
{
  return &type metadata for GeoLocation.CodingKeys;
}

unint64_t sub_1BAA4E9A0()
{
  unint64_t result;

  result = qword_1EF2AE070;
  if (!qword_1EF2AE070)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894088, &type metadata for GeoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE070);
  }
  return result;
}

unint64_t sub_1BAA4E9E8()
{
  unint64_t result;

  result = qword_1ED3A54B8;
  if (!qword_1ED3A54B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB893FF8, &type metadata for GeoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54B8);
  }
  return result;
}

unint64_t sub_1BAA4EA30()
{
  unint64_t result;

  result = qword_1ED3A54B0;
  if (!qword_1ED3A54B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894020, &type metadata for GeoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54B0);
  }
  return result;
}

uint64_t sub_1BAA4EA74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAA4EB70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BAA4EC18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;

  v5 = (_QWORD *)*v2;
  v6 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)((char *)v2 + v5[15]) + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData;
  swift_beginAccess();
  sub_1BAA4F898(v9, (uint64_t)v8);
  v10 = (*(uint64_t (**)(char *, _QWORD))(v5[11] + 40))(v8, v5[10]);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v14 = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = MEMORY[0x1E0DB8020];
  sub_1BA8678F0(0, (unint64_t *)&qword_1ED3A3DC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1BAA4F858(&qword_1ED3A3DB8, (unint64_t *)&qword_1ED3A3DC0, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1BB86FEC8();
  swift_release();
  return swift_release();
}

uint64_t sub_1BAA4ED94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(void);

  v5 = *v2;
  v6 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120)) + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData;
  swift_beginAccess();
  sub_1BAA4F7C0(a1, v6);
  swift_endAccess();
  v9 = v5 + 80;
  v8 = *(_QWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v9 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v8, v7);
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v8;
  v11[3] = v7;
  v11[4] = v10;
  v12 = MEMORY[0x1E0DB8020];
  sub_1BA8678F0(0, (unint64_t *)&qword_1ED3A3DC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB8020]);
  sub_1BAA4F858(&qword_1ED3A3DB8, (unint64_t *)&qword_1ED3A3DC0, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB8030]);
  swift_retain();
  sub_1BB86FEC8();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BAA4EF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = MEMORY[0x1BCCE5D40](result + 16);
    if (v7)
    {
      v9 = v7;
      type metadata accessor for FormatInteractor(0, a3, a4, v8);
      swift_retain();
      sub_1BB35A984(v9);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BAA4EFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1BB86FE74();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DB7FA0], v4, v6);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_retain();
  sub_1BB86FED4();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1BAA4F0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16)(void);
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  sub_1BA8678F0(0, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v22 - v5;
  sub_1BAA4F414();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatAutoscrollPivotPoint();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)) + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData;
  swift_beginAccess();
  result = type metadata accessor for FormatPluginData();
  if ((*(_BYTE *)(v14 + *(int *)(result + 48)) & 1) == 0)
  {
    v22[0] = (uint64_t)v13;
    v22[1] = (uint64_t)__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136)), *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136) + 24));
    sub_1BB86FEB0();
    v23 = v3;
    v24 = v25;
    v16 = MEMORY[0x1E0DB80B8];
    sub_1BA8678F0(0, (unint64_t *)&qword_1ED3A3DE0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB80B8]);
    sub_1BAA4F858(&qword_1ED3A3DD8, (unint64_t *)&qword_1ED3A3DE0, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB80D0]);
    sub_1BB870420();
    swift_release();
    sub_1BB1C1E34((uint64_t)v6, v9);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      v17 = (uint64_t (*)(_QWORD))sub_1BAA4F414;
      v18 = (uint64_t)v9;
    }
    else
    {
      v19 = v22[0];
      sub_1BAA4F468((uint64_t)v9, v22[0]);
      v20 = MEMORY[0x1BCCE5D40](v1 + 16);
      if (v20)
      {
        v21 = (void *)MEMORY[0x1BCCE5D40](v20 + 16);
        if (v21)
        {
          sub_1BAA4F4AC(v19, v21);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      v17 = (uint64_t (*)(_QWORD))type metadata accessor for FormatAutoscrollPivotPoint;
      v18 = v19;
    }
    return sub_1BA4A2E80(v18, v17);
  }
  return result;
}

uint64_t *sub_1BAA4F328()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA8FD860((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  return v0;
}

uint64_t sub_1BAA4F3A4()
{
  sub_1BAA4F328();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatInteractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatInteractor);
}

uint64_t sub_1BAA4F3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void sub_1BAA4F414()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ADAF8)
  {
    type metadata accessor for FormatAutoscrollPivotPoint();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ADAF8);
  }
}

uint64_t sub_1BAA4F468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatAutoscrollPivotPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAA4F4AC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  void *v14;
  id v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double MaxX;
  id v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  id v35;
  void *v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  double v46;
  double v47;
  double v48;
  CGFloat rect;
  void *recta;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  sub_1BB8707BC();
  v3 = (void *)sub_1BB870438();
  swift_release();
  v4 = (void *)sub_1BB86CB8C();
  v5 = objc_msgSend(v3, sel_layoutAttributesForItemAtIndexPath_, v4);

  if (v5)
  {
    objc_msgSend(v5, sel_frame);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    sub_1BB8707BC();
    v14 = (void *)sub_1BB870438();
    swift_release();
    v15 = objc_msgSend(v14, sel_collectionViewLayout);

    objc_msgSend(v15, sel_collectionViewContentSize);
    v48 = v16;

    sub_1BB8707BC();
    v17 = (void *)sub_1BB870438();
    swift_release();
    objc_msgSend(v17, sel_layoutMargins);
    v46 = v19;
    v47 = v18;

    v20 = v7;
    v51.origin.x = v7;
    v21 = v9;
    v51.origin.y = v9;
    v22 = v11;
    v51.size.width = v11;
    rect = v13;
    v51.size.height = v13;
    MaxX = CGRectGetMaxX(v51);
    v24 = objc_msgSend(a2, sel_view);
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v24, sel_frame);
      v27 = v26;
      v29 = v28;
      v31 = v30;
      v33 = v32;

      v52.origin.x = v27;
      v52.origin.y = v29;
      v52.size.width = v31;
      v52.size.height = v33;
      if (v48 >= MaxX + CGRectGetWidth(v52) * 0.5)
      {
        v55.origin.x = v20;
        v55.origin.y = v21;
        v55.size.width = v22;
        v55.size.height = rect;
        v45 = CGRectGetMinX(v55) - v47;
        goto LABEL_8;
      }
      v53.origin.x = v20;
      v53.origin.y = v21;
      v53.size.width = v22;
      v53.size.height = rect;
      v34 = CGRectGetMaxX(v53);
      v35 = objc_msgSend(a2, sel_view);
      if (v35)
      {
        v36 = v35;
        objc_msgSend(v35, sel_frame);
        v38 = v37;
        v40 = v39;
        v42 = v41;
        v44 = v43;

        v54.origin.x = v38;
        v54.origin.y = v40;
        v54.size.width = v42;
        v54.size.height = v44;
        v45 = v46 + v34 - CGRectGetWidth(v54);
LABEL_8:
        sub_1BB8707BC();
        recta = (void *)sub_1BB870438();
        swift_release();
        objc_msgSend(recta, sel_setContentOffset_, v45, 0.0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1BAA4F79C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA4F7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA4F804()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAA4F828()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA4F84C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA4EF14(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BAA4F858(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA8678F0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAA4F898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA4F8E0@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = (uint64_t *)*v2;
  v14 = 10;
  v15 = 0xE100000000000000;
  sub_1BAA4FE00(a1, (uint64_t)v11);
  v5 = v12;
  if (v12)
  {
    v6 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1BAA4FE98((uint64_t)v11);
  }
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  swift_beginAccess();
  sub_1BB872AFC(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  a2[3] = v4;
  a2[4] = (uint64_t *)&off_1E72897E0;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1BAA4F9FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v7 = (uint64_t *)*v5;
  v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v8 || a1 == a3 && a2 == a4 || (sub_1BB874398() & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB872AFC(v9);
    swift_endAccess();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v11);
    sub_1BB872AFC(v12);
    swift_beginAccess();
    sub_1BB872AFC(v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  a5[3] = v7;
  a5[4] = (uint64_t *)&off_1E72897E0;
  *a5 = v5;
  return swift_retain();
}

uint64_t sub_1BAA4FB44()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharingPlainTextBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1BAA4FB88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0xE000000000000000;
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BAA4FC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v3;
  swift_beginAccess();
  sub_1BB872AFC(v8);
  swift_endAccess();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1BAA4FC7C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v7 = *v3;
  sub_1BB872AFC((_QWORD *)0xA);
  sub_1BB872AFC(v8);
  swift_beginAccess();
  sub_1BB872AFC(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1BAA4FD34@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1BAA4F8E0(a1, a2);
}

uint64_t sub_1BAA4FD54@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  return sub_1BAA4F9FC(a1, a2, a3, a4, a5);
}

uint64_t sub_1BAA4FD74@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v3;
  swift_beginAccess();
  sub_1BB872AFC(v8);
  swift_endAccess();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1BAA4FE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA4FE44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAA4FE44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9C18)
  {
    sub_1BA8E3D30();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9C18);
  }
}

uint64_t sub_1BAA4FE98(uint64_t a1)
{
  uint64_t v2;

  sub_1BAA4FE44();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA4FEDC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];

  if (!*(_BYTE *)(v1 + 24))
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    v7 = 6;
    sub_1BA690C00(v5, v4, v3, 0);
    result = sub_1BB6B84D4(v8, &v7);
    if (!v2)
    {
      v6 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAA4FF9C(uint64_t a1)
{
  return sub_1BAA4FEDC(a1);
}

void FormatURLBinding.bind(binder:context:)()
{
  sub_1BAA50304();
}

void sub_1BAA4FFC8()
{
  sub_1BAA50304();
}

void _s8NewsFeed16FormatURLBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1BAA50028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  BOOL v14;
  char v15;

  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA690C00(v0, v3, v2, v7);
    sub_1BA5A7EF8(v1, v5, v4, v6);
    v8 = v0;
    v9 = v3;
    v10 = v2;
    v11 = v7;
LABEL_3:
    sub_1BA5A7EF8(v8, v9, v10, v11);
    return 0;
  }
  v14 = v1 == v0 && v5 == v3;
  if (!v14 && (sub_1BB874398() & 1) == 0)
  {
    sub_1BA690C00(v1, v5, v4, 0);
    sub_1BA690C00(v0, v3, v2, 0);
    sub_1BA5A7EF8(v1, v5, v4, 0);
    v8 = v0;
    v9 = v3;
    v10 = v2;
    v11 = 0;
    goto LABEL_3;
  }
  sub_1BA690C00(v0, v3, v2, 0);
  sub_1BA690C00(v1, v5, v4, 0);
  sub_1BA690C00(v1, v5, v4, 0);
  sub_1BA690C00(v0, v3, v2, 0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BA8869D0(v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5A7EF8(v1, v5, v4, 0);
  sub_1BA5A7EF8(v0, v3, v2, 0);
  sub_1BA5A7EF8(v0, v3, v2, 0);
  sub_1BA5A7EF8(v1, v5, v4, 0);
  return (v15 & 1) != 0;
}

void sub_1BAA50304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)(v0 + 24))
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA98DC18((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BAA50400(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA50424();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA50424()
{
  unint64_t result;

  result = qword_1EF2AE118;
  if (!qword_1EF2AE118)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLBinding, &type metadata for FormatURLBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2AE118);
  }
  return result;
}

unint64_t sub_1BAA50468(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E3C48();
  a1[2] = sub_1BA5A8098();
  result = sub_1BAA5049C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA5049C()
{
  unint64_t result;

  result = qword_1EF2AE120;
  if (!qword_1EF2AE120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatURLBinding, &type metadata for FormatURLBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2AE120);
  }
  return result;
}

uint64_t destroy for FormatURLBinding(uint64_t a1)
{
  return sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatURLBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA690C00(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatURLBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA690C00(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA5A7EF8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatURLBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA5A7EF8(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatURLBinding()
{
  return &type metadata for FormatURLBinding;
}

id sub_1BAA50618(void *a1, double a2, double a3, double a4, double a5)
{
  double v8;
  double v9;
  long double v10;
  __double2 v11;
  __double2 v12;

  v8 = a4 - a2;
  if (v8 >= 0.0)
    v9 = 0.0;
  else
    v9 = 3.14159265;
  v10 = 3.14159265 - (v9 + atan((a5 - a3) / v8));
  v11 = __sincos_stret(v10 + 0.785398163);
  v12 = __sincos_stret(v10 + -0.785398163);
  objc_msgSend(a1, sel_moveToPoint_, a4, a5);
  objc_msgSend(a1, sel_addLineToPoint_, v11.__cosval * 8.0 + a4, a5 - v11.__sinval * 8.0);
  objc_msgSend(a1, sel_moveToPoint_, a4, a5);
  return objc_msgSend(a1, sel_addLineToPoint_, v12.__cosval * 8.0 + a4, a5 - v12.__sinval * 8.0);
}

id sub_1BAA50720(double a1, double a2, double a3, double a4)
{
  id v8;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v8, sel_moveToPoint_, a1, a2);
  objc_msgSend(v8, sel_addLineToPoint_, a3, a4);
  if (a2 == a4)
  {
    sub_1BB873780();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1BB873780();
    objc_msgSend(v8, sel_addLineToPoint_);
    sub_1BB873780();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1BB873780();
  }
  else
  {
    sub_1BB873774();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1BB873774();
    objc_msgSend(v8, sel_addLineToPoint_);
    sub_1BB873774();
    objc_msgSend(v8, sel_moveToPoint_);
    sub_1BB873774();
  }
  objc_msgSend(v8, sel_addLineToPoint_);
  return v8;
}

NewsFeed::GroupLayoutPriority_optional __swiftcall GroupLayoutPriority.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (NewsFeed::GroupLayoutPriority_optional)rawValue;
}

uint64_t GroupLayoutPriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

NewsFeed::GroupLayoutPriority_optional sub_1BAA508B4(Swift::Int *a1)
{
  return GroupLayoutPriority.init(rawValue:)(*a1);
}

BOOL static GroupLayoutPriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1BAA508D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1BAA508E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1BAA508F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1BAA5090C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t GroupLayoutPriority.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA50948 + 4 * byte_1BB894350[*v0]))(1701736270, 0xE400000000000000);
}

uint64_t sub_1BAA50948()
{
  return 7827276;
}

uint64_t sub_1BAA50958()
{
  return 1751607624;
}

uint64_t sub_1BAA50964()
{
  return 0x756F72636964754CLL;
}

uint64_t sub_1BAA50980()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA509A8 + 4 * byte_1BB894354[*v0]))(1701736270, 0xE400000000000000);
}

uint64_t sub_1BAA509A8()
{
  return 7827276;
}

uint64_t sub_1BAA509B8()
{
  return 1751607624;
}

uint64_t sub_1BAA509C4()
{
  return 0x756F72636964754CLL;
}

uint64_t storeEnumTagSinglePayload for GroupLayoutPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAA50A2C + 4 * byte_1BB89435D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAA50A60 + 4 * byte_1BB894358[v4]))();
}

uint64_t sub_1BAA50A60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA50A68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA50A70);
  return result;
}

uint64_t sub_1BAA50A7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA50A84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAA50A88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA50A90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutPriority()
{
  return &type metadata for GroupLayoutPriority;
}

uint64_t sub_1BAA50AAC(void *a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  id v5;
  unint64_t v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[24];
  uint64_t v21;

  v3 = (char *)objc_msgSend(*(id *)(v1 + 56), sel_cachedSubscription);
  if (objc_getAssociatedObject(v3, v3 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v18, (uint64_t)v20);
  if (!v21)
  {
    sub_1BA6EDA74((uint64_t)v20);
    goto LABEL_9;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v4 = 0;
    v6 = 0;
    goto LABEL_10;
  }
  v4 = v17;
  v5 = objc_msgSend(v17, sel_integerValue);
  if (v5 == (id)-1)
  {

    goto LABEL_22;
  }
  v6 = (unint64_t)v5;
LABEL_10:
  if (objc_getAssociatedObject(v3, (const void *)~v6))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_1BA78DE28();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v17;
      v8 = objc_msgSend(v7, sel_integerValue);

      if (((v8 ^ v6) & 1) != 0)
        goto LABEL_22;
      goto LABEL_19;
    }
  }
  else
  {
    sub_1BA6EDA74((uint64_t)v20);
  }

  if ((v6 & 1) != 0)
  {
LABEL_22:
    v15 = 1;
    return v15 & 1;
  }
LABEL_19:
  if (!objc_msgSend(a1, sel_isPaid))
    goto LABEL_22;
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v9);
  v11 = objc_msgSend(a1, sel_identifier);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 8))(v12, v14, v9);
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_1BAA50CF4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleTeaserAccessArbiter()
{
  return objc_opt_self();
}

uint64_t sub_1BAA50D40(void *a1)
{
  return sub_1BAA50AAC(a1) & 1;
}

uint64_t PuzzleAutomation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleAutomation.accessState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t PuzzleAutomation.init(puzzle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v5 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 72);
  swift_bridgeObjectRetain();
  result = sub_1BA93EBE8(a1);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v6;
  return result;
}

uint64_t PuzzleAutomation.automationType.getter()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1BAA50E00()
{
  _BYTE *v0;

  if (*v0)
    return 0x7453737365636361;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BAA50E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA51554(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA50E6C()
{
  sub_1BAA51004();
  return sub_1BB874710();
}

uint64_t sub_1BAA50E94()
{
  sub_1BAA51004();
  return sub_1BB87471C();
}

uint64_t PuzzleAutomation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1BAA51234(0, &qword_1EF2AE1D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA51004();
  sub_1BB8746C8();
  v14 = 0;
  v8 = v10[1];
  sub_1BB87417C();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1BAA51048();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAA51004()
{
  unint64_t result;

  result = qword_1EF2AE1E0;
  if (!qword_1EF2AE1E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894694, &type metadata for PuzzleAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE1E0);
  }
  return result;
}

unint64_t sub_1BAA51048()
{
  unint64_t result;

  result = qword_1EF2AE1E8;
  if (!qword_1EF2AE1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessLevel, &type metadata for PuzzleAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EF2AE1E8);
  }
  return result;
}

uint64_t PuzzleAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1BAA51234(0, &qword_1EF2AE1F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA51004();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v16 = 1;
  sub_1BAA51290();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1BAA51234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAA51004();
    v7 = a3(a1, &type metadata for PuzzleAutomation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAA51290()
{
  unint64_t result;

  result = qword_1EF2AE1F8;
  if (!qword_1EF2AE1F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessLevel, &type metadata for PuzzleAccessLevel);
    atomic_store(result, (unint64_t *)&qword_1EF2AE1F8);
  }
  return result;
}

unint64_t sub_1BAA512D8()
{
  unint64_t result;

  result = qword_1EF2AE200;
  if (!qword_1EF2AE200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAutomation, &type metadata for PuzzleAutomation);
    atomic_store(result, (unint64_t *)&qword_1EF2AE200);
  }
  return result;
}

unint64_t sub_1BAA51320()
{
  unint64_t result;

  result = qword_1EF2AE208;
  if (!qword_1EF2AE208)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAutomation, &type metadata for PuzzleAutomation);
    atomic_store(result, (unint64_t *)&qword_1EF2AE208);
  }
  return result;
}

uint64_t sub_1BAA51364()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1BAA51378@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleAutomation.init(from:)(a1, a2);
}

uint64_t sub_1BAA5138C(_QWORD *a1)
{
  return PuzzleAutomation.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PuzzleAutomation()
{
  return &type metadata for PuzzleAutomation;
}

uint64_t storeEnumTagSinglePayload for PuzzleAutomation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA513FC + 4 * byte_1BB894525[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA51430 + 4 * byte_1BB894520[v4]))();
}

uint64_t sub_1BAA51430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA51438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA51440);
  return result;
}

uint64_t sub_1BAA5144C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA51454);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA51458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA51460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAutomation.CodingKeys()
{
  return &type metadata for PuzzleAutomation.CodingKeys;
}

unint64_t sub_1BAA51480()
{
  unint64_t result;

  result = qword_1EF2AE210;
  if (!qword_1EF2AE210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89466C, &type metadata for PuzzleAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE210);
  }
  return result;
}

unint64_t sub_1BAA514C8()
{
  unint64_t result;

  result = qword_1EF2AE218;
  if (!qword_1EF2AE218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8945DC, &type metadata for PuzzleAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE218);
  }
  return result;
}

unint64_t sub_1BAA51510()
{
  unint64_t result;

  result = qword_1EF2AE220;
  if (!qword_1EF2AE220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894604, &type metadata for PuzzleAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE220);
  }
  return result;
}

uint64_t sub_1BAA51554(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7453737365636361 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void FormatPropertyValue.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[2];

  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v8 - v6;
  if ((~*v1 & 0xF000000000000007) != 0)
  {
    v8[0] = *v1;
    FormatOptionValue.encode(to:)(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA6B8518();
    sub_1BB8746C8();
    sub_1BAA519E0();
    v8[0] = 0;
    v8[1] = 0;
    sub_1BB8741AC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1BAA51794()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA517EC()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAA5180C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

void sub_1BAA51860(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F686563616C70;
  a1[1] = 0xEB00000000726564;
}

uint64_t sub_1BAA51884()
{
  sub_1BA499E74();
  return sub_1BB872D0C();
}

void sub_1BAA518D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251B18;
}

void sub_1BAA518E0(_QWORD *a1)
{
  FormatPropertyValue.encode(to:)(a1);
}

uint64_t _s8NewsFeed19FormatPropertyValueO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  v4 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v4 != 0xF000000000000007)
    {
      v7 = *a2;
      v8 = v2;
      sub_1BA5E7FF4(v3);
      sub_1BA5E7FF4(v2);
      sub_1BA5E7FF4(v2);
      sub_1BA5E7FF4(v3);
      v5 = static FormatOptionValue.== infix(_:_:)(&v8, (unint64_t *)&v7);
      sub_1BA5E800C(v2);
      sub_1BA5E800C(v3);
      sub_1BA5E800C(v3);
      sub_1BA5E800C(v2);
      return v5 & 1;
    }
    goto LABEL_5;
  }
  if (v4 != 0xF000000000000007)
  {
LABEL_5:
    sub_1BA5E7FF4(*a1);
    sub_1BA5E7FF4(v3);
    sub_1BA5E800C(v2);
    sub_1BA5E800C(v3);
    v5 = 0;
    return v5 & 1;
  }
  sub_1BA5E800C(*a1);
  sub_1BA5E800C(v3);
  v5 = 1;
  return v5 & 1;
}

unint64_t sub_1BAA519E0()
{
  unint64_t result;

  result = qword_1ED39B540;
  if (!qword_1ED39B540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894890, &type metadata for FormatPropertyValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39B540);
  }
  return result;
}

unint64_t sub_1BAA51A24(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E8024();
  a1[2] = sub_1BA90BED8();
  result = sub_1BAA51A58();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA51A58()
{
  unint64_t result;

  result = qword_1EF2AE228;
  if (!qword_1EF2AE228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPropertyValue, &type metadata for FormatPropertyValue);
    atomic_store(result, (unint64_t *)&qword_1EF2AE228);
  }
  return result;
}

uint64_t *assignWithCopy for FormatPropertyValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int v4;

  v3 = *a2;
  v4 = (((unint64_t)*a2 >> 60) & 0x8F | (16 * (*a2 & 7))) ^ 0x7E;
  if (((((unint64_t)*a1 >> 60) & 0x8F | (16 * (*a1 & 7))) ^ 0x7E) < 0x72)
  {
    *a1 = v3;
    if (v4 >= 0x72)
      swift_retain();
  }
  else if (v4 < 0x72)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v3;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for FormatPropertyValue(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if ((((*a1 >> 60) & 0x8F | (16 * (*a1 & 7))) ^ 0x7E) < 0x72)
    goto LABEL_5;
  if ((((v3 >> 60) & 0x8F | (16 * (v3 & 7))) ^ 0x7E) < 0x72)
  {
    swift_release();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t sub_1BAA51BA8(_QWORD *a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (*a1 >> 60) & 0x8F | (16 * (*a1 & 7));
  v2 = v1 ^ 0x7E;
  v3 = 128 - v1;
  if (v2 >= 0x72)
    return 0;
  else
    return v3;
}

unint64_t *sub_1BAA51BCC(unint64_t *result, unsigned int a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 > 0x72)
  {
    v3 = a2 - 115;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
    v3 = (v2 | (v2 << 57)) & 0xF000000000000007;
  }
  *result = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatPropertyValue.CodingType()
{
  return &type metadata for FormatPropertyValue.CodingType;
}

unint64_t sub_1BAA51C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AE230;
  if (!qword_1EF2AE230)
  {
    sub_1BAA51C58();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AE230);
  }
  return result;
}

void sub_1BAA51C58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AE238)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AE238);
  }
}

unint64_t sub_1BAA51CB0()
{
  unint64_t result;

  result = qword_1EF2AE240;
  if (!qword_1EF2AE240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894868, &type metadata for FormatPropertyValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE240);
  }
  return result;
}

uint64_t sub_1BAA51CF4()
{
  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA51D40(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;

  sub_1BA682148(a1, a2);
  sub_1BB872AFC(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA51F14()
{
  _QWORD *v0;

  sub_1BB87420C();
  sub_1BB872AFC(v0);
  return swift_bridgeObjectRelease();
}

void sub_1BAA51F70(uint64_t a1)
{
  _BYTE v2[8];
  _BYTE v3[40];

  sub_1BAA5ADC8(a1, (uint64_t)v2);
  sub_1BAA5ADC8(a1, (uint64_t)v3);
  __asm { BR              X11 }
}

uint64_t sub_1BAA51FD0()
{
  _QWORD *v0;

  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  return swift_bridgeObjectRelease();
}

void sub_1BAA52018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,unsigned __int8 a21)
{
  uint64_t v21;
  uint64_t v22;
  int v23;
  _QWORD *v24;
  _QWORD *v25;

  v23 = a21 >> 6;
  if (v23)
  {
    if (v23 != 1)
      goto LABEL_6;
    *(_QWORD *)(v22 - 112) = 0;
    *(_QWORD *)(v22 - 104) = 0xE000000000000000;
    sub_1BB872AFC((_QWORD *)0xE000000000000000);
    sub_1BAA51D40(a19, a20);
  }
  else
  {
    *(_QWORD *)(v22 - 112) = 0x28746F6C73;
    *(_QWORD *)(v22 - 104) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v25);
    sub_1BAA5AE04(v21);
  }
  sub_1BB872AFC(v24);
LABEL_6:
  JUMPOUT(0x1BAA51FE8);
}

void sub_1BAA52294(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BAA522D4()
{
  _QWORD *v0;

  sub_1BA7114A0();
  sub_1BB873ABC();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA52384(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD);
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1BB8730FC();
  if (!v20)
    return sub_1BB872E68();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1BB872748();
  v34 = sub_1BB873E10();
  sub_1BB873DC8();
  v37 = v8;
  sub_1BB8730D8();
  if (v21 < 0)
  {
LABEL_13:
    __break(1u);
    JUMPOUT(0x1BAA52674);
  }
  v22 = v21;
  v35 = v16;
  while (1)
  {
    if (!v22)
    {
      __break(1u);
      goto LABEL_13;
    }
    v41 = v22;
    v23 = (void (*)(char *, _QWORD))sub_1BB873198();
    v24 = *(void (**)(char *))(v11 + 16);
    v25 = v11;
    v26 = v36;
    v24(v14);
    v23(v43, 0);
    v27 = v42;
    v38(v14, v40);
    if (v27)
      break;
    v42 = 0;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v26);
    sub_1BB873DF8();
    sub_1BB873120();
    v22 = v41 - 1;
    v11 = v25;
    if (v41 == 1)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
      return v44;
    }
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
}

uint64_t static FeedGroupEmitterRule.cursorKind(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BAA52754(a1, a2, a3, a4);
}

uint64_t static FeedGroupEmitterRule.notCursorKind(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1BAA52754(a1, a2, a3, a4);
}

uint64_t sub_1BAA52754@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;

  v7 = *a1;
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED39DC20, (uint64_t)&type metadata for FeedCursorKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_BYTE *)(inited + 32) = v7;
  v9 = sub_1BA86325C(inited);
  swift_setDeallocating();
  *a4 = v9;
  type metadata accessor for FeedGroupEmitterRule(0, a2, a3, v10);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BAA52808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(void);
  char v13;
  uint64_t v15;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v15 - v9;
  type metadata accessor for FeedCursorGroup(0, a3, a4, v11);
  v12 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v12();
  swift_getAssociatedConformanceWitness();
  v13 = sub_1BB872958();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return v13 & 1;
}

uint64_t sub_1BAA529B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1BB86DEE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAA52AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(void);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a3;
  v27 = a2;
  v6 = type metadata accessor for FeedCursorGroup(0, a4, a5, a4);
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v24 - v12;
  v14 = a1;
  v15 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v15();
  swift_getAssociatedConformanceWitness();
  v16 = sub_1BB872958();
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18 = v26;
  v17(v13, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v8, v14, v6);
  if ((v16 & 1) != 0)
  {
    v19 = (uint64_t *)&v8[*(int *)(v6 + 40)];
    v20 = *v19;
    v21 = v19[1];
    swift_bridgeObjectRetain();
    v22 = sub_1BA761FE4(v20, v21, v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return v22 & 1;
}

uint64_t sub_1BAA52D30(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(void);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  char v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t);
  void (*v66)(uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v89 = a2;
  v81 = a3;
  v4 = *a3;
  v5 = sub_1BB86C8B0();
  v6 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v85 = *(_QWORD *)(v5 - 8);
  v86 = v5;
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5266EC();
  v83 = v8;
  MEMORY[0x1E0C80A78](v8);
  v84 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v6);
  MEMORY[0x1E0C80A78](v10);
  v70 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v82 = (char *)&v66 - v13;
  MEMORY[0x1E0C80A78](v14);
  v88 = (uint64_t)&v66 - v15;
  v17 = *(_QWORD *)(v4 + 80);
  v16 = *(_QWORD *)(v4 + 88);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v75 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v77 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v73 = (char *)&v66 - v20;
  v76 = swift_checkMetadataState();
  v72 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v74 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v71 = (char *)&v66 - v23;
  v25 = type metadata accessor for FeedCursorGroup(0, v17, v16, v24);
  v90 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v66 - v26;
  swift_getAssociatedTypeWitness();
  v80 = v16;
  v87 = v17;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v28 = swift_getAssociatedConformanceWitness();
  v29 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v66 - v31;
  v33 = a1;
  v34 = *(void (**)(void))(v28 + 64);
  swift_checkMetadataState();
  v34();
  swift_getAssociatedConformanceWitness();
  LOBYTE(v4) = sub_1BB872958();
  v35 = v32;
  v36 = v90;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v27, v33, v25);
  if ((v4 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v25);
LABEL_9:
    v57 = 0;
    return v57 & 1;
  }
  v68 = v27;
  v37 = v80;
  v67 = *(void (**)(uint64_t, uint64_t))(v80 + 64);
  v38 = v71;
  v67(v87, v80);
  v39 = AssociatedConformanceWitness;
  v66 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v40 = v73;
  v41 = v76;
  v66(v76, AssociatedConformanceWitness);
  v72 = *(_QWORD *)(v72 + 8);
  ((void (*)(char *, uint64_t))v72)(v38, v41);
  v42 = AssociatedTypeWitness;
  v43 = swift_getAssociatedConformanceWitness();
  v89 = v25;
  v44 = v43;
  v45 = *(void (**)(uint64_t, uint64_t))(v43 + 40);
  v45(v42, v43);
  v46 = *(void (**)(char *, uint64_t))(v75 + 8);
  v46(v40, v42);
  v47 = v74;
  v67(v87, v37);
  v48 = v77;
  v66(v41, v39);
  ((void (*)(char *, uint64_t))v72)(v47, v41);
  v49 = (uint64_t)v82;
  v45(v42, v44);
  v46(v48, v42);
  v50 = v84;
  v51 = v84 + *(int *)(v83 + 48);
  v52 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v53 = v88;
  sub_1BA57B488(v88, v84, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BA57B488(v49, v51, (unint64_t *)&qword_1ED3B0540, v52);
  v55 = v85;
  v54 = v86;
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  if (v56(v50, 1, v86) != 1)
  {
    v58 = v49;
    v59 = v70;
    sub_1BA57B488(v50, v70, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v56(v51, 1, v54) != 1)
    {
      v62 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v69, v51, v54);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v57 = sub_1BB872958();
      v63 = *(void (**)(char *, uint64_t))(v55 + 8);
      v63(v62, v54);
      v64 = v58;
      v65 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
      sub_1BA502AD0(v64, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      sub_1BA502AD0(v53, (unint64_t *)&qword_1ED3B0540, v65);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v89);
      v63((char *)v59, v54);
      sub_1BA502AD0(v50, (unint64_t *)&qword_1ED3B0540, v65);
      return v57 & 1;
    }
    v60 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BA502AD0(v49, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BA502AD0(v53, (unint64_t *)&qword_1ED3B0540, v60);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v89);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v59, v54);
    goto LABEL_8;
  }
  sub_1BA502AD0(v49, (unint64_t *)&qword_1ED3B0540, v52);
  sub_1BA502AD0(v53, (unint64_t *)&qword_1ED3B0540, v52);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v89);
  if (v56(v51, 1, v54) != 1)
  {
LABEL_8:
    sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BA5266EC);
    goto LABEL_9;
  }
  sub_1BA502AD0(v50, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v57 = 1;
  return v57 & 1;
}

uint64_t sub_1BAA53508@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t result;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;

  v29 = a1;
  sub_1BAA5AEC0();
  v28 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - v5;
  v7 = sub_1BB86CAD8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD **)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  sub_1BB86CA90();
  sub_1BB86CA00();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BB86C7FC();
  v18 = (void (*)(char *, uint64_t))v12[1];
  v18(v14, v11);
  sub_1BB86C7FC();
  sub_1BA4A2870((unint64_t *)&qword_1ED3AFBB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  result = sub_1BB872934();
  if ((result & 1) != 0)
  {
    v20 = v28;
    v21 = &v6[*(int *)(v28 + 48)];
    v22 = (void (*)(char *, char *, uint64_t))v12[4];
    v22(v6, v17, v11);
    v22(v21, v14, v11);
    v23 = &v3[*(int *)(v20 + 48)];
    v24 = (void (*)(char *, char *, uint64_t))v12[2];
    v24(v3, v6, v11);
    v24(v23, v21, v11);
    v25 = v29;
    v22(v29, v3, v11);
    v18(v23, v11);
    v26 = &v3[*(int *)(v20 + 48)];
    v22(v3, v6, v11);
    v22(v26, v21, v11);
    sub_1BA5F9880();
    v22(&v25[*(int *)(v27 + 36)], v26, v11);
    return ((uint64_t (*)(char *, uint64_t))v18)(v3, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA537A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  v44 = a3;
  v8 = sub_1BB86C8B0();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeedCursorGroup(0, a4, a5, v10);
  v41 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v42 = (char *)&v35 - v12;
  sub_1BA5F9880();
  v35 = v13;
  MEMORY[0x1E0C80A78](v13);
  v36 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v40 = (char *)&v35 - v16;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v21 = (char *)&v35 - v20;
  v22 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v22();
  v23 = v11;
  v25 = (uint64_t)v40;
  v24 = v41;
  swift_getAssociatedConformanceWitness();
  LOBYTE(a4) = sub_1BB872958();
  v26 = v21;
  v27 = v42;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v26, AssociatedTypeWitness);
  sub_1BAA5AE7C(v44, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, a1, v23);
  if ((a4 & 1) != 0)
  {
    sub_1BA4A2870((unint64_t *)&qword_1ED3AFBB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v28 = v39;
    v29 = sub_1BB872928();
    v31 = v37;
    v30 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v37, v27, v28);
    v32 = v36;
    sub_1BAA5AE7C(v25, v36);
    if ((v29 & 1) != 0)
      v33 = sub_1BB872934();
    else
      v33 = 0;
    sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))sub_1BA5F9880);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v28);
  }
  else
  {
    v33 = 0;
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BA5F9880);
  return v33 & 1;
}

uint64_t sub_1BAA53B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(void);
  char v13;
  _QWORD v15[2];

  v15[1] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v15 - v9;
  type metadata accessor for FeedCursorGroup(0, a3, a4, v11);
  v12 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v12();
  swift_getAssociatedConformanceWitness();
  v13 = sub_1BB873090();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return v13 & 1;
}

uint64_t sub_1BAA53CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(void);
  char v13;
  _QWORD v15[2];

  v15[1] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v15 - v9;
  type metadata accessor for FeedCursorGroup(0, a3, a4, v11);
  v12 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v12();
  swift_getAssociatedConformanceWitness();
  v13 = sub_1BB872958();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return v13 & 1;
}

uint64_t sub_1BAA53E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  type metadata accessor for FeedCursorGroup(0, a2, a3, a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v6 = swift_checkMetadataState();
  return v5(v6, AssociatedConformanceWitness);
}

uint64_t sub_1BAA53FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  char v9;

  type metadata accessor for FeedCursorGroup(0, a4, a5, a4);
  if (FeedCursorGroup.identifier.getter() == a2 && v7 == a3)
    v9 = 1;
  else
    v9 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t FeedGroupEmitterRule.evaluateDayOfWeek(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t *v34;
  unint64_t *v35;
  uint64_t v36;
  unint64_t *v37;

  v4 = v3;
  v36 = a1;
  v37 = a3;
  v6 = sub_1BB86CAC0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86CAD8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, double))(v14 + 16))(v18, v4, a2, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 21)
  {
    v28 = *v18;
    sub_1BB86CA90();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CB1198], v6);
    v29 = sub_1BB86CACC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v30 = sub_1BA79296C(v29, v28);
    result = swift_bridgeObjectRelease();
    v31 = 0xD00000000000001BLL;
    if (!v30)
      v31 = 0;
    v32 = 0x80000001BB9688E0;
    if (v30)
    {
      v33 = 0;
    }
    else
    {
      v32 = 0;
      v33 = 2;
    }
    v34 = v37;
    *v37 = v31;
    v34[1] = v32;
    *((_BYTE *)v34 + 16) = v33;
  }
  else if (EnumCaseMultiPayload == 20)
  {
    v20 = *v18;
    sub_1BB86CA90();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CB1198], v6);
    v21 = sub_1BB86CACC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v22 = sub_1BA79296C(v21, v20);
    result = swift_bridgeObjectRelease();
    v24 = 0xD000000000000017;
    if (v22)
      v24 = 0;
    v25 = 0x80000001BB968900;
    if (v22)
    {
      v25 = 0;
      v26 = 2;
    }
    else
    {
      v26 = 0;
    }
    v27 = v37;
    *v37 = v24;
    v27[1] = v25;
    *((_BYTE *)v27 + 16) = v26;
  }
  else
  {
    v35 = v37;
    *v37 = 0;
    v35[1] = 0;
    *((_BYTE *)v35 + 16) = 2;
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v18, a2);
  }
  return result;
}

void FeedGroupEmitterRule.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;

  v2 = v1;
  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&AssociatedConformanceWitness - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1, v9);
  v12 = (char *)sub_1BAA544F8 + 4 * word_1BB89490C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1BAA544F8()
{
  return 0xD000000000000015;
}

void sub_1BAA551F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = sub_1BA85C3B4(*v0);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 112) = v2;
  swift_retain();
  sub_1BA67FABC((uint64_t *)(v1 - 112), sub_1BACAB76C, sub_1BAA55A74);
  swift_release();
  v3 = *(_QWORD *)(v1 - 112);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    *(_QWORD *)(v1 - 112) = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v4, 0);
    v5 = 0;
    v6 = *(_QWORD *)(v1 - 112);
    do
    {
      *(_DWORD *)(v1 - 128) = *(_DWORD *)(v3 + 4 * v5 + 32);
      v7 = sub_1BB87420C();
      v9 = v8;
      *(_QWORD *)(v1 - 112) = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BA7447E8(v10 > 1, v11 + 1, 1);
        v6 = *(_QWORD *)(v1 - 112);
      }
      ++v5;
      *(_QWORD *)(v6 + 16) = v11 + 1;
      v12 = v6 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
    }
    while (v4 != v5);
    swift_release();
  }
  else
  {
    swift_release();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v1 - 112) = v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 112) = 0;
  *(_QWORD *)(v1 - 104) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BAA55590);
}

void sub_1BAA552F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1BA6BFD64(v0, v1);
  *(_QWORD *)(v3 - 112) = 0;
  *(_QWORD *)(v3 - 104) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 - 112) = 0xD000000000000010;
  *(_QWORD *)(v3 - 104) = 0x80000001BB968D20;
  sub_1BA57B488(v1, v2, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  v4 = sub_1BB86EB84();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_1BA502AD0(v2, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  }
  else
  {
    sub_1BB86EB24();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BA502AD0(v1, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  JUMPOUT(0x1BAA5519CLL);
}

uint64_t Array<A>.evaluate(cursor:slots:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t result;
  _QWORD v14[7];
  uint64_t v15;

  v15 = a3;
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a1;
  v14[5] = a2;
  v7 = sub_1BB872EE0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v7);
  v15 = sub_1BAA52384((void (*)(char *, char *))sub_1BAA56F38, (uint64_t)v14, v7, (uint64_t)&type metadata for FeedGroupEmitterRuleResult, MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v9);
  swift_bridgeObjectRetain();
  sub_1BA67FABC(&v15, sub_1BACAB8E8, (uint64_t (*)(_QWORD *))sub_1BAA560FC);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v15 + 16))
  {
    v10 = *(_QWORD *)(v15 + 32);
    v11 = *(_QWORD *)(v15 + 40);
    v12 = *(_BYTE *)(v15 + 48);
    sub_1BA5F1EC8(v10, v11, v12);
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v12 = 2;
  }
  result = swift_release();
  *(_QWORD *)a6 = v10;
  *(_QWORD *)(a6 + 8) = v11;
  *(_BYTE *)(a6 + 16) = v12;
  return result;
}

uint64_t FeedGroupEmitterCustomRule.description.getter()
{
  uint64_t v0;

  v0 = sub_1BA653870();
  swift_bridgeObjectRetain();
  return v0;
}

_QWORD *FeedGroupEmitterCustomRule.__allocating_init(description:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_QWORD *FeedGroupEmitterCustomRule.init(description:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t FeedGroupEmitterCustomRule.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedGroupEmitterCustomRule.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAA557B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v20[2];

  v0 = sub_1BB86C8B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5F9880();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8A4();
  sub_1BAA53508(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1EF2A70C8 != -1)
    swift_once();
  v7 = (void *)qword_1EF2BDAF8;
  v8 = (void *)sub_1BB86C808();
  v9 = objc_msgSend(v7, sel_stringFromDate_, v8);

  v10 = sub_1BB8729A0();
  v12 = v11;

  v20[0] = v10;
  v20[1] = v12;
  sub_1BB872AFC(v13);
  v14 = (void *)qword_1EF2BDAF8;
  v15 = (void *)sub_1BB86C808();
  v16 = objc_msgSend(v14, sel_stringFromDate_, v15);

  sub_1BB8729A0();
  sub_1BB872AFC(v17);
  swift_bridgeObjectRelease();
  v18 = v20[0];
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA5F9880);
  return v18;
}

uint64_t sub_1BAA559A4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA53FA0(a1, v1[4], v1[5], v1[2], v1[3]) & 1;
}

uint64_t sub_1BAA559C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAA53E9C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BAA559E0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA53CE4(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_1BAA55A00(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA53B30(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_1BAA55A20(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA537A0(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1BAA55A2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA52D30(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_1BAA55A34@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BAA529B4(a1);
}

uint64_t sub_1BAA55A50(uint64_t *a1)
{
  return sub_1BA67FABC(a1, sub_1BACAB76C, sub_1BAA55A74);
}

uint64_t sub_1BAA55A74(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int *v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_DWORD *)(v79 + 4 * i);
        v82 = v78;
        do
        {
          v83 = *(_DWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_DWORD *)(v79 + v82 + 4) = v83;
          *(_DWORD *)(v79 + v82) = v81;
          v82 -= 4;
        }
        while (v82 != -4);
        v78 += 4;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1BAA5696C((char *)(v84 + 4 * v88), (char *)(v84 + 4 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 4 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_1BACAB464((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 4;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_DWORD *)(v10 + 4 * v9);
      v15 = *(_DWORD *)(v10 + 4 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_DWORD *)(v10 + 4 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_DWORD *)(v10 + 4 * v19);
              *(_DWORD *)(v10 + 4 * v19) = *(_DWORD *)(v10 + 4 * v18);
              *(_DWORD *)(v10 + 4 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (int *)(v93 + 4 * v9);
      do
      {
        v23 = *(_DWORD *)(v10 + 4 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1BACAA368((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1BAA5696C((char *)(v10 + 4 * *(_QWORD *)v71), (char *)(v10 + 4 * *(_QWORD *)v74), v10 + 4 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

unint64_t sub_1BAA560FC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  __int128 *v81;
  uint64_t v82;
  __int128 *v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  unint64_t v96;
  __int128 v97;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  int64_t v109;
  uint64_t v110;
  unsigned __int8 *__dst;
  char *v112;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BB8741F4();
  if ((uint64_t)result >= v3)
  {
    if (v3 < 0)
      goto LABEL_196;
    if ((unint64_t)v3 < 2)
      return result;
    v89 = *v2;
    v90 = *v2 + 24;
    v91 = -1;
    v92 = 1;
LABEL_139:
    v93 = v91;
    v94 = v90;
    while (1)
    {
      v95 = *(unsigned __int8 *)(v94 + 16);
      v96 = *(unsigned __int8 *)(v94 + 16);
      if (*(_BYTE *)(v94 + 16))
      {
        if (v95 != 1)
        {
          if (*(_OWORD *)v94 == 0)
            v96 = 3;
          else
            v96 = 1;
          result = *(unsigned __int8 *)(v94 - 8);
          if (!*(_BYTE *)(v94 - 8))
            goto LABEL_151;
          goto LABEL_149;
        }
        v96 = 2;
      }
      result = *(unsigned __int8 *)(v94 - 8);
      if (!*(_BYTE *)(v94 - 8))
        goto LABEL_151;
LABEL_149:
      if ((_DWORD)result != 1)
      {
        if (*(_OWORD *)(v94 - 24) == 0)
          result = 3;
        else
          result = 1;
        if (v96 >= result)
          goto LABEL_138;
        goto LABEL_157;
      }
      result = 2;
LABEL_151:
      if (v96 >= result)
        goto LABEL_138;
LABEL_157:
      if (!v89)
        goto LABEL_200;
      v97 = *(_OWORD *)v94;
      *(_OWORD *)v94 = *(_OWORD *)(v94 - 24);
      *(_QWORD *)(v94 + 16) = *(_QWORD *)(v94 - 8);
      *(_BYTE *)(v94 - 8) = v95;
      *(_OWORD *)(v94 - 24) = v97;
      v94 -= 24;
      if (__CFADD__(v93++, 1))
      {
LABEL_138:
        ++v92;
        v90 += 24;
        --v91;
        if (v92 == v3)
          return result;
        goto LABEL_139;
      }
    }
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_205;
  v6 = result;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (unsigned __int8 *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v99 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_162;
    }
    v108 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    v108 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  v10 = 0;
  v107 = v2;
  v11 = *v2;
  v112 = (char *)MEMORY[0x1E0DEE9D8];
  v109 = v6;
  v110 = v3;
  while (2)
  {
    v13 = v10++;
    if (v10 < v3)
    {
      v14 = v11 + 24 * v10;
      v15 = *(unsigned __int8 *)(v14 + 16);
      if (*(_BYTE *)(v14 + 16))
      {
        if ((_DWORD)v15 == 1)
        {
          v15 = 2;
        }
        else if (*(_OWORD *)(v11 + 24 * v10) == 0)
        {
          v15 = 3;
        }
        else
        {
          v15 = 1;
        }
      }
      v16 = v11 + 24 * v13;
      v17 = *(unsigned __int8 *)(v16 + 16);
      if (*(_BYTE *)(v16 + 16))
      {
        if ((_DWORD)v17 == 1)
        {
          v17 = 2;
        }
        else if (*(_OWORD *)v16 == 0)
        {
          v17 = 3;
        }
        else
        {
          v17 = 1;
        }
      }
      v10 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v18 = (_BYTE *)(v11 + 64 + 24 * v13);
        while (1)
        {
          v19 = *v18;
          if (*v18)
          {
            if ((_DWORD)v19 != 1)
            {
              if (*((_OWORD *)v18 - 1) == 0)
                v19 = 3;
              else
                v19 = 1;
              v20 = *(v18 - 24);
              if (!*(v18 - 24))
                goto LABEL_45;
LABEL_40:
              if ((_DWORD)v20 == 1)
              {
                v20 = 2;
              }
              else if (*(_OWORD *)(v18 - 40) == 0)
              {
                v20 = 3;
              }
              else
              {
                v20 = 1;
              }
              goto LABEL_45;
            }
            v19 = 2;
          }
          v20 = *(v18 - 24);
          if (*(v18 - 24))
            goto LABEL_40;
LABEL_45:
          if (v15 < v17 == v19 >= v20)
            break;
          v18 += 24;
          if (v3 == ++v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v13)
          goto LABEL_197;
        if (v13 < v10)
        {
          v21 = 24 * v10;
          v22 = 24 * v13;
          v23 = v10;
          v24 = v13;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_203;
              v25 = v11 + v22;
              v26 = v11 + v21;
              v27 = *(_BYTE *)(v11 + v22 + 16);
              v28 = *(_OWORD *)(v11 + v22);
              v29 = *(_QWORD *)(v11 + v21 - 8);
              *(_OWORD *)v25 = *(_OWORD *)(v11 + v21 - 24);
              *(_QWORD *)(v25 + 16) = v29;
              *(_OWORD *)(v26 - 24) = v28;
              *(_BYTE *)(v26 - 8) = v27;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_64;
    if (__OFSUB__(v10, v13))
      goto LABEL_195;
    if (v10 - v13 >= v6)
    {
LABEL_64:
      v31 = v112;
      if (v10 < v13)
        goto LABEL_190;
      goto LABEL_65;
    }
    v30 = v13 + v6;
    if (__OFADD__(v13, v6))
      goto LABEL_198;
    if (v30 >= v3)
      v30 = v3;
    if (v30 < v13)
    {
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      result = sub_1BB873EA0();
      __break(1u);
      return result;
    }
    if (v10 == v30)
      goto LABEL_64;
    v81 = (__int128 *)(v11 + 24 * v10);
    v31 = v112;
    while (2)
    {
      v82 = v13;
      v83 = v81;
      do
      {
        v84 = *((unsigned __int8 *)v83 + 16);
        v85 = *((unsigned __int8 *)v83 + 16);
        if (!*((_BYTE *)v83 + 16))
          goto LABEL_117;
        if (v84 == 1)
        {
          v85 = 2;
LABEL_117:
          v86 = *((unsigned __int8 *)v83 - 8);
          if (!*((_BYTE *)v83 - 8))
            goto LABEL_125;
          goto LABEL_123;
        }
        if (*v83 == 0)
          v85 = 3;
        else
          v85 = 1;
        v86 = *((unsigned __int8 *)v83 - 8);
        if (!*((_BYTE *)v83 - 8))
          goto LABEL_125;
LABEL_123:
        if ((_DWORD)v86 == 1)
        {
          v86 = 2;
LABEL_125:
          if (v85 >= v86)
            break;
          goto LABEL_131;
        }
        if (*(__int128 *)((char *)v83 - 24) == 0)
          v87 = 3;
        else
          v87 = 1;
        if (v85 >= v87)
          break;
LABEL_131:
        if (!v11)
          goto LABEL_201;
        v88 = *v83;
        *v83 = *(__int128 *)((char *)v83 - 24);
        *((_QWORD *)v83 + 2) = *((_QWORD *)v83 - 1);
        *((_BYTE *)v83 - 8) = v84;
        *(__int128 *)((char *)v83 - 24) = v88;
        v83 = (__int128 *)((char *)v83 - 24);
        ++v82;
      }
      while (v10 != v82);
      ++v10;
      v81 = (__int128 *)((char *)v81 + 24);
      if (v10 != v30)
        continue;
      break;
    }
    v10 = v30;
    if (v30 < v13)
      goto LABEL_190;
LABEL_65:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_1BACAA368(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
    v33 = *((_QWORD *)v31 + 2);
    v32 = *((_QWORD *)v31 + 3);
    v12 = v33 + 1;
    if (v33 >= v32 >> 1)
      v31 = sub_1BACAA368((char *)(v32 > 1), v33 + 1, 1, v31);
    *((_QWORD *)v31 + 2) = v12;
    v34 = v31 + 32;
    v35 = &v31[16 * v33 + 32];
    *(_QWORD *)v35 = v13;
    *((_QWORD *)v35 + 1) = v10;
    v112 = v31;
    if (v33)
    {
      while (2)
      {
        v36 = v12 - 1;
        if (v12 >= 4)
        {
          v41 = &v34[16 * v12];
          v42 = *((_QWORD *)v41 - 8);
          v43 = *((_QWORD *)v41 - 7);
          v47 = __OFSUB__(v43, v42);
          v44 = v43 - v42;
          if (v47)
            goto LABEL_179;
          v46 = *((_QWORD *)v41 - 6);
          v45 = *((_QWORD *)v41 - 5);
          v47 = __OFSUB__(v45, v46);
          v39 = v45 - v46;
          v40 = v47;
          if (v47)
            goto LABEL_180;
          v48 = v12 - 2;
          v49 = &v34[16 * v12 - 32];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v47 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v47)
            goto LABEL_182;
          v47 = __OFADD__(v39, v52);
          v53 = v39 + v52;
          if (v47)
            goto LABEL_185;
          if (v53 >= v44)
          {
            v71 = &v34[16 * v36];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v47 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v47)
              goto LABEL_189;
            v64 = v39 < v74;
          }
          else
          {
LABEL_83:
            if ((v40 & 1) != 0)
              goto LABEL_181;
            v48 = v12 - 2;
            v54 = &v34[16 * v12 - 32];
            v56 = *(_QWORD *)v54;
            v55 = *((_QWORD *)v54 + 1);
            v57 = __OFSUB__(v55, v56);
            v58 = v55 - v56;
            v59 = v57;
            if (v57)
              goto LABEL_184;
            v60 = &v34[16 * v36];
            v62 = *(_QWORD *)v60;
            v61 = *((_QWORD *)v60 + 1);
            v47 = __OFSUB__(v61, v62);
            v63 = v61 - v62;
            if (v47)
              goto LABEL_187;
            if (__OFADD__(v58, v63))
              goto LABEL_188;
            if (v58 + v63 < v39)
              goto LABEL_95;
            v64 = v39 < v63;
          }
          if (v64)
            v36 = v48;
        }
        else
        {
          if (v12 == 3)
          {
            v38 = *((_QWORD *)v31 + 4);
            v37 = *((_QWORD *)v31 + 5);
            v47 = __OFSUB__(v37, v38);
            v39 = v37 - v38;
            v40 = v47;
            goto LABEL_83;
          }
          v65 = *((_QWORD *)v31 + 4);
          v66 = *((_QWORD *)v31 + 5);
          v47 = __OFSUB__(v66, v65);
          v58 = v66 - v65;
          v59 = v47;
LABEL_95:
          if ((v59 & 1) != 0)
            goto LABEL_183;
          v67 = &v34[16 * v36];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v47 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          if (v47)
            goto LABEL_186;
          if (v70 < v58)
            goto LABEL_15;
        }
        v75 = v36 - 1;
        if (v36 - 1 >= v12)
        {
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
          goto LABEL_199;
        }
        if (!v11)
          goto LABEL_202;
        v76 = &v34[16 * v75];
        v77 = *(_QWORD *)v76;
        v78 = &v34[16 * v36];
        v79 = *((_QWORD *)v78 + 1);
        sub_1BAA56BD8((unsigned __int8 *)(v11 + 24 * *(_QWORD *)v76), (unsigned __int8 *)(v11 + 24 * *(_QWORD *)v78), v11 + 24 * v79, __dst);
        if (v1)
          goto LABEL_136;
        if (v79 < v77)
          goto LABEL_176;
        if (v36 > *((_QWORD *)v112 + 2))
          goto LABEL_177;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v34[16 * v75 + 8] = v79;
        v80 = *((_QWORD *)v112 + 2);
        if (v36 >= v80)
          goto LABEL_178;
        v31 = v112;
        v12 = v80 - 1;
        memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
        *((_QWORD *)v112 + 2) = v80 - 1;
        if (v80 <= 2)
          goto LABEL_15;
        continue;
      }
    }
    v12 = 1;
LABEL_15:
    v6 = v109;
    v3 = v110;
    if (v10 < v110)
      continue;
    break;
  }
  v9 = v108;
  v99 = v112;
  v2 = v107;
LABEL_162:
  v108 = v9;
  if (v12 >= 2)
  {
    v100 = *v2;
    do
    {
      v101 = v12 - 2;
      if (v12 < 2)
        goto LABEL_191;
      if (!v100)
        goto LABEL_204;
      v102 = v99;
      v103 = *(_QWORD *)&v99[16 * v101 + 32];
      v104 = *(_QWORD *)&v99[16 * v12 + 24];
      sub_1BAA56BD8((unsigned __int8 *)(v100 + 24 * v103), (unsigned __int8 *)(v100 + 24 * *(_QWORD *)&v99[16 * v12 + 16]), v100 + 24 * v104, __dst);
      if (v1)
        break;
      if (v104 < v103)
        goto LABEL_192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v102 = sub_1BACAB464((uint64_t)v102);
      if (v101 >= *((_QWORD *)v102 + 2))
        goto LABEL_193;
      v105 = &v102[16 * v101 + 32];
      *(_QWORD *)v105 = v103;
      *((_QWORD *)v105 + 1) = v104;
      v106 = *((_QWORD *)v102 + 2);
      if (v12 > v106)
        goto LABEL_194;
      memmove(&v102[16 * v12 + 16], &v102[16 * v12 + 32], 16 * (v106 - v12));
      v99 = v102;
      *((_QWORD *)v102 + 2) = v106 - 1;
      v12 = v106 - 1;
    }
    while (v106 > 2);
  }
LABEL_136:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v108 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA5696C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  int v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 3;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 2;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 3;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 2;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst)
        memmove(__dst, a2, 4 * v13);
      v16 = &v4[4 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        v17 = (char *)(a3 - 4);
        while (1)
        {
          v18 = v17 + 4;
          v19 = v6 - 4;
          v20 = *((_DWORD *)v6 - 1);
          if (*((_DWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 4;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_DWORD *)v17 = *((_DWORD *)v16 - 1);
            v16 -= 4;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_DWORD *)v17 = v20;
            v24 = v6 - 4;
            v6 -= 4;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 4;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst)
      memmove(__dst, __src, 4 * v10);
    v14 = &v4[4 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
            *(_DWORD *)v7 = *(_DWORD *)v4;
          v4 += 4;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_DWORD *)v7 = *(_DWORD *)v6;
        }
        v7 += 4;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1BACAA524((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA56BD8(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned __int8 *v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 *v16;
  __int128 v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unint64_t v22;
  unint64_t v23;
  unsigned __int8 *v24;
  unint64_t v25;
  unsigned __int8 *v26;
  __int128 v27;
  __int128 v28;
  uint64_t result;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v31 = __dst;
  v32 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      v20 = 24 * v11;
      if (__dst != a2 || &a2[v20] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v21 = &v4[v20];
      v30 = &v4[v20];
      v32 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v22 = a3 - 24;
        do
        {
          v23 = *(v21 - 8);
          if (*(v21 - 8))
          {
            if ((_DWORD)v23 == 1)
            {
              v23 = 2;
            }
            else if (*(_OWORD *)(v21 - 24) == 0)
            {
              v23 = 3;
            }
            else
            {
              v23 = 1;
            }
          }
          v24 = v6 - 24;
          v25 = *(v6 - 8);
          if (*(v6 - 8))
          {
            if ((_DWORD)v25 == 1)
            {
              v25 = 2;
            }
            else if (*(_OWORD *)(v6 - 24) == 0)
            {
              v25 = 3;
            }
            else
            {
              v25 = 1;
            }
          }
          v26 = (unsigned __int8 *)(v22 + 24);
          if (v23 >= v25)
          {
            v30 = v21 - 24;
            if (v26 < v21 || v22 >= (unint64_t)v21 || v26 != v21)
            {
              v28 = *(_OWORD *)(v21 - 24);
              *(_QWORD *)(v22 + 16) = *((_QWORD *)v21 - 1);
              *(_OWORD *)v22 = v28;
            }
            v24 = v6;
            v21 -= 24;
            if (v6 <= v7)
              break;
          }
          else
          {
            if (v26 != v6 || v22 >= (unint64_t)v6)
            {
              v27 = *(_OWORD *)v24;
              *(_QWORD *)(v22 + 16) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v22 = v27;
            }
            v32 = v6 - 24;
            if (v24 <= v7)
              break;
          }
          v22 -= 24;
          v6 = v24;
        }
        while (v21 > v4);
      }
LABEL_65:
      sub_1BACAAE78((void **)&v32, (const void **)&v31, &v30);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, v12);
    v13 = &v4[v12];
    v30 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      while (1)
      {
        v14 = v6[16];
        if (!v6[16])
          goto LABEL_11;
        if ((_DWORD)v14 == 1)
          break;
        if (*(_OWORD *)v6 == 0)
          v14 = 3;
        else
          v14 = 1;
        v15 = v4[16];
        if (!v4[16])
          goto LABEL_19;
LABEL_17:
        if ((_DWORD)v15 == 1)
        {
          v15 = 2;
LABEL_19:
          if (v14 >= v15)
            goto LABEL_28;
          goto LABEL_20;
        }
        if (*(_OWORD *)v4 == 0)
          v18 = 3;
        else
          v18 = 1;
        if (v14 >= v18)
        {
LABEL_28:
          if (v7 != v4)
          {
            v19 = *(_OWORD *)v4;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v4 + 2);
            *(_OWORD *)v7 = v19;
          }
          v4 += 24;
          v31 = v4;
          v16 = v6;
          goto LABEL_31;
        }
LABEL_20:
        v16 = v6 + 24;
        if (v7 < v6 || v7 >= v16 || v7 != v6)
        {
          v17 = *(_OWORD *)v6;
          *((_QWORD *)v7 + 2) = *((_QWORD *)v6 + 2);
          *(_OWORD *)v7 = v17;
        }
LABEL_31:
        v7 += 24;
        if (v4 < v13)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v32 = v7;
        goto LABEL_65;
      }
      v14 = 2;
LABEL_11:
      v15 = v4[16];
      if (!v4[16])
        goto LABEL_19;
      goto LABEL_17;
    }
    goto LABEL_65;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA56F20(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA52AE0(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1BAA56F2C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAA52808(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BAA56F38()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[3] + 32))(v0[4], v0[5], v0[2]);
}

uint64_t sub_1BAA56F70(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t dispatch thunk of FeedGroupEmitterRuleType.evaluate(cursor:slots:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

_QWORD *sub_1BAA56F80(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  __int16 *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  __int16 v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;

  if (a1 == a2)
    return a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 24;
  if (v8 <= v9)
    v10 = v9;
  else
    v10 = v8;
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84))
    v13 = *(_QWORD *)(v12 + 64);
  else
    v13 = *(_QWORD *)(v12 + 64) + 1;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  v16 = (__int16 *)((char *)a1 + v15);
  if (v15 > 3)
    goto LABEL_17;
  v17 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v17 <= 0xFFDD)
  {
    if (v17 > 0xDD)
    {
      v18 = (unsigned __int16)*v16;
      if (v18 < 0x22)
        goto LABEL_26;
      goto LABEL_22;
    }
LABEL_17:
    v18 = *(unsigned __int8 *)v16;
    if (v18 < 0x22)
      goto LABEL_26;
LABEL_22:
    if (v15 <= 3)
      v19 = v15;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  v18 = *(_DWORD *)v16;
  if (*(_DWORD *)v16 >= 0x22u)
    goto LABEL_22;
LABEL_26:
  switch(v18)
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 0xCu:
    case 0xDu:
      (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      break;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
      swift_bridgeObjectRelease();
      break;
    case 0x1Au:
    case 0x1Bu:
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11))
        (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(a1, v11);
      break;
    case 0x21u:
      swift_release();
      break;
    default:
      break;
  }
  if (v15 > 3)
    goto LABEL_32;
  v20 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v20 <= 0xFFDD)
  {
    if (v20 > 0xDD)
    {
      v21 = *(unsigned __int16 *)((char *)a2 + v15);
      if (v21 < 0x22)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_32:
    v21 = *((unsigned __int8 *)a2 + v15);
    if (v21 < 0x22)
      goto LABEL_41;
LABEL_37:
    if (v15 <= 3)
      v22 = v15;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  v21 = *(_DWORD *)((char *)a2 + v15);
  if (v21 >= 0x22)
    goto LABEL_37;
LABEL_41:
  switch(v21)
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v15 <= 3)
      {
        v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v23 > 0xFFDD)
        {
          *(_DWORD *)v16 = 0;
          return a1;
        }
        if (v23 > 0xDD)
        {
          *v16 = 0;
          return a1;
        }
      }
      *(_BYTE *)v16 = 0;
      break;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v15 <= 3)
      {
        v24 = 1;
        v25 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v25 > 0xFFDD)
        {
          *(_DWORD *)v16 = 1;
          return a1;
        }
        if (v25 > 0xDD)
          goto LABEL_260;
      }
      *(_BYTE *)v16 = 1;
      break;
    case 2u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v26 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v26 > 0xFFDD)
        {
          *(_DWORD *)v16 = 2;
          return a1;
        }
        if (v26 > 0xDD)
        {
          v24 = 2;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 2;
      break;
    case 3u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v27 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v27 > 0xFFDD)
        {
          *(_DWORD *)v16 = 3;
          return a1;
        }
        if (v27 > 0xDD)
        {
          v24 = 3;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 3;
      break;
    case 4u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v28 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v28 > 0xFFDD)
        {
          *(_DWORD *)v16 = 4;
          return a1;
        }
        if (v28 > 0xDD)
        {
          v24 = 4;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 4;
      break;
    case 5u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v29 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v30 = *(_QWORD *)(v29 + 16);
      v31 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v31 = *(_OWORD *)v29;
      *(_QWORD *)(v31 + 16) = v30;
      if (v15 <= 3)
      {
        v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDD)
        {
          *(_DWORD *)v16 = 5;
          return a1;
        }
        if (v32 > 0xDD)
        {
          v24 = 5;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 5;
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v33 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v33 > 0xFFDD)
        {
          *(_DWORD *)v16 = 6;
          return a1;
        }
        if (v33 > 0xDD)
        {
          v24 = 6;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 6;
      break;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDD)
        {
          *(_DWORD *)v16 = 7;
          return a1;
        }
        if (v34 > 0xDD)
        {
          v24 = 7;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 7;
      break;
    case 8u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDD)
        {
          *(_DWORD *)v16 = 8;
          return a1;
        }
        if (v35 > 0xDD)
        {
          v24 = 8;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 8;
      break;
    case 9u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDD)
        {
          *(_DWORD *)v16 = 9;
          return a1;
        }
        if (v36 > 0xDD)
        {
          v24 = 9;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDD)
        {
          *(_DWORD *)v16 = 10;
          return a1;
        }
        if (v37 > 0xDD)
        {
          v24 = 10;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 10;
      break;
    case 0xBu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDD)
        {
          *(_DWORD *)v16 = 11;
          return a1;
        }
        if (v38 > 0xDD)
        {
          v24 = 11;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 11;
      break;
    case 0xCu:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDD)
        {
          *(_DWORD *)v16 = 12;
          return a1;
        }
        if (v39 > 0xDD)
        {
          v24 = 12;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 12;
      break;
    case 0xDu:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDD)
        {
          *(_DWORD *)v16 = 13;
          return a1;
        }
        if (v40 > 0xDD)
        {
          v24 = 13;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 13;
      break;
    case 0xEu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDD)
        {
          *(_DWORD *)v16 = 14;
          return a1;
        }
        if (v41 > 0xDD)
        {
          v24 = 14;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDD)
        {
          *(_DWORD *)v16 = 15;
          return a1;
        }
        if (v42 > 0xDD)
        {
          v24 = 15;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 15;
      break;
    case 0x10u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDD)
        {
          *(_DWORD *)v16 = 16;
          return a1;
        }
        if (v43 > 0xDD)
        {
          v24 = 16;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 16;
      break;
    case 0x11u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDD)
        {
          *(_DWORD *)v16 = 17;
          return a1;
        }
        if (v44 > 0xDD)
        {
          v24 = 17;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 17;
      break;
    case 0x12u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDD)
        {
          *(_DWORD *)v16 = 18;
          return a1;
        }
        if (v45 > 0xDD)
        {
          v24 = 18;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 18;
      break;
    case 0x13u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDD)
        {
          *(_DWORD *)v16 = 19;
          return a1;
        }
        if (v46 > 0xDD)
        {
          v24 = 19;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 19;
      break;
    case 0x14u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDD)
        {
          *(_DWORD *)v16 = 20;
          return a1;
        }
        if (v47 > 0xDD)
        {
          v24 = 20;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 20;
      break;
    case 0x15u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDD)
        {
          *(_DWORD *)v16 = 21;
          return a1;
        }
        if (v48 > 0xDD)
        {
          v24 = 21;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 21;
      break;
    case 0x16u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDD)
        {
          *(_DWORD *)v16 = 22;
          return a1;
        }
        if (v49 > 0xDD)
        {
          v24 = 22;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 22;
      break;
    case 0x17u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDD)
        {
          *(_DWORD *)v16 = 23;
          return a1;
        }
        if (v50 > 0xDD)
        {
          v24 = 23;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 23;
      break;
    case 0x18u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDD)
        {
          *(_DWORD *)v16 = 24;
          return a1;
        }
        if (v51 > 0xDD)
        {
          v24 = 24;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 24;
      break;
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDD)
        {
          *(_DWORD *)v16 = 25;
          return a1;
        }
        if (v52 > 0xDD)
        {
          v24 = 25;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDD)
        {
          *(_DWORD *)v16 = 26;
          return a1;
        }
        if (v62 > 0xDD)
        {
          v24 = 26;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDD)
        {
          *(_DWORD *)v16 = 27;
          return a1;
        }
        if (v61 > 0xDD)
        {
          v24 = 27;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 27;
      break;
    case 0x1Cu:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDD)
        {
          *(_DWORD *)v16 = 28;
          return a1;
        }
        if (v53 > 0xDD)
        {
          v24 = 28;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 28;
      break;
    case 0x1Du:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDD)
        {
          *(_DWORD *)v16 = 29;
          return a1;
        }
        if (v54 > 0xDD)
        {
          v24 = 29;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 29;
      break;
    case 0x1Eu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDD)
        {
          *(_DWORD *)v16 = 30;
          return a1;
        }
        if (v55 > 0xDD)
        {
          v24 = 30;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 30;
      break;
    case 0x1Fu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDD)
        {
          *(_DWORD *)v16 = 31;
          return a1;
        }
        if (v56 > 0xDD)
        {
          v24 = 31;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 31;
      break;
    case 0x20u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDD)
        {
          *(_DWORD *)v16 = 32;
          return a1;
        }
        if (v57 > 0xDD)
        {
          v24 = 32;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 32;
      break;
    case 0x21u:
      *a1 = *a2;
      swift_retain();
      if (v15 > 3)
        goto LABEL_174;
      v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v58 > 0xFFDD)
      {
        *(_DWORD *)v16 = 33;
        return a1;
      }
      if (v58 > 0xDD)
      {
        v24 = 33;
LABEL_260:
        *v16 = v24;
      }
      else
      {
LABEL_174:
        *(_BYTE *)v16 = 33;
      }
      break;
    default:
      if (v15 > 3)
        goto LABEL_179;
      v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      v60 = 2;
      if (v59 > 0xFFDD)
        v60 = 4;
      if (v59 <= 0xDD)
LABEL_179:
        v60 = 1;
      memcpy(a1, a2, v60 + v15);
      break;
  }
  return a1;
}

_BYTE *sub_1BAA58130(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  __int16 v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 24;
  if (v8 <= v9)
    v10 = v9;
  else
    v10 = v8;
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84))
    v13 = *(_QWORD *)(v12 + 64);
  else
    v13 = *(_QWORD *)(v12 + 64) + 1;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  if (v15 > 3)
    goto LABEL_16;
  v16 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v16 <= 0xFFDD)
  {
    if (v16 > 0xDD)
    {
      v17 = *(unsigned __int16 *)&a2[v15];
      if (v17 < 0x22)
        goto LABEL_25;
      goto LABEL_21;
    }
LABEL_16:
    v17 = a2[v15];
    if (v17 < 0x22)
      goto LABEL_25;
LABEL_21:
    if (v15 <= 3)
      v18 = v15;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  v17 = *(_DWORD *)&a2[v15];
  if (v17 >= 0x22)
    goto LABEL_21;
LABEL_25:
  switch(v17)
  {
    case 0u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        v19 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v19 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 0;
          return a1;
        }
        if (v19 > 0xDD)
        {
          *(_WORD *)&a1[v15] = 0;
          return a1;
        }
      }
      a1[v15] = 0;
      break;
    case 1u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        v20 = 1;
        v21 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v21 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 1;
          return a1;
        }
        if (v21 > 0xDD)
          goto LABEL_241;
      }
      a1[v15] = 1;
      break;
    case 2u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v22 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v22 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 2;
          return a1;
        }
        if (v22 > 0xDD)
        {
          v20 = 2;
          goto LABEL_241;
        }
      }
      a1[v15] = 2;
      break;
    case 3u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v23 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 3;
          return a1;
        }
        if (v23 > 0xDD)
        {
          v20 = 3;
          goto LABEL_241;
        }
      }
      a1[v15] = 3;
      break;
    case 4u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v24 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v24 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 4;
          return a1;
        }
        if (v24 > 0xDD)
        {
          v20 = 4;
          goto LABEL_241;
        }
      }
      a1[v15] = 4;
      break;
    case 5u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v25 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v27 = *(_OWORD *)v25;
      *(_QWORD *)(v27 + 16) = v26;
      if (v15 <= 3)
      {
        v28 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v28 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 5;
          return a1;
        }
        if (v28 > 0xDD)
        {
          v20 = 5;
          goto LABEL_241;
        }
      }
      a1[v15] = 5;
      break;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v29 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v29 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 6;
          return a1;
        }
        if (v29 > 0xDD)
        {
          v20 = 6;
          goto LABEL_241;
        }
      }
      a1[v15] = 6;
      break;
    case 7u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 7;
          return a1;
        }
        if (v30 > 0xDD)
        {
          v20 = 7;
          goto LABEL_241;
        }
      }
      a1[v15] = 7;
      break;
    case 8u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 8;
          return a1;
        }
        if (v31 > 0xDD)
        {
          v20 = 8;
          goto LABEL_241;
        }
      }
      a1[v15] = 8;
      break;
    case 9u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 9;
          return a1;
        }
        if (v32 > 0xDD)
        {
          v20 = 9;
          goto LABEL_241;
        }
      }
      a1[v15] = 9;
      break;
    case 0xAu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v33 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v33 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 10;
          return a1;
        }
        if (v33 > 0xDD)
        {
          v20 = 10;
          goto LABEL_241;
        }
      }
      a1[v15] = 10;
      break;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 11;
          return a1;
        }
        if (v34 > 0xDD)
        {
          v20 = 11;
          goto LABEL_241;
        }
      }
      a1[v15] = 11;
      break;
    case 0xCu:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 12;
          return a1;
        }
        if (v35 > 0xDD)
        {
          v20 = 12;
          goto LABEL_241;
        }
      }
      a1[v15] = 12;
      break;
    case 0xDu:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 13;
          return a1;
        }
        if (v36 > 0xDD)
        {
          v20 = 13;
          goto LABEL_241;
        }
      }
      a1[v15] = 13;
      break;
    case 0xEu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 14;
          return a1;
        }
        if (v37 > 0xDD)
        {
          v20 = 14;
          goto LABEL_241;
        }
      }
      a1[v15] = 14;
      break;
    case 0xFu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 15;
          return a1;
        }
        if (v38 > 0xDD)
        {
          v20 = 15;
          goto LABEL_241;
        }
      }
      a1[v15] = 15;
      break;
    case 0x10u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 16;
          return a1;
        }
        if (v39 > 0xDD)
        {
          v20 = 16;
          goto LABEL_241;
        }
      }
      a1[v15] = 16;
      break;
    case 0x11u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 17;
          return a1;
        }
        if (v40 > 0xDD)
        {
          v20 = 17;
          goto LABEL_241;
        }
      }
      a1[v15] = 17;
      break;
    case 0x12u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 18;
          return a1;
        }
        if (v41 > 0xDD)
        {
          v20 = 18;
          goto LABEL_241;
        }
      }
      a1[v15] = 18;
      break;
    case 0x13u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 19;
          return a1;
        }
        if (v42 > 0xDD)
        {
          v20 = 19;
          goto LABEL_241;
        }
      }
      a1[v15] = 19;
      break;
    case 0x14u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 20;
          return a1;
        }
        if (v43 > 0xDD)
        {
          v20 = 20;
          goto LABEL_241;
        }
      }
      a1[v15] = 20;
      break;
    case 0x15u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 21;
          return a1;
        }
        if (v44 > 0xDD)
        {
          v20 = 21;
          goto LABEL_241;
        }
      }
      a1[v15] = 21;
      break;
    case 0x16u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 22;
          return a1;
        }
        if (v45 > 0xDD)
        {
          v20 = 22;
          goto LABEL_241;
        }
      }
      a1[v15] = 22;
      break;
    case 0x17u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 23;
          return a1;
        }
        if (v46 > 0xDD)
        {
          v20 = 23;
          goto LABEL_241;
        }
      }
      a1[v15] = 23;
      break;
    case 0x18u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 24;
          return a1;
        }
        if (v47 > 0xDD)
        {
          v20 = 24;
          goto LABEL_241;
        }
      }
      a1[v15] = 24;
      break;
    case 0x19u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 25;
          return a1;
        }
        if (v48 > 0xDD)
        {
          v20 = 25;
          goto LABEL_241;
        }
      }
      a1[v15] = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 26;
          return a1;
        }
        if (v58 > 0xDD)
        {
          v20 = 26;
          goto LABEL_241;
        }
      }
      a1[v15] = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 27;
          return a1;
        }
        if (v57 > 0xDD)
        {
          v20 = 27;
          goto LABEL_241;
        }
      }
      a1[v15] = 27;
      break;
    case 0x1Cu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v15 <= 3)
      {
        v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 28;
          return a1;
        }
        if (v49 > 0xDD)
        {
          v20 = 28;
          goto LABEL_241;
        }
      }
      a1[v15] = 28;
      break;
    case 0x1Du:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 29;
          return a1;
        }
        if (v50 > 0xDD)
        {
          v20 = 29;
          goto LABEL_241;
        }
      }
      a1[v15] = 29;
      break;
    case 0x1Eu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 30;
          return a1;
        }
        if (v51 > 0xDD)
        {
          v20 = 30;
          goto LABEL_241;
        }
      }
      a1[v15] = 30;
      break;
    case 0x1Fu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 31;
          return a1;
        }
        if (v52 > 0xDD)
        {
          v20 = 31;
          goto LABEL_241;
        }
      }
      a1[v15] = 31;
      break;
    case 0x20u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDD)
        {
          *(_DWORD *)&a1[v15] = 32;
          return a1;
        }
        if (v53 > 0xDD)
        {
          v20 = 32;
          goto LABEL_241;
        }
      }
      a1[v15] = 32;
      break;
    case 0x21u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 > 3)
        goto LABEL_155;
      v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v54 > 0xFFDD)
      {
        *(_DWORD *)&a1[v15] = 33;
        return a1;
      }
      if (v54 > 0xDD)
      {
        v20 = 33;
LABEL_241:
        *(_WORD *)&a1[v15] = v20;
      }
      else
      {
LABEL_155:
        a1[v15] = 33;
      }
      break;
    default:
      if (v15 > 3)
        goto LABEL_160;
      v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      v56 = 2;
      if (v55 > 0xFFDD)
        v56 = 4;
      if (v55 <= 0xDD)
LABEL_160:
        v56 = 1;
      memcpy(a1, a2, v56 + v15);
      break;
  }
  return a1;
}

_BYTE *sub_1BAA59110(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  __int16 *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  __int16 v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;

  if (a1 == a2)
    return a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 24;
  if (v8 <= v9)
    v10 = v9;
  else
    v10 = v8;
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84))
    v13 = *(_QWORD *)(v12 + 64);
  else
    v13 = *(_QWORD *)(v12 + 64) + 1;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  v16 = (__int16 *)&a1[v15];
  if (v15 > 3)
    goto LABEL_17;
  v17 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v17 <= 0xFFDD)
  {
    if (v17 > 0xDD)
    {
      v18 = (unsigned __int16)*v16;
      if (v18 < 0x22)
        goto LABEL_26;
      goto LABEL_22;
    }
LABEL_17:
    v18 = *(unsigned __int8 *)v16;
    if (v18 < 0x22)
      goto LABEL_26;
LABEL_22:
    if (v15 <= 3)
      v19 = v15;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  v18 = *(_DWORD *)v16;
  if (*(_DWORD *)v16 >= 0x22u)
    goto LABEL_22;
LABEL_26:
  switch(v18)
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 0xCu:
    case 0xDu:
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      break;
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
      swift_bridgeObjectRelease();
      break;
    case 0x1Au:
    case 0x1Bu:
      if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11))
        (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(a1, v11);
      break;
    case 0x21u:
      swift_release();
      break;
    default:
      break;
  }
  if (v15 > 3)
    goto LABEL_32;
  v20 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v20 <= 0xFFDD)
  {
    if (v20 > 0xDD)
    {
      v21 = *(unsigned __int16 *)&a2[v15];
      if (v21 < 0x22)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_32:
    v21 = a2[v15];
    if (v21 < 0x22)
      goto LABEL_41;
LABEL_37:
    if (v15 <= 3)
      v22 = v15;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  v21 = *(_DWORD *)&a2[v15];
  if (v21 >= 0x22)
    goto LABEL_37;
LABEL_41:
  switch(v21)
  {
    case 0u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v23 > 0xFFDD)
        {
          *(_DWORD *)v16 = 0;
          return a1;
        }
        if (v23 > 0xDD)
        {
          *v16 = 0;
          return a1;
        }
      }
      *(_BYTE *)v16 = 0;
      break;
    case 1u:
      *a1 = *a2;
      if (v15 <= 3)
      {
        v24 = 1;
        v25 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v25 > 0xFFDD)
        {
          *(_DWORD *)v16 = 1;
          return a1;
        }
        if (v25 > 0xDD)
          goto LABEL_260;
      }
      *(_BYTE *)v16 = 1;
      break;
    case 2u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v26 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v26 > 0xFFDD)
        {
          *(_DWORD *)v16 = 2;
          return a1;
        }
        if (v26 > 0xDD)
        {
          v24 = 2;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 2;
      break;
    case 3u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v27 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v27 > 0xFFDD)
        {
          *(_DWORD *)v16 = 3;
          return a1;
        }
        if (v27 > 0xDD)
        {
          v24 = 3;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 3;
      break;
    case 4u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v28 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v28 > 0xFFDD)
        {
          *(_DWORD *)v16 = 4;
          return a1;
        }
        if (v28 > 0xDD)
        {
          v24 = 4;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 4;
      break;
    case 5u:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v29 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      v30 = *(_QWORD *)(v29 + 16);
      v31 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v31 = *(_OWORD *)v29;
      *(_QWORD *)(v31 + 16) = v30;
      if (v15 <= 3)
      {
        v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDD)
        {
          *(_DWORD *)v16 = 5;
          return a1;
        }
        if (v32 > 0xDD)
        {
          v24 = 5;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 5;
      break;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v33 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v33 > 0xFFDD)
        {
          *(_DWORD *)v16 = 6;
          return a1;
        }
        if (v33 > 0xDD)
        {
          v24 = 6;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 6;
      break;
    case 7u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDD)
        {
          *(_DWORD *)v16 = 7;
          return a1;
        }
        if (v34 > 0xDD)
        {
          v24 = 7;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 7;
      break;
    case 8u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDD)
        {
          *(_DWORD *)v16 = 8;
          return a1;
        }
        if (v35 > 0xDD)
        {
          v24 = 8;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 8;
      break;
    case 9u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDD)
        {
          *(_DWORD *)v16 = 9;
          return a1;
        }
        if (v36 > 0xDD)
        {
          v24 = 9;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 9;
      break;
    case 0xAu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDD)
        {
          *(_DWORD *)v16 = 10;
          return a1;
        }
        if (v37 > 0xDD)
        {
          v24 = 10;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 10;
      break;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDD)
        {
          *(_DWORD *)v16 = 11;
          return a1;
        }
        if (v38 > 0xDD)
        {
          v24 = 11;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 11;
      break;
    case 0xCu:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDD)
        {
          *(_DWORD *)v16 = 12;
          return a1;
        }
        if (v39 > 0xDD)
        {
          v24 = 12;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 12;
      break;
    case 0xDu:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *(_QWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDD)
        {
          *(_DWORD *)v16 = 13;
          return a1;
        }
        if (v40 > 0xDD)
        {
          v24 = 13;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 13;
      break;
    case 0xEu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDD)
        {
          *(_DWORD *)v16 = 14;
          return a1;
        }
        if (v41 > 0xDD)
        {
          v24 = 14;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 14;
      break;
    case 0xFu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDD)
        {
          *(_DWORD *)v16 = 15;
          return a1;
        }
        if (v42 > 0xDD)
        {
          v24 = 15;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 15;
      break;
    case 0x10u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDD)
        {
          *(_DWORD *)v16 = 16;
          return a1;
        }
        if (v43 > 0xDD)
        {
          v24 = 16;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 16;
      break;
    case 0x11u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDD)
        {
          *(_DWORD *)v16 = 17;
          return a1;
        }
        if (v44 > 0xDD)
        {
          v24 = 17;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 17;
      break;
    case 0x12u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDD)
        {
          *(_DWORD *)v16 = 18;
          return a1;
        }
        if (v45 > 0xDD)
        {
          v24 = 18;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 18;
      break;
    case 0x13u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDD)
        {
          *(_DWORD *)v16 = 19;
          return a1;
        }
        if (v46 > 0xDD)
        {
          v24 = 19;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 19;
      break;
    case 0x14u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDD)
        {
          *(_DWORD *)v16 = 20;
          return a1;
        }
        if (v47 > 0xDD)
        {
          v24 = 20;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 20;
      break;
    case 0x15u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDD)
        {
          *(_DWORD *)v16 = 21;
          return a1;
        }
        if (v48 > 0xDD)
        {
          v24 = 21;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 21;
      break;
    case 0x16u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDD)
        {
          *(_DWORD *)v16 = 22;
          return a1;
        }
        if (v49 > 0xDD)
        {
          v24 = 22;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 22;
      break;
    case 0x17u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDD)
        {
          *(_DWORD *)v16 = 23;
          return a1;
        }
        if (v50 > 0xDD)
        {
          v24 = 23;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 23;
      break;
    case 0x18u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDD)
        {
          *(_DWORD *)v16 = 24;
          return a1;
        }
        if (v51 > 0xDD)
        {
          v24 = 24;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 24;
      break;
    case 0x19u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDD)
        {
          *(_DWORD *)v16 = 25;
          return a1;
        }
        if (v52 > 0xDD)
        {
          v24 = 25;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDD)
        {
          *(_DWORD *)v16 = 26;
          return a1;
        }
        if (v62 > 0xDD)
        {
          v24 = 26;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDD)
        {
          *(_DWORD *)v16 = 27;
          return a1;
        }
        if (v61 > 0xDD)
        {
          v24 = 27;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 27;
      break;
    case 0x1Cu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v15 <= 3)
      {
        v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDD)
        {
          *(_DWORD *)v16 = 28;
          return a1;
        }
        if (v53 > 0xDD)
        {
          v24 = 28;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 28;
      break;
    case 0x1Du:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDD)
        {
          *(_DWORD *)v16 = 29;
          return a1;
        }
        if (v54 > 0xDD)
        {
          v24 = 29;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 29;
      break;
    case 0x1Eu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDD)
        {
          *(_DWORD *)v16 = 30;
          return a1;
        }
        if (v55 > 0xDD)
        {
          v24 = 30;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 30;
      break;
    case 0x1Fu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDD)
        {
          *(_DWORD *)v16 = 31;
          return a1;
        }
        if (v56 > 0xDD)
        {
          v24 = 31;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 31;
      break;
    case 0x20u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 <= 3)
      {
        v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDD)
        {
          *(_DWORD *)v16 = 32;
          return a1;
        }
        if (v57 > 0xDD)
        {
          v24 = 32;
          goto LABEL_260;
        }
      }
      *(_BYTE *)v16 = 32;
      break;
    case 0x21u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v15 > 3)
        goto LABEL_174;
      v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v58 > 0xFFDD)
      {
        *(_DWORD *)v16 = 33;
        return a1;
      }
      if (v58 > 0xDD)
      {
        v24 = 33;
LABEL_260:
        *v16 = v24;
      }
      else
      {
LABEL_174:
        *(_BYTE *)v16 = 33;
      }
      break;
    default:
      if (v15 > 3)
        goto LABEL_179;
      v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      v60 = 2;
      if (v59 > 0xFFDD)
        v60 = 4;
      if (v59 <= 0xDD)
LABEL_179:
        v60 = 1;
      memcpy(a1, a2, v60 + v15);
      break;
  }
  return a1;
}

uint64_t sub_1BAA5A258(uint64_t a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  char v25;
  int v26;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v4 + 8;
  v6 = v4 + 24;
  if (v5 <= v6)
    v7 = v6;
  else
    v7 = v5;
  v8 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v10;
  if (v7 > v10)
    v10 = v7;
  if (v10 <= 0x10)
    v10 = 16;
  if (v10 > 3)
  {
    v11 = 35;
LABEL_14:
    v13 = 8;
    goto LABEL_15;
  }
  v12 = ((1 << (8 * v10)) + 3) >> (8 * v10);
  if (v12 > 0xFFDD)
    goto LABEL_18;
  v11 = v12 + 34;
  if (v12 <= 0xDD)
    goto LABEL_14;
  v13 = 16;
LABEL_15:
  v14 = (1 << v13) - v11;
  if ((v14 & 0x80000000) == 0)
  {
    if (v10 > 3)
      goto LABEL_22;
LABEL_19:
    v15 = ((1 << (8 * v10)) + 3) >> (8 * v10);
    v16 = 2;
    if (v15 > 0xFFDD)
      v16 = 4;
    if (v15 > 0xDD)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_18:
  v14 = 0x7FFFFFFF;
  if (v10 <= 3)
    goto LABEL_19;
LABEL_22:
  v16 = 1;
LABEL_23:
  if (!a2)
    return 0;
  if (a2 <= v14)
    goto LABEL_41;
  v17 = v16 + v10;
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((a2 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_41;
      goto LABEL_34;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_41;
      goto LABEL_34;
    }
    if (v20 < 2)
    {
LABEL_41:
      if (v14)
      {
        if (v10 <= 3)
        {
          v28 = ((1 << (8 * v10)) + 3) >> (8 * v10);
          if (v28 > 0xFFDD)
          {
            v23 = *(_DWORD *)(a1 + v10);
            v24 = ~v23;
LABEL_51:
            v31 = 0x7FFFFFFF;
LABEL_52:
            if (v31 > v24)
              return -v23;
            else
              return 0;
          }
          v26 = v28 + 34;
          if (v28 > 0xDD)
          {
            v30 = *(unsigned __int16 *)(a1 + v10);
            v23 = v30 | 0xFFFF0000;
            v24 = v30 ^ 0xFFFF;
            v25 = 16;
          }
          else
          {
            v29 = *(unsigned __int8 *)(a1 + v10);
            v23 = v29 | 0xFFFFFF00;
            v24 = v29 ^ 0xFF;
            v25 = 8;
          }
        }
        else
        {
          v22 = *(unsigned __int8 *)(a1 + v10);
          v23 = v22 | 0xFFFFFF00;
          v24 = v22 ^ 0xFF;
          v25 = 8;
          v26 = 35;
        }
        v31 = (1 << v25) - v26;
        if ((v31 & 0x80000000) == 0)
          goto LABEL_52;
        goto LABEL_51;
      }
      return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_41;
LABEL_34:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 > 3)
      LODWORD(v17) = 4;
    __asm { BR              X12 }
  }
  return v14 + v21 + 1;
}

void sub_1BAA5A5AC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  char v13;
  int v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  size_t v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + 8;
  v8 = v6 + 24;
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = v7;
  v10 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v12;
  if (v9 > v12)
    v12 = v9;
  if (v12 <= 0x10)
    v12 = 16;
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v17 = ((1 << v13) + 3) >> v13;
    if (v17 > 0xFFDD)
      goto LABEL_19;
    v14 = v17 + 34;
    if (v17 > 0xDD)
    {
      v15 = 16;
LABEL_13:
      v16 = (1 << v15) - v14;
      if ((v16 & 0x80000000) == 0)
      {
        if (v12 > 3)
          goto LABEL_23;
LABEL_20:
        v18 = ((1 << v13) + 3) >> v13;
        v19 = 2;
        if (v18 > 0xFFDD)
          v19 = 4;
        if (v18 > 0xDD)
        {
LABEL_24:
          v20 = v19 + v12;
          if (a3 <= v16)
          {
            v21 = 0u;
          }
          else if (v20 <= 3)
          {
            v23 = ((a3 - v16 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
            if (HIWORD(v23))
            {
              v21 = 4u;
            }
            else if (v23 >= 0x100)
            {
              v21 = 2;
            }
            else
            {
              v21 = v23 > 1;
            }
          }
          else
          {
            v21 = 1u;
          }
          if (v16 < a2)
          {
            v22 = ~v16 + a2;
            if (v20 < 4)
            {
              if ((_DWORD)v20)
              {
                v24 = v22 & ~(-1 << (8 * v20));
                bzero(a1, v20);
                if ((_DWORD)v20 == 3)
                {
                  *(_WORD *)a1 = v24;
                  a1[2] = BYTE2(v24);
                }
                else if ((_DWORD)v20 == 2)
                {
                  *(_WORD *)a1 = v24;
                }
                else
                {
                  *a1 = v24;
                }
              }
            }
            else
            {
              bzero(a1, v20);
              *(_DWORD *)a1 = v22;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_23:
        v19 = 1;
        goto LABEL_24;
      }
LABEL_19:
      v16 = 0x7FFFFFFF;
      if (v12 > 3)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  else
  {
    v14 = 35;
  }
  v15 = 8;
  goto LABEL_13;
}

uint64_t sub_1BAA5A924(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t result;
  unsigned int v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v3 = v2 + 8;
  v4 = v2 + 24;
  if (v3 <= v4)
    v5 = v4;
  else
    v5 = v3;
  v6 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v8;
  if (v5 > v8)
    v8 = v5;
  if (v8 <= 0x10)
    v8 = 16;
  if (v8 > 3)
    goto LABEL_11;
  v10 = ((1 << (8 * v8)) + 3) >> (8 * v8);
  if (v10 > 0xFFDD)
  {
    result = *(unsigned int *)(a1 + v8);
  }
  else
  {
    if (v10 <= 0xDD)
    {
LABEL_11:
      result = *(unsigned __int8 *)(a1 + v8);
      goto LABEL_16;
    }
    result = *(unsigned __int16 *)(a1 + v8);
  }
LABEL_16:
  if (result >= 0x22)
  {
    if (v8 <= 3)
      v11 = v8;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_1BAA5AB18(_BYTE *a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  int v10;
  unint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int *v16;
  unsigned int v17;
  int v18;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v4 + 8;
  v6 = v4 + 24;
  if (v5 <= v6)
    v7 = v6;
  else
    v7 = v5;
  result = sub_1BB86EB84();
  v9 = *(_QWORD *)(result - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v11;
  if (v7 > v11)
    v11 = v7;
  if (v11 <= 0x10)
    v12 = 16;
  else
    v12 = v11;
  if (a2 > 0x21)
  {
    v13 = a2 - 34;
    if (v12 < 4)
    {
      v15 = (v13 >> (8 * v12)) + 34;
      v16 = (int *)&a1[v12];
      v17 = ((1 << (8 * v12)) + 3) >> (8 * v12);
      if (v17 > 0xFFDD)
      {
        *v16 = v15;
      }
      else if (v17 > 0xDD)
      {
        *(_WORD *)v16 = v15;
      }
      else
      {
        *(_BYTE *)v16 = v15;
      }
    }
    else
    {
      a1[v12] = 34;
    }
    if (v12 >= 4)
      v18 = 4;
    else
      v18 = v12;
    bzero(a1, v12);
    __asm { BR              X10 }
  }
  if (v12 > 3)
    goto LABEL_13;
  v14 = ((1 << (8 * v12)) + 3) >> (8 * v12);
  if (v14 > 0xFFDD)
  {
    *(_DWORD *)&a1[v12] = a2;
  }
  else
  {
    if (v14 <= 0xDD)
    {
LABEL_13:
      a1[v12] = a2;
      return result;
    }
    *(_WORD *)&a1[v12] = a2;
  }
  return result;
}

uint64_t sub_1BAA5AD5C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedGroupEmitterCustomRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupEmitterCustomRule);
}

uint64_t method lookup function for FeedGroupEmitterCustomRule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupEmitterCustomRule.__allocating_init(description:block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BAA5ADC8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy46_8(a2, a1);
  return a2;
}

uint64_t sub_1BAA5AE04(uint64_t a1)
{
  sub_1BAA5AE40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  return a1;
}

uint64_t sub_1BAA5AE40(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  switch((a6 >> 45) & 7)
  {
    case 0uLL:
      result = sub_1BA895B84(result, a2, a3);
      break;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAA5AE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5F9880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAA5AEC0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AE270)
  {
    sub_1BB86C8B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AE270);
  }
}

uint64_t sub_1BAA5AF24(uint64_t a1, uint64_t a2)
{
  return sub_1BAA559C4(a1, a2);
}

uint64_t sub_1BAA5AF38(uint64_t a1)
{
  return sub_1BAA559A4(a1) & 1;
}

uint64_t sub_1BAA5AF50(uint64_t a1)
{
  return sub_1BAA559E0(a1) & 1;
}

uint64_t sub_1BAA5AF68(uint64_t a1)
{
  return sub_1BAA55A00(a1) & 1;
}

uint64_t FormatAudioTrack.article.getter()
{
  return swift_retain();
}

uint64_t FormatAudioTrack.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAudioTrack.init(article:overrides:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int8x16_t *a3@<X8>, int64x2_t a4@<Q1>)
{
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 24);
  a4.i64[0] = 1;
  v6 = vandq_s8(*(int8x16_t *)(a2 + 8), (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(*(int64x2_t *)(a2 + 8), a4)).i64[0], 0));
  v7 = *(_QWORD *)(a2 + 8);
  if (v7 == 1)
    v4 = 0;
  a3->i64[0] = result;
  a3->i64[1] = v4;
  if (v7 == 1)
    v8 = 0;
  else
    v8 = v5;
  a3[1] = v6;
  a3[2].i64[0] = v8;
  return result;
}

NewsFeed::FormatAudioTrack::Overrides __swiftcall FormatAudioTrack.Overrides.init(title:featureName:)(Swift::String_optional title, Swift::String_optional featureName)
{
  Swift::String_optional *v2;
  NewsFeed::FormatAudioTrack::Overrides result;

  *v2 = title;
  v2[1] = featureName;
  result.featureName = featureName;
  result.title = title;
  return result;
}

uint64_t sub_1BAA5B018()
{
  _BYTE *v0;

  if (*v0)
    return 0x4E65727574616566;
  else
    return 0x656C746974;
}

uint64_t sub_1BAA5B058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA5C1A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA5B07C()
{
  sub_1BAA5B95C();
  return sub_1BB874710();
}

uint64_t sub_1BAA5B0A4()
{
  sub_1BAA5B95C();
  return sub_1BB87471C();
}

uint64_t FormatAudioTrack.Overrides.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BA4CDF6C(0, &qword_1ED39C148, (uint64_t (*)(void))sub_1BAA5B95C, (uint64_t)&type metadata for FormatAudioTrack.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5B95C();
  sub_1BB8746C8();
  v13 = 0;
  v9 = v11[3];
  sub_1BB87411C();
  if (!v9)
  {
    v12 = 1;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatAudioTrack.Overrides.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;

  v20 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39C0A8, (uint64_t (*)(void))sub_1BAA5B95C, (uint64_t)&type metadata for FormatAudioTrack.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5B95C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v20;
  v22 = 0;
  v10 = sub_1BB87402C();
  v12 = v11;
  v21 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB87402C();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v17;
  v9[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA5B3D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatAudioTrack.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1BAA5B3E8(_QWORD *a1)
{
  return FormatAudioTrack.Overrides.encode(to:)(a1);
}

uint64_t sub_1BAA5B404()
{
  _BYTE *v0;

  if (*v0)
    return 0x656469727265766FLL;
  else
    return 0x656C6369747261;
}

uint64_t sub_1BAA5B444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA5C2A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA5B468()
{
  sub_1BAA5BA90();
  return sub_1BB874710();
}

uint64_t sub_1BAA5B490()
{
  sub_1BAA5BA90();
  return sub_1BB87471C();
}

uint64_t FormatAudioTrack.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  sub_1BA4CDF6C(0, &qword_1EF2AE278, (uint64_t (*)(void))sub_1BAA5BA90, (uint64_t)&type metadata for FormatAudioTrack.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v9 = *v1;
  v8 = v1[1];
  v16 = v1[2];
  v17 = v8;
  v10 = v1[3];
  v14 = v1[4];
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5BA90();
  sub_1BB8746C8();
  v19 = v9;
  v23 = 0;
  type metadata accessor for FormatArticle();
  sub_1BAA5BB18(&qword_1ED39CBB0, (uint64_t)&protocol conformance descriptor for FormatArticle);
  v11 = v18;
  sub_1BB8741AC();
  if (!v11)
  {
    v19 = v17;
    v20 = v16;
    v21 = v15;
    v22 = v14;
    v23 = 1;
    sub_1BAA5BAD4();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatAudioTrack.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v16 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AE288, (uint64_t (*)(void))sub_1BAA5BA90, (uint64_t)&type metadata for FormatAudioTrack.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5BA90();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v16;
  type metadata accessor for FormatArticle();
  v20 = 0;
  sub_1BAA5BB18(&qword_1ED3B38F0, (uint64_t)&protocol conformance descriptor for FormatArticle);
  sub_1BB8740D4();
  v11 = v17;
  v20 = 1;
  sub_1BAA5BB58();
  swift_retain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v12 = v17;
  v13 = v19;
  *(_OWORD *)(v10 + 16) = v18;
  *(_QWORD *)v10 = v11;
  *(_QWORD *)(v10 + 8) = v12;
  *(_QWORD *)(v10 + 32) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BAA5B880@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAudioTrack.init(from:)(a1, a2);
}

uint64_t sub_1BAA5B894(_QWORD *a1)
{
  return FormatAudioTrack.encode(to:)(a1);
}

uint64_t _s8NewsFeed16FormatAudioTrackV9OverridesV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1BB874398(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1BB874398() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BAA5B95C()
{
  unint64_t result;

  result = qword_1ED39B2E8;
  if (!qword_1ED39B2E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8950B8, &type metadata for FormatAudioTrack.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39B2E8);
  }
  return result;
}

uint64_t _s8NewsFeed16FormatAudioTrackV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v8 = *a2;
  v7 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  type metadata accessor for FormatArticle();
  if ((static FormatArticle.== infix(_:_:)(v2, v8) & 1) == 0)
    return 0;
  if (v5)
  {
    if (!v10 || (v3 != v7 || v5 != v10) && (sub_1BB874398() & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  if (v6)
  {
    if (v11 && (v4 == v9 && v6 == v11 || (sub_1BB874398() & 1) != 0))
      return 1;
  }
  else if (!v11)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1BAA5BA90()
{
  unint64_t result;

  result = qword_1EF2AE280;
  if (!qword_1EF2AE280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB895068, &type metadata for FormatAudioTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE280);
  }
  return result;
}

unint64_t sub_1BAA5BAD4()
{
  unint64_t result;

  result = qword_1ED39B300;
  if (!qword_1ED39B300)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrack.Overrides, &type metadata for FormatAudioTrack.Overrides);
    atomic_store(result, (unint64_t *)&qword_1ED39B300);
  }
  return result;
}

uint64_t sub_1BAA5BB18(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatArticle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAA5BB58()
{
  unint64_t result;

  result = qword_1ED39B308;
  if (!qword_1ED39B308)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrack.Overrides, &type metadata for FormatAudioTrack.Overrides);
    atomic_store(result, (unint64_t *)&qword_1ED39B308);
  }
  return result;
}

uint64_t sub_1BAA5BB9C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAA5BB58, (uint64_t (*)(void))sub_1BAA5BAD4, (uint64_t (*)(void))sub_1BAA5BBB8);
}

unint64_t sub_1BAA5BBB8()
{
  unint64_t result;

  result = qword_1EF2AE290;
  if (!qword_1EF2AE290)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrack.Overrides, &type metadata for FormatAudioTrack.Overrides);
    atomic_store(result, (unint64_t *)&qword_1EF2AE290);
  }
  return result;
}

uint64_t sub_1BAA5BBFC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAA5BC18, (uint64_t (*)(void))sub_1BAA5BC5C, (uint64_t (*)(void))sub_1BAA5BCA0);
}

unint64_t sub_1BAA5BC18()
{
  unint64_t result;

  result = qword_1EF2AE298;
  if (!qword_1EF2AE298)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrack, &type metadata for FormatAudioTrack);
    atomic_store(result, (unint64_t *)&qword_1EF2AE298);
  }
  return result;
}

unint64_t sub_1BAA5BC5C()
{
  unint64_t result;

  result = qword_1EF2AE2A0;
  if (!qword_1EF2AE2A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrack, &type metadata for FormatAudioTrack);
    atomic_store(result, (unint64_t *)&qword_1EF2AE2A0);
  }
  return result;
}

unint64_t sub_1BAA5BCA0()
{
  unint64_t result;

  result = qword_1EF2AE2A8;
  if (!qword_1EF2AE2A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrack, &type metadata for FormatAudioTrack);
    atomic_store(result, (unint64_t *)&qword_1EF2AE2A8);
  }
  return result;
}

uint64_t destroy for FormatAudioTrack()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatAudioTrack(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatAudioTrack(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatAudioTrack(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAudioTrack()
{
  return &type metadata for FormatAudioTrack;
}

uint64_t getEnumTagSinglePayload for FormatIssue.Overrides(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatIssue.Overrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAudioTrack.Overrides()
{
  return &type metadata for FormatAudioTrack.Overrides;
}

ValueMetadata *type metadata accessor for FormatAudioTrack.CodingKeys()
{
  return &type metadata for FormatAudioTrack.CodingKeys;
}

uint64_t _s8NewsFeed16FormatAudioTrackV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA5BF70 + 4 * byte_1BB894D95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA5BFA4 + 4 * asc_1BB894D90[v4]))();
}

uint64_t sub_1BAA5BFA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA5BFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA5BFB4);
  return result;
}

uint64_t sub_1BAA5BFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA5BFC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA5BFCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA5BFD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatAudioTrack.Overrides.CodingKeys()
{
  return &type metadata for FormatAudioTrack.Overrides.CodingKeys;
}

unint64_t sub_1BAA5BFF4()
{
  unint64_t result;

  result = qword_1EF2AE2B0;
  if (!qword_1EF2AE2B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894F88, &type metadata for FormatAudioTrack.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE2B0);
  }
  return result;
}

unint64_t sub_1BAA5C03C()
{
  unint64_t result;

  result = qword_1EF2AE2B8;
  if (!qword_1EF2AE2B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB895040, &type metadata for FormatAudioTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE2B8);
  }
  return result;
}

unint64_t sub_1BAA5C084()
{
  unint64_t result;

  result = qword_1EF2AE2C0;
  if (!qword_1EF2AE2C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894FB0, &type metadata for FormatAudioTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE2C0);
  }
  return result;
}

unint64_t sub_1BAA5C0CC()
{
  unint64_t result;

  result = qword_1EF2AE2C8;
  if (!qword_1EF2AE2C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894FD8, &type metadata for FormatAudioTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE2C8);
  }
  return result;
}

unint64_t sub_1BAA5C114()
{
  unint64_t result;

  result = qword_1ED39B2F8;
  if (!qword_1ED39B2F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894EF8, &type metadata for FormatAudioTrack.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39B2F8);
  }
  return result;
}

unint64_t sub_1BAA5C15C()
{
  unint64_t result;

  result = qword_1ED39B2F0;
  if (!qword_1ED39B2F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB894F20, &type metadata for FormatAudioTrack.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39B2F0);
  }
  return result;
}

uint64_t sub_1BAA5C1A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E65727574616566 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAA5C2A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id IssueActivityItemsConfiguration.__allocating_init(issue:userHasAccess:)(void *a1, char a2)
{
  objc_class *v2;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  objc_super v36;
  objc_super v37;

  if ((a2 & 1) != 0)
  {
    sub_1BA65E330();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BB895110;
    v5 = (objc_class *)type metadata accessor for SharingIssueImageActivityItemSource();
    v6 = (char *)objc_allocWithZone(v5);
    v7 = OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage;
    *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage] = 0;
    v8 = v6;
    v9 = objc_msgSend(a1, sel_coverImageAssetHandle);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_filePath);
      if (v11)
      {
        sub_1BB8729A0();

        v12 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v13 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v11 = objc_msgSend(v12, sel_initWithContentsOfFile_, v13);

      }
      else
      {

      }
    }
    else
    {
      v11 = 0;
    }
    v15 = objc_allocWithZone(v2);
    v16 = *(void **)&v6[v7];
    *(_QWORD *)&v6[v7] = v11;

    v37.receiver = v8;
    v37.super_class = v5;
    *(_QWORD *)(v4 + 32) = objc_msgSendSuper2(&v37, sel_init);
    v17 = (objc_class *)type metadata accessor for SharingIssueTextActivityItemSource();
    v18 = (char *)objc_allocWithZone(v17);
    *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = a1;
    v19 = a1;
    v20 = v18;
    v21 = objc_msgSend(v19, sel_title);
    v22 = sub_1BB8729A0();
    v24 = v23;

    v25 = (uint64_t *)&v20[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
    *v25 = v22;
    v25[1] = v24;
    v26 = objc_msgSend(v19, sel_coverDate);
    v27 = sub_1BB8729A0();
    v29 = v28;

    v30 = (uint64_t *)&v20[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
    *v30 = v27;
    v30[1] = v29;

    v36.receiver = v20;
    v36.super_class = v17;
    v31 = objc_msgSendSuper2(&v36, sel_init);

    *(_QWORD *)(v4 + 40) = v31;
    objc_allocWithZone((Class)type metadata accessor for SharingIssueURLActivityItemSource());
    v32 = v19;
    v33 = sub_1BB0B63F4(v32, 0);

    *(_QWORD *)(v4 + 48) = v33;
    sub_1BB872DCC();
    sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2B6C20);
    v34 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v15, sel_initNAWithActivityItemSources_, v34);

  }
  else
  {

    return 0;
  }
  return v14;
}

id IssueActivityItemsConfiguration.__allocating_init(issue:itemOptions:)(void *a1, uint64_t a2)
{
  char v3;

  v3 = sub_1BA79E0CC(12, a2);
  swift_bridgeObjectRelease();
  return IssueActivityItemsConfiguration.__allocating_init(issue:userHasAccess:)(a1, v3 & 1);
}

id IssueActivityItemsConfiguration.__allocating_init(objects:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2AE2D0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.init(objects:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2AE2D0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1BAA5CA20();
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.init(itemProviders:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BAA5CA20();
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

id IssueActivityItemsConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BAA5CA20()
{
  unint64_t result;

  result = qword_1EF2B6C30;
  if (!qword_1EF2B6C30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B6C30);
  }
  return result;
}

uint64_t type metadata accessor for IssueActivityItemsConfiguration()
{
  return objc_opt_self();
}

uint64_t FormatPuzzleType.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1BAA5CB30(v6, (uint64_t)v5);
  return sub_1BAA5CB94((uint64_t)v5, a1);
}

uint64_t sub_1BAA5CB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA5CB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id FCPuzzleTypeProviding.overridden(by:assetManager:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v17;

  v3 = v2;
  sub_1BA4A3FB4(0, &qword_1ED3A5A60, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  v9 = type metadata accessor for FormatPuzzleType.Overrides(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA57B488(a1, (uint64_t)v8, &qword_1ED3A5A60, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA502AD0((uint64_t)v8, &qword_1ED3A5A60, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
LABEL_6:
    swift_unknownObjectRetain();
    return (id)v3;
  }
  sub_1BAA5CB94((uint64_t)v8, (uint64_t)v12);
  if ((sub_1BAA5DD54() & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
    goto LABEL_6;
  }
  v13 = sub_1BAA5D79C(a2);
  v14 = objc_allocWithZone(MEMORY[0x1E0D58E40]);
  swift_unknownObjectRetain();
  v15 = objc_msgSend(v14, sel_initWithPuzzleType_overrides_, v3, v13);
  swift_unknownObjectRelease();

  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
  return v15;
}

uint64_t FormatPuzzleType.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAA5CDAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  v7 = *a1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1BAA5CB30(v7, (uint64_t)v6);
  return sub_1BAA5CB94((uint64_t)v6, a2);
}

uint64_t sub_1BAA5CE68(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA5F26C(a1, (uint64_t)v6);
  v7 = *a2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1BAA5DF18((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t FormatPuzzleType.overrides.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1BAA5DF18(a1, v3);
  return swift_endAccess();
}

uint64_t (*FormatPuzzleType.overrides.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleType.selectors.getter()
{
  return sub_1BA4DE208();
}

uint64_t FormatPuzzleType.selectors.setter(uint64_t a1)
{
  return sub_1BAA5D084(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
}

uint64_t (*FormatPuzzleType.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleType.properties.getter()
{
  return sub_1BA4DE208();
}

uint64_t sub_1BAA5D014(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPuzzleType.properties.setter(uint64_t a1)
{
  return sub_1BAA5D084(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
}

uint64_t sub_1BAA5D084(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleType.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatPuzzleType.Overrides.init(themeColor:darkStyleThemeColor:exploreTileImage:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a2;
  *a4 = *a1;
  a4[1] = v5;
  v6 = (uint64_t)a4 + *(int *)(type metadata accessor for FormatPuzzleType.Overrides(0) + 24);
  return sub_1BA7F0AD4(a3, v6);
}

uint64_t FormatPuzzleType.__allocating_init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
  swift_beginAccess();
  *v11 = a4;
  v12 = (_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
  swift_beginAccess();
  *v12 = a5;
  v13 = v10 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1BAA5CB94(a3, v13);
  return v10;
}

uint64_t FormatPuzzleType.init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v9 = (_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
  swift_beginAccess();
  *v9 = a4;
  v10 = (_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
  swift_beginAccess();
  *v10 = a5;
  v11 = v5 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
  swift_beginAccess();
  sub_1BAA5CB94(a3, v11);
  return v5;
}

uint64_t FormatPuzzleType.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatPuzzleType.init(from:)(a1);
  return v2;
}

uint64_t FormatPuzzleType.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64x2_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v3 = *v1;
  v35 = a1;
  v36 = v3;
  sub_1BA4A3FB4(0, &qword_1ED3A5A60, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v30 - v5;
  v6 = type metadata accessor for FormatPuzzleType.Overrides(0);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (int64x2_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1ED3AE6B0, (uint64_t (*)(void))sub_1BAA5DF5C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5DF5C();
  v14 = v33;
  v15 = v34;
  sub_1BB87468C();
  if (v15)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v31;
    v16 = (uint64_t)v32;
    v39 = 0;
    v18 = v13;
    *(_QWORD *)(v14 + 16) = sub_1BB874098();
    *(_QWORD *)(v14 + 24) = v19;
    v39 = 1;
    sub_1BA4A2870(&qword_1ED3AD520, type metadata accessor for FormatPuzzleType.Overrides, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
    sub_1BB874068();
    v20 = v8;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v16, 1, v17) == 1)
    {
      v21 = &v8->i8[*(int *)(v17 + 24)];
      v22 = sub_1BB86C67C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      *v20 = vdupq_n_s64(0xF000000000000007);
      sub_1BA502AD0(v16, &qword_1ED3A5A60, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
    }
    else
    {
      sub_1BAA5CB94(v16, (uint64_t)v8);
    }
    v23 = v14 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1BAA5CB94((uint64_t)v20, v23);
    sub_1BA6BCC84();
    LOBYTE(v37) = 2;
    sub_1BA5DBC84();
    sub_1BB874068();
    v24 = v18;
    if (v38)
      v25 = v38;
    else
      v25 = MEMORY[0x1E0DEE9E8];
    v26 = (_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
    swift_beginAccess();
    *v26 = v25;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
    v40 = 3;
    sub_1BA5DBB94((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    if (v37)
      v28 = v37;
    else
      v28 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
    v29 = (_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
    swift_beginAccess();
    *v29 = v28;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v14;
}

id sub_1BAA5D79C(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - v6;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatPuzzleType.Overrides(0);
  sub_1BA57B488((uint64_t)v2 + *(int *)(v12 + 24), (uint64_t)v7, (unint64_t *)&qword_1ED3D2E70, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BA502AD0((uint64_t)v7, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v14 = (void *)sub_1BB86C58C();
    v13 = objc_msgSend(a1, sel_assetHandleForURL_lifetimeHint_, v14, 0);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if ((~*v2 & 0xF000000000000007) != 0)
  {
    v20 = *v2;
    v15 = sub_1BAA5D990();
  }
  else
  {
    v15 = 0;
  }
  if ((~v2[1] & 0xF000000000000007) != 0)
  {
    v20 = v2[1];
    v16 = sub_1BAA5D990();
  }
  else
  {
    v16 = 0;
  }
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58E58]), sel_initWithThemeColor_darkStyleThemeColor_exploreTileImageAssetHandle_, v15, v16, v13);

  return v17;
}

id sub_1BAA5D990()
{
  double *v0;
  double v1;
  void *v2;
  void *v3;
  double v5;
  double v6;
  double v7;
  double v8[3];

  v8[2] = *(double *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v7 = 0.0;
  v8[0] = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  v8[1] = v1;
  FormatColor.color.getter();
  v3 = v2;
  objc_msgSend(v2, sel_getRed_green_blue_alpha_, v8, &v7, &v6, &v5);

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58A48]), sel_initWithRed_green_blue_alpha_, v8[0], v7, v6, v5);
}

uint64_t sub_1BAA5DA58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a2;
  v3 = sub_1BB86C67C();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v43 - v9;
  v11 = objc_msgSend(a1, sel_themeColor, v8);
  if (v11)
  {
    v12 = v11;
    v13 = swift_allocObject();
    objc_msgSend(v12, sel_red);
    v15 = v14 * 255.0;
    objc_msgSend(v12, sel_green);
    v17 = v16 * 255.0;
    objc_msgSend(v12, sel_blue);
    v19 = v18 * 255.0;
    objc_msgSend(v12, sel_alpha);
    *(double *)(v13 + 16) = v15;
    *(double *)(v13 + 24) = v17;
    *(double *)(v13 + 32) = v19;
    *(_QWORD *)(v13 + 40) = v20;
    *(_BYTE *)(v13 + 48) = 0;

    v21 = v13 | 0x6000000000000000;
  }
  else
  {
    v21 = 0xF000000000000007;
  }
  v22 = v44;
  *v44 = v21;
  v23 = objc_msgSend(a1, sel_darkStyleThemeColor);
  if (v23)
  {
    v24 = v23;
    v25 = swift_allocObject();
    objc_msgSend(v24, (SEL)&selRef_secondarySystemBackgroundColor);
    v27 = v26 * 255.0;
    objc_msgSend(v24, (SEL)&selRef_initWithImage_style_target_action_ + 4);
    v29 = v28 * 255.0;
    objc_msgSend(v24, (SEL)&selRef_setAlwaysBounceVertical_);
    v31 = v30 * 255.0;
    objc_msgSend(v24, (SEL)&selRef_setStandardAppearance_);
    *(double *)(v25 + 16) = v27;
    *(double *)(v25 + 24) = v29;
    *(double *)(v25 + 32) = v31;
    *(_QWORD *)(v25 + 40) = v32;
    *(_BYTE *)(v25 + 48) = 0;

    v33 = v25 | 0x6000000000000000;
  }
  else
  {
    v33 = 0xF000000000000007;
  }
  v34 = v45;
  v22[1] = v33;
  v35 = objc_msgSend(a1, sel_exploreTileImageAssetHandle);
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v35, sel_remoteURL);

    sub_1BB86C5EC();
    sub_1BB86C514();
    swift_unknownObjectRelease();
    v38 = v5;
    v39 = v46;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v46);
    v40 = 0;
  }
  else
  {
    swift_unknownObjectRelease();
    v40 = 1;
    v39 = v46;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v10, v40, 1, v39);
  v41 = type metadata accessor for FormatPuzzleType.Overrides(0);
  return sub_1BA7F0AD4((uint64_t)v10, (uint64_t)v22 + *(int *)(v41 + 24));
}

uint64_t sub_1BAA5DD54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - v2;
  v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = *v0;
  sub_1BAA5F26C((uint64_t)v0, (uint64_t)&v16 - v8);
  if ((~v10 & 0xF000000000000007) != 0)
  {
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1BAA5F26C((uint64_t)v0, (uint64_t)v6);
    goto LABEL_5;
  }
  v11 = *((_QWORD *)v9 + 1);
  sub_1BA5E7FF4(v11);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
  sub_1BA5E800C(v11);
  sub_1BAA5F26C((uint64_t)v0, (uint64_t)v6);
  if ((~v11 & 0xF000000000000007) != 0)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatPuzzleType.Overrides);
    return 1;
  }
  v12 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA57B488((uint64_t)&v6[*(int *)(v4 + 24)], (uint64_t)v3, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatPuzzleType.Overrides);
  v13 = sub_1BB86C67C();
  v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v3, 1, v13) != 1;
  sub_1BA502AD0((uint64_t)v3, (unint64_t *)&qword_1ED3D2E70, v12);
  return v14;
}

uint64_t sub_1BAA5DF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BAA5DF5C()
{
  unint64_t result;

  result = qword_1ED3AD4F0;
  if (!qword_1ED3AD4F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8954D4, &type metadata for FormatPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4F0);
  }
  return result;
}

uint64_t sub_1BAA5DFA0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA5E000()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x6C6F43656D656874;
}

uint64_t sub_1BAA5E06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA60128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA5E090()
{
  sub_1BAA5F228();
  return sub_1BB874710();
}

uint64_t sub_1BAA5E0B8()
{
  sub_1BAA5F228();
  return sub_1BB87471C();
}

uint64_t FormatPuzzleType.Overrides.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AE310, (uint64_t (*)(void))sub_1BAA5F228, (uint64_t)&type metadata for FormatPuzzleType.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5F228();
  sub_1BB8746C8();
  v13 = *v3;
  v12 = 0;
  sub_1BA62BA1C();
  sub_1BB87414C();
  if (!v2)
  {
    v13 = v3[1];
    v12 = 1;
    sub_1BB87414C();
    type metadata accessor for FormatPuzzleType.Overrides(0);
    LOBYTE(v13) = 2;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatPuzzleType.Overrides.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  char v25;
  uint64_t v26;

  v20 = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - v4;
  sub_1BA4CDF6C(0, &qword_1EF2AE320, (uint64_t (*)(void))sub_1BAA5F228, (uint64_t)&type metadata for FormatPuzzleType.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1BAA5F228();
  v21 = v9;
  v14 = (uint64_t)v24;
  sub_1BB87468C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  v24 = v5;
  v15 = v12;
  v16 = v20;
  v25 = 0;
  sub_1BA62C9A0();
  v17 = v21;
  v18 = v22;
  sub_1BB874068();
  *v15 = v26;
  v25 = 1;
  sub_1BB874068();
  v15[1] = v26;
  sub_1BB86C67C();
  LOBYTE(v26) = 2;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v18);
  sub_1BA7F0AD4((uint64_t)v24, (uint64_t)v15 + *(int *)(v10 + 24));
  sub_1BAA5F26C((uint64_t)v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatPuzzleType.Overrides);
}

uint64_t sub_1BAA5E5A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleType.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1BAA5E5B4(_QWORD *a1)
{
  return FormatPuzzleType.Overrides.encode(to:)(a1);
}

uint64_t sub_1BAA5E5CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA5E600 + 4 * byte_1BB895150[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAA5E600()
{
  return 0x656469727265766FLL;
}

uint64_t sub_1BAA5E630()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BAA5E648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA6027C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA5E66C()
{
  sub_1BAA5DF5C();
  return sub_1BB874710();
}

uint64_t sub_1BAA5E694()
{
  sub_1BAA5DF5C();
  return sub_1BB87471C();
}

uint64_t FormatPuzzleType.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BAA5DFA0(v0 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzleType.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BAA5DFA0(v0 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatPuzzleType.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;
  char v23;
  char v24;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v21 - v5);
  sub_1BA4CDF6C(0, &qword_1ED3AF410, (uint64_t (*)(void))sub_1BAA5DF5C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v21 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA5DF5C();
  sub_1BB8746C8();
  v23 = 0;
  v12 = v21[1];
  sub_1BB87417C();
  if (v12)
  {
    v13 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  }
  else
  {
    v14 = v2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1BAA5CB30(v14, (uint64_t)v6);
    sub_1BAA5EB70(v6, (uint64_t)v11, 1);
    sub_1BAA5DFA0((uint64_t)v6);
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
    swift_beginAccess();
    v17 = *v16;
    if (*(_QWORD *)(*v16 + 16))
    {
      v24 = 2;
      swift_bridgeObjectRetain_n();
      v18 = sub_1BA67F4CC(v17);
      swift_bridgeObjectRelease();
      v22 = v18;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v22);
      swift_release();
      v21[2] = v22;
      sub_1BAA5F2B0();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
    swift_beginAccess();
    v20 = *v19;
    if (*(_QWORD *)(*v19 + 16))
    {
      v24 = 3;
      v22 = (_QWORD *)v20;
      sub_1BAA5F2B0();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA5DBB94((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
      sub_1BB874464();
    }
    v13 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  }
  return v13(v11, v8);
}

uint64_t sub_1BAA5EAF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatPuzzleType.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAA5EB44(_QWORD *a1)
{
  return FormatPuzzleType.encode(to:)(a1);
}

uint64_t sub_1BAA5EB64(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed16FormatPuzzleTypeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BAA5EB70(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  int v18;
  uint64_t result;
  _QWORD v20[2];
  char v21;

  v20[1] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v20 - v6;
  v8 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  v14 = *a1;
  sub_1BAA5F26C((uint64_t)a1, (uint64_t)v20 - v12);
  if ((~v14 & 0xF000000000000007) != 0)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1BAA5F26C((uint64_t)a1, (uint64_t)v10);
    goto LABEL_6;
  }
  v15 = *((_QWORD *)v13 + 1);
  sub_1BA5E7FF4(v15);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatPuzzleType.Overrides);
  sub_1BA5E800C(v15);
  sub_1BAA5F26C((uint64_t)a1, (uint64_t)v10);
  if ((~v15 & 0xF000000000000007) != 0)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
    goto LABEL_7;
  }
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA57B488((uint64_t)&v10[*(int *)(v8 + 24)], (uint64_t)v7, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
  v17 = sub_1BB86C67C();
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 1, v17);
  result = sub_1BA502AD0((uint64_t)v7, (unint64_t *)&qword_1ED3D2E70, v16);
  if (v18 != 1)
  {
LABEL_7:
    v21 = a3;
    sub_1BA4CDF6C(0, &qword_1ED3AF410, (uint64_t (*)(void))sub_1BAA5DF5C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BAA5F2B0();
    sub_1BA4A2870(&qword_1EF2AE330, type metadata accessor for FormatPuzzleType.Overrides, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
    return sub_1BB874464();
  }
  return result;
}

BOOL _s8NewsFeed16FormatPuzzleTypeC9OverridesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v26;
  char v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  void (*v34)(uint64_t);
  void (*v35)(uint64_t);
  void (*v36)(uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1BB86C67C();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA842538();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - v19;
  v21 = *a1;
  v22 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v22 & 0xF000000000000007) != 0)
      goto LABEL_11;
    goto LABEL_6;
  }
  v42 = *a1;
  if ((~v22 & 0xF000000000000007) == 0)
    goto LABEL_10;
  v41 = v22;
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v42);
  v24 = v23;
  swift_release();
  sub_1BA5E800C(v21);
  if ((v24 & 1) != 0)
  {
LABEL_6:
    v21 = a1[1];
    v22 = a2[1];
    if ((~v21 & 0xF000000000000007) == 0)
    {
      if ((~v22 & 0xF000000000000007) == 0)
        goto LABEL_15;
LABEL_11:
      sub_1BA5E7FF4(v22);
      sub_1BA5E800C(v21);
      sub_1BA5E800C(v22);
      return 0;
    }
    v42 = a1[1];
    if ((~v22 & 0xF000000000000007) != 0)
    {
      v41 = v22;
      swift_retain_n();
      static FormatColor.== infix(_:_:)((uint64_t)&v42);
      v27 = v26;
      swift_release();
      sub_1BA5E800C(v21);
      if ((v27 & 1) == 0)
        return 0;
LABEL_15:
      v28 = type metadata accessor for FormatPuzzleType.Overrides(0);
      v29 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1BA57B488((uint64_t)a1 + *(int *)(v28 + 24), (uint64_t)v20, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1BA57B488((uint64_t)a2 + *(int *)(v28 + 24), (uint64_t)v17, (unint64_t *)&qword_1ED3D2E70, v29);
      v30 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_1BA57B488((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, v29);
      sub_1BA57B488((uint64_t)v17, v30, (unint64_t *)&qword_1ED3D2E70, v29);
      v32 = v39;
      v31 = v40;
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
      if (v33((uint64_t)v11, 1, v40) == 1)
      {
        v34 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3D2E70, v34);
        if (v33(v30, 1, v31) == 1)
        {
          sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          return 1;
        }
      }
      else
      {
        sub_1BA57B488((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        if (v33(v30, 1, v31) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v7, v30, v31);
          v36 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
          v37 = sub_1BB872958();
          v38 = *(void (**)(char *, uint64_t))(v32 + 8);
          v38(v7, v31);
          sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3D2E70, v36);
          sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3D2E70, v36);
          v38(v14, v31);
          sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, v36);
          return (v37 & 1) != 0;
        }
        v35 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3D2E70, v35);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
      }
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA842538);
      return 0;
    }
LABEL_10:
    swift_retain();
    goto LABEL_11;
  }
  return 0;
}

unint64_t sub_1BAA5F228()
{
  unint64_t result;

  result = qword_1EF2AE318;
  if (!qword_1EF2AE318)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB895484, &type metadata for FormatPuzzleType.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE318);
  }
  return result;
}

uint64_t sub_1BAA5F26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPuzzleType.Overrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BAA5F2B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AE328;
  if (!qword_1EF2AE328)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AF410, (uint64_t (*)(void))sub_1BAA5DF5C, (uint64_t)&type metadata for FormatPuzzleType.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AE328);
  }
  return result;
}

uint64_t sub_1BAA5F318(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3AD520, type metadata accessor for FormatPuzzleType.Overrides, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
  a1[2] = sub_1BA4A2870(&qword_1EF2AE330, type metadata accessor for FormatPuzzleType.Overrides, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
  result = sub_1BA4A2870(&qword_1EF2AE338, type metadata accessor for FormatPuzzleType.Overrides, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAA5F390(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3AD530, type metadata accessor for FormatPuzzleType, (uint64_t)&protocol conformance descriptor for FormatPuzzleType);
  a1[2] = sub_1BA4A2870(&qword_1ED3AD528, type metadata accessor for FormatPuzzleType, (uint64_t)&protocol conformance descriptor for FormatPuzzleType);
  result = sub_1BA4A2870(&qword_1EF2AE340, type metadata accessor for FormatPuzzleType, (uint64_t)&protocol conformance descriptor for FormatPuzzleType);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatPuzzleType(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3AD538);
}

uint64_t sub_1BAA5F424@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors, a2);
}

uint64_t sub_1BAA5F430(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAA5D014(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
}

uint64_t sub_1BAA5F44C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA5F4A8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAA5D014(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
}

uint64_t sub_1BAA5F4C4()
{
  return type metadata accessor for FormatPuzzleType(0);
}

uint64_t sub_1BAA5F4CC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatPuzzleType.Overrides(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FormatPuzzleType()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatPuzzleType.__allocating_init(identifier:overrides:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatPuzzleType.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPuzzleType.Overrides(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v7;
    v8 = a2[1];
    if ((~v8 & 0xF000000000000007) != 0)
      swift_retain();
    a1[1] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for FormatPuzzleType.Overrides(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  if ((~a1[1] & 0xF000000000000007) != 0)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for FormatPuzzleType.Overrides(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v6;
  v7 = a2[1];
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  a1[1] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

_QWORD *assignWithCopy for FormatPuzzleType.Overrides(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *a1 = v6;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
    sub_1BAA5FA24((uint64_t)a1);
    v6 = *a2;
LABEL_6:
    *a1 = v6;
    goto LABEL_8;
  }
  *a1 = v6;
  swift_retain();
  swift_release();
LABEL_8:
  v8 = a1 + 1;
  v9 = a2[1];
  v10 = v9 & 0xF000000000000007;
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
    if (v10 != 0xF000000000000007)
    {
      *v8 = v9;
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v10 == 0xF000000000000007)
  {
    sub_1BAA5FA24((uint64_t)(a1 + 1));
    v9 = a2[1];
LABEL_13:
    *v8 = v9;
    goto LABEL_15;
  }
  *v8 = v9;
  swift_retain();
  swift_release();
LABEL_15:
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_20:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1BAA5FA24(uint64_t a1)
{
  destroy for SportsDataVisualizationEventStatus();
  return a1;
}

_OWORD *initializeWithTake for FormatPuzzleType.Overrides(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for FormatPuzzleType.Overrides(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24((uint64_t)a1);
LABEL_4:
    *a1 = v6;
    goto LABEL_6;
  }
  *a1 = v6;
  swift_release();
LABEL_6:
  v7 = a1 + 1;
  v8 = a2[1];
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
LABEL_9:
    *v7 = v8;
    goto LABEL_11;
  }
  if ((~v8 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24((uint64_t)(a1 + 1));
    goto LABEL_9;
  }
  *v7 = v8;
  swift_release();
LABEL_11:
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_16:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPuzzleType.Overrides()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA5FCB4(char *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 115)
  {
    v4 = (*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7));
    v5 = v4 ^ 0x7C;
    v6 = v4 ^ 0x7F;
    if (v5 >= 0x74)
      return 0;
    else
      return v6;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPuzzleType.Overrides()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t *sub_1BAA5FD50(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = result;
  if (a3 == 115)
  {
    v6 = (~(_DWORD)a2 >> 4) & 7 | (8 * (~(_DWORD)a2 & 0x7F));
    *result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    return (unint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)v5 + *(int *)(a4 + 24), a2, a2, v8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatPuzzleType.Overrides.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAA5FE2C + 4 * byte_1BB895159[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAA5FE60 + 4 * byte_1BB895154[v4]))();
}

uint64_t sub_1BAA5FE60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA5FE68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA5FE70);
  return result;
}

uint64_t sub_1BAA5FE7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA5FE84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAA5FE88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA5FE90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleType.Overrides.CodingKeys()
{
  return &type metadata for FormatPuzzleType.Overrides.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormatPuzzleType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAA5FEF8 + 4 * byte_1BB895163[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAA5FF2C + 4 * byte_1BB89515E[v4]))();
}

uint64_t sub_1BAA5FF2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA5FF34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA5FF3CLL);
  return result;
}

uint64_t sub_1BAA5FF48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA5FF50);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAA5FF54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA5FF5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleType.CodingKeys()
{
  return &type metadata for FormatPuzzleType.CodingKeys;
}

unint64_t sub_1BAA5FF7C()
{
  unint64_t result;

  result = qword_1EF2AE348;
  if (!qword_1EF2AE348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8953A4, &type metadata for FormatPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE348);
  }
  return result;
}

unint64_t sub_1BAA5FFC4()
{
  unint64_t result;

  result = qword_1EF2AE350;
  if (!qword_1EF2AE350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89545C, &type metadata for FormatPuzzleType.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE350);
  }
  return result;
}

unint64_t sub_1BAA6000C()
{
  unint64_t result;

  result = qword_1EF2AE358;
  if (!qword_1EF2AE358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8953CC, &type metadata for FormatPuzzleType.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE358);
  }
  return result;
}

unint64_t sub_1BAA60054()
{
  unint64_t result;

  result = qword_1EF2AE360;
  if (!qword_1EF2AE360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8953F4, &type metadata for FormatPuzzleType.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE360);
  }
  return result;
}

unint64_t sub_1BAA6009C()
{
  unint64_t result;

  result = qword_1ED3AD500;
  if (!qword_1ED3AD500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB895314, &type metadata for FormatPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD500);
  }
  return result;
}

unint64_t sub_1BAA600E4()
{
  unint64_t result;

  result = qword_1ED3AD4F8;
  if (!qword_1ED3AD4F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89533C, &type metadata for FormatPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4F8);
  }
  return result;
}

uint64_t sub_1BAA60128(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6F43656D656874 && a2 == 0xEA0000000000726FLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB95DBF0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95DC80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAA6027C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAA60454()
{
  return swift_deallocObject();
}

uint64_t SportsConfigResourceEmbed.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsConfigResourceEmbed.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsConfigResourceEmbed.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SportsConfigResourceEmbed.parameters.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SportsConfigResourceEmbed.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsConfigResourceEmbed.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*SportsConfigResourceEmbed.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SportsConfigResourceEmbed.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsConfigResourceEmbed.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*SportsConfigResourceEmbed.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SportsConfigResourceEmbed.with(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v3[2];
  v5 = v3[3];
  v6 = v3[4];
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v4;
  a3[3] = v5;
  a3[4] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA605A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA605D4 + 4 * byte_1BB895530[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAA605D4()
{
  return 0x6574656D61726170;
}

uint64_t sub_1BAA605EC()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BAA60604()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BAA60620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA61DC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA60644()
{
  sub_1BAA6095C();
  return sub_1BB874710();
}

uint64_t sub_1BAA6066C()
{
  sub_1BAA6095C();
  return sub_1BB87471C();
}

uint64_t SportsConfigResourceEmbed.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;

  sub_1BA4CDF6C(0, &qword_1EF2AE368, (uint64_t (*)(void))sub_1BAA6095C, (uint64_t)&type metadata for SportsConfigResourceEmbed.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = v1[2];
  v15 = v1[3];
  v16 = v8;
  v14 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA6095C();
  sub_1BB8746C8();
  LOBYTE(v20) = 0;
  v9 = v17;
  sub_1BB87417C();
  if (!v9)
  {
    v12 = v14;
    v11 = v15;
    if (*(_QWORD *)(v16 + 16))
    {
      LOBYTE(v18) = 1;
      v20 = v16;
      sub_1BAA609A0();
      sub_1BA4C576C(0, &qword_1ED3AE4C0);
      sub_1BAA60A08();
      sub_1BB874464();
    }
    if (*(_QWORD *)(v11 + 16))
    {
      LOBYTE(v18) = 2;
      v20 = v11;
      sub_1BAA609A0();
      sub_1BA584114();
      sub_1BA639454();
      sub_1BB874464();
    }
    if (*(_QWORD *)(v12 + 16))
    {
      v19 = 3;
      swift_bridgeObjectRetain_n();
      v13 = sub_1BA67F4CC(v12);
      swift_bridgeObjectRelease();
      v18 = v13;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v18);
      swift_release();
      v20 = (uint64_t)v18;
      sub_1BAA609A0();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAA6095C()
{
  unint64_t result;

  result = qword_1ED3A78B8;
  if (!qword_1ED3A78B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89586C, &type metadata for SportsConfigResourceEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A78B8);
  }
  return result;
}

unint64_t sub_1BAA609A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AE370;
  if (!qword_1EF2AE370)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AE368, (uint64_t (*)(void))sub_1BAA6095C, (uint64_t)&type metadata for SportsConfigResourceEmbed.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AE370);
  }
  return result;
}

unint64_t sub_1BAA60A08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AE4C8;
  if (!qword_1ED3AE4C8)
  {
    sub_1BA4C576C(255, &qword_1ED3AE4C0);
    v2 = v1;
    v3 = sub_1BAA60A78();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AE4C8);
  }
  return result;
}

unint64_t sub_1BAA60A78()
{
  unint64_t result;

  result = qword_1ED3A8910;
  if (!qword_1ED3A8910)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsConfigResourceParameter, &type metadata for SportsConfigResourceParameter);
    atomic_store(result, (unint64_t *)&qword_1ED3A8910);
  }
  return result;
}

uint64_t SportsConfigResourceEmbed.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v51 = a2;
  sub_1BA6927D0();
  v48 = v3;
  v52 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA692844();
  v50 = v5;
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA61634();
  v53 = v7;
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3AB440, (uint64_t (*)(void))sub_1BAA6095C, (uint64_t)&type metadata for SportsConfigResourceEmbed.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v41 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA6095C();
  v15 = v54;
  sub_1BB87468C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = v9;
  v18 = v53;
  v54 = v12;
  v19 = a1;
  v61 = 0;
  v20 = sub_1BB874098();
  v22 = v21;
  v42 = v20;
  v60 = 1;
  swift_bridgeObjectRetain();
  v23 = sub_1BB8740F8();
  v44 = v14;
  if ((v23 & 1) != 0)
  {
    v55 = 1;
    sub_1BA4A2870(&qword_1ED3A3808, (uint64_t (*)(uint64_t))sub_1BAA61634, MEMORY[0x1E0DB3610]);
    sub_1BB8740D4();
    v43 = v22;
    v24 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v18);
  }
  else
  {
    v43 = v22;
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v59 = 2;
  swift_bridgeObjectRetain();
  v25 = v11;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v56 = 2;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v27 = v49;
    v26 = v50;
    sub_1BB8740D4();
    v28 = (uint64_t)v19;
    v53 = v24;
    v29 = v25;
    v30 = sub_1BB86DD08();
    v31 = v27;
    v32 = v30;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v26);
  }
  else
  {
    v53 = v24;
    v29 = v11;
    v32 = MEMORY[0x1E0DEE9D8];
    v28 = (uint64_t)v19;
  }
  v58 = 3;
  swift_bridgeObjectRetain();
  v33 = sub_1BB8740F8();
  v34 = v51;
  v35 = v52;
  if ((v33 & 1) != 0)
  {
    v57 = 3;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v37 = v47;
    v36 = v48;
    sub_1BB8740D4();
    v38 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9E8];
  }
  v39 = v43;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v29);
  swift_bridgeObjectRetain();
  v40 = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v34 = v42;
  v34[1] = v39;
  v34[2] = v40;
  v34[3] = v32;
  v34[4] = v38;
  __swift_destroy_boxed_opaque_existential_1(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA61004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsConfigResourceEmbed.init(from:)(a1, a2);
}

uint64_t sub_1BAA61018(_QWORD *a1)
{
  return SportsConfigResourceEmbed.encode(to:)(a1);
}

uint64_t SportsConfigResourceParameter.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsConfigResourceParameter.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsConfigResourceParameter.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA610F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 7955819;
}

uint64_t sub_1BAA61128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA61F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA6114C()
{
  sub_1BAA6176C();
  return sub_1BB874710();
}

uint64_t sub_1BAA61174()
{
  sub_1BAA6176C();
  return sub_1BB87471C();
}

uint64_t SportsConfigResourceParameter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AF420, (uint64_t (*)(void))sub_1BAA6176C, (uint64_t)&type metadata for SportsConfigResourceParameter.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA6176C();
  sub_1BB8746C8();
  v13 = 0;
  v9 = v11[3];
  sub_1BB87417C();
  if (!v9)
  {
    v12 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SportsConfigResourceParameter.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t SportsConfigResourceParameter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;

  v20 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3AB498, (uint64_t (*)(void))sub_1BAA6176C, (uint64_t)&type metadata for SportsConfigResourceParameter.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA6176C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v20;
  v22 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v21 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v17;
  v9[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA61508@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsConfigResourceParameter.init(from:)(a1, a2);
}

uint64_t sub_1BAA6151C(_QWORD *a1)
{
  return SportsConfigResourceParameter.encode(to:)(a1);
}

uint64_t sub_1BAA61534()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA61598()
{
  sub_1BB872A90();
  return sub_1BB872A90();
}

uint64_t sub_1BAA615D4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB872A90();
  return sub_1BB874608();
}

void sub_1BAA61634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3810)
  {
    sub_1BAA61698();
    sub_1BAA60A78();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3810);
  }
}

unint64_t sub_1BAA61698()
{
  unint64_t result;

  result = qword_1ED3A8918;
  if (!qword_1ED3A8918)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsConfigResourceParameter, &type metadata for SportsConfigResourceParameter);
    atomic_store(result, (unint64_t *)&qword_1ED3A8918);
  }
  return result;
}

uint64_t _s8NewsFeed29SportsConfigResourceParameterV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1BB874398();
  }
  return result;
}

unint64_t sub_1BAA6176C()
{
  unint64_t result;

  result = qword_1ED3A88F8;
  if (!qword_1ED3A88F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89581C, &type metadata for SportsConfigResourceParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A88F8);
  }
  return result;
}

unint64_t sub_1BAA617B4()
{
  unint64_t result;

  result = qword_1EF2AE378;
  if (!qword_1EF2AE378)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsConfigResourceParameter, &type metadata for SportsConfigResourceParameter);
    atomic_store(result, (unint64_t *)&qword_1EF2AE378);
  }
  return result;
}

uint64_t sub_1BAA617F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA61804(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1BAA61844@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA61850(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BAA61890@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA6189C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t destroy for SportsConfigResourceEmbed()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SportsConfigResourceEmbed(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsConfigResourceEmbed(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsConfigResourceEmbed(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsConfigResourceEmbed()
{
  return &type metadata for SportsConfigResourceEmbed;
}

ValueMetadata *type metadata accessor for SportsConfigResourceParameter()
{
  return &type metadata for SportsConfigResourceParameter;
}

uint64_t storeEnumTagSinglePayload for SportsConfigResourceParameter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA61ACC + 4 * byte_1BB895539[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA61B00 + 4 * byte_1BB895534[v4]))();
}

uint64_t sub_1BAA61B00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA61B08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA61B10);
  return result;
}

uint64_t sub_1BAA61B1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA61B24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA61B28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA61B30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsConfigResourceParameter.CodingKeys()
{
  return &type metadata for SportsConfigResourceParameter.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SportsConfigResourceEmbed.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAA61B98 + 4 * byte_1BB895543[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAA61BCC + 4 * byte_1BB89553E[v4]))();
}

uint64_t sub_1BAA61BCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA61BD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA61BDCLL);
  return result;
}

uint64_t sub_1BAA61BE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA61BF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAA61BF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA61BFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsConfigResourceEmbed.CodingKeys()
{
  return &type metadata for SportsConfigResourceEmbed.CodingKeys;
}

unint64_t sub_1BAA61C1C()
{
  unint64_t result;

  result = qword_1EF2AE380;
  if (!qword_1EF2AE380)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89573C, &type metadata for SportsConfigResourceEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE380);
  }
  return result;
}

unint64_t sub_1BAA61C64()
{
  unint64_t result;

  result = qword_1EF2AE388;
  if (!qword_1EF2AE388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8957F4, &type metadata for SportsConfigResourceParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE388);
  }
  return result;
}

unint64_t sub_1BAA61CAC()
{
  unint64_t result;

  result = qword_1ED3A8908;
  if (!qword_1ED3A8908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB895764, &type metadata for SportsConfigResourceParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8908);
  }
  return result;
}

unint64_t sub_1BAA61CF4()
{
  unint64_t result;

  result = qword_1ED3A8900;
  if (!qword_1ED3A8900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89578C, &type metadata for SportsConfigResourceParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8900);
  }
  return result;
}

unint64_t sub_1BAA61D3C()
{
  unint64_t result;

  result = qword_1ED3A78C8;
  if (!qword_1ED3A78C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8956AC, &type metadata for SportsConfigResourceEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A78C8);
  }
  return result;
}

unint64_t sub_1BAA61D84()
{
  unint64_t result;

  result = qword_1ED3A78C0;
  if (!qword_1ED3A78C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8956D4, &type metadata for SportsConfigResourceEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A78C0);
  }
  return result;
}

uint64_t sub_1BAA61DC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAA61F9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAA62078(_QWORD *a1)
{
  return FormatVideoPlayerLive.encode(to:)(a1);
}

uint64_t FormatVideoPlayerLive.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 8);
  v26 = *(_QWORD *)v1;
  v13 = *(_QWORD *)(v1 + 16);
  v14 = *(_BYTE *)(v1 + 24);
  v16 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v17 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatVideoPlayerLive, v18, v16, (uint64_t)&type metadata for FormatVideoPlayerLive, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BC40);
  if ((v14 & 1) != 0)
  {
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v19 = sub_1BB86EB84();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACEE1EC(1, v26, v12, v13 & 1, (uint64_t)v5);
    v21 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v22 = sub_1BB86EB84();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACEE084(0, v26, v12, v13, (uint64_t)v8);
    v21 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BAA62324(char *a1, char *a2)
{
  return sub_1BB7F8A4C(*a1, *a2);
}

uint64_t sub_1BAA62330()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAA623AC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA62404()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAA6247C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x676E69646E6962;
  if (*v1)
    v2 = 0x656E696C6E69;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAA624B8()
{
  sub_1BA82ADE8();
  return sub_1BB872D0C();
}

uint64_t _s8NewsFeed21FormatVideoPlayerLiveO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  BOOL v15;
  char v16;
  uint64_t v18;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  if ((v5 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
    {
      v15 = v3 == v6 && v2 == v7;
      if (v15 || (sub_1BB874398() & 1) != 0)
      {
        sub_1BA82ABBC(v6, v7, v8, 0);
        sub_1BA82ABBC(v3, v2, v4, 0);
        sub_1BA82ABBC(v3, v2, v4, 0);
        sub_1BA82ABBC(v6, v7, v8, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16 = sub_1BA8869D0(v4, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA82ABF8(v3, v2, v4, 0);
        sub_1BA82ABF8(v6, v7, v8, 0);
        sub_1BA82ABF8(v6, v7, v8, 0);
        sub_1BA82ABF8(v3, v2, v4, 0);
        return v16 & 1;
      }
      sub_1BA82ABBC(v3, v2, v4, 0);
      sub_1BA82ABBC(v6, v7, v8, 0);
      sub_1BA82ABF8(v3, v2, v4, 0);
      v11 = v6;
      v12 = v7;
      v13 = v8;
      v14 = 0;
      goto LABEL_22;
    }
    goto LABEL_9;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
LABEL_9:
    sub_1BA82ABBC(*(_QWORD *)a1, v2, v4, v5);
    sub_1BA82ABBC(v6, v7, v8, v9);
    sub_1BA82ABF8(v3, v2, v4, v5);
    v11 = v6;
    v12 = v7;
    v13 = v8;
    v14 = v9;
    goto LABEL_22;
  }
  if ((v4 & 1) != 0)
  {
    if ((v8 & 1) != 0)
    {
      if (v3 == v6 && v2 == v7)
        v10 = 1;
      else
        v10 = sub_1BB874398();
      v18 = 1;
      sub_1BA82ABBC(v3, v2, v4, 1);
      sub_1BA82ABBC(v6, v7, v8, 1);
      sub_1BA82ABBC(v6, v7, v8, 1);
      sub_1BA82ABBC(v3, v2, v4, 1);
      sub_1BA82ABBC(v3, v2, v4, 1);
      sub_1BA82ABBC(v6, v7, v8, 1);
      sub_1BA69C828(v3, v2, 1);
      sub_1BA69C828(v6, v7, 1);
      sub_1BA82ABF8(v3, v2, v4, 1);
      sub_1BA82ABF8(v6, v7, v8, 1);
      sub_1BA82ABF8(v6, v7, v8, 1);
      sub_1BA82ABF8(v3, v2, v4, 1);
      if ((v10 & 1) != 0)
        return v18;
      return 0;
    }
    sub_1BA69C808(*(_QWORD *)a1, v2, 1);
    sub_1BA69C808(v3, v2, 1);
  }
  else if ((v8 & 1) == 0)
  {
    v18 = 1;
    sub_1BA82ABBC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, 1);
    sub_1BA82ABBC(v3, v2, v4, 1);
    sub_1BA82ABBC(v6, v7, v8, 1);
    sub_1BA69C828(v3, v2, 0);
    sub_1BA69C828(v6, v7, 0);
    sub_1BA82ABF8(v3, v2, v4, 1);
    sub_1BA82ABF8(v6, v7, v8, 1);
    sub_1BA82ABF8(v6, v7, v8, 1);
    sub_1BA82ABF8(v3, v2, v4, 1);
    if (((((v3 & 1) == 0) ^ v6) & 1) != 0)
      return v18;
    return 0;
  }
  sub_1BA82ABBC(v6, v7, v8, 1);
  sub_1BA82ABBC(v6, v7, v8, 1);
  sub_1BA82ABBC(v3, v2, v4, 1);
  sub_1BA82ABBC(v6, v7, v8, 1);
  sub_1BA69C828(v3, v2, v4 & 1);
  sub_1BA69C828(v6, v7, v8 & 1);
  sub_1BA82ABF8(v3, v2, v4, 1);
  sub_1BA82ABF8(v6, v7, v8, 1);
  sub_1BA82ABF8(v6, v7, v8, 1);
  v11 = v3;
  v12 = v2;
  v13 = v4;
  v14 = 1;
LABEL_22:
  sub_1BA82ABF8(v11, v12, v13, v14);
  return 0;
}

unint64_t sub_1BAA629E0()
{
  unint64_t result;

  result = qword_1ED3A0500;
  if (!qword_1ED3A0500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerLiveBinding, &type metadata for FormatVideoPlayerLiveBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0500);
  }
  return result;
}

unint64_t sub_1BAA62A24(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82AC48();
  a1[2] = sub_1BAA62A58();
  result = sub_1BAA62A9C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA62A58()
{
  unint64_t result;

  result = qword_1ED3A01B8;
  if (!qword_1ED3A01B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerLive, &type metadata for FormatVideoPlayerLive);
    atomic_store(result, (unint64_t *)&qword_1ED3A01B8);
  }
  return result;
}

unint64_t sub_1BAA62A9C()
{
  unint64_t result;

  result = qword_1EF2AE390;
  if (!qword_1EF2AE390)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerLive, &type metadata for FormatVideoPlayerLive);
    atomic_store(result, (unint64_t *)&qword_1EF2AE390);
  }
  return result;
}

uint64_t destroy for FormatVideoPlayerLive(uint64_t a1)
{
  return sub_1BA82ABF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatVideoPlayerLive(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA82ABBC(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerLive(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA82ABBC(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA82ABF8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerLive(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA82ABF8(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1BAA62C08(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerLive()
{
  return &type metadata for FormatVideoPlayerLive;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerLive.CodingType()
{
  return &type metadata for FormatVideoPlayerLive.CodingType;
}

unint64_t sub_1BAA62C38()
{
  unint64_t result;

  result = qword_1EF2AE398;
  if (!qword_1EF2AE398)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB895A2C, &type metadata for FormatVideoPlayerLive.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE398);
  }
  return result;
}

void sub_1BAA62C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BA573ED8;
  *(_QWORD *)(v9 + 24) = v8;
  v11[4] = sub_1BAA62FC4;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BA573874;
  v11[3] = &block_descriptor_16;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 1, v10);
  _Block_release(v10);
}

void sub_1BAA62D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BAA62C7C(a1, a2, a3, a4, *(void **)(v4 + 24));
}

uint64_t sub_1BAA62D6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA62D90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void (*v16)(uint64_t);
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_1BB872610();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB872664();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3ABD10 != -1)
    swift_once();
  v18[1] = qword_1ED3ABD00;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  aBlock[4] = sub_1BAA631D0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_9_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a1;
  sub_1BB872634();
  v20 = MEMORY[0x1E0DEE9D8];
  v16 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA81D804(0, (unint64_t *)&qword_1ED3B9310, v16);
  sub_1BAA631F8((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v16);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1BAA62FC4(void *a1)
{
  uint64_t v1;

  return sub_1BAA62D90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAA62FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1BB873450();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB87342C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v6);
  v8[0] = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB872640();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v5, MEMORY[0x1E0DEF828]);
  sub_1BA81D804(0, (unint64_t *)&unk_1ED3B9650, (void (*)(uint64_t))v5);
  sub_1BAA631F8((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, (void (*)(uint64_t))v5);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1BB87348C();
  qword_1ED3ABD00 = result;
  return result;
}

uint64_t sub_1BAA631A4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BAA631D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1BAA631F8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA81D804(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAA63244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;

  v19 = a1 + 56;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v20 = (unint64_t)(v1 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v5 = 0;
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
      goto LABEL_20;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v5 >= v20)
      goto LABEL_33;
    v7 = *(_QWORD *)(v19 + 8 * v5);
    if (!v7)
      break;
LABEL_19:
    v3 = (v7 - 1) & v7;
LABEL_20:
    sub_1BA7114A0();
    swift_bridgeObjectRetain();
    v9 = sub_1BB873B4C();
    if (*(_QWORD *)(v9 + 16) != 2 || (swift_bridgeObjectRetain(), result = sub_1BB873000(), (v10 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      if (*(_QWORD *)(v9 + 16) < 2uLL)
        goto LABEL_35;
      v18 = result;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11 = sub_1BB873000();
      v13 = v12;
      result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1BB390600(0, v17[2] + 1, 1, v17);
          v17 = (_QWORD *)result;
        }
        v15 = v17[2];
        v14 = v17[3];
        if (v15 >= v14 >> 1)
        {
          result = (uint64_t)sub_1BB390600((_QWORD *)(v14 > 1), v15 + 1, 1, v17);
          v17 = (_QWORD *)result;
        }
        v17[2] = v15 + 1;
        v16 = &v17[2 * v15];
        v16[4] = v18;
        v16[5] = v11;
      }
    }
  }
  v8 = v5 + 1;
  if (v5 + 1 >= v20)
    goto LABEL_33;
  v7 = *(_QWORD *)(v19 + 8 * v8);
  if (v7)
    goto LABEL_18;
  v8 = v5 + 2;
  if (v5 + 2 >= v20)
    goto LABEL_33;
  v7 = *(_QWORD *)(v19 + 8 * v8);
  if (v7)
    goto LABEL_18;
  v8 = v5 + 3;
  if (v5 + 3 >= v20)
    goto LABEL_33;
  v7 = *(_QWORD *)(v19 + 8 * v8);
  if (v7)
    goto LABEL_18;
  v8 = v5 + 4;
  if (v5 + 4 >= v20)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v17;
  }
  v7 = *(_QWORD *)(v19 + 8 * v8);
  if (v7)
  {
LABEL_18:
    v5 = v8;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v5 >= v20)
      goto LABEL_33;
    v7 = *(_QWORD *)(v19 + 8 * v5);
    ++v8;
    if (v7)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1BAA63540@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BAA63744(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BAA63570(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = *v1;
  v3 = sub_1BAA63244(a1);
  swift_retain();
  sub_1BAA63658(v3, v2);
  swift_bridgeObjectRelease();
  swift_release();
  v4 = (void *)sub_1BB86E854();
  type metadata accessor for FeedWeather(0);
  sub_1BB86ECBC();

  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED39BDB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3490], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v6 = sub_1BB86E974();
  swift_release();

  return v6;
}

uint64_t sub_1BAA63658(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v6 = (__int128 *)(a1 + 32);
    do
    {
      v7 = a2[5];
      v8 = a2[6];
      v9 = *v6++;
      __swift_project_boxed_opaque_existential_1(a2 + 2, v7);
      v10 = v9;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v8 + 8))(&v10, v7, v8);
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      --v3;
    }
    while (v3);
    return v11;
  }
  return result;
}

uint64_t sub_1BAA63744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = sub_1BB86E008();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39E378, type metadata accessor for FeedWeather, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v27 - v5;
  v31 = type metadata accessor for FeedWeather(0);
  v6 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - v13;
  v15 = sub_1BB86DEAC();
  v29 = *(_QWORD *)(v15 - 8);
  v30 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1BA81C3B0(0, v18, 0);
    v20 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    do
    {
      sub_1BAA63AB8(v20, (uint64_t)v14);
      sub_1BAA63AB8((uint64_t)v14, (uint64_t)v11);
      v36 = 0;
      v37 = 0xE000000000000000;
      sub_1BB872FF4();
      sub_1BB872AFC(v21);
      sub_1BB872FF4();
      sub_1BAA63AB8((uint64_t)v11, (uint64_t)v8);
      if (qword_1ED39E358 != -1)
        swift_once();
      v22 = v35;
      v23 = __swift_project_value_buffer(v35, (uint64_t)qword_1ED39A518);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v23, v22);
      sub_1BB86ECF8();
      sub_1BAA63AFC((uint64_t)v11);
      sub_1BB86DEA0();
      sub_1BAA63AFC((uint64_t)v14);
      v19 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA81C3B0(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v38;
      }
      v25 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1BA81C3B0(v24 > 1, v25 + 1, 1);
        v19 = v38;
      }
      *(_QWORD *)(v19 + 16) = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v19+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v25, v17, v30);
      v38 = v19;
      v8 = v28;
      v20 += v27;
      --v18;
    }
    while (v18);
  }
  return v19;
}

uint64_t sub_1BAA63AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA63AFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA63B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;

  v32 = a4;
  v27 = a2;
  v28 = a3;
  v30 = a5;
  v6 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = sub_1BB86C67C();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - v12;
  v31 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v15 = *v8;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BA75BF9C();
    v25 = (char *)v8 + *(int *)(v16 + 48);
    v33 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    v17 = *(_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    v18 = *(void **)(v15 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    swift_bridgeObjectRetain();
    sub_1BA70A884(v17, v18);
    swift_release();
    sub_1BA75C00C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v25, v19);
  }
  else
  {
    swift_release();
    v33 = *(unsigned __int8 *)(v15 + 49);
    v17 = *(_QWORD *)(v15 + 72);
    v18 = *(void **)(v15 + 80);
    swift_bridgeObjectRetain();
    sub_1BA70A884(v17, v18);
    swift_release();
  }
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v17, v18);
  v34 = v33;
  sub_1BA4A111C();
  sub_1BB86C5BC();
  v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21 = v29;
  v20(v10, v29);
  v22 = v32;
  swift_bridgeObjectRetain();
  sub_1BAFDEDFC(v31, v22, v30);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v21);
}

uint64_t sub_1BAA63DA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v2;
  v67 = a1;
  v65 = a2;
  v68 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v64 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v63 = (uint64_t)&v63 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v63 - v9;
  sub_1BA8E5458();
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v63 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v63 - v17;
  v19 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v3, (uint64_t)v24, v25);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v27 = v4;
    v29 = v67;
    v28 = v68;
    if (EnumCaseMultiPayload == 1)
    {
      v31 = *(_QWORD *)v24;
      v30 = *((_QWORD *)v24 + 1);
      v32 = *((_QWORD *)v24 + 2);
      v33 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
      v34 = v63;
      v35 = v69;
      sub_1BAA63B38(v29, v31, v30, v32, v63);
      if (v35)
      {
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7125BC(0);
      v54 = v53;
      v42 = swift_allocBox();
      v56 = v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v55, v34, v28);
      *(_QWORD *)(v56 + *(int *)(v54 + 36)) = MEMORY[0x1E0DEE9D8];
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v34, v28);
      v38 = 1;
    }
    else
    {
      v46 = *(_QWORD *)v24;
      v47 = *((_QWORD *)v24 + 1);
      v48 = *((_QWORD *)v24 + 2);
      v49 = v24[24];
      v50 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v66, 1, 1, v50);
      v51 = v64;
      v52 = v69;
      sub_1BB49B6E8(v29, v46, v47, v48, v49, v64);
      if (v52)
      {
        sub_1BA4A2E80((uint64_t)v66, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        return sub_1BA5A7EF8(v46, v47, v48, v49);
      }
      sub_1BA5A7EF8(v46, v47, v48, v49);
      sub_1BA7125BC(0);
      v58 = v57;
      v42 = swift_allocBox();
      v60 = v59;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v59, v51, v28);
      *(_QWORD *)(v60 + *(int *)(v58 + 36)) = MEMORY[0x1E0DEE9D8];
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v51, v28);
      v38 = 0;
      v15 = v66;
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    v37 = type metadata accessor for FormatVersionRequirement(0);
    v38 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v18, 1, 1, v37);
    v39 = *(_QWORD *)&v21[*(int *)(v19 + 20)];
    swift_bridgeObjectRetain();
    sub_1BAFDEDFC(v67, v39, (uint64_t)v10);
    swift_bridgeObjectRelease();
    sub_1BA7125BC(0);
    v41 = v40;
    v42 = swift_allocBox();
    v44 = v43;
    v45 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v43, v10, v68);
    *(_QWORD *)(v44 + *(int *)(v41 + 36)) = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v45);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    v15 = v18;
  }
  v61 = v65;
  *v65 = v42 | 0x6000000000000000;
  v61[1] = v38;
  v62 = type metadata accessor for FormatOptionsNodeStatementResult();
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v61 + *(int *)(v62 + 24), (uint64_t (*)(_QWORD))sub_1BA8E5458);
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
}

uint64_t _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _QWORD v45[3];
  char v46;

  v40 = a2;
  v3 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v39 - v10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  sub_1BAA649DC();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v17[*(int *)(v18 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA4C2DD8(v40, v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA4C2DD8((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v22 = *v11;
      v21 = v11[1];
      v23 = v11[2];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v24 = *(_QWORD *)(v19 + 16);
        v25 = v22 == *(_QWORD *)v19 && v21 == *(_QWORD *)(v19 + 8);
        if (v25 || (sub_1BB874398() & 1) != 0)
        {
          v26 = sub_1BA5B35E8(v23, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
            goto LABEL_24;
          goto LABEL_21;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4C2DD8((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v28 = *(_QWORD *)v8;
      v27 = *((_QWORD *)v8 + 1);
      v29 = *((_QWORD *)v8 + 2);
      v30 = v8[24];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v31 = *(_QWORD *)v19;
        v32 = *(_QWORD *)(v19 + 8);
        v33 = *(_QWORD *)(v19 + 16);
        v34 = *(_BYTE *)(v19 + 24);
        v45[0] = v28;
        v45[1] = v27;
        v45[2] = v29;
        v46 = v30;
        v41 = v31;
        v42 = v32;
        v43 = v33;
        v44 = v34;
        _s8NewsFeed16FormatURLBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v45);
        v36 = v35;
        sub_1BA5A7EF8(v31, v32, v33, v34);
        sub_1BA5A7EF8(v28, v27, v29, v30);
LABEL_25:
        v37 = (uint64_t (*)(_QWORD))type metadata accessor for FormatURL;
        goto LABEL_26;
      }
      sub_1BA5A7EF8(v28, v27, v29, v30);
    }
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1BA5193C4(v19, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
      if ((MEMORY[0x1BCCDCEFC](v14, v5) & 1) != 0
        && (sub_1BA5B35E8(*(_QWORD *)&v14[*(int *)(v3 + 20)], *(_QWORD *)&v5[*(int *)(v3 + 20)]) & 1) != 0)
      {
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
        sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
LABEL_21:
        v36 = 1;
        goto LABEL_25;
      }
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
LABEL_24:
      v36 = 0;
      goto LABEL_25;
    }
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
  }
  v36 = 0;
  v37 = (uint64_t (*)(_QWORD))sub_1BAA649DC;
LABEL_26:
  sub_1BA4A2E80((uint64_t)v17, v37);
  return v36 & 1;
}

uint64_t sub_1BAA64620(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AE3A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA6465C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B9028, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
  a1[2] = sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
  result = sub_1BA4A2870(&qword_1EF2AE3A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
  a1[3] = result;
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatURL(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = *(_QWORD *)a2;
      v10 = *(_QWORD *)(a2 + 8);
      v11 = *(_QWORD *)(a2 + 16);
      v12 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(v9, v10, v11, v12);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v11;
      *(_BYTE *)(a1 + 24) = v12;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v13 = sub_1BB86C67C();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(a1 + *(int *)(v14 + 20)) = *(_QWORD *)(a2 + *(int *)(v14 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for FormatURL(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v5 = *(_QWORD *)a2;
      v6 = *(_QWORD *)(a2 + 8);
      v7 = *(_QWORD *)(a2 + 16);
      v8 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(v5, v6, v7, v8);
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v7;
      *(_BYTE *)(a1 + 24) = v8;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v9 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(a1 + *(int *)(v10 + 20)) = *(_QWORD *)(a2 + *(int *)(v10 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FormatURL(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1BAA649DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AE3B0)
  {
    type metadata accessor for FormatURL();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AE3B0);
  }
}

uint64_t FeedLayoutContextFactory.__allocating_init(fontBookFactory:colorPaletteProvider:layoutAttributesFactoryProvider:)(__int128 *a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1BA4CECCC(a1, v6 + 56);
  sub_1BA4CECCC(a2, v6 + 16);
  *(_QWORD *)(v6 + 96) = a3;
  return v6;
}

uint64_t FeedLayoutContextFactory.init(fontBookFactory:colorPaletteProvider:layoutAttributesFactoryProvider:)(__int128 *a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;

  sub_1BA4CECCC(a1, v3 + 56);
  sub_1BA4CECCC(a2, v3 + 16);
  *(_QWORD *)(v3 + 96) = a3;
  return v3;
}

uint64_t sub_1BAA64AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1BA66B968();
  v2 = *(_QWORD *)(v0 + 96);
  type metadata accessor for FeedLayoutContext();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  return v3;
}

uint64_t FeedLayoutContextFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return v0;
}

uint64_t FeedLayoutContextFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of FeedLayoutContextFactoryType.makeContext(columnOptions:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for FeedLayoutContextFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedLayoutContextFactory.__allocating_init(fontBookFactory:colorPaletteProvider:layoutAttributesFactoryProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FeedLayoutContextFactory.makeContext(columnOptions:layoutOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

char *sub_1BAA64BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  objc_super v47;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v4[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3DB8]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = &v11[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet];
  v13 = sub_1BB86BE54();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);

  if (a3)
  {
    v14 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v47.receiver = v11;
  v47.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v47, sel_initWithStyle_reuseIdentifier_, a1, v14);

  v16 = OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField;
  v17 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField];
  v18 = v15;
  objc_msgSend(v17, sel_setDelegate_, v18);
  objc_msgSend(v17, sel_setTextAlignment_, 0);
  objc_msgSend(v17, sel_setClearButtonMode_, 1);
  objc_msgSend(v17, sel_setBorderStyle_, 0);
  objc_msgSend(v17, sel_setAutocorrectionType_, 1);
  objc_msgSend(v17, sel_setAutocapitalizationType_, 0);
  v19 = (void *)objc_opt_self();
  v20 = v17;
  v21 = objc_msgSend(v19, sel_systemBlueColor);
  objc_msgSend(v20, sel_setTintColor_, v21);

  v22 = *(void **)&v15[v16];
  objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v18, sel_onTextChange, 0x20000);
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v23 = (void *)objc_opt_self();
  v24 = v22;
  v25 = objc_msgSend(v23, sel_systemFontOfSize_, 15.0);
  objc_msgSend(v24, sel_setFont_, v25);

  v26 = objc_msgSend(v18, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v15[v16]);

  v27 = (void *)objc_opt_self();
  sub_1BA65E330();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BB895C60;
  v29 = objc_msgSend(*(id *)&v15[v16], sel_topAnchor);
  v30 = objc_msgSend(v18, sel_contentView);
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 8.0);
  *(_QWORD *)(v28 + 32) = v32;
  v33 = objc_msgSend(*(id *)&v15[v16], sel_leadingAnchor);
  v34 = objc_msgSend(v18, sel_contentView);
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, 16.0);
  *(_QWORD *)(v28 + 40) = v36;
  v37 = objc_msgSend(*(id *)&v15[v16], sel_trailingAnchor);
  v38 = objc_msgSend(v18, sel_contentView);
  v39 = objc_msgSend(v38, sel_trailingAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, -16.0);
  *(_QWORD *)(v28 + 48) = v40;
  v41 = objc_msgSend(*(id *)&v15[v16], sel_bottomAnchor);
  v42 = objc_msgSend(v18, sel_contentView);
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, -8.0);
  *(_QWORD *)(v28 + 56) = v44;
  sub_1BB872DCC();
  sub_1BAA659B8();
  v45 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v45);

  return v18;
}

uint64_t sub_1BAA65218()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BAA656E8();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.receiver = v0;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, sel_prepareForReuse, v3);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField], sel_setText_, 0);
  v6 = &v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  sub_1BA49EBE0(v7);
  v8 = sub_1BB86BE54();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet];
  swift_beginAccess();
  sub_1BAA65974((uint64_t)v5, v9);
  return swift_endAccess();
}

id sub_1BAA65354()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_textField), sel_text);
  if (result)
  {
    v2 = result;
    v3 = sub_1BB8729A0();
    v5 = v4;

    v6 = *(void (**)(uint64_t, uint64_t))(v0
                                                 + OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_onChange);
    if (v6)
    {
      swift_retain();
      v6(v3, v5);
      sub_1BA49EBE0((uint64_t)v6);
    }
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAA6542C(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;
  _QWORD v17[4];

  v17[3] = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a4) & 0xF;
  else
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v16 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v10 = sub_1BB873CA8();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v17[0] = a3;
          v17[1] = v16;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_1BB873D80();
        }
        v10 = sub_1BB873D8C();
      }
      v12 = v11;
      LODWORD(v17[0]) = v10;
      v13 = a1(v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
      if ((v13 & 1) == 0)
        break;
      v9 += v12;
      if (v9 >= v5)
      {
        swift_bridgeObjectRelease();
        v14 = 1;
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_1BAA65620()
{
  return type metadata accessor for DebugFormatCreatePackageTableViewCell();
}

uint64_t type metadata accessor for DebugFormatCreatePackageTableViewCell()
{
  uint64_t result;

  result = qword_1EF2AE458;
  if (!qword_1EF2AE458)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAA65664()
{
  unint64_t v0;

  sub_1BAA656E8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BAA656E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0480)
  {
    sub_1BB86BE54();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0480);
  }
}

uint64_t sub_1BAA6573C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BAA656E8();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86BE54();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + OBJC_IVAR____TtC8NewsFeed37DebugFormatCreatePackageTableViewCell_disallowedCharacterSet;
  swift_beginAccess();
  sub_1BAA658C0(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BAA65904((uint64_t)v7);
    v13 = 1;
  }
  else
  {
    v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    MEMORY[0x1E0C80A78](v14);
    *(&v16 - 2) = (uint64_t)v11;
    swift_bridgeObjectRetain();
    v13 = sub_1BAA6542C((uint64_t (*)(_QWORD *))sub_1BAA65940, (uint64_t)(&v16 - 4), a1, a2);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v13 & 1;
}

uint64_t sub_1BAA658C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA656E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA65904(uint64_t a1)
{
  uint64_t v2;

  sub_1BAA656E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1BAA65940()
{
  return (sub_1BB86BE18() & 1) == 0;
}

uint64_t sub_1BAA65974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA656E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BAA659B8()
{
  unint64_t result;

  result = qword_1EF2C1570;
  if (!qword_1EF2C1570)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2C1570);
  }
  return result;
}

char *sub_1BAA659F4(uint64_t *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  __int128 v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  double v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  objc_super v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v9 = &v7[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets];
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)v9 = _Q0;
  *((_OWORD *)v9 + 1) = _Q0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleTipSize] = 0x4018000000000000;
  v15 = *a1;
  v47 = a1[1];
  v16 = v47;
  v48 = v15;
  v17 = a1[4];
  v46 = a1[3];
  v18 = v46;
  v19 = &v7[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_metric];
  v20 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v19 = *(_OWORD *)a1;
  *((_OWORD *)v19 + 1) = v20;
  *((_QWORD *)v19 + 4) = v17;
  sub_1BA781758((uint64_t)&v48);
  sub_1BA781758((uint64_t)&v47);
  sub_1BA781758((uint64_t)&v46);

  v45.receiver = v7;
  v45.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v45, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v22 = sub_1BB3765CC(v16, v18);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  v23 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v23, sel_setCornerRadius_, 6.0);

  v24 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label;
  v25 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label];
  v26 = (void *)objc_opt_self();
  v27 = *MEMORY[0x1E0DC1448];
  v28 = v25;
  v29 = objc_msgSend(v26, sel_monospacedSystemFontOfSize_weight_, 10.0, v27);
  objc_msgSend(v28, sel_setFont_, v29);

  v30 = *(void **)&v21[v24];
  v31 = (void *)objc_opt_self();
  v32 = v30;
  v33 = objc_msgSend(v31, sel_whiteColor);
  objc_msgSend(v32, sel_setTextColor_, v33);

  v34 = *(void **)&v21[v24];
  objc_msgSend(v34, sel_setNumberOfLines_, 0);
  v35 = v34;
  sub_1BB376208();
  v36 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setText_, v36);

  objc_msgSend(v21, sel_addSubview_, *(_QWORD *)&v21[v24]);
  v37 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer;
  v38 = *(id *)&v21[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer];
  v39 = sub_1BB3765CC(v16, v18);
  sub_1BA4F6CCC((uint64_t)&v48);
  sub_1BA4F6CCC((uint64_t)&v47);
  sub_1BA4F6CCC((uint64_t)&v46);
  v40 = objc_msgSend(v39, sel_CGColor);

  objc_msgSend(v38, sel_setFillColor_, v40);
  v41 = *(void **)&v21[v37];
  objc_msgSend(v41, sel_setPosition_, 0.0, 0.0);
  v42 = objc_msgSend(v21, sel_layer);
  v43 = v41;
  objc_msgSend(v42, sel_addSublayer_, v43);

  return v21;
}

void sub_1BAA65DC8()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  objc_super v21;
  CGRect v22;
  CGRect v23;

  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, UIEdgeInsetsInsetRect(v2, v3, v4, v5, *(double *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets], *(double *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets + 8]));
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v22);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v23);
  sub_1BB873774();
  v7 = v6;
  v9 = v8;
  sub_1BB873774();
  v11 = v10;
  v13 = v12;
  sub_1BB873780();
  v15 = v14;
  v17 = v16;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v18, sel_moveToPoint_, v7, v9);
  objc_msgSend(v18, sel_addLineToPoint_, v15, v17);
  objc_msgSend(v18, sel_addLineToPoint_, v11, v13);
  objc_msgSend(v18, sel_addLineToPoint_, v7, v9);
  objc_msgSend(v18, sel_closePath);
  v19 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer];
  v20 = objc_msgSend(v18, sel_CGPath);
  objc_msgSend(v19, sel_setPath_, v20);

}

uint64_t type metadata accessor for DebugFormatDebuggerSourceMetricView()
{
  return objc_opt_self();
}

void sub_1BAA6618C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_label;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleInsets];
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)v3 = _Q0;
  *((_OWORD *)v3 + 1) = _Q0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatDebuggerSourceMetricView_bubbleTipSize] = 0x4018000000000000;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FeedTopicClusteringResult.clusters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedTopicClusteringResult.orphanedHeadlines.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedTopicClusteringResult __swiftcall FeedTopicClusteringResult.init(clusters:orphanedHeadlines:)(Swift::OpaquePointer clusters, Swift::OpaquePointer orphanedHeadlines)
{
  Swift::OpaquePointer *v2;
  NewsFeed::FeedTopicClusteringResult result;

  v2->_rawValue = clusters._rawValue;
  v2[1]._rawValue = orphanedHeadlines._rawValue;
  result.orphanedHeadlines = orphanedHeadlines;
  result.clusters = clusters;
  return result;
}

void static FeedTopicClusteringResult.empty.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = MEMORY[0x1E0DEE9D8];
  a1[1] = v1;
}

uint64_t FeedTopicClusteringResult.scoredHeadlines.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = MEMORY[0x1E0DEE9D8];
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 40;
    do
    {
      v4 = swift_bridgeObjectRetain();
      sub_1BB3847D8(v4);
      v3 += 24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v1 = v7;
  }
  v8 = v1;
  v5 = swift_bridgeObjectRetain();
  sub_1BB3847D8(v5);
  return v8;
}

uint64_t static FeedTopicClusteringResult.- infix(_:_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v4 = *(_QWORD *)(a1 + 8);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v37 = MEMORY[0x1E0DEE9D8];
    result = sub_1BA7447E8(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v35 = v4;
    v8 = 0;
    v6 = v37;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v9 = (void *)MEMORY[0x1BCCE4630](v8, a2);
      }
      else
      {
        v9 = *(void **)(a2 + 8 * v8 + 32);
        swift_unknownObjectRetain();
      }
      v10 = objc_msgSend(v9, sel_identifier);
      v11 = sub_1BB8729A0();
      v13 = v12;
      swift_unknownObjectRelease();

      v15 = *(_QWORD *)(v37 + 16);
      v14 = *(_QWORD *)(v37 + 24);
      if (v15 >= v14 >> 1)
        sub_1BA7447E8(v14 > 1, v15 + 1, 1);
      ++v8;
      *(_QWORD *)(v37 + 16) = v15 + 1;
      v16 = v37 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
    }
    while (v5 != v8);
    v4 = v35;
  }
  v17 = sub_1BA6E43EC(v6);
  swift_bridgeObjectRelease();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BAA6897C(v19, (uint64_t)sub_1BAA68974, v18);
  swift_bridgeObjectRelease();
  swift_release();
  v21 = *(_QWORD *)(v4 + 16);
  if (v21)
  {
    v33 = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    v22 = 0;
    v23 = MEMORY[0x1E0DEE9D8];
    do
    {
      v24 = v4;
      v36 = *(_OWORD *)(v4 + 16 * v22 + 32);
      v25 = *(void **)(v4 + 16 * v22 + 32);
      swift_unknownObjectRetain_n();
      v26 = *((id *)&v36 + 1);
      v27 = objc_msgSend(v25, sel_articleID);
      v28 = sub_1BB8729A0();
      v30 = v29;

      swift_unknownObjectRelease();
      LOBYTE(v27) = sub_1BA761FE4(v28, v30, v17);
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {

        swift_unknownObjectRelease();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7A4F8(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v32 = *(_QWORD *)(v23 + 16);
        v31 = *(_QWORD *)(v23 + 24);
        if (v32 >= v31 >> 1)
          sub_1BAC7A4F8(v31 > 1, v32 + 1, 1);
        *(_QWORD *)(v23 + 16) = v32 + 1;
        *(_OWORD *)(v23 + 16 * v32 + 32) = v36;
      }
      ++v22;
      v4 = v24;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
    swift_release_n();
    result = swift_bridgeObjectRelease();
    v20 = v33;
  }
  else
  {
    swift_release();
    result = swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  *a3 = v20;
  a3[1] = v23;
  return result;
}

BOOL sub_1BAA66698(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  swift_unknownObjectRetain();
  v5 = v4;
  v6 = objc_msgSend(v3, sel_articleID);
  v7 = sub_1BB8729A0();
  v9 = v8;

  swift_unknownObjectRelease();
  LOBYTE(a2) = sub_1BA761FE4(v7, v9, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t FeedTopicClusteringResult.next(filterAgainst:)(_QWORD *a1, uint64_t *a2, unint64_t a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v40;

  v4 = a3;
  v7 = *v3;
  v6 = v3[1];
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v40 = MEMORY[0x1E0DEE9D8];
    v10 = (uint64_t)&v40;
    sub_1BA7447E8(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_36;
    }
    v36 = v7;
    v37 = a2;
    v38 = v6;
    v11 = 0;
    v9 = v40;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v12 = (void *)MEMORY[0x1BCCE4630](v11, v4);
      }
      else
      {
        v12 = *(void **)(v4 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      v13 = objc_msgSend(v12, sel_identifier, v36, v37);
      v14 = sub_1BB8729A0();
      v16 = v15;
      swift_unknownObjectRelease();

      v40 = v9;
      v18 = *(_QWORD *)(v9 + 16);
      v17 = *(_QWORD *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BA7447E8(v17 > 1, v18 + 1, 1);
        v9 = v40;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v18 + 1;
      v19 = v9 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
    }
    while (v8 != v11);
    a2 = v37;
    v7 = v36;
  }
  v20 = sub_1BA6E43EC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  v4 = 0;
  v22 = sub_1BAA68DC8(v21, v20);
  v10 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  if ((v10 & 1) == 0)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22 < *(_QWORD *)(v7 + 16))
      {
        v25 = (_QWORD *)(v7 + 24 * v22);
        v27 = v25[4];
        v26 = v25[5];
        v28 = v25[6];
        v10 = sub_1BA9BE674(v22 + 1, v7);
        v32 = v31 >> 1;
        *a1 = v27;
        a1[1] = v26;
        a1[2] = v28;
        if (v30 == v31 >> 1)
        {
          if (*(_QWORD *)(v6 + 16))
          {
            *a2 = MEMORY[0x1E0DEE9D8];
            a2[1] = v6;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            return swift_unknownObjectRelease();
          }
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          result = swift_unknownObjectRelease();
          goto LABEL_33;
        }
        v7 = v30;
        v4 = v31;
        a1 = v29;
        if ((v31 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
LABEL_23:
          v33 = sub_1BA85D4F0(v10, (uint64_t)a1, v7, v4);
LABEL_30:
          swift_unknownObjectRelease();
          *a2 = v33;
          goto LABEL_31;
        }
        v38 = v6;
        sub_1BB874434();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v34 = swift_dynamicCastClass();
        if (!v34)
        {
          swift_unknownObjectRelease();
          v34 = MEMORY[0x1E0DEE9D8];
        }
        v35 = *(_QWORD *)(v34 + 16);
        swift_release();
        if (!__OFSUB__(v32, v7))
        {
          if (v35 == v32 - v7)
          {
            v33 = swift_dynamicCastClass();
            if (!v33)
            {
              swift_unknownObjectRelease();
              v33 = MEMORY[0x1E0DEE9D8];
            }
            goto LABEL_30;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        swift_unknownObjectRelease();
        v6 = v38;
        goto LABEL_23;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (*(_QWORD *)(v6 + 16))
  {
    *a2 = MEMORY[0x1E0DEE9D8];
LABEL_31:
    a2[1] = v6;
    return swift_bridgeObjectRetain();
  }
LABEL_33:
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t FeedTopicClusteringResult.stealHeadlines(from:count:consumedIdentifiers:)(_QWORD *a1, void *a2, int64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v5 = *v4;
  v6 = v4[1];
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
LABEL_10:
    *a1 = v5;
    a1[1] = v6;
LABEL_16:
    swift_bridgeObjectRetain();
    v22 = 0;
LABEL_31:
    swift_bridgeObjectRetain();
    return v22;
  }
  v32 = a1;
  v33 = v6;
  v8 = v5 + 32;
  v34 = v5;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    v10 = *(void **)v8;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_identifier);
    v12 = sub_1BB8729A0();
    v14 = v13;

    v15 = (uint64_t)objc_msgSend(a2, sel_identifier);
    v16 = sub_1BB8729A0();
    v18 = v17;

    if (v12 == v16 && v14 == v18)
    {
      v20 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      break;
    ++v9;
    v8 += 24;
    if (v7 == v9)
    {
      v5 = v34;
      swift_bridgeObjectRelease();
      a1 = v32;
      v6 = v33;
      goto LABEL_10;
    }
  }
  v20 = v34;
  swift_bridgeObjectRelease();
LABEL_13:
  if (v9 >= *(_QWORD *)(v20 + 16))
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease();
    v22 = sub_1BA85D690(v7, v15, 0, (2 * v8) | 1);
    goto LABEL_23;
  }
  v10 = *(void **)v8;
  v21 = *(_QWORD *)(v8 + 8);
  v12 = *(_QWORD *)(v8 + 16);
  v15 = a4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain_n();
  v7 = sub_1BAA68BFC(v21, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a3;
  if (*(_QWORD *)(v7 + 16) < a3)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *v32 = v20;
    v32[1] = v33;
    goto LABEL_16;
  }
  if (a3 < 0)
    goto LABEL_33;
  v15 = v7 + 32;
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  v24 = *(_QWORD *)(v23 + 16);
  swift_release();
  a4 = v7 + 32;
  if (v24 != a3)
    goto LABEL_34;
  v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
LABEL_23:
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v7 + 16);
  if (v25 < v8)
  {
    __break(1u);
LABEL_36:
    swift_bridgeObjectRelease();
    v28 = sub_1BA85D690(v7, a4, v8, (2 * v25) | 1);
    goto LABEL_29;
  }
  a2 = (void *)v12;
  swift_unknownObjectRetain_n();
  v26 = swift_dynamicCastClass();
  if (!v26)
  {
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9D8];
  }
  v27 = *(_QWORD *)(v26 + 16);
  swift_release();
  if (v27 != v25 - v8)
    goto LABEL_36;
  v28 = swift_dynamicCastClass();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x1E0DEE9D8];
  }
LABEL_29:
  swift_bridgeObjectRelease();
  v37 = v34;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BAA675C8(v9, (uint64_t)&v36);
  swift_bridgeObjectRelease();
  result = swift_unknownObjectRelease();
  if (*(_QWORD *)(v37 + 16) >= v9)
  {
    sub_1BAA68160(v9, v9, (uint64_t)v10, v28, (uint64_t)a2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *v32 = v37;
    v32[1] = v33;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAA66F10(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1BAA67F78(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
      sub_1BB872DCC();
      return v10;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA66FF8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BA6ADE60, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd, a2);
}

uint64_t sub_1BAA6700C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BAA67DC0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem, a2);
}

uint64_t sub_1BAA67020@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v9 = *v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a2(v9);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = v10 - 1;
  v12 = *(_QWORD *)(a3(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)) + v13 * a1;
  result = sub_1BA5193C4(v14, a4, a3);
  if ((uint64_t)(v11 - a1) < 0)
  {
LABEL_15:
    result = sub_1BB873F84();
    __break(1u);
    return result;
  }
  if (v13 > 0 || v14 >= v14 + v13 + v13 * (v11 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v13)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v9 + 16) = v11;
  *v4 = v9;
  return result;
}

uint64_t sub_1BAA67168@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BAA67DD4, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic, a2);
}

uint64_t sub_1BAA6717C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67DE8(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[8 * a1];
    v10 = *((_OWORD *)v8 + 2);
    v9 = v8 + 4;
    v11 = *((_BYTE *)v9 + 16);
    v12 = v9[5];
    *(_OWORD *)a2 = v10;
    *(_BYTE *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v9 + 3);
    *(_QWORD *)(a2 + 40) = v12;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v9 + 3);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(v9, v9 + 8, (v7 - a1) << 6);
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67278@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67DFC(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[21 * a1];
    v8 = *((_OWORD *)v7 + 11);
    v9 = v6 - 1;
    *(_OWORD *)(a2 + 128) = *((_OWORD *)v7 + 10);
    *(_OWORD *)(a2 + 144) = v8;
    *(_QWORD *)(a2 + 160) = v7[24];
    v10 = *((_OWORD *)v7 + 7);
    *(_OWORD *)(a2 + 64) = *((_OWORD *)v7 + 6);
    *(_OWORD *)(a2 + 80) = v10;
    v11 = *((_OWORD *)v7 + 9);
    *(_OWORD *)(a2 + 96) = *((_OWORD *)v7 + 8);
    *(_OWORD *)(a2 + 112) = v11;
    v12 = *((_OWORD *)v7 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v7 + 2);
    *(_OWORD *)(a2 + 16) = v12;
    v13 = *((_OWORD *)v7 + 5);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v7 + 4);
    *(_OWORD *)(a2 + 48) = v13;
    v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      result = (uint64_t)memmove(v7 + 4, v7 + 25, 168 * v14);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67388@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BAA67E10, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed, a2);
}

uint64_t sub_1BAA6739C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67E24(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[19 * a1];
    v8 = *((_OWORD *)v7 + 9);
    v9 = v6 - 1;
    *(_OWORD *)(a2 + 96) = *((_OWORD *)v7 + 8);
    *(_OWORD *)(a2 + 112) = v8;
    *(_OWORD *)(a2 + 128) = *((_OWORD *)v7 + 10);
    *(_BYTE *)(a2 + 144) = *((_BYTE *)v7 + 176);
    v10 = *((_OWORD *)v7 + 5);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v7 + 4);
    *(_OWORD *)(a2 + 48) = v10;
    v11 = *((_OWORD *)v7 + 7);
    *(_OWORD *)(a2 + 64) = *((_OWORD *)v7 + 6);
    *(_OWORD *)(a2 + 80) = v11;
    v12 = *((_OWORD *)v7 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v7 + 2);
    *(_OWORD *)(a2 + 16) = v12;
    v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      result = (uint64_t)memmove(v7 + 4, v7 + 23, 152 * v13);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA674AC@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67E38(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[18 * a1];
    v8 = v7[9];
    v9 = v6 - 1;
    a2[6] = v7[8];
    a2[7] = v8;
    *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v7 + 153);
    v10 = v7[5];
    a2[2] = v7[4];
    a2[3] = v10;
    v11 = v7[7];
    a2[4] = v7[6];
    a2[5] = v11;
    v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      result = (uint64_t)memmove(v7 + 2, v7 + 11, 144 * v13);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA675B4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BA78A250, type metadata accessor for FeedHeadline, a2);
}

uint64_t sub_1BAA675C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67E74(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[3 * a1];
    v9 = *((_OWORD *)v7 + 2);
    v8 = v7 + 4;
    v10 = v8[2];
    v11 = v6 - 1;
    *(_OWORD *)a2 = v9;
    *(_QWORD *)(a2 + 16) = v10;
    v12 = v6 - 1 - a1;
    if (v12 >= 0)
    {
      result = (uint64_t)memmove(v8, v8 + 3, 24 * v12);
      v5[2] = v11;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA676B8(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1BAA67F78(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_1BB872DCC();
      return v10;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67798@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BAA67E88, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner, a2);
}

uint64_t sub_1BAA677AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67E9C(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[11 * a1];
    v9 = v7[4];
    v10 = v7[5];
    v8 = v7 + 4;
    v11 = v6 - 1;
    v12 = *((_BYTE *)v8 + 32);
    v13 = *(_OWORD *)(v8 + 5);
    v14 = v8[7];
    v15 = v8[8];
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = *((_OWORD *)v8 + 1);
    *(_BYTE *)(a2 + 32) = v12;
    *(_OWORD *)(a2 + 40) = v13;
    *(_QWORD *)(a2 + 56) = v14;
    *(_QWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(v8 + 9);
    if ((uint64_t)(v11 - a1) >= 0)
    {
      result = (uint64_t)memmove(v8, v8 + 11, 88 * (v11 - a1));
      v5[2] = v11;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA678B8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BA7C4C08(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[7 * a1];
    v10 = v8[4];
    v11 = v8[5];
    v9 = v8 + 4;
    v12 = *((_BYTE *)v9 + 32);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    *(_OWORD *)(a2 + 16) = *((_OWORD *)v9 + 1);
    *(_BYTE *)(a2 + 32) = v12;
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(v9 + 5);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(v9, v9 + 7, 56 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA679B4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67EB0(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = &v5[6 * a1];
      v10 = *((_OWORD *)v9 + 2);
      v9 += 4;
      v11 = *((_BYTE *)v9 + 40);
      v12 = v9[4];
      v14 = *((_OWORD *)v9 + 1);
      result = (uint64_t)memmove(v9, v9 + 6, 48 * v8);
      v5[2] = v7;
      *v2 = v5;
      *(_OWORD *)a2 = v10;
      *(_OWORD *)(a2 + 16) = v14;
      *(_QWORD *)(a2 + 32) = v12;
      *(_BYTE *)(a2 + 40) = v11;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67AB8(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1BAA67EC4(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[4 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67BAC(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1BAA67EEC(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67C88@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BAA67F00(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[8 * a1];
    v10 = *((_OWORD *)v8 + 2);
    v9 = v8 + 4;
    v11 = v9[4];
    v12 = *((_BYTE *)v9 + 40);
    v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)a2 = v10;
    *(_OWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 32) = v11;
    *(_BYTE *)(a2 + 40) = v12;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v9 + 3);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = (uint64_t)memmove(v9, v9 + 8, (v7 - a1) << 6);
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA67D80@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAA67020(a1, (uint64_t (*)(uint64_t))sub_1BAA67F14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup, a2);
}

_QWORD *sub_1BAA67D94(_QWORD *a1)
{
  return sub_1BA6A94A8(0, a1[2], 0, a1);
}

_QWORD *sub_1BAA67DAC(_QWORD *a1)
{
  return sub_1BB38CAB4(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67DC0(unint64_t a1)
{
  return sub_1BB38FD40(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BAA67DD4(unint64_t a1)
{
  return sub_1BB38FD78(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BAA67DE8(_QWORD *a1)
{
  return sub_1BB38FDB0(0, a1[2], 0, a1);
}

_QWORD *sub_1BAA67DFC(_QWORD *a1)
{
  return sub_1BB39000C(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67E10(unint64_t a1)
{
  return sub_1BB390170(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BAA67E24(_QWORD *a1)
{
  return sub_1BB3902C0(0, a1[2], 0, a1);
}

_QWORD *sub_1BAA67E38(_QWORD *a1)
{
  return sub_1BB390438(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67E4C(unint64_t a1)
{
  return sub_1BB3905C4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BAA67E60(unint64_t a1)
{
  return sub_1BB3905EC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BAA67E74(_QWORD *a1)
{
  return sub_1BB390720(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67E88(unint64_t a1)
{
  return sub_1BB391C58(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BAA67E9C(_QWORD *a1)
{
  return sub_1BB391C6C(0, a1[2], 0, a1);
}

_QWORD *sub_1BAA67EB0(_QWORD *a1)
{
  return sub_1BB391DA8(0, a1[2], 0, a1);
}

_QWORD *sub_1BAA67EC4(_QWORD *a1)
{
  return sub_1BB39208C(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67ED8(unint64_t a1)
{
  return sub_1BB392890(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BAA67EEC(_QWORD *a1)
{
  return sub_1BA6EA0D0(0, a1[2], 0, a1);
}

_QWORD *sub_1BAA67F00(_QWORD *a1)
{
  return sub_1BB3928B8(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67F14(unint64_t a1)
{
  return sub_1BA6D347C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BAA67F28(unint64_t a1)
{
  return sub_1BB39393C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BAA67F3C(unint64_t a1)
{
  return sub_1BB393D98(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BAA67F50(_QWORD *a1)
{
  return sub_1BB393DAC(0, a1[2], 0, a1);
}

uint64_t sub_1BAA67F64(unint64_t a1)
{
  return sub_1BB394054(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_1BAA67F78(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BCCE463CLL);
}

char *sub_1BAA67FE0(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1BA6EA0D0(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BAA68160(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  int64_t v8;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v7 = *(_QWORD **)v5;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v8 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v12 > v7[3] >> 1)
  {
    if (v8 <= v12)
      v16 = v8 + v11;
    else
      v16 = v8;
    v7 = sub_1BB390720(isUniquelyReferenced_nonNull_native, v16, 1, v7);
  }
  v17 = v7 + 4;
  v18 = &v7[3 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v11)
    goto LABEL_20;
  v20 = v7[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 3);
    v23 = (char *)&v17[3 * a2];
    if (v18 + 3 != (_QWORD *)v23 || result >= &v23[24 * v22])
      result = (char *)memmove(result, v23, 24 * v22);
    v24 = v7[2];
    v21 = __OFADD__(v24, v11);
    v25 = v24 + v11;
    if (!v21)
    {
      v7[2] = v25;
LABEL_20:
      *v18 = a3;
      v26 = &v17[3 * a1];
      v26[1] = a4;
      v26[2] = a5;
      *(_QWORD *)v5 = v7;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BAA68300(uint64_t a1, int64_t a2, _OWORD *a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  _OWORD *v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1BB391DA8(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = &v5[6 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 3);
    v19 = (char *)&v5[6 * a2 + 4];
    v20 = 48 * v18;
    if (v14 + 3 != (_OWORD *)v19 || result >= &v19[v20])
      result = (char *)memmove(result, v19, v20);
    v21 = v5[2];
    v17 = __OFADD__(v21, v9);
    v22 = v21 + v9;
    if (!v17)
    {
      v5[2] = v22;
LABEL_20:
      v23 = a3[1];
      *v14 = *a3;
      v14[1] = v23;
      *(_OWORD *)((char *)v14 + 25) = *(_OWORD *)((char *)a3 + 25);
      *(_QWORD *)v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BAA68494(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  _QWORD *v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *(_QWORD **)v6;
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    v8 = sub_1BB39208C(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  v18 = &v8[4 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v12)
    goto LABEL_20;
  v20 = v8[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 4);
    v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22])
      result = (char *)memmove(result, v23, 32 * v22);
    v24 = v8[2];
    v21 = __OFADD__(v24, v12);
    v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      *v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(_QWORD *)v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BAA68624(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  _QWORD *v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *(_QWORD **)v6;
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    v8 = sub_1BB38ED20(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  v18 = &v8[4 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v12)
    goto LABEL_20;
  v20 = v8[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 4);
    v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22])
      result = (char *)memmove(result, v23, 32 * v22);
    v24 = v8[2];
    v21 = __OFADD__(v24, v12);
    v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      *v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(_QWORD *)v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA687B4(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1BB393424(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(_QWORD *)v3 = v5;
  }
  v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1BA93CD14();
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v15 = v5[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v14 + 40);
    v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17])
      memmove(v18, v19, 40 * v17);
    v20 = v5[2];
    v16 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v16)
    {
      v5[2] = v21;
LABEL_20:
      sub_1BAA69654(a3, v14);
      return sub_1BAA69600(a3);
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA68950()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1BAA68974(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA66698(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAA6897C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A818(0, v3, 0);
    v4 = v17;
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v7 = *(v6 - 2);
      v8 = *(v6 - 1);
      v9 = *v6;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      v10 = sub_1BAC9C5F8(a2, a3, v8);
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v17 + 16);
      v11 = *(_QWORD *)(v17 + 24);
      if (v12 >= v11 >> 1)
        sub_1BAC7A818(v11 > 1, v12 + 1, 1);
      v6 += 3;
      *(_QWORD *)(v17 + 16) = v12 + 1;
      v13 = (_QWORD *)(v17 + 24 * v12);
      v13[4] = v7;
      v13[5] = v10;
      v13[6] = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1BAA68A94(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1BB38CBD4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[a2 + 4];
    if (a1 != a2 || &v4[a1 + 4] >= (_QWORD *)&v16[8 * v15])
      result = (uint64_t)memmove(&v4[a1 + 4], v16, 8 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA68BFC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t i;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = 0;
  v17 = result + 32;
  v4 = MEMORY[0x1E0DEE9D8];
  do
  {
    v16 = v4;
    if (v3 <= v2)
      v5 = v2;
    else
      v5 = v3;
    for (i = v3; ; ++i)
    {
      if (v5 == i)
      {
        __break(1u);
        return result;
      }
      v19 = *(_OWORD *)(v17 + 16 * i);
      v3 = i + 1;
      v7 = *(void **)(v17 + 16 * i);
      swift_unknownObjectRetain_n();
      v8 = *((id *)&v19 + 1);
      v9 = objc_msgSend(v7, sel_articleID);
      v10 = sub_1BB8729A0();
      v12 = v11;

      swift_unknownObjectRelease();
      LOBYTE(v9) = sub_1BA761FE4(v10, v12, a2);
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
        break;

      result = swift_unknownObjectRelease();
      if (v2 == v3)
        return v16;
    }
    v4 = v16;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BAC7A4F8(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v4 = v16;
    }
    v13 = v19;
    v15 = *(_QWORD *)(v4 + 16);
    v14 = *(_QWORD *)(v4 + 24);
    if (v15 >= v14 >> 1)
    {
      result = sub_1BAC7A4F8(v14 > 1, v15 + 1, 1);
      v13 = v19;
      v4 = v16;
    }
    *(_QWORD *)(v4 + 16) = v15 + 1;
    *(_OWORD *)(v4 + 16 * v15 + 32) = v13;
  }
  while (v2 - 1 != i);
  return v4;
}

uint64_t sub_1BAA68DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  unint64_t i;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
    return 0;
  v2 = a2;
  v3 = 0;
  v23 = a1 + 32;
  v24 = a2 + 56;
  do
  {
    v4 = *(void **)(v23 + 24 * v3);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_identifier);
    v6 = sub_1BB8729A0();
    v8 = v7;

    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_19;
    v9 = v2;
    sub_1BB8745CC();
    sub_1BB872A90();
    v10 = sub_1BB874608();
    v11 = -1 << *(_BYTE *)(v2 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v24 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_19;
    v13 = *(_QWORD *)(v9 + 48);
    v14 = (_QWORD *)(v13 + 16 * v12);
    v15 = *v14 == v6 && v14[1] == v8;
    if (!v15 && (sub_1BB874398() & 1) == 0)
    {
      v16 = ~v11;
      for (i = v12 + 1; ; i = v18 + 1)
      {
        v18 = i & v16;
        if (((*(_QWORD *)(v24 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0)
          break;
        v19 = (_QWORD *)(v13 + 16 * v18);
        v20 = *v19 == v6 && v19[1] == v8;
        if (v20 || (sub_1BB874398() & 1) != 0)
          goto LABEL_3;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    ++v3;
    v2 = v9;
  }
  while (v3 != v22);
  return 0;
}

ValueMetadata *type metadata accessor for FeedTopicClusteringResult()
{
  return &type metadata for FeedTopicClusteringResult;
}

uint64_t sub_1BAA68FD4(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1BB38F740(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[7 * a2 + 4];
    if (a1 != a2 || &v4[7 * a1 + 4] >= (_QWORD *)&v16[56 * v15])
      result = (uint64_t)memmove(&v4[7 * a1 + 4], v16, 56 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA69148(uint64_t a1, uint64_t a2)
{
  return sub_1BAA69330(a1, a2, (void (*)(_QWORD))type metadata accessor for WeakSharedItemManagerObserver);
}

unint64_t sub_1BAA69154(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = *(_QWORD *)(a3 + 16);
  v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v26 = v9 - v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v11)
      v13 = v11;
    else
      v13 = v6;
    v5 = sub_1BA6D347C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = *(_QWORD *)(type metadata accessor for FormatContentSubgroup() - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * a1;
  result = swift_arrayDestroy();
  if (!v26)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    result = sub_1BB873F84();
    __break(1u);
    return result;
  }
  result = v17 + v16 * v9;
  v21 = v5 + v15 + v16 * a2;
  if (result < v21 || result >= v21 + v20 * v16)
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (result != v21)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v26);
  v25 = v23 + v26;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v25;
LABEL_25:
  if (v9)
    result = swift_arrayInitWithCopy();
  *v3 = v5;
  return result;
}

uint64_t sub_1BAA69324(uint64_t a1, uint64_t a2)
{
  return sub_1BAA69330(a1, a2, (void (*)(_QWORD))type metadata accessor for LiveActivityWebEmbedDatastoreManagerObserverProxy);
}

uint64_t sub_1BAA69330(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v21 < v3)
    goto LABEL_31;
LABEL_4:
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 - v9;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1BCCE463C](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v6(0);
  swift_arrayDestroy();
  if (!v8)
    return sub_1BB872DCC();
  if (!(v7 >> 62))
  {
    v15 = *(_QWORD *)(v13 + 16);
    v16 = v15 - v3;
    if (!__OFSUB__(v15, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v16 = v22 - v3;
  if (__OFSUB__(v22, v3))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v13 + 32 + 8 * v3);
    if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v17 + 8 * v16)
      memmove((void *)(v13 + 32 + 8 * v5), v17, 8 * v16);
    if (!(v7 >> 62))
    {
      v18 = *(_QWORD *)(v13 + 16);
      v19 = v18 + v8;
      if (!__OFADD__(v18, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v19;
        return sub_1BB872DCC();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v19 = v23 + v8;
    if (!__OFADD__(v23, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA69600(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1EF2AE4B8, (uint64_t (*)(uint64_t))sub_1BA93CD14, MEMORY[0x1E0DEC628]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA69654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA93CD14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatTextNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatTextNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA725020(v2);
}

uint64_t FormatTextNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatTextNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatTextNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatTextNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatTextNode.invalidation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_WORD *)(v1 + 104);
  *(_WORD *)(a1 + 24) = v5;
  return sub_1BA72FFC4(v2, v3, v4, v5);
}

uint64_t FormatTextNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 112);
}

uint64_t FormatTextNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatTextNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatTextNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 120);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

unint64_t sub_1BAA69960(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v3 + 120) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatTextNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 120) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatTextNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatTextNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 128) = a1;
  return result;
}

uint64_t (*FormatTextNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatTextNode.accessibility.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 129);
}

void FormatTextNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 144);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 136);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatTextNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTextNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatTextNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA725050(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA72E4BC(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_WORD *)(v0 + 104));
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BAA69C5C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatTextNode.__deallocating_deinit()
{
  FormatTextNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAA69CEC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2AE4C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNode, (uint64_t)&protocol conformance descriptor for FormatTextNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA69D28(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BD158, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNode, (uint64_t)&protocol conformance descriptor for FormatTextNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39F940, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNode, (uint64_t)&protocol conformance descriptor for FormatTextNode);
  result = sub_1BA50AD30(&qword_1EF2AE4C8, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNode, (uint64_t)&protocol conformance descriptor for FormatTextNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAA69DA0(_QWORD *a1, _QWORD *a2)
{
  return static FormatTextNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BAA69DAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2AE4D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNode, (uint64_t)&protocol conformance descriptor for FormatTextNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA69DE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    sub_1BA72FFD8();
    v4 = v3;
    swift_release();
    result = swift_release();
    if (!v1)
      *a1 = v4;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BAA69F18@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA69F64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA69FB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 112);
  return result;
}

uint64_t sub_1BAA69FF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 112) = v2;
  return result;
}

unint64_t sub_1BAA6A034@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 120);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BAA6A080@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 128);
  return result;
}

uint64_t sub_1BAA6A0C4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 128) = v2;
  return result;
}

uint64_t sub_1BAA6A104@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatTextNode()
{
  return swift_lookUpClassMethod();
}

void sub_1BAA6A15C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_string);
  v4 = sub_1BB8729A0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_1BAA6A1B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_release();
  return swift_deallocObject();
}

id sub_1BAA6A1FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;

  v3 = (void *)sub_1BAA6A4CC(a1);
  *a2 = v3;
  return v3;
}

uint64_t sub_1BAA6A220()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAA6A24C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void (*v3)(_QWORD *__return_ptr, id *);
  uint64_t v4;
  _QWORD v5[2];
  id v6;

  v3 = *(void (**)(_QWORD *__return_ptr, id *))(v1 + 16);
  (*(void (**)(id *__return_ptr))(v1 + 32))(&v6);
  v3(v5, &v6);

  v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
}

uint64_t sub_1BAA6A2B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA6A2DC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, uint64_t);
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD v19[4];

  v2 = v1;
  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB8726B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v11 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v14 = *(_QWORD *)v2;
    if (v2[24] == 255
      || (v15 = *(void (**)(_QWORD *__return_ptr, uint64_t))&v2[*(_QWORD *)(v14 + 120)]) == 0)
    {
      v16 = &v2[*(_QWORD *)(v14 + 112)];
    }
    else
    {
      swift_retain();
      v15(v19, a1);
      v16 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 112)];
      v17 = v19[1];
      *(_QWORD *)v16 = v19[0];
      *((_QWORD *)v16 + 1) = v17;
      swift_bridgeObjectRelease();
      sub_1BB86C8A4();
      sub_1BA49EBE0((uint64_t)v15);
      v18 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 104)];
      swift_beginAccess();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(v5 + 40))(v18, v7, v4);
      swift_endAccess();
    }
    return *(_QWORD *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA6A4CC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, uint64_t);
  unsigned __int8 *v16;
  void *v17;
  unsigned __int8 *v18;
  _QWORD v19[4];

  v2 = v1;
  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB8726B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v11 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v14 = *(_QWORD *)v2;
    if (v2[24] == 255
      || (v15 = *(void (**)(_QWORD *__return_ptr, uint64_t))&v2[*(_QWORD *)(v14 + 120)]) == 0)
    {
      v16 = &v2[*(_QWORD *)(v14 + 112)];
    }
    else
    {
      swift_retain();
      v15(v19, a1);
      v16 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 112)];
      v17 = *(void **)v16;
      *(_QWORD *)v16 = v19[0];

      sub_1BB86C8A4();
      sub_1BA49EBE0((uint64_t)v15);
      v18 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 104)];
      swift_beginAccess();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(v5 + 40))(v18, v7, v4);
      swift_endAccess();
    }
    return *(_QWORD *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA6A6BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAA6A6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAA6A788@<X0>(_QWORD *a1@<X8>)
{
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  return sub_1BAA69DE8(a1);
}

uint64_t static FormatVersioningModeRelease.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1BB874398() & 1) == 0)
    return 0;
  type metadata accessor for FormatVersioningModeRelease(0);
  return sub_1BB86EB3C();
}

uint64_t sub_1BAA6A878()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F6973726576;
  else
    return 0x656D614E65646F63;
}

uint64_t sub_1BAA6A8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA6F9C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA6A8D8()
{
  sub_1BAA6DF00();
  return sub_1BB874710();
}

uint64_t sub_1BAA6A900()
{
  sub_1BAA6DF00();
  return sub_1BB87471C();
}

uint64_t FormatVersioningModeRelease.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1BA4CDF6C(0, &qword_1EF2AE4E0, (uint64_t (*)(void))sub_1BAA6DF00, (uint64_t)&type metadata for FormatVersioningModeRelease.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA6DF00();
  sub_1BB8746C8();
  v11 = 0;
  sub_1BB87417C();
  if (!v1)
  {
    type metadata accessor for FormatVersioningModeRelease(0);
    v10 = 1;
    sub_1BB86EB84();
    sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatVersioningModeRelease.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  char v26;

  v20 = a2;
  v22 = sub_1BB86EB84();
  v19 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v21 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AE4F0, (uint64_t (*)(void))sub_1BAA6DF00, (uint64_t)&type metadata for FormatVersioningModeRelease.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - v6;
  v8 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA6DF00();
  v11 = (uint64_t)v24;
  sub_1BB87468C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = v8;
  v24 = a1;
  v12 = v10;
  v13 = v21;
  v14 = v22;
  v26 = 0;
  *v12 = sub_1BB874098();
  v12[1] = v15;
  v25 = 1;
  sub_1BA4A2870(&qword_1ED3B0918, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF0]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)v12 + *(int *)(v18 + 20), v13, v14);
  sub_1BA4C2DD8((uint64_t)v12, v20, type metadata accessor for FormatVersioningModeRelease);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersioningModeRelease);
}

uint64_t sub_1BAA6AD20(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1BB874398() & 1) != 0)
    return sub_1BB86EB3C();
  else
    return 0;
}

uint64_t sub_1BAA6AD90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVersioningModeRelease.init(from:)(a1, a2);
}

uint64_t sub_1BAA6ADA4(_QWORD *a1)
{
  return FormatVersioningModeRelease.encode(to:)(a1);
}

void sub_1BAA6ADB8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[2];

  v10[1] = a1;
  v2 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BB86EB84();
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(v1, (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BAA6AF40 + 4 * byte_1BB895F10[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA6AF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3BB468 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3B8FC8);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 16))(*(_QWORD *)(v2 - 88), v3, v1);
}

uint64_t FormatVersioningModeSelection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[4];
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 v44;
  uint64_t v45;

  v38 = a2;
  sub_1BAA6E3D4(0);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v35 = (char *)v33 - v7;
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)v33 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v40 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v33 - v12;
  v14 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v33 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v20 = v45;
  sub_1BB87468C();
  if (!v20)
  {
    v34 = 0;
    v33[1] = v16;
    v33[3] = v14;
    v33[2] = v19;
    v45 = v11;
    v21 = a1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v22 = sub_1BB872874();
    v23 = Dictionary<>.errorOnUnknownKeys.getter(v22);
    swift_bridgeObjectRelease();
    v24 = v40;
    if ((v23 & 1) != 0)
    {
      v25 = sub_1BB8740EC();
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = (unint64_t *)(v25 + 40);
        while (1)
        {
          v28 = *v27;
          if (*v27 >= 4)
            break;
          v27 += 2;
          if (!--v26)
            goto LABEL_7;
        }
        v30 = *(v27 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        swift_allocError();
        *(_QWORD *)v31 = v30;
        *(_QWORD *)(v31 + 8) = v28;
        *(_QWORD *)(v31 + 16) = &unk_1E72681C0;
        *(_OWORD *)(v31 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v30, v28);
        goto LABEL_11;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BAA6E460();
    v44 = 0uLL;
    v29 = v34;
    sub_1BB8740D4();
    if (!v29)
      __asm { BR              X10 }
LABEL_11:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v24);
    a1 = v21;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void FormatVersioningModeSelection.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[3];
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v2 = v1;
  sub_1BAA6E3D4(0);
  v17[1] = v4;
  MEMORY[0x1E0C80A78](v4);
  v17[2] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86EB84();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x1E0C80A78](v6);
  v20 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v18);
  v19 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v25 = v13;
  v23 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v17 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v24 = v15;
  sub_1BB8746C8();
  sub_1BA4C2DD8(v2, (uint64_t)v12, type metadata accessor for FormatVersioningModeSelection);
  v16 = (char *)sub_1BAA6BD3C + 4 * byte_1BB895F1C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA6BD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA5193C4(v1, v0, type metadata accessor for FormatVersioningModeRelease);
  *(_BYTE *)(v2 - 65) = 3;
  sub_1BAA6E4E8();
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0;
  v4 = *(_QWORD *)(v2 - 112);
  v3 = *(_QWORD *)(v2 - 104);
  v5 = *(_QWORD *)(v2 - 128);
  sub_1BB8741AC();
  if (!v5)
  {
    *(_OWORD *)(v2 - 96) = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1EF2AE540, type metadata accessor for FormatVersioningModeRelease, (uint64_t)&protocol conformance descriptor for FormatVersioningModeRelease);
    sub_1BB8741AC();
  }
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersioningModeRelease);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v4, v3);
}

uint64_t sub_1BAA6C004(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA6C044 + 4 * byte_1BB895F22[a1]))(0x694D746365746564, 0xED00006D756D696ELL);
}

uint64_t sub_1BAA6C044()
{
  return 0x7275436465786966;
}

unint64_t sub_1BAA6C064()
{
  return 0xD000000000000019;
}

uint64_t sub_1BAA6C080()
{
  return 0x6E6F4E6465786966;
}

unint64_t sub_1BAA6C0A4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BAA6C0C4()
{
  return 0x6465786966;
}

uint64_t sub_1BAA6C0D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA6C118 + 4 * byte_1BB895F28[a1]))(0x694D746365746564, 0xED00006D756D696ELL);
}

uint64_t sub_1BAA6C118()
{
  return 0x7275436465786966;
}

unint64_t sub_1BAA6C138()
{
  return 0xD000000000000019;
}

uint64_t sub_1BAA6C154()
{
  return 0x6E6F4E6465786966;
}

unint64_t sub_1BAA6C178()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BAA6C198()
{
  return 0x6465786966;
}

void sub_1BAA6C1AC(char *a1)
{
  sub_1BB7F0870(*a1);
}

void sub_1BAA6C1B8()
{
  char *v0;

  sub_1BA8D25C8(*v0);
}

void sub_1BAA6C1C0(uint64_t a1)
{
  char *v1;

  sub_1BA9D1810(a1, *v1);
}

void sub_1BAA6C1C8(uint64_t a1)
{
  char *v1;

  sub_1BAB07D00(a1, *v1);
}

uint64_t sub_1BAA6C1D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAA6F978();
  *a1 = result;
  return result;
}

uint64_t sub_1BAA6C1FC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAA6C004(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAA6C224()
{
  unsigned __int8 *v0;

  return sub_1BAA6C0D8(*v0);
}

uint64_t sub_1BAA6C22C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAA6F978();
  *a1 = result;
  return result;
}

uint64_t sub_1BAA6C250()
{
  sub_1BAA6FAB0();
  return sub_1BB872D60();
}

uint64_t sub_1BAA6C2AC()
{
  sub_1BAA6FAB0();
  return sub_1BB872D0C();
}

uint64_t sub_1BAA6C2F8()
{
  sub_1BAA6FB6C();
  return sub_1BB874710();
}

uint64_t sub_1BAA6C320()
{
  sub_1BAA6FB6C();
  return sub_1BB87471C();
}

uint64_t sub_1BAA6C348@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVersioningModeSelection.init(from:)(a1, a2);
}

void sub_1BAA6C35C(_QWORD *a1)
{
  FormatVersioningModeSelection.encode(to:)(a1);
}

uint64_t sub_1BAA6C370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1BAA6FAF4();
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF3D0518 = result;
  return result;
}

uint64_t static FormatVersioningModeSelection.dataType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB58D0];
  v3 = sub_1BB86D3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t static FormatVersioningModeSelection.convert(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  _BYTE v12[32];

  sub_1BA747A10(a1, (uint64_t)v12);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v3 = v10 & 0xFFFFFFFFFFFFLL;
    if (v3)
    {
      v4 = sub_1BA9F1950(v10, v11);
      v6 = v5;
      type metadata accessor for FormatJSONDecoder();
      swift_allocObject();
      sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
      v7 = type metadata accessor for FormatVersioningModeSelection(0);
      sub_1BA4A2870(&qword_1EF2AE548, type metadata accessor for FormatVersioningModeSelection, (uint64_t)&protocol conformance descriptor for FormatVersioningModeSelection);
      sub_1BB86DC78();
      sub_1BA69D314(v4, v6);
      swift_release();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 0, 1, v7);
    }
    swift_bridgeObjectRelease();
  }
  v8 = type metadata accessor for FormatVersioningModeSelection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

void FormatVersioningModeSelection.toData()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FormatJSONEncoder();
  swift_allocObject();
  sub_1BB35A338(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for FormatVersioningModeSelection(0);
  sub_1BA4A2870(&qword_1EF2AE550, type metadata accessor for FormatVersioningModeSelection, (uint64_t)&protocol conformance descriptor for FormatVersioningModeSelection);
  sub_1BB86BD28();
  v1 = v0;
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_1BAA6CA64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB58D0];
  v3 = sub_1BB86D3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_1BAA6CAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[2];

  v1 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BB86EB84();
  v10[1] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(v0, (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BAA6CC68 + 4 * byte_1BB895F2E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA6CC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA5193C4(v1, v0, type metadata accessor for FormatVersioningModeRelease);
  sub_1BA4A2870((unint64_t *)&unk_1ED3B0920, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF8]);
  v2 = sub_1BB87420C();
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersioningModeRelease);
  return v2;
}

void sub_1BAA6CF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86EB84();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4C2DD8(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1BAA6D094 + 4 * byte_1BB895F34[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA6D094()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FormatVersioningModeSelection);
  return 0;
}

uint64_t sub_1BAA6D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v0 = type metadata accessor for FormatVersioningModeSelection(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2AE5B8, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87FC80;
  v19 = v7;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  if (qword_1ED3C6D10 != -1)
    swift_once();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3C69C0);
  sub_1BB86EB84();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
  v8 = sub_1BB872E08();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79DC4(0, v9, 0);
    v18 = v8;
    v10 = v8 + 32;
    do
    {
      sub_1BA4C010C(v10, (uint64_t)v20);
      v11 = v21;
      v12 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      sub_1BA6EDCB0(v11, v12);
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      v13 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79DC4(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v23;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79DC4(v14 > 1, v15 + 1, 1);
        v13 = v23;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      sub_1BA5193C4((uint64_t)v3, v13 + v6 + v15 * v5, type metadata accessor for FormatVersioningModeSelection);
      v10 += 40;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  v20[0] = v19;
  swift_bridgeObjectRetain();
  v16 = swift_bridgeObjectRetain();
  sub_1BB383A18(v16);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  qword_1EF2AE4D8 = v20[0];
  return result;
}

uint64_t sub_1BAA6D67C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_1BA6EDCB0(v1, v2);
}

uint64_t sub_1BAA6D6C4()
{
  sub_1BB86EB84();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
  return sub_1BB872910() & 1;
}

uint64_t static FormatVersioningModeSelection.allCases.getter()
{
  if (qword_1EF2A6CC0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static FormatVersioningModeSelection.allCases.setter(uint64_t a1)
{
  if (qword_1EF2A6CC0 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EF2AE4D8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static FormatVersioningModeSelection.allCases.modify())()
{
  if (qword_1EF2A6CC0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BAA6D87C@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EF2A6CC0 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_1EF2AE4D8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA6D8F0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_1BA69D44C(a1, a2);
  sub_1BAA6DA94(a1, a2);
  sub_1BA69D314(a1, a2);
  v4 = sub_1BB872A78();
  swift_release();
  return v4;
}

uint64_t sub_1BAA6D964@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BB872A78();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAA6D99C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1BB86C01C();
  v9 = result;
  if (result)
  {
    result = sub_1BB86C040();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1BB86C034();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_1BAA6DA48(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

_QWORD *sub_1BAA6DA48(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

void sub_1BAA6DA94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1BB86C70C();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

_QWORD *sub_1BAA6DB10()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    sub_1BAA6FBB0();
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_1BA69D44C(v2, v0);
    v7 = sub_1BB86C6A0();
    sub_1BA69D314(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x1BAA6DBE0);
    }
  }
  return v4;
}

uint64_t sub_1BAA6DBF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BB872A78();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s8NewsFeed20FormatVersioningModeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_1BB86EB84();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  sub_1BA9ED538(0, &qword_1EF2AE5C8, (void (*)(uint64_t))type metadata accessor for FormatVersioningMode);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  v20 = (char *)&v31 + *(int *)(v19 + 48) - v17;
  sub_1BA4C2DD8(a1, (uint64_t)&v31 - v17, type metadata accessor for FormatVersioningMode);
  sub_1BA4C2DD8(a2, (uint64_t)v20, type metadata accessor for FormatVersioningMode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BA4C2DD8((uint64_t)v18, (uint64_t)v15, type metadata accessor for FormatVersioningMode);
    if (!swift_getEnumCaseMultiPayload())
    {
      v28 = v31;
      v29 = v32;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v9, v20, v32);
      v24 = sub_1BB86EB3C();
      v25 = *(void (**)(char *, uint64_t))(v28 + 8);
      v25(v9, v29);
      v26 = v15;
      v27 = v29;
      goto LABEL_12;
    }
    v12 = v15;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BA4C2DD8((uint64_t)v18, (uint64_t)v12, type metadata accessor for FormatVersioningMode);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = v31;
      v23 = v32;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v6, v20, v32);
      v24 = sub_1BB86EB3C();
      v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v25(v6, v23);
      v26 = v12;
      v27 = v23;
LABEL_12:
      v25(v26, v27);
      sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersioningMode);
      return v24 & 1;
    }
LABEL_7:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
LABEL_10:
    sub_1BA9ED590((uint64_t)v18, &qword_1EF2AE5C8, (void (*)(uint64_t))type metadata accessor for FormatVersioningMode);
    v24 = 0;
    return v24 & 1;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
    goto LABEL_10;
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersioningMode);
  v24 = 1;
  return v24 & 1;
}

uint64_t type metadata accessor for FormatVersioningModeRelease(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C42F0);
}

unint64_t sub_1BAA6DF00()
{
  unint64_t result;

  result = qword_1EF2AE4E8;
  if (!qword_1EF2AE4E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8963F8, &type metadata for FormatVersioningModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE4E8);
  }
  return result;
}

void _s8NewsFeed29FormatVersioningModeSelectionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1BB86EB84();
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  MEMORY[0x1E0C80A78](v4);
  v17 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v17);
  v16[2] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v16[1] = (char *)v16 - v7;
  v8 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA9ED538(0, &qword_1EF2AE5C0, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v16 + *(int *)(v13 + 48) - v12;
  sub_1BA4C2DD8(a1, (uint64_t)v16 - v12, type metadata accessor for FormatVersioningModeSelection);
  sub_1BA4C2DD8(a2, (uint64_t)v14, type metadata accessor for FormatVersioningModeSelection);
  v15 = (char *)sub_1BAA6E104 + 4 * byte_1BB895F3A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA6E104()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  BOOL v6;

  sub_1BA4C2DD8(v0, (uint64_t)v2, type metadata accessor for FormatVersioningModeSelection);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BA4A2E80((uint64_t)v2, type metadata accessor for FormatVersioningModeRelease);
    sub_1BA9ED590(v0, &qword_1EF2AE5C0, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
  }
  else
  {
    v5 = *(_QWORD **)(v3 - 120);
    sub_1BA5193C4(v1, (uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
    v6 = *v2 == *v5 && v2[1] == v5[1];
    if ((v6 || (sub_1BB874398() & 1) != 0) && (sub_1BB86EB3C() & 1) != 0)
    {
      sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
      sub_1BA4A2E80((uint64_t)v2, type metadata accessor for FormatVersioningModeRelease);
      sub_1BA4A2E80(v0, type metadata accessor for FormatVersioningModeSelection);
      v4 = 1;
      return v4 & 1;
    }
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersioningModeRelease);
    sub_1BA4A2E80((uint64_t)v2, type metadata accessor for FormatVersioningModeRelease);
    sub_1BA4A2E80(v0, type metadata accessor for FormatVersioningModeSelection);
  }
  v4 = 0;
  return v4 & 1;
}

void sub_1BAA6E3D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2AE4F8)
  {
    v2 = sub_1BB86EB84();
    v3 = sub_1BA4A2870(&qword_1EF2AE500, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t)&protocol conformance descriptor for Version);
    v5 = type metadata accessor for FormatValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2AE4F8);
  }
}

uint64_t type metadata accessor for FormatVersioningModeSelection(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C21C8);
}

unint64_t sub_1BAA6E460()
{
  unint64_t result;

  result = qword_1EF2AE508;
  if (!qword_1EF2AE508)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8963D0, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE508);
  }
  return result;
}

unint64_t sub_1BAA6E4A4()
{
  unint64_t result;

  result = qword_1EF2AE528;
  if (!qword_1EF2AE528)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D67C, &type metadata for FormatVersionError);
    atomic_store(result, (unint64_t *)&qword_1EF2AE528);
  }
  return result;
}

unint64_t sub_1BAA6E4E8()
{
  unint64_t result;

  result = qword_1EF2AE530;
  if (!qword_1EF2AE530)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8963A8, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE530);
  }
  return result;
}

uint64_t sub_1BAA6E52C()
{
  return sub_1BA4A2870(&qword_1EF2AE558, type metadata accessor for FormatVersioningModeSelection, (uint64_t)&protocol conformance descriptor for FormatVersioningModeSelection);
}

unint64_t sub_1BAA6E55C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AE560;
  if (!qword_1EF2AE560)
  {
    sub_1BA4B07F0(255, &qword_1EF2AE568, type metadata accessor for FormatVersioningModeSelection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AE560);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningMode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_1BB86EB84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatVersioningMode(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_1BB86EB84();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BB86EB84();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersioningMode);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BB86EB84();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BB86EB84();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for FormatVersioningMode(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersioningMode);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BB86EB84();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningModeRelease(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86EB84();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FormatVersioningModeRelease(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for FormatVersioningModeRelease(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86EB84();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for FormatVersioningModeRelease(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86EB84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FormatVersioningModeRelease(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86EB84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for FormatVersioningModeRelease(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86EB84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVersioningModeRelease()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA6ECD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86EB84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVersioningModeRelease()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA6ED60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86EB84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAA6EDD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVersioningModeSelection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_1BB86EB84();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BB86EB84();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for FormatVersioningModeSelection(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 2)
  {
    if (result > 1)
      return result;
    swift_bridgeObjectRelease();
    a1 += *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
  }
  v3 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *initializeWithCopy for FormatVersioningModeSelection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_1BB86EB84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86EB84();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for FormatVersioningModeSelection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersioningModeSelection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_1BB86EB84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86EB84();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatVersioningModeSelection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = sub_1BB86EB84();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86EB84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for FormatVersioningModeSelection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersioningModeSelection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = sub_1BB86EB84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAA6F5B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FormatVersioningModeRelease(319);
  if (v1 <= 0x3F)
  {
    result = sub_1BB86EB84();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatVersioningModeSelection.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BAA6F67C + 4 * byte_1BB895F45[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BAA6F6B0 + 4 * byte_1BB895F40[v4]))();
}

uint64_t sub_1BAA6F6B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA6F6B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA6F6C0);
  return result;
}

uint64_t sub_1BAA6F6CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA6F6D4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BAA6F6D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA6F6E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVersioningModeSelection.CodingType()
{
  return &type metadata for FormatVersioningModeSelection.CodingType;
}

uint64_t storeEnumTagSinglePayload for FormatVersioningModeRelease.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA6F748 + 4 * byte_1BB895F4F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA6F77C + 4 * byte_1BB895F4A[v4]))();
}

uint64_t sub_1BAA6F77C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA6F784(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA6F78CLL);
  return result;
}

uint64_t sub_1BAA6F798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA6F7A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA6F7A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA6F7AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVersioningModeRelease.CodingKeys()
{
  return &type metadata for FormatVersioningModeRelease.CodingKeys;
}

unint64_t sub_1BAA6F7CC()
{
  unint64_t result;

  result = qword_1EF2AE570;
  if (!qword_1EF2AE570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896240, &type metadata for FormatVersioningModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE570);
  }
  return result;
}

unint64_t sub_1BAA6F814()
{
  unint64_t result;

  result = qword_1EF2AE578;
  if (!qword_1EF2AE578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896268, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE578);
  }
  return result;
}

unint64_t sub_1BAA6F85C()
{
  unint64_t result;

  result = qword_1EF2AE580;
  if (!qword_1EF2AE580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896290, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE580);
  }
  return result;
}

unint64_t sub_1BAA6F8A4()
{
  unint64_t result;

  result = qword_1EF2AE588;
  if (!qword_1EF2AE588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896380, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE588);
  }
  return result;
}

unint64_t sub_1BAA6F8EC()
{
  unint64_t result;

  result = qword_1EF2AE590;
  if (!qword_1EF2AE590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8961B0, &type metadata for FormatVersioningModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE590);
  }
  return result;
}

unint64_t sub_1BAA6F934()
{
  unint64_t result;

  result = qword_1EF2AE598;
  if (!qword_1EF2AE598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8961D8, &type metadata for FormatVersioningModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE598);
  }
  return result;
}

uint64_t sub_1BAA6F978()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1BAA6F9C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E65646F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BAA6FAB0()
{
  unint64_t result;

  result = qword_1EF2AE5A0;
  if (!qword_1EF2AE5A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896308, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE5A0);
  }
  return result;
}

void sub_1BAA6FAF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AE5A8)
  {
    type metadata accessor for FormatVersioningModeSelection(255);
    sub_1BA4A2870((unint64_t *)&unk_1EF2B19B0, type metadata accessor for FormatVersioningModeSelection, (uint64_t)&protocol conformance descriptor for FormatVersioningModeSelection);
    v0 = sub_1BB86D3CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AE5A8);
  }
}

unint64_t sub_1BAA6FB6C()
{
  unint64_t result;

  result = qword_1EF2AE5B0;
  if (!qword_1EF2AE5B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8962B8, &type metadata for FormatVersioningModeSelection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE5B0);
  }
  return result;
}

void sub_1BAA6FBB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB9E8)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB9E8);
  }
}

ValueMetadata *type metadata accessor for A12_V17()
{
  return &type metadata for A12_V17;
}

uint64_t sub_1BAA6FC14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AE708, (uint64_t (*)(void))sub_1BAA72330, (uint64_t)&type metadata for A12_V17.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA72330();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAA6FDC8()
{
  sub_1BAA72330();
  return sub_1BB874710();
}

uint64_t sub_1BAA6FDF0()
{
  sub_1BAA72330();
  return sub_1BB87471C();
}

double sub_1BAA6FE18@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAA71FDC(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAA6FE5C(_QWORD *a1)
{
  return sub_1BAA6FC14(a1);
}

uint64_t sub_1BAA6FE70()
{
  sub_1BAA71DCC();
  return sub_1BB86D96C();
}

uint64_t sub_1BAA6FED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V17;
  v20 = sub_1BA8EE77C();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V17;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7268210, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7268238, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V17.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2AE5E0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V17.Bound, (uint64_t)&unk_1BB896510);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BAA7050C@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _BYTE *v47;
  _QWORD v48[6];
  char v49[105];
  __int128 v50[9];
  __int128 v51[2];
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v47 = a1;
  v3 = sub_1BB86DA38();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  *(_QWORD *)&v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v6 = type metadata accessor for A12_V17.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(v7 + *(int *)(v8 + 40));
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(int *)(v8 + 32);
  v44 = v7;
  v12 = *(double *)(v7 + v11);
  sub_1BA4C010C(v10 + 16, (uint64_t)&v52);
  sub_1BA4C010C(v10 + 56, (uint64_t)v51);
  v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v52, v14 + 16);
  sub_1BA4CECCC(v51, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v50[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v50, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v9 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v51);
  sub_1BA4C010C(v15 + 56, (uint64_t)v50);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v51, v17 + 16);
  sub_1BA4CECCC(v50, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v49[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v49, (uint64_t *)&v52);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v52, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(_QWORD *)&v52 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v52;
  v46 = v2;
  v48[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  v24 = *(_QWORD *)(v23 + 16);
  swift_release();
  if (v24 == v22 - (v22 != 0))
  {
    v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_bridgeObjectRelease();
      v25 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v40 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v25 = sub_1BA85CDD8(v21, v21 + ((v40 + 32) & ~v40), v22 != 0, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v52 = v25;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v27 = v26;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v41 = v27;
  sub_1BB8730F0();
  swift_release();
  v28 = *MEMORY[0x1E0DB5D88];
  v29 = sub_1BB86D678();
  v30 = v45;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v45, v28, v29);
  v31 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v42 + 104))(v30, *MEMORY[0x1E0DB6200], v43);
  MEMORY[0x1E0C80A78](v31);
  sub_1BAA71E70(0, &qword_1EF2AE688, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v32 = sub_1BB86DB40();
  v45 = v52;
  v33 = v53;
  v34 = v54;
  *(_QWORD *)&v52 = v21;
  *(_QWORD *)&v51[0] = v55;
  MEMORY[0x1E0C80A78](v32);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v35 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v52 = v35;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v36 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v47;
  *v47 = 0;
  result = *(double *)&v45;
  *(_OWORD *)(v37 + 8) = v45;
  *((_QWORD *)v37 + 3) = v33;
  *((_QWORD *)v37 + 4) = v34;
  v39 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v37 + 5) = v36;
  *((_QWORD *)v37 + 6) = v39;
  return result;
}

uint64_t sub_1BAA70B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2AE6A0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BAA71E70(0, &qword_1EF2AE6A8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAA71E30(&qword_1EF2AE6B0, &qword_1EF2AE6A8, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAA70C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  uint64_t v12;
  unsigned int v13;
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *);
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  void (*v53)(uint64_t *, uint64_t);
  unsigned int v54;
  void (*v55)(uint64_t, _QWORD, uint64_t);
  unsigned int v56;
  void (*v57)(uint64_t *);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v58 = a3;
  v60 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AE6A0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v49 - v7);
  v62 = a1;
  v9 = sub_1BB86D438();
  v10 = swift_allocBox();
  v11 = *(void (**)(_QWORD))(*(_QWORD *)(v9 - 8) + 104);
  v56 = *MEMORY[0x1E0DB5A38];
  v55 = (void (*)(uint64_t, _QWORD, uint64_t))v11;
  v11(v12);
  *v8 = v10;
  v13 = *MEMORY[0x1E0DB6318];
  v57 = *(void (**)(uint64_t *))(v6 + 104);
  v54 = v13;
  v57(v8);
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA71E70(0, &qword_1EF2AE6B8, MEMORY[0x1E0DB5A10]);
  v16 = v15;
  v17 = sub_1BAA71E30(&qword_1EF2AE6C0, &qword_1EF2AE6B8, v14, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v18 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v19 = v17;
  v18(v8, v5);
  v62 = a1;
  sub_1BAA71EEC();
  v21 = v20;
  v22 = swift_allocBox();
  v24 = (char *)v23 + *(int *)(v21 + 48);
  *v23 = 7;
  v25 = *MEMORY[0x1E0DB61C8];
  v26 = sub_1BB86DA20();
  v27 = v25;
  v28 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v27, v26);
  *v8 = v22;
  v29 = v57;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v57)(v8, *MEMORY[0x1E0DB6338], v5);
  v61 = v60;
  sub_1BB86D498();
  result = ((uint64_t (*)(uint64_t *, uint64_t))v18)(v8, v5);
  v31 = *(_QWORD *)(v58 + 16);
  if (v31)
  {
    swift_bridgeObjectRetain();
    v32 = 0;
    v51 = *MEMORY[0x1E0DB6410];
    v50 = *MEMORY[0x1E0DB5C80];
    v49 = xmmword_1BB87CE70;
    v52 = v31;
    v53 = v18;
    do
    {
      v59 = *(_QWORD *)(v58 + 8 * v32 + 32);
      v60 = v32 + 1;
      v62 = a1;
      v33 = swift_allocBox();
      v55(v34, v56, v9);
      *v8 = v33;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v29)(v8, v54, v5);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v18(v8, v5);
      v62 = a1;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v29)(v8, v51, v5);
      sub_1BAA71F58();
      sub_1BA4CDF6C(0, &qword_1EF2AE6D0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v36 = v35;
      v37 = *(_QWORD *)(v35 - 8);
      v38 = v19;
      v39 = v28;
      v40 = v8;
      v41 = v5;
      v42 = v9;
      v43 = a1;
      v44 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v49;
      v46 = v45 + v44;
      a1 = v43;
      v9 = v42;
      v5 = v41;
      v8 = v40;
      v28 = v39;
      v19 = v38;
      v47 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v37 + 104))(v46, v50, v36);
      MEMORY[0x1E0C80A78](v47);
      sub_1BB86D498();
      v48 = v52;
      v29 = v57;
      swift_bridgeObjectRelease();
      v18 = v53;
      v53(v8, v5);
      swift_bridgeObjectRelease();
      v32 = v60;
    }
    while (v48 != v60);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAA710E4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  _QWORD v23[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2AE6A0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v23 - v10;
  v23[1] = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB63C0], v8);
  if (*(_QWORD *)(a2 + 16))
  {
    v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v14 = a2 + ((v13 + 32) & ~v13);
    v15 = v4[5];
    v23[0] = v8;
    v16 = (char *)v6 + v15;
    v17 = *MEMORY[0x1E0DB61C8];
    v18 = sub_1BB86DA20();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    v20 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v20;
    v21 = v20;
    sub_1BAB62528(v14, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA71E70(0, &qword_1EF2AE6B8, MEMORY[0x1E0DB5A10]);
    sub_1BAA71E30(&qword_1EF2AE6C0, &qword_1EF2AE6B8, v22, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, _QWORD))(v9 + 8))(v11, v23[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BAA71344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, _QWORD *);
  uint64_t (*v17)(uint64_t, _QWORD *);
  _BYTE v18[12];
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;

  sub_1BA4CDF6C(0, &qword_1EF2AE6A0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v18[-v7];
  v21 = a2;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v11 = v21 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v20 = *(_QWORD *)(v10 + 72);
    v19 = *MEMORY[0x1E0DB63F8];
    swift_bridgeObjectRetain();
    do
    {
      v23 = a1;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 6;
      *v8 = v12;
      v13 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, v19, v5);
      v22 = v18;
      MEMORY[0x1E0C80A78](v13);
      v14 = v5;
      v15 = v6;
      v16 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BAA71E70(0, &qword_1EF2AE6B8, MEMORY[0x1E0DB5A10]);
      v17 = v16;
      v6 = v15;
      v5 = v14;
      sub_1BAA71E30(&qword_1EF2AE6C0, &qword_1EF2AE6B8, v17, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4BC();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v14);
      v11 += v20;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAA7154C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t KeyPath;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void *v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, _QWORD *);
  char *v39;
  unint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a3;
  v46 = a2;
  v47 = sub_1BB86DA38();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v51 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2AE6A0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v42 - v17;
  v54 = a1;
  KeyPath = swift_getKeyPath();
  v20 = *MEMORY[0x1E0DB63C0];
  v52 = v16;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v49 = v18;
  v21(v18, v20, v15);
  v22 = *(_QWORD *)(v53 + 16);
  if (v22)
  {
    v42[1] = KeyPath;
    v43 = v5;
    v44 = v15;
    v23 = v53 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v24 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v23, (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
      v25 = *(_QWORD *)&v10[*(int *)(v7 + 20) + 32];
      sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
      if ((v25 & 4) == 0)
        break;
      v23 += v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22 = 2;
LABEL_7:
    v5 = v43;
    v15 = v44;
  }
  v26 = (char *)v13 + v11[5];
  v27 = *MEMORY[0x1E0DB61C8];
  v28 = sub_1BB86DA20();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  v30 = (void **)MEMORY[0x1E0DC4918];
  *v13 = v22;
  *(uint64_t *)((char *)v13 + v11[6]) = 5;
  v31 = *v30;
  *(uint64_t *)((char *)v13 + v11[7]) = (uint64_t)v31;
  v32 = qword_1ED3BC390;
  v33 = v31;
  if (v32 != -1)
    swift_once();
  swift_retain();
  v34 = v48;
  sub_1BB86D2B8();
  v35 = swift_release();
  v36 = MEMORY[0x1E0C80A78](v35);
  v37 = v47;
  v42[-4] = v46;
  v42[-3] = v13;
  v41 = (unint64_t)v34;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v45 + 104))(v50, *MEMORY[0x1E0DB6208], v37, v36);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v5);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Options);
  v38 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA71E70(0, &qword_1EF2AE6B8, MEMORY[0x1E0DB5A10]);
  sub_1BAA71E30(&qword_1EF2AE6C0, &qword_1EF2AE6B8, v38, MEMORY[0x1E0DB5A18]);
  v41 = sub_1BA595D14();
  v39 = v49;
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v39, v15);
}

uint64_t sub_1BAA719BC@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V17.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAA71A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAA6FED8(a1, a2, a3);
}

uint64_t sub_1BAA71AB0()
{
  return sub_1BB690A40();
}

unint64_t sub_1BAA71AC0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAA71AEC();
  result = sub_1BAA71B30();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAA71AEC()
{
  unint64_t result;

  result = qword_1EF2AE5D0;
  if (!qword_1EF2AE5D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89645C, &type metadata for A12_V17);
    atomic_store(result, (unint64_t *)&qword_1EF2AE5D0);
  }
  return result;
}

unint64_t sub_1BAA71B30()
{
  unint64_t result;

  result = qword_1EF2AE5D8;
  if (!qword_1EF2AE5D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896484, &type metadata for A12_V17);
    atomic_store(result, (unint64_t *)&qword_1EF2AE5D8);
  }
  return result;
}

uint64_t type metadata accessor for A12_V17.Bound()
{
  uint64_t result;

  result = qword_1EF2AE640;
  if (!qword_1EF2AE640)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAA71BB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA71BBC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAA71C38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAA71C44(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAA71CB8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAA71D44(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AE680, (uint64_t (*)(uint64_t))type metadata accessor for A12_V17.Bound, (uint64_t)&unk_1BB8964E8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAA71D80(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA70B2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BAA71D88()
{
  unint64_t result;

  result = qword_1EF2AE690;
  if (!qword_1EF2AE690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896640, &type metadata for A12_V17.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2AE690);
  }
  return result;
}

unint64_t sub_1BAA71DCC()
{
  unint64_t result;

  result = qword_1EF2AE698;
  if (!qword_1EF2AE698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896610, &type metadata for A12_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AE698);
  }
  return result;
}

uint64_t sub_1BAA71E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAA719BC(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAA71E18()
{
  return swift_deallocObject();
}

uint64_t sub_1BAA71E28(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA70C88(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAA71E30(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAA71E70(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAA71E70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V17.Layout;
    v8[1] = &type metadata for A12_V17.Layout.Attributes;
    v8[2] = sub_1BAA71D88();
    v8[3] = sub_1BAA71DCC();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BAA71EEC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3CFF68)
  {
    sub_1BB86DA20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3CFF68);
  }
}

uint64_t sub_1BAA71F50(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA710E4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAA71F58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AE6C8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AE6D0, (uint64_t (*)(void))sub_1BAA71D88, (uint64_t)&type metadata for A12_V17.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AE6C8);
  }
}

void sub_1BAA71FCC(uint64_t a1)
{
  uint64_t v1;

  sub_1BAA71344(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAA71FD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA7154C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAA71FDC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AE6F8, (uint64_t (*)(void))sub_1BAA72330, (uint64_t)&type metadata for A12_V17.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA72330();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

ValueMetadata *type metadata accessor for A12_V17.Layout.Attributes()
{
  return &type metadata for A12_V17.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V17.Layout()
{
  return &type metadata for A12_V17.Layout;
}

unint64_t sub_1BAA72214()
{
  unint64_t result;

  result = qword_1EF2AE6D8;
  if (!qword_1EF2AE6D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8965B0, &type metadata for A12_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AE6D8);
  }
  return result;
}

unint64_t sub_1BAA7225C()
{
  unint64_t result;

  result = qword_1EF2AE6E0;
  if (!qword_1EF2AE6E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896588, &type metadata for A12_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AE6E0);
  }
  return result;
}

unint64_t sub_1BAA722A4()
{
  unint64_t result;

  result = qword_1EF2AE6E8;
  if (!qword_1EF2AE6E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896560, &type metadata for A12_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AE6E8);
  }
  return result;
}

unint64_t sub_1BAA722EC()
{
  unint64_t result;

  result = qword_1EF2AE6F0;
  if (!qword_1EF2AE6F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8965D8, &type metadata for A12_V17.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AE6F0);
  }
  return result;
}

unint64_t sub_1BAA72330()
{
  unint64_t result;

  result = qword_1EF2AE700;
  if (!qword_1EF2AE700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896734, &type metadata for A12_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE700);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V17.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA723C0 + 4 * byte_1BB89644D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA723F4 + 4 * byte_1BB896448[v4]))();
}

uint64_t sub_1BAA723F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA723FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA72404);
  return result;
}

uint64_t sub_1BAA72410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA72418);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA7241C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA72424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V17.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V17.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAA72444()
{
  unint64_t result;

  result = qword_1EF2AE710;
  if (!qword_1EF2AE710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89670C, &type metadata for A12_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE710);
  }
  return result;
}

unint64_t sub_1BAA7248C()
{
  unint64_t result;

  result = qword_1EF2AE718;
  if (!qword_1EF2AE718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89667C, &type metadata for A12_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE718);
  }
  return result;
}

unint64_t sub_1BAA724D4()
{
  unint64_t result;

  result = qword_1EF2AE720;
  if (!qword_1EF2AE720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8966A4, &type metadata for A12_V17.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE720);
  }
  return result;
}

uint64_t sub_1BAA72518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  v3 = 0;
  while (1)
  {
    v4 = *(_QWORD *)(a1 + 8 * v3 + 32);
    if (v4 >> 60)
      break;
    v5 = *(_QWORD *)(v4 + 64);
    if (*(unsigned __int16 *)(v4 + 60) >> 9 <= 0x7EuLL)
    {
      v6 = *(unsigned int *)(v4 + 56) | ((unint64_t)*(unsigned __int16 *)(v4 + 60) << 32);
      if ((v6 >> 45) - 1 >= 5)
      {
        if (v6 >> 45 != 6)
          break;
        v8 = v6 == 0xC00000000000 && *(_QWORD *)(v4 + 16) == 1;
        if (!v8 || (*(_QWORD *)(v4 + 32) | *(_QWORD *)(v4 + 24) | *(_QWORD *)(v4 + 40) | *(_QWORD *)(v4 + 48)) != 0)
          break;
      }
    }
    swift_retain();
    v7 = sub_1BAA72518(v5);
    swift_release();
    if ((v7 & 1) != 0)
      break;
    if (v1 == ++v3)
    {
      v10 = 0;
      goto LABEL_19;
    }
  }
  v10 = 1;
LABEL_19:
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1BAA72614(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BAA72714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v4 - 224) = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v4 - 216) = v5;
  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v4 - 232) = *(_QWORD *)(v3 + 48);
  v8 = *(unsigned __int16 *)(v3 + 60);
  v9 = *(unsigned int *)(v3 + 56);
  *(_OWORD *)(v4 - 208) = *(_OWORD *)(v3 + 64);
  *(_BYTE *)(v4 - 112) = 0;
  sub_1BAA74B08();
  *(_QWORD *)(v4 - 192) = 0;
  *(_QWORD *)(v4 - 184) = 0;
  sub_1BB8741AC();
  if (!v2)
  {
    v10 = *(_QWORD *)(v4 - 224);
    *(_QWORD *)(v4 - 192) = *(_QWORD *)(v4 - 216);
    *(_QWORD *)(v4 - 184) = v10;
    *(_QWORD *)(v4 - 176) = v6;
    *(_QWORD *)(v4 - 168) = v7;
    *(_QWORD *)(v4 - 160) = *(_QWORD *)(v4 - 232);
    *(_WORD *)(v4 - 148) = (v9 | (unint64_t)(v8 << 32)) >> 32;
    *(_DWORD *)(v4 - 152) = v9;
    *(_OWORD *)(v4 - 144) = *(_OWORD *)(v4 - 208);
    *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
    sub_1BAA74CE4();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v1, v0);
}

uint64_t sub_1BAA72D24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA72D50 + 4 * byte_1BB8967AA[a1]))(1752397168, 0xE400000000000000);
}

uint64_t sub_1BAA72D50()
{
  return 0x4F656469766F7270;
}

uint64_t sub_1BAA72D74()
{
  return 0x42656469766F7270;
}

uint64_t sub_1BAA72D94()
{
  return 0x636E657265666572;
}

unint64_t sub_1BAA72E04()
{
  return 0xD000000000000014;
}

unint64_t sub_1BAA72E2C()
{
  return 0xD000000000000015;
}

uint64_t sub_1BAA72E64()
{
  return 0x696F706B61657262;
}

uint64_t sub_1BAA72E80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BAA72D24(*a1);
  v5 = v4;
  if (v3 == sub_1BAA72D24(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BAA72F08()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAA72D24(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAA72F68()
{
  unsigned __int8 *v0;

  sub_1BAA72D24(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA72FA8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAA72D24(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAA73004@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAA73E8C();
  *a1 = result;
  return result;
}

uint64_t sub_1BAA73030@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAA72D24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAA73058()
{
  sub_1BAA74E3C();
  return sub_1BB872D60();
}

uint64_t sub_1BAA730B4()
{
  sub_1BAA74E3C();
  return sub_1BB872D0C();
}

_QWORD *sub_1BAA73100@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BAA73ED4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1BAA73128(_QWORD *a1)
{
  uint64_t *v1;

  sub_1BAA72614(a1, *v1);
}

void sub_1BAA73140(uint64_t *a1)
{
  sub_1BAA736F8(*a1);
}

void sub_1BAA7314C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BAA731C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  _QWORD *v7;

  if (*(unsigned __int16 *)(v0 + 60) >> 9 > 0x7EuLL)
    return 6845296;
  v4 = *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 - 112) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 96) = v6;
  *(_QWORD *)(v1 - 80) = v5;
  *(_DWORD *)(v1 - 72) = v4;
  *(_WORD *)(v1 - 68) = WORD2(v4);
  *(_QWORD *)(v1 - 128) = 0x202D20687370;
  *(_QWORD *)(v1 - 120) = 0xE600000000000000;
  sub_1BB82A694();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 128);
}

void sub_1BAA73638()
{
  uint64_t *v0;

  sub_1BAA7314C(*v0);
}

uint64_t sub_1BAA73640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDerivedDataOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA73684(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BAA736BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatDerivedDataOption();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAA736F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BAA7378C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  char v26;

  if (v0 >> 60)
    goto LABEL_11;
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int16 *)(v1 + 60) << 32);
  v10 = *(_QWORD **)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 24);
  v14 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 48);
  v16 = *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32);
  v17 = *(_QWORD **)(v0 + 64);
  *(_QWORD *)(v2 - 200) = *(_QWORD *)(v0 + 72);
  if (((v8 >> 41) & 0x7F) == 0x7F)
  {
    v18 = v9;
    if (((v16 >> 41) & 0x7F) == 0x7F)
      goto LABEL_8;
    goto LABEL_6;
  }
  if (((v16 >> 41) & 0x7F) == 0x7F)
  {
LABEL_6:
    *(_QWORD *)(v2 - 216) = v4;
    *(_QWORD *)(v2 - 208) = v3;
    v19 = v12;
    v20 = v14;
    v21 = v13;
    v22 = v15;
    sub_1BA8EBBDC(v4, v3, v6, v5, v7, v8);
    sub_1BA8EBBDC(v11, v19, v20, v21, v22, v16);
    sub_1BA8EBC64(*(_QWORD *)(v2 - 216), *(_QWORD *)(v2 - 208), v6, v5, v7, v8);
    sub_1BA8EBC64(v11, v19, v20, v21, v22, v16);
LABEL_11:
    v26 = 0;
    return v26 & 1;
  }
  v18 = v9;
  *(_QWORD *)(v2 - 192) = v4;
  *(_QWORD *)(v2 - 184) = v3;
  *(_QWORD *)(v2 - 176) = v6;
  *(_QWORD *)(v2 - 168) = v5;
  *(_QWORD *)(v2 - 160) = v7;
  *(_DWORD *)(v2 - 152) = v8;
  *(_WORD *)(v2 - 148) = WORD2(v8);
  *(_QWORD *)(v2 - 144) = v11;
  *(_QWORD *)(v2 - 136) = v12;
  *(_QWORD *)(v2 - 128) = v14;
  *(_QWORD *)(v2 - 120) = v13;
  *(_QWORD *)(v2 - 112) = v15;
  *(_DWORD *)(v2 - 104) = v16;
  *(_WORD *)(v2 - 100) = WORD2(v16);
  v23 = v17;
  v24 = v10;
  sub_1BB82AAB8(v2 - 192);
  v17 = v23;
  v10 = v24;
  if ((v25 & 1) == 0)
    goto LABEL_11;
LABEL_8:
  if ((sub_1BA8823B4(v10, v17) & 1) == 0 || (sub_1BA882078(v18, *(_QWORD *)(v2 - 200)) & 1) == 0)
    goto LABEL_11;
  v26 = 1;
  return v26 & 1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataInstruction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x74 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 116);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x73)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataInstruction(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x73)
  {
    *(_QWORD *)result = a2 - 116;
    if (a3 >= 0x74)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x74)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BAA73E34(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 0xB)
    return v1;
  else
    return (*a1 >> 3) + 12;
}

unint64_t *sub_1BAA73E50(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 0xC)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 12);
    v3 = 0xC000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataInstruction()
{
  return &type metadata for FormatDerivedDataInstruction;
}

uint64_t sub_1BAA73E8C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

_QWORD *sub_1BAA73ED4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;

  v3 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t)a1;
  v5 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BAA74728();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  __swift_destroy_boxed_opaque_existential_1(v8);
  return v5;
}

void sub_1BAA74054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  int v7;
  __int16 v8;
  uint64_t v9;
  __int128 v10;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAA74A70();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
    v5 = *(_OWORD *)(v4 - 192);
    *(_OWORD *)(v4 - 224) = *(_OWORD *)(v4 - 176);
    *(_OWORD *)(v4 - 208) = v5;
    v6 = *(_QWORD *)(v4 - 160);
    v7 = *(_DWORD *)(v4 - 152);
    v8 = *(_WORD *)(v4 - 148);
    *(_OWORD *)(v4 - 240) = *(_OWORD *)(v4 - 144);
    v9 = swift_allocObject();
    v10 = *(_OWORD *)(v4 - 224);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(v4 - 208);
    *(_OWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 48) = v6;
    *(_WORD *)(v9 + 60) = v8;
    *(_DWORD *)(v9 + 56) = v7;
    *(_OWORD *)(v9 + 64) = *(_OWORD *)(v4 - 240);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 72));
    JUMPOUT(0x1BAA74010);
  }
  JUMPOUT(0x1BAA73FF8);
}

unint64_t sub_1BAA74728()
{
  unint64_t result;

  result = qword_1EF2AE728;
  if (!qword_1EF2AE728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89698C, &type metadata for FormatDerivedDataInstruction.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE728);
  }
  return result;
}

uint64_t sub_1BAA7476C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAA74790()
{
  unint64_t result;

  result = qword_1EF2AE730;
  if (!qword_1EF2AE730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB929508, &type metadata for FormatDerivedDataStateMachineReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE730);
  }
  return result;
}

uint64_t sub_1BAA747D4()
{
  return objectdestroy_3Tm_1();
}

unint64_t sub_1BAA747DC()
{
  unint64_t result;

  result = qword_1EF2AE738;
  if (!qword_1EF2AE738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87CAC8, &type metadata for FormatDerivedDataBundleImageReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE738);
  }
  return result;
}

uint64_t sub_1BAA74820()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA7484C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >= 0xFuLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAA74878()
{
  unint64_t result;

  result = qword_1EF2AE740;
  if (!qword_1EF2AE740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AFD0, &type metadata for FormatDerivedDataBlockReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE740);
  }
  return result;
}

uint64_t sub_1BAA748BC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAA748E0()
{
  unint64_t result;

  result = qword_1EF2AE748;
  if (!qword_1EF2AE748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94A3C0, &type metadata for FormatDerivedDataFileReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE748);
  }
  return result;
}

uint64_t sub_1BAA74924()
{
  uint64_t v0;

  sub_1BA8D5088(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

unint64_t sub_1BAA7494C()
{
  unint64_t result;

  result = qword_1EF2AE750;
  if (!qword_1EF2AE750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFC64, &type metadata for FormatDerivedDataOptionReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE750);
  }
  return result;
}

uint64_t sub_1BAA74990()
{
  return objectdestroy_3Tm_1();
}

uint64_t objectdestroy_3Tm_1()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAA749D0()
{
  unint64_t result;

  result = qword_1EF2AE758;
  if (!qword_1EF2AE758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94F898, &type metadata for FormatDerivedDataBlock);
    atomic_store(result, (unint64_t *)&qword_1EF2AE758);
  }
  return result;
}

uint64_t sub_1BAA74A14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(v0 + 76) >> 9 <= 0x7EuLL)
    sub_1BA8EBC78(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int16 *)(v0 + 76) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAA74A70()
{
  unint64_t result;

  result = qword_1EF2AE768;
  if (!qword_1EF2AE768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913064, &type metadata for FormatDerivedData);
    atomic_store(result, (unint64_t *)&qword_1EF2AE768);
  }
  return result;
}

uint64_t sub_1BAA74AB4()
{
  uint64_t v0;

  if (*(unsigned __int16 *)(v0 + 60) >> 9 <= 0x7EuLL)
    sub_1BA8EBC78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAA74B08()
{
  unint64_t result;

  result = qword_1EF2AE770;
  if (!qword_1EF2AE770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896964, &type metadata for FormatDerivedDataInstruction.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE770);
  }
  return result;
}

unint64_t sub_1BAA74B4C()
{
  unint64_t result;

  result = qword_1EF2AE778;
  if (!qword_1EF2AE778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9294E0, &type metadata for FormatDerivedDataStateMachineReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE778);
  }
  return result;
}

unint64_t sub_1BAA74B90()
{
  unint64_t result;

  result = qword_1EF2AE780;
  if (!qword_1EF2AE780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87CAA0, &type metadata for FormatDerivedDataBundleImageReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE780);
  }
  return result;
}

unint64_t sub_1BAA74BD4()
{
  unint64_t result;

  result = qword_1EF2AE788;
  if (!qword_1EF2AE788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AFA8, &type metadata for FormatDerivedDataBlockReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE788);
  }
  return result;
}

unint64_t sub_1BAA74C18()
{
  unint64_t result;

  result = qword_1EF2AE790;
  if (!qword_1EF2AE790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94A398, &type metadata for FormatDerivedDataFileReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE790);
  }
  return result;
}

unint64_t sub_1BAA74C5C()
{
  unint64_t result;

  result = qword_1EF2AE798;
  if (!qword_1EF2AE798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFC3C, &type metadata for FormatDerivedDataOptionReference);
    atomic_store(result, (unint64_t *)&qword_1EF2AE798);
  }
  return result;
}

unint64_t sub_1BAA74CA0()
{
  unint64_t result;

  result = qword_1EF2AE7A0;
  if (!qword_1EF2AE7A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94F870, &type metadata for FormatDerivedDataBlock);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7A0);
  }
  return result;
}

unint64_t sub_1BAA74CE4()
{
  unint64_t result;

  result = qword_1EF2AE7B0;
  if (!qword_1EF2AE7B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91303C, &type metadata for FormatDerivedData);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataInstruction.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BAA74D74 + 4 * byte_1BB8967F1[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BAA74DA8 + 4 * byte_1BB8967EC[v4]))();
}

uint64_t sub_1BAA74DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA74DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA74DB8);
  return result;
}

uint64_t sub_1BAA74DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA74DCCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BAA74DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA74DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataInstruction.CodingType()
{
  return &type metadata for FormatDerivedDataInstruction.CodingType;
}

unint64_t sub_1BAA74DF8()
{
  unint64_t result;

  result = qword_1EF2AE7B8;
  if (!qword_1EF2AE7B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89693C, &type metadata for FormatDerivedDataInstruction.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7B8);
  }
  return result;
}

unint64_t sub_1BAA74E3C()
{
  unint64_t result;

  result = qword_1EF2AE7C0;
  if (!qword_1EF2AE7C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8968C4, &type metadata for FormatDerivedDataInstruction.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerMessage()
{
  return &type metadata for DebugFormatSocketServerMessage;
}

uint64_t sub_1BAA74E90(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = a3;
  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  sub_1BAA75744();
  v13 = 0;
  v14 = 0;
  sub_1BB8741AC();
  if (!v3)
  {
    v13 = a2;
    v14 = v15;
    v12 = xmmword_1BB87FC90;
    sub_1BAA75788();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAA74FF0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA7503C()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAA75050()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA75098@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BAA750E8(_QWORD *a1@<X8>)
{
  *a1 = 0x64616F6C6572;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BAA75100()
{
  sub_1BAA75838();
  return sub_1BB872D60();
}

uint64_t sub_1BAA7515C()
{
  sub_1BAA75838();
  return sub_1BB872D0C();
}

_QWORD *sub_1BAA751A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1BAA75520(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1BAA751D0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BAA74E90(a1, *v1, v1[1]);
}

uint64_t sub_1BAA751E8()
{
  return 0x6E656B6F74;
}

uint64_t sub_1BAA751FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAA75288()
{
  sub_1BAA7587C();
  return sub_1BB874710();
}

uint64_t sub_1BAA752B0()
{
  sub_1BAA7587C();
  return sub_1BB87471C();
}

uint64_t sub_1BAA752D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AE7F8, (uint64_t (*)(void))sub_1BAA7587C, (uint64_t)&type metadata for DebugFormatSocketServerReloadMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA7587C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1BB874098();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1BAA7541C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1EF2AE808, (uint64_t (*)(void))sub_1BAA7587C, (uint64_t)&type metadata for DebugFormatSocketServerReloadMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA7587C();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_QWORD *sub_1BAA75520(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;

  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v9 = v8;
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BAA756BC();
    v12 = 0;
    v13 = 0;
    sub_1BB8740D4();
    v11 = xmmword_1BB87FC90;
    sub_1BAA75700();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1BAA756BC()
{
  unint64_t result;

  result = qword_1EF2AE7C8;
  if (!qword_1EF2AE7C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896B90, &type metadata for DebugFormatSocketServerMessage.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7C8);
  }
  return result;
}

unint64_t sub_1BAA75700()
{
  unint64_t result;

  result = qword_1EF2AE7D0;
  if (!qword_1EF2AE7D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896B68, &type metadata for DebugFormatSocketServerReloadMessage);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7D0);
  }
  return result;
}

unint64_t sub_1BAA75744()
{
  unint64_t result;

  result = qword_1EF2AE7D8;
  if (!qword_1EF2AE7D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896B40, &type metadata for DebugFormatSocketServerMessage.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7D8);
  }
  return result;
}

unint64_t sub_1BAA75788()
{
  unint64_t result;

  result = qword_1EF2AE7E0;
  if (!qword_1EF2AE7E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896B18, &type metadata for DebugFormatSocketServerReloadMessage);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerMessage.CodingType()
{
  return &type metadata for DebugFormatSocketServerMessage.CodingType;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerReloadMessage()
{
  return &type metadata for DebugFormatSocketServerReloadMessage;
}

unint64_t sub_1BAA757F4()
{
  unint64_t result;

  result = qword_1EF2AE7E8;
  if (!qword_1EF2AE7E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896AF0, &type metadata for DebugFormatSocketServerMessage.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7E8);
  }
  return result;
}

unint64_t sub_1BAA75838()
{
  unint64_t result;

  result = qword_1EF2AE7F0;
  if (!qword_1EF2AE7F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896A78, &type metadata for DebugFormatSocketServerMessage.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AE7F0);
  }
  return result;
}

unint64_t sub_1BAA7587C()
{
  unint64_t result;

  result = qword_1EF2AE800;
  if (!qword_1EF2AE800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896C7C, &type metadata for DebugFormatSocketServerReloadMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE800);
  }
  return result;
}

uint64_t _s8NewsFeed30DebugFormatSocketServerMessageO10CodingTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAA75900 + 4 * byte_1BB8969C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAA75920 + 4 * byte_1BB8969C5[v4]))();
}

_BYTE *sub_1BAA75900(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAA75920(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAA75928(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAA75930(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAA75938(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAA75940(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatSocketServerReloadMessage.CodingKeys()
{
  return &type metadata for DebugFormatSocketServerReloadMessage.CodingKeys;
}

unint64_t sub_1BAA75960()
{
  unint64_t result;

  result = qword_1EF2AE810;
  if (!qword_1EF2AE810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896C54, &type metadata for DebugFormatSocketServerReloadMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE810);
  }
  return result;
}

unint64_t sub_1BAA759A8()
{
  unint64_t result;

  result = qword_1EF2AE818;
  if (!qword_1EF2AE818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896BC4, &type metadata for DebugFormatSocketServerReloadMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE818);
  }
  return result;
}

unint64_t sub_1BAA759F0()
{
  unint64_t result;

  result = qword_1EF2AE820;
  if (!qword_1EF2AE820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896BEC, &type metadata for DebugFormatSocketServerReloadMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE820);
  }
  return result;
}

uint64_t destroy for FeedGroupJournalEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for FeedGroupJournalEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FeedGroupJournalEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FeedGroupJournalEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupJournalEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupJournalEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupJournalEntity()
{
  return &type metadata for FeedGroupJournalEntity;
}

uint64_t sub_1BAA75E78()
{
  if (qword_1EF2A6C98 != -1)
    swift_once();
  qword_1EF3D0520 = qword_1EF2AC7F0;
  *(_QWORD *)algn_1EF3D0528 = *(_QWORD *)algn_1EF2AC7F8;
  return swift_bridgeObjectRetain();
}

void sub_1BAA75EC8(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  __int128 v102;
  unsigned __int8 v103;
  _QWORD *v104;
  unint64_t v105;
  uint64_t v106;
  char v107;
  _QWORD *v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t AssociatedConformanceWitness;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD v170[4];
  __int128 v171;
  unsigned __int8 v172;
  uint64_t v173;

  v131 = a5;
  v148 = a4;
  v150 = a3;
  v146 = a2;
  v134 = a6;
  v121 = sub_1BB86DFF0();
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v145 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_1BB86BD10();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v128 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v123 = AssociatedTypeWitness;
  v144 = swift_getAssociatedTypeWitness();
  v133 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v127 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v126 = (char *)&v120 - v12;
  MEMORY[0x1E0C80A78](v13);
  v124 = (char *)&v120 - v14;
  MEMORY[0x1E0C80A78](v15);
  v125 = (char *)&v120 - v16;
  MEMORY[0x1E0C80A78](v17);
  v132 = (char *)&v120 - v18;
  sub_1BA4A3FB4(0, &qword_1ED3A3C38, sub_1BAA7A868);
  MEMORY[0x1E0C80A78](v19);
  v147 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v142 = (char *)&v120 - v22;
  sub_1BA4A3FB4(0, &qword_1ED3A3C88, (void (*)(uint64_t))sub_1BAA7A950);
  MEMORY[0x1E0C80A78](v23);
  v153 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v152 = (char *)&v120 - v26;
  sub_1BA4A3FB4(0, &qword_1ED3A3C68, sub_1BAA7A9F0);
  MEMORY[0x1E0C80A78](v27);
  v141 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v140 = (char *)&v120 - v30;
  sub_1BA4A3FB4(0, &qword_1ED3A3CA8, (void (*)(uint64_t))sub_1BAA7ABC4);
  MEMORY[0x1E0C80A78](v31);
  v154 = (char *)&v120 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v151 = (char *)&v120 - v34;
  sub_1BA50CAF0(0, &qword_1ED3A3C98, &qword_1ED3A3C90, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0]);
  MEMORY[0x1E0C80A78](v35);
  v158 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v149 = (char *)&v120 - v38;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39A6C0, (void (*)(uint64_t))sub_1BA841074);
  MEMORY[0x1E0C80A78](v39);
  v160 = (char *)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v157 = (char *)&v120 - v42;
  v43 = MEMORY[0x1E0DEA968];
  v44 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v120 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v120 - v49;
  v143 = *a1;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v43, v44, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v52 = v51;
  v163 = v50;
  v164 = v51;
  v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
  v53(v50, 1, 1, v51);
  v53(v47, 1, 1, v52);
  sub_1BA50CAA8(0, &qword_1ED39A708, v43, v44, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v43, v44, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v161 = sub_1BB86F058();
  sub_1BA841074();
  v55 = v54;
  v139 = v54;
  v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
  v56(v157, 1, 1, v54);
  v138 = v56;
  v56(v160, 1, 1, v55);
  sub_1BAA7AC64();
  v137 = v57;
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA84118C();
  v136 = v58;
  swift_allocObject();
  v156 = sub_1BB86F058();
  v60 = v163;
  v59 = v164;
  v53(v163, 1, 1, v164);
  v53(v47, 1, 1, v59);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v162 = sub_1BB86F058();
  v135 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v53;
  v53(v60, 1, 1, v59);
  v155 = (uint64_t)v47;
  v53(v47, 1, 1, v59);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v159 = sub_1BB86F058();
  v61 = MEMORY[0x1E0DEB070];
  v62 = MEMORY[0x1E0DB2EE0];
  sub_1BA50CAA8(0, &qword_1ED3A3C90, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v64 = v63;
  v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
  v65(v149, 1, 1, v63);
  v65(v158, 1, 1, v64);
  sub_1BA50CAA8(0, &qword_1ED3A3CD8, v61, v62, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED3A3C00, v61, v62, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v158 = (char *)sub_1BB86F058();
  sub_1BAA7ABC4();
  v67 = v66;
  v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56);
  v68(v151, 1, 1, v66);
  v68(v154, 1, 1, v67);
  sub_1BAA7AD04();
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BAA7ADA4();
  swift_allocObject();
  v151 = (char *)sub_1BB86F058();
  v69 = v164;
  v70 = v135;
  v135((uint64_t)v163, 1, 1, v164);
  v70(v155, 1, 1, v69);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v149 = (char *)sub_1BB86F058();
  v71 = v139;
  v72 = v138;
  v138(v157, 1, 1, v139);
  v72(v160, 1, 1, v71);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v154 = (char *)sub_1BB86F058();
  sub_1BAA7A9F0(0);
  v74 = v73;
  v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56);
  v75(v140, 1, 1, v73);
  v75(v141, 1, 1, v74);
  sub_1BAA7AE58(0, &qword_1ED3A3CC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BAA7AE44(0);
  swift_allocObject();
  v160 = (char *)sub_1BB86F058();
  sub_1BAA7A950();
  v77 = v76;
  v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56);
  v78(v152, 1, 1, v76);
  v78(v153, 1, 1, v77);
  sub_1BAA7AED4();
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BAA7AF74();
  swift_allocObject();
  v157 = (char *)sub_1BB86F058();
  v79 = v164;
  v70((uint64_t)v163, 1, 1, v164);
  v70(v155, 1, 1, v79);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v80 = sub_1BB86F058();
  sub_1BAA7A868(0);
  v82 = v81;
  v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56);
  v84 = v142;
  v83(v142, 1, 1, v81);
  v85 = (uint64_t)v147;
  v83(v147, 1, 1, v82);
  sub_1BAA7B028(0, &qword_1ED3A3CB8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BAA7B014(0);
  swift_allocObject();
  v152 = (char *)sub_1BB86F058();
  v83(v84, 1, 1, v82);
  v83((char *)v85, 1, 1, v82);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v155 = sub_1BB86F058();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v153 = (char *)v80;
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v86 = *(_QWORD *)(v150 + 8);
  v167 = *(_QWORD *)v150;
  v168 = v86;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v87 = swift_release();
  v167 = (*(uint64_t (**)(uint64_t))(v150 + 232))(v87);
  v168 = v88;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v89 = v146[1];
  v167 = *v146;
  v168 = v89;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v164 = sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v90 = *(_QWORD *)(v148 + 24);
  v167 = *(_QWORD *)(v148 + 16);
  v168 = v90;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v167 = *(_QWORD *)(v150 + 224);
  LOBYTE(v168) = 0;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  FeedJournalGroupResult.kind.getter();
  v91 = 8 * SLOBYTE(v170[0]);
  v92 = *(_QWORD *)&aNext_3[v91];
  v93 = *(_QWORD *)((char *)&unk_1BB897040 + v91);
  v167 = v92;
  v168 = v93;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v147 = (char *)(v150 + 128);
  FeedJournalGroupResultOutput.reason.getter();
  v167 = v94;
  v168 = v95;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v142 = (char *)sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v96 = *(char **)(v150 + 72);
  v97 = *((_QWORD *)v96 + 2);
  v98 = MEMORY[0x1E0DEE9D8];
  if (v97)
  {
    v173 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A860(0, v97, 0);
    v141 = v96;
    v99 = (uint64_t)(v96 + 32);
    do
    {
      sub_1BA5F1E28(v99, (uint64_t)&v167);
      sub_1BA5F1E28((uint64_t)&v167, (uint64_t)v170);
      __swift_project_boxed_opaque_existential_1(v170, v170[3]);
      v100 = sub_1BB87420C();
      v163 = v101;
      v164 = v100;
      v102 = v171;
      v103 = v172;
      if (v172)
      {
        if (v172 == 1)
        {
          v165 = 0x202C70696B53;
          v166 = 0xE600000000000000;
          swift_bridgeObjectRetain();
          sub_1BB872AFC(v104);
          v106 = v165;
          v105 = v166;
          v107 = 2;
        }
        else if (v171 == 0)
        {
          v107 = 0;
          v105 = 0xE500000000000000;
          v106 = 0x776F6C6C41;
        }
        else
        {
          v107 = 3;
          v105 = 0xEF7473614C206C69;
          v106 = 0x746E552070696B53;
        }
      }
      else
      {
        v165 = 0x202C65766F6D6552;
        v166 = 0xE800000000000000;
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v108);
        v106 = v165;
        v105 = v166;
        v107 = 1;
      }
      sub_1BA5F1DB4((uint64_t)v170);
      sub_1BA5F1DE8(v102, *((uint64_t *)&v102 + 1), v103);
      sub_1BA5F1DB4((uint64_t)&v167);
      v98 = v173;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A860(0, *(_QWORD *)(v98 + 16) + 1, 1);
        v98 = v173;
      }
      v110 = *(_QWORD *)(v98 + 16);
      v109 = *(_QWORD *)(v98 + 24);
      if (v110 >= v109 >> 1)
      {
        sub_1BAC7A860(v109 > 1, v110 + 1, 1);
        v98 = v173;
      }
      *(_QWORD *)(v98 + 16) = v110 + 1;
      v111 = v98 + 40 * v110;
      v112 = v163;
      *(_QWORD *)(v111 + 32) = v164;
      *(_QWORD *)(v111 + 40) = v112;
      *(_BYTE *)(v111 + 48) = v107;
      *(_QWORD *)(v111 + 56) = v106;
      *(_QWORD *)(v111 + 64) = v105;
      v99 += 64;
      --v97;
    }
    while (v97);
    swift_bridgeObjectRelease();
  }
  v167 = v98;
  sub_1BAA7AA04();
  swift_allocObject();
  v167 = sub_1BB86F334();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v164 = sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  FeedJournalGroupResultOutput.score.getter();
  v167 = v113;
  LOWORD(v168) = v114 & 1;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v115 = *(_QWORD *)(v150 + 24);
  v167 = *(_QWORD *)(v150 + 16);
  v168 = v115;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  v116 = v143;
  if (v143 >= 2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BA67035C(v116);
    sub_1BB86F064();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v117 = *(_QWORD *)(v116 + 16);
    if (v117)
      v118 = *(_QWORD *)(v116 + 32);
    else
      v118 = 0;
    v119 = v117 == 0;
    sub_1BA5B18CC(v116);
    v167 = v118;
    LOWORD(v168) = v119;
    sub_1BB86F238();
    swift_release();
    sub_1BA5B18CC(v116);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BB86F064();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v167 = 0;
    LOWORD(v168) = 256;
    sub_1BB86F238();
    swift_release();
  }
  sub_1BA5B0E6C((uint64_t)v147, (uint64_t)&v167);
  __asm { BR              X10 }
}

uint64_t sub_1BAA7821C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v1 = *(_QWORD *)(v0 - 352);
  swift_retain();
  v2 = *(_QWORD *)(v0 - 368);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v3 = *(_QWORD *)(v0 - 344);
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v0 - 288);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 - 224) = 1;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  v5 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v6 = v2;
  swift_release();
  v7 = v1;
  swift_release();
  v8 = *(_QWORD *)(v0 - 296);
  swift_release();
  swift_release();
  swift_release();
  v9 = *(_QWORD *)(v0 - 312);
  swift_release();
  swift_release();
  *(_QWORD *)(v0 - 224) = 1;
  sub_1BB86F238();
  swift_release();
  v10 = *(_QWORD *)(v0 - 328);
  v11 = v3;
  swift_release();
  v12 = v6;
  v13 = v7;
  sub_1BAA7D0B0(*(_QWORD *)(v0 - 360));
  sub_1BAA7D0B0(*(_QWORD *)(v0 - 392));
  swift_release();
  v14 = v11;
  swift_release();
  v15 = *(_QWORD *)(v0 - 264);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v16 = v8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v17 = *(_QWORD *)(v0 - 272);
  result = swift_release();
  v19 = v17;
  v20 = *(_QWORD *)(v0 - 320);
  v21 = *(_QWORD **)(v0 - 496);
  *v21 = v19;
  v21[1] = v9;
  v21[2] = v15;
  v21[3] = v5;
  v21[4] = v16;
  v21[5] = v13;
  v21[6] = v12;
  v21[7] = v10;
  v22 = *(_QWORD *)(v0 - 304);
  v21[8] = *(_QWORD *)(v0 - 280);
  v21[9] = v22;
  v21[10] = *(_QWORD *)(v0 - 336);
  v21[11] = v14;
  v21[12] = v20;
  return result;
}

uint64_t sub_1BAA790C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA790E8 + 4 * byte_1BB896CDE[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1BAA790E8()
{
  return 1701667182;
}

uint64_t sub_1BAA790F8()
{
  return 0x64496E65736F6863;
}

uint64_t sub_1BAA79110()
{
  return 0x6449726F73727563;
}

unint64_t sub_1BAA79128()
{
  return 0xD000000000000016;
}

uint64_t sub_1BAA79144()
{
  return 1953459315;
}

uint64_t sub_1BAA79154()
{
  return 0x746C75736572;
}

uint64_t sub_1BAA79168()
{
  return 0x6E6F73616572;
}

uint64_t sub_1BAA7917C()
{
  return 0x73656C7572;
}

uint64_t sub_1BAA79190()
{
  return 0x65726F6373;
}

uint64_t sub_1BAA791A4()
{
  return 0x64496769666E6F63;
}

uint64_t sub_1BAA791BC()
{
  return 0x74614470756F7267;
}

uint64_t sub_1BAA791D8()
{
  return 0x617461446C6F6F70;
}

uint64_t sub_1BAA791F0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v15[2];
  _QWORD *v16;
  char v17;
  uint64_t v18;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AE868, (uint64_t (*)(void))sub_1BAA7CECC, (uint64_t)&type metadata for FeedGroupJournalEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA7CECC();
  sub_1BB8746C8();
  v18 = *v3;
  v17 = 0;
  sub_1BA50CAA8(0, &qword_1ED39A670, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  sub_1BAA7CFE0();
  sub_1BB8741AC();
  if (!v2)
  {
    v16 = v3;
    v18 = v3[1];
    v17 = 1;
    sub_1BA84118C();
    v11 = v10;
    v12 = sub_1BA4A2870(&qword_1EF2AD4A8, (uint64_t (*)(uint64_t))sub_1BA84118C, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v15[0] = v12;
    v15[1] = v11;
    v13 = v16;
    v18 = v16[2];
    v17 = 2;
    sub_1BB8741AC();
    v18 = v13[3];
    v17 = 3;
    sub_1BB8741AC();
    v18 = v13[4];
    v17 = 4;
    sub_1BA50CAA8(0, &qword_1ED3A3C00, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BAA7D048();
    sub_1BB8741AC();
    v18 = v13[5];
    v17 = 5;
    sub_1BAA7ADA4();
    sub_1BA4A2870(&qword_1EF2AE878, (uint64_t (*)(uint64_t))sub_1BAA7ADA4, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v18 = v13[6];
    v17 = 6;
    sub_1BB8741AC();
    v18 = v13[7];
    v17 = 7;
    sub_1BB8741AC();
    v18 = v13[8];
    v17 = 8;
    sub_1BAA7AE44(0);
    sub_1BA4A2870(&qword_1EF2AE880, (uint64_t (*)(uint64_t))sub_1BAA7AE44, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v18 = v13[9];
    v17 = 9;
    sub_1BAA7AF74();
    sub_1BA4A2870(&qword_1EF2AE888, (uint64_t (*)(uint64_t))sub_1BAA7AF74, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v18 = v13[10];
    v17 = 10;
    sub_1BB8741AC();
    v18 = v16[11];
    v17 = 11;
    sub_1BAA7B014(0);
    sub_1BA4A2870(&qword_1EF2AE890, (uint64_t (*)(uint64_t))sub_1BAA7B014, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v18 = v16[12];
    v17 = 12;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAA796F0()
{
  unsigned __int8 *v0;

  return sub_1BAA790C0(*v0);
}

uint64_t sub_1BAA796F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA7B08C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA7971C()
{
  sub_1BAA7CECC();
  return sub_1BB874710();
}

uint64_t sub_1BAA79744()
{
  sub_1BAA7CECC();
  return sub_1BB87471C();
}

uint64_t sub_1BAA7976C()
{
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F070();
  sub_1BB86F088();
  swift_allocObject();
  return sub_1BB86F094();
}

uint64_t sub_1BAA798B4()
{
  uint64_t v0;

  if (qword_1EF2A6CC8 != -1)
    swift_once();
  v0 = qword_1EF3D0520;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BAA79910()
{
  sub_1BA5C6CC8();
  return sub_1BB86F004();
}

uint64_t sub_1BAA79948()
{
  sub_1BA5C6CC8();
  return sub_1BB86F01C();
}

uint64_t sub_1BAA79980()
{
  sub_1BA5C6CC8();
  return sub_1BB86F010();
}

__n128 sub_1BAA799D0@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  _OWORD v5[6];
  uint64_t v6;

  sub_1BAA79BAC((uint64_t *)v5);
  v2 = v5[5];
  *(_OWORD *)(a1 + 64) = v5[4];
  *(_OWORD *)(a1 + 80) = v2;
  *(_QWORD *)(a1 + 96) = v6;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 sub_1BAA79A28@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_1BAA7B574(a1, v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1BAA79A84(_QWORD *a1)
{
  return sub_1BAA791F0(a1);
}

uint64_t sub_1BAA79A98()
{
  sub_1BA5C6CC8();
  return sub_1BB86F040();
}

uint64_t sub_1BAA79AD0()
{
  sub_1BA5C6CC8();
  return sub_1BB86F034();
}

uint64_t sub_1BAA79B10()
{
  sub_1BA5C6CC8();
  return sub_1BB86F028();
}

unint64_t sub_1BAA79B68()
{
  unint64_t result;

  result = qword_1EF2AE828;
  if (!qword_1EF2AE828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896E60, &type metadata for FeedGroupJournalEntity);
    atomic_store(result, (unint64_t *)&qword_1EF2AE828);
  }
  return result;
}

uint64_t sub_1BAA79BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t result;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t *v93;
  char *v94;
  char *v95;

  v93 = a1;
  sub_1BA4A3FB4(0, &qword_1ED3A3C38, sub_1BAA7A868);
  MEMORY[0x1E0C80A78](v1);
  v92 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v91 = (char *)&v73 - v4;
  sub_1BA4A3FB4(0, &qword_1ED3A3C88, (void (*)(uint64_t))sub_1BAA7A950);
  MEMORY[0x1E0C80A78](v5);
  v89 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v88 = (char *)&v73 - v8;
  sub_1BA4A3FB4(0, &qword_1ED3A3C68, sub_1BAA7A9F0);
  MEMORY[0x1E0C80A78](v9);
  v86 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v85 = (char *)&v73 - v12;
  sub_1BA4A3FB4(0, &qword_1ED3A3CA8, (void (*)(uint64_t))sub_1BAA7ABC4);
  MEMORY[0x1E0C80A78](v13);
  v81 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v80 = (char *)&v73 - v16;
  sub_1BA50CAF0(0, &qword_1ED3A3C98, &qword_1ED3A3C90, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0]);
  MEMORY[0x1E0C80A78](v17);
  v82 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v75 = (char *)&v73 - v20;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39A6C0, (void (*)(uint64_t))sub_1BA841074);
  MEMORY[0x1E0C80A78](v21);
  v95 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v73 - v24;
  v26 = MEMORY[0x1E0DEA968];
  v27 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v73 - v32;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v26, v27, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v35 = v34;
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v36(v33, 1, 1, v34);
  v36(v30, 1, 1, v35);
  sub_1BA50CAA8(0, &qword_1ED39A708, v26, v27, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v26, v27, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v90 = sub_1BB86F058();
  sub_1BA841074();
  v38 = v37;
  v79 = v37;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v76 = v25;
  v39(v25, 1, 1, v37);
  v78 = v39;
  v39(v95, 1, 1, v38);
  sub_1BAA7AC64();
  v77 = v40;
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA84118C();
  swift_allocObject();
  v87 = sub_1BB86F058();
  v36(v33, 1, 1, v35);
  v36(v30, 1, 1, v35);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v84 = sub_1BB86F058();
  v94 = v33;
  v74 = v35;
  v36(v33, 1, 1, v35);
  v73 = v30;
  v36(v30, 1, 1, v35);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v83 = sub_1BB86F058();
  v41 = MEMORY[0x1E0DEB070];
  v42 = MEMORY[0x1E0DB2EE0];
  sub_1BA50CAA8(0, &qword_1ED3A3C90, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v44 = v43;
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v45(v75, 1, 1, v43);
  v45(v82, 1, 1, v44);
  sub_1BA50CAA8(0, &qword_1ED3A3CD8, v41, v42, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED3A3C00, v41, v42, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v82 = (char *)sub_1BB86F058();
  sub_1BAA7ABC4();
  v47 = v46;
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v48(v80, 1, 1, v46);
  v48(v81, 1, 1, v47);
  sub_1BAA7AD04();
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7ADA4();
  swift_allocObject();
  v81 = (char *)sub_1BB86F058();
  v49 = v74;
  v36(v94, 1, 1, v74);
  v50 = v73;
  v36(v73, 1, 1, v49);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v80 = (char *)sub_1BB86F058();
  v51 = v78;
  v52 = v79;
  v78(v76, 1, 1, v79);
  v51(v95, 1, 1, v52);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v95 = (char *)sub_1BB86F058();
  sub_1BAA7A9F0(0);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v55(v85, 1, 1, v53);
  v55(v86, 1, 1, v54);
  sub_1BAA7AE58(0, &qword_1ED3A3CC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7AE44(0);
  swift_allocObject();
  v86 = (char *)sub_1BB86F058();
  sub_1BAA7A950();
  v57 = v56;
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56);
  v58(v88, 1, 1, v56);
  v58(v89, 1, 1, v57);
  sub_1BAA7AED4();
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7AF74();
  swift_allocObject();
  v59 = sub_1BB86F058();
  v36(v94, 1, 1, v49);
  v36(v50, 1, 1, v49);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v60 = sub_1BB86F058();
  sub_1BAA7A868(0);
  v62 = v61;
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56);
  v64 = v91;
  v63(v91, 1, 1, v61);
  v65 = v92;
  v63(v92, 1, 1, v62);
  sub_1BAA7B028(0, &qword_1ED3A3CB8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7B014(0);
  swift_allocObject();
  v66 = sub_1BB86F058();
  v63(v64, 1, 1, v62);
  v63(v65, 1, 1, v62);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  result = sub_1BB86F058();
  v68 = v93;
  v69 = v87;
  *v93 = v90;
  v68[1] = v69;
  v70 = v83;
  v68[2] = v84;
  v68[3] = v70;
  v71 = v81;
  v68[4] = (uint64_t)v82;
  v68[5] = (uint64_t)v71;
  v72 = v95;
  v68[6] = (uint64_t)v80;
  v68[7] = (uint64_t)v72;
  v68[8] = (uint64_t)v86;
  v68[9] = v59;
  v68[10] = v60;
  v68[11] = v66;
  v68[12] = result;
  return result;
}

void sub_1BAA7A868(uint64_t a1)
{
  sub_1BAA7B028(a1, &qword_1ED3A3C30, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
}

void sub_1BAA7A87C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3C20)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A10E8, (uint64_t (*)(void))sub_1BA5C6DD8, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E0DB29F0]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3C20);
  }
}

unint64_t sub_1BAA7A8F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A3C28;
  if (!qword_1ED3A3C28)
  {
    sub_1BAA7A87C();
    v2 = v1;
    v3 = sub_1BA50CBD8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2EF8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A3C28);
  }
  return result;
}

void sub_1BAA7A950()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3C80)
  {
    v0 = MEMORY[0x1E0DEB070];
    sub_1BA4AD288(255, &qword_1ED3CF878, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0(&qword_1ED3AB160, &qword_1ED3CF878, v0, MEMORY[0x1E0DB2EE0]);
    v1 = sub_1BB86F220();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3C80);
  }
}

void sub_1BAA7A9F0(uint64_t a1)
{
  sub_1BAA7AE58(a1, &qword_1ED3A3C60, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
}

void sub_1BAA7AA04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3D08)
  {
    sub_1BA4AD288(255, &qword_1ED3AADF8, (uint64_t)&type metadata for FeedGroupEmitterRuleOutputDescription, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAA7AAC0(&qword_1ED3AAE08, (uint64_t (*)(void))sub_1BAA7AB3C, MEMORY[0x1E0DEAF40]);
    sub_1BAA7AAC0(&qword_1ED3AAE00, (uint64_t (*)(void))sub_1BAA7AB80, MEMORY[0x1E0DEAF10]);
    v0 = sub_1BB86F34C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3D08);
  }
}

uint64_t sub_1BAA7AAC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED3AADF8, (uint64_t)&type metadata for FeedGroupEmitterRuleOutputDescription, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAA7AB3C()
{
  unint64_t result;

  result = qword_1ED3A5218;
  if (!qword_1ED3A5218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9220C0, &type metadata for FeedGroupEmitterRuleOutputDescription);
    atomic_store(result, (unint64_t *)&qword_1ED3A5218);
  }
  return result;
}

unint64_t sub_1BAA7AB80()
{
  unint64_t result;

  result = qword_1ED3A5210;
  if (!qword_1ED3A5210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922098, &type metadata for FeedGroupEmitterRuleOutputDescription);
    atomic_store(result, (unint64_t *)&qword_1ED3A5210);
  }
  return result;
}

void sub_1BAA7ABC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3CA0)
  {
    v0 = MEMORY[0x1E0DEB418];
    sub_1BA4AD288(255, &qword_1ED3B9740, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0(&qword_1ED3AB1B8, &qword_1ED3B9740, v0, MEMORY[0x1E0DB2EE8]);
    v1 = sub_1BB86F220();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3CA0);
  }
}

void sub_1BAA7AC64()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED39A710)
  {
    v0 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0((unint64_t *)&qword_1ED39BDA8, (unint64_t *)&qword_1ED3B9200, v0, MEMORY[0x1E0DB2EC0]);
    v1 = sub_1BB86F244();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED39A710);
  }
}

void sub_1BAA7AD04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3CE8)
  {
    v0 = MEMORY[0x1E0DEB418];
    sub_1BA4AD288(255, &qword_1ED3B9740, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0(&qword_1ED3AB1B8, &qword_1ED3B9740, v0, MEMORY[0x1E0DB2EE8]);
    v1 = sub_1BB86F244();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3CE8);
  }
}

void sub_1BAA7ADA4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3C10)
  {
    v0 = MEMORY[0x1E0DEB418];
    sub_1BA4AD288(255, &qword_1ED3B9740, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0(&qword_1ED3AB1B8, &qword_1ED3B9740, v0, MEMORY[0x1E0DB2EE8]);
    v1 = sub_1BB86F07C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3C10);
  }
}

void sub_1BAA7AE44(uint64_t a1)
{
  sub_1BAA7AE58(a1, &qword_1ED3A3BF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
}

void sub_1BAA7AE58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BAA7AA04();
    v7 = v6;
    v8 = sub_1BA4A2870(&qword_1ED3A3D00, (uint64_t (*)(uint64_t))sub_1BAA7AA04, MEMORY[0x1E0DB2E78]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BAA7AED4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3CE0)
  {
    v0 = MEMORY[0x1E0DEB070];
    sub_1BA4AD288(255, &qword_1ED3CF878, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0(&qword_1ED3AB160, &qword_1ED3CF878, v0, MEMORY[0x1E0DB2EE0]);
    v1 = sub_1BB86F244();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3CE0);
  }
}

void sub_1BAA7AF74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3C08)
  {
    v0 = MEMORY[0x1E0DEB070];
    sub_1BA4AD288(255, &qword_1ED3CF878, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA81D6A0(&qword_1ED3AB160, &qword_1ED3CF878, v0, MEMORY[0x1E0DB2EE0]);
    v1 = sub_1BB86F07C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3C08);
  }
}

void sub_1BAA7B014(uint64_t a1)
{
  sub_1BAA7B028(a1, &qword_1ED3A3BE0, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
}

void sub_1BAA7B028(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BAA7A87C();
    v7 = v6;
    v8 = sub_1BAA7A8F0();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BAA7B08C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64496E65736F6863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449726F73727563 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB9615F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1953459315 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73656C7572 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x64496769666E6F63 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x617461446C6F6F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1BAA7B574@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  char *v77;
  char *v78;
  _QWORD *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t result;
  _QWORD *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  _QWORD *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char v131;
  char *v132;

  v127 = (_QWORD *)a1;
  v100 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AE830, (uint64_t (*)(void))sub_1BAA7CECC, (uint64_t)&type metadata for FeedGroupJournalEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v103 = v2;
  v102 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v126 = (char *)&v99 - v3;
  sub_1BA4A3FB4(0, &qword_1ED3A3C38, sub_1BAA7A868);
  MEMORY[0x1E0C80A78](v4);
  v117 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v116 = (char *)&v99 - v7;
  sub_1BA4A3FB4(0, &qword_1ED3A3C88, (void (*)(uint64_t))sub_1BAA7A950);
  MEMORY[0x1E0C80A78](v8);
  v120 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v115 = (char *)&v99 - v11;
  sub_1BA4A3FB4(0, &qword_1ED3A3C68, sub_1BAA7A9F0);
  MEMORY[0x1E0C80A78](v12);
  v121 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v114 = (char *)&v99 - v15;
  sub_1BA4A3FB4(0, &qword_1ED3A3CA8, (void (*)(uint64_t))sub_1BAA7ABC4);
  MEMORY[0x1E0C80A78](v16);
  v123 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v122 = (char *)&v99 - v19;
  sub_1BA50CAF0(0, &qword_1ED3A3C98, &qword_1ED3A3C90, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0]);
  MEMORY[0x1E0C80A78](v20);
  v124 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v109 = (char *)&v99 - v23;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39A6C0, (void (*)(uint64_t))sub_1BA841074);
  MEMORY[0x1E0C80A78](v24);
  v129 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v99 - v27;
  v29 = MEMORY[0x1E0DEA968];
  v30 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v99 - v35;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v29, v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v38 = v37;
  v130 = v37;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v39(v36, 1, 1, v37);
  v39(v33, 1, 1, v38);
  sub_1BA50CAA8(0, &qword_1ED39A708, v29, v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v29, v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  v41 = v40;
  swift_allocObject();
  v106 = sub_1BB86F058();
  sub_1BA841074();
  v43 = v42;
  v44 = *(char **)(*((_QWORD *)v42 - 1) + 56);
  v112 = v42;
  v113 = v44;
  v110 = v28;
  ((void (*)(char *, uint64_t, uint64_t, char *))v44)(v28, 1, 1, v42);
  ((void (*)(char *, uint64_t, uint64_t, char *))v44)(v129, 1, 1, v43);
  sub_1BAA7AC64();
  v111 = v45;
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA84118C();
  v128 = v46;
  swift_allocObject();
  v105 = sub_1BB86F058();
  v47 = v130;
  v39(v36, 1, 1, v130);
  v39(v33, 1, 1, v47);
  swift_allocObject();
  v48 = v41;
  sub_1BB86F214();
  swift_allocObject();
  v118 = sub_1BB86F058();
  v107 = v36;
  v39(v36, 1, 1, v47);
  v108 = v33;
  v39(v33, 1, 1, v47);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v104 = sub_1BB86F058();
  v49 = MEMORY[0x1E0DEB070];
  v50 = MEMORY[0x1E0DB2EE0];
  sub_1BA50CAA8(0, &qword_1ED3A3C90, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v52 = v51;
  v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
  v53(v109, 1, 1, v51);
  v53(v124, 1, 1, v52);
  sub_1BA50CAA8(0, &qword_1ED3A3CD8, v49, v50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED3A3C00, v49, v50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  v109 = v54;
  swift_allocObject();
  v124 = (char *)sub_1BB86F058();
  sub_1BAA7ABC4();
  v56 = v55;
  v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
  v57(v122, 1, 1, v55);
  v57(v123, 1, 1, v56);
  sub_1BAA7AD04();
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7ADA4();
  v101 = v58;
  swift_allocObject();
  v123 = (char *)sub_1BB86F058();
  v59 = v107;
  v60 = v130;
  v39(v107, 1, 1, v130);
  v61 = v108;
  v39(v108, 1, 1, v60);
  swift_allocObject();
  sub_1BB86F214();
  v125 = v48;
  swift_allocObject();
  v122 = (char *)sub_1BB86F058();
  v63 = v112;
  v62 = v113;
  ((void (*)(char *, uint64_t, uint64_t, char *))v113)(v110, 1, 1, v112);
  ((void (*)(char *, uint64_t, uint64_t, char *))v62)(v129, 1, 1, v63);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v129 = (char *)sub_1BB86F058();
  sub_1BAA7A9F0(0);
  v65 = v64;
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56);
  v66(v114, 1, 1, v64);
  v66(v121, 1, 1, v65);
  sub_1BAA7AE58(0, &qword_1ED3A3CC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7AE44(0);
  v114 = v67;
  swift_allocObject();
  v121 = (char *)sub_1BB86F058();
  sub_1BAA7A950();
  v69 = v68;
  v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
  v70(v115, 1, 1, v68);
  v70(v120, 1, 1, v69);
  sub_1BAA7AED4();
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7AF74();
  v72 = v71;
  swift_allocObject();
  v120 = (char *)sub_1BB86F058();
  v73 = v130;
  v39(v59, 1, 1, v130);
  v39(v61, 1, 1, v73);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v115 = (char *)sub_1BB86F058();
  sub_1BAA7A868(0);
  v75 = v74;
  v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
  v77 = v116;
  v76(v116, 1, 1, v74);
  v78 = v117;
  v76(v117, 1, 1, v75);
  sub_1BAA7B028(0, &qword_1ED3A3CB8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BAA7B014(0);
  swift_allocObject();
  v130 = sub_1BB86F058();
  v76(v77, 1, 1, v75);
  v76(v78, 1, 1, v75);
  v79 = v127;
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v117 = (char *)sub_1BB86F058();
  __swift_project_boxed_opaque_existential_1(v79, v79[3]);
  sub_1BAA7CECC();
  v80 = v119;
  sub_1BB87468C();
  if (v80)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    v119 = v72;
    v131 = 0;
    sub_1BAA7CF10();
    sub_1BB8740D4();
    v81 = v132;
    swift_retain();
    swift_release();
    v131 = 1;
    sub_1BA4A2870(&qword_1EF2AD470, (uint64_t (*)(uint64_t))sub_1BA84118C, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v116 = v81;
    v82 = v132;
    swift_retain();
    swift_release();
    v131 = 2;
    sub_1BB8740D4();
    v113 = v132;
    swift_retain();
    swift_release();
    v131 = 3;
    sub_1BB8740D4();
    v83 = v132;
    swift_retain();
    swift_release();
    v131 = 4;
    sub_1BAA7CF78();
    sub_1BB8740D4();
    v112 = v82;
    v84 = v132;
    swift_retain();
    swift_release();
    v131 = 5;
    sub_1BA4A2870(&qword_1EF2AE848, (uint64_t (*)(uint64_t))sub_1BAA7ADA4, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v124 = v84;
    v85 = v132;
    swift_retain();
    swift_release();
    v131 = 6;
    sub_1BB8740D4();
    v123 = v85;
    v86 = v132;
    swift_retain();
    swift_release();
    v131 = 7;
    sub_1BB8740D4();
    v128 = v86;
    v87 = v132;
    swift_retain();
    swift_release();
    v131 = 8;
    sub_1BA4A2870(&qword_1EF2AE850, (uint64_t (*)(uint64_t))sub_1BAA7AE44, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v129 = v87;
    v88 = v116;
    v118 = (uint64_t)v132;
    swift_retain();
    swift_release();
    v131 = 9;
    sub_1BA4A2870(&qword_1EF2AE858, (uint64_t (*)(uint64_t))sub_1BAA7AF74, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v119 = v132;
    swift_retain();
    swift_release();
    v131 = 10;
    sub_1BB8740D4();
    v89 = v132;
    swift_retain();
    swift_release();
    v131 = 11;
    sub_1BA4A2870(&qword_1EF2AE860, (uint64_t (*)(uint64_t))sub_1BAA7B014, MEMORY[0x1E0DB2998]);
    sub_1BB8740D4();
    v125 = v132;
    swift_retain();
    swift_release();
    v131 = 12;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v126, v103);
    v130 = (uint64_t)v132;
    swift_retain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
    swift_release();
    swift_release();
    v114 = v89;
    swift_release();
    swift_release();
    swift_release();
    v90 = v129;
    swift_release();
    swift_release();
    swift_release();
    v91 = v124;
    swift_release();
    v92 = v83;
    swift_release();
    v93 = v113;
    swift_release();
    swift_release();
    result = swift_release();
    v95 = v100;
    *v100 = v88;
    v95[1] = v82;
    v95[2] = v93;
    v95[3] = v92;
    v96 = v123;
    v95[4] = v91;
    v95[5] = v96;
    v95[6] = v128;
    v95[7] = v90;
    v97 = v119;
    v95[8] = v118;
    v95[9] = v97;
    v98 = v125;
    v95[10] = v114;
    v95[11] = v98;
    v95[12] = v130;
  }
  return result;
}

unint64_t sub_1BAA7CECC()
{
  unint64_t result;

  result = qword_1EF2AE838;
  if (!qword_1EF2AE838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896FB4, &type metadata for FeedGroupJournalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE838);
  }
  return result;
}

unint64_t sub_1BAA7CF10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AD468;
  if (!qword_1EF2AD468)
  {
    sub_1BA50CAA8(255, &qword_1ED39A670, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2998], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AD468);
  }
  return result;
}

unint64_t sub_1BAA7CF78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AE840;
  if (!qword_1EF2AE840)
  {
    sub_1BA50CAA8(255, &qword_1ED3A3C00, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2998], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AE840);
  }
  return result;
}

unint64_t sub_1BAA7CFE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AD4A0;
  if (!qword_1EF2AD4A0)
  {
    sub_1BA50CAA8(255, &qword_1ED39A670, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2990], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AD4A0);
  }
  return result;
}

unint64_t sub_1BAA7D048()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AE870;
  if (!qword_1EF2AE870)
  {
    sub_1BA50CAA8(255, &qword_1ED3A3C00, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB2EE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2990], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AE870);
  }
  return result;
}

uint64_t sub_1BAA7D0B0(uint64_t a1)
{
  destroy for FeedJournalGroup(a1);
  return a1;
}

unint64_t sub_1BAA7D0E4()
{
  unint64_t result;

  result = qword_1ED3C63C0;
  if (!qword_1ED3C63C0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3C63C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupJournalEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BAA7D184 + 4 * byte_1BB896CF0[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BAA7D1B8 + 4 * byte_1BB896CEB[v4]))();
}

uint64_t sub_1BAA7D1B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA7D1C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA7D1C8);
  return result;
}

uint64_t sub_1BAA7D1D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA7D1DCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BAA7D1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA7D1E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupJournalEntity.CodingKeys()
{
  return &type metadata for FeedGroupJournalEntity.CodingKeys;
}

unint64_t sub_1BAA7D208()
{
  unint64_t result;

  result = qword_1EF2AE898;
  if (!qword_1EF2AE898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896F8C, &type metadata for FeedGroupJournalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE898);
  }
  return result;
}

unint64_t sub_1BAA7D250()
{
  unint64_t result;

  result = qword_1EF2AE8A0;
  if (!qword_1EF2AE8A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896EFC, &type metadata for FeedGroupJournalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE8A0);
  }
  return result;
}

unint64_t sub_1BAA7D298()
{
  unint64_t result;

  result = qword_1EF2AE8A8;
  if (!qword_1EF2AE8A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB896F24, &type metadata for FeedGroupJournalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AE8A8);
  }
  return result;
}

id PuzzleBarButtonItem.barButtonItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t PuzzleBarButtonItem.toolbarItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleBarButtonItem(0) + 24);
  return sub_1BAA7D328(v3, a1);
}

uint64_t type metadata accessor for PuzzleBarButtonItem(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AE910);
}

uint64_t sub_1BAA7D328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA7D36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAA7D36C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AE8B0)
  {
    type metadata accessor for PuzzleToolbarItem(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AE8B0);
  }
}

uint64_t type metadata accessor for PuzzleToolbarItem(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2AE9A8);
}

uint64_t PuzzleBarButtonItem.iconThemeInverted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PuzzleBarButtonItem(0) + 28));
}

uint64_t PuzzleBarButtonItem.init(identifier:barButtonItem:toolbarItem:iconThemeInverted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  v9 = type metadata accessor for PuzzleBarButtonItem(0);
  result = sub_1BAA7D44C(a4, (uint64_t)a6 + *(int *)(v9 + 24));
  *((_BYTE *)a6 + *(int *)(v9 + 28)) = a5;
  return result;
}

uint64_t sub_1BAA7D44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA7D36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PuzzleToolbarItem.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleToolbarItem.template.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleToolbarItem(0) + 20);
  v4 = sub_1BB870360();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id PuzzleToolbarItem.toolbarItemType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleToolbarItem(0) + 24));
  v4 = *v3;
  v5 = (void *)v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = (uint64_t)v5;
  a1[2] = v6;
  return sub_1BAA7D540(v4, v5);
}

id sub_1BAA7D540(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    swift_retain();
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    return a2;
  }
}

uint64_t PuzzleToolbarItem.handler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PuzzleToolbarItem(0) + 28));
  sub_1BA4BEB58(v1);
  return v1;
}

__n128 PuzzleToolbarItem.init(identifier:template:toolbarItemType:handler:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  unint64_t v11;
  int *v12;
  char *v13;
  uint64_t v14;
  __n128 *v15;
  __n128 result;
  _QWORD *v17;
  __n128 v18;

  v18 = *a4;
  v11 = a4[1].n128_u64[0];
  *a7 = a1;
  a7[1] = a2;
  v12 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  v13 = (char *)a7 + v12[5];
  v14 = sub_1BB870360();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a3, v14);
  v15 = (__n128 *)((char *)a7 + v12[6]);
  result = v18;
  *v15 = v18;
  v15[1].n128_u64[0] = v11;
  v17 = (_QWORD *)((char *)a7 + v12[7]);
  *v17 = a5;
  v17[1] = a6;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PuzzleBarButtonItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    a1[2] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for PuzzleToolbarItem(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    v15 = v8;
    if (v14(v11, 1, v12))
    {
      sub_1BAA7D36C();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v11[1];
      *v10 = *v11;
      v10[1] = v18;
      v19 = v12[5];
      v34 = (char *)v10 + v19;
      v35 = v13;
      v20 = (char *)v11 + v19;
      v21 = sub_1BB870360();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v34, v20, v21);
      v23 = v12[6];
      v24 = (_QWORD *)((char *)v10 + v23);
      v25 = (_QWORD *)((char *)v11 + v23);
      v26 = *v25;
      v27 = (void *)v25[1];
      v28 = v25[2];
      sub_1BAA7D540(*v25, v27);
      *v24 = v26;
      v24[1] = (uint64_t)v27;
      v24[2] = v28;
      v29 = v12[7];
      v30 = (_QWORD *)((char *)v10 + v29);
      v31 = (_QWORD *)((char *)v11 + v29);
      if (*v31)
      {
        v32 = v31[1];
        *v30 = *v31;
        v30[1] = v32;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v30 = *(_OWORD *)v31;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v35 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

void destroy for PuzzleBarButtonItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + v5[5];
    v7 = sub_1BB870360();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    sub_1BAA7D8F8(*(_QWORD *)(v4 + v5[6]), *(void **)(v4 + v5[6] + 8));
    if (*(_QWORD *)(v4 + v5[7]))
      swift_release();
  }
}

void sub_1BAA7D8F8(uint64_t a1, void *a2)
{
  if (a1 < 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();

  }
}

_QWORD *initializeWithCopy for PuzzleBarButtonItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  v14 = v7;
  if (v13(v10, 1, v11))
  {
    sub_1BAA7D36C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v10[1];
    *v9 = *v10;
    v9[1] = v16;
    v17 = v11[5];
    v32 = (char *)v9 + v17;
    v33 = v3;
    v18 = (char *)v10 + v17;
    v19 = sub_1BB870360();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v32, v18, v19);
    v21 = v11[6];
    v22 = (_QWORD *)((char *)v9 + v21);
    v23 = (_QWORD *)((char *)v10 + v21);
    v24 = *v23;
    v25 = (void *)v23[1];
    v26 = v23[2];
    sub_1BAA7D540(*v23, v25);
    *v22 = v24;
    v22[1] = (uint64_t)v25;
    v22[2] = v26;
    v27 = v11[7];
    v28 = (_QWORD *)((char *)v9 + v27);
    v29 = (_QWORD *)((char *)v10 + v27);
    if (*v29)
    {
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    v3 = v33;
  }
  *((_BYTE *)a1 + *(int *)(v3 + 28)) = *((_BYTE *)a2 + *(int *)(v3 + 28));
  return a1;
}

_QWORD *assignWithCopy for PuzzleBarButtonItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      *v10 = *v11;
      v10[1] = v11[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v32 = v12[5];
      v33 = (char *)v10 + v32;
      v34 = (char *)v11 + v32;
      v35 = sub_1BB870360();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
      v36 = v12[6];
      v37 = (_QWORD *)((char *)v10 + v36);
      v38 = (_QWORD *)((char *)v11 + v36);
      v39 = *v38;
      v40 = (void *)v38[1];
      v41 = v38[2];
      sub_1BAA7D540(*v38, v40);
      v42 = *v37;
      v43 = (void *)v37[1];
      *v37 = v39;
      v37[1] = (uint64_t)v40;
      v37[2] = v41;
      sub_1BAA7D8F8(v42, v43);
      v44 = v12[7];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (char *)v11 + v44;
      v47 = *(_QWORD *)((char *)v11 + v44);
      if (*v45)
      {
        if (v47)
        {
          v48 = *((_QWORD *)v46 + 1);
          *v45 = v47;
          v45[1] = v48;
          swift_retain();
          swift_release();
          goto LABEL_13;
        }
        swift_release();
      }
      else if (v47)
      {
        v50 = *((_QWORD *)v46 + 1);
        *v45 = v47;
        v45[1] = v50;
        swift_retain();
        goto LABEL_13;
      }
      *(_OWORD *)v45 = *(_OWORD *)v46;
      goto LABEL_13;
    }
    sub_1BAA7DD78((uint64_t)v10);
    goto LABEL_7;
  }
  if (v16)
  {
LABEL_7:
    sub_1BAA7D36C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  *v10 = *v11;
  v10[1] = v11[1];
  v17 = v12[5];
  v51 = (char *)v10 + v17;
  v52 = a3;
  v18 = (char *)v11 + v17;
  v19 = sub_1BB870360();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v51, v18, v19);
  v21 = v12[6];
  v22 = (_QWORD *)((char *)v10 + v21);
  v23 = (_QWORD *)((char *)v11 + v21);
  v24 = *v23;
  v25 = (void *)v23[1];
  v26 = v23[2];
  sub_1BAA7D540(*v23, v25);
  *v22 = v24;
  v22[1] = (uint64_t)v25;
  v22[2] = v26;
  v27 = v12[7];
  v28 = (_QWORD *)((char *)v10 + v27);
  v29 = (_QWORD *)((char *)v11 + v27);
  if (*v29)
  {
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  a3 = v52;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_13:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BAA7DD78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PuzzleToolbarItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for PuzzleBarButtonItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    sub_1BAA7D36C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = v9[5];
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_1BB870360();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    v16 = v9[6];
    v17 = (char *)v7 + v16;
    v18 = (char *)v8 + v16;
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v19 = v9[7];
    v20 = (_QWORD *)((char *)v7 + v19);
    v21 = (uint64_t *)((char *)v8 + v19);
    v22 = *v21;
    if (*v21)
    {
      v23 = v21[1];
      *v20 = v22;
      v20[1] = v23;
    }
    else
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for PuzzleBarButtonItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v29 = v10[1];
      *v9 = *v10;
      v9[1] = v29;
      swift_bridgeObjectRelease();
      v30 = v11[5];
      v31 = (char *)v9 + v30;
      v32 = (char *)v10 + v30;
      v33 = sub_1BB870360();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
      v34 = v11[6];
      v35 = (_QWORD *)((char *)v9 + v34);
      v36 = (char *)v10 + v34;
      v37 = *((_QWORD *)v36 + 2);
      v38 = *v35;
      v39 = (void *)v35[1];
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v35[2] = v37;
      sub_1BAA7D8F8(v38, v39);
      v40 = v11[7];
      v41 = (_QWORD *)((char *)v9 + v40);
      v42 = (_QWORD *)((char *)v10 + v40);
      v43 = *v42;
      if (*v41)
      {
        if (v43)
        {
          v44 = v42[1];
          *v41 = v43;
          v41[1] = v44;
          swift_release();
          goto LABEL_13;
        }
        swift_release();
      }
      else if (v43)
      {
        v46 = v42[1];
        *v41 = v43;
        v41[1] = v46;
        goto LABEL_13;
      }
      *(_OWORD *)v41 = *(_OWORD *)v42;
      goto LABEL_13;
    }
    sub_1BAA7DD78((uint64_t)v9);
    goto LABEL_7;
  }
  if (v15)
  {
LABEL_7:
    sub_1BAA7D36C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v16 = v11[5];
  v17 = (char *)v9 + v16;
  v18 = (char *)v10 + v16;
  v19 = sub_1BB870360();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v11[6];
  v21 = (char *)v9 + v20;
  v22 = (char *)v10 + v20;
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v23 = v11[7];
  v24 = (_QWORD *)((char *)v9 + v23);
  v25 = (_QWORD *)((char *)v10 + v23);
  v26 = *v25;
  if (*v25)
  {
    v27 = v25[1];
    *v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_13:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleBarButtonItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA7E13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BAA7D36C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleBarButtonItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA7E1C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BAA7D36C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1BAA7E238()
{
  unint64_t v0;

  sub_1BAA7D36C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void destroy for PuzzleToolbarItemType(uint64_t a1)
{
  sub_1BAA7D8F8(*(_QWORD *)a1, *(void **)(a1 + 8));
}

uint64_t *_s8NewsFeed21PuzzleToolbarItemTypeOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  sub_1BAA7D540(*a2, v4);
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for PuzzleToolbarItemType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  sub_1BAA7D540(*a2, v4);
  v6 = *a1;
  v7 = (void *)a1[1];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  sub_1BAA7D8F8(v6, v7);
  return a1;
}

uint64_t *assignWithTake for PuzzleToolbarItemType(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v5 = (void *)a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1BAA7D8F8(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleToolbarItemType()
{
  return &type metadata for PuzzleToolbarItemType;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleToolbarItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB870360();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = *v15;
    v17 = (void *)v15[1];
    v18 = v15[2];
    sub_1BAA7D540(*v15, v17);
    *v14 = v16;
    v14[1] = (uint64_t)v17;
    v14[2] = v18;
    v19 = a3[7];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    if (*v21)
    {
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
  }
  return v4;
}

void destroy for PuzzleToolbarItem(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BB870360();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_1BAA7D8F8(*(_QWORD *)(a1 + a2[6]), *(void **)(a1 + a2[6] + 8));
  if (*(_QWORD *)(a1 + a2[7]))
    swift_release();
}

_QWORD *initializeWithCopy for PuzzleToolbarItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB870360();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = *v14;
  v16 = (void *)v14[1];
  v17 = v14[2];
  sub_1BAA7D540(*v14, v16);
  *v13 = v15;
  v13[1] = (uint64_t)v16;
  v13[2] = v17;
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  if (*v20)
  {
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  return a1;
}

_QWORD *assignWithCopy for PuzzleToolbarItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB870360();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *v12;
  v14 = (void *)v12[1];
  v15 = v12[2];
  sub_1BAA7D540(*v12, v14);
  v16 = *v11;
  v17 = (void *)v11[1];
  *v11 = v13;
  v11[1] = (uint64_t)v14;
  v11[2] = v15;
  sub_1BAA7D8F8(v16, v17);
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = *(_QWORD *)((char *)a1 + v18);
  v22 = *v20;
  if (!v21)
  {
    if (v22)
    {
      v24 = v20[1];
      *v19 = v22;
      v19[1] = v24;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    return a1;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_7;
  }
  v23 = v20[1];
  *v19 = v22;
  v19[1] = v23;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for PuzzleToolbarItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB870360();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  v14 = (_QWORD *)((char *)a1 + v11);
  v15 = (uint64_t *)((char *)a2 + v11);
  v16 = *v15;
  if (*v15)
  {
    v17 = v15[1];
    *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return a1;
}

_QWORD *assignWithTake for PuzzleToolbarItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB870360();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = *((_QWORD *)v13 + 2);
  v15 = *v12;
  v16 = (void *)v12[1];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[2] = v14;
  sub_1BAA7D8F8(v15, v16);
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a1 + v17);
  v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      v23 = v19[1];
      *v18 = v21;
      v18[1] = v23;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  v22 = v19[1];
  *v18 = v21;
  v18[1] = v22;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleToolbarItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA7E8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB870360();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleToolbarItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA7E974(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB870360();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAA7E9E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB870360();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatBoolean.value(context:)()
{
  char v0;
  uint64_t v2;

  sub_1BB86DD80();
  v0 = FormatBoolean.value(contextLayoutOptions:)(v2);
  swift_release();
  return v0 & 1;
}

uint64_t sub_1BAA7EAF4()
{
  _QWORD *v0;

  sub_1BB873CB4();
  sub_1BB872AFC("NewsFeed/A12_V17.swift");
  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v0);
  return 0;
}

uint64_t sub_1BAA7EBA4()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  sub_1BB872AFC("FormatBoolean.BOOLean(");
  sub_1BB872AFC(v0);
  sub_1BB872AFC(v1);
  return 0;
}

uint64_t FormatBoolean.description.getter()
{
  uint64_t v0;
  _QWORD *v1;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1BB872AFC((_QWORD *)0x286E6F6974706FLL);
    sub_1BB872AFC(v1);
    return 0x286E6F6974706FLL;
  }
  else if ((*(_QWORD *)v0 & 1) != 0)
  {
    return 1702195828;
  }
  else
  {
    return 0x65736C6166;
  }
}

uint64_t sub_1BAA7ECC8()
{
  uint64_t v0;
  _QWORD *v1;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1BB872AFC((_QWORD *)0x286E6F6974706FLL);
    sub_1BB872AFC(v1);
    return 0x286E6F6974706FLL;
  }
  else if ((*(_QWORD *)v0 & 1) != 0)
  {
    return 1702195828;
  }
  else
  {
    return 0x65736C6166;
  }
}

uint64_t FormatBoolean.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result & 1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_1BAA7ED68(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t result;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unsigned int v56;
  unint64_t v57;
  size_t v58;
  uint64_t isStackAllocationSafe;
  char *v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char v65;
  char v66;
  id v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79[2];
  _QWORD v80[3];
  _QWORD v81[4];

  v81[3] = *MEMORY[0x1E0C80C00];
  v4 = *a1;
  v5 = (unint64_t)*a1 >> 60;
  if (((1 << v5) & 0x3EFE) != 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    sub_1BA900B30(a3, v7);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return a3 & 1;
  }
  v9 = v3;
  if ((_DWORD)v5)
  {
    v81[0] = *(_QWORD *)(v4 + 24);
    swift_retain_n();
    swift_retain();
    LOBYTE(a3) = sub_1BAA7ED68(v81, a2, a3);
    swift_release_n();
    swift_release();
    return a3 & 1;
  }
  LODWORD(a3) = *(unsigned __int8 *)(v4 + 16);
  if (!*(_QWORD *)(*(_QWORD *)(v4 + 24) + 16))
    return a3 & 1;
  v68 = *(_QWORD *)(v4 + 24);
  v69 = a3;
  v11 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v11 + 16) + 16))
  {
    v80[0] = *(_QWORD *)(a2 + 56);
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1BA6E42A0(v12);
    sub_1BA6E3FB8(v13);
    v77 = v80[0];
  }
  else
  {
    v77 = sub_1BA6E3F38();
  }
  v71 = *(_QWORD *)(v68 + 16);
  if (!v71)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    LOBYTE(a3) = v69;
    return a3 & 1;
  }
  v70 = v68 + 32;
  swift_bridgeObjectRetain();
  v14 = 0;
LABEL_14:
  v15 = v70 + 24 * v14;
  v17 = *(_QWORD *)v15;
  v16 = *(_QWORD *)(v15 + 8);
  v72 = *(unsigned __int8 *)(v15 + 16);
  v18 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = qword_1ED4768D0;
  v20 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v21 = (uint64_t *)(v19 + 16);
  swift_beginAccess();
  v22 = *(_QWORD *)(v19 + 16);
  v23 = *(_QWORD *)(v22 + 16);
  v78 = v9;
  v76 = v14;
  if (!v23)
  {
LABEL_20:
    v73 = v20;
    swift_endAccess();
    v79[0] = v17;
    v79[1] = v16;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v79, v80);
    v27 = v80[1];
    v74 = v80[0];
    v28 = v80[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v75 = v27;
    swift_bridgeObjectRetain();
    v29 = v28;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79[0] = *v21;
    v31 = v79[0];
    *v21 = 0x8000000000000000;
    v32 = v17;
    v33 = v16;
    v35 = sub_1BA6E35A8(v17, v16);
    v36 = *(_QWORD *)(v31 + 16);
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_49:
      __break(1u);
    }
    v39 = v34;
    if (*(_QWORD *)(v31 + 24) < v38)
    {
      sub_1BA7AAAE4(v38, isUniquelyReferenced_nonNull_native);
      v40 = sub_1BA6E35A8(v32, v33);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_51;
      v35 = v40;
      v42 = (_QWORD *)v79[0];
      if ((v39 & 1) == 0)
        goto LABEL_29;
LABEL_27:
      v43 = (_QWORD *)(v42[7] + 24 * v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = v75;
      *v43 = v74;
      v43[1] = v44;
      v43[2] = v29;
      v16 = v33;
      v26 = v29;
LABEL_31:
      *v21 = (uint64_t)v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_32;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v42 = (_QWORD *)v79[0];
      if ((v34 & 1) != 0)
        goto LABEL_27;
    }
    else
    {
      sub_1BB4C1F6C();
      v42 = (_QWORD *)v79[0];
      if ((v39 & 1) != 0)
        goto LABEL_27;
    }
LABEL_29:
    v42[(v35 >> 6) + 8] |= 1 << v35;
    v45 = (uint64_t *)(v42[6] + 16 * v35);
    *v45 = v32;
    v45[1] = v33;
    v46 = (_QWORD *)(v42[7] + 24 * v35);
    v47 = v75;
    *v46 = v74;
    v46[1] = v47;
    v46[2] = v29;
    v48 = v42[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_49;
    v26 = v29;
    v42[2] = v50;
    swift_bridgeObjectRetain();
    v16 = v33;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1BA6E35A8(v17, v16);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v24 + 16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  swift_bridgeObjectRelease();
  v51 = *(_QWORD *)(v26 + 16);
  if (!v51)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v74 = v26;
  v75 = v16;
  v52 = (uint64_t *)(v26 + 64);
  while (1)
  {
    v53 = *(v52 - 1);
    v54 = *v52;
    v55 = *(_BYTE *)(v53 + 32);
    v56 = v55 & 0x3F;
    v57 = (unint64_t)((1 << v55) + 63) >> 6;
    v58 = 8 * v57;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v56 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v60 = (char *)swift_slowAlloc();
    bzero(v60, v58);
    v63 = v78;
    v64 = sub_1BA6EB5B4((uint64_t)v60, v57, v53, v77);
    v78 = v63;
    if (v63)
      goto LABEL_50;
    v62 = v64;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE5C38](v60, -1, -1);
LABEL_42:
    v65 = sub_1BA6EB330(v62, v53);
    swift_release();
    if ((v65 & 1) != 0)
    {
      v66 = sub_1BA6EBD20(v77, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v66 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v69 = v72;
LABEL_13:
        v14 = v76 + 1;
        v9 = v78;
        if (v76 + 1 == v71)
        {
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v52 += 5;
    if (!--v51)
      goto LABEL_12;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v60 = (char *)&v68 - ((v58 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v60, v58);
  v61 = v78;
  v62 = sub_1BA6EB5B4((uint64_t)v60, v57, v53, v77);
  swift_bridgeObjectRelease();
  v78 = v61;
  if (!v61)
    goto LABEL_42;
  v67 = v78;
  swift_willThrow();

  __break(1u);
LABEL_50:
  swift_bridgeObjectRelease();

  MEMORY[0x1BCCE5C38](v60, -1, -1);
  __break(1u);
LABEL_51:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BAA7F464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v2 = *(_QWORD *)v0;
    v1 = *(_QWORD *)(v0 + 8);
    sub_1BA69C808(*(_QWORD *)v0, v1, 1);
    v3 = sub_1BA862600((uint64_t)&unk_1E724DC40);
    sub_1BB3D7F90(v2, v1, v3, 0);
    sub_1BA69C828(v2, v1, 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAA7F500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v2 = *(_QWORD *)v0;
    v1 = *(_QWORD *)(v0 + 8);
    sub_1BA69C808(*(_QWORD *)v0, v1, 1);
    v3 = sub_1BA862600((uint64_t)&unk_1E724DD30);
    sub_1BB3D7F90(v2, v1, v3, 0);
    sub_1BA69C828(v2, v1, 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void FormatBoolean.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BA856968();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v7 = v0;
    v5 = *(_QWORD *)v0;
    v6 = *(_QWORD *)(v7 + 8);
    v8 = sub_1BA862600((uint64_t)&unk_1E72682A0);
    sub_1BB3757A0(v5, v6, v8, 1, (uint64_t)v4);
    if (!v1)
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA856968);
    swift_bridgeObjectRelease();
  }
}

void sub_1BAA7F668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BA856968();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v7 = v0;
    v5 = *(_QWORD *)v0;
    v6 = *(_QWORD *)(v7 + 8);
    v8 = sub_1BA862600((uint64_t)&unk_1E72544C0);
    sub_1BB3757A0(v5, v6, v8, 1, (uint64_t)v4);
    if (!v1)
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA856968);
    swift_bridgeObjectRelease();
  }
}

uint64_t _s8NewsFeed13FormatBooleanO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    {
      sub_1BA69C828(*(_QWORD *)a1, v2, 0);
      sub_1BA69C828(v5, v6, 0);
      v9 = ((v3 & 1) == 0) ^ v5;
      return v9 & 1;
    }
LABEL_11:
    sub_1BA69C808(v5, v6, v7);
    sub_1BA69C828(v3, v2, v4);
    sub_1BA69C828(v5, v6, v7);
    v9 = 0;
    return v9 & 1;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v3 == v5 && v2 == v6)
    v9 = 1;
  else
    v9 = sub_1BB874398();
  sub_1BA69C808(v5, v6, 1);
  sub_1BA69C808(v3, v2, 1);
  sub_1BA69C828(v3, v2, 1);
  sub_1BA69C828(v5, v6, 1);
  return v9 & 1;
}

uint64_t sub_1BAA7F85C()
{
  return sub_1BAA7EBA4();
}

uint64_t sub_1BAA7F864()
{
  return sub_1BAA7EAF4();
}

unint64_t sub_1BAA7F86C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA7F890();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA7F890()
{
  unint64_t result;

  result = qword_1EF2AE9E8;
  if (!qword_1EF2AE9E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolean, &type metadata for FormatBoolean);
    atomic_store(result, (unint64_t *)&qword_1EF2AE9E8);
  }
  return result;
}

unint64_t sub_1BAA7F8D4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA7967E4();
  a1[2] = sub_1BA7844F0();
  result = sub_1BAA7F908();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA7F908()
{
  unint64_t result;

  result = qword_1EF2AE9F0;
  if (!qword_1EF2AE9F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolean, &type metadata for FormatBoolean);
    atomic_store(result, (unint64_t *)&qword_1EF2AE9F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBoolean()
{
  return &type metadata for FormatBoolean;
}

uint64_t FeedPuzzleRankProgress.rawState.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  v5 = *MEMORY[0x1E0DB7738];
  v6 = sub_1BB86FB08();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, v5, v6);
  return swift_bridgeObjectRetain();
}

uint64_t FeedPuzzleRankProgress.rankText.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FeedPuzzleRankProgress.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BAA7FA18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  v5 = *MEMORY[0x1E0DB7738];
  v6 = sub_1BB86FB08();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, v5, v6);
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FormatNodeCacheKey()
{
  return &type metadata for FormatNodeCacheKey;
}

uint64_t sub_1BAA7FA84()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  return sub_1BB874608();
}

uint64_t sub_1BAA7FAE4()
{
  sub_1BB872A90();
  return sub_1BB8745E4();
}

uint64_t sub_1BAA7FB18()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  return sub_1BB874608();
}

unint64_t sub_1BAA7FB78()
{
  unint64_t result;

  result = qword_1ED3BE260;
  if (!qword_1ED3BE260)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89737C, &type metadata for FormatNodeCacheKey);
    atomic_store(result, (unint64_t *)&qword_1ED3BE260);
  }
  return result;
}

uint64_t FormatViewNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatViewNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatViewNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatViewNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatViewNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

unint64_t FormatViewNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatViewNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatViewNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatViewNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatViewNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v25;

  v25 = swift_allocObject();
  FormatViewNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  return v25;
}

void sub_1BAA7FD74(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B8C88, (uint64_t (*)(uint64_t))sub_1BAA7FD90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BAA7FD90()
{
  unint64_t result;

  result = qword_1ED3B8C80;
  if (!qword_1ED3B8C80)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B8C80);
  }
  return result;
}

uint64_t sub_1BAA7FDE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA7FE1C + 4 * byte_1BB8973F0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BAA7FE1C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BAA7FE38()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BAA7FE5C()
{
  return 0x656D617266;
}

uint64_t sub_1BAA7FE70()
{
  return 0x656C797473;
}

uint64_t sub_1BAA7FE84()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BAA7FE9C()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BAA7FEB0()
{
  return 0x696C696269736976;
}

unint64_t sub_1BAA7FEC8()
{
  return 0xD000000000000018;
}

uint64_t sub_1BAA7FF30()
{
  unsigned __int8 *v0;

  return sub_1BAA7FDE4(*v0);
}

uint64_t sub_1BAA7FF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA80DFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA7FF5C()
{
  sub_1BAA80B20();
  return sub_1BB874710();
}

uint64_t sub_1BAA7FF84()
{
  sub_1BAA80B20();
  return sub_1BB87471C();
}

uint64_t FormatViewNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  _OWORD v13[2];
  char v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AE9F8, (uint64_t (*)(void))sub_1BAA80B20, (uint64_t)&type metadata for FormatViewNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA80B20();
  sub_1BB8746C8();
  LOBYTE(v13[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 96);
    v14 = 4;
    type metadata accessor for FormatViewNodeStyle();
    sub_1BA50AD30(&qword_1ED3A66F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 104);
    v14 = 5;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v13[0]) = 6;
    sub_1BB8741A0();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 120);
    v14 = 7;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v13[0]) = 8;
    sub_1BB874188();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 136);
    v14 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v11 = *(_BYTE *)(v3 + 152);
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 144);
    BYTE8(v13[0]) = v11;
    v14 = 10;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 160);
    v14 = 11;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatViewNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatViewNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatViewNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  sub_1BA4CDF6C(0, &qword_1EF2AEA08, (uint64_t (*)(void))sub_1BAA80B20, (uint64_t)&type metadata for FormatViewNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v17 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA80B20();
  v16 = v6;
  v7 = v18;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v14 = (uint64_t)a1;
  }
  else
  {
    v18 = a1;
    LOBYTE(v19) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v19) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v19) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v21 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v15 = 0;
    sub_1BB8740D4();
    v11 = v20;
    *(_OWORD *)(v1 + 64) = v19;
    *(_OWORD *)(v1 + 80) = v11;
    type metadata accessor for FormatViewNodeStyle();
    v21 = 4;
    sub_1BA50AD30(&qword_1ED3C88B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v19;
    v21 = 5;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 104) = v19;
    LOBYTE(v19) = 6;
    *(_QWORD *)(v1 + 112) = sub_1BB8740C8();
    v21 = 7;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 120) = v19;
    LOBYTE(v19) = 8;
    *(_BYTE *)(v1 + 128) = sub_1BB8740A4() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    v21 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 136) = v19;
    v21 = 10;
    sub_1BA650BA0();
    sub_1BB874068();
    v13 = BYTE8(v19);
    *(_QWORD *)(v1 + 144) = v19;
    *(_BYTE *)(v1 + 152) = v13;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v21 = 11;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v17);
    v14 = (uint64_t)v18;
    *(_QWORD *)(v1 + 160) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v1;
}

uint64_t sub_1BAA80A20()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA80A2C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatViewNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAA80A80(_QWORD *a1)
{
  return FormatViewNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BAA80AA0(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2AEA48, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatViewNodeLayoutAttributes);
  return sub_1BB86D96C();
}

unint64_t sub_1BAA80B20()
{
  unint64_t result;

  result = qword_1EF2AEA00;
  if (!qword_1EF2AEA00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8976A4, &type metadata for FormatViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA00);
  }
  return result;
}

uint64_t sub_1BAA80B64(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AEA10, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatViewNodeLayoutAttributes);
}

uint64_t sub_1BAA80B90(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AEA18, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatViewNodeLayoutAttributes);
}

uint64_t sub_1BAA80BBC(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AEA20, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatViewNodeLayoutAttributes);
}

uint64_t sub_1BAA80BE8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2AEA28, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatViewNodeLayoutAttributes);
}

uint64_t method lookup function for FormatViewNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatViewNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatViewNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatViewNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BAA80CA4 + 4 * byte_1BB897401[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BAA80CD8 + 4 * byte_1BB8973FC[v4]))();
}

uint64_t sub_1BAA80CD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA80CE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA80CE8);
  return result;
}

uint64_t sub_1BAA80CF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA80CFCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BAA80D00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA80D08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatViewNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatViewNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BAA80D28()
{
  unint64_t result;

  result = qword_1EF2AEA30;
  if (!qword_1EF2AEA30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89767C, &type metadata for FormatViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA30);
  }
  return result;
}

unint64_t sub_1BAA80D70()
{
  unint64_t result;

  result = qword_1EF2AEA38;
  if (!qword_1EF2AEA38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8975EC, &type metadata for FormatViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA38);
  }
  return result;
}

unint64_t sub_1BAA80DB8()
{
  unint64_t result;

  result = qword_1EF2AEA40;
  if (!qword_1EF2AEA40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897614, &type metadata for FormatViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA40);
  }
  return result;
}

uint64_t sub_1BAA80DFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t SportsDataVisualizationRequest.tagIds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  if (!*(_BYTE *)(v0 + 24))
    return SportsDataVisualizationRecentRequest.tagIds.getter();
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    sub_1BA6EA07C();
    v4 = swift_allocObject();
    v5 = v4;
    *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
    v7 = *(void **)(v2 + 16);
    v6 = *(_QWORD *)(v2 + 24);
    if ((*(_BYTE *)(v2 + 32) & 1) != 0)
    {
      *(_QWORD *)(v4 + 32) = v7;
      *(_QWORD *)(v4 + 40) = v6;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1BA98B604(v2, v1, v3, 1);
      sub_1BA98B668((uint64_t)v7, v6, 0);
      v13 = objc_msgSend(v7, sel_identifier);
      v14 = sub_1BB8729A0();
      v16 = v15;

      sub_1BA98B5E4((uint64_t)v7, v6, 0);
      *(_QWORD *)(v5 + 32) = v14;
      *(_QWORD *)(v5 + 40) = v16;
      sub_1BA98B574(v2, v1, v3, 1);
    }
  }
  else
  {
    sub_1BA6EA07C();
    v8 = swift_allocObject();
    v5 = v8;
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    if ((v3 & 1) != 0)
    {
      *(_QWORD *)(v8 + 32) = v2;
      *(_QWORD *)(v8 + 40) = v1;
      sub_1BA98B668(v2, v1, 1);
    }
    else
    {
      sub_1BA98B668(v2, v1, 0);
      sub_1BA98B668(v2, v1, 0);
      v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      v10 = sub_1BB8729A0();
      v12 = v11;

      sub_1BA98B574(v2, v1, v3, 2);
      sub_1BA98B574(v2, v1, v3, 2);
      *(_QWORD *)(v5 + 32) = v10;
      *(_QWORD *)(v5 + 40) = v12;
      sub_1BA98B574(v2, v1, v3, 2);
    }
  }
  return v5;
}

uint64_t SportsDataVisualizationRequest.fetchType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 5000257;
  if (*(_BYTE *)(v0 + 24) != 1)
    v1 = 0x544E455645;
  if (*(_BYTE *)(v0 + 24))
    return v1;
  else
    return 0x544E45434552;
}

BOOL SportsDataVisualizationRequest.isEventRequest.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 24) == 2;
}

uint64_t SportsDataVisualizationRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  id v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v0 + 24))
  {
    if (*(_BYTE *)(v0 + 24) == 1)
    {
      sub_1BB8745D8();
      v4 = *(void **)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      v6 = *(_BYTE *)(v2 + 32);
      sub_1BA98B604(v2, v1, v3, 1);
      if ((v6 & 1) != 0)
      {
        sub_1BA98B668((uint64_t)v4, v5, 1);
      }
      else
      {
        sub_1BA98B668((uint64_t)v4, v5, 0);
        v9 = objc_msgSend(v4, sel_identifier);
        sub_1BB8729A0();

        sub_1BA98B5E4((uint64_t)v4, v5, 0);
      }
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      sub_1BB8745E4();
      return sub_1BA98B574(v2, v1, v3, 1);
    }
    else
    {
      sub_1BB8745D8();
      if ((v3 & 1) != 0)
      {
        sub_1BA98B668(v2, v1, 1);
        sub_1BA98B668(v2, v1, 1);
      }
      else
      {
        sub_1BA98B668(v2, v1, 0);
        sub_1BA98B668(v2, v1, 0);
        v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
        sub_1BB8729A0();

        sub_1BA98B574(v2, v1, v3, 2);
        sub_1BA98B574(v2, v1, v3, 2);
      }
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      return sub_1BA98B574(v2, v1, v3, 2);
    }
  }
  sub_1BB8745D8();
  if ((v1 & 1) != 0)
  {
    if (v2 >> 62)
    {
      v23 = swift_bridgeObjectRetain();
      sub_1BA98B604(v23, v1, v3, 0);
      v11 = v3;
      v12 = sub_1BB873F30();
      if (v12)
        goto LABEL_13;
    }
    else
    {
      v11 = v3;
      v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v13 = swift_bridgeObjectRetain();
      sub_1BA98B604(v13, v1, v11, 0);
      if (v12)
      {
LABEL_13:
        v26 = v11;
        v27 = v1;
        v28 = MEMORY[0x1E0DEE9D8];
        result = sub_1BA7447E8(0, v12 & ~(v12 >> 63), 0);
        if (v12 < 0)
        {
          __break(1u);
          return result;
        }
        v14 = 0;
        v7 = v28;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            v15 = (void *)MEMORY[0x1BCCE4630](v14, v2);
          }
          else
          {
            v15 = *(void **)(v2 + 8 * v14 + 32);
            swift_unknownObjectRetain();
          }
          v16 = objc_msgSend(v15, sel_identifier, v26);
          v17 = sub_1BB8729A0();
          v19 = v18;
          swift_unknownObjectRelease();

          v21 = *(_QWORD *)(v28 + 16);
          v20 = *(_QWORD *)(v28 + 24);
          if (v21 >= v20 >> 1)
            sub_1BA7447E8(v20 > 1, v21 + 1, 1);
          ++v14;
          *(_QWORD *)(v28 + 16) = v21 + 1;
          v22 = v28 + 16 * v21;
          *(_QWORD *)(v22 + 32) = v17;
          *(_QWORD *)(v22 + 40) = v19;
        }
        while (v12 != v14);
        swift_bridgeObjectRelease();
        sub_1BA98B574(v2, v27, v26, 0);
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BA98B574(v2, v1, v11, 0);
    v7 = MEMORY[0x1E0DEE9D8];
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v7 = v2;
LABEL_26:
  sub_1BB8745D8();
  v24 = *(_QWORD *)(v7 + 16);
  if (v24)
  {
    v25 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      v25 += 16;
      --v24;
    }
    while (v24);
  }
  swift_bridgeObjectRelease();
  return sub_1BB8745E4();
}

uint64_t SportsDataVisualizationRequest.hashValue.getter()
{
  sub_1BB8745CC();
  SportsDataVisualizationRequest.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BAA819B8()
{
  sub_1BB8745CC();
  SportsDataVisualizationRequest.hash(into:)();
  return sub_1BB874608();
}

uint64_t sub_1BAA81A14()
{
  sub_1BB8745CC();
  SportsDataVisualizationRequest.hash(into:)();
  return sub_1BB874608();
}

uint64_t _s8NewsFeed30SportsDataVisualizationRequestO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(_BYTE *)(a1 + 24))
  {
    if (!*(_BYTE *)(a2 + 24))
    {
      v13 = *(_QWORD *)(a2 + 16);
      v14 = v3;
      LOWORD(v15) = v2 & 0x101;
      v16 = v4;
      v11 = v7;
      LOWORD(v12) = v6 & 0x101;
      sub_1BA98B604(v7, v6, v8, 0);
      sub_1BA98B604(v3, v2, v4, 0);
      sub_1BA98B604(v3, v2, v4, 0);
      sub_1BA98B604(v7, v6, v8, 0);
      v9 = _s8NewsFeed36SportsDataVisualizationRecentRequestV2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t)&v11);
      sub_1BA98B574(v3, v2, v4, 0);
      sub_1BA98B574(v7, v6, v8, 0);
      sub_1BA98B574(v7, v6, v8, 0);
      sub_1BA98B574(v3, v2, v4, 0);
      return v9 & 1;
    }
LABEL_9:
    sub_1BA98B604(*(_QWORD *)a1, v2, v4, v5);
    sub_1BA98B604(v7, v6, v8, v9);
    sub_1BA98B574(v3, v2, v4, v5);
    sub_1BA98B574(v7, v6, v8, v9);
    LOBYTE(v9) = 0;
    return v9 & 1;
  }
  if (v5 != 1)
  {
    if (v9 == 2)
    {
      v14 = *(_QWORD *)a1;
      v15 = v2;
      LOBYTE(v16) = v4 & 1;
      v11 = v7;
      v12 = v6;
      LOBYTE(v13) = v8 & 1;
      sub_1BA98B604(v7, v6, v8, 2);
      sub_1BA98B604(v3, v2, v4, 2);
      sub_1BA98B604(v3, v2, v4, 2);
      sub_1BA98B604(v7, v6, v8, 2);
      LOBYTE(v9) = _s8NewsFeed35SportsDataVisualizationEventRequestV2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t)&v11);
      sub_1BA98B574(v3, v2, v4, 2);
      sub_1BA98B574(v7, v6, v8, 2);
      sub_1BA98B574(v7, v6, v8, 2);
      sub_1BA98B574(v3, v2, v4, 2);
      return v9 & 1;
    }
    goto LABEL_9;
  }
  if (v9 != 1)
    goto LABEL_9;
  sub_1BA98B604(*(_QWORD *)a1, v2, v4, 1);
  sub_1BA98B604(v7, v6, v8, 1);
  LOBYTE(v9) = _s8NewsFeed33SportsDataVisualizationAllRequestC2eeoiySbAC_ACtFZ_0(v3, v7);
  sub_1BA98B574(v3, v2, v4, 1);
  sub_1BA98B574(v7, v6, v8, 1);
  return v9 & 1;
}

uint64_t destroy for SportsDataVisualizationRequest(uint64_t a1)
{
  return sub_1BA98B574(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for SportsDataVisualizationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA98B604(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA98B604(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA98B574(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA98B574(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationRequest()
{
  return &type metadata for SportsDataVisualizationRequest;
}

uint64_t static FormatCustomItemBinding.URL.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1BAA81E80()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAA81EDC()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAA81F00()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

void sub_1BAA81F58(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252708;
}

uint64_t FormatCustomItemBinding.URL.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatCustomItemBinding.URL.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAA81FD0()
{
  unint64_t result;

  result = qword_1EF2AEA50;
  if (!qword_1EF2AEA50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.URL, &type metadata for FormatCustomItemBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA50);
  }
  return result;
}

unint64_t sub_1BAA82014(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA82038();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA82038()
{
  unint64_t result;

  result = qword_1EF2AEA58;
  if (!qword_1EF2AEA58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.URL, &type metadata for FormatCustomItemBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA58);
  }
  return result;
}

unint64_t sub_1BAA8207C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA587D08();
  a1[2] = sub_1BA5A3200();
  result = sub_1BAA81FD0();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomItemBinding.URL()
{
  return &type metadata for FormatCustomItemBinding.URL;
}

ValueMetadata *_s3URLO10CodingTypeOMa()
{
  return &_s3URLO10CodingTypeON;
}

unint64_t sub_1BAA820D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AEA60;
  if (!qword_1EF2AEA60)
  {
    sub_1BAA8211C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA60);
  }
  return result;
}

void sub_1BAA8211C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AEA68)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AEA68);
  }
}

unint64_t sub_1BAA82174()
{
  unint64_t result;

  result = qword_1EF2AEA70;
  if (!qword_1EF2AEA70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897998, &_s3URLO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA70);
  }
  return result;
}

uint64_t sub_1BAA821B8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - v5;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - v8;
  v10 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA823B0(a1, (uint64_t)v12);
  v13 = *(int *)(v10 + 20);
  v14 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BAA823F4((uint64_t)&v12[v13 + *(int *)(v14 + 24)], (uint64_t)v6);
  v15 = type metadata accessor for FormatCustomItem.Action();
  v16 = 1;
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v6, 1, v15);
  v18 = sub_1BB86C67C();
  v19 = *(_QWORD *)(v18 - 8);
  if (v17 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v9, v6, v18);
    v16 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v9, v16, 1, v18);
  sub_1BAAF770C(0x4F206E6F69746341, 0xEF4C5255206E6570, (uint64_t)v9, a2);
  sub_1BAA82448((uint64_t)v12);
  v20 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

uint64_t sub_1BAA823B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedCustomItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA823F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA82448(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedCustomItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 FeedWeather.location.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t FeedWeather.condition.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedWeather.conditionCode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t FeedWeather.conditionIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedWeather(0) + 28);
  v4 = sub_1BB87270C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedWeather.partOfDay.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedWeather(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedWeather.temperature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedWeather(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 36), a1, type metadata accessor for FeedWeather.Temperature);
}

uint64_t FeedWeather.forecastDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedWeather(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAA825B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA825E8 + 4 * byte_1BB8979E8[*v0]))(0x746E6572727563, 0xE700000000000000);
}

uint64_t sub_1BAA825E8()
{
  return 1751607656;
}

uint64_t sub_1BAA825F8()
{
  return 7827308;
}

uint64_t sub_1BAA82608()
{
  return 0x6B694C736C656566;
}

uint64_t sub_1BAA82624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA83EA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA82648()
{
  sub_1BAA82864();
  return sub_1BB874710();
}

uint64_t sub_1BAA82670()
{
  sub_1BAA82864();
  return sub_1BB87471C();
}

uint64_t FeedWeather.Temperature.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1BAA82CC8(0, &qword_1EF2AEA78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA82864();
  sub_1BB8746C8();
  v13 = 0;
  sub_1BA8425B0();
  sub_1BAA82D24(&qword_1EF2AEA88, MEMORY[0x1E0CAE340]);
  sub_1BB8741AC();
  if (!v1)
  {
    type metadata accessor for FeedWeather.Temperature(0);
    v12 = 1;
    sub_1BB8741AC();
    v11 = 2;
    sub_1BB8741AC();
    v10 = 3;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAA82864()
{
  unint64_t result;

  result = qword_1EF2AEA80;
  if (!qword_1EF2AEA80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897C18, &type metadata for FeedWeather.Temperature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEA80);
  }
  return result;
}

uint64_t FeedWeather.Temperature.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  _QWORD v32[2];
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  char v43;
  char v44;
  char v45;
  char v46;

  v34 = a2;
  sub_1BA8425B0();
  v37 = v3;
  v40 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)v32 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - v8;
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)v32 - v11;
  sub_1BAA82CC8(0, &qword_1EF2AEA90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v38 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v32 - v14;
  v16 = type metadata accessor for FeedWeather.Temperature(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA82864();
  v39 = v15;
  v19 = (uint64_t)v42;
  sub_1BB87468C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = v9;
  v33 = (int *)v16;
  v42 = a1;
  v21 = v18;
  v22 = v40;
  v46 = 0;
  sub_1BAA82D24(&qword_1EF2AEA98, MEMORY[0x1E0CAE358]);
  v23 = v37;
  v24 = v38;
  sub_1BB8740D4();
  v25 = *(char **)(v22 + 32);
  v26 = (uint64_t)v21;
  v27 = v41;
  v41 = v25;
  ((void (*)(char *, char *, uint64_t))v25)(v21, v27, v23);
  v45 = 1;
  sub_1BB8740D4();
  ((void (*)(char *, char *, uint64_t))v41)(&v21[v33[5]], v20, v23);
  v44 = 2;
  v28 = v36;
  v32[1] = 0;
  sub_1BB8740D4();
  v29 = v26;
  ((void (*)(uint64_t, char *, uint64_t))v41)(v26 + v33[6], v28, v23);
  v43 = 3;
  v30 = v35;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v39, v24);
  ((void (*)(uint64_t, char *, uint64_t))v41)(v29 + v33[7], v30, v23);
  sub_1BA4C2DD8(v29, v34, type metadata accessor for FeedWeather.Temperature);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_1BAA82D64(v29);
}

void sub_1BAA82CC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAA82864();
    v7 = a3(a1, &type metadata for FeedWeather.Temperature.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAA82D24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA8425B0();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAA82D64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedWeather.Temperature(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAA82DA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedWeather.Temperature.init(from:)(a1, a2);
}

uint64_t sub_1BAA82DB4(_QWORD *a1)
{
  return FeedWeather.Temperature.encode(to:)(a1);
}

uint64_t FeedWeather.init(location:condition:conditionCode:conditionIcon:forecastDescription:partOfDay:temperature:highTemperature:lowTemperature:feelsLikeTemperature:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  char v17;
  char v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v17 = *a4;
  v18 = *a8;
  *(_OWORD *)a9 = *a1;
  *(_QWORD *)(a9 + 16) = a2;
  *(_QWORD *)(a9 + 24) = a3;
  *(_BYTE *)(a9 + 32) = v17;
  v19 = (int *)type metadata accessor for FeedWeather(0);
  v20 = a9 + v19[7];
  v21 = sub_1BB87270C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a5, v21);
  v22 = (_QWORD *)(a9 + v19[10]);
  *v22 = a6;
  v22[1] = a7;
  *(_BYTE *)(a9 + v19[8]) = v18;
  v23 = a9 + v19[9];
  sub_1BA8425B0();
  v25 = v24;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v28(v23, a10, v24);
  v26 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v28(v23 + v26[5], a11, v25);
  v28(v23 + v26[6], a12, v25);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(v23 + v26[7], a13, v25);
}

uint64_t FeedWeather.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, type metadata accessor for FeedWeather);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BAA82F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, type metadata accessor for FeedWeather);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedWeather.identifier.getter()
{
  _QWORD *v0;

  sub_1BB872FF4();
  sub_1BB872AFC(v0);
  sub_1BB872FF4();
  return 0;
}

void FeedWeather.url.getter()
{
  double *v0;
  id v1;

  sub_1BA49A224(0, (unint64_t *)&qword_1ED3A3000);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, *v0, v0[1]);
  sub_1BB873570();

}

_QWORD *initializeBufferWithCopyOfBuffer for FeedWeather(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB87270C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v14 = (char *)v4 + v13;
    v15 = (uint64_t)a2 + v13;
    sub_1BA8425B0();
    v17 = v16;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18(v14, v15, v16);
    v19 = (int *)type metadata accessor for FeedWeather.Temperature(0);
    v18(&v14[v19[5]], v15 + v19[5], v17);
    v18(&v14[v19[6]], v15 + v19[6], v17);
    v18(&v14[v19[7]], v15 + v19[7], v17);
    v20 = a3[10];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FeedWeather(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1BB87270C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 36);
  sub_1BA8425B0();
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v9(v6 + v10[5], v8);
  v9(v6 + v10[6], v8);
  v9(v6 + v10[7], v8);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB87270C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  sub_1BA8425B0();
  v16 = v15;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17(v13, v14, v15);
  v18 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v17(v13 + v18[5], v14 + v18[5], v16);
  v17(v13 + v18[6], v14 + v18[6], v16);
  v17(v13 + v18[7], v14 + v18[7], v16);
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB87270C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  sub_1BA8425B0();
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v15(v11, v12, v13);
  v16 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v15(v11 + v16[5], v12 + v16[5], v14);
  v15(v11 + v16[6], v12 + v16[6], v14);
  v15(v11 + v16[7], v12 + v16[7], v14);
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  int *v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB87270C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1BA8425B0();
  v15 = v14;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v16(v12, v13, v14);
  v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v16(v12 + v17[5], v13 + v17[5], v15);
  v16(v12 + v17[6], v13 + v17[6], v15);
  v16(v12 + v17[7], v13 + v17[7], v15);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for FeedWeather(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB87270C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1BA8425B0();
  v15 = v14;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v16(v12, v13, v14);
  v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
  v16(v12 + v17[5], v13 + v17[5], v15);
  v16(v12 + v17[6], v13 + v17[6], v15);
  v16(v12 + v17[7], v13 + v17[7], v15);
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedWeather()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA83774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB87270C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = type metadata accessor for FeedWeather.Temperature(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedWeather()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA83820(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB87270C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = type metadata accessor for FeedWeather.Temperature(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedWeather.Temperature(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1BA8425B0();
    v8 = v7;
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v8);
    v9((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v8);
    v9((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v8);
  }
  return a1;
}

uint64_t destroy for FeedWeather.Temperature(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  sub_1BA8425B0();
  v5 = v4;
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v7(a1 + a2[5], v5);
  v7(a1 + a2[6], v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + a2[7], v5);
}

uint64_t initializeWithCopy for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  sub_1BA8425B0();
  v7 = v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t assignWithCopy for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  sub_1BA8425B0();
  v7 = v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t initializeWithTake for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  sub_1BA8425B0();
  v7 = v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t assignWithTake for FeedWeather.Temperature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  sub_1BA8425B0();
  v7 = v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v7);
  v8(a1 + a3[6], a2 + a3[6], v7);
  v8(a1 + a3[7], a2 + a3[7], v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedWeather.Temperature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA83C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA8425B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedWeather.Temperature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAA83CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA8425B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedWeather.Temperature.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAA83D50 + 4 * byte_1BB8979F1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAA83D84 + 4 * byte_1BB8979EC[v4]))();
}

uint64_t sub_1BAA83D84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA83D8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA83D94);
  return result;
}

uint64_t sub_1BAA83DA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA83DA8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAA83DAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA83DB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedWeather.Temperature.CodingKeys()
{
  return &type metadata for FeedWeather.Temperature.CodingKeys;
}

unint64_t sub_1BAA83DD4()
{
  unint64_t result;

  result = qword_1EF2AEAA0;
  if (!qword_1EF2AEAA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897BF0, &type metadata for FeedWeather.Temperature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAA0);
  }
  return result;
}

unint64_t sub_1BAA83E1C()
{
  unint64_t result;

  result = qword_1EF2AEAA8;
  if (!qword_1EF2AEAA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897B60, &type metadata for FeedWeather.Temperature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAA8);
  }
  return result;
}

unint64_t sub_1BAA83E64()
{
  unint64_t result;

  result = qword_1EF2AEAB0;
  if (!qword_1EF2AEAB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897B88, &type metadata for FeedWeather.Temperature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAB0);
  }
  return result;
}

uint64_t sub_1BAA83EA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1751607656 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7827308 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B694C736C656566 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

_QWORD *assignWithCopy for FormatButtonNodeStateMaskDataLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatButtonNodeStateMaskDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedBlobEntity()
{
  return &type metadata for FeedBlobEntity;
}

uint64_t sub_1BAA8411C()
{
  if (qword_1EF2A6C98 != -1)
    swift_once();
  qword_1EF3D0530 = qword_1EF2AC7F0;
  *(_QWORD *)algn_1EF3D0538 = *(_QWORD *)algn_1EF2AC7F8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA8416C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v15 = a4;
  v16 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2AEAD8, (uint64_t (*)(void))sub_1BAA85230, (uint64_t)&type metadata for FeedBlobEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA85230();
  sub_1BB8746C8();
  v18 = a2;
  v17 = 0;
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  sub_1BAA0C020((unint64_t *)&qword_1EF2AD4A0, MEMORY[0x1E0DB2990]);
  sub_1BB8741AC();
  if (!v4)
  {
    v12 = v15;
    v18 = v16;
    v17 = 1;
    sub_1BB8741AC();
    v18 = v12;
    v17 = 2;
    sub_1BA4CDF6C(0, &qword_1ED39A660, (uint64_t (*)(void))sub_1BA534308, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BAA85274(&qword_1EF2AEAE0, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BAA84368()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6449726F73727563;
  if (*v0 != 1)
    v1 = 1635017060;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1BAA843B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA84B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA843D4()
{
  sub_1BAA85230();
  return sub_1BB874710();
}

uint64_t sub_1BAA843FC()
{
  sub_1BAA85230();
  return sub_1BB87471C();
}

uint64_t sub_1BAA84424()
{
  uint64_t v0;

  if (qword_1EF2A6CD0 != -1)
    swift_once();
  v0 = qword_1EF3D0530;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BAA84480()
{
  sub_1BA5C6DD8();
  return sub_1BB86F004();
}

uint64_t sub_1BAA844B8()
{
  sub_1BA5C6DD8();
  return sub_1BB86F01C();
}

uint64_t sub_1BAA844F0()
{
  sub_1BA5C6DD8();
  return sub_1BB86F010();
}

_QWORD *sub_1BAA84540@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1BAA84C60(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1BAA8456C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BAA8416C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1BAA84588()
{
  sub_1BA5C6DD8();
  return sub_1BB86F040();
}

uint64_t sub_1BAA845C0()
{
  sub_1BA5C6DD8();
  return sub_1BB86F034();
}

uint64_t sub_1BAA84600()
{
  sub_1BA5C6DD8();
  return sub_1BB86F028();
}

unint64_t sub_1BAA84658()
{
  unint64_t result;

  result = qword_1EF2AEAB8;
  if (!qword_1EF2AEAB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897DCC, &type metadata for FeedBlobEntity);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAB8);
  }
  return result;
}

uint64_t sub_1BAA8469C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v33 = a5;
  v34 = a6;
  v31 = a3;
  v32 = a4;
  v29 = a1;
  v30 = a2;
  sub_1BA534294();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  sub_1BA534230();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - v16;
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20(v17, 1, 1, v18);
  v20(v14, 1, 1, v19);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v21 = sub_1BB86F058();
  v20(v17, 1, 1, v19);
  v20(v14, 1, 1, v19);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  sub_1BB86F058();
  v22 = MEMORY[0x1E0CB0338];
  sub_1BA4CDF6C(0, &qword_1ED39A698, (uint64_t (*)(void))sub_1BA534308, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v25(v11, 1, 1, v23);
  v25(v8, 1, 1, v24);
  sub_1BA4CDF6C(0, &qword_1ED39A6F8, (uint64_t (*)(void))sub_1BA534308, v22, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA4CDF6C(0, &qword_1ED39A660, (uint64_t (*)(void))sub_1BA534308, v22, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  sub_1BB86F058();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  v35 = v29;
  v36 = v30;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  v35 = v31;
  v36 = v32;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  v27 = v33;
  v26 = v34;
  v35 = v33;
  v36 = v34;
  sub_1BA69D44C(v33, v34);
  sub_1BB86F238();
  sub_1BA69D314(v27, v26);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v21;
}

uint64_t sub_1BAA84B34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449726F73727563 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_1BAA84C60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v32 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2AEAC0, (uint64_t (*)(void))sub_1BAA85230, (uint64_t)&type metadata for FeedBlobEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  MEMORY[0x1E0C80A78](v1);
  v33 = (char *)&v29 - v2;
  sub_1BA534294();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  sub_1BA534230();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  sub_1BA5AA31C(0, &qword_1ED39A6C8, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2C88]);
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v17(v14, 1, 1, v15);
  v17(v11, 1, 1, v16);
  sub_1BA5AA31C(0, &qword_1ED39A708, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA5AA31C(0, &qword_1ED39A670, (uint64_t (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v35 = sub_1BB86F058();
  v17(v14, 1, 1, v16);
  v17(v11, 1, 1, v16);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v31 = sub_1BB86F058();
  v18 = MEMORY[0x1E0CB0338];
  sub_1BA4CDF6C(0, &qword_1ED39A698, (uint64_t (*)(void))sub_1BA534308, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v21(v8, 1, 1, v19);
  v21(v5, 1, 1, v20);
  v22 = v32;
  sub_1BA4CDF6C(0, &qword_1ED39A6F8, (uint64_t (*)(void))sub_1BA534308, v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA4CDF6C(0, &qword_1ED39A660, (uint64_t (*)(void))sub_1BA534308, v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  sub_1BB86F058();
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  sub_1BAA85230();
  v23 = v34;
  v24 = v33;
  sub_1BB87468C();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    swift_release();
    swift_release();
  }
  else
  {
    v36 = 0;
    sub_1BAA0C020((unint64_t *)&qword_1EF2AD468, MEMORY[0x1E0DB2998]);
    v25 = v30;
    sub_1BB8740D4();
    swift_release();
    v36 = 1;
    v35 = v37;
    swift_retain();
    sub_1BB8740D4();
    v27 = (_QWORD *)v35;
    swift_release();
    v36 = 2;
    sub_1BAA85274(&qword_1EF2AEAD0, MEMORY[0x1E0DB2998]);
    swift_retain();
    sub_1BB8740D4();
    v28 = v29;
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v25);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    swift_release();
    swift_release();
    v22 = v27;
  }
  swift_release();
  return v22;
}

unint64_t sub_1BAA85230()
{
  unint64_t result;

  result = qword_1EF2AEAC8;
  if (!qword_1EF2AEAC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897F20, &type metadata for FeedBlobEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAC8);
  }
  return result;
}

uint64_t sub_1BAA85274(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, &qword_1ED39A660, (uint64_t (*)(void))sub_1BA534308, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedBlobEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAA85320 + 4 * byte_1BB897C6D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAA85354 + 4 * byte_1BB897C68[v4]))();
}

uint64_t sub_1BAA85354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA8535C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA85364);
  return result;
}

uint64_t sub_1BAA85370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA85378);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAA8537C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA85384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedBlobEntity.CodingKeys()
{
  return &type metadata for FeedBlobEntity.CodingKeys;
}

unint64_t sub_1BAA853A4()
{
  unint64_t result;

  result = qword_1EF2AEAE8;
  if (!qword_1EF2AEAE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897EF8, &type metadata for FeedBlobEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAE8);
  }
  return result;
}

unint64_t sub_1BAA853EC()
{
  unint64_t result;

  result = qword_1EF2AEAF0;
  if (!qword_1EF2AEAF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897E68, &type metadata for FeedBlobEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAF0);
  }
  return result;
}

unint64_t sub_1BAA85434()
{
  unint64_t result;

  result = qword_1EF2AEAF8;
  if (!qword_1EF2AEAF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB897E90, &type metadata for FeedBlobEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEAF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding()
{
  return &type metadata for FormatWeatherBinding;
}

_QWORD *sub_1BAA85488(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;
  _QWORD v21[4];
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  char v25;
  _OWORD v26[2];
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  v23 = a2;
  v5 = sub_1BA89F4EC((void (*)(char *))sub_1BAA8575C, (uint64_t)v22, (uint64_t)&unk_1E724F910);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v5, v26);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v6 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(v6 + 48) = v27;
  v7 = v26[1];
  *(_OWORD *)(v6 + 16) = v26[0];
  *(_OWORD *)(v6 + 32) = v7;
  v21[2] = a2;
  v21[3] = a1;
  v8 = sub_1BB141BC4((void (*)(_QWORD))sub_1BAA857AC, (uint64_t)v21, (uint64_t)&unk_1E724F938);
  sub_1BAF89090(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v8, v28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v9 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(v9 + 48) = v29;
  v10 = v28[1];
  *(_OWORD *)(v9 + 16) = v28[0];
  *(_OWORD *)(v9 + 32) = v10;
  sub_1BB11B800(a2, (uint64_t)v30);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v11;
  *(_QWORD *)(v11 + 48) = v31;
  v12 = v30[1];
  *(_OWORD *)(v11 + 16) = v30[0];
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)&v32[0] = MEMORY[0x1E0DEE9D8];
  v13 = 7;
  v14 = &byte_1E724F908;
  do
  {
    v15 = *v14++;
    v25 = v15;
    sub_1BB017F98((uint64_t)&v25, a2, a1, (uint64_t)&v24);
    sub_1BB383BA8(v24);
    --v13;
  }
  while (v13);
  v16 = sub_1BA97461C(*(uint64_t *)&v32[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v16, v32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 184) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 152) = v17;
  *(_QWORD *)(v17 + 48) = v33;
  v18 = v32[1];
  *(_OWORD *)(v17 + 16) = v32[0];
  *(_OWORD *)(v17 + 32) = v18;
  v19 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v19;
}

uint64_t sub_1BAA8575C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BAB54B2C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BAA85778()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA857AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB1F4C20(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for DebugInspectionDataSection()
{
  return &type metadata for DebugInspectionDataSection;
}

uint64_t sub_1BAA857D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  sub_1BAA8583C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v4;
}

void sub_1BAA8583C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1500)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1500);
  }
}

uint64_t sub_1BAA85890()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA85898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  __int128 v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BAA85C4C(v2, (uint64_t)v38);
      sub_1BAA85C4C((uint64_t)v38, (uint64_t)v35);
      v4 = v36;
      if (v36)
      {
        v5 = v37;
        __swift_project_boxed_opaque_existential_1(v35, v36);
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
        sub_1BAA85D38((uint64_t)v38);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1BB39086C(0, v3[2] + 1, 1, v3);
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
          v3 = sub_1BB39086C((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
        v3[2] = v8 + 1;
        v3[v8 + 4] = v6;
      }
      else
      {
        sub_1BAA85D38((uint64_t)v35);
        sub_1BAA85D38((uint64_t)v38);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    v9 = v3[2];
    if (v9)
      goto LABEL_12;
LABEL_35:
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_36:
    swift_bridgeObjectRelease();
    v24 = v11[2];
    if (v24)
    {
      v25 = v11 + 5;
      v26 = MEMORY[0x1E0DEE9D8];
      do
      {
        if (*(_QWORD *)(v25[1] + 16))
        {
          v31 = *(v25 - 1);
          v34 = *(_OWORD *)v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v38[0] = v26;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1BAC7A87C(0, *(_QWORD *)(v26 + 16) + 1, 1);
            v26 = v38[0];
          }
          v28 = *(_QWORD *)(v26 + 16);
          v27 = *(_QWORD *)(v26 + 24);
          v29 = v34;
          if (v28 >= v27 >> 1)
          {
            sub_1BAC7A87C(v27 > 1, v28 + 1, 1);
            v29 = v34;
            v26 = v38[0];
          }
          *(_QWORD *)(v26 + 16) = v28 + 1;
          v30 = v26 + 24 * v28;
          *(_QWORD *)(v30 + 32) = v31;
          *(_OWORD *)(v30 + 40) = v29;
        }
        v25 += 3;
        --v24;
      }
      while (v24);
    }
    else
    {
      v26 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    return v26;
  }
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v9)
    goto LABEL_35;
LABEL_12:
  swift_bridgeObjectRetain();
  v10 = 0;
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v12 = v3[v10 + 4];
    v13 = *(_QWORD *)(v12 + 16);
    v14 = v11[2];
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      break;
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)v16 && v15 <= v11[3] >> 1)
    {
      if (*(_QWORD *)(v12 + 16))
        goto LABEL_24;
    }
    else
    {
      if (v14 <= v15)
        v17 = v14 + v13;
      else
        v17 = v14;
      v11 = sub_1BB390858(v16, v17, 1, v11);
      if (*(_QWORD *)(v12 + 16))
      {
LABEL_24:
        v18 = v11[2];
        if ((v11[3] >> 1) - v18 < v13)
          goto LABEL_49;
        v19 = (unint64_t)&v11[3 * v18 + 4];
        if (v12 + 32 < v19 + 24 * v13 && v19 < v12 + 32 + 24 * v13)
          goto LABEL_51;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v21 = v11[2];
          v22 = __OFADD__(v21, v13);
          v23 = v21 + v13;
          if (v22)
            goto LABEL_50;
          v11[2] = v23;
        }
        goto LABEL_14;
      }
    }
    if (v13)
      goto LABEL_48;
LABEL_14:
    ++v10;
    swift_bridgeObjectRelease();
    if (v9 == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA85C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA85C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAA85C90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AEB00)
  {
    sub_1BAA85CE4();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AEB00);
  }
}

unint64_t sub_1BAA85CE4()
{
  unint64_t result;

  result = qword_1EF2C2460;
  if (!qword_1EF2C2460)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2C2460);
  }
  return result;
}

uint64_t sub_1BAA85D38(uint64_t a1)
{
  uint64_t v2;

  sub_1BAA85C90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectionDataSource()
{
  return &type metadata for DebugInspectionDataSource;
}

void destroy for DebugInspectionDataItem(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 2)
  {
    if (*(_DWORD *)a1 == -1)
      goto LABEL_3;
  }
  else if (v2 == 1)
  {
LABEL_3:

    return;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for DebugInspectionDataItem(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 >= 2)
  {
    if (*(_DWORD *)a2 == -1)
      goto LABEL_3;
  }
  else if (v4 == 1)
  {
LABEL_3:
    v5 = *a2;
    v6 = (id)*a2;
    *(_QWORD *)a1 = v5;
    v7 = 1;
    goto LABEL_8;
  }
  v8 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v8;
  v9 = a2 + 2;
  v10 = a2[5];
  swift_bridgeObjectRetain();
  if (v10)
  {
    v11 = a2[6];
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 16, (uint64_t)(a2 + 2), v10);
    v7 = 0;
  }
  else
  {
    v7 = 0;
    v12 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *v9;
    *(_OWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 48) = a2[6];
  }
LABEL_8:
  *(_BYTE *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugInspectionDataItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

    }
    else
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(void **)a2;
      v7 = v6;
      *(_QWORD *)a1 = v6;
      v8 = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v9 = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v9)
      {
        *(_QWORD *)(a1 + 40) = v9;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
        v8 = 0;
      }
      else
      {
        v8 = 0;
        v10 = *(_OWORD *)(a2 + 16);
        v11 = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 16) = v10;
        *(_OWORD *)(a1 + 32) = v11;
      }
    }
    *(_BYTE *)(a1 + 56) = v8;
  }
  return a1;
}

uint64_t assignWithTake for DebugInspectionDataItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

    }
    else
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionDataItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugInspectionDataItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAA8611C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1BAA86138(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionDataItem()
{
  return &type metadata for DebugInspectionDataItem;
}

uint64_t dispatch thunk of FeedWeatherServiceType.weather(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1BAA8617C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BAA861B8 + 4 * byte_1BB898050[a1]))(0xD000000000000025, 0x80000001BB969830);
}

uint64_t sub_1BAA861B8()
{
  uint64_t v0;

  return v0 + 19;
}

unint64_t sub_1BAA861F0()
{
  return 0xD000000000000015;
}

uint64_t sub_1BAA8620C()
{
  unsigned __int8 *v0;

  return sub_1BAA8617C(*v0);
}

uint64_t sub_1BAA86214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA8AA48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA86238()
{
  sub_1BAA870B8();
  return sub_1BB874710();
}

uint64_t sub_1BAA86260()
{
  sub_1BAA870B8();
  return sub_1BB87471C();
}

uint64_t sub_1BAA86288()
{
  sub_1BAA86F6C();
  return sub_1BB874710();
}

uint64_t sub_1BAA862B0()
{
  sub_1BAA86F6C();
  return sub_1BB87471C();
}

uint64_t sub_1BAA862D8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x65676175676E616CLL;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 12383;
}

uint64_t sub_1BAA8632C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA8AC3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA86350()
{
  sub_1BAA86FB0();
  return sub_1BB874710();
}

uint64_t sub_1BAA86378()
{
  sub_1BAA86FB0();
  return sub_1BB87471C();
}

uint64_t sub_1BAA863A0()
{
  sub_1BAA86FF4();
  return sub_1BB874710();
}

uint64_t sub_1BAA863C8()
{
  sub_1BAA86FF4();
  return sub_1BB87471C();
}

uint64_t sub_1BAA863F0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6D6E6F7269766E65;
}

uint64_t sub_1BAA86438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA8AD74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA8645C()
{
  sub_1BAA87038();
  return sub_1BB874710();
}

uint64_t sub_1BAA86484()
{
  sub_1BAA87038();
  return sub_1BB87471C();
}

uint64_t sub_1BAA864AC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 12383;
}

uint64_t sub_1BAA864E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAA8AE78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAA86504()
{
  sub_1BAA86F28();
  return sub_1BB874710();
}

uint64_t sub_1BAA8652C()
{
  sub_1BAA86F28();
  return sub_1BB87471C();
}

void FormatDerivedDataWarningError.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[8];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1EF2AEB08, (uint64_t (*)(void))sub_1BAA86F28, (uint64_t)&type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v26 = v3;
  v18[4] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)v18 - v4;
  v19 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AEB18, (uint64_t (*)(void))sub_1BAA86F6C, (uint64_t)&type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys, v2);
  v21 = v6;
  v18[2] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v20 = (char *)v18 - v7;
  sub_1BA4CDF6C(0, &qword_1EF2AEB28, (uint64_t (*)(void))sub_1BAA86FB0, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys, v2);
  v23 = v8;
  v18[3] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v22 = (char *)v18 - v9;
  sub_1BA4CDF6C(0, &qword_1EF2AEB38, (uint64_t (*)(void))sub_1BAA86FF4, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys, v2);
  v18[7] = v10;
  v18[1] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v18[6] = (char *)v18 - v11;
  sub_1BA4CDF6C(0, &qword_1EF2AEB48, (uint64_t (*)(void))sub_1BAA87038, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys, v2);
  v18[5] = v12;
  v18[0] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AEB58, (uint64_t (*)(void))sub_1BAA870B8, (uint64_t)&type metadata for FormatDerivedDataWarningError.CodingKeys, v2);
  v29 = v16;
  v27 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAA870B8();
  sub_1BB8746C8();
  sub_1BA4C2DD8(v28, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
  v17 = (char *)sub_1BAA86878 + 4 * byte_1BB898055[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA86878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *v2;
  *(_BYTE *)(v3 - 72) = 0;
  sub_1BAA87038();
  v5 = *(_QWORD *)(v3 - 104);
  v6 = v0;
  sub_1BB874110();
  *(_QWORD *)(v3 - 72) = v4;
  *(_BYTE *)(v3 - 89) = 0;
  sub_1BA6D249C();
  sub_1BA585B78((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v7 = *(_QWORD *)(v3 - 216);
  v8 = *(_QWORD *)(v3 - 120);
  sub_1BB8741AC();
  swift_bridgeObjectRelease();
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8))(v1, v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v6, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_BYTE *)(v3 - 72) = 1;
    sub_1BB87417C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8))(v1, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v6, v5);
  }
}

unint64_t sub_1BAA86F28()
{
  unint64_t result;

  result = qword_1EF2AEB10;
  if (!qword_1EF2AEB10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8988D0, &type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEB10);
  }
  return result;
}

unint64_t sub_1BAA86F6C()
{
  unint64_t result;

  result = qword_1EF2AEB20;
  if (!qword_1EF2AEB20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898880, &type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEB20);
  }
  return result;
}

unint64_t sub_1BAA86FB0()
{
  unint64_t result;

  result = qword_1EF2AEB30;
  if (!qword_1EF2AEB30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898830, &type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEB30);
  }
  return result;
}

unint64_t sub_1BAA86FF4()
{
  unint64_t result;

  result = qword_1EF2AEB40;
  if (!qword_1EF2AEB40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8987E0, &type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEB40);
  }
  return result;
}

unint64_t sub_1BAA87038()
{
  unint64_t result;

  result = qword_1EF2AEB50;
  if (!qword_1EF2AEB50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898790, &type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEB50);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataWarningError()
{
  uint64_t result;

  result = qword_1EF2AEC28;
  if (!qword_1EF2AEC28)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BAA870B8()
{
  unint64_t result;

  result = qword_1EF2AEB60;
  if (!qword_1EF2AEB60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898740, &type metadata for FormatDerivedDataWarningError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEB60);
  }
  return result;
}

void sub_1BAA870FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AEB68)
  {
    type metadata accessor for FormatDeprecationWarning(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AEB68);
  }
}

uint64_t FormatDerivedDataWarningError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  char *v42;
  _QWORD v44[18];
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;

  v44[5] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1EF2AEB78, (uint64_t (*)(void))sub_1BAA86F28, (uint64_t)&type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v44[13] = v4;
  v44[9] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)v44 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2AEB80, (uint64_t (*)(void))sub_1BAA86F6C, (uint64_t)&type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys, v3);
  v44[14] = v6;
  v44[8] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)v44 - v7;
  sub_1BA4CDF6C(0, &qword_1EF2AEB88, (uint64_t (*)(void))sub_1BAA86FB0, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys, v3);
  v44[15] = v8;
  v44[6] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v44 - v9;
  sub_1BA4CDF6C(0, &qword_1EF2AEB90, (uint64_t (*)(void))sub_1BAA86FF4, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys, v3);
  v44[12] = v10;
  v44[7] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)v44 - v11;
  sub_1BA4CDF6C(0, &qword_1EF2AEB98, (uint64_t (*)(void))sub_1BAA87038, (uint64_t)&type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys, v3);
  v44[11] = v12;
  v44[17] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v44[16] = (char *)v44 - v13;
  sub_1BA4CDF6C(0, &qword_1EF2AEBA0, (uint64_t (*)(void))sub_1BAA870B8, (uint64_t)&type metadata for FormatDerivedDataWarningError.CodingKeys, v3);
  v15 = *(_QWORD *)(v14 - 8);
  v50 = v14;
  v51 = v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v44 - v16;
  v45 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1E0C80A78](v45);
  v44[10] = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v44 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v44 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v44 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v44 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v44 - v32;
  v34 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v34);
  sub_1BAA870B8();
  v52 = v17;
  v35 = v54;
  sub_1BB87468C();
  if (!v35)
  {
    v44[1] = v30;
    v44[2] = v27;
    v44[3] = v21;
    v44[0] = v24;
    v54 = 0;
    v44[4] = v33;
    v36 = v50;
    v37 = sub_1BB8740EC();
    if (*(_QWORD *)(v37 + 16) == 1)
      __asm { BR              X10 }
    v38 = sub_1BB873D68();
    swift_allocError();
    v39 = v36;
    v41 = v40;
    sub_1BA909FB4();
    *v41 = v45;
    v42 = v52;
    sub_1BB874008();
    sub_1BB873D38();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v41, *MEMORY[0x1E0DEC450], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v39);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t sub_1BAA87E08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDerivedDataWarningError.init(from:)(a1, a2);
}

void sub_1BAA87E1C(_QWORD *a1)
{
  FormatDerivedDataWarningError.encode(to:)(a1);
}

void FormatDerivedDataWarningError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BAA87EF8 + 4 * byte_1BB89805F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA87EF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 64) = 0;
  *(_QWORD *)(v1 - 56) = 0xE000000000000000;
  sub_1BB873CB4();
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 72) = v3;
  v4 = sub_1BB87420C();
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 64) = v4;
  *(_QWORD *)(v1 - 56) = v6;
  sub_1BB872AFC("ations entries for strings");
  return *(_QWORD *)(v1 - 64);
}

void FormatDerivedDataWarningError.errorHint.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BAA88C60();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatDeprecationWarning(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatDerivedDataWarningError();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_1BAA882B0 + 4 * word_1BB898064[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA882B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = *v0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 96) = 0;
  *(_QWORD *)(v1 - 88) = 0xE000000000000000;
  sub_1BB873CB4();
  v3 = *(_QWORD *)(v1 - 88);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 88) = v3;
  sub_1BB872AFC("tions for strings:\n\n");
  *(_QWORD *)(v1 - 128) = v2;
  swift_bridgeObjectRetain();
  sub_1BAA88BF8((uint64_t *)(v1 - 128));
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 - 128);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    *(_QWORD *)(v1 - 112) = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v5, 0);
    v6 = *(_QWORD *)(v1 - 112);
    *(_QWORD *)(v1 - 136) = v4;
    v7 = v4 + 40;
    do
    {
      *(_QWORD *)(v1 - 128) = 547520738;
      *(_QWORD *)(v1 - 120) = 0xA400000000000000;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v8);
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v1 - 128);
      v10 = *(_QWORD *)(v1 - 120);
      *(_QWORD *)(v1 - 112) = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BA7447E8(v11 > 1, v12 + 1, 1);
        v6 = *(_QWORD *)(v1 - 112);
      }
      v7 += 16;
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = v6 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      --v5;
    }
    while (v5);
    swift_release();
  }
  else
  {
    swift_release();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v1 - 128) = v6;
  sub_1BA6D249C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B95D0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v14);
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 96);
}

uint64_t sub_1BAA88BF8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA67FB34(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BAA89FFC(v5);
  *a1 = v2;
  return result;
}

void sub_1BAA88C60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2ACD68)
  {
    sub_1BB86DE58();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2ACD68);
  }
}

uint64_t sub_1BAA88CB4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AEBB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataWarningError, (uint64_t)&protocol conformance descriptor for FormatDerivedDataWarningError);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatDerivedDataWarningError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BAA88D4C + 4 * byte_1BB89806E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for FormatDerivedDataWarningError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      v3 = sub_1BB86EB84();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = type metadata accessor for FormatDeprecationWarning(0);
      v4(a1 + *(int *)(v5 + 20), v3);
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(v5 + 28);
      v7 = sub_1BB86DE58();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      swift_bridgeObjectRelease();
      sub_1BAA870FC();
LABEL_7:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for FormatDerivedDataWarningError()
{
  char *v0;

  v0 = (char *)sub_1BAA89114 + 4 * byte_1BB898078[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BAA89114(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v22[2] = v23[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v22;
}

uint64_t assignWithCopy for FormatDerivedDataWarningError(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
    v2 = (char *)&loc_1BAA89314 + 4 * byte_1BB89807D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for FormatDerivedDataWarningError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v6 = sub_1BB86EB84();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for FormatDeprecationWarning(0);
    v7(&a1[v8[5]], &a2[v8[5]], v6);
    *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
    v9 = v8[7];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_1BB86DE58();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1BAA88C60();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
    sub_1BAA870FC();
    *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatDerivedDataWarningError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v6 = sub_1BB86EB84();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for FormatDeprecationWarning(0);
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_1BB86DE58();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BAA88C60();
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      sub_1BAA870FC();
      *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BAA897C4()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char *v7;

  v3 = &unk_1BB898170;
  v4 = &unk_1BB898170;
  v5 = &unk_1BB898188;
  v6 = &unk_1BB898170;
  result = type metadata accessor for FormatDeprecationWarning(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataWarningError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAA898A0 + 4 * byte_1BB898087[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAA898D4 + 4 * byte_1BB898082[v4]))();
}

uint64_t sub_1BAA898D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA898DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA898E4);
  return result;
}

uint64_t sub_1BAA898F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA898F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAA898FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA89904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.CodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAA89990 + 4 * byte_1BB898091[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAA899C4 + 4 * byte_1BB89808C[v4]))();
}

uint64_t sub_1BAA899C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA899CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA899D4);
  return result;
}

uint64_t sub_1BAA899E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA899E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAA899EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA899F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys;
}

uint64_t _s8NewsFeed29FormatDerivedDataWarningErrorO47MissingNewsroomEnvironmentsIdentifierCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAA89A6C + 4 * byte_1BB89809B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAA89AA0 + 4 * byte_1BB898096[v4]))();
}

uint64_t sub_1BAA89AA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA89AA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAA89AB0);
  return result;
}

uint64_t sub_1BAA89ABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAA89AC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAA89AC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAA89AD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys()
{
  return &type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys;
}

unint64_t sub_1BAA89AF0()
{
  unint64_t result;

  result = qword_1EF2AEC60;
  if (!qword_1EF2AEC60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898380, &type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC60);
  }
  return result;
}

unint64_t sub_1BAA89B38()
{
  unint64_t result;

  result = qword_1EF2AEC68;
  if (!qword_1EF2AEC68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898438, &type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC68);
  }
  return result;
}

unint64_t sub_1BAA89B80()
{
  unint64_t result;

  result = qword_1EF2AEC70;
  if (!qword_1EF2AEC70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8984F0, &type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC70);
  }
  return result;
}

unint64_t sub_1BAA89BC8()
{
  unint64_t result;

  result = qword_1EF2AEC78;
  if (!qword_1EF2AEC78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8985A8, &type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC78);
  }
  return result;
}

unint64_t sub_1BAA89C10()
{
  unint64_t result;

  result = qword_1EF2AEC80;
  if (!qword_1EF2AEC80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898660, &type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC80);
  }
  return result;
}

unint64_t sub_1BAA89C58()
{
  unint64_t result;

  result = qword_1EF2AEC88;
  if (!qword_1EF2AEC88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898718, &type metadata for FormatDerivedDataWarningError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC88);
  }
  return result;
}

unint64_t sub_1BAA89CA0()
{
  unint64_t result;

  result = qword_1EF2AEC90;
  if (!qword_1EF2AEC90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898688, &type metadata for FormatDerivedDataWarningError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC90);
  }
  return result;
}

unint64_t sub_1BAA89CE8()
{
  unint64_t result;

  result = qword_1EF2AEC98;
  if (!qword_1EF2AEC98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8986B0, &type metadata for FormatDerivedDataWarningError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AEC98);
  }
  return result;
}

unint64_t sub_1BAA89D30()
{
  unint64_t result;

  result = qword_1EF2AECA0;
  if (!qword_1EF2AECA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8985D0, &type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECA0);
  }
  return result;
}

unint64_t sub_1BAA89D78()
{
  unint64_t result;

  result = qword_1EF2AECA8;
  if (!qword_1EF2AECA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8985F8, &type metadata for FormatDerivedDataWarningError.MissingNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECA8);
  }
  return result;
}

unint64_t sub_1BAA89DC0()
{
  unint64_t result;

  result = qword_1EF2AECB0;
  if (!qword_1EF2AECB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898518, &type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECB0);
  }
  return result;
}

unint64_t sub_1BAA89E08()
{
  unint64_t result;

  result = qword_1EF2AECB8;
  if (!qword_1EF2AECB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898540, &type metadata for FormatDerivedDataWarningError.MissingLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECB8);
  }
  return result;
}

unint64_t sub_1BAA89E50()
{
  unint64_t result;

  result = qword_1EF2AECC0;
  if (!qword_1EF2AECC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898460, &type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECC0);
  }
  return result;
}

unint64_t sub_1BAA89E98()
{
  unint64_t result;

  result = qword_1EF2AECC8;
  if (!qword_1EF2AECC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898488, &type metadata for FormatDerivedDataWarningError.MissingLanguageLocalizationsForStringIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECC8);
  }
  return result;
}

unint64_t sub_1BAA89EE0()
{
  unint64_t result;

  result = qword_1EF2AECD0;
  if (!qword_1EF2AECD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8983A8, &type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECD0);
  }
  return result;
}

unint64_t sub_1BAA89F28()
{
  unint64_t result;

  result = qword_1EF2AECD8;
  if (!qword_1EF2AECD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8983D0, &type metadata for FormatDerivedDataWarningError.MalformedNewsroomEnvironmentsIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECD8);
  }
  return result;
}

unint64_t sub_1BAA89F70()
{
  unint64_t result;

  result = qword_1EF2AECE0;
  if (!qword_1EF2AECE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8982F0, &type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECE0);
  }
  return result;
}

unint64_t sub_1BAA89FB8()
{
  unint64_t result;

  result = qword_1EF2AECE8;
  if (!qword_1EF2AECE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB898318, &type metadata for FormatDerivedDataWarningError.UsedDeprecatedFeatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AECE8);
  }
  return result;
}

uint64_t sub_1BAA89FFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BAA8A6E4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BAA8A7B0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BACAB464((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BB874398();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BB874398()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BACAA368((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BAA8A7B0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = *(v38 - 2) == v35 && *(v38 - 1) == v36;
          if (v39 || (sub_1BB874398() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BAA8A6E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    v10 = *v9;
    v11 = v9[1];
    v12 = v6;
    v13 = (_QWORD *)v8;
    while (1)
    {
      result = *(v13 - 2);
      v14 = result == v10 && *(v13 - 1) == v11;
      if (v14 || (result = sub_1BB874398(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v10 = *v13;
      v11 = v13[1];
      *(_OWORD *)v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA8A7B0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = v21 == *((_QWORD *)v17 - 2) && v22 == *((_QWORD *)v17 - 1);
          if (v23 || (sub_1BB874398() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v4 == *(_QWORD *)v6 && *((_QWORD *)v4 + 1) == *((_QWORD *)v6 + 1);
        if (v15 || (sub_1BB874398() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BACAA47C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA8AA48(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000025 && a2 == 0x80000001BB969830 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001BB969860 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x80000001BB969890 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001BB9698D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB969900)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAA8AC3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB969810)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAA8AD74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEC00000073746E65;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB969810)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAA8AE78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB969810)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t static CoverChannelViewLayout.make18ColumnCatalogLayout(context:factories:options:)(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];
  uint64_t v8;

  v2 = sub_1BB86DA38();
  v3 = MEMORY[0x1E0C80A78](v2);
  v8 = a1;
  (*(void (**)(_BYTE *, _QWORD, double))(v5 + 104))(&v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB6208], v3);
  sub_1BAA8C384(0, (unint64_t *)&qword_1EF2AECF0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  return sub_1BB86DB34();
}

void sub_1BAA8B01C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  id v18;
  double v19;
  uint64_t (*v20)(void);
  _BYTE v21[16];
  double v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  double v26;
  uint64_t v27;
  CGRect v28;

  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v21[-v7];
  v9 = a2[23];
  v10 = a2[24];
  __swift_project_boxed_opaque_existential_1(a2 + 20, v9);
  v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  v12 = a2[23];
  v13 = a2[24];
  __swift_project_boxed_opaque_existential_1(a2 + 20, v12);
  v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
  v15 = v11 + v14 + v14;
  v16 = (void *)sub_1BAA8C224((uint64_t)a2);
  if ((a2[9] & 1) != 0)
    v17 = 0.0;
  else
    v17 = 20.0;
  v18 = v16;
  sub_1BB87363C();
  objc_msgSend(v18, sel_boundingRectWithSize_options_context_, 35, 0);
  v19 = v17 + v15 + 20.0 + CGRectGetWidth(v28) + 10.0;
  v27 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6410], v5);
  v22 = v19;
  v23 = a2;
  v24 = 0x4024000000000000;
  v25 = v18;
  v26 = v17;
  v20 = MEMORY[0x1E0DB5DD0];
  sub_1BAA8C384(0, &qword_1EF2AED10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAA8C400(&qword_1EF2AED18, &qword_1EF2AED10, (uint64_t (*)(uint64_t, _QWORD *))v20, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);

}

void sub_1BAA8B230(uint64_t a1)
{
  uint64_t v1;

  sub_1BAA8B01C(a1, *(_QWORD **)(v1 + 16));
}

unint64_t sub_1BAA8B238()
{
  unint64_t result;

  result = qword_1EF2AECF8;
  if (!qword_1EF2AECF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverChannelViewLayout, &type metadata for CoverChannelViewLayout);
    atomic_store(result, (unint64_t *)&qword_1EF2AECF8);
  }
  return result;
}

unint64_t sub_1BAA8B27C()
{
  unint64_t result;

  result = qword_1EF2AED00;
  if (!qword_1EF2AED00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverChannelViewLayout.Attributes, &type metadata for CoverChannelViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AED00);
  }
  return result;
}

uint64_t sub_1BAA8B2C0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v18)(uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  void (*v33)(uint64_t *, _QWORD, uint64_t);
  uint64_t v34;
  void (*v36)(uint64_t *, _QWORD, uint64_t);
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  uint64_t v47;

  v40 = a2;
  v41 = a3;
  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v36 - v13);
  v47 = a1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0x4024000000000000;
  *v14 = v15;
  v17 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104);
  v39 = *MEMORY[0x1E0DB63F0];
  v16 = v39;
  v17(v14, v39, v11);
  v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
  v20 = v19;
  sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v18, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v21 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  v21(v14, v11);
  v47 = a1;
  v22 = *MEMORY[0x1E0DB6410];
  v36 = v17;
  v17(v14, v22, v11);
  v38 = v20;
  sub_1BB86D4BC();
  v21(v14, v11);
  v47 = a1;
  v37 = a1;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 0x4030000000000000;
  *v14 = v23;
  v17(v14, v16, v11);
  sub_1BB86D4EC();
  v21(v14, v11);
  v47 = a1;
  sub_1BA71C838();
  v25 = v24;
  v26 = swift_allocBox();
  v28 = v27;
  v29 = v27 + *(int *)(v25 + 48);
  v30 = *MEMORY[0x1E0DB5F98];
  v31 = sub_1BB86D894();
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
  v32(v28, v30, v31);
  v32(v29, *MEMORY[0x1E0DB5FB8], v31);
  *v14 = v26;
  v33 = v36;
  v36(v14, *MEMORY[0x1E0DB63D0], v11);
  v42 = a4;
  v43 = v40;
  v44 = a5;
  v45 = v41;
  v46 = a6;
  sub_1BB86D498();
  v21(v14, v11);
  v47 = v37;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0x404C000000000000;
  *v14 = v34;
  v33(v14, v39, v11);
  sub_1BB86D4EC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v21)(v14, v11);
}

uint64_t sub_1BAA8B638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v14 - v5);
  v14[1] = a1;
  swift_getKeyPath();
  v7 = sub_1BB86DA2C();
  v8 = swift_allocBox();
  v10 = v9;
  v11 = *MEMORY[0x1E0DB61C0];
  v12 = sub_1BB86DA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v10, *MEMORY[0x1E0DB61E8], v7);
  *v6 = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB63E0], v3);
  sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BAA8B7E4(uint64_t a1, _QWORD *a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  void (*v33)(uint64_t *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  _QWORD *v53;
  uint64_t v54;

  v49 = a1;
  v50 = a3;
  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v45 - v12);
  v54 = a1;
  sub_1BA71C838();
  v15 = v14;
  v46 = swift_allocBox();
  v17 = v16;
  v18 = (uint64_t *)((char *)v16 + *(int *)(v15 + 48));
  v19 = sub_1BB86D894();
  v20 = swift_allocBox();
  v22 = v21;
  v23 = swift_allocObject();
  *(double *)(v23 + 16) = a4;
  *v22 = v23;
  v24 = *MEMORY[0x1E0DB5FA0];
  v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
  v25(v22, v24, v19);
  *v17 = v20;
  v25(v17, *MEMORY[0x1E0DB5FA8], v19);
  v26 = swift_allocObject();
  v28 = a2[23];
  v27 = a2[24];
  __swift_project_boxed_opaque_existential_1(a2 + 20, v28);
  *(double *)(v26 + 16) = (*(double (**)(uint64_t, uint64_t))(v27 + 32))(v28, v27);
  *v18 = v26;
  v25(v18, v24, v19);
  v29 = v47;
  *v13 = v46;
  v30 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v29 + 104);
  v31 = v48;
  v30(v13, *MEMORY[0x1E0DB63D0], v48);
  v53 = a2;
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
  sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v32, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  v33 = *(void (**)(uint64_t *, uint64_t))(v29 + 8);
  v33(v13, v31);
  v34 = v49;
  v54 = v49;
  v35 = swift_allocObject();
  *(double *)(v35 + 16) = a5;
  *v13 = v35;
  v30(v13, *MEMORY[0x1E0DB63E8], v31);
  sub_1BB86D4EC();
  v33(v13, v31);
  v54 = v34;
  v30(v13, *MEMORY[0x1E0DB6410], v31);
  sub_1BAA8C470();
  sub_1BAA8C4D4(0, &qword_1EF2AED38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v37 = v36;
  v38 = *(_QWORD *)(v36 - 8);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BB87CE70;
  v41 = v40 + v39;
  v42 = *MEMORY[0x1E0DB5C58];
  sub_1BAA8C4D4(0, &qword_1EF2AED40, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v38 + 104))(v41, *MEMORY[0x1E0DB5C68], v37);
  v51 = v50;
  v52 = a6;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v13, v31);
}

uint64_t sub_1BAA8BBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  id v27;
  _QWORD v28[2];

  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v28 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 200);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    sub_1BAA8C470();
    sub_1BAA8C4D4(0, &qword_1EF2AED38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BB87CE70;
    v23 = v22 + v21;
    v24 = *MEMORY[0x1E0DB5C48];
    sub_1BAA8C4D4(0, &qword_1EF2AED40, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E0DB5C68], v19);
    v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
    sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v26, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v27 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAA8BEC0(uint64_t a1, void *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t, uint64_t);
  void (*v27)(unint64_t, _QWORD, uint64_t);
  _QWORD *v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  id v30;
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t *, uint64_t);
  _QWORD v35[2];
  id v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  void (*v41)(uint64_t *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;

  v36 = a2;
  v42 = a1;
  sub_1BAA8C4D4(0, &qword_1EF2AED08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v39 = v8;
  v9 = v8;
  MEMORY[0x1E0C80A78](v6);
  v11 = (_QWORD *)((char *)v35 - v10);
  v43 = a1;
  KeyPath = swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  v37 = v11;
  *v11 = v12;
  v13 = *MEMORY[0x1E0DB6340];
  v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v41(v11, v13, v7);
  sub_1BAA8C470();
  sub_1BAA8C4D4(0, &qword_1EF2AED38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  v35[1] = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1BB87A390;
  v20 = v19 + v18;
  *(double *)(v19 + v18) = a3;
  v21 = *MEMORY[0x1E0DB6030];
  v22 = sub_1BB86D8F4();
  v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
  v23(v20, v21, v22);
  v24 = *MEMORY[0x1E0DB6120];
  v25 = sub_1BB86D9B4();
  v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v26(v20, v24, v25);
  v27 = *(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104);
  v27(v20, *MEMORY[0x1E0DB5B98], v15);
  v28 = (_QWORD *)(v20 + v17);
  *v28 = 0x4008000000000000;
  v23((unint64_t)v28, v21, v22);
  v26((unint64_t)v28, v24, v25);
  v27((unint64_t)v28, *MEMORY[0x1E0DB5BA8], v15);
  v29 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA8C384(0, &qword_1EF2AED20, MEMORY[0x1E0DB5A10]);
  sub_1BAA8C400(&qword_1EF2AED28, &qword_1EF2AED20, v29, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v30 = v36;
  v31 = v37;
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  v32 = v38;
  v33 = *(void (**)(uint64_t *, uint64_t))(v39 + 8);
  v33(v31, v38);
  v43 = v42;
  swift_getKeyPath();
  v41(v31, *MEMORY[0x1E0DB63D8], v32);
  sub_1BB86D4E0();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v31, v32);
}

uint64_t sub_1BAA8C224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_1BB8726B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = qword_1ED3B2F88;
  if ((*(_BYTE *)(a1 + 72) & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 224);
    if ((*(_BYTE *)(v7 + qword_1ED3B2F88) & 1) != 0)
      return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
    sub_1BA657D64();
    *v5 = sub_1BB87345C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF738], v2);
    a1 = sub_1BB8726D0();
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    if ((a1 & 1) != 0)
      return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
    __break(1u);
  }
  v7 = *(_QWORD *)(a1 + 232);
  if ((*(_BYTE *)(v7 + v6) & 1) != 0)
    return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
  sub_1BA657D64();
  *v5 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF738], v2);
  v8 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
    return *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 136));
  __break(1u);
  return result;
}

uint64_t sub_1BAA8C368(uint64_t a1)
{
  return sub_1BAA8C44C(a1, sub_1BAA8B2C0);
}

uint64_t sub_1BAA8C374()
{
  return swift_deallocObject();
}

void sub_1BAA8C384(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for CoverChannelViewLayout;
    v8[1] = &type metadata for CoverChannelViewLayout.Attributes;
    v8[2] = sub_1BAA8B238();
    v8[3] = sub_1BAA8B27C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BAA8C400(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAA8C384(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAA8C440(uint64_t a1)
{
  return sub_1BAA8C44C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, double, double, double))sub_1BAA8B7E4);
}

uint64_t sub_1BAA8C44C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, double, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), *(double *)(v2 + 16), *(double *)(v2 + 32), *(double *)(v2 + 48));
}

uint64_t sub_1BAA8C468(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA8BBD4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAA8C470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AED30)
  {
    sub_1BAA8C4D4(255, &qword_1EF2AED38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AED30);
  }
}

void sub_1BAA8C4D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAA8B238();
    v7 = a3(a1, &type metadata for CoverChannelViewLayout, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAA8C530(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAA8BEC0(a1, *(void **)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1BAA8C53C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t FormatSplitBackground.xAnchor.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSplitBackground.degrees.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatSplitBackground.leftSide.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BAA8C5C0(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BAA8C5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    return swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA5DCC20(a7);
}

uint64_t FormatSplitBackground.rightSide.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_QWORD *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 144);
  v10 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BAA8C5C0(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BAA8C66C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSplitBackground.init(from:)(a1, a2);
}

uint64_t sub_1BAA8C680(_QWORD *a1)
{
  return FormatSplitBackground.encode(to:)(a1);
}

void sub_1BAA8C698(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v1[2];
  v4 = v1[11];
  v44 = v1[12];
  v39 = v1[13];
  v29 = v1[14];
  v30 = v1[15];
  v5 = v1[17];
  v31 = v1[16];
  v6 = v1[18];
  v42 = *((unsigned __int8 *)v1 + 152);
  v43 = *((unsigned __int8 *)v1 + 80);
  v40 = v1[1];
  v41 = *v1;
  if (v43 == 1)
  {
    v27 = v1[18];
    v28 = v1[17];
    v26 = v1[11];
    v7 = v1[8];
    v8 = v1[9];
    v10 = v1[6];
    v9 = v1[7];
    v12 = v1[4];
    v11 = v1[5];
    v13 = v1[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAA8C5C0(v3, v13, v12, v11, v10, v9, v7, v8, 1);
    v32 = sub_1BAF498E4(v3);
    swift_bridgeObjectRetain();
    sub_1BA5DCC20(v7);
    v33 = v12;
    v34 = v11;
    v14 = v12;
    v15 = v13;
    v16 = v11;
    v35 = v10;
    v36 = v9;
    v37 = v7;
    v38 = v8;
    v17 = v7;
    v4 = v26;
    v6 = v27;
    v18 = v8;
    v5 = v28;
    sub_1BAA4E044(v3, v13, v14, v16, v10, v9, v17, v18, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB525134();
    v15 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v32 = v45;
  }
  v19 = v39;
  if (v42)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5DCC20(v5);
    v20 = sub_1BAF498E4(v4);
    swift_bridgeObjectRetain();
    sub_1BA5DCC20(v5);
    v21 = v4;
    v23 = v29;
    v22 = v30;
    v24 = v31;
    sub_1BAA4E044(v21, v44, v39, v29, v30, v31, v5, v6, 1);
    v25 = v44;
  }
  else
  {
    sub_1BB525134();
    v25 = 0;
    v19 = 0;
    v23 = 0;
    v22 = 0;
    v24 = 0;
    v5 = 0;
    v6 = 0;
    v20 = v45;
  }
  *(_QWORD *)a1 = v41;
  *(_QWORD *)(a1 + 8) = v40;
  *(_QWORD *)(a1 + 16) = v32;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v33;
  *(_QWORD *)(a1 + 40) = v34;
  *(_QWORD *)(a1 + 48) = v35;
  *(_QWORD *)(a1 + 56) = v36;
  *(_QWORD *)(a1 + 64) = v37;
  *(_QWORD *)(a1 + 72) = v38;
  *(_BYTE *)(a1 + 80) = v43;
  *(_QWORD *)(a1 + 88) = v20;
  *(_QWORD *)(a1 + 96) = v25;
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = v23;
  *(_QWORD *)(a1 + 120) = v22;
  *(_QWORD *)(a1 + 128) = v24;
  *(_QWORD *)(a1 + 136) = v5;
  *(_QWORD *)(a1 + 144) = v6;
  *(_BYTE *)(a1 + 152) = v42;
}

BOOL _s8NewsFeed21FormatSplitBackgroundV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v2 = *(_QWORD *)a1;
  v44 = *(_QWORD *)(a1 + 16);
  v45 = *(_QWORD *)(a1 + 8);
  v43 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 40);
  v40 = *(_QWORD *)(a1 + 32);
  v37 = *(_QWORD *)(a1 + 56);
  v38 = *(_QWORD *)(a1 + 48);
  v35 = *(_QWORD *)(a1 + 72);
  v36 = *(_QWORD *)(a1 + 64);
  v34 = *(_BYTE *)(a1 + 80);
  v41 = *(_QWORD *)(a1 + 96);
  v42 = *(_QWORD *)(a1 + 88);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 128);
  v22 = *(_QWORD *)(a1 + 120);
  v19 = *(_QWORD *)(a1 + 144);
  v20 = *(_QWORD *)(a1 + 136);
  v18 = *(_BYTE *)(a1 + 152);
  v4 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v32 = *(_QWORD *)(a2 + 24);
  v33 = *(_QWORD *)(a2 + 16);
  v30 = *(_QWORD *)(a2 + 40);
  v31 = *(_QWORD *)(a2 + 32);
  v28 = *(_QWORD *)(a2 + 56);
  v29 = *(_QWORD *)(a2 + 48);
  v26 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 64);
  v25 = *(_BYTE *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 120);
  v6 = *(_QWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 136);
  v8 = *(_QWORD *)(a2 + 144);
  v10 = *(_BYTE *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA881EAC(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BA881EAC(v45, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    return 0;
  v55 = v44;
  v56 = v43;
  v57 = v40;
  v58 = v39;
  v59 = v38;
  v60 = v37;
  v61 = v36;
  v62 = v35;
  v63 = v34;
  v46 = v33;
  v47 = v32;
  v48 = v31;
  v49 = v30;
  v50 = v29;
  v51 = v28;
  v52 = v27;
  v53 = v26;
  v54 = v25;
  if (_s8NewsFeed25FormatSplitBackgroundSideO2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)&v46))
  {
    v55 = v42;
    v56 = v41;
    v57 = v24;
    v58 = v23;
    v59 = v22;
    v60 = v21;
    v61 = v20;
    v62 = v19;
    v63 = v18;
    v46 = v17;
    v47 = v16;
    v48 = v15;
    v49 = v5;
    v50 = v7;
    v51 = v6;
    v52 = v9;
    v53 = v8;
    v54 = v10;
    return _s8NewsFeed25FormatSplitBackgroundSideO2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)&v46);
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1BAA8CBA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA8CBC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA8CBC8()
{
  unint64_t result;

  result = qword_1EF2AED48;
  if (!qword_1EF2AED48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackground, &type metadata for FormatSplitBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2AED48);
  }
  return result;
}

unint64_t sub_1BAA8CC0C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAA8CC40();
  a1[2] = sub_1BAA8CC84();
  result = sub_1BAA8CCC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA8CC40()
{
  unint64_t result;

  result = qword_1ED3A6CF8;
  if (!qword_1ED3A6CF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackground, &type metadata for FormatSplitBackground);
    atomic_store(result, (unint64_t *)&qword_1ED3A6CF8);
  }
  return result;
}

unint64_t sub_1BAA8CC84()
{
  unint64_t result;

  result = qword_1ED3ABB08;
  if (!qword_1ED3ABB08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackground, &type metadata for FormatSplitBackground);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB08);
  }
  return result;
}

unint64_t sub_1BAA8CCC8()
{
  unint64_t result;

  result = qword_1EF2AED50;
  if (!qword_1EF2AED50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackground, &type metadata for FormatSplitBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2AED50);
  }
  return result;
}

uint64_t destroy for FormatSplitBackground(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  return sub_1BAA4E044(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
}

uint64_t initializeWithCopy for FormatSplitBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v21 = *(_QWORD *)(a2 + 64);
  v22 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAA8C5C0(v5, v6, v7, v8, v9, v10, v21, v22, v11);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v21;
  *(_QWORD *)(a1 + 72) = v22;
  *(_BYTE *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(v2 + 88);
  v13 = *(_QWORD *)(v2 + 96);
  v14 = *(_QWORD *)(v2 + 104);
  v15 = *(_QWORD *)(v2 + 112);
  v16 = *(_QWORD *)(v2 + 120);
  v17 = *(_QWORD *)(v2 + 128);
  v18 = *(_QWORD *)(v2 + 136);
  v19 = *(_QWORD *)(v2 + 144);
  LOBYTE(v2) = *(_BYTE *)(v2 + 152);
  sub_1BAA8C5C0(v12, v13, v14, v15, v16, v17, v18, v19, v2);
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v14;
  *(_QWORD *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = v16;
  *(_QWORD *)(a1 + 128) = v17;
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  *(_BYTE *)(a1 + 152) = v2;
  return a1;
}

uint64_t assignWithCopy for FormatSplitBackground(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v39;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[5];
  v8 = v2[6];
  v9 = v2[7];
  v10 = v2[8];
  v11 = v2[9];
  v39 = *((_BYTE *)v2 + 80);
  sub_1BAA8C5C0(v4, v5, v6, v7, v8, v9, v10, v11, v39);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v39;
  sub_1BAA4E044(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = v2[11];
  v22 = v2[12];
  v23 = v2[13];
  v24 = v2[14];
  v25 = v2[15];
  v26 = v2[16];
  v27 = v2[17];
  v28 = v2[18];
  LOBYTE(v2) = *((_BYTE *)v2 + 152);
  sub_1BAA8C5C0(v21, v22, v23, v24, v25, v26, v27, v28, (char)v2);
  v29 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 96);
  v31 = *(_QWORD *)(a1 + 104);
  v32 = *(_QWORD *)(a1 + 112);
  v33 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD *)(a1 + 128);
  v35 = *(_QWORD *)(a1 + 136);
  v36 = *(_QWORD *)(a1 + 144);
  v37 = *(_BYTE *)(a1 + 152);
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v23;
  *(_QWORD *)(a1 + 112) = v24;
  *(_QWORD *)(a1 + 120) = v25;
  *(_QWORD *)(a1 + 128) = v26;
  *(_QWORD *)(a1 + 136) = v27;
  *(_QWORD *)(a1 + 144) = v28;
  *(_BYTE *)(a1 + 152) = (_BYTE)v2;
  sub_1BAA4E044(v29, v30, v31, v32, v33, v34, v35, v36, v37);
  return a1;
}

uint64_t assignWithTake for FormatSplitBackground(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v14;
  v15 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v15;
  *(_BYTE *)(a1 + 80) = v4;
  sub_1BAA4E044(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v16 = *(_BYTE *)(a2 + 152);
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 112);
  v21 = *(_QWORD *)(a1 + 120);
  v22 = *(_QWORD *)(a1 + 128);
  v23 = *(_QWORD *)(a1 + 136);
  v24 = *(_QWORD *)(a1 + 144);
  v25 = *(_BYTE *)(a1 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = v16;
  sub_1BAA4E044(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSplitBackground(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSplitBackground(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSplitBackground()
{
  return &type metadata for FormatSplitBackground;
}

_QWORD *sub_1BAA8D164(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t inited;
  _QWORD *v40;
  void (*v41)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43[11];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  _QWORD v66[8];
  char v67;
  _QWORD v68[8];
  char v69;
  _BYTE v70[160];
  uint64_t v71[21];

  sub_1BAA8D620(a1, (uint64_t)v70);
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
  sub_1BA8C88C8(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v42 = *(_QWORD *)(v3 + 72);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87D7A0;
  v38 = v5;
  v6 = (_QWORD *)(v5 + v4);
  sub_1BAA8D620((uint64_t)v70, (uint64_t)v71);
  v7 = 0;
  v8 = 0;
  if (sub_1BA84DAF0(v71) != 1)
  {
    v9 = swift_bridgeObjectRetain();
    v7 = sub_1BB106F08(v9);
    v8 = v10;
    swift_bridgeObjectRelease();
  }
  sub_1BAAF7494(0x726F68636E412058, 0xE800000000000000, v7, v8, v6);
  v11 = type metadata accessor for FormatInspectionItem(0);
  v41 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v41(v6, 0, 1, v11);
  sub_1BAA8D620((uint64_t)v70, (uint64_t)&v63);
  v12 = 0;
  v13 = 0;
  if (sub_1BA84DAF0(&v63) != 1)
  {
    v14 = swift_bridgeObjectRetain();
    v12 = sub_1BB106F08(v14);
    v13 = v15;
    swift_bridgeObjectRelease();
  }
  v40 = v6;
  sub_1BAAF7494(0x73656572676544, 0xE700000000000000, v12, v13, (_QWORD *)((char *)v6 + v42));
  v41((_QWORD *)((char *)v6 + v42), 0, 1, v11);
  sub_1BAA8D620((uint64_t)v70, (uint64_t)v53);
  if (sub_1BA84DAF0(v53) == 1)
  {
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = -1;
  }
  else
  {
    v16 = v54;
    v17 = v55;
    v18 = v56;
    v19 = v57;
    v20 = v58;
    v21 = v59;
    v22 = v60;
    v23 = v61;
    v24 = v62;
    sub_1BAA8C5C0(v54, v55, v56, v57, v58, v59, v60, v61, v62);
  }
  v68[0] = v16;
  v68[1] = v17;
  v68[2] = v18;
  v68[3] = v19;
  v68[4] = v20;
  v68[5] = v21;
  v68[6] = v22;
  v68[7] = v23;
  v69 = v24;
  sub_1BAAFAEDC(0x646953207466654CLL, 0xE900000000000065, (uint64_t)v68, (_QWORD *)((char *)v40 + 2 * v42));
  v41((_QWORD *)((char *)v40 + 2 * v42), 0, 1, v11);
  sub_1BAA8D620((uint64_t)v70, (uint64_t)v43);
  if (sub_1BA84DAF0(v43) == 1)
  {
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = -1;
  }
  else
  {
    v25 = v44;
    v26 = v45;
    v27 = v46;
    v28 = v47;
    v29 = v48;
    v30 = v49;
    v31 = v50;
    v32 = v51;
    v33 = v52;
    sub_1BAA8C5C0(v44, v45, v46, v47, v48, v49, v50, v51, v52);
  }
  v66[0] = v25;
  v66[1] = v26;
  v66[2] = v27;
  v66[3] = v28;
  v66[4] = v29;
  v66[5] = v30;
  v66[6] = v31;
  v66[7] = v32;
  v67 = v33;
  sub_1BAAFAEDC(0x6953207468676952, 0xEA00000000006564, (uint64_t)v66, (_QWORD *)((char *)v40 + 3 * v42));
  v41((_QWORD *)((char *)v40 + 3 * v42), 0, 1, v11);
  sub_1BAF89090(0x69562074696C7053, 0xEA00000000007765, 0, 0, v38, v64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v34 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v34;
  *(_QWORD *)(v34 + 48) = v65;
  v35 = v64[1];
  *(_OWORD *)(v34 + 16) = v64[0];
  *(_OWORD *)(v34 + 32) = v35;
  v36 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v36;
}

uint64_t sub_1BAA8D620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAA8D664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAA8D664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BDFE0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BDFE0);
  }
}

uint64_t sub_1BAA8D6B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA8D6EC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A8C4(0, v1, 0);
  v2 = v23;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v20 = v1;
  v21 = v5;
  v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = *(_QWORD *)(v23 + 16);
    v14 = *(_QWORD *)(v23 + 24);
    result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1)
      result = sub_1BAC7A8C4(v14 > 1, v13 + 1, 1);
    *(_QWORD *)(v23 + 16) = v13 + 1;
    *(_QWORD *)(v23 + 8 * v13 + 32) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21)
      goto LABEL_27;
    v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v20;
    }
    else
    {
      v17 = v11 + 1;
      v18 = (unint64_t)(v9 + 63) >> 6;
      v10 = v20;
      if (v11 + 1 < v18)
      {
        v19 = *(_QWORD *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            v19 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BAA8D8E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = type metadata accessor for FormatDerivedDataWarningError();
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v18 = v2;
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A98C(0, v8, 0);
    v9 = v22;
    v10 = *(_QWORD *)(type metadata accessor for FormatDeprecationWarning(0) - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v20 = *(_QWORD *)(v10 + 72);
    sub_1BAA870FC();
    v19 = v12;
    do
    {
      v13 = &v7[*(int *)(v19 + 48)];
      sub_1BA4C2DD8(v11, (uint64_t)v7, type metadata accessor for FormatDeprecationWarning);
      v14 = a2[1];
      *(_QWORD *)v13 = *a2;
      *((_QWORD *)v13 + 1) = v14;
      swift_storeEnumTagMultiPayload();
      v22 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v16 >= v15 >> 1)
      {
        sub_1BAC7A98C(v15 > 1, v16 + 1, 1);
        v9 = v22;
      }
      *(_QWORD *)(v9 + 16) = v16 + 1;
      sub_1BA5193C4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
      v11 += v20;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1BAA8DA8C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t (*v93)();
  uint64_t v94;
  const char *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t *v116;
  uint64_t **v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  const char *v135;
  const char *v136;
  uint64_t v137;
  _WORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  ValueMetadata *v150;
  unint64_t (*v151)();
  uint64_t *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  _WORD *v169;
  uint64_t v170;
  unint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  const char *v183;
  uint64_t v184;
  _WORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t *v196;
  _QWORD *v197;
  const char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t *v210;
  _QWORD *v211;
  const char *v212;
  uint64_t v213;
  uint64_t (*v214)();
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  unint64_t (*v220)();
  ValueMetadata *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  int v254;
  char v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  int v269;
  char v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  uint64_t v278;
  unint64_t v279;
  char v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  BOOL v289;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  BOOL v298;
  uint64_t v299;
  uint64_t v300;
  BOOL v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  char v309;
  _QWORD *v310;
  unint64_t v311;
  _QWORD *v312;
  uint64_t v313;
  uint64_t v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  int v321;
  char v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  unint64_t v331;
  char v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  BOOL v341;
  int v342;
  unint64_t v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  BOOL v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t *v359;
  char v360;
  uint64_t v361;
  unint64_t v362;
  uint64_t v363;
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  _QWORD *v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unint64_t v376;
  uint64_t v377;
  int v378;
  char v379;
  uint64_t v380;
  uint64_t *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  unint64_t v385;
  uint64_t v386;
  int v387;
  char v388;
  uint64_t v389;
  char **v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  const char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char v401;
  uint64_t v402;
  uint64_t *v403;
  uint64_t v404;
  uint64_t *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  const char *v410;
  uint64_t v411;
  uint64_t (*v412)(_QWORD);
  _QWORD *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  unsigned __int8 v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t *v432;
  uint64_t *v433;
  uint64_t v434;
  unint64_t v435;
  uint64_t v436;
  _QWORD *v437;
  unint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t *v442;
  uint64_t *v443;
  _QWORD *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t *v464;
  uint64_t v465;
  unint64_t v466;
  uint64_t v467;
  _QWORD *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  _QWORD *v473;
  uint64_t *v474;
  _QWORD *v475;
  unint64_t v476;
  __int128 v477;
  const char *v478;
  const char *v479;
  uint64_t v480;
  char *v481;
  uint64_t v482;
  _QWORD *v483;
  _QWORD *v484;
  uint64_t v485;
  const char *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490[15];
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  int64x2_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  __int128 v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  __int128 v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  __int128 v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  __int128 v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  __int128 v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526[4];
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535[7];
  uint64_t v536;
  uint64_t v537;
  uint64_t v538[4];
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547[6];
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;

  v481 = a2;
  v474 = a3;
  v462 = a4;
  v460 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v460);
  v461 = (uint64_t)&v433 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v463 = (uint64_t)&v433 - v7;
  v8 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v8);
  v464 = (uint64_t *)((char *)&v433 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  MEMORY[0x1E0C80A78](v10);
  v458 = (uint64_t)&v433 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v459 = (uint64_t)&v433 - v13;
  sub_1BAA9864C();
  v15 = *(_QWORD *)(v14 - 8);
  v455 = v14;
  v456 = v15;
  MEMORY[0x1E0C80A78](v14);
  v457 = (uint64_t)&v433 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FormatSlotDefinitionItemSet();
  v451 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v452 = (uint64_t)&v433 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v453 = (uint64_t)&v433 - v20;
  v21 = type metadata accessor for FormatSlotDefinition();
  v450 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v454 = (uint64_t *)((char *)&v433 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1EF2A9CD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v23);
  v467 = (uint64_t)&v433 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v470 = (uint64_t)&v433 - v26;
  v469 = type metadata accessor for FormatDerivedDataFile();
  v471 = *(_QWORD *)(v469 - 8);
  MEMORY[0x1E0C80A78](v469);
  v465 = (uint64_t)&v433 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v472 = (uint64_t)&v433 - v29;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v466 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v473 = (uint64_t **)((char *)&v433 - v31);
  v32 = type metadata accessor for FormatOption();
  v479 = *(const char **)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v478 = (char *)&v433 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v476 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v468 = (uint64_t **)((char *)&v433 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v36);
  v475 = (uint64_t **)((char *)&v433 - v37);
  v38 = type metadata accessor for FormatPropertyDefinition(0);
  v39 = *(const char **)(v38 - 8);
  v485 = v38;
  v486 = v39;
  MEMORY[0x1E0C80A78](v38);
  v449 = (uint64_t)&v433 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v448 = (uint64_t)&v433 - v42;
  MEMORY[0x1E0C80A78](v43);
  v447 = (uint64_t)&v433 - v44;
  MEMORY[0x1E0C80A78](v45);
  v446 = (uint64_t)&v433 - v46;
  MEMORY[0x1E0C80A78](v47);
  v484 = (uint64_t **)((char *)&v433 - v48);
  MEMORY[0x1E0C80A78](v49);
  v483 = (uint64_t **)((char *)&v433 - v50);
  v482 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v482);
  *(_QWORD *)&v477 = (char *)&v433 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)&v433 - v53;
  MEMORY[0x1E0C80A78](v55);
  v57 = (uint64_t *)((char *)&v433 - v56);
  v58 = type metadata accessor for FormatCompilingSlotDefinition(0);
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v61 = (uint64_t *)((char *)&v433 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  v62 = swift_bridgeObjectRetain();
  v63 = a1;
  v64 = v487;
  v65 = sub_1BAA986B0(v62, a1);
  v66 = (uint64_t *)v64;
  if (v64)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v487 = v59;
  v443 = v57;
  v444 = v54;
  v445 = v65;
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v67 = swift_bridgeObjectRetain();
  v69 = sub_1BA9F6E04(v67, v63);
  swift_bridgeObjectRelease();
  swift_release();
  v493 = MEMORY[0x1E0DEE9E8];
  v70 = v445;
  v71 = *(_QWORD *)(v445 + 16);
  v440 = v63;
  v441 = v69;
  if (v71)
  {
    v442 = 0;
    v72 = v445 + ((*(unsigned __int8 *)(v487 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v487 + 80));
    v487 = *(_QWORD *)(v487 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v72, (uint64_t)v61, type metadata accessor for FormatCompilingSlotDefinition);
      v73 = v493;
      v74 = *v61;
      v75 = v61[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76 = sub_1BA761FE4(v74, v75, v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v76 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        type metadata accessor for FormatDerivedDataError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
        swift_allocError();
        v88 = v61[1];
        *v89 = *v61;
        v89[1] = v88;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        return sub_1BA4A2E80((uint64_t)v61, type metadata accessor for FormatCompilingSlotDefinition);
      }
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(v490, v74, v75);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v61, type metadata accessor for FormatCompilingSlotDefinition);
      v72 += v487;
      --v71;
    }
    while (v71);
    v77 = v445;
    swift_bridgeObjectRelease();
    v70 = v77;
    v63 = v440;
    v66 = v442;
  }
  type metadata accessor for FormatDerivedDataState();
  v78 = (uint64_t *)swift_allocObject();
  v79 = MEMORY[0x1E0DEE9E0];
  v78[5] = MEMORY[0x1E0DEE9E0];
  v78[6] = v79;
  v78[7] = v79;
  v80 = v481;
  v78[2] = v63;
  v78[3] = (uint64_t)v80;
  v490[0] = v70;
  sub_1BA4B07F0(0, &qword_1EF2AEE28, type metadata accessor for FormatCompilingSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v82 = v81;
  v83 = sub_1BA547334(&qword_1EF2AEE30, &qword_1EF2AEE28, type metadata accessor for FormatCompilingSlotDefinition);
  v84 = v66;
  v85 = sub_1BA4A2870(&qword_1EF2AEE38, type metadata accessor for FormatCompilingSlotDefinition, (uint64_t)&unk_1BB88EC00);
  swift_retain();
  v86 = v82;
  swift_bridgeObjectRetain();
  v78[4] = sub_1BB872BBC();
  v87 = sub_1BB51E140();
  sub_1BB1497C4(v87);
  if (v84)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v435 = v85;
  v436 = v83;
  swift_bridgeObjectRelease();
  v90 = v440;
  v91 = (uint64_t *)(v440 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  v92 = swift_bridgeObjectRetain();
  sub_1BB1497C4(v92);
  v93 = 0;
  v94 = v441;
  v433 = v91;
  swift_bridgeObjectRelease();
  v439 = sub_1BA79B898(v94);
  v434 = v86;
  if (v439)
  {
    v442 = 0;
    v95 = v486;
    v438 = v94 + ((*((unsigned __int8 *)v486 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v486 + 80));
    v96 = v444;
    v437 = v444 + 3;
    swift_bridgeObjectRetain();
    v97 = 0;
    v93 = type metadata accessor for FormatDerivedDataOption;
    while (1)
    {
      v487 = v97 + 1;
      if (__OFADD__(v97, 1))
        break;
      v98 = v78;
      v99 = v483;
      sub_1BA4C2DD8(v438 + *((_QWORD *)v95 + 9) * v97, (uint64_t)v483, type metadata accessor for FormatPropertyDefinition);
      FormatPropertyDefinition.identifier.getter();
      *v96 = v100;
      v96[1] = v101;
      v102 = (uint64_t)v484;
      sub_1BA4C2DD8((uint64_t)v99, (uint64_t)v484, type metadata accessor for FormatPropertyDefinition);
      v103 = qword_1BB898B18[(int)swift_getEnumCaseMultiPayload()];
      sub_1BA4A2E80(v102, type metadata accessor for FormatPropertyDefinition);
      v96[2] = v103;
      v104 = v437;
      *v437 = 0;
      v104[1] = 0;
      *((_BYTE *)v104 + 16) = 0;
      v105 = sub_1BA90BB30(0);
      sub_1BA4A2E80((uint64_t)v99, type metadata accessor for FormatPropertyDefinition);
      v96[6] = v105;
      v106 = (char *)v96 + *(int *)(v482 + 28);
      v107 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 1, 1, v107);
      v108 = (uint64_t)v443;
      sub_1BA5193C4((uint64_t)v96, (uint64_t)v443, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      v78 = v98;
      v109 = v442;
      sub_1BB1498F0(v108);
      v442 = v109;
      if (v109)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BA4A2E80(v108, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      sub_1BA4A2E80(v108, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      ++v97;
      v95 = v486;
      v96 = v444;
      if (v487 == v439)
      {
        v94 = v441;
        swift_bridgeObjectRelease();
        v110 = v440;
        v93 = (uint64_t (*)())v442;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v110 = v90;
LABEL_20:
  v111 = (uint64_t *)(v110 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v442 = v111;
  v112 = *v111;
  v113 = sub_1BA79B898(*v111);
  v487 = (uint64_t)v78;
  v114 = MEMORY[0x1E0DEE9E0];
  v444 = (_QWORD *)v113;
  if (!v113)
    goto LABEL_33;
  v115 = v476;
  v116 = (uint64_t *)(v112
                   + ((*(unsigned __int8 *)(v476 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v476 + 80)));
  swift_bridgeObjectRetain();
  v94 = (uint64_t)&type metadata for FormatStyle;
  v117 = (uint64_t **)type metadata accessor for FormatObject;
  v118 = v112;
  v119 = 0;
  v482 = v118;
  v443 = v116;
  do
  {
    sub_1BA8E9170(v119, 1, v118);
    v120 = (uint64_t)v116 + *(_QWORD *)(v115 + 72) * v119;
    v121 = v475;
    sub_1BA8CAF1C(v120, (uint64_t)v475, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v483 = (_QWORD *)(v119 + 1);
    if (__OFADD__(v119, 1))
    {
      __break(1u);
      goto LABEL_79;
    }
    v122 = v121[1];
    v484 = (_QWORD *)v121[3];
    v485 = v122;
    v123 = v121[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA8CE65C((uint64_t)v121, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v124 = sub_1BA79B898(v123);
    if (v124)
    {
      v125 = v124;
      v126 = v479;
      v127 = v123 + ((*((unsigned __int8 *)v479 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v479 + 80));
      swift_bridgeObjectRetain();
      v128 = 0;
      do
      {
        v129 = v128 + 1;
        if (__OFADD__(v128, 1))
          goto LABEL_63;
        v130 = (char *)v478;
        sub_1BA4C2DD8(v127 + *((_QWORD *)v126 + 9) * v128, (uint64_t)v478, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v131 = v477;
        sub_1BB186044(v130, v477);
        if (v93)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        sub_1BB1498F0(v131);
        sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
        ++v128;
        v126 = v479;
      }
      while (v129 != v125);
      swift_bridgeObjectRelease();
      v94 = (uint64_t)&type metadata for FormatStyle;
    }
    swift_bridgeObjectRelease();
    v116 = v443;
    v118 = v482;
    v119 = (unint64_t)v483;
    v78 = (uint64_t *)v487;
    v115 = v476;
    v117 = (uint64_t **)type metadata accessor for FormatObject;
  }
  while (v483 != v444);
  v114 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  v94 = v441;
LABEL_33:
  type metadata accessor for FormatDerivedDataBinder();
  v132 = (_QWORD *)swift_allocObject();
  v132[3] = v114;
  v132[4] = sub_1BA6B0504();
  v485 = (uint64_t)(v132 + 4);
  v132[5] = sub_1BA6B0504();
  v133 = MEMORY[0x1E0DEE9E8];
  v132[6] = MEMORY[0x1E0DEE9E8];
  v132[7] = v133;
  v490[0] = v445;
  v132[2] = sub_1BB872BBC();
  v134 = *v433;
  swift_bridgeObjectRetain();
  sub_1BB73F794((uint64_t)v78, v134, &v494);
  if (v93)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v483 = v132 + 7;
  v484 = v132;
  v482 = (uint64_t)(v132 + 6);
  swift_bridgeObjectRelease();
  sub_1BA65FBAC(0, &qword_1EF2AEE40);
  v136 = v135;
  v137 = swift_allocObject();
  sub_1BA865F74(v137, 2);
  *v138 = 1802;
  v139 = nullsub_1();
  sub_1BB3DB6E0(v139, &v499);
  swift_bridgeObjectRelease();
  v559 = v494.i64[0];
  sub_1BA4F6CCC((uint64_t)&v559);
  v558 = v494.i64[1];
  sub_1BA4F6CCC((uint64_t)&v558);
  v557 = v495;
  sub_1BA4F6CCC((uint64_t)&v557);
  v556 = v496;
  sub_1BA4F6CCC((uint64_t)&v556);
  v555 = v497;
  sub_1BA4F6CCC((uint64_t)&v555);
  v554 = v498;
  sub_1BA4F6CCC((uint64_t)&v554);
  v552 = v500;
  v553 = v502;
  v551 = v499;
  v140 = (uint64_t)v484;
  sub_1BB424A6C(v499, v500, v502);
  sub_1BA4F6CCC((uint64_t)&v551);
  v550 = *((_QWORD *)&v499 + 1);
  sub_1BA4F6CCC((uint64_t)&v550);
  sub_1BA4F6CCC((uint64_t)&v552);
  v549 = v501;
  sub_1BA4F6CCC((uint64_t)&v549);
  sub_1BA4F6CCC((uint64_t)&v553);
  v548 = v503;
  sub_1BA4F6CCC((uint64_t)&v548);
  v492 = MEMORY[0x1E0DEE9E8];
  v491 = MEMORY[0x1E0DEE9E8];
  v141 = v440;
  v142 = (uint64_t *)(v440 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  v143 = swift_beginAccess();
  v117 = &v433;
  v144 = *v142;
  MEMORY[0x1E0C80A78](v143);
  *(&v433 - 6) = v474;
  *(&v433 - 5) = &v492;
  *(&v433 - 4) = (uint64_t *)v481;
  *(&v433 - 3) = v78;
  *(&v433 - 2) = (uint64_t *)v140;
  *(&v433 - 1) = &v491;
  swift_bridgeObjectRetain();
  v145 = sub_1BA8A2B80((void (*)(uint64_t, uint64_t *))sub_1BAA99858, (uint64_t)(&v433 - 8), v144);
  v478 = v136;
  v479 = 0;
  v444 = (_QWORD *)v145;
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v141 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) & 0xFE) != 4)
  {
LABEL_64:
    sub_1BA65FBAC(0, (unint64_t *)&unk_1ED3B9FF0);
    v189 = swift_allocObject();
    sub_1BA865F74(v189, 3);
    v477 = xmmword_1BB898AA0;
    *(_OWORD *)v190 = xmmword_1BB898AA0;
    *(_QWORD *)(v190 + 16) = 18;
    v191 = nullsub_1();
    v192 = sub_1BAC86C9C(v191);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v492 + 16) <= *(_QWORD *)(v192 + 16) >> 3)
    {
      v490[0] = v192;
      v194 = swift_bridgeObjectRetain();
      sub_1BB025094(v194);
      swift_bridgeObjectRelease();
      v94 = v490[0];
    }
    else
    {
      v193 = swift_bridgeObjectRetain();
      v94 = sub_1BB0251F4(v193, v192);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v94 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v196 = v195;
      v197 = sub_1BA766C70(v94);
      swift_bridgeObjectRelease();
      v490[0] = (uint64_t)v197;
      swift_retain();
      v198 = v479;
      sub_1BA766EFC(v490);
      if (v198)
        goto LABEL_314;
      swift_release();
      v199 = v490[0];
      v200 = swift_allocObject();
      sub_1BA865F74(v200, 3);
      *(_OWORD *)v201 = v477;
      *(_QWORD *)(v201 + 16) = 18;
      v202 = nullsub_1();
      v203 = sub_1BAC86C9C(v202);
      swift_bridgeObjectRelease();
      v204 = sub_1BA766C70(v203);
      swift_bridgeObjectRelease();
      v490[0] = (uint64_t)v204;
      swift_retain();
      sub_1BA766EFC(v490);
      swift_release();
      v205 = v490[0];
      swift_bridgeObjectRelease();
      *v196 = v199;
      v196[1] = v205;
LABEL_76:
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_release();
      goto LABEL_77;
    }
    swift_bridgeObjectRelease();
    v206 = v493;
    if (*(_QWORD *)(v491 + 16) <= *(_QWORD *)(v493 + 16) >> 3)
    {
      v490[0] = v493;
      swift_bridgeObjectRetain();
      v208 = swift_bridgeObjectRetain();
      sub_1BB024F00(v208);
      swift_bridgeObjectRelease();
      v117 = (uint64_t **)v490[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      v207 = swift_bridgeObjectRetain();
      v117 = (uint64_t **)sub_1BA4BDEF4(v207, v206);
      swift_bridgeObjectRelease();
    }
    if (v117[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v210 = v209;
      v211 = sub_1BA67F4CC((uint64_t)v117);
      swift_bridgeObjectRelease();
      v490[0] = (uint64_t)v211;
      swift_retain();
      v212 = v479;
      sub_1BA79BAB4(v490);
      if (v212)
        goto LABEL_314;
      swift_release();
      v213 = v490[0];
      swift_bridgeObjectRelease();
      *v210 = v213;
      goto LABEL_76;
    }
LABEL_79:
    swift_bridgeObjectRelease();
  }
  v146 = (uint64_t *)(v440 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  v439 = *v146;
  v443 = (uint64_t *)sub_1BA79B898(v439);
  if (!v443)
    goto LABEL_48;
  v147 = v466;
  v475 = (_QWORD *)(v439
                  + ((*(unsigned __int8 *)(v466 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v466 + 80)));
  v148 = swift_bridgeObjectRetain();
  v94 = 0;
  v149 = &qword_1ED3B3740;
  v150 = &type metadata for FormatDecoration;
  v151 = sub_1BA89682C;
  v153 = v473;
  v152 = v474;
  while (2)
  {
    *(_QWORD *)&v477 = v94 + 1;
    if (__OFADD__(v94, 1))
    {
      __break(1u);
      goto LABEL_103;
    }
    v93 = (uint64_t (*)())v151;
    v117 = (uint64_t **)v150;
    sub_1BA8CAF1C((uint64_t)v475 + *(_QWORD *)(v147 + 72) * v94, (uint64_t)v153, (unint64_t *)v149, (uint64_t (*)(void))v151, (uint64_t)v150, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v155 = v152[3];
    v154 = v152[4];
    __swift_project_boxed_opaque_existential_1(v152, v155);
    if ((MEMORY[0x1BCCDED80](v155, v154) & 1) != 0)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA8CE65C((uint64_t)v473, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
LABEL_89:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_93;
    }
    if (!*((_QWORD *)v481 + 2))
    {
      v164 = v470;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 56))(v470, 1, 1, v469);
LABEL_86:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5C699C(v164, &qword_1EF2A9CD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v216 = v473;
      v217 = v473[1];
      *(_QWORD *)v218 = *v473;
      *(_QWORD *)(v218 + 8) = v217;
      *(_BYTE *)(v218 + 16) = 6;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_release();
      v219 = &qword_1ED3B3740;
      v220 = sub_1BA89682C;
      v221 = &type metadata for FormatDecoration;
LABEL_92:
      sub_1BA8CE65C((uint64_t)v216, (unint64_t *)v219, (uint64_t (*)(void))v220, (uint64_t)v221);
      goto LABEL_93;
    }
    v156 = v149;
    v157 = *v473;
    v158 = v473[1];
    swift_bridgeObjectRetain();
    v159 = sub_1BB4AB4B4(v157, v158, 6);
    if ((v160 & 1) != 0)
    {
      v161 = v471;
      sub_1BA4C2DD8(*((_QWORD *)v481 + 7) + *(_QWORD *)(v471 + 72) * v159, v470, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      v162 = 0;
    }
    else
    {
      v162 = 1;
      v161 = v471;
    }
    v163 = v469;
    v164 = v470;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v161 + 56))(v470, v162, 1, v469);
    swift_bridgeObjectRelease();
    v165 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 48))(v164, 1, v163);
    v166 = v487;
    if (v165 == 1)
      goto LABEL_86;
    sub_1BA5193C4(v164, v472, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v167 = v479;
    sub_1BB73FBD8(v166, &v504);
    if (v167)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v472, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      sub_1BA8CE65C((uint64_t)v473, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v168 = swift_allocObject();
    sub_1BA865F74(v168, 2);
    *v169 = 10;
    v170 = nullsub_1();
    sub_1BB3DB6E0(v170, &v509);
    swift_bridgeObjectRelease();
    v547[0] = v504;
    sub_1BA4F6CCC((uint64_t)v547);
    v546 = *((_QWORD *)&v504 + 1);
    sub_1BA4F6CCC((uint64_t)&v546);
    v545 = v505;
    sub_1BA4F6CCC((uint64_t)&v545);
    v544 = v506;
    sub_1BA4F6CCC((uint64_t)&v544);
    v543 = v507;
    sub_1BA4F6CCC((uint64_t)&v543);
    v542 = v508;
    sub_1BA4F6CCC((uint64_t)&v542);
    v541 = v512;
    v540 = v510;
    v539 = v509;
    sub_1BB424A6C(v509, v510, v512);
    v479 = 0;
    sub_1BA4F6CCC((uint64_t)&v539);
    v538[0] = *((_QWORD *)&v509 + 1);
    sub_1BA4F6CCC((uint64_t)v538);
    sub_1BA4F6CCC((uint64_t)&v540);
    v537 = v511;
    sub_1BA4F6CCC((uint64_t)&v537);
    sub_1BA4F6CCC((uint64_t)&v541);
    v536 = v513;
    sub_1BA4F6CCC((uint64_t)&v536);
    sub_1BA4A2E80(v472, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v153 = v473;
    v149 = v156;
    v171 = (unint64_t *)v156;
    v151 = (unint64_t (*)())v93;
    v150 = (ValueMetadata *)v117;
    v148 = sub_1BA8CE65C((uint64_t)v473, v171, v93, (uint64_t)v117);
    ++v94;
    v152 = v474;
    v147 = v466;
    if ((uint64_t *)v477 != v443)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_48:
  v475 = (_QWORD *)*v442;
  v172 = sub_1BA79B898((uint64_t)v475);
  if (!v172)
    goto LABEL_60;
  v117 = (uint64_t **)v172;
  *(_QWORD *)&v477 = (char *)v475
                   + ((*(unsigned __int8 *)(v476 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v476 + 80));
  swift_bridgeObjectRetain();
  v173 = 0;
  v149 = (uint64_t *)v471;
  while (2)
  {
    v93 = (uint64_t (*)())(v173 + 1);
    if (__OFADD__(v173, 1))
    {
      __break(1u);
      goto LABEL_106;
    }
    sub_1BA8CAF1C(v477 + *(_QWORD *)(v476 + 72) * v173, (uint64_t)v468, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v175 = v474[3];
    v174 = v474[4];
    __swift_project_boxed_opaque_existential_1(v474, v175);
    if ((MEMORY[0x1BCCDED80](v175, v174) & 1) != 0)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA8CE65C((uint64_t)v468, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
      goto LABEL_89;
    }
    if (!*((_QWORD *)v481 + 2))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 56))(v467, 1, 1, v469);
LABEL_91:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5C699C(v467, &qword_1EF2A9CD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v216 = v468;
      v222 = v468[1];
      *(_QWORD *)v223 = *v468;
      *(_QWORD *)(v223 + 8) = v222;
      *(_BYTE *)(v223 + 16) = 3;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_release();
      v219 = &qword_1ED3B37D0;
      v220 = sub_1BA896988;
      v221 = &type metadata for FormatStyle;
      goto LABEL_92;
    }
    v176 = *v468;
    v177 = v468[1];
    swift_bridgeObjectRetain();
    v178 = sub_1BB4AB4B4(v176, v177, 3);
    if ((v179 & 1) != 0)
    {
      sub_1BA4C2DD8(*((_QWORD *)v481 + 7) + *(_QWORD *)(v471 + 72) * v178, v467, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      v180 = 0;
    }
    else
    {
      v180 = 1;
    }
    v181 = v467;
    v182 = v469;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v149[7])(v467, v180, 1, v469);
    swift_bridgeObjectRelease();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v149[6])(v181, 1, v182) == 1)
      goto LABEL_91;
    sub_1BA5193C4(v467, v465, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v183 = v479;
    sub_1BB73FBD8(v487, &v514);
    v94 = (uint64_t)v183;
    if (v183)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v465, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      sub_1BA8CE65C((uint64_t)v468, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v184 = swift_allocObject();
    sub_1BA865F74(v184, 2);
    *v185 = 778;
    v186 = nullsub_1();
    sub_1BB3DB6E0(v186, &v519);
    swift_bridgeObjectRelease();
    v535[0] = v514;
    sub_1BA4F6CCC((uint64_t)v535);
    v534 = *((_QWORD *)&v514 + 1);
    sub_1BA4F6CCC((uint64_t)&v534);
    v533 = v515;
    sub_1BA4F6CCC((uint64_t)&v533);
    v532 = v516;
    sub_1BA4F6CCC((uint64_t)&v532);
    v531 = v517;
    sub_1BA4F6CCC((uint64_t)&v531);
    v530 = v518;
    sub_1BA4F6CCC((uint64_t)&v530);
    v529 = v522;
    v528 = v520;
    v527 = v519;
    sub_1BB424A6C(v519, v520, v522);
    v479 = 0;
    sub_1BA4F6CCC((uint64_t)&v527);
    v526[0] = *((_QWORD *)&v519 + 1);
    sub_1BA4F6CCC((uint64_t)v526);
    sub_1BA4F6CCC((uint64_t)&v528);
    v525 = v521;
    sub_1BA4F6CCC((uint64_t)&v525);
    sub_1BA4F6CCC((uint64_t)&v529);
    v524 = v523;
    sub_1BA4F6CCC((uint64_t)&v524);
    sub_1BA4A2E80(v465, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    sub_1BA8CE65C((uint64_t)v468, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
    ++v173;
    if ((char *)v93 != (char *)v117)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_60:
  v187 = v474[3];
  v188 = v474[4];
  __swift_project_boxed_opaque_existential_1(v474, v187);
  if ((MEMORY[0x1BCCDED80](v187, v188) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_81;
  }
  v214 = (uint64_t (*)())v479;
  v215 = sub_1BAA92208((uint64_t)v444, (uint64_t (*)(char *))sub_1BAA921F4, 0);
  v93 = v214;
  if (v214)
  {
LABEL_81:
    swift_release();
    goto LABEL_82;
  }
  v117 = (uint64_t **)v215;
  v224 = v474[3];
  v225 = v474[4];
  __swift_project_boxed_opaque_existential_1(v474, v224);
  if ((MEMORY[0x1BCCDED80](v224, v225) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_98;
  }
  v149 = (uint64_t *)sub_1BAA92208((uint64_t)v444, (uint64_t (*)(char *))sub_1BAA92524, 0);
  v226 = v474[3];
  v227 = v474[4];
  __swift_project_boxed_opaque_existential_1(v474, v226);
  if ((MEMORY[0x1BCCDED80](v226, v227) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_98:
    swift_bridgeObjectRelease();
LABEL_82:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_83:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_93;
  }
  v148 = sub_1BAA92208((uint64_t)v444, (uint64_t (*)(char *))sub_1BAA92538, 0);
LABEL_103:
  v94 = v148;
  swift_bridgeObjectRelease();
  v228 = v474[3];
  v229 = v474[4];
  __swift_project_boxed_opaque_existential_1(v474, v228);
  if ((MEMORY[0x1BCCDED80](v228, v229) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_82;
  }
LABEL_106:
  v490[0] = (uint64_t)v117;
  sub_1BA7949B4((uint64_t)v149);
  sub_1BA7949B4(v94);
  v230 = v490[0];
  v231 = sub_1BA90B924(0);
  if (sub_1BA79B898(v231))
    v232 = sub_1BA862444(v231);
  else
    v232 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v233 = sub_1BAA9AF9C(v230, v232);
  if (v93)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_93;
  }
  v234 = v233;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v490[0] = v234;
  sub_1BA4B07F0(0, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334(&qword_1EF2AEE48, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  sub_1BA4A2870(&qword_1EF2AEE50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
  v235 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v236 = v440;
  swift_retain();
  swift_bridgeObjectRetain();
  v476 = sub_1BAA993AC(v445, v235, v236);
  *(_QWORD *)&v477 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  v237 = swift_allocObject();
  v472 = v237;
  *(_QWORD *)(v237 + 16) = MEMORY[0x1E0DEE9E0];
  v475 = (_QWORD *)(v237 + 16);
  v467 = sub_1BA79B898(v476);
  if (v467)
  {
    v471 = OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings;
    v468 = (_QWORD *)(v476
                    + ((*(unsigned __int8 *)(v450 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v450 + 80)));
    swift_bridgeObjectRetain();
    v238 = 0;
    v481 = "on";
    v465 = 0x80000001BB959F40;
    v478 = "duplicateNewsroomIdentifiers";
    v479 = "unusedProperties";
    do
    {
      sub_1BA8E9170(v238, 1, v476);
      v466 = v238 + 1;
      if (__OFADD__(v238, 1))
        goto LABEL_306;
      v239 = (uint64_t)v468 + *(_QWORD *)(v450 + 72) * v238;
      v240 = v454;
      sub_1BA4C2DD8(v239, (uint64_t)v454, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v473 = (_QWORD *)v240[8];
      v469 = sub_1BA79B898((uint64_t)v473);
      if (v469)
      {
        v470 = (uint64_t)v473
             + ((*((unsigned __int8 *)v486 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v486 + 80));
        swift_bridgeObjectRetain();
        v241 = 0;
        do
        {
          sub_1BA8E9170(v241, 1, (uint64_t)v473);
          v245 = v241 + 1;
          if (__OFADD__(v241, 1))
            goto LABEL_305;
          v246 = v470 + *((_QWORD *)v486 + 9) * v241;
          v247 = v446;
          sub_1BA4C2DD8(v246, v446, type metadata accessor for FormatPropertyDefinition);
          v248 = (void *)v477;
          sub_1BAA926D4((uint64_t)v484, v247, v454);
          if (v248)
          {
            v249 = *(_QWORD *)(v480 + v471);
            if (!*(_QWORD *)(v249 + 16)
              || (sub_1BB8745CC(),
                  sub_1BB872A90(),
                  v250 = sub_1BB874608(),
                  v251 = -1 << *(_BYTE *)(v249 + 32),
                  v252 = v250 & ~v251,
                  ((*(_QWORD *)(v249 + 56 + ((v252 >> 3) & 0xFFFFFFFFFFFFF8)) >> v252) & 1) == 0))
            {
LABEL_273:
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              v389 = v446;
              goto LABEL_299;
            }
            *(_QWORD *)&v477 = 0;
            v253 = ~v251;
            while (1)
            {
              v254 = *(unsigned __int8 *)(*(_QWORD *)(v249 + 48) + v252);
              if (v254 != 1 && v254 != 2)
                break;
              v255 = sub_1BB874398();
              swift_bridgeObjectRelease();
              if ((v255 & 1) != 0)
                goto LABEL_129;
              v252 = (v252 + 1) & v253;
              if (((*(_QWORD *)(v249 + 56 + ((v252 >> 3) & 0xFFFFFFFFFFFFF8)) >> v252) & 1) == 0)
                goto LABEL_273;
            }
            swift_bridgeObjectRelease();
LABEL_129:

          }
          else
          {
            *(_QWORD *)&v477 = 0;
          }
          v243 = *v454;
          v242 = v454[1];
          swift_bridgeObjectRetain();
          v244 = v446;
          sub_1BAA9255C(v446, v243, v242, 0, v472);
          swift_bridgeObjectRelease();
          sub_1BA4A2E80(v244, type metadata accessor for FormatPropertyDefinition);
          v241 = v245;
        }
        while (v245 != v469);
        swift_bridgeObjectRelease();
      }
      v470 = v454[6];
      v443 = (uint64_t *)sub_1BA79B898(v470);
      if (v443)
      {
        v438 = (*(unsigned __int8 *)(v451 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v451 + 80);
        v444 = (_QWORD *)(v470 + v438);
        swift_bridgeObjectRetain();
        v256 = 0;
        do
        {
          sub_1BA8E9170(v256, 1, v470);
          v442 = (uint64_t *)(v256 + 1);
          if (__OFADD__(v256, 1))
            goto LABEL_309;
          v439 = *(_QWORD *)(v451 + 72);
          v257 = (uint64_t)v444 + v439 * v256;
          v258 = v453;
          sub_1BA4C2DD8(v257, v453, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          v473 = *(_QWORD **)(v258 + 16);
          v445 = sub_1BA79B898((uint64_t)v473);
          if (v445)
          {
            v469 = (uint64_t)v473
                 + ((*((unsigned __int8 *)v486 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v486 + 80));
            swift_bridgeObjectRetain();
            v259 = 0;
            do
            {
              sub_1BA8E9170(v259, 1, (uint64_t)v473);
              v260 = v259 + 1;
              if (__OFADD__(v259, 1))
                goto LABEL_307;
              v261 = v469 + *((_QWORD *)v486 + 9) * v259;
              v262 = v447;
              sub_1BA4C2DD8(v261, v447, type metadata accessor for FormatPropertyDefinition);
              v263 = (void *)v477;
              sub_1BAA930FC((uint64_t)v484, v262, v454);
              if (v263)
              {
                v264 = *(_QWORD *)(v480 + v471);
                if (!*(_QWORD *)(v264 + 16)
                  || (sub_1BB8745CC(),
                      sub_1BB872A90(),
                      v265 = sub_1BB874608(),
                      v266 = -1 << *(_BYTE *)(v264 + 32),
                      v267 = v265 & ~v266,
                      ((*(_QWORD *)(v264 + 56 + ((v267 >> 3) & 0xFFFFFFFFFFFFF8)) >> v267) & 1) == 0))
                {
LABEL_275:
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  sub_1BA4A2E80(v453, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v389 = v447;
                  goto LABEL_299;
                }
                *(_QWORD *)&v477 = 0;
                v268 = ~v266;
                while (1)
                {
                  v269 = *(unsigned __int8 *)(*(_QWORD *)(v264 + 48) + v267);
                  if (v269 != 1 && v269 != 2)
                    break;
                  v270 = sub_1BB874398();
                  swift_bridgeObjectRelease();
                  if ((v270 & 1) != 0)
                    goto LABEL_148;
                  v267 = (v267 + 1) & v268;
                  if (((*(_QWORD *)(v264 + 56 + ((v267 >> 3) & 0xFFFFFFFFFFFFF8)) >> v267) & 1) == 0)
                    goto LABEL_275;
                }
                swift_bridgeObjectRelease();
LABEL_148:

              }
              else
              {
                *(_QWORD *)&v477 = 0;
              }
              v272 = *v454;
              v271 = v454[1];
              swift_bridgeObjectRetain();
              FormatPropertyDefinition.identifier.getter();
              v274 = v273;
              v276 = v275;
              v277 = v475;
              swift_beginAccess();
              v278 = *v277;
              if (*(_QWORD *)(v278 + 16) && (v279 = sub_1BA6E35A8(v274, v276), (v280 & 1) != 0))
              {
                v281 = *(_QWORD *)(*(_QWORD *)(v278 + 56) + 8 * v279);
                swift_bridgeObjectRetain();
              }
              else
              {
                v282 = sub_1BA90BC44(0);
                if (sub_1BA79B898(v282))
                {
                  v281 = sub_1BA863650(v282);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_bridgeObjectRelease();
                  v281 = MEMORY[0x1E0DEE9E8];
                }
              }
              swift_bridgeObjectRelease();
              swift_endAccess();
              sub_1BB8745CC();
              sub_1BB8745D8();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BB872A90();
              v283 = sub_1BB874608();
              v284 = -1 << *(_BYTE *)(v281 + 32);
              v285 = v283 & ~v284;
              if (((*(_QWORD *)(v281 + 56 + ((v285 >> 3) & 0xFFFFFFFFFFFFF8)) >> v285) & 1) != 0)
              {
                v286 = ~v284;
                v287 = *(_QWORD *)(v281 + 48);
                while (1)
                {
                  v288 = v287 + 24 * v285;
                  if (*(_BYTE *)(v288 + 16) == 2)
                  {
                    v289 = *(_QWORD *)v288 == v272 && *(_QWORD *)(v288 + 8) == v271;
                    if (v289 || (sub_1BB874398() & 1) != 0)
                      break;
                  }
                  v285 = (v285 + 1) & v286;
                  if (((*(_QWORD *)(v281 + 56 + ((v285 >> 3) & 0xFFFFFFFFFFFFF8)) >> v285) & 1) == 0)
                    goto LABEL_165;
                }
                swift_bridgeObjectRelease();
              }
              else
              {
LABEL_165:
                swift_bridgeObjectRelease();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v489 = v281;
                v291 = *(_QWORD *)(v281 + 16);
                v292 = *(_QWORD *)(v281 + 24);
                swift_bridgeObjectRetain();
                if (v292 <= v291)
                {
                  if (isUniquelyReferenced_nonNull_native)
                    sub_1BA9DE850();
                  else
                    sub_1BA9EA494();
                  v281 = v489;
                  sub_1BB8745CC();
                  sub_1BB8745D8();
                  sub_1BB872A90();
                  v293 = sub_1BB874608();
                  v294 = -1 << *(_BYTE *)(v281 + 32);
                  v285 = v293 & ~v294;
                  if (((*(_QWORD *)(v281 + 56 + ((v285 >> 3) & 0xFFFFFFFFFFFFF8)) >> v285) & 1) != 0)
                  {
                    v295 = ~v294;
                    v296 = *(_QWORD *)(v281 + 48);
                    do
                    {
                      v297 = v296 + 24 * v285;
                      if (*(_BYTE *)(v297 + 16) == 2)
                      {
                        v298 = *(_QWORD *)v297 == v272 && *(_QWORD *)(v297 + 8) == v271;
                        if (v298 || (sub_1BB874398() & 1) != 0)
                          goto LABEL_315;
                      }
                      v285 = (v285 + 1) & v295;
                    }
                    while (((*(_QWORD *)(v281 + 56 + ((v285 >> 3) & 0xFFFFFFFFFFFFF8)) >> v285) & 1) != 0);
                  }
                }
                else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1BA9E7550();
                  v281 = v489;
                }
                *(_QWORD *)(v281 + ((v285 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v285;
                v299 = *(_QWORD *)(v281 + 48) + 24 * v285;
                *(_QWORD *)v299 = v272;
                *(_QWORD *)(v299 + 8) = v271;
                *(_BYTE *)(v299 + 16) = 2;
                v300 = *(_QWORD *)(v281 + 16);
                v301 = __OFADD__(v300, 1);
                v302 = v300 + 1;
                if (v301)
                  goto LABEL_308;
                *(_QWORD *)(v281 + 16) = v302;
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              v303 = v447;
              FormatPropertyDefinition.identifier.getter();
              v305 = v304;
              v307 = v306;
              v308 = v475;
              swift_beginAccess();
              v309 = swift_isUniquelyReferenced_nonNull_native();
              v489 = *v308;
              *v308 = 0x8000000000000000;
              sub_1BB4BF54C(v281, v305, v307, v309);
              *v308 = v489;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              swift_bridgeObjectRelease();
              sub_1BA4A2E80(v303, type metadata accessor for FormatPropertyDefinition);
              v259 = v260;
            }
            while (v260 != v445);
            swift_bridgeObjectRelease();
          }
          v473 = *(_QWORD **)(v453 + 24);
          if (v473)
          {
            v469 = *(_QWORD *)(v453 + 32);
            v437 = (_QWORD *)sub_1BA79B898((uint64_t)v473);
            if (v437)
            {
              v310 = v473;
              sub_1BA5DCC20((uint64_t)v473);
              v445 = (uint64_t)v310
                   + ((*((unsigned __int8 *)v486 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v486 + 80));
              swift_bridgeObjectRetain();
              v311 = 0;
              do
              {
                sub_1BA8E9170(v311, 1, (uint64_t)v473);
                v312 = (_QWORD *)(v311 + 1);
                if (__OFADD__(v311, 1))
                  goto LABEL_310;
                v313 = v445 + *((_QWORD *)v486 + 9) * v311;
                v314 = v448;
                sub_1BA4C2DD8(v313, v448, type metadata accessor for FormatPropertyDefinition);
                v315 = (void *)v477;
                sub_1BAA939B4((uint64_t)v484, v314, v454);
                if (v315)
                {
                  v316 = *(_QWORD *)(v480 + v471);
                  if (!*(_QWORD *)(v316 + 16)
                    || (sub_1BB8745CC(),
                        sub_1BB872A90(),
                        v317 = sub_1BB874608(),
                        v318 = -1 << *(_BYTE *)(v316 + 32),
                        v319 = v317 & ~v318,
                        ((*(_QWORD *)(v316 + 56 + ((v319 >> 3) & 0xFFFFFFFFFFFFF8)) >> v319) & 1) == 0))
                  {
LABEL_276:
                    swift_willThrow();
                    swift_release();
                    swift_release();
                    sub_1BA5DCC4C((uint64_t)v473);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1BA4A2E80(v453, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v389 = v448;
                    goto LABEL_299;
                  }
                  *(_QWORD *)&v477 = 0;
                  v320 = ~v318;
                  while (1)
                  {
                    v321 = *(unsigned __int8 *)(*(_QWORD *)(v316 + 48) + v319);
                    if (v321 != 1 && v321 != 2)
                      break;
                    v322 = sub_1BB874398();
                    swift_bridgeObjectRelease();
                    if ((v322 & 1) != 0)
                      goto LABEL_200;
                    v319 = (v319 + 1) & v320;
                    if (((*(_QWORD *)(v316 + 56 + ((v319 >> 3) & 0xFFFFFFFFFFFFF8)) >> v319) & 1) == 0)
                      goto LABEL_276;
                  }
                  swift_bridgeObjectRelease();
LABEL_200:

                }
                else
                {
                  *(_QWORD *)&v477 = 0;
                }
                v324 = *v454;
                v323 = v454[1];
                swift_bridgeObjectRetain();
                FormatPropertyDefinition.identifier.getter();
                v326 = v325;
                v328 = v327;
                v329 = v475;
                swift_beginAccess();
                v330 = *v329;
                if (*(_QWORD *)(v330 + 16) && (v331 = sub_1BA6E35A8(v326, v328), (v332 & 1) != 0))
                {
                  v333 = *(_QWORD *)(*(_QWORD *)(v330 + 56) + 8 * v331);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  v334 = sub_1BA90BC44(0);
                  if (sub_1BA79B898(v334))
                  {
                    v333 = sub_1BA863650(v334);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v333 = MEMORY[0x1E0DEE9E8];
                  }
                }
                swift_bridgeObjectRelease();
                swift_endAccess();
                sub_1BB8745CC();
                sub_1BB8745D8();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BB872A90();
                v335 = sub_1BB874608();
                v336 = -1 << *(_BYTE *)(v333 + 32);
                v337 = v335 & ~v336;
                if (((*(_QWORD *)(v333 + 56 + ((v337 >> 3) & 0xFFFFFFFFFFFFF8)) >> v337) & 1) != 0)
                {
                  v338 = ~v336;
                  v339 = *(_QWORD *)(v333 + 48);
                  while (1)
                  {
                    v340 = v339 + 24 * v337;
                    if (*(_BYTE *)(v340 + 16) == 3)
                    {
                      v341 = *(_QWORD *)v340 == v324 && *(_QWORD *)(v340 + 8) == v323;
                      if (v341 || (sub_1BB874398() & 1) != 0)
                        break;
                    }
                    v337 = (v337 + 1) & v338;
                    if (((*(_QWORD *)(v333 + 56 + ((v337 >> 3) & 0xFFFFFFFFFFFFF8)) >> v337) & 1) == 0)
                      goto LABEL_217;
                  }
                  swift_bridgeObjectRelease();
                }
                else
                {
LABEL_217:
                  swift_bridgeObjectRelease();
                  v342 = swift_isUniquelyReferenced_nonNull_native();
                  v489 = v333;
                  v343 = *(_QWORD *)(v333 + 16);
                  v344 = *(_QWORD *)(v333 + 24);
                  swift_bridgeObjectRetain();
                  if (v344 <= v343)
                  {
                    if (v342)
                      sub_1BA9DE850();
                    else
                      sub_1BA9EA494();
                    v333 = v489;
                    sub_1BB8745CC();
                    sub_1BB8745D8();
                    sub_1BB872A90();
                    v345 = sub_1BB874608();
                    v346 = -1 << *(_BYTE *)(v333 + 32);
                    v337 = v345 & ~v346;
                    if (((*(_QWORD *)(v333 + 56 + ((v337 >> 3) & 0xFFFFFFFFFFFFF8)) >> v337) & 1) != 0)
                    {
                      v347 = ~v346;
                      v348 = *(_QWORD *)(v333 + 48);
                      do
                      {
                        v349 = v348 + 24 * v337;
                        if (*(_BYTE *)(v349 + 16) == 3)
                        {
                          v350 = *(_QWORD *)v349 == v324 && *(_QWORD *)(v349 + 8) == v323;
                          if (v350 || (sub_1BB874398() & 1) != 0)
                            goto LABEL_315;
                        }
                        v337 = (v337 + 1) & v347;
                      }
                      while (((*(_QWORD *)(v333 + 56 + ((v337 >> 3) & 0xFFFFFFFFFFFFF8)) >> v337) & 1) != 0);
                    }
                  }
                  else if ((v342 & 1) == 0)
                  {
                    sub_1BA9E7550();
                    v333 = v489;
                  }
                  *(_QWORD *)(v333 + ((v337 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v337;
                  v351 = *(_QWORD *)(v333 + 48) + 24 * v337;
                  *(_QWORD *)v351 = v324;
                  *(_QWORD *)(v351 + 8) = v323;
                  *(_BYTE *)(v351 + 16) = 3;
                  v352 = *(_QWORD *)(v333 + 16);
                  v301 = __OFADD__(v352, 1);
                  v353 = v352 + 1;
                  if (v301)
                    goto LABEL_311;
                  *(_QWORD *)(v333 + 16) = v353;
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                v354 = v448;
                FormatPropertyDefinition.identifier.getter();
                v356 = v355;
                v358 = v357;
                v359 = v475;
                swift_beginAccess();
                v360 = swift_isUniquelyReferenced_nonNull_native();
                v489 = *v359;
                *v359 = 0x8000000000000000;
                sub_1BB4BF54C(v333, v356, v358, v360);
                *v359 = v489;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess();
                swift_bridgeObjectRelease();
                sub_1BA4A2E80(v354, type metadata accessor for FormatPropertyDefinition);
                v311 = (unint64_t)v312;
              }
              while (v312 != v437);
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            v361 = v469;
            swift_bridgeObjectRetain();
            sub_1BA5DCC4C((uint64_t)v473);
            v434 = sub_1BA79B898(v361);
            if (v434)
            {
              v362 = 0;
              v436 = v469 + v438;
              do
              {
                sub_1BA8E9170(v362, 1, v469);
                v435 = v362 + 1;
                if (__OFADD__(v362, 1))
                  goto LABEL_313;
                v363 = v436 + v362 * v439;
                v364 = v452;
                sub_1BA4C2DD8(v363, v452, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
                v473 = *(_QWORD **)(v364 + 16);
                v437 = (_QWORD *)sub_1BA79B898((uint64_t)v473);
                if (v437)
                {
                  v445 = (uint64_t)v473
                       + ((*((unsigned __int8 *)v486 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v486 + 80));
                  swift_bridgeObjectRetain();
                  v365 = 0;
                  do
                  {
                    sub_1BA8E9170(v365, 1, (uint64_t)v473);
                    v369 = (_QWORD *)(v365 + 1);
                    if (__OFADD__(v365, 1))
                      goto LABEL_312;
                    v370 = v445 + *((_QWORD *)v486 + 9) * v365;
                    v371 = v449;
                    sub_1BA4C2DD8(v370, v449, type metadata accessor for FormatPropertyDefinition);
                    v372 = (void *)v477;
                    sub_1BAA93FB4((uint64_t)v484, v371, (uint64_t)v454);
                    if (v372)
                    {
                      v373 = *(_QWORD *)(v480 + v471);
                      if (!*(_QWORD *)(v373 + 16)
                        || (sub_1BB8745CC(),
                            sub_1BB872A90(),
                            v374 = sub_1BB874608(),
                            v375 = -1 << *(_BYTE *)(v373 + 32),
                            v376 = v374 & ~v375,
                            ((*(_QWORD *)(v373 + 56 + ((v376 >> 3) & 0xFFFFFFFFFFFFF8)) >> v376) & 1) == 0))
                      {
LABEL_298:
                        swift_willThrow();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        sub_1BA4A2E80(v452, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
                        swift_bridgeObjectRelease();
                        sub_1BA4A2E80(v453, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        v389 = v449;
LABEL_299:
                        sub_1BA4A2E80(v389, type metadata accessor for FormatPropertyDefinition);
                        v412 = (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition;
                        v413 = v454;
LABEL_300:
                        sub_1BA4A2E80((uint64_t)v413, v412);
LABEL_77:
                        swift_release();
LABEL_93:
                        swift_bridgeObjectRelease();
                        return swift_bridgeObjectRelease();
                      }
                      *(_QWORD *)&v477 = 0;
                      v377 = ~v375;
                      while (1)
                      {
                        v378 = *(unsigned __int8 *)(*(_QWORD *)(v373 + 48) + v376);
                        if (v378 != 1 && v378 != 2)
                          break;
                        v379 = sub_1BB874398();
                        swift_bridgeObjectRelease();
                        if ((v379 & 1) != 0)
                          goto LABEL_256;
                        v376 = (v376 + 1) & v377;
                        if (((*(_QWORD *)(v373 + 56 + ((v376 >> 3) & 0xFFFFFFFFFFFFF8)) >> v376) & 1) == 0)
                          goto LABEL_298;
                      }
                      swift_bridgeObjectRelease();
LABEL_256:

                    }
                    else
                    {
                      *(_QWORD *)&v477 = 0;
                    }
                    v367 = *v454;
                    v366 = v454[1];
                    swift_bridgeObjectRetain();
                    v368 = v449;
                    sub_1BAA9255C(v449, v367, v366, 4, v472);
                    swift_bridgeObjectRelease();
                    sub_1BA4A2E80(v368, type metadata accessor for FormatPropertyDefinition);
                    v365 = (unint64_t)v369;
                  }
                  while (v369 != v437);
                  swift_bridgeObjectRelease();
                }
                sub_1BA4A2E80(v452, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
                v362 = v435;
              }
              while (v435 != v434);
            }
            swift_bridgeObjectRelease();
          }
          sub_1BA4A2E80(v453, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          v256 = (unint64_t)v442;
        }
        while (v442 != v443);
        swift_bridgeObjectRelease();
      }
      sub_1BA4A2E80((uint64_t)v454, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v238 = v466;
    }
    while (v466 != v467);
    swift_bridgeObjectRelease();
  }
  v380 = OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings;
  v381 = (uint64_t *)v477;
  sub_1BAA94450(v440, (uint64_t)v484);
  v442 = v381;
  if (v381)
  {
    v382 = *(_QWORD *)(v480 + v380);
    if (!*(_QWORD *)(v382 + 16)
      || (sub_1BB8745CC(),
          v481 = "on",
          sub_1BB872A90(),
          v383 = sub_1BB874608(),
          v384 = -1 << *(_BYTE *)(v382 + 32),
          v385 = v383 & ~v384,
          ((*(_QWORD *)(v382 + 56 + ((v385 >> 3) & 0xFFFFFFFFFFFFF8)) >> v385) & 1) == 0))
    {
LABEL_272:
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_83;
    }
    v479 = 0;
    v386 = ~v384;
    v486 = "unusedProperties";
    while (1)
    {
      v387 = *(unsigned __int8 *)(*(_QWORD *)(v382 + 48) + v385);
      if (v387 != 1 && v387 != 2)
        break;
      v388 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v388 & 1) != 0)
        goto LABEL_278;
      v385 = (v385 + 1) & v386;
      if (((*(_QWORD *)(v382 + 56 + ((v385 >> 3) & 0xFFFFFFFFFFFFF8)) >> v385) & 1) == 0)
        goto LABEL_272;
    }
    swift_bridgeObjectRelease();
LABEL_278:

  }
  else
  {
    v479 = 0;
  }
  v390 = (char **)v485;
  swift_beginAccess();
  v481 = *v390;
  v486 = (const char *)sub_1BA79B898((uint64_t)v481);
  if (!v486)
  {
LABEL_289:
    v403 = (uint64_t *)v482;
    swift_beginAccess();
    v404 = *v403;
    v405 = v483;
    swift_beginAccess();
    v406 = *v405;
    v407 = v440;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB064474(v407, v476, v441, v404, v406, (uint64_t)v464);
    v408 = v474[3];
    v409 = v474[4];
    __swift_project_boxed_opaque_existential_1(v474, v408);
    if ((MEMORY[0x1BCCDED80](v408, v409) & 1) != 0)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      v410 = v479;
      sub_1BAA948D8(v464, (uint64_t)v484);
      if (!v410)
      {
        v420 = v411;
        v421 = v474[3];
        v422 = v474[4];
        __swift_project_boxed_opaque_existential_1(v474, v421);
        if ((MEMORY[0x1BCCDED80](v421, v422) & 1) == 0)
        {
          v423 = v464;
          sub_1BA4C2DD8((uint64_t)v464, v463, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
          swift_storeEnumTagMultiPayload();
          v488 = sub_1BA6B0504();
          v424 = sub_1BAA8D8E8(v420, v423);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BB384A8C(v424);
          v425 = *v483;
          swift_bridgeObjectRetain();
          v426 = sub_1BAA96844(v440, v425, v423);
          swift_bridgeObjectRelease();
          sub_1BB384A8C(v426);
          v427 = sub_1BAA9C430(v423);
          sub_1BB384A8C(v427);
          v428 = v488;
          if (sub_1BA79B898(v488))
          {
            v429 = v463;
            v430 = v461;
            sub_1BA4C2DD8(v463, v461, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
            type metadata accessor for FormatDerivedDataWarning();
            v431 = swift_allocObject();
            sub_1BA5193C4(v430, v431 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_file, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
            *(_QWORD *)(v431 + OBJC_IVAR____TtC8NewsFeed24FormatDerivedDataWarning_errors) = v428;
            sub_1BA4A2870(&qword_1EF2AEE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataWarning, (uint64_t)&protocol conformance descriptor for FormatDerivedDataWarning);
            swift_allocError();
            *v432 = v431;
            swift_willThrow();
            swift_release();
            swift_release();
            sub_1BA4A2E80(v429, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          }
          else
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1BA5193C4(v463, v462, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          }
          goto LABEL_294;
        }
        type metadata accessor for FormatDerivedDataError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_293:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_294:
        v412 = (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage;
        v413 = v464;
        goto LABEL_300;
      }
    }
    swift_release();
    goto LABEL_293;
  }
  v391 = v457 + *(int *)(v455 + 48);
  v392 = (uint64_t)&v481[(*(unsigned __int8 *)(v456 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v456 + 80)];
  v485 = *(_QWORD *)(v456 + 72);
  swift_bridgeObjectRetain();
  v393 = 0;
  while (1)
  {
    sub_1BA4C2DD8(v392, v457, (uint64_t (*)(_QWORD))sub_1BAA9864C);
    v396 = (const char *)(v393 + 1);
    if (__OFADD__(v393, 1))
      break;
    sub_1BA865168(*(_QWORD *)v391, *(_QWORD *)(v391 + 8), *(_BYTE *)(v391 + 16));
    v397 = v459;
    sub_1BA5193C4(v457, v459, type metadata accessor for FormatDerivedDataResultOptionReference);
    v399 = *(_QWORD *)(v397 + 8);
    v398 = *(_QWORD *)(v397 + 16);
    v400 = (uint64_t)v475;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v400 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v399, v398);
      if ((v401 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        v402 = v458;
        sub_1BA4C2DD8(v459, v458, type metadata accessor for FormatDerivedDataResultOptionReference);
        sub_1BA4A2E80(v402, type metadata accessor for FormatDerivedDataResultOptionReference);
        goto LABEL_283;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    v394 = v458;
    sub_1BA4C2DD8(v459, v458, type metadata accessor for FormatDerivedDataResultOptionReference);
    v395 = *(_QWORD *)(v394 + 32);
    sub_1BA4A2E80(v394, type metadata accessor for FormatDerivedDataResultOptionReference);
    if ((v395 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v414 = v459;
      v415 = *(_QWORD *)(v459 + 16);
      v416 = *(_QWORD *)(v459 + 40);
      v417 = *(_QWORD *)(v459 + 48);
      v418 = *(_BYTE *)(v459 + 56);
      *(_QWORD *)v419 = *(_QWORD *)(v459 + 8);
      *(_QWORD *)(v419 + 8) = v415;
      *(_QWORD *)(v419 + 16) = v416;
      *(_QWORD *)(v419 + 24) = v417;
      *(_BYTE *)(v419 + 32) = v418;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1BA8D4E00(v416, v417, v418);
      swift_willThrow();
      swift_release();
      swift_release();
      v412 = type metadata accessor for FormatDerivedDataResultOptionReference;
      v413 = (_QWORD *)v414;
      goto LABEL_300;
    }
LABEL_283:
    sub_1BA4A2E80(v459, type metadata accessor for FormatDerivedDataResultOptionReference);
    ++v393;
    v392 += v485;
    if (v396 == v486)
    {
      swift_bridgeObjectRelease();
      goto LABEL_289;
    }
  }
  __break(1u);
LABEL_305:
  __break(1u);
LABEL_306:
  __break(1u);
LABEL_307:
  __break(1u);
LABEL_308:
  __break(1u);
LABEL_309:
  __break(1u);
LABEL_310:
  __break(1u);
LABEL_311:
  __break(1u);
LABEL_312:
  __break(1u);
LABEL_313:
  __break(1u);
LABEL_314:
  swift_release();
  __break(1u);
LABEL_315:
  result = sub_1BB874554();
  __break(1u);
  return result;
}

uint64_t sub_1BAA91CBC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[6];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v40 = a4;
  v41 = a8;
  v36 = a6;
  v34 = a7;
  v35 = a9;
  v38 = a5;
  v39 = a3;
  sub_1BA4B07F0(0, &qword_1EF2A9CD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - v12;
  v14 = type metadata accessor for FormatDerivedDataFile();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2[3];
  v19 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v18);
  if ((MEMORY[0x1BCCDED80](v18, v19) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    v20 = swift_allocError();
    swift_storeEnumTagMultiPayload();
LABEL_10:
    result = swift_willThrow();
LABEL_11:
    *v41 = v20;
    return result;
  }
  v21 = v38;
  v22 = swift_bridgeObjectRetain();
  sub_1BB5525E8(v22);
  v23 = a1;
  if (!*(_QWORD *)(v40 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_9:
    sub_1BA5C699C((uint64_t)v13, &qword_1EF2A9CD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    v20 = swift_allocError();
    v29 = v23[1];
    *(_QWORD *)v30 = *v23;
    *(_QWORD *)(v30 + 8) = v29;
    *(_BYTE *)(v30 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v24 = *a1;
  v25 = a1[1];
  swift_bridgeObjectRetain();
  v26 = sub_1BB4AB4B4(v24, v25, 0);
  if ((v27 & 1) != 0)
  {
    sub_1BA4C2DD8(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v15 + 72) * v26, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v28, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_9;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
  v32 = v37;
  sub_1BB73FBD8(v21, &v42);
  v20 = v32;
  if (v32)
  {
    result = sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    goto LABEL_11;
  }
  sub_1BB3DB6E0((uint64_t)&unk_1E72683C8, &v47);
  v62 = v42;
  sub_1BA4F6CCC((uint64_t)&v62);
  v61 = *((_QWORD *)&v42 + 1);
  sub_1BA4F6CCC((uint64_t)&v61);
  v60 = v43;
  sub_1BA4F6CCC((uint64_t)&v60);
  v59 = v44;
  sub_1BA4F6CCC((uint64_t)&v59);
  v58 = v45;
  sub_1BA4F6CCC((uint64_t)&v58);
  v57 = v46;
  sub_1BA4F6CCC((uint64_t)&v57);
  v55 = v48;
  v56 = v50;
  v54 = v47;
  sub_1BB424A6C(v47, v48, v50);
  v33 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v33);
  sub_1BB41FC38((uint64_t)v23, &v47, v35);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
  sub_1BA4F6CCC((uint64_t)&v54);
  swift_bridgeObjectRelease();
  sub_1BA4F6CCC((uint64_t)&v55);
  v53[0] = v49;
  sub_1BA4F6CCC((uint64_t)v53);
  sub_1BA4F6CCC((uint64_t)&v56);
  v52 = v51;
  return sub_1BA4F6CCC((uint64_t)&v52);
}

BOOL sub_1BAA921F4(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 128) & 0xFE) == 192;
}

uint64_t sub_1BAA92208(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = v4;
  v6 = v3;
  v10 = type metadata accessor for FormatDerivedDataBinderResult();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v35 - v15;
  swift_bridgeObjectRetain();
  sub_1BAC9C774(a2, a3, a1);
  v39 = MEMORY[0x1E0DEE9E8];
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = *(int *)(v10 + 28);
    v35[1] = v6;
    v36 = v19;
    v20 = v17 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v37 = *(_QWORD *)(v11 + 72);
    v35[0] = v17;
    swift_bridgeObjectRetain();
    v21 = v20;
    v22 = v18;
    do
    {
      sub_1BA4C2DD8(v21, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
      v23 = *(_QWORD *)&v16[v36];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
      sub_1BA6E3FB8(v23);
      v21 += v37;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v38 = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRetain();
    v24 = v37;
    while (1)
    {
      sub_1BA4C2DD8(v20, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
      sub_1BAA97558(&v38, (uint64_t)v13);
      if (v5)
        break;
      v5 = 0;
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
      v20 += v24;
      if (!--v18)
      {
        swift_bridgeObjectRelease_n();
        v25 = v38;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9E0];
LABEL_9:
    swift_retain();
    v26 = sub_1BAA9AD90(v25);
    if (v5)
    {
      swift_release();
      v27 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = v26;
      swift_bridgeObjectRelease();
      swift_release();
      v29 = sub_1BAA8D6EC(v28);
      swift_release();
      v38 = MEMORY[0x1E0DEE9D8];
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v30; ++i)
        {
          v32 = swift_bridgeObjectRetain();
          sub_1BA7949B4(v32);
        }
        swift_bridgeObjectRelease_n();
        v33 = v38;
      }
      else
      {
        swift_bridgeObjectRelease();
        v33 = MEMORY[0x1E0DEE9D8];
      }
      v27 = sub_1BAA9AF9C(v33, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return v27;
  }
  return result;
}

BOOL sub_1BAA92524(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 128) & 0xFD) == 192;
}

BOOL sub_1BAA92538(uint64_t a1)
{
  char v1;
  BOOL v2;
  unsigned int v3;

  v1 = *(_BYTE *)(a1 + 128);
  v2 = (v1 & 0xE0) == 192;
  v3 = (v1 + 61);
  return !v2 || v3 < 0xFD;
}

uint64_t sub_1BAA9255C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26[2];
  unsigned __int8 v27;
  uint64_t v28;

  v9 = (uint64_t *)(a5 + 16);
  FormatPropertyDefinition.identifier.getter();
  v11 = v10;
  v13 = v12;
  swift_beginAccess();
  v14 = *(_QWORD *)(a5 + 16);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_1BA6E35A8(v11, v13), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  v28 = v17;
  swift_endAccess();
  sub_1BA9ED4DC(a2, a3, a4);
  sub_1BA9D9CB4((uint64_t)v26, a2, a3, a4);
  sub_1BA865168(v26[0], v26[1], v27);
  FormatPropertyDefinition.identifier.getter();
  v19 = v18;
  v21 = v20;
  v22 = v28;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v9;
  *v9 = 0x8000000000000000;
  sub_1BB4BF54C(v22, v19, v21, isUniquelyReferenced_nonNull_native);
  *v9 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1BAA926D4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[3];
  _QWORD *v103;
  _QWORD *v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t *v107;
  uint64_t *v108;
  uint64_t v109;

  v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v105 = (_QWORD *)((char *)v102 - v11);
  MEMORY[0x1E0C80A78](v12);
  v106 = (_QWORD *)((char *)v102 - v13);
  MEMORY[0x1E0C80A78](v14);
  v107 = (_QWORD *)((char *)v102 - v15);
  MEMORY[0x1E0C80A78](v16);
  v108 = (_QWORD *)((char *)v102 - v17);
  v18 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  FormatPropertyDefinition.identifier.getter();
  if (*(_QWORD *)(v21 + 16) && (v24 = sub_1BA6E35A8(v22, v23), (v25 & 1) != 0))
  {
    v109 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v109 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB12A328();
  v27 = v26;
  sub_1BA4C2DD8(a2, (uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
  if ((v27 & 1) != 0)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
    v28 = (uint64_t)v108;
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v29 = (uint64_t)v105;
    v30 = (uint64_t)v106;
    v31 = (uint64_t)v107;
LABEL_7:
    sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_8:
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_9:
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_10:
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  v102[1] = a2;
  v102[2] = v3;
  v103 = v9;
  v104 = a3;
  sub_1BB12AA28();
  v34 = v33;
  if (*(_QWORD *)(v33 + 16))
  {
    sub_1BB8745CC();
    v102[0] = "isolatedThunderstormsNight";
    sub_1BB872A90();
    v35 = sub_1BB874608();
    v36 = -1 << *(_BYTE *)(v34 + 32);
    v37 = v35 & ~v36;
    if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
    {
      v38 = ~v36;
      while (1)
      {
        v39 = *(unsigned __int8 *)(*(_QWORD *)(v34 + 48) + v37);
        if (v39 != 1 && v39 != 2)
          break;
        v40 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
          goto LABEL_80;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_18;
      }
      swift_bridgeObjectRelease();
LABEL_80:
      swift_bridgeObjectRelease();
      v9 = v103;
      a3 = v104;
      goto LABEL_6;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatPropertyDefinition);
  a3 = v104;
  v41 = v108;
  sub_1BA4C2DD8((uint64_t)v104, (uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v42 = v109;
  v9 = v103;
  if (*(_QWORD *)(v109 + 16))
  {
    v44 = *v41;
    v43 = v41[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v45 = sub_1BB874608();
    v46 = -1 << *(_BYTE *)(v42 + 32);
    v47 = v45 & ~v46;
    v48 = v42 + 56;
    if (((*(_QWORD *)(v42 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) != 0)
    {
      v49 = ~v46;
      v50 = *(_QWORD *)(v109 + 48);
      while (1)
      {
        v51 = v50 + 24 * v47;
        if (!*(_BYTE *)(v51 + 16))
        {
          v52 = *(_QWORD *)v51 == v44 && *(_QWORD *)(v51 + 8) == v43;
          if (v52 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v47 = (v47 + 1) & v49;
        if (((*(_QWORD *)(v48 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) == 0)
          goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v105;
      v30 = (uint64_t)v106;
      v31 = (uint64_t)v107;
      v28 = (uint64_t)v108;
      goto LABEL_7;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    v42 = v109;
    v41 = v108;
  }
  sub_1BA4A2E80((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v53 = v107;
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (*(_QWORD *)(v42 + 16))
  {
    v55 = *v53;
    v54 = v53[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v56 = sub_1BB874608();
    v57 = -1 << *(_BYTE *)(v42 + 32);
    v58 = v56 & ~v57;
    v59 = v42 + 56;
    if (((*(_QWORD *)(v42 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) != 0)
    {
      v60 = ~v57;
      v61 = *(_QWORD *)(v109 + 48);
      while (1)
      {
        v62 = v61 + 24 * v58;
        if (*(_BYTE *)(v62 + 16) == 1)
        {
          v63 = *(_QWORD *)v62 == v55 && *(_QWORD *)(v62 + 8) == v54;
          if (v63 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v58 = (v58 + 1) & v60;
        if (((*(_QWORD *)(v59 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
          goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v105;
      v30 = (uint64_t)v106;
      v31 = (uint64_t)v107;
      goto LABEL_8;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    v42 = v109;
    v53 = v107;
  }
  sub_1BA4A2E80((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v64 = v106;
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (*(_QWORD *)(v42 + 16))
  {
    v66 = *v64;
    v65 = v64[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v67 = sub_1BB874608();
    v68 = -1 << *(_BYTE *)(v42 + 32);
    v69 = v67 & ~v68;
    v70 = v42 + 56;
    if (((*(_QWORD *)(v42 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0)
    {
      v71 = ~v68;
      v72 = *(_QWORD *)(v109 + 48);
      while (1)
      {
        v73 = v72 + 24 * v69;
        if (*(_BYTE *)(v73 + 16) == 2)
        {
          v74 = *(_QWORD *)v73 == v66 && *(_QWORD *)(v73 + 8) == v65;
          if (v74 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v69 = (v69 + 1) & v71;
        if (((*(_QWORD *)(v70 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
          goto LABEL_53;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v105;
      v30 = (uint64_t)v106;
      goto LABEL_9;
    }
LABEL_53:
    swift_bridgeObjectRelease();
    v42 = v109;
    v64 = v106;
  }
  sub_1BA4A2E80((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v75 = v105;
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (*(_QWORD *)(v42 + 16))
  {
    v77 = *v75;
    v76 = v75[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v78 = sub_1BB874608();
    v79 = -1 << *(_BYTE *)(v42 + 32);
    v80 = v78 & ~v79;
    v81 = v42 + 56;
    if (((*(_QWORD *)(v42 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) != 0)
    {
      v82 = ~v79;
      v83 = *(_QWORD *)(v109 + 48);
      while (1)
      {
        v84 = v83 + 24 * v80;
        if (*(_BYTE *)(v84 + 16) == 3)
        {
          v85 = *(_QWORD *)v84 == v77 && *(_QWORD *)(v84 + 8) == v76;
          if (v85 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v80 = (v80 + 1) & v82;
        if (((*(_QWORD *)(v81 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
          goto LABEL_65;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v105;
      goto LABEL_10;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    v42 = v109;
    v75 = v105;
  }
  sub_1BA4A2E80((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (!*(_QWORD *)(v42 + 16))
    goto LABEL_78;
  v87 = *v9;
  v86 = v9[1];
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v88 = sub_1BB874608();
  v89 = -1 << *(_BYTE *)(v42 + 32);
  v90 = v88 & ~v89;
  v91 = v42 + 56;
  if (((*(_QWORD *)(v42 + 56 + ((v90 >> 3) & 0xFFFFFFFFFFFFF8)) >> v90) & 1) == 0)
  {
LABEL_77:
    swift_bridgeObjectRelease();
LABEL_78:
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    v97 = v96;
    v99 = *a3;
    v98 = a3[1];
    swift_bridgeObjectRetain();
    FormatPropertyDefinition.identifier.getter();
    *v97 = v99;
    v97[1] = v98;
    v97[2] = v100;
    v97[3] = v101;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v92 = ~v89;
  v93 = *(_QWORD *)(v109 + 48);
  while (1)
  {
    v94 = v93 + 24 * v90;
    if (*(_BYTE *)(v94 + 16) == 4)
    {
      v95 = *(_QWORD *)v94 == v87 && *(_QWORD *)(v94 + 8) == v86;
      if (v95 || (sub_1BB874398() & 1) != 0)
        break;
    }
    v90 = (v90 + 1) & v92;
    if (((*(_QWORD *)(v91 + ((v90 >> 3) & 0xFFFFFFFFFFFFF8)) >> v90) & 1) == 0)
      goto LABEL_77;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1BAA930FC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[4];
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t *v95;

  v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v93 = (_QWORD *)((char *)v89 - v11);
  MEMORY[0x1E0C80A78](v12);
  v94 = (_QWORD *)((char *)v89 - v13);
  MEMORY[0x1E0C80A78](v14);
  v95 = (_QWORD *)((char *)v89 - v15);
  v16 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  FormatPropertyDefinition.identifier.getter();
  if (*(_QWORD *)(v19 + 16) && (v22 = sub_1BA6E35A8(v20, v21), (v23 & 1) != 0))
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v22);
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB12A328();
  v26 = v25;
  sub_1BA4C2DD8(a2, (uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
  if ((v26 & 1) != 0)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
    v27 = (uint64_t)v95;
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_7:
    sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v28 = (uint64_t)v94;
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v29 = (uint64_t)v93;
LABEL_8:
    sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_9:
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  v91 = a3;
  v92 = v24;
  v89[2] = a2;
  v89[3] = v3;
  v90 = v9;
  sub_1BB12AA28();
  v32 = v31;
  if (*(_QWORD *)(v31 + 16))
  {
    sub_1BB8745CC();
    v89[1] = "isolatedThunderstormsNight";
    sub_1BB872A90();
    v33 = sub_1BB874608();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
    {
      v36 = ~v34;
      while (1)
      {
        v37 = *(unsigned __int8 *)(*(_QWORD *)(v32 + 48) + v35);
        if (v37 != 1 && v37 != 2)
          break;
        v38 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v38 & 1) != 0)
          goto LABEL_67;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_17;
      }
      swift_bridgeObjectRelease();
LABEL_67:
      swift_bridgeObjectRelease();
      v9 = v90;
      a3 = v91;
      goto LABEL_6;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
  a3 = v91;
  v39 = v95;
  sub_1BA4C2DD8((uint64_t)v91, (uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v40 = v92;
  v9 = v90;
  if (*(_QWORD *)(v92 + 16))
  {
    v42 = *v39;
    v41 = v39[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v43 = sub_1BB874608();
    v44 = -1 << *(_BYTE *)(v40 + 32);
    v45 = v43 & ~v44;
    v46 = v40 + 56;
    if (((*(_QWORD *)(v40 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0)
    {
      v47 = ~v44;
      v48 = *(_QWORD *)(v92 + 48);
      while (1)
      {
        v49 = v48 + 24 * v45;
        if (*(_BYTE *)(v49 + 16) == 1)
        {
          v50 = *(_QWORD *)v49 == v42 && *(_QWORD *)(v49 + 8) == v41;
          if (v50 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v45 = (v45 + 1) & v47;
        if (((*(_QWORD *)(v46 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      v27 = (uint64_t)v95;
      goto LABEL_7;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v40 = v92;
    v39 = v95;
  }
  sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v51 = v94;
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (*(_QWORD *)(v40 + 16))
  {
    v53 = *v51;
    v52 = v51[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v54 = sub_1BB874608();
    v55 = -1 << *(_BYTE *)(v40 + 32);
    v56 = v54 & ~v55;
    v57 = v40 + 56;
    if (((*(_QWORD *)(v40 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) != 0)
    {
      v58 = ~v55;
      v59 = *(_QWORD *)(v92 + 48);
      while (1)
      {
        v60 = v59 + 24 * v56;
        if (*(_BYTE *)(v60 + 16) == 2)
        {
          v61 = *(_QWORD *)v60 == v53 && *(_QWORD *)(v60 + 8) == v52;
          if (v61 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v56 = (v56 + 1) & v58;
        if (((*(_QWORD *)(v57 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) == 0)
          goto LABEL_40;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v93;
      v28 = (uint64_t)v94;
      goto LABEL_8;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    v40 = v92;
    v51 = v94;
  }
  sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v62 = v93;
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (*(_QWORD *)(v40 + 16))
  {
    v64 = *v62;
    v63 = v62[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v65 = sub_1BB874608();
    v66 = -1 << *(_BYTE *)(v40 + 32);
    v67 = v65 & ~v66;
    v68 = v40 + 56;
    if (((*(_QWORD *)(v40 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) != 0)
    {
      v69 = ~v66;
      v70 = *(_QWORD *)(v92 + 48);
      while (1)
      {
        v71 = v70 + 24 * v67;
        if (*(_BYTE *)(v71 + 16) == 3)
        {
          v72 = *(_QWORD *)v71 == v64 && *(_QWORD *)(v71 + 8) == v63;
          if (v72 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v67 = (v67 + 1) & v69;
        if (((*(_QWORD *)(v68 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
          goto LABEL_52;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v93;
      goto LABEL_9;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    v40 = v92;
    v62 = v93;
  }
  sub_1BA4A2E80((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (!*(_QWORD *)(v40 + 16))
    goto LABEL_65;
  v74 = *v9;
  v73 = v9[1];
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v75 = sub_1BB874608();
  v76 = -1 << *(_BYTE *)(v40 + 32);
  v77 = v75 & ~v76;
  v78 = v40 + 56;
  if (((*(_QWORD *)(v40 + 56 + ((v77 >> 3) & 0xFFFFFFFFFFFFF8)) >> v77) & 1) == 0)
  {
LABEL_64:
    swift_bridgeObjectRelease();
LABEL_65:
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    v84 = v83;
    v86 = *a3;
    v85 = a3[1];
    swift_bridgeObjectRetain();
    FormatPropertyDefinition.identifier.getter();
    *v84 = v86;
    v84[1] = v85;
    v84[2] = v87;
    v84[3] = v88;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v79 = ~v76;
  v80 = *(_QWORD *)(v92 + 48);
  while (1)
  {
    v81 = v80 + 24 * v77;
    if (*(_BYTE *)(v81 + 16) == 4)
    {
      v82 = *(_QWORD *)v81 == v74 && *(_QWORD *)(v81 + 8) == v73;
      if (v82 || (sub_1BB874398() & 1) != 0)
        break;
    }
    v77 = (v77 + 1) & v79;
    if (((*(_QWORD *)(v78 + ((v77 >> 3) & 0xFFFFFFFFFFFFF8)) >> v77) & 1) == 0)
      goto LABEL_64;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1BAA939B4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t *v65;

  v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v65 = (_QWORD *)((char *)v61 - v11);
  v12 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  FormatPropertyDefinition.identifier.getter();
  if (*(_QWORD *)(v15 + 16) && (v18 = sub_1BA6E35A8(v16, v17), (v19 & 1) != 0))
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB12A328();
  v22 = v21;
  sub_1BA4C2DD8(a2, (uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
  if ((v22 & 1) != 0)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
    v23 = (uint64_t)v65;
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_7:
    sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  v63 = a3;
  v64 = v20;
  v61[2] = a2;
  v62 = v9;
  v61[1] = v3;
  sub_1BB12AA28();
  v26 = v25;
  if (*(_QWORD *)(v25 + 16))
  {
    sub_1BB8745CC();
    v61[0] = "isolatedThunderstormsNight";
    sub_1BB872A90();
    v27 = sub_1BB874608();
    v28 = -1 << *(_BYTE *)(v26 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
    {
      v30 = ~v28;
      while (1)
      {
        v31 = *(unsigned __int8 *)(*(_QWORD *)(v26 + 48) + v29);
        if (v31 != 1 && v31 != 2)
          break;
        v32 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
          goto LABEL_41;
        v29 = (v29 + 1) & v30;
        if (((*(_QWORD *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      v9 = v62;
      a3 = v63;
      goto LABEL_6;
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
  a3 = v63;
  v33 = v65;
  sub_1BA4C2DD8((uint64_t)v63, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v34 = v64;
  v9 = v62;
  if (*(_QWORD *)(v64 + 16))
  {
    v36 = *v33;
    v35 = v33[1];
    sub_1BB8745CC();
    sub_1BB8745D8();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v37 = sub_1BB874608();
    v38 = -1 << *(_BYTE *)(v34 + 32);
    v39 = v37 & ~v38;
    v40 = v34 + 56;
    if (((*(_QWORD *)(v34 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
    {
      v41 = ~v38;
      v42 = *(_QWORD *)(v64 + 48);
      while (1)
      {
        v43 = v42 + 24 * v39;
        if (*(_BYTE *)(v43 + 16) == 3)
        {
          v44 = *(_QWORD *)v43 == v36 && *(_QWORD *)(v43 + 8) == v35;
          if (v44 || (sub_1BB874398() & 1) != 0)
            break;
        }
        v39 = (v39 + 1) & v41;
        if (((*(_QWORD *)(v40 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
          goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      v23 = (uint64_t)v65;
      goto LABEL_7;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    v34 = v64;
    v33 = v65;
  }
  sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  sub_1BA4C2DD8((uint64_t)a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  if (!*(_QWORD *)(v34 + 16))
    goto LABEL_39;
  v46 = *v9;
  v45 = v9[1];
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v47 = sub_1BB874608();
  v48 = -1 << *(_BYTE *)(v34 + 32);
  v49 = v47 & ~v48;
  v50 = v34 + 56;
  if (((*(_QWORD *)(v34 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a3 = v63;
LABEL_39:
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    v56 = v55;
    v58 = *a3;
    v57 = a3[1];
    swift_bridgeObjectRetain();
    FormatPropertyDefinition.identifier.getter();
    *v56 = v58;
    v56[1] = v57;
    v56[2] = v59;
    v56[3] = v60;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v51 = ~v48;
  v52 = *(_QWORD *)(v64 + 48);
  while (1)
  {
    v53 = v52 + 24 * v49;
    if (*(_BYTE *)(v53 + 16) == 4)
    {
      v54 = *(_QWORD *)v53 == v46 && *(_QWORD *)(v53 + 8) == v45;
      if (v54 || (sub_1BB874398() & 1) != 0)
        break;
    }
    v49 = (v49 + 1) & v51;
    if (((*(_QWORD *)(v50 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1BAA93FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[4];
  uint64_t *v50;
  char *v51;
  uint64_t v52;

  v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  FormatPropertyDefinition.identifier.getter();
  if (*(_QWORD *)(v13 + 16) && (v16 = sub_1BA6E35A8(v14, v15), (v17 & 1) != 0))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB12A328();
  v20 = v19;
  sub_1BA4C2DD8(a2, (uint64_t)v12, type metadata accessor for FormatPropertyDefinition);
  if ((v20 & 1) != 0)
  {
LABEL_6:
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatPropertyDefinition);
    sub_1BA4C2DD8(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    return swift_bridgeObjectRelease();
  }
  v52 = v18;
  v50 = (uint64_t *)a3;
  v51 = v9;
  v49[2] = a2;
  v49[3] = v3;
  sub_1BB12AA28();
  v23 = v22;
  if (*(_QWORD *)(v22 + 16))
  {
    sub_1BB8745CC();
    v49[1] = "isolatedThunderstormsNight";
    sub_1BB872A90();
    v24 = sub_1BB874608();
    v25 = -1 << *(_BYTE *)(v23 + 32);
    v26 = v24 & ~v25;
    if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
    {
      v27 = ~v25;
      while (1)
      {
        v28 = *(unsigned __int8 *)(*(_QWORD *)(v23 + 48) + v26);
        if (v28 != 1 && v28 != 2)
          break;
        v29 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
          goto LABEL_28;
        v26 = (v26 + 1) & v27;
        if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
          goto LABEL_14;
      }
      swift_bridgeObjectRelease();
LABEL_28:
      swift_bridgeObjectRelease();
      a3 = (uint64_t)v50;
      v9 = v51;
      goto LABEL_6;
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatPropertyDefinition);
  v31 = v50;
  v30 = (uint64_t *)v51;
  sub_1BA4C2DD8((uint64_t)v50, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v32 = v52;
  if (!*(_QWORD *)(v52 + 16))
    goto LABEL_26;
  v34 = *v30;
  v33 = v30[1];
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v35 = sub_1BB874608();
  v36 = -1 << *(_BYTE *)(v32 + 32);
  v37 = v35 & ~v36;
  v38 = v32 + 56;
  if (((*(_QWORD *)(v32 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    v31 = v50;
    v30 = (uint64_t *)v51;
LABEL_26:
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    v44 = v43;
    v46 = *v31;
    v45 = v31[1];
    swift_bridgeObjectRetain();
    FormatPropertyDefinition.identifier.getter();
    *v44 = v46;
    v44[1] = v45;
    v44[2] = v47;
    v44[3] = v48;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v39 = ~v36;
  v40 = *(_QWORD *)(v52 + 48);
  while (1)
  {
    v41 = v40 + 24 * v37;
    if (*(_BYTE *)(v41 + 16) == 4)
    {
      v42 = *(_QWORD *)v41 == v34 && *(_QWORD *)(v41 + 8) == v33;
      if (v42 || (sub_1BB874398() & 1) != 0)
        break;
    }
    v37 = (v37 + 1) & v39;
    if (((*(_QWORD *)(v38 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
      goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
}

void sub_1BAA94450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  const char *v43;

  v5 = type metadata accessor for FormatCompilerProperty(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - v9;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v42 = v8;
    v34 = v2;
    v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    swift_bridgeObjectRetain();
    v41 = (uint64_t *)(a2 + 24);
    swift_beginAccess();
    v14 = 0;
    v36 = 0x80000001BB95C6D0;
    v43 = "ignoreUnusedProperty";
    v38 = v10;
    v35 = v6;
    v37 = v11;
    v40 = v12;
    v39 = v13;
    while (v14 < *(_QWORD *)(v11 + 16))
    {
      sub_1BA4C2DD8(v13 + *(_QWORD *)(v6 + 72) * v14, (uint64_t)v10, type metadata accessor for FormatCompilerProperty);
      if ((sub_1BB6E0FEC() & 1) == 0)
      {
        v16 = *v41;
        swift_bridgeObjectRetain();
        FormatCompilerProperty.identifier.getter();
        if (*(_QWORD *)(v16 + 16) && (sub_1BA6E35A8(v17, v18), (v19 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = v42;
          sub_1BA4C2DD8((uint64_t)v10, v42, type metadata accessor for FormatCompilerProperty);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA4C2DD8((uint64_t)v10, v42, type metadata accessor for FormatCompilerProperty);
          sub_1BB6E18B0();
          v21 = v20;
          if (!*(_QWORD *)(v20 + 16)
            || (sub_1BB8745CC(),
                sub_1BB872A90(),
                v22 = sub_1BB874608(),
                v23 = -1 << *(_BYTE *)(v21 + 32),
                v24 = v22 & ~v23,
                ((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0))
          {
LABEL_21:
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v42, type metadata accessor for FormatCompilerProperty);
            swift_bridgeObjectRelease();
            type metadata accessor for FormatDerivedDataError();
            sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
            swift_allocError();
            v29 = v28;
            sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3B9FA0);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
            FormatCompilerProperty.identifier.getter();
            *(_QWORD *)(inited + 32) = v31;
            *(_QWORD *)(inited + 40) = v32;
            v33 = sub_1BA862444(inited);
            swift_setDeallocating();
            swift_arrayDestroy();
            *v29 = v33;
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatCompilerProperty);
            return;
          }
          v25 = ~v23;
          while (1)
          {
            v26 = *(unsigned __int8 *)(*(_QWORD *)(v21 + 48) + v24);
            if (v26 != 1 && v26 != 2)
              break;
            v27 = sub_1BB874398();
            swift_bridgeObjectRelease();
            if ((v27 & 1) != 0)
              goto LABEL_20;
            v24 = (v24 + 1) & v25;
            if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
              goto LABEL_21;
          }
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          v6 = v35;
          v15 = v42;
          v11 = v37;
        }
        sub_1BA4A2E80(v15, type metadata accessor for FormatCompilerProperty);
        v12 = v40;
        v13 = v39;
        v10 = v38;
      }
      ++v14;
      sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatCompilerProperty);
      if (v14 == v12)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_1BAA948D8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD v51[19];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  v55 = a2;
  v52 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v52);
  v51[2] = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v51[18] = (char *)v51 - v5;
  MEMORY[0x1E0C80A78](v6);
  v51[4] = (char *)v51 - v7;
  MEMORY[0x1E0C80A78](v8);
  v51[14] = (char *)v51 - v9;
  v53 = type metadata accessor for FormatVersioningError(0);
  MEMORY[0x1E0C80A78](v53);
  v51[10] = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v51[9] = (char *)v51 - v12;
  MEMORY[0x1E0C80A78](v13);
  v51[8] = (char *)v51 - v14;
  MEMORY[0x1E0C80A78](v15);
  v51[7] = (char *)v51 - v16;
  MEMORY[0x1E0C80A78](v17);
  v51[6] = (char *)v51 - v18;
  MEMORY[0x1E0C80A78](v19);
  v51[5] = (char *)v51 - v20;
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], v21);
  MEMORY[0x1E0C80A78](v23);
  v51[17] = (char *)v51 - v24;
  v25 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v25);
  v51[16] = (char *)v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BB86EB84();
  v28 = *(_QWORD *)(v27 - 8);
  v56 = v27;
  v57 = v28;
  MEMORY[0x1E0C80A78](v27);
  v51[1] = (char *)v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v51[0] = (char *)v51 - v31;
  MEMORY[0x1E0C80A78](v32);
  v51[3] = (char *)v51 - v33;
  MEMORY[0x1E0C80A78](v34);
  v51[13] = (char *)v51 - v35;
  MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  v51[15] = (char *)v51 - v38;
  MEMORY[0x1E0C80A78](v39);
  MEMORY[0x1E0C80A78](v40);
  v51[11] = (char *)v51 - v41;
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  v51[12] = (char *)v51 - v44;
  v45 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)v51 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = *a1;
  v58 = a1;
  v48 = v59 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings;
  v49 = type metadata accessor for FormatDerivedDataCompilerSettings();
  sub_1BA4C2DD8(v48 + *(int *)(v49 + 20), (uint64_t)v47, type metadata accessor for FormatVersioningModeSelection);
  v50 = (char *)sub_1BAA94D60 + 4 * word_1BB898AC0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAA94D60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = *(_QWORD *)(v3 - 224);
  sub_1BA5193C4(v0, v4, type metadata accessor for FormatVersioningModeRelease);
  v5 = v4 + *(int *)(*(_QWORD *)(v3 - 184) + 20);
  swift_bridgeObjectRetain();
  v6 = *(void **)(v3 - 120);
  v7 = sub_1BAA9C1BC(*(_QWORD *)(v3 - 136), *(_QWORD *)(v3 - 160), v5);
  if (v6)
  {
    *(_QWORD *)(v3 - 72) = v6;
    v8 = v6;
    sub_1BA8EBDF8();
    v9 = *(_QWORD *)(v3 - 288);
    if ((swift_dynamicCast() & 1) != 0)
    {

      sub_1BA5193C4(v9, *(_QWORD *)(v3 - 264), type metadata accessor for FormatVersioningError);
      if (qword_1EF2A6C58 != -1)
        swift_once();
      *(_QWORD *)(v3 - 104) = 0;
      *(_QWORD *)(v3 - 96) = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v3 - 104) = 0xD000000000000016;
      *(_QWORD *)(v3 - 96) = 0x80000001BB9699E0;
      sub_1BA4A2870((unint64_t *)&unk_1ED3B0920, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF8]);
      sub_1BB87420C();
      sub_1BB872AFC(v10);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("blic release version ");
      sub_1BB872AFC(v11);
      sub_1BA9719E4(0, 0, 0, *(_QWORD *)(v3 - 104), *(_QWORD *)(v3 - 96));
      swift_bridgeObjectRelease();
      if (qword_1EF2A7378 != -1)
        swift_once();
      v12 = sub_1BB86EFEC();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EF3D0948);
      v13 = *(_QWORD *)(v3 - 320);
      sub_1BA4C2DD8(v4, v13, type metadata accessor for FormatVersioningModeRelease);
      swift_bridgeObjectRetain();
      v14 = sub_1BB86EFC8();
      v15 = sub_1BB8732F4();
      v1 = v15;
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_QWORD *)(v3 - 104) = v17;
        *(_DWORD *)v16 = 136446466;
        v18 = sub_1BB87420C();
        *(_QWORD *)(v3 - 112) = sub_1BA5D2E14(v18, v19, (uint64_t *)(v3 - 104));
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v13, type metadata accessor for FormatVersioningModeRelease);
        *(_WORD *)(v16 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v3 - 112) = sub_1BA5D2E14(*(_QWORD *)(v3 - 168), v2, (uint64_t *)(v3 - 104));
        sub_1BB873A8C();
        v4 = *(_QWORD *)(v3 - 224);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BA493000, v14, (os_log_type_t)v1, "Fixed release version %{public}s NOT satisfied for %{public}s", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v17, -1, -1);
        MEMORY[0x1BCCE5C38](v16, -1, -1);

      }
      else
      {
        sub_1BA4A2E80(v13, type metadata accessor for FormatVersioningModeRelease);

        swift_bridgeObjectRelease_n();
      }
      sub_1BA4A2870(qword_1EF2ACD98, type metadata accessor for FormatVersioningError, (uint64_t)&protocol conformance descriptor for FormatVersioningError);
      swift_allocError();
      v34 = *(_QWORD *)(v3 - 264);
      sub_1BA4C2DD8(v34, v35, type metadata accessor for FormatVersioningError);
      swift_willThrow();
      sub_1BA4A2E80(v34, type metadata accessor for FormatVersioningError);
      sub_1BA4A2E80(v4, type metadata accessor for FormatVersioningModeRelease);
    }
    else
    {
      sub_1BA4A2E80(v4, type metadata accessor for FormatVersioningModeRelease);
      swift_bridgeObjectRelease();
    }

  }
  else
  {
    *(_QWORD *)(v3 - 128) = v7;
    if (qword_1EF2A7378 != -1)
      swift_once();
    v20 = sub_1BB86EFEC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF3D0948);
    v21 = *(_QWORD *)(v3 - 304);
    sub_1BA4C2DD8(v4, v21, type metadata accessor for FormatVersioningModeRelease);
    swift_bridgeObjectRetain();
    v22 = sub_1BB86EFC8();
    v23 = sub_1BB87330C();
    v24 = os_log_type_enabled(v22, v23);
    v25 = *(_QWORD *)(v3 - 152);
    if (v24)
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)(v3 - 120) = 0;
      *(_QWORD *)(v3 - 160) = v27;
      *(_QWORD *)(v3 - 104) = v27;
      *(_DWORD *)v26 = 136446466;
      *(_QWORD *)(v3 - 176) = v26 + 4;
      sub_1BA4A2870((unint64_t *)&unk_1ED3B0920, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF8]);
      v28 = sub_1BB87420C();
      *(_QWORD *)(v3 - 72) = sub_1BA5D2E14(v28, v29, (uint64_t *)(v3 - 104));
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v21, type metadata accessor for FormatVersioningModeRelease);
      *(_WORD *)(v26 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v3 - 72) = sub_1BA5D2E14(*(_QWORD *)(v3 - 168), v2, (uint64_t *)(v3 - 104));
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v22, v23, "Fixed release version %{public}s satisfied for %{public}s", (uint8_t *)v26, 0x16u);
      v30 = *(_QWORD *)(v3 - 160);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v30, -1, -1);
      MEMORY[0x1BCCE5C38](v26, -1, -1);

    }
    else
    {
      sub_1BA4A2E80(v21, type metadata accessor for FormatVersioningModeRelease);

      swift_bridgeObjectRelease_n();
    }
    v31 = *(_QWORD *)(v3 - 144);
    v1 = *(_QWORD *)(v3 - 128);
    v32 = *(_QWORD *)(v3 - 240);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v32, v5, v25);
    sub_1BA4A2E80(*(_QWORD *)(v3 - 224), type metadata accessor for FormatVersioningModeRelease);
    v33 = *(_QWORD *)(v3 - 136) + *(int *)(type metadata accessor for FormatPackage() + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v33, v32, v25);
  }
  return v1;
}

uint64_t sub_1BAA96844(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t i;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  _QWORD *v62;
  char v63;
  _QWORD *v64;
  unint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  int v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int64_t v90;
  uint64_t v91;
  int64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t result;
  int64_t v106;
  uint64_t v107;
  unint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  int64_t v131;
  uint64_t v132;
  char *v133;
  id v134;
  char *v135;
  int64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;

  v120 = a3;
  v119 = type metadata accessor for FormatDerivedDataWarningError();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v121 = (int64_t *)((char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v115 = (int64_t *)((char *)&v106 - v8);
  v9 = sub_1BB86BE54();
  v129 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v133 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v135 = (char *)&v106 - v12;
  sub_1BB86BE0C();
  v13 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  v134 = sub_1BAA98574(0x5C2A535C7B5C7B5CLL, 0xEB000000007D5C7DLL, 0);
  v14 = *(_QWORD *)(a2 + 56);
  v130 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations;
  swift_bridgeObjectRetain();
  v116 = v18;
  swift_beginAccess();
  v19 = 0;
  v131 = (unint64_t)(v15 + 63) >> 6;
  v117 = MEMORY[0x1E0DEE9E0];
  v125 = v9;
  v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v20 = v129;
  v132 = a2;
  if (!v17)
    goto LABEL_7;
LABEL_4:
  while (2)
  {
    v21 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v136 = v19;
    for (i = v21 | (v19 << 6); ; i = __clz(__rbit64(v37)) + (v38 << 6))
    {
      v23 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
      v18 = *v23;
      v3 = v23[1];
      swift_bridgeObjectRetain();
      v24 = (void *)sub_1BB872970();
      v25 = sub_1BB872AB4();
      v26 = (void *)sub_1BB872970();
      v27 = objc_msgSend(v134, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v24, 0, 0, v25, v26);

      v28 = sub_1BB8729A0();
      v30 = v29;

      v139 = v28;
      v140 = v30;
      v31 = v133;
      sub_1BB86BE00();
      sub_1BA7114A0();
      v32 = sub_1BB873AEC();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v31, v9);
      swift_bridgeObjectRelease();
      v139 = v32;
      v140 = v34;
      sub_1BB873AC8();
      v15 = v35;
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_6;
      v39 = *(_QWORD *)(v116 + 8);
      if (*(_QWORD *)(v39 + 16))
        break;
LABEL_24:
      v42 = v126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v126 = sub_1BA6EA0D0(0, v42[2] + 1, 1, v42);
      a2 = v132;
      v44 = v126[2];
      v43 = v126[3];
      v15 = v44 + 1;
      if (v44 >= v43 >> 1)
        v126 = sub_1BA6EA0D0((_QWORD *)(v43 > 1), v44 + 1, 1, v126);
      v45 = v126;
      v126[2] = v15;
      v46 = &v45[2 * v44];
      v46[4] = v18;
      v46[5] = v3;
      v20 = v129;
      v19 = v136;
      if (v17)
        goto LABEL_4;
LABEL_7:
      v36 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        v18 = sub_1BB3914A0((unint64_t)v36 > 1, v15, 1, v18);
LABEL_71:
        *(_QWORD *)(v18 + 16) = v15;
        sub_1BA5193C4(v3, v18+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(_QWORD *)(v118 + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
        v20 = v129;
LABEL_73:
        v86 = v117 + 64;
        v87 = 1 << *(_BYTE *)(v117 + 32);
        v88 = -1;
        if (v87 < 64)
          v88 = ~(-1 << v87);
        v89 = v88 & *(_QWORD *)(v117 + 64);
        v90 = (unint64_t)(v87 + 63) >> 6;
        v91 = v117;
        swift_bridgeObjectRetain();
        v92 = 0;
        v15 = (int64_t)type metadata accessor for FormatDerivedDataWarningError;
        if (v89)
        {
LABEL_76:
          v93 = __clz(__rbit64(v89));
          v89 &= v89 - 1;
          v94 = v93 | (v92 << 6);
          v95 = v91;
          goto LABEL_77;
        }
        while (1)
        {
          v36 = v92 + 1;
          if (__OFADD__(v92, 1))
            goto LABEL_101;
          v95 = v91;
          if (v36 >= v90)
            goto LABEL_99;
          v97 = *(_QWORD *)(v86 + 8 * v36);
          ++v92;
          if (!v97)
          {
            v92 = v36 + 1;
            if (v36 + 1 >= v90)
              goto LABEL_99;
            v97 = *(_QWORD *)(v86 + 8 * v92);
            if (!v97)
            {
              v92 = v36 + 2;
              if (v36 + 2 >= v90)
                goto LABEL_99;
              v97 = *(_QWORD *)(v86 + 8 * v92);
              if (!v97)
              {
                v36 += 3;
                if (v36 >= v90)
                {
LABEL_99:
                  swift_release();

                  (*(void (**)(char *, uint64_t))(v20 + 8))(v135, v125);
                  swift_bridgeObjectRelease();
                  return v18;
                }
                v97 = *(_QWORD *)(v86 + 8 * v36);
                if (!v97)
                {
                  while (1)
                  {
                    v92 = v36 + 1;
                    if (__OFADD__(v36, 1))
                      goto LABEL_104;
                    if (v92 >= v90)
                      goto LABEL_99;
                    v97 = *(_QWORD *)(v86 + 8 * v92);
                    ++v36;
                    if (v97)
                      goto LABEL_92;
                  }
                }
                v92 = v36;
              }
            }
          }
LABEL_92:
          v89 = (v97 - 1) & v97;
          v94 = __clz(__rbit64(v97)) + (v92 << 6);
LABEL_77:
          v96 = *(_QWORD *)(*(_QWORD *)(v95 + 56) + 8 * v94);
          if (*(_QWORD *)(v96 + 16))
          {
            v100 = (uint64_t *)(*(_QWORD *)(v91 + 48) + 16 * v94);
            v98 = *v100;
            v99 = v100[1];
            v101 = *v120;
            v3 = v120[1];
            v102 = v121;
            *v121 = v96;
            v102[1] = v98;
            v102[2] = v99;
            v102[3] = v101;
            v102[4] = v3;
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v18 = sub_1BB3914A0(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
            v104 = *(_QWORD *)(v18 + 16);
            v103 = *(_QWORD *)(v18 + 24);
            if (v104 >= v103 >> 1)
              v18 = sub_1BB3914A0(v103 > 1, v104 + 1, 1, v18);
            *(_QWORD *)(v18 + 16) = v104 + 1;
            sub_1BA5193C4((uint64_t)v121, v18+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(_QWORD *)(v118 + 72) * v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
            v20 = v129;
            if (v89)
              goto LABEL_76;
          }
          else if (v89)
          {
            goto LABEL_76;
          }
        }
      }
      if (v36 >= v131)
        goto LABEL_69;
      v37 = *(_QWORD *)(v130 + 8 * v36);
      v38 = v19 + 1;
      if (!v37)
      {
        v38 = v19 + 2;
        if (v19 + 2 >= v131)
          goto LABEL_69;
        v37 = *(_QWORD *)(v130 + 8 * v38);
        if (!v37)
        {
          v38 = v19 + 3;
          if (v19 + 3 >= v131)
            goto LABEL_69;
          v37 = *(_QWORD *)(v130 + 8 * v38);
          if (!v37)
          {
            v36 = v19 + 4;
            if (v19 + 4 >= v131)
              goto LABEL_69;
            v37 = *(_QWORD *)(v130 + 8 * v36);
            if (!v37)
            {
              while (1)
              {
                v38 = v36 + 1;
                if (__OFADD__(v36, 1))
                  goto LABEL_103;
                if (v38 >= v131)
                  break;
                v37 = *(_QWORD *)(v130 + 8 * v38);
                ++v36;
                if (v37)
                  goto LABEL_20;
              }
LABEL_69:
              swift_release();
              v3 = (uint64_t)v115;
              if (!v126[2])
              {
                swift_bridgeObjectRelease();
                v18 = MEMORY[0x1E0DEE9D8];
                goto LABEL_73;
              }
              v84 = *v120;
              v85 = v120[1];
              *v115 = v126;
              *(_QWORD *)(v3 + 8) = v84;
              *(_QWORD *)(v3 + 16) = v85;
              swift_storeEnumTagMultiPayload();
              swift_bridgeObjectRetain();
              v18 = sub_1BB3914A0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
              v20 = *(_QWORD *)(v18 + 16);
              v36 = *(_QWORD *)(v18 + 24);
              v15 = v20 + 1;
              if (v20 < (unint64_t)v36 >> 1)
                goto LABEL_71;
              goto LABEL_105;
            }
            v38 = v19 + 4;
          }
        }
      }
LABEL_20:
      v17 = (v37 - 1) & v37;
      v136 = v38;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = sub_1BA6E35A8(v18, v3);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    v47 = (_QWORD *)(*(_QWORD *)(v39 + 56) + 40 * v40);
    v48 = v47[1];
    v49 = v47[4];
    v106 = v47[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v107 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)(v114 + 16);
    v112 = *(_QWORD *)(v50 + 16);
    if (!v112)
    {
      v18 = v107;
      v15 = v106;
LABEL_68:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      a2 = v132;
      v19 = v136;
      if (v17)
        continue;
      goto LABEL_7;
    }
    break;
  }
  v51 = *(_QWORD *)(v49 + 16);
  v110 = v50 + 32;
  v108 = (unint64_t *)(v49 + 32);
  swift_bridgeObjectRetain();
  v52 = 0;
  v111 = v51;
  v128 = v51 - 1;
  v122 = v49;
  v109 = v50;
  while (2)
  {
    if (v52 >= *(_QWORD *)(v50 + 16))
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v113 = v52;
    v53 = (uint64_t *)(v110 + 16 * v52);
    v54 = v53[1];
    v124 = *v53;
    if (!v111)
    {
      swift_bridgeObjectRetain();
      v60 = (_QWORD *)v117;
      if (!*(_QWORD *)(v117 + 16))
        goto LABEL_50;
      goto LABEL_46;
    }
    v15 = *(_QWORD *)(v49 + 16);
    v123 = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v15)
      goto LABEL_102;
    v55 = 0;
    LOBYTE(v36) = 0;
    v56 = v108;
LABEL_39:
    if ((v36 & 1) != 0)
      goto LABEL_41;
    v57 = v56[1];
    v127 = *v56;
    v139 = 0x2D676E616CLL;
    v140 = 0xE500000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(&v141);
    v58 = v139;
    v59 = v140;
    v139 = v127;
    v140 = v57;
    v137 = v58;
    v138 = v59;
    v15 = sub_1BB873B40();
    v49 = v122;
    swift_bridgeObjectRelease();
    v9 = v125;
    swift_bridgeObjectRelease_n();
    v20 = v129;
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_41:
      if (v128 != v55)
      {
        v36 = 1;
        goto LABEL_38;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v109;
LABEL_33:
      v52 = v113 + 1;
      if (v113 + 1 != v112)
        continue;
      swift_bridgeObjectRelease();
      v15 = v107;
      v18 = v3;
      v3 = v50;
      goto LABEL_68;
    }
    break;
  }
  if (v128 != v55)
  {
    v36 = 0;
LABEL_38:
    ++v55;
    v56 += 4;
    if (v55 >= *(_QWORD *)(v49 + 16))
      goto LABEL_102;
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  v60 = (_QWORD *)v117;
  v54 = v123;
  if (!*(_QWORD *)(v117 + 16))
  {
LABEL_50:
    v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_51;
  }
LABEL_46:
  swift_bridgeObjectRetain();
  v61 = sub_1BA6E35A8(v124, v54);
  v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((v63 & 1) != 0)
  {
    v62 = *(_QWORD **)(v60[7] + 8 * v61);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_51:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v62 = sub_1BA6EA0D0(0, v62[2] + 1, 1, v62);
  v64 = v62;
  v65 = v62[2];
  v66 = v64;
  v67 = v64[3];
  if (v65 >= v67 >> 1)
    v66 = sub_1BA6EA0D0((_QWORD *)(v67 > 1), v65 + 1, 1, v66);
  v66[2] = v65 + 1;
  v68 = &v66[2 * v65];
  v69 = v66;
  v68[4] = v18;
  v68[5] = v3;
  LODWORD(v127) = swift_isUniquelyReferenced_nonNull_native();
  v139 = (uint64_t)v60;
  v71 = sub_1BA6E35A8(v124, v54);
  v72 = v60[2];
  v73 = (v70 & 1) == 0;
  v74 = v72 + v73;
  if (__OFADD__(v72, v73))
    goto LABEL_107;
  v50 = v109;
  if (v60[3] >= v74)
  {
    if ((v127 & 1) == 0)
    {
      v127 = v71;
      LODWORD(v123) = v70;
      sub_1BB4C57B8();
      LOBYTE(v70) = v123;
      v71 = v127;
    }
LABEL_61:
    v77 = (_QWORD *)v139;
    v117 = v139;
    if ((v70 & 1) != 0)
    {
      v78 = *(_QWORD *)(v139 + 56);
      v127 = (unint64_t)v69;
      v79 = 8 * v71;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v78 + v79) = v127;
    }
    else
    {
      *(_QWORD *)(v139 + 8 * (v71 >> 6) + 64) |= 1 << v71;
      v80 = (_QWORD *)(v77[6] + 16 * v71);
      *v80 = v124;
      v80[1] = v54;
      *(_QWORD *)(v77[7] + 8 * v71) = v69;
      v81 = v77[2];
      v82 = __OFADD__(v81, 1);
      v83 = v81 + 1;
      if (v82)
        goto LABEL_108;
      v77[2] = v83;
      swift_bridgeObjectRetain();
    }
    v20 = v129;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  LODWORD(v123) = v70;
  sub_1BB4B39A8(v74, v127);
  v75 = sub_1BA6E35A8(v124, v54);
  v76 = v70 & 1;
  LOBYTE(v70) = v123;
  if ((v123 & 1) == v76)
  {
    v71 = v75;
    goto LABEL_61;
  }
LABEL_109:
  sub_1BB874560();
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BAA97558(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t (*v13)();
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t (*v28)();
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  _QWORD *v52;

  v4 = type metadata accessor for FormatDerivedDataBinderResult();
  v47 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(v7 + 56);
  v45 = v7 + 56;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v46 = (unint64_t)(v9 + 63) >> 6;
  v48 = a2;
  v49 = v7;
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = type metadata accessor for FormatDerivedDataBinderResult;
  while (1)
  {
    if (v11)
    {
      v50 = (v11 - 1) & v11;
      v51 = v12;
      v15 = __clz(__rbit64(v11)) | (v12 << 6);
    }
    else
    {
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_42;
      if (v16 >= v46)
        return swift_release();
      v17 = *(_QWORD *)(v45 + 8 * v16);
      v18 = v12 + 1;
      if (!v17)
      {
        v18 = v12 + 2;
        if (v12 + 2 >= v46)
          return swift_release();
        v17 = *(_QWORD *)(v45 + 8 * v18);
        if (!v17)
        {
          v18 = v12 + 3;
          if (v12 + 3 >= v46)
            return swift_release();
          v17 = *(_QWORD *)(v45 + 8 * v18);
          if (!v17)
          {
            v19 = v12 + 4;
            if (v12 + 4 >= v46)
              return swift_release();
            v17 = *(_QWORD *)(v45 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_43;
                if (v18 >= v46)
                  return swift_release();
                v17 = *(_QWORD *)(v45 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_21;
              }
            }
            v18 = v12 + 4;
          }
        }
      }
LABEL_21:
      v50 = (v17 - 1) & v17;
      v51 = v18;
      v15 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v49 + 48) + 8 * v15);
    v21 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      v22 = sub_1BA4A42A0(v20);
      v23 = MEMORY[0x1E0DEE9D8];
      if ((v24 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BA4C2DD8(v48, (uint64_t)v6, (uint64_t (*)(_QWORD))v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_1BB3914C8(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
      v23 = sub_1BB3914C8(v25 > 1, v26 + 1, 1, v23);
    *(_QWORD *)(v23 + 16) = v26 + 1;
    v27 = v6;
    v28 = v13;
    sub_1BA5193C4((uint64_t)v6, v23+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v26, (uint64_t (*)(_QWORD))v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = (_QWORD *)*a1;
    v30 = v52;
    *a1 = 0x8000000000000000;
    v32 = sub_1BA4A42A0(v20);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v30[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C5804();
    }
    else
    {
      sub_1BB4B39F4(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_1BA4A42A0(v20);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_44;
      v32 = v37;
    }
    v39 = v52;
    if ((v36 & 1) != 0)
    {
      v14 = v52[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 8 * v32) = v23;
    }
    else
    {
      v52[(v32 >> 6) + 8] |= 1 << v32;
      *(_QWORD *)(v39[6] + 8 * v32) = v20;
      *(_QWORD *)(v39[7] + 8 * v32) = v23;
      v40 = v39[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_41;
      v39[2] = v42;
    }
    *a1 = (uint64_t)v39;
    swift_bridgeObjectRelease();
    v6 = v27;
    v13 = v28;
    v11 = v50;
    v12 = v51;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BAA97920(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;

  sub_1BA6AA0A4(0, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  v55 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_OWORD *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (_OWORD *)((char *)&v53 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v53 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (_OWORD *)((char *)&v53 - v14);
  v54 = v16;
  v17 = *(int *)(v16 + 48);
  v18 = (uint64_t *)((char *)&v53 + v17 - v14);
  v19 = a2[7];
  v15[6] = a2[6];
  v15[7] = v19;
  v15[8] = a2[8];
  v20 = a2[3];
  v15[2] = a2[2];
  v15[3] = v20;
  v21 = a2[5];
  v15[4] = a2[4];
  v15[5] = v21;
  v22 = a2[1];
  *v15 = *a2;
  v15[1] = v22;
  v56 = (uint64_t)a2 + v17;
  sub_1BA4C2DD8((uint64_t)a2 + v17, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v23 = *v18;
  v24 = v18[1];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v57 = a1;
  v25 = *a1;
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1BA6E35A8(v23, v24), (v27 & 1) != 0))
  {
    v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
  }
  v29 = v54;
  swift_bridgeObjectRelease();
  v30 = (uint64_t)&v12[*(int *)(v29 + 48)];
  v31 = a2[7];
  v65 = a2[6];
  v66 = v31;
  v67 = a2[8];
  v32 = a2[3];
  v61 = a2[2];
  v62 = v32;
  v33 = a2[5];
  v63 = a2[4];
  v64 = v33;
  v34 = a2[1];
  v59 = *a2;
  v60 = v34;
  v35 = v56;
  sub_1BA4C2DD8(v56, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v36 = (uint64_t)v9 + *(int *)(v29 + 48);
  v37 = v66;
  v9[6] = v65;
  v9[7] = v37;
  v9[8] = v67;
  v38 = v64;
  v9[4] = v63;
  v9[5] = v38;
  v39 = v62;
  v9[2] = v61;
  v9[3] = v39;
  v40 = v60;
  *v9 = v59;
  v9[1] = v40;
  sub_1BA5193C4(v30, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  sub_1BA8C88FC((uint64_t)&v59);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_1BB3914DC(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
  v42 = *(_QWORD *)(v28 + 16);
  v41 = *(_QWORD *)(v28 + 24);
  if (v42 >= v41 >> 1)
    v28 = sub_1BB3914DC(v41 > 1, v42 + 1, 1, v28);
  *(_QWORD *)(v28 + 16) = v42 + 1;
  sub_1BAA9CE30((uint64_t)v9, v28+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v42, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  v43 = (uint64_t *)((char *)v6 + *(int *)(v29 + 48));
  v44 = v66;
  v6[6] = v65;
  v6[7] = v44;
  v6[8] = v67;
  v45 = v64;
  v6[4] = v63;
  v6[5] = v45;
  v46 = v62;
  v6[2] = v61;
  v6[3] = v46;
  v47 = v60;
  *v6 = v59;
  v6[1] = v47;
  sub_1BA4C2DD8(v35, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v48 = *v43;
  v49 = v43[1];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v50 = v57;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = *v50;
  *v50 = 0x8000000000000000;
  sub_1BB4BF6CC(v28, v48, v49, isUniquelyReferenced_nonNull_native);
  *v50 = v58;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA97CC4@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  sub_1BA6AA0A4(0, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_OWORD *)((char *)&v17 - v5);
  v8 = *(int *)(v7 + 48);
  v9 = (uint64_t)v6 + v8;
  v10 = a1[7];
  v6[6] = a1[6];
  v6[7] = v10;
  v6[8] = a1[8];
  v11 = a1[3];
  v6[2] = a1[2];
  v6[3] = v11;
  v12 = a1[5];
  v6[4] = a1[4];
  v6[5] = v12;
  v13 = a1[1];
  *v6 = *a1;
  v6[1] = v13;
  sub_1BA4C2DD8((uint64_t)a1 + v8, (uint64_t)v6 + v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v14 = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v15 = *(_QWORD *)(v14 + 16);
  result = swift_bridgeObjectRelease();
  *a2 = v15;
  return result;
}

uint64_t sub_1BAA97DAC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)(result + 48) + 16);
  return result;
}

void sub_1BAA97DBC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FormatPropertyDefinition.identifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAA97DF4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAA97E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  ValueMetadata *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v23 = a1;
  v24 = a3;
  v4 = type metadata accessor for FormatVersionInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C7A78, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - v10;
  v12 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1BA8F3280(MEMORY[0x1E0DEE9D8]);
  v29 = v15;
  v30 = v16;
  swift_storeEnumTagMultiPayload();
  Dictionary<>.seedFormatCodingVersion(mode:)((uint64_t)v14);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersioningMode);
  v17 = v29;
  v18 = v30;
  v25 = v29;
  v26 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB73AAFC(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = &type metadata for TraversalOnlyEncoder;
  v28 = sub_1BA6ECAA0();
  v25 = v17;
  v26 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormatPackage.encode(to:)(&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_bridgeObjectRelease();
  Dictionary<>.formatCodingVersionInfo.getter(v18, (uint64_t)v11);
  swift_bridgeObjectRelease();
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4);
  v21 = v24;
  if (v20)
  {
    sub_1BA5C699C((uint64_t)v11, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo);
    v22 = sub_1BB86EB84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v7, type metadata accessor for FormatVersionInfo);
    sub_1BA5C699C((uint64_t)v11, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo);
    sub_1BA5E01A4((uint64_t)&v7[*(int *)(v4 + 20)], v21, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    return sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionInfo);
  }
}

uint64_t sub_1BAA98278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  int v15;
  uint64_t result;
  _QWORD **v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  if (*(_QWORD *)(a1 + 8))
  {
    sub_1BB86C8BC();
    v13 = sub_1BB86C8E0();
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
    result = sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED39ED40, v14);
    if (v15 != 1)
      return result;
    v17 = (_QWORD **)(a4 + 16);
  }
  else
  {
    v17 = (_QWORD **)(a5 + 16);
  }
  swift_beginAccess();
  v18 = *v17;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v17 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_1BA6EA0D0(0, v18[2] + 1, 1, v18);
    *v17 = v18;
  }
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    v18 = sub_1BA6EA0D0((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    *v17 = v18;
  }
  v18[2] = v21 + 1;
  v22 = &v18[2 * v21];
  v22[4] = a2;
  v22[5] = a3;
  return swift_endAccess();
}

uint64_t FormatDerivedDataCompiler.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
  swift_release();
  return v0;
}

uint64_t FormatDerivedDataCompiler.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAA9849C()
{
  return type metadata accessor for FormatDerivedDataCompiler();
}

uint64_t type metadata accessor for FormatDerivedDataCompiler()
{
  uint64_t result;

  result = qword_1EF2AED90;
  if (!qword_1EF2AED90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAA984E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatDerivedDataCompilerSettings();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FormatDerivedDataCompiler()
{
  return swift_lookUpClassMethod();
}

id sub_1BAA98574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1BB86C484();

    swift_willThrow();
  }
  return v6;
}

void sub_1BAA9864C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C2500)
  {
    type metadata accessor for FormatDerivedDataResultOptionReference(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C2500);
  }
}

unint64_t sub_1BAA986B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t result;
  char v76[8];
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;

  v3 = v2;
  v113 = a2;
  v5 = type metadata accessor for FormatPropertyDefinition(0);
  v111 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v79 - v9;
  v11 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  v96 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v95);
  v107 = (uint64_t *)((char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for FormatCompilingSlotDefinition(0);
  v100 = *(_QWORD *)(v15 - 8);
  v101 = v15;
  MEMORY[0x1E0C80A78](v15);
  v98 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0DEE9D8];
  v85 = *(_QWORD *)(a1 + 16);
  if (!v85)
    return MEMORY[0x1E0DEE9D8];
  v88 = type metadata accessor for FormatCompilerSlotDefinition(0);
  v18 = *(_QWORD *)(v88 - 8);
  v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v20 = *(_QWORD *)(v18 + 72);
  v83 = v13 + 8;
  swift_bridgeObjectRetain();
  v21 = 0;
  v102 = v17;
  v89 = v7;
  v87 = a1;
  v82 = v10;
  v90 = (unint64_t *)v13;
  v80 = v19;
  v81 = v20;
  while (1)
  {
    v22 = (_QWORD *)(v19 + v20 * v21);
    if ((v22[8] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      swift_release();
      LODWORD(v78) = 0;
      v77 = 1092;
      v76[0] = 2;
      result = sub_1BB873F84();
      __break(1u);
      return result;
    }
    v86 = v21;
    MEMORY[0x1E0C80A78](sub_1BA7AD740);
    v78 = v22;
    v25 = sub_1BA8A135C(v23, (uint64_t)v76, 0, v24);
    v26 = v25[2];
    if (v26)
      break;
    swift_bridgeObjectRelease();
    v74 = v17;
LABEL_22:
    v58 = *(_QWORD *)(v74 + 16);
    v59 = *(_QWORD *)(v102 + 16);
    v60 = v59 + v58;
    if (__OFADD__(v59, v58))
      goto LABEL_45;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62 = v102;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v60 > *(_QWORD *)(v102 + 24) >> 1)
    {
      if (v59 <= v60)
        v63 = v59 + v58;
      else
        v63 = v59;
      v62 = sub_1BB3914B4(isUniquelyReferenced_nonNull_native, v63, 1, v102);
    }
    v17 = MEMORY[0x1E0DEE9D8];
    v20 = v81;
    v64 = *(_QWORD *)(v74 + 16);
    v102 = v62;
    if (v64)
    {
      v65 = *(_QWORD *)(v62 + 16);
      if ((*(_QWORD *)(v62 + 24) >> 1) - v65 < v58)
        goto LABEL_47;
      v66 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
      v67 = *(_QWORD *)(v100 + 72);
      v68 = v62 + v66 + v67 * v65;
      if (v74 + v66 < v68 + v67 * v58 && v68 < v74 + v66 + v67 * v58)
        goto LABEL_49;
      swift_arrayInitWithCopy();
      if (v58)
      {
        v70 = *(_QWORD *)(v102 + 16);
        v71 = __OFADD__(v70, v58);
        v72 = v70 + v58;
        if (v71)
          goto LABEL_48;
        *(_QWORD *)(v102 + 16) = v72;
      }
    }
    else if (v58)
    {
      goto LABEL_46;
    }
    v73 = v86 + 1;
    swift_bridgeObjectRelease();
    v21 = v73;
    v19 = v80;
    if (v73 == v85)
    {
      swift_bridgeObjectRelease();
      return v102;
    }
  }
  v27 = v17;
  v115 = v17;
  v93 = v26;
  sub_1BAC7A734(0, v26, 0);
  v28 = 0;
  v109 = v115;
  v84 = v25;
  v99 = v25 + 4;
  v92 = v22[2];
  v112 = v22[3];
  v29 = v22[5];
  v91 = v22[4];
  v31 = v22[6];
  v30 = v22[7];
  v94 = v22;
  v103 = v29;
  v104 = v31;
  v108 = v30;
  while (1)
  {
    v106 = v28;
    v32 = &v99[2 * v28];
    v33 = v32[1];
    v105 = *v32;
    v34 = *(_QWORD *)(v31 + 16);
    v110 = v33;
    if (v34)
      break;
    v41 = v33;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = v27;
LABEL_14:
    v42 = v88;
    v43 = v94;
    v44 = v107;
    sub_1BA5E01A4((uint64_t)v94 + *(int *)(v88 + 44), (uint64_t)v107 + *(int *)(v95 + 40), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    *v44 = v105;
    v44[1] = v41;
    v45 = v112;
    v44[2] = v92;
    v44[3] = v45;
    v44[4] = v91;
    v44[5] = v29;
    v46 = v108;
    v44[6] = v40;
    v44[7] = v46;
    v44[8] = v27;
    sub_1BA5E01A4((uint64_t)v43 + *(int *)(v42 + 40), (uint64_t)v10, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    v47 = v97;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v10, 1, v97) == 1)
    {
      v48 = v90;
      v49 = (char *)v90 + *(int *)(v47 + 24);
      v50 = sub_1BB86E710();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
      *v48 = v40;
      v51 = v83;
      *v83 = 0;
      v51[1] = 0;
      sub_1BA5C699C((uint64_t)v10, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    }
    else
    {
      v48 = v90;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    }
    v52 = v98;
    v7 = v89;
    sub_1BA5193C4((uint64_t)v107, v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA5193C4((uint64_t)v48, v52 + *(int *)(v101 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    swift_bridgeObjectRelease();
    v53 = v109;
    v115 = v109;
    v55 = *(_QWORD *)(v109 + 16);
    v54 = *(_QWORD *)(v109 + 24);
    if (v55 >= v54 >> 1)
    {
      sub_1BAC7A734(v54 > 1, v55 + 1, 1);
      v52 = v98;
      v53 = v115;
    }
    v56 = v106 + 1;
    *(_QWORD *)(v53 + 16) = v55 + 1;
    v57 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    v109 = v53;
    sub_1BA5193C4(v52, v53 + v57 + *(_QWORD *)(v100 + 72) * v55, type metadata accessor for FormatCompilingSlotDefinition);
    v28 = v56;
    v27 = MEMORY[0x1E0DEE9D8];
    v29 = v103;
    v31 = v104;
    if (v56 == v93)
    {
      swift_bridgeObjectRelease();
      v74 = v109;
      goto LABEL_22;
    }
  }
  v114 = v27;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAC7A760(0, v34, 0);
  v27 = v114;
  v35 = *(_QWORD *)(type metadata accessor for FormatCompilerProperty(0) - 8);
  v36 = v31 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  v37 = *(_QWORD *)(v35 + 72);
  while (1)
  {
    sub_1BB6E0258(v113, (uint64_t)v7);
    if (v3)
      break;
    v114 = v27;
    v39 = *(_QWORD *)(v27 + 16);
    v38 = *(_QWORD *)(v27 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_1BAC7A760(v38 > 1, v39 + 1, 1);
      v27 = v114;
    }
    *(_QWORD *)(v27 + 16) = v39 + 1;
    sub_1BA5193C4((uint64_t)v7, v27+ ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(_QWORD *)(v111 + 72) * v39, type metadata accessor for FormatPropertyDefinition);
    v36 += v37;
    if (!--v34)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v82;
      v40 = MEMORY[0x1E0DEE9D8];
      v29 = v103;
      v41 = v110;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAA98F40(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, _QWORD, _QWORD, char *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a2;
  v57 = a3;
  sub_1BA6AA0A4(0, &qword_1EF2AEE88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (_QWORD *)((char *)v43 - v8);
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)v43 - v10;
  sub_1BA6AA0A4(0, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v43 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v43[1] = v3;
  v60 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A9B8(0, v14, 0);
  result = sub_1BA6AFD6C(a1);
  v18 = result;
  v19 = 0;
  v20 = a1 + 64;
  v44 = a1 + 80;
  v45 = v14;
  v48 = v13;
  v49 = a1;
  v46 = v17;
  v47 = a1 + 64;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(a1 + 32))
  {
    v23 = (unint64_t)v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v58 = v19;
    v59 = 1 << v18;
    v24 = v55;
    v25 = v52;
    v26 = (uint64_t)&v52[*(int *)(v55 + 48)];
    v27 = *(_QWORD *)(a1 + 56);
    v28 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v18);
    v30 = *v28;
    v29 = v28[1];
    v31 = type metadata accessor for FormatDerivedDataBindingSlotResult();
    sub_1BA4C2DD8(v27 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v18, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
    *v25 = v30;
    v25[1] = v29;
    v32 = (uint64_t)v53;
    *v53 = v30;
    *(_QWORD *)(v32 + 8) = v29;
    sub_1BA4C2DD8(v26, v32 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
    v33 = v54;
    sub_1BAA9CE30(v32, (uint64_t)v54, &qword_1EF2AEE88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    swift_bridgeObjectRetain_n();
    v34 = (uint64_t)v25;
    v35 = (uint64_t)v48;
    sub_1BAA9CD00(v34, &qword_1EF2AEE88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    v56(v35, v35 + *(int *)(v51 + 48), *(_QWORD *)v33, *((_QWORD *)v33 + 1), &v33[*(int *)(v24 + 48)]);
    sub_1BAA9CD00((uint64_t)v33, &qword_1EF2AEE88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    v15 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7A9B8(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v60;
    }
    v37 = *(_QWORD *)(v15 + 16);
    v36 = *(_QWORD *)(v15 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1BAC7A9B8(v36 > 1, v37 + 1, 1);
      v15 = v60;
    }
    *(_QWORD *)(v15 + 16) = v37 + 1;
    result = sub_1BAA9CE30(v35, v15+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v37, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    a1 = v49;
    v21 = 1 << *(_BYTE *)(v49 + 32);
    if (v18 >= v21)
      goto LABEL_27;
    v20 = v47;
    v38 = *(_QWORD *)(v47 + 8 * v23);
    if ((v38 & v59) == 0)
      goto LABEL_28;
    LODWORD(v17) = v46;
    if (*(_DWORD *)(v49 + 36) != (_DWORD)v46)
      goto LABEL_29;
    v39 = v38 & (-2 << (v18 & 0x3F));
    if (v39)
    {
      v21 = __clz(__rbit64(v39)) | v18 & 0xFFFFFFFFFFFFFFC0;
      v22 = v45;
    }
    else
    {
      v40 = v23 + 1;
      v41 = (unint64_t)(v21 + 63) >> 6;
      v22 = v45;
      if (v23 + 1 < v41)
      {
        v42 = *(_QWORD *)(v47 + 8 * v40);
        if (v42)
        {
LABEL_22:
          v21 = __clz(__rbit64(v42)) + (v40 << 6);
        }
        else
        {
          while (v41 - 2 != v23)
          {
            v42 = *(_QWORD *)(v44 + 8 * v23++);
            if (v42)
            {
              v40 = v23 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v19 = v58 + 1;
    v18 = v21;
    if (v58 + 1 == v22)
      return v15;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1BAA993AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v4 = v3;
  v54 = a3;
  sub_1BA4B07F0(0, &qword_1ED3C91C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v48 - v8;
  v10 = type metadata accessor for FormatSlotDefinition();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v61 = (uint64_t)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v48 - v14);
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)v48 - v17;
  MEMORY[0x1E0C80A78](v18);
  v52 = (uint64_t)v48 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v21 = *(_QWORD *)(type metadata accessor for FormatCompilingSlotDefinition(0) - 8);
    v22 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)));
    v62 = *(_QWORD *)(v21 + 72);
    v48[1] = a1;
    swift_bridgeObjectRetain();
    v63 = MEMORY[0x1E0DEE9D8];
    v50 = a2;
    v51 = v9;
    v60 = v10;
    v49 = v11;
    while (*(_QWORD *)(a2 + 16))
    {
      v24 = *v22;
      v23 = v22[1];
      swift_bridgeObjectRetain();
      v25 = sub_1BA6E35A8(v24, v23);
      if ((v26 & 1) != 0)
      {
        sub_1BA4C2DD8(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v11 + 72) * v25, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        v27 = 0;
      }
      else
      {
        v27 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v27, 1, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        goto LABEL_4;
      v28 = sub_1BA5193C4((uint64_t)v9, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v29 = *v15;
      v30 = v15[1];
      v31 = v15[3];
      v56 = v15[2];
      v57 = v29;
      v55 = v15[4];
      v32 = v4;
      v33 = (uint64_t)v15;
      v34 = v15[5];
      v35 = v15[6];
      MEMORY[0x1E0C80A78](v28);
      v36 = v54;
      v48[-2] = v22;
      v48[-1] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = sub_1BA8A26F0((void (*)(uint64_t, uint64_t *))sub_1BAA9CA64, (uint64_t)&v48[-4], v35);
      v59 = v32;
      if (v32)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v63;
      }
      v38 = v37;
      swift_bridgeObjectRelease();
      v40 = *(_QWORD *)(v33 + 56);
      v39 = *(_QWORD *)(v33 + 64);
      v41 = v53;
      sub_1BA5E01A4(v33 + *(int *)(v60 + 40), (uint64_t)&v53[*(int *)(v60 + 40)], (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      *v41 = v57;
      v41[1] = v30;
      v41[2] = v56;
      v41[3] = v31;
      v42 = v58;
      v41[4] = v55;
      v41[5] = v42;
      v41[6] = v38;
      v41[7] = v40;
      v41[8] = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v43 = v52;
      sub_1BA5193C4((uint64_t)v41, v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      sub_1BA5193C4(v43, v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v15 = (uint64_t *)v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = sub_1BA7AE73C(0, *(_QWORD *)(v63 + 16) + 1, 1, v63);
      v4 = v59;
      v10 = v60;
      v11 = v49;
      a2 = v50;
      v45 = *(_QWORD *)(v63 + 16);
      v44 = *(_QWORD *)(v63 + 24);
      if (v45 >= v44 >> 1)
        v63 = sub_1BA7AE73C(v44 > 1, v45 + 1, 1, v63);
      v46 = v63;
      *(_QWORD *)(v63 + 16) = v45 + 1;
      sub_1BA5193C4(v61, v46+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v9 = v51;
LABEL_5:
      v22 = (uint64_t *)((char *)v22 + v62);
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        return v63;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_4:
    sub_1BA5C699C((uint64_t)v9, &qword_1ED3C91C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    goto LABEL_5;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BAA99858@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BAA91CBC(a1, *(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), a2, a3);
}

uint64_t sub_1BAA9987C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  int isUniquelyReferenced_nonNull_native;
  int64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 *v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _OWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  int v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _DWORD *v157;
  char *v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _OWORD *v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  _QWORD *v173;
  char *v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  _OWORD *v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _OWORD *v192;
  uint64_t v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  _QWORD *v216;
  uint64_t v217;
  unsigned int v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  _QWORD *v222;
  _QWORD *v223;
  int *v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _OWORD *v231;
  _QWORD *v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _OWORD *v240;
  uint64_t v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  uint64_t result;
  char v247[8];
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _OWORD *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t *v261;
  _OWORD *v262;
  __int128 *v263;
  uint64_t v264;
  uint64_t v265;
  _OWORD *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t *v283;
  char *v284;
  __int128 *v285;
  unsigned int (*v286)(unint64_t *, uint64_t, uint64_t);
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  int v290;
  int v291;
  uint64_t v292;
  unint64_t v293;
  unint64_t v294;
  char *v295;
  _DWORD *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  _OWORD v305[9];
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  uint64_t v315;
  uint64_t v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;

  v2 = v1;
  v281 = type metadata accessor for FormatSlotDefinition();
  v253 = *(_QWORD *)(v281 - 8);
  MEMORY[0x1E0C80A78](v281);
  v254 = (uint64_t)&v250 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v274 = (uint64_t)&v250 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v278 = (uint64_t)&v250 - v8;
  MEMORY[0x1E0C80A78](v9);
  v277 = (uint64_t)&v250 - v10;
  v297 = type metadata accessor for FormatSlotDefinitionItemSet();
  v280 = *(_QWORD *)(v297 - 8);
  MEMORY[0x1E0C80A78](v297);
  v276 = (uint64_t)&v250 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v275 = (uint64_t)&v250 - v13;
  MEMORY[0x1E0C80A78](v14);
  v296 = (_DWORD *)((char *)&v250 - v15);
  MEMORY[0x1E0C80A78](v16);
  v279 = (uint64_t)&v250 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v250 - v19;
  MEMORY[0x1E0C80A78](v21);
  v299 = (uint64_t)&v250 - v22;
  MEMORY[0x1E0C80A78](v23);
  v298 = (uint64_t)&v250 - v24;
  MEMORY[0x1E0C80A78](v25);
  v300 = (uint64_t)&v250 - v26;
  sub_1BAA9CA80();
  MEMORY[0x1E0C80A78](v27);
  v287 = (uint64_t *)((char *)&v250 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v29);
  v283 = (unint64_t *)((char *)&v250 - v30);
  sub_1BA6AA0A4(0, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  v303 = v31;
  v268 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v252 = (_OWORD *)((char *)&v250 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33);
  v273 = (char *)&v250 - v34;
  MEMORY[0x1E0C80A78](v35);
  v272 = (char *)&v250 - v36;
  MEMORY[0x1E0C80A78](v37);
  v262 = (_OWORD *)((char *)&v250 - v38);
  MEMORY[0x1E0C80A78](v39);
  v266 = (_OWORD *)((char *)&v250 - v40);
  MEMORY[0x1E0C80A78](v41);
  v263 = (__int128 *)((char *)&v250 - v42);
  MEMORY[0x1E0C80A78](v43);
  v255 = (uint64_t)&v250 - v44;
  MEMORY[0x1E0C80A78](v45);
  v285 = (__int128 *)((char *)&v250 - v46);
  MEMORY[0x1E0C80A78](v47);
  v49 = (uint64_t)&v250 - v48;
  v301 = a1;
  v50 = *(_QWORD *)(a1 + 16);
  v51 = MEMORY[0x1E0DEE9D8];
  v284 = v20;
  if (v50)
  {
    v295 = (char *)&v250 - v48;
    v49 = v1;
    v304 = (_QWORD *)type metadata accessor for FormatDerivedDataBinderResult();
    v52 = *(v304 - 1);
    v53 = v301 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    v302 = *(_QWORD *)(v52 + 72);
    v54 = swift_bridgeObjectRetain();
    v55 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      MEMORY[0x1E0C80A78](v54);
      v249 = v53;
      v56 = swift_bridgeObjectRetain();
      v57 = sub_1BAA98F40(v56, (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, char *))sub_1BAA9CC18, (uint64_t)v247);
      swift_bridgeObjectRelease();
      v58 = *(_QWORD *)(v57 + 16);
      v59 = *(_QWORD *)(v55 + 16);
      v60 = v59 + v58;
      if (__OFADD__(v59, v58))
        goto LABEL_111;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v60 <= *(_QWORD *)(v55 + 24) >> 1)
      {
        if (*(_QWORD *)(v57 + 16))
          goto LABEL_14;
      }
      else
      {
        if (v59 <= v60)
          v62 = v59 + v58;
        else
          v62 = v59;
        v55 = sub_1BB3914DC(isUniquelyReferenced_nonNull_native, v62, 1, v55);
        if (*(_QWORD *)(v57 + 16))
        {
LABEL_14:
          v63 = *(_QWORD *)(v55 + 16);
          if ((*(_QWORD *)(v55 + 24) >> 1) - v63 < v58)
            goto LABEL_113;
          v64 = (*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80);
          v65 = *(_QWORD *)(v268 + 72);
          v66 = v55 + v64 + v65 * v63;
          if (v57 + v64 < v66 + v65 * v58 && v66 < v57 + v64 + v65 * v58)
            goto LABEL_120;
          swift_arrayInitWithCopy();
          if (v58)
          {
            v68 = *(_QWORD *)(v55 + 16);
            v69 = __OFADD__(v68, v58);
            v70 = v68 + v58;
            if (v69)
              goto LABEL_115;
            *(_QWORD *)(v55 + 16) = v70;
          }
          goto LABEL_4;
        }
      }
      if (v58)
        goto LABEL_112;
LABEL_4:
      v54 = swift_bridgeObjectRelease();
      v53 += v302;
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        v2 = v1;
        v20 = v284;
        v51 = MEMORY[0x1E0DEE9D8];
        v49 = (uint64_t)v295;
        goto LABEL_25;
      }
    }
  }
  v55 = MEMORY[0x1E0DEE9D8];
LABEL_25:
  *(_QWORD *)&v317 = MEMORY[0x1E0DEE9E0];
  v71 = *(_QWORD *)(v55 + 16);
  if (v71)
  {
    v72 = v55 + ((*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80));
    v73 = *(_QWORD *)(v268 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BAA9CC9C(v72, v49);
      sub_1BAA97920((uint64_t *)&v317, (_OWORD *)v49);
      if (v2)
        goto LABEL_119;
      v2 = 0;
      sub_1BAA9CD00(v49, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
      v72 += v73;
      --v71;
    }
    while (v71);
    swift_bridgeObjectRelease_n();
    v20 = v284;
    v51 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v74 = *(_QWORD *)(v317 + 64);
  v269 = v317 + 64;
  v271 = v317;
  v75 = 1 << *(_BYTE *)(v317 + 32);
  v76 = -1;
  if (v75 < 64)
    v76 = ~(-1 << v75);
  v77 = v76 & v74;
  v270 = (unint64_t)(v75 + 63) >> 6;
  v261 = &v316;
  v256 = v51;
  v49 = 0;
  v78 = v300;
  v79 = v303;
  v80 = v283;
LABEL_34:
  while (2)
  {
    if (v77)
    {
      v288 = (v77 - 1) & v77;
    }
    else
    {
      v69 = __OFADD__(v49++, 1);
      if (v69)
        goto LABEL_114;
      if (v49 >= v270)
        goto LABEL_106;
      v81 = *(_QWORD *)(v269 + 8 * v49);
      if (!v81)
      {
        v82 = v49 + 1;
        if (v49 + 1 >= v270)
          goto LABEL_106;
        v81 = *(_QWORD *)(v269 + 8 * v82);
        if (!v81)
        {
          v82 = v49 + 2;
          if (v49 + 2 >= v270)
            goto LABEL_106;
          v81 = *(_QWORD *)(v269 + 8 * v82);
          if (!v81)
          {
            v82 = v49 + 3;
            if (v49 + 3 >= v270)
              goto LABEL_106;
            v81 = *(_QWORD *)(v269 + 8 * v82);
            if (!v81)
            {
              v82 = v49 + 4;
              if (v49 + 4 >= v270)
                goto LABEL_106;
              v81 = *(_QWORD *)(v269 + 8 * v82);
              if (!v81)
              {
                while (1)
                {
                  v49 = v82 + 1;
                  if (__OFADD__(v82, 1))
                    goto LABEL_118;
                  if (v49 >= v270)
                    break;
                  v81 = *(_QWORD *)(v269 + 8 * v49);
                  ++v82;
                  if (v81)
                    goto LABEL_48;
                }
LABEL_106:
                swift_release();
                v229 = sub_1BB872DE4();
                swift_bridgeObjectRelease();
                return v229;
              }
            }
          }
        }
        v49 = v82;
      }
LABEL_48:
      v288 = (v81 - 1) & v81;
    }
    swift_bridgeObjectRetain();
    v83 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v84 = v83;
    v85 = *(_QWORD *)(v83 + 16);
    if (!v85)
    {
      swift_bridgeObjectRelease();
      v77 = v288;
      continue;
    }
    break;
  }
  v251 = v49;
  v86 = v285;
  v87 = (_QWORD *)((char *)v285 + *(int *)(v79 + 48));
  v257 = v85;
  v88 = v85 - 1;
  v267 = v85 - 1;
  v89 = v84 + ((*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80));
  v90 = *(_QWORD *)(v268 + 72);
  v264 = v84;
  v259 = v90;
  v260 = v89;
  v49 = v255;
  sub_1BAA9CC9C(v89 + v90 * v88, v255);
  v91 = v49 + *(int *)(v79 + 48);
  v92 = *(_OWORD *)(v49 + 112);
  v86[6] = *(_OWORD *)(v49 + 96);
  v86[7] = v92;
  v86[8] = *(_OWORD *)(v49 + 128);
  v93 = *(_OWORD *)(v49 + 80);
  v86[4] = *(_OWORD *)(v49 + 64);
  v86[5] = v93;
  v94 = *(_OWORD *)(v49 + 48);
  v86[2] = *(_OWORD *)(v49 + 32);
  v86[3] = v94;
  v95 = *(_OWORD *)(v49 + 16);
  *v86 = *(_OWORD *)v49;
  v86[1] = v95;
  v304 = v87;
  sub_1BA5193C4(v91, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  v96 = v267;
  if (!v267)
  {
    swift_bridgeObjectRelease();
    goto LABEL_101;
  }
  v258 = (uint64_t)v263 + *(int *)(v79 + 48);
  v97 = v264;
  while (1)
  {
    v98 = v96 - 1;
    if (v98 >= *(_QWORD *)(v97 + 16))
      goto LABEL_116;
    v265 = v2;
    v267 = v98;
    v99 = v263;
    sub_1BAA9CC9C(v260 + v98 * v259, (uint64_t)v263);
    v100 = *(int *)(v79 + 48);
    v101 = v99[5];
    v102 = v99[7];
    v323 = v99[6];
    v324 = v102;
    v103 = v99[7];
    v325 = v99[8];
    v104 = v99[3];
    v105 = v99[5];
    v321 = v99[4];
    v106 = v321;
    v322 = v105;
    v107 = v99[1];
    v108 = v99[3];
    v319 = v99[2];
    v109 = v319;
    v320 = v108;
    v110 = v99[1];
    v317 = *v99;
    v111 = v317;
    v318 = v110;
    v112 = v266;
    v266[6] = v323;
    v112[7] = v103;
    v112[8] = v99[8];
    v112[2] = v109;
    v112[3] = v104;
    v112[4] = v106;
    v112[5] = v101;
    v113 = (uint64_t)v112 + v100;
    *v112 = v111;
    v112[1] = v107;
    sub_1BA5193C4(v258, (uint64_t)v112 + v100, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v114 = *(int *)(v79 + 48);
    v115 = v262;
    v116 = (uint64_t)v262 + v114;
    v117 = v318;
    *v262 = v317;
    v115[1] = v117;
    v118 = v324;
    v115[6] = v323;
    v115[7] = v118;
    v115[8] = v325;
    v119 = v320;
    v115[2] = v319;
    v115[3] = v119;
    v120 = v322;
    v115[4] = v321;
    v115[5] = v120;
    v301 = v113;
    sub_1BA4C2DD8(v113, (uint64_t)v115 + v114, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v121 = *(_QWORD *)(v116 + 48);
    sub_1BA8C88FC((uint64_t)&v317);
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(v116, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v315 = v121;
    v122 = v261;
    *v261 = 0;
    v122[1] = 0;
    v123 = v287;
    sub_1BB77DF58(v287);
    v124 = (uint64_t)v123;
    v49 = (uint64_t)type metadata accessor for FormatSlotDefinitionItemSet;
    sub_1BA5193C4(v124, (uint64_t)v80, (uint64_t (*)(_QWORD))sub_1BAA9CA80);
    sub_1BA6AA0A4(0, &qword_1EF2AEE68, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v126 = v125;
    v286 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 48);
    if (v286(v80, 1, v125) != 1)
      break;
LABEL_59:
    sub_1BA8C89E4((uint64_t)&v317);
    swift_bridgeObjectRelease();
    sub_1BAA9CD00((uint64_t)v266, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
    v96 = v267;
    if (!v267)
    {
      swift_bridgeObjectRelease();
      v2 = v265;
      v79 = v303;
LABEL_101:
      sub_1BA4C2DD8((uint64_t)v304, v254, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v256 = sub_1BA7AE73C(0, *(_QWORD *)(v256 + 16) + 1, 1, v256);
      v220 = *(_QWORD *)(v256 + 16);
      v219 = *(_QWORD *)(v256 + 24);
      if (v220 >= v219 >> 1)
        v256 = sub_1BA7AE73C(v219 > 1, v220 + 1, 1, v256);
      v221 = v256;
      *(_QWORD *)(v256 + 16) = v220 + 1;
      sub_1BA5193C4(v254, v221+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(_QWORD *)(v253 + 72) * v220, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      sub_1BAA9CD00((uint64_t)v285, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
      v49 = v251;
      v77 = v288;
      goto LABEL_34;
    }
    v97 = v264;
    v2 = v265;
    v79 = v303;
    if (v257 <= v267)
      goto LABEL_117;
  }
  v282 = v126;
  while (1)
  {
    v127 = *v80;
    sub_1BA5193C4((uint64_t)v80 + *(int *)(v126 + 48), v78, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    if ((v127 & 0x8000000000000000) != 0)
      break;
    v128 = v304[6];
    if (v127 >= *(_QWORD *)(v128 + 16))
      goto LABEL_109;
    v294 = (*(unsigned __int8 *)(v280 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v280 + 80);
    v295 = (char *)v127;
    v293 = *(_QWORD *)(v280 + 72) * v127;
    v129 = v298;
    sub_1BA4C2DD8(v128 + v294 + v293, v298, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v130 = v299;
    sub_1BA4C2DD8(v78, v299, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v131 = *(_QWORD *)(v129 + 8);
    v132 = *(_QWORD *)(v130 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v133 = sub_1BA857E18(v131, v132);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8(v129, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    if ((v133 & 1) != 0)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      v134 = v279;
      sub_1BA4C2DD8(v130, v279, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
LABEL_70:
      sub_1BA4A2E80(v134, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      goto LABEL_71;
    }
    v135 = *(_QWORD *)(*((_QWORD *)v20 + 1) + 16);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v134 = v279;
    sub_1BA4C2DD8(v130, v279, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    if (!v135)
      goto LABEL_70;
    v136 = *(_QWORD *)(*(_QWORD *)(v134 + 8) + 16);
    sub_1BA4A2E80(v134, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    if (v136)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v302 = type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      v265 = swift_allocError();
      v223 = v222;
      sub_1BAA9CD3C();
      v225 = (uint64_t)v223 + v224[12];
      v226 = (_QWORD *)((char *)v223 + v224[16]);
      v297 = (uint64_t)v223 + v224[20];
      v227 = (uint64_t)v285;
      v228 = *((_QWORD *)v285 + 1);
      *v223 = *(_QWORD *)v285;
      v223[1] = v228;
      v229 = (uint64_t)type metadata accessor for FormatSlotDefinition;
      sub_1BA4C2DD8((uint64_t)v304, v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v230 = v303;
      v231 = v262;
      v304 = (_QWORD *)((char *)v262 + *(int *)(v303 + 48));
      v232 = v304;
      v233 = v324;
      v262[6] = v323;
      v231[7] = v233;
      v231[8] = v325;
      v234 = v322;
      v231[4] = v321;
      v231[5] = v234;
      v235 = v320;
      v231[2] = v319;
      v231[3] = v235;
      v236 = v318;
      *v231 = v317;
      v231[1] = v236;
      v237 = v301;
      sub_1BA4C2DD8(v301, (uint64_t)v232, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v238 = *((_QWORD *)&v317 + 1);
      *v226 = v317;
      v226[1] = v238;
      v239 = *(int *)(v230 + 48);
      v240 = v252;
      v241 = (uint64_t)v252 + v239;
      v242 = v318;
      *v252 = v317;
      v240[1] = v242;
      v243 = v324;
      v240[6] = v323;
      v240[7] = v243;
      v240[8] = v325;
      v244 = v320;
      v240[2] = v319;
      v240[3] = v244;
      v245 = v322;
      v240[4] = v321;
      v240[5] = v245;
      sub_1BA4C2DD8(v237, (uint64_t)v240 + v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA8C89E4((uint64_t)&v317);
      sub_1BA5193C4(v241, v297, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1BA4A2E80(v299, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BA4A2E80(v298, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BA4A2E80(v300, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BAA9CD00((uint64_t)v266, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
      swift_release();
      sub_1BA4A2E80((uint64_t)v304, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      sub_1BAA9CD00(v227, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
      return v229;
    }
LABEL_71:
    v137 = *(_QWORD *)(v129 + 8);
    swift_bridgeObjectRetain();
    v138 = swift_bridgeObjectRetain();
    v292 = sub_1BA90C438(v138, v137);
    v139 = *(_DWORD *)v129;
    v140 = *(_DWORD *)(v129 + 4);
    v141 = *(_DWORD *)(v130 + 4);
    if (*(_DWORD *)v130 < *(_DWORD *)v129)
      v139 = *(_DWORD *)v130;
    v291 = v139;
    if (v141 <= v140)
      v142 = v140;
    else
      v142 = v141;
    v290 = v142;
    v143 = *(_QWORD *)(v129 + 24);
    v144 = *(_QWORD *)(v129 + 32);
    v145 = v275;
    sub_1BA4C2DD8(v130, v275, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v146 = v143;
    v302 = v144;
    if (!v143)
    {
      v146 = *(_QWORD *)(v145 + 24);
      v302 = *(_QWORD *)(v145 + 32);
      sub_1BA5DCC20(v146);
    }
    v289 = v146;
    sub_1BA5DCC20(v143);
    sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v147 = v278;
    v148 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
    sub_1BA5E01A4(v129 + *(int *)(v297 + 36), v278, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    v149 = v276;
    sub_1BA4C2DD8(v130, v276, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v150 = sub_1BB86E710();
    v151 = *(_QWORD *)(v150 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v147, 1, v150) == 1)
    {
      v152 = v297;
      v153 = v149 + *(int *)(v297 + 36);
      v154 = v149;
      v155 = v277;
      sub_1BA5E01A4(v153, v277, (unint64_t *)&qword_1ED3C47E8, v148);
      sub_1BA4A2E80(v154, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BA5C699C(v147, (unint64_t *)&qword_1ED3C47E8, v148);
      v156 = v152;
    }
    else
    {
      sub_1BA4A2E80(v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      v155 = v277;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 32))(v277, v147, v150);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v151 + 56))(v155, 0, 1, v150);
      v156 = v297;
    }
    v158 = v295;
    v157 = v296;
    v159 = v292;
    v160 = v290;
    v161 = v302;
    *v296 = v291;
    v157[1] = v160;
    *((_QWORD *)v157 + 1) = v159;
    *((_QWORD *)v157 + 2) = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v157 + 3) = v289;
    *((_QWORD *)v157 + 4) = v161;
    sub_1BA6E7324(v155, (uint64_t)v157 + *(int *)(v156 + 36));
    v162 = v304[6];
    swift_bridgeObjectRetain();
    v163 = swift_isUniquelyReferenced_nonNull_native();
    v164 = v299;
    if ((v163 & 1) == 0)
      v162 = sub_1BAA67E4C(v162);
    v165 = v298;
    v166 = v300;
    v49 = (uint64_t)type metadata accessor for FormatSlotDefinitionItemSet;
    if ((unint64_t)v158 >= *(_QWORD *)(v162 + 16))
      goto LABEL_110;
    sub_1BAA9CB58((uint64_t)v296, v162 + v294 + v293);
    sub_1BA4A2E80(v164, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    sub_1BA4A2E80(v165, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    sub_1BA4A2E80(v166, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v302 = v162;
    v167 = v285;
    v168 = v285[8];
    v169 = v285[6];
    v313 = v285[7];
    v314 = v168;
    v170 = v285[4];
    v311 = v285[5];
    v312 = v169;
    v171 = v285[2];
    v309 = v285[3];
    v310 = v170;
    v172 = *v285;
    v307 = v285[1];
    v308 = v171;
    v306 = v172;
    v173 = v304;
    v174 = (char *)*v304;
    v294 = v304[1];
    v295 = v174;
    v176 = v304[2];
    v175 = v304[3];
    v177 = *(int *)(v303 + 48);
    v178 = v272;
    v179 = (uint64_t)&v272[v177];
    v180 = v324;
    *((_OWORD *)v272 + 6) = v323;
    v178[7] = v180;
    v178[8] = v325;
    v181 = v320;
    v178[2] = v319;
    v178[3] = v181;
    v182 = v322;
    v178[4] = v321;
    v178[5] = v182;
    v183 = v318;
    *v178 = v317;
    v178[1] = v183;
    sub_1BA4C2DD8(v301, (uint64_t)v178 + v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v185 = *(_QWORD *)(v179 + 16);
    v184 = *(_QWORD *)(v179 + 24);
    sub_1BA8C88FC((uint64_t)&v306);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(v179, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v186 = HIBYTE(v175) & 0xF;
    if ((v175 & 0x2000000000000000) == 0)
      v186 = v176 & 0xFFFFFFFFFFFFLL;
    if (v186)
      v187 = v176;
    else
      v187 = v185;
    if (v186)
      v188 = v175;
    else
      v188 = v184;
    v292 = v188;
    v293 = v187;
    swift_bridgeObjectRelease();
    v190 = v173[4];
    v189 = v173[5];
    v191 = *(int *)(v303 + 48);
    v192 = v273;
    v193 = (uint64_t)&v273[v191];
    v194 = v324;
    *((_OWORD *)v273 + 6) = v323;
    v192[7] = v194;
    v192[8] = v325;
    v195 = v320;
    v192[2] = v319;
    v192[3] = v195;
    v196 = v322;
    v192[4] = v321;
    v192[5] = v196;
    v197 = v318;
    *v192 = v317;
    v192[1] = v197;
    sub_1BA4C2DD8(v301, (uint64_t)v192 + v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v199 = *(_QWORD *)(v193 + 32);
    v198 = *(_QWORD *)(v193 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(v193, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v200 = HIBYTE(v189) & 0xF;
    if ((v189 & 0x2000000000000000) == 0)
      v200 = v190 & 0xFFFFFFFFFFFFLL;
    if (v200)
    {
      v201 = v189;
    }
    else
    {
      v190 = v199;
      v201 = v198;
    }
    swift_bridgeObjectRelease();
    v202 = v173[7];
    v203 = v173[8];
    v204 = (uint64_t)v173 + *(int *)(v281 + 40);
    v205 = v274;
    sub_1BA5E01A4(v204, v274, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v173, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    v206 = v294;
    *v173 = v295;
    v173[1] = v206;
    v207 = v292;
    v173[2] = v293;
    v173[3] = v207;
    v173[4] = v190;
    v173[5] = v201;
    v173[6] = v302;
    v173[7] = v202;
    v173[8] = v203;
    v78 = v300;
    sub_1BA6E7324(v205, v204);
    v208 = v167[7];
    v305[6] = v167[6];
    v305[7] = v208;
    v305[8] = v167[8];
    v209 = v167[3];
    v305[2] = v167[2];
    v305[3] = v209;
    v210 = v167[5];
    v305[4] = v167[4];
    v305[5] = v210;
    v211 = v167[1];
    v305[0] = *v167;
    v305[1] = v211;
    sub_1BA8C89E4((uint64_t)v305);
    v212 = v313;
    v167[6] = v312;
    v167[7] = v212;
    v167[8] = v314;
    v213 = v309;
    v167[2] = v308;
    v167[3] = v213;
    v214 = v311;
    v167[4] = v310;
    v167[5] = v214;
    v215 = v307;
    *v167 = v306;
    v167[1] = v215;
    v216 = v287;
    sub_1BB77DF58(v287);
    v217 = (uint64_t)v216;
    v49 = (uint64_t)type metadata accessor for FormatSlotDefinitionItemSet;
    v80 = v283;
    sub_1BA5193C4(v217, (uint64_t)v283, (uint64_t (*)(_QWORD))sub_1BAA9CA80);
    v126 = v282;
    v218 = v286(v80, 1, v282);
    v20 = v284;
    if (v218 == 1)
      goto LABEL_59;
  }
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  swift_bridgeObjectRelease();
  sub_1BAA9CD00(v49, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_120:
  LODWORD(v249) = 0;
  v248 = 1092;
  v247[0] = 2;
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAA9AD90(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t i;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1BAA9CB9C();
  result = sub_1BB873F48();
  v4 = (_QWORD *)result;
  v5 = 0;
  v24 = a1;
  v8 = *(_QWORD *)(a1 + 64);
  v7 = a1 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v22 = (unint64_t)(v9 + 63) >> 6;
  v23 = result + 64;
  if ((v10 & v6) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * i);
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1BAA9987C(v18);
    result = swift_bridgeObjectRelease();
    if (v1)
    {
      swift_release();
      return (uint64_t)v4;
    }
    *(_QWORD *)(v23 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v4[6] + 8 * i) = v17;
    *(_QWORD *)(v4[7] + 8 * i) = v19;
    v20 = v4[2];
    v14 = __OFADD__(v20, 1);
    v21 = v20 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v21;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v14 = __OFADD__(v5++, 1);
    if (v14)
      goto LABEL_27;
    if (v5 >= v22)
      return (uint64_t)v4;
    v15 = *(_QWORD *)(v7 + 8 * v5);
    if (!v15)
      break;
LABEL_15:
    v11 = (v15 - 1) & v15;
  }
  v16 = v5 + 1;
  if (v5 + 1 >= v22)
    return (uint64_t)v4;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v5 + 2;
  if (v5 + 2 >= v22)
    return (uint64_t)v4;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_14;
  v16 = v5 + 3;
  if (v5 + 3 >= v22)
    return (uint64_t)v4;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_14:
    v5 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v22)
      return (uint64_t)v4;
    v15 = *(_QWORD *)(v7 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BAA9AF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  char v61;
  unint64_t v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  unint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  unsigned int v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  _DWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  _DWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t *v140;
  unint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t result;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int64_t v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  int64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  _DWORD *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  unsigned int (*v190)(unint64_t *, uint64_t, uint64_t);
  unint64_t *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  char v208;
  uint64_t v209;

  v3 = v2;
  v185 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v178 = (uint64_t)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v184 = (uint64_t)&v162 - v8;
  MEMORY[0x1E0C80A78](v9);
  v183 = (uint64_t)&v162 - v10;
  v182 = type metadata accessor for FormatSlotDefinitionItemSet();
  v187 = *(_QWORD *)(v182 - 8);
  MEMORY[0x1E0C80A78](v182);
  v181 = (uint64_t)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v162 - v13;
  MEMORY[0x1E0C80A78](v15);
  v179 = (_DWORD *)((char *)&v162 - v16);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v162 - v18;
  MEMORY[0x1E0C80A78](v20);
  v186 = (uint64_t)&v162 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v162 - v23;
  MEMORY[0x1E0C80A78](v25);
  v201 = (char *)&v162 - v26;
  MEMORY[0x1E0C80A78](v27);
  v204 = (uint64_t)&v162 - v28;
  sub_1BAA9CA80();
  MEMORY[0x1E0C80A78](v29);
  v192 = (unint64_t *)((char *)&v162 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v31);
  v191 = (unint64_t *)((char *)&v162 - v32);
  v193 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v193);
  v163 = (uint64_t)&v162 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v177 = (unint64_t *)((char *)&v162 - v35);
  MEMORY[0x1E0C80A78](v36);
  v206 = (uint64_t *)((char *)&v162 - v37);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v162 - v39;
  MEMORY[0x1E0C80A78](v41);
  v44 = (uint64_t *)((char *)&v162 - v43);
  v45 = *(_QWORD *)(a1 + 16);
  v202 = v24;
  v189 = v19;
  v164 = v42;
  v180 = v14;
  if (v45)
  {
    v205 = v2;
    v199 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    v46 = a1 + v199;
    v200 = *(_QWORD *)(v42 + 72);
    v197 = a1;
    swift_bridgeObjectRetain();
    v47 = MEMORY[0x1E0DEE9E0];
    v198 = (uint64_t)v44;
    while (1)
    {
      sub_1BA4C2DD8(v46, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v49 = *v44;
      v50 = v44[1];
      v51 = *(_QWORD *)(v47 + 16);
      v203 = *v44;
      if (v51)
      {
        swift_bridgeObjectRetain();
        v52 = sub_1BA6E35A8(v49, v50);
        v53 = MEMORY[0x1E0DEE9D8];
        if ((v54 & 1) != 0)
        {
          v53 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v52);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = MEMORY[0x1E0DEE9D8];
      }
      sub_1BA4C2DD8((uint64_t)v44, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v55 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v53 = sub_1BA7AE73C(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
      v57 = *(_QWORD *)(v53 + 16);
      v56 = *(_QWORD *)(v53 + 24);
      if (v57 >= v56 >> 1)
        v53 = sub_1BA7AE73C(v56 > 1, v57 + 1, 1, v53);
      *(_QWORD *)(v53 + 16) = v57 + 1;
      v58 = v40;
      sub_1BA5193C4((uint64_t)v40, v53 + v199 + v57 * v200, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      swift_bridgeObjectRetain();
      v59 = v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v207 = v55;
      v62 = sub_1BA6E35A8(v203, v50);
      v63 = *(_QWORD *)(v59 + 16);
      v64 = (v61 & 1) == 0;
      v65 = v63 + v64;
      if (__OFADD__(v63, v64))
        goto LABEL_102;
      v66 = v61;
      if (*(_QWORD *)(v59 + 24) >= v65)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v47 = v207;
          if ((v61 & 1) == 0)
            goto LABEL_21;
        }
        else
        {
          sub_1BB4C57AC();
          v47 = v207;
          if ((v66 & 1) == 0)
            goto LABEL_21;
        }
      }
      else
      {
        sub_1BB4B399C(v65, isUniquelyReferenced_nonNull_native);
        v67 = sub_1BA6E35A8(v203, v50);
        if ((v66 & 1) != (v68 & 1))
          goto LABEL_108;
        v62 = v67;
        v47 = v207;
        if ((v66 & 1) == 0)
        {
LABEL_21:
          *(_QWORD *)(v47 + 8 * (v62 >> 6) + 64) |= 1 << v62;
          v69 = (_QWORD *)(*(_QWORD *)(v47 + 48) + 16 * v62);
          *v69 = v203;
          v69[1] = v50;
          *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v62) = v53;
          v70 = *(_QWORD *)(v47 + 16);
          v71 = __OFADD__(v70, 1);
          v72 = v70 + 1;
          if (v71)
            goto LABEL_104;
          *(_QWORD *)(v47 + 16) = v72;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      v48 = *(_QWORD *)(v47 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 8 * v62) = v53;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = (uint64_t *)v198;
      sub_1BA4A2E80(v198, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v46 += v200;
      --v45;
      v40 = v58;
      if (!v45)
      {
        swift_bridgeObjectRelease();
        v3 = v205;
        goto LABEL_27;
      }
    }
  }
  v47 = MEMORY[0x1E0DEE9E0];
LABEL_27:
  v73 = 0;
  v74 = v47 + 64;
  v75 = 1 << *(_BYTE *)(v47 + 32);
  v76 = -1;
  if (v75 < 64)
    v76 = ~(-1 << v75);
  v77 = v76 & *(_QWORD *)(v47 + 64);
  v175 = (unint64_t)(v75 + 63) >> 6;
  v172 = &v208;
  v165 = MEMORY[0x1E0DEE9D8];
  v176 = v47;
  if (!v77)
    goto LABEL_31;
LABEL_30:
  for (v77 &= v77 - 1; ; v77 = (v78 - 1) & v78)
  {
    swift_bridgeObjectRetain();
    v80 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v81 = *(_QWORD *)(v80 + 16);
    if (!v81)
    {
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    v82 = v81 - 1;
    v162 = (*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80);
    v173 = *(_QWORD *)(v164 + 72);
    v171 = v80 + v162;
    sub_1BA4C2DD8(v80 + v162 + v173 * (v81 - 1), (uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    if (v81 != 1)
    {
      v169 = v73;
      v168 = v74;
      v167 = v77;
      v170 = v80;
      v166 = v81;
      while (1)
      {
        if (v81 <= v82)
          goto LABEL_105;
        v83 = v82 - 1;
        if (v83 >= *(_QWORD *)(v80 + 16))
        {
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          result = sub_1BB874560();
          __break(1u);
          return result;
        }
        v174 = v83;
        v84 = v177;
        sub_1BA4C2DD8(v171 + v83 * v173, (uint64_t)v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        v207 = v84[6];
        v85 = v172;
        *(_QWORD *)v172 = 0;
        *((_QWORD *)v85 + 1) = 0;
        swift_bridgeObjectRetain();
        v86 = v192;
        sub_1BB77DF58(v192);
        v87 = v191;
        sub_1BA5193C4((uint64_t)v86, (uint64_t)v191, (uint64_t (*)(_QWORD))sub_1BAA9CA80);
        sub_1BA6AA0A4(0, &qword_1EF2AEE68, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
        v89 = v88;
        v190 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48);
        if (v190(v87, 1, v88) != 1)
          break;
LABEL_54:
        swift_bridgeObjectRelease();
        sub_1BA4A2E80((uint64_t)v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        v73 = v169;
        v74 = v168;
        v77 = v167;
        v80 = v170;
        v81 = v166;
        v82 = v174;
        if (!v174)
          goto LABEL_92;
      }
      v90 = (uint64_t)v189;
      v91 = v206;
      v93 = (uint64_t)v201;
      v92 = (uint64_t)v202;
      v188 = v89;
      while (1)
      {
        v205 = v3;
        v100 = *v87;
        sub_1BA5193C4((uint64_t)v87 + *(int *)(v89 + 48), v204, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        if ((v100 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
          goto LABEL_106;
        }
        v101 = v91[6];
        if (v100 >= *(_QWORD *)(v101 + 16))
          goto LABEL_100;
        v199 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
        v200 = v100;
        v198 = *(_QWORD *)(v187 + 72) * v100;
        sub_1BA4C2DD8(v101 + v199 + v198, v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1BA4C2DD8(v204, v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v102 = *(_QWORD *)(v93 + 8);
        v103 = *(_QWORD *)(v92 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v104 = v92;
        v105 = sub_1BA857E18(v102, v103);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v106 = v186;
        sub_1BA4C2DD8(v93, v186, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        if ((v105 & 1) != 0)
          break;
        v108 = *(_QWORD *)(*(_QWORD *)(v106 + 8) + 16);
        sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1BA4C2DD8(v104, v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v107 = (_DWORD *)v104;
        if (!v108)
          goto LABEL_67;
        v109 = *(_QWORD *)(*(_QWORD *)(v90 + 8) + 16);
        sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v110 = v93;
        v111 = v91;
        if (v109)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatDerivedDataError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
          swift_allocError();
          v156 = v155;
          sub_1BAA9CAF4();
          v158 = v156 + *(int *)(v157 + 48);
          sub_1BA4C2DD8((uint64_t)v91, v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          v159 = v177;
          sub_1BA4C2DD8((uint64_t)v177, v158, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          v160 = (uint64_t)type metadata accessor for FormatSlotDefinitionItemSet;
          sub_1BA4A2E80(v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1BA4A2E80(v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1BA4A2E80(v204, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1BA4A2E80((uint64_t)v159, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          sub_1BA4A2E80((uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          swift_release();
          return v160;
        }
LABEL_68:
        v113 = *v111;
        v112 = v111[1];
        swift_bridgeObjectRetain();
        v114 = sub_1BA761FE4(v113, v112, v185);
        swift_bridgeObjectRelease();
        v115 = *(_QWORD *)(v110 + 8);
        swift_bridgeObjectRetain();
        v116 = swift_bridgeObjectRetain();
        v197 = sub_1BA90C438(v116, v115);
        if ((v114 & 1) != 0)
        {
          v196 = 0;
        }
        else
        {
          v117 = *(_DWORD *)v110;
          if (*v107 > *(_DWORD *)v110)
            v117 = *v107;
          v196 = v117;
        }
        v118 = *(_DWORD *)(v110 + 4);
        v119 = v107;
        if (v107[1] > v118)
          v118 = v107[1];
        v195 = v118;
        v209 = *(_QWORD *)(v110 + 16);
        swift_bridgeObjectRetain();
        v120 = swift_bridgeObjectRetain();
        sub_1BB384A78(v120);
        sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
        v121 = v205;
        v194 = sub_1BB872BC8();
        v205 = v121;
        swift_bridgeObjectRelease();
        v122 = *(_QWORD *)(v110 + 24);
        v123 = *(_QWORD *)(v110 + 32);
        v124 = (uint64_t)v180;
        sub_1BA4C2DD8((uint64_t)v107, (uint64_t)v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v203 = v122;
        v125 = v123;
        if (!v122)
        {
          v125 = *(_QWORD *)(v124 + 32);
          v203 = *(_QWORD *)(v124 + 24);
          sub_1BA5DCC20(v203);
        }
        sub_1BA5DCC20(v122);
        sub_1BA4A2E80(v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v126 = v182;
        v127 = v110 + *(int *)(v182 + 36);
        v128 = v184;
        v129 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
        sub_1BA5E01A4(v127, v184, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v130 = (uint64_t)v119;
        v131 = v181;
        sub_1BA4C2DD8(v130, v181, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v132 = sub_1BB86E710();
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v128, 1, v132) == 1)
        {
          v134 = v131 + *(int *)(v126 + 36);
          v135 = v131;
          v136 = v183;
          sub_1BA5E01A4(v134, v183, (unint64_t *)&qword_1ED3C47E8, v129);
          sub_1BA4A2E80(v135, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          sub_1BA5C699C(v128, (unint64_t *)&qword_1ED3C47E8, v129);
        }
        else
        {
          sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
          v136 = v183;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v183, v128, v132);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v133 + 56))(v136, 0, 1, v132);
        }
        v137 = (uint64_t)v179;
        v138 = v195;
        *v179 = v196;
        *(_DWORD *)(v137 + 4) = v138;
        v139 = v194;
        *(_QWORD *)(v137 + 8) = v197;
        *(_QWORD *)(v137 + 16) = v139;
        *(_QWORD *)(v137 + 24) = v203;
        *(_QWORD *)(v137 + 32) = v125;
        sub_1BA6E7324(v136, v137 + *(int *)(v126 + 36));
        v140 = v206;
        v141 = v206[6];
        swift_bridgeObjectRetain();
        v142 = swift_isUniquelyReferenced_nonNull_native();
        v143 = (uint64_t)v201;
        if ((v142 & 1) == 0)
          v141 = sub_1BAA67E4C(v141);
        v144 = (uint64_t)v202;
        if (v200 >= *(_QWORD *)(v141 + 16))
          goto LABEL_101;
        sub_1BAA9CB58(v137, v141 + v199 + v198);
        sub_1BA4A2E80(v144, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1BA4A2E80(v143, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        sub_1BA4A2E80(v204, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
        v145 = v140[3];
        v146 = HIBYTE(v145) & 0xF;
        if ((v145 & 0x2000000000000000) == 0)
          v146 = v140[2] & 0xFFFFFFFFFFFFLL;
        if (v146)
        {
          v200 = v140[2];
        }
        else
        {
          v145 = v177[3];
          v200 = v177[2];
        }
        v147 = *v140;
        v148 = v140[1];
        swift_bridgeObjectRetain();
        v150 = v140[4];
        v149 = v140[5];
        v151 = HIBYTE(v149) & 0xF;
        if ((v149 & 0x2000000000000000) == 0)
          v151 = v150 & 0xFFFFFFFFFFFFLL;
        v203 = v147;
        if (!v151)
        {
          v150 = v177[4];
          v149 = v177[5];
        }
        swift_bridgeObjectRetain();
        v94 = v140[7];
        v95 = v140[8];
        v96 = (uint64_t)v140 + *(int *)(v193 + 40);
        v97 = v178;
        sub_1BA5E01A4(v96, v178, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        *v206 = v203;
        v206[1] = v148;
        v206[2] = v200;
        v206[3] = v145;
        v206[4] = v150;
        v206[5] = v149;
        v206[6] = v141;
        v206[7] = v94;
        v206[8] = v95;
        v91 = v206;
        sub_1BA6E7324(v97, v96);
        v98 = v192;
        sub_1BB77DF58(v192);
        v87 = v191;
        sub_1BA5193C4((uint64_t)v98, (uint64_t)v191, (uint64_t (*)(_QWORD))sub_1BAA9CA80);
        v89 = v188;
        v99 = v190(v87, 1, v188);
        v3 = v205;
        v93 = (uint64_t)v201;
        v92 = (uint64_t)v202;
        v90 = (uint64_t)v189;
        if (v99 == 1)
          goto LABEL_54;
      }
      sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BA4C2DD8(v104, v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      v107 = (_DWORD *)v104;
LABEL_67:
      sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
      v110 = v93;
      v111 = v91;
      goto LABEL_68;
    }
LABEL_92:
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8((uint64_t)v206, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v165 = sub_1BA7AE73C(0, *(_QWORD *)(v165 + 16) + 1, 1, v165);
    v153 = *(_QWORD *)(v165 + 16);
    v152 = *(_QWORD *)(v165 + 24);
    if (v153 >= v152 >> 1)
      v165 = sub_1BA7AE73C(v152 > 1, v153 + 1, 1, v165);
    v154 = v165;
    *(_QWORD *)(v165 + 16) = v153 + 1;
    sub_1BA5193C4(v163, v154 + v162 + v153 * v173, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
    sub_1BA4A2E80((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
LABEL_46:
    if (v77)
      goto LABEL_30;
LABEL_31:
    v71 = __OFADD__(v73++, 1);
    if (v71)
      goto LABEL_103;
    if (v73 >= v175)
      break;
    v78 = *(_QWORD *)(v74 + 8 * v73);
    if (v78)
      continue;
    v79 = v73 + 1;
    if (v73 + 1 >= v175)
      break;
    v78 = *(_QWORD *)(v74 + 8 * v79);
    if (!v78)
    {
      v79 = v73 + 2;
      if (v73 + 2 >= v175)
        break;
      v78 = *(_QWORD *)(v74 + 8 * v79);
      if (!v78)
      {
        v79 = v73 + 3;
        if (v73 + 3 >= v175)
          break;
        v78 = *(_QWORD *)(v74 + 8 * v79);
        if (!v78)
        {
          v79 = v73 + 4;
          if (v73 + 4 >= v175)
            break;
          v78 = *(_QWORD *)(v74 + 8 * v79);
          if (!v78)
          {
            while (1)
            {
              v73 = v79 + 1;
              if (__OFADD__(v79, 1))
                goto LABEL_107;
              if (v73 >= v175)
                goto LABEL_97;
              v78 = *(_QWORD *)(v74 + 8 * v73);
              ++v79;
              if (v78)
                goto LABEL_43;
            }
          }
        }
      }
    }
    v73 = v79;
LABEL_43:
    ;
  }
LABEL_97:
  swift_release();
  v160 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  return v160;
}

uint64_t sub_1BAA9C198()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA9C1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  ValueMetadata *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v28 = a1;
  sub_1BA4B07F0(0, &qword_1ED3C7A78, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = sub_1BA8F3280(MEMORY[0x1E0DEE9D8]);
  v26 = v12;
  v27 = v13;
  v14 = sub_1BB86EB84();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, a3, v14);
  swift_storeEnumTagMultiPayload();
  Dictionary<>.seedFormatCodingVersion(mode:)((uint64_t)v11);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersioningMode);
  v15 = v26;
  v16 = v27;
  v22 = v26;
  v23 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = &v22;
  sub_1BB73AAFC(a2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v17;
  }
  swift_bridgeObjectRelease();
  v24 = &type metadata for TraversalOnlyEncoder;
  v25 = sub_1BA6ECAA0();
  v22 = v15;
  v23 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormatPackage.encode(to:)(&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v19 = swift_bridgeObjectRetain();
  Dictionary<>.formatCodingVersionInfo.getter(v19, (uint64_t)v8);
  swift_bridgeObjectRelease();
  v20 = type metadata accessor for FormatVersionInfo(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v8, 1, v20);
  if ((_DWORD)result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = *(uint64_t **)&v8[*(int *)(v20 + 24)];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionInfo);
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BAA9C430(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v58 = type metadata accessor for FormatDerivedDataWarningError();
  v60 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v59 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v56 = (char *)&v52 - v4;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v52 - v6;
  v8 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v52 - v12);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v52 - v15);
  v17 = swift_allocObject();
  v18 = MEMORY[0x1E0DEE9D8];
  v62 = v17;
  *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9D8];
  v54 = v17 + 16;
  v19 = swift_allocObject();
  v63 = v19;
  *(_QWORD *)(v19 + 16) = v18;
  v55 = (uint64_t *)(v19 + 16);
  v20 = *(int *)(type metadata accessor for FormatPackage() + 92);
  v57 = a1;
  v61 = (uint64_t)a1 + v20 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24);
  sub_1BA8CAF1C(v61, (uint64_t)v7, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  v53 = v7;
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
  v21 = *v16;
  v22 = v16[1];
  sub_1BA5931BC(*v16, v22);
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatCompilerOptions.Newsroom);
  v23 = 0;
  v24 = 0;
  if (v22 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v21, v22);
    v23 = v21;
    v24 = v22;
  }
  v64 = v23;
  v65 = v24;
  sub_1BAA98278((uint64_t)&v64, 24945, 0xE200000000000000, v63, v62);
  swift_bridgeObjectRelease();
  v25 = (uint64_t)v53;
  sub_1BA8CAF1C(v61, (uint64_t)v53, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4(v25, (uint64_t)v13, type metadata accessor for FormatCompilerOptions.Newsroom);
  v26 = *v13;
  v27 = v13[1];
  v29 = v13[2];
  v28 = v13[3];
  sub_1BA5931BC(*v13, v27);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v27 == 1)
  {
    v29 = 0;
    v28 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v26, v27);
  }
  v64 = v29;
  v65 = v28;
  v30 = v62;
  sub_1BAA98278((uint64_t)&v64, 0x676E6967617473, 0xE700000000000000, v63, v62);
  swift_bridgeObjectRelease();
  sub_1BA8CAF1C(v61, v25, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4(v25, (uint64_t)v10, type metadata accessor for FormatCompilerOptions.Newsroom);
  v31 = *v10;
  v32 = v10[1];
  v34 = v10[4];
  v33 = v10[5];
  sub_1BA5931BC(*v10, v32);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v32 == 1)
  {
    v34 = 0;
    v33 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v31, v32);
  }
  v36 = v59;
  v35 = v60;
  v37 = v57;
  v38 = v56;
  v64 = v34;
  v65 = v33;
  sub_1BAA98278((uint64_t)&v64, 0x69746375646F7270, 0xEA00000000006E6FLL, v63, v30);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v39 = *(_QWORD *)(v30 + 16);
  if (*(_QWORD *)(v39 + 16))
  {
    v40 = *v37;
    v41 = v37[1];
    *v38 = v39;
    v38[1] = v40;
    v38[2] = v41;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = sub_1BB3914A0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v44 = *(_QWORD *)(v42 + 16);
    v43 = *(_QWORD *)(v42 + 24);
    if (v44 >= v43 >> 1)
      v42 = sub_1BB3914A0(v43 > 1, v44 + 1, 1, v42);
    *(_QWORD *)(v42 + 16) = v44 + 1;
    sub_1BA5193C4((uint64_t)v38, v42+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
  }
  else
  {
    v42 = MEMORY[0x1E0DEE9D8];
  }
  v45 = v55;
  swift_beginAccess();
  v46 = *v45;
  if (*(_QWORD *)(v46 + 16))
  {
    v47 = *v37;
    v48 = v37[1];
    *v36 = v46;
    v36[1] = v47;
    v36[2] = v48;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_1BB3914A0(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
    v50 = *(_QWORD *)(v42 + 16);
    v49 = *(_QWORD *)(v42 + 24);
    if (v50 >= v49 >> 1)
      v42 = sub_1BB3914A0(v49 > 1, v50 + 1, 1, v42);
    *(_QWORD *)(v42 + 16) = v50 + 1;
    sub_1BA5193C4((uint64_t)v36, v42+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
  }
  swift_release();
  swift_release();
  return v42;
}

uint64_t sub_1BAA9CA64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1BA9F449C(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

void sub_1BAA9CA80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AEE60)
  {
    sub_1BA6AA0A4(255, &qword_1EF2AEE68, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AEE60);
  }
}

void sub_1BAA9CAF4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AEE70)
  {
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AEE70);
  }
}

uint64_t sub_1BAA9CB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BAA9CB9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AEE78)
  {
    sub_1BA4B07F0(255, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AEE78);
  }
}

uint64_t sub_1BAA9CC18(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v18[9];

  v6 = *(_OWORD **)(v5 + 16);
  v18[0] = *v6;
  v7 = v6[1];
  v8 = v6[2];
  v9 = v6[4];
  v18[3] = v6[3];
  v18[4] = v9;
  v18[1] = v7;
  v18[2] = v8;
  v10 = v6[5];
  v11 = v6[6];
  v12 = v6[8];
  v18[7] = v6[7];
  v18[8] = v12;
  v18[5] = v10;
  v18[6] = v11;
  v13 = v6[7];
  a1[6] = v6[6];
  a1[7] = v13;
  a1[8] = v6[8];
  v14 = v6[3];
  a1[2] = v6[2];
  a1[3] = v14;
  v15 = v6[5];
  a1[4] = v6[4];
  a1[5] = v15;
  v16 = v6[1];
  *a1 = *v6;
  a1[1] = v16;
  sub_1BA4C2DD8(a5, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
  return sub_1BA8C88FC((uint64_t)v18);
}

uint64_t sub_1BAA9CC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6AA0A4(0, &qword_1EF2B15A0, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA9CD00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BA6AA0A4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BAA9CD3C()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF2AEE80)
  {
    MEMORY[0x1E0C80A78](0);
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF2AEE80);
  }
}

uint64_t sub_1BAA9CE30(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA6AA0A4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BAA9CE90(_QWORD *a1)
{
  return FormatSupplementaryNodePinTrait.encode(to:)(a1);
}

uint64_t _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  char v16;
  unint64_t v17;
  __int16 v18;
  unint64_t v19;
  __int16 v20;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int16 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 10);
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int16 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 10);
  if (*(_BYTE *)(a1 + 10))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        v19 = *(_QWORD *)a1;
        v20 = v3 & 0x1FF;
        v17 = v5;
        v18 = v6 & 0x1FF;
        sub_1BA77A170(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        v8 = _s8NewsFeed34FormatSupplementaryNodePinDistanceO2eeoiySbAC_ACtFZ_0((uint64_t)&v19, (uint64_t)&v17);
        sub_1BA77A170(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        sub_1BA77A170(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        sub_1BA77A170(v5, v6, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        sub_1BA77A170(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        return v8 & 1;
      }
      sub_1BA7AD890(*(_QWORD *)a1, v3, BYTE1(v3) & 1);
      goto LABEL_29;
    }
    if (v7 == 2)
    {
      if (v3 >> 8 <= 0xFE)
      {
        v19 = *(_QWORD *)a1;
        v20 = v3;
        if (v6 >> 8 <= 0xFE)
        {
          v17 = v5;
          v18 = v6 & 0x1FF;
          sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v16 = _s8NewsFeed34FormatSupplementaryNodePinDistanceO2eeoiySbAC_ACtFZ_0((uint64_t)&v19, (uint64_t)&v17);
          sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          sub_1BA7AAE54(v19, v20, SHIBYTE(v20));
          sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          if ((v16 & 1) == 0)
            goto LABEL_30;
LABEL_38:
          v8 = 1;
          return v8 & 1;
        }
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        sub_1BA7AAE54(v2, v3, SHIBYTE(v20));
      }
      else
      {
        sub_1BA7AD89C(*(_QWORD *)a2, *(_WORD *)(a2 + 8));
        sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        sub_1BA77A170(v5, v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        if (v6 >> 8 > 0xFE)
          goto LABEL_38;
      }
      sub_1BA7AAE60(v2, v3);
      sub_1BA7AAE60(v5, v6);
      goto LABEL_30;
    }
    sub_1BA7AD89C(*(_QWORD *)a1, v3);
LABEL_29:
    sub_1BA77A170(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
    sub_1BA77A170(v2, v3, v4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    sub_1BA77A170(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
LABEL_30:
    v8 = 0;
    return v8 & 1;
  }
  if (*(_BYTE *)(a2 + 10))
    goto LABEL_29;
  if ((v2 & 1) != 0)
    v9 = 0x676E696C69617274;
  else
    v9 = 0x676E696461656CLL;
  if ((v2 & 1) != 0)
    v10 = 0xE800000000000000;
  else
    v10 = 0xE700000000000000;
  if ((v5 & 1) != 0)
    v11 = 0x676E696C69617274;
  else
    v11 = 0x676E696461656CLL;
  if ((v5 & 1) != 0)
    v12 = 0xE800000000000000;
  else
    v12 = 0xE700000000000000;
  if (v9 != v11 || v10 != v12)
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA77A170(v2, v3, 0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    sub_1BA77A170(v5, v6, 0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    return v14 & 1;
  }
  swift_bridgeObjectRelease_n();
  sub_1BA77A170(v2, v3, 0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  sub_1BA77A170(v5, v6, 0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  v8 = 1;
  return v8 & 1;
}

unint64_t sub_1BAA9D4A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA9D4C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA9D4C8()
{
  unint64_t result;

  result = qword_1EF2AEE90;
  if (!qword_1EF2AEE90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinTrait, &type metadata for FormatSupplementaryNodePinTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2AEE90);
  }
  return result;
}

unint64_t sub_1BAA9D50C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA551094();
  a1[2] = sub_1BAA9D540();
  result = sub_1BAA9D584();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA9D540()
{
  unint64_t result;

  result = qword_1ED3A0520;
  if (!qword_1ED3A0520)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinTrait, &type metadata for FormatSupplementaryNodePinTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3A0520);
  }
  return result;
}

unint64_t sub_1BAA9D584()
{
  unint64_t result;

  result = qword_1EF2AEE98;
  if (!qword_1EF2AEE98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinTrait, &type metadata for FormatSupplementaryNodePinTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2AEE98);
  }
  return result;
}

uint64_t destroy for FormatSupplementaryNodePinTrait(uint64_t a1)
{
  return sub_1BA77A170(*(_QWORD *)a1, *(unsigned __int16 *)(a1 + 8), *(_BYTE *)(a1 + 10), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
}

uint64_t _s8NewsFeed31FormatSupplementaryNodePinTraitOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned __int16 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 10);
  v5 = *(_WORD *)(a2 + 8);
  sub_1BA77A170(*(_QWORD *)a2, v5, v4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
  *(_QWORD *)a1 = v3;
  *(_WORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 10) = v4;
  return a1;
}

uint64_t assignWithCopy for FormatSupplementaryNodePinTrait(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned __int16 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 10);
  v5 = *(_WORD *)(a2 + 8);
  sub_1BA77A170(*(_QWORD *)a2, v5, v4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v7 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v5;
  v8 = *(_BYTE *)(a1 + 10);
  *(_BYTE *)(a1 + 10) = v4;
  sub_1BA77A170(v6, v7, v8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for FormatSupplementaryNodePinTrait(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_WORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 10);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v3;
  v7 = *(_BYTE *)(a1 + 10);
  *(_BYTE *)(a1 + 10) = v4;
  sub_1BA77A170(v5, v6, v7, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  return a1;
}

uint64_t sub_1BAA9D74C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 10);
}

uint64_t sub_1BAA9D754(uint64_t result, char a2)
{
  *(_BYTE *)(result + 10) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinTrait()
{
  return &type metadata for FormatSupplementaryNodePinTrait;
}

_QWORD *sub_1BAA9D76C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  __int128 v46;
  _QWORD *v47;
  _OWORD v49[2];
  uint64_t v50;

  if (*(unsigned __int8 *)(a1 + 10) == 255)
  {
    v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
    sub_1BA8C88C8(0);
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
    v5 = (v4 + 32) & ~v4;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
    v7 = (_QWORD *)(v6 + v5);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v7);
    v8 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
    sub_1BAF89090(7235920, 0xE300000000000000, 0, 0, v6, v49);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    v9 = *(_QWORD *)a1;
    v10 = *(unsigned __int16 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 10) << 16);
    if (WORD1(v10))
    {
      v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v11);
      sub_1BA8C88C8(0);
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(_QWORD *)(v13 + 72);
      if (WORD1(v10) == 1)
      {
        v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1BB87A390;
        v17 = v16 + v15;
        sub_1BA77A170(v9, v10, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6465786946, 0xE500000000000000, (_QWORD *)(v16 + v15));
        v18 = type metadata accessor for FormatInspectionItem(0);
        v19 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
        v19(v17, 0, 1, v18);
        v20 = (_QWORD *)(v17 + v14);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v11);
        v21 = swift_initStackObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)&v49[0] = v9;
        WORD4(v49[0]) = v10 & 0x1FF;
        v22 = sub_1BB28FA64((uint64_t)v49);
        sub_1BA771864(v9, v10);
        *(_QWORD *)(v21 + 56) = &type metadata for FormatInspection;
        *(_QWORD *)(v21 + 64) = &off_1E7335C38;
        *(_QWORD *)(v21 + 32) = v22;
        v23 = sub_1BA9747FC(v21);
        swift_setDeallocating();
        sub_1BA89EA20();
        swift_arrayDestroy();
        v24 = sub_1BB6DF010(v23);
        swift_bridgeObjectRelease();
        sub_1BAAF3C48(0x65636E6174736944, 0xE800000000000000, (uint64_t)v24, 0, 0, v20);
        v19((unint64_t)v20, 0, 1, v18);
      }
      else
      {
        v36 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1BB87A390;
        v37 = (_QWORD *)(v16 + v36);
        sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6E6F6974636553, 0xE700000000000000, v37);
        v38 = type metadata accessor for FormatInspectionItem(0);
        v39 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
        v39(v37, 0, 1, v38);
        v40 = (_QWORD *)((char *)v37 + v14);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v11);
        v41 = swift_initStackObject();
        *(_OWORD *)(v41 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)&v49[0] = v9;
        WORD4(v49[0]) = v10;
        v42 = sub_1BB28FA64((uint64_t)v49);
        *(_QWORD *)(v41 + 56) = &type metadata for FormatInspection;
        *(_QWORD *)(v41 + 64) = &off_1E7335C38;
        *(_QWORD *)(v41 + 32) = v42;
        v43 = sub_1BA9747FC(v41);
        swift_setDeallocating();
        sub_1BA89EA20();
        swift_arrayDestroy();
        v44 = sub_1BB6DF010(v43);
        swift_bridgeObjectRelease();
        sub_1BAAF3C48(0x65636E6174736944, 0xE800000000000000, (uint64_t)v44, 0, 0, v40);
        v39(v40, 0, 1, v38);
      }
      sub_1BAF89090(7235920, 0xE300000000000000, 0, 0, v16, v49);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    else
    {
      v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v25);
      sub_1BA8C88C8(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(_QWORD *)(v27 + 72);
      v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1BB87A390;
      v31 = (_QWORD *)(v30 + v29);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 1701274693, 0xE400000000000000, v31);
      v32 = type metadata accessor for FormatInspectionItem(0);
      v33 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
      v33(v31, 0, 1, v32);
      if ((v9 & 1) != 0)
        v34 = 0x676E696C69617274;
      else
        v34 = 0x676E696461656CLL;
      if ((v9 & 1) != 0)
        v35 = 0xE800000000000000;
      else
        v35 = 0xE700000000000000;
      sub_1BAAF7494(1701274693, 0xE400000000000000, v34, v35, (_QWORD *)((char *)v31 + v28));
      v33((_QWORD *)((char *)v31 + v28), 0, 1, v32);
      sub_1BAF89090(7235920, 0xE300000000000000, 0, 0, v30, v49);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
  }
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v45 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v45;
  *(_QWORD *)(v45 + 48) = v50;
  v46 = v49[1];
  *(_OWORD *)(v45 + 16) = v49[0];
  *(_OWORD *)(v45 + 32) = v46;
  v47 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v47;
}

uint64_t sub_1BAA9DF20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAA9DF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v7 = *(_QWORD *)(a3 + 88);
  if (v7 && *(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_retain();
      v11 = sub_1BAA9E24C(v10, v4);
      swift_bridgeObjectRelease();
      swift_release();
      return v11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED39E0B0 != -1)
    swift_once();
  v12 = (id)qword_1ED4763D0;
  v13 = sub_1BB8732F4();
  sub_1BA7AA598();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1BB86EF44("No image variants found for %@", 30, 2, &dword_1BA493000, v12, v13, v14);

  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BAA9E0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v7 = *(_QWORD *)(a3 + 96);
  if (v7 && *(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_retain();
      v11 = sub_1BAA9E488(v10, v4);
      swift_bridgeObjectRelease();
      swift_release();
      return v11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED39E0B0 != -1)
    swift_once();
  v12 = (id)qword_1ED4763D0;
  v13 = sub_1BB8732F4();
  sub_1BA7AA598();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1BB86EF44("No video variants found for %@", 30, 2, &dword_1BA493000, v12, v13, v14);

  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BAA9E24C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = type metadata accessor for LayeredMediaImageVariant();
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v7 = (_QWORD *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v25[1] = v2;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A2CC(0, v8, 0);
    v9 = v30;
    v10 = type metadata accessor for LayeredMedia.ImageResource();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = (_QWORD *)(a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
    v27 = a2 + 2;
    v28 = v10;
    v26 = *(_QWORD *)(v11 + 72);
    do
    {
      v13 = a2[5];
      v14 = a2[6];
      __swift_project_boxed_opaque_existential_1(v27, v13);
      v15 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v14 + 8))(*v12, v12[1], v13, v14);
      v16 = v12[2];
      v17 = v12[3];
      v18 = (char *)v12 + *(int *)(v28 + 24);
      v19 = (char *)v7 + *(int *)(v29 + 24);
      v20 = sub_1BB86F43C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v18, v20);
      *v7 = v15;
      v7[1] = v16;
      v7[2] = v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BAC7A2CC(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v30;
      }
      v23 = *(_QWORD *)(v9 + 16);
      v22 = *(_QWORD *)(v9 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BAC7A2CC(v22 > 1, v23 + 1, 1);
        v9 = v30;
      }
      *(_QWORD *)(v9 + 16) = v23 + 1;
      sub_1BAA9E444((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v23);
      v12 = (_QWORD *)((char *)v12 + v26);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1BAA9E444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayeredMediaImageVariant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAA9E488(uint64_t a1, _QWORD *a2)
{
  int64_t v2;
  uint64_t v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A2F8(0, v2, 0);
    v3 = v22;
    v20 = a2 + 2;
    v21 = a2;
    v6 = (char *)(a1 + 64);
    do
    {
      v7 = *((_QWORD *)v6 - 4);
      v8 = *((_QWORD *)v6 - 3);
      v9 = *((_QWORD *)v6 - 2);
      v10 = *((_QWORD *)v6 - 1);
      v11 = qword_1BB898CD0[*v6];
      v12 = a2[5];
      v13 = a2[6];
      __swift_project_boxed_opaque_existential_1(v20, v12);
      v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
      swift_bridgeObjectRetain();
      v15 = v14(v7, v8, v12, v13);
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v22 + 16);
      v16 = *(_QWORD *)(v22 + 24);
      if (v17 >= v16 >> 1)
        sub_1BAC7A2F8(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v22 + 16) = v17 + 1;
      v18 = (_QWORD *)(v22 + 40 * v17);
      v18[4] = v15;
      v18[5] = v9;
      v18[6] = v10;
      v18[7] = v11;
      v18[8] = 0xE300000000000000;
      v6 += 40;
      --v2;
      a2 = v21;
    }
    while (v2);
  }
  return v3;
}

double FormatCustomFont.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void FormatCustomFont.scaling.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t FormatCustomFont.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatCustomFont.size.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*FormatCustomFont.size.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCustomFont.scaling.setter(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)result;
  *(_WORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*FormatCustomFont.scaling.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BAA9E668(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;

  v3 = *v1;
  v4 = v1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = v5 | 0xB000000000000000;
  v7 = *(_QWORD **)(a1 + 48);
  v8 = v7[2];
  if (v8)
  {
    v9 = v7[v8 + 3];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAA736F8(v9);
    v11 = v10;
    swift_release();
    if ((v11 & 1) != 0)
      return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_1BB38ED0C(0, v7[2] + 1, 1, v7);
  v14 = v7[2];
  v13 = v7[3];
  if (v14 >= v13 >> 1)
    v7 = sub_1BB38ED0C((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
  v7[2] = v14 + 1;
  v7[v14 + 4] = v6;
  result = swift_release();
  *(_QWORD *)(a1 + 48) = v7;
  return result;
}

uint64_t sub_1BAA9E7A0(uint64_t a1)
{
  return sub_1BAA9E668(a1);
}

BOOL _s8NewsFeed16FormatCustomFontV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  __int16 v4;
  double v5;
  double v6;
  __int16 v7;
  char v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v3 = *(double *)(a1 + 16);
  v2 = *(double *)(a1 + 24);
  v4 = *(_WORD *)(a1 + 32);
  v6 = *(double *)(a2 + 16);
  v5 = *(double *)(a2 + 24);
  v7 = *(_WORD *)(a2 + 32);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v3 != v6)
      return 0;
    goto LABEL_9;
  }
  v9 = sub_1BB874398();
  result = 0;
  if ((v9 & 1) != 0 && v3 == v6)
  {
LABEL_9:
    if ((v4 & 0xFF00) == 0xC00)
      return (v7 & 0xFF00) == 0xC00;
    if ((v7 & 0xFF00) != 0xC00)
    {
      if ((v4 & 1) != 0)
      {
        if ((v7 & 1) == 0)
          return 0;
      }
      else if ((v7 & 1) != 0 || v2 != v5)
      {
        return 0;
      }
      v11 = FormatFontScalingStyle.rawValue.getter();
      v13 = v12;
      if (v11 == FormatFontScalingStyle.rawValue.getter() && v13 == v14)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      v15 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BAA9E90C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAA9E930();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAA9E930()
{
  unint64_t result;

  result = qword_1EF2AEEA0;
  if (!qword_1EF2AEEA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomFont, &type metadata for FormatCustomFont);
    atomic_store(result, (unint64_t *)&qword_1EF2AEEA0);
  }
  return result;
}

unint64_t sub_1BAA9E974(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA606D4C();
  a1[2] = sub_1BA5EB048();
  result = sub_1BAA9E9A8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAA9E9A8()
{
  unint64_t result;

  result = qword_1EF2AEEA8;
  if (!qword_1EF2AEEA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomFont, &type metadata for FormatCustomFont);
    atomic_store(result, (unint64_t *)&qword_1EF2AEEA8);
  }
  return result;
}

double sub_1BAA9E9EC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

double sub_1BAA9E9F8(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(a2 + 16) = *a1;
  return result;
}

uint64_t sub_1BAA9EA04@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 32);
  *(_QWORD *)a2 = *(_QWORD *)(result + 24);
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1BAA9EA18(uint64_t result, uint64_t a2)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)result;
  *(_WORD *)(a2 + 32) = v2;
  return result;
}

uint64_t initializeWithCopy for FormatCustomFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatCustomFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for FormatCustomFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FormatCustomFont()
{
  return &type metadata for FormatCustomFont;
}

uint64_t sub_1BAA9EB28()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedDaysOfWeek.values.getter()
{
  char *v0;

  return sub_1BA55111C((uint64_t)*(&off_1E728D590 + *v0));
}

uint64_t FeedDaysOfWeek.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA9EB90
                                                            + 4 * asc_1BB898DE0[*v0]))(0x7961646E7573, 0xE600000000000000);
}

uint64_t sub_1BAA9EB90()
{
  return 0x7961646E6F6DLL;
}

uint64_t sub_1BAA9EBA0()
{
  return 0x79616473657574;
}

uint64_t sub_1BAA9EBB8()
{
  return 0x616473656E646577;
}

uint64_t sub_1BAA9EBD4()
{
  return 0x7961647372756874;
}

uint64_t sub_1BAA9EBEC()
{
  return 0x796164697266;
}

uint64_t sub_1BAA9EBFC()
{
  return 0x7961647275746173;
}

uint64_t sub_1BAA9EC14()
{
  return 0x737961646B656577;
}

uint64_t sub_1BAA9EC2C()
{
  return 0x73646E656B656577;
}

void sub_1BAA9EC44(char *a1)
{
  sub_1BB8060A4(*a1);
}

uint64_t sub_1BAA9EC50()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA4B9048((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BAA9EC94(uint64_t a1)
{
  char *v1;

  sub_1BA4B9048(a1, *v1);
}

uint64_t sub_1BAA9EC9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FeedDaysOfWeek.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAA9ECC0()
{
  sub_1BA49B770();
  return sub_1BB872D0C();
}

NewsFeed::FeedTimeOfDay_optional __swiftcall FeedTimeOfDay.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedTimeOfDay_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedTimeOfDay.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAA9ED94 + 4 * byte_1BB898DE9[*v0]))(0x676E696E726F6DLL, 0xE700000000000000);
}

uint64_t sub_1BAA9ED94()
{
  return 0x6F6F6E7265746661;
}

uint64_t sub_1BAA9EDB0()
{
  return 0x676E696E657665;
}

uint64_t sub_1BAA9EDC4()
{
  return 0x746867696ELL;
}

void sub_1BAA9EDD8(char *a1)
{
  sub_1BB804644(*a1);
}

void sub_1BAA9EDE4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAA9EE30()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAA9EE9C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAA9EED8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAA9EF30()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAA9EF78()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedTimeOfDay_optional sub_1BAA9EFE4(Swift::String *a1)
{
  return FeedTimeOfDay.init(rawValue:)(*a1);
}

uint64_t sub_1BAA9EFF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAA9F020 + 4 * byte_1BB898DF9[*v0]))();
}

void sub_1BAA9F020(_QWORD *a1@<X8>)
{
  *a1 = 0x6F6F6E7265746661;
  a1[1] = 0xE90000000000006ELL;
}

void sub_1BAA9F040(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E696E657665;
  a1[1] = v1;
}

void sub_1BAA9F058(_QWORD *a1@<X8>)
{
  *a1 = 0x746867696ELL;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BAA9F070()
{
  sub_1BAAA7BF4();
  return sub_1BB872D60();
}

uint64_t sub_1BAA9F0CC()
{
  sub_1BAAA7BF4();
  return sub_1BB872D0C();
}

uint64_t FeedGroupKnobsRules.emitterRules(cursor:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v7 = sub_1BB872EE0();
  sub_1BB874218();
  swift_allocObject();
  v8 = sub_1BB872E2C();
  v10 = v9;
  *v9 = sub_1BAA9FA78(a1, a2, a3, v11);
  v10[1] = sub_1BAA9FDC8(a1, a2, a3, v12);
  v10[2] = sub_1BAAA0118(a1, a2, a3, v13);
  v10[3] = sub_1BAAA0468(a1, a2, a3, v14);
  v10[4] = sub_1BAAA05B8(a1, a3, v15, v16);
  v10[5] = sub_1BAAA0774(a1, a3, v17, v18);
  v10[6] = sub_1BAAA0930(a1, a3, v19, v20);
  v10[7] = sub_1BAAA0AEC(a1, a3, v21, v22);
  v10[8] = sub_1BAAA0CA8(a1, a3, v23, v24);
  v10[9] = sub_1BAAA0E64(a1, a3, v25, v26);
  v10[10] = sub_1BAAA1020(a1, a2, a3, v27);
  v10[11] = sub_1BAAA1370(a1, a2, a3, v28);
  v10[12] = sub_1BAAA16C0(a1, a3, v29, v30);
  v10[13] = sub_1BAAA187C(a1, a3, v31, v32);
  v10[14] = sub_1BAAA1A38(a1, a3, v33, v34);
  v10[15] = sub_1BAAA1BF4(a1, a3, v35, v36);
  v10[16] = sub_1BAAA1DB0(a1, a3, (uint64_t (*)(uint64_t *))sub_1BAAA2F6C);
  v10[17] = sub_1BAAA1DB0(a1, a3, (uint64_t (*)(uint64_t *))sub_1BAAA31D0);
  v10[18] = sub_1BAAA1E70(a1, a3, v37, v38);
  v10[19] = sub_1BAAA20EC(a1, a3, v39, v40);
  v10[20] = sub_1BAAA2368(a1, a3, v41, v42);
  v10[21] = sub_1BAAA2460(a1, a3, v43, v44);
  v10[22] = sub_1BAAA2558(a1, a3, v45, v46);
  v10[23] = sub_1BAAA2650(a1, a3, v47, v48);
  sub_1BA69C794(v8);
  v49 = sub_1BB872EE0();
  v50 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v49);
  MEMORY[0x1BCCE5B24](v50, v7);
  v51 = sub_1BB872C64();
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1BAA9FA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v5 = *(_QWORD *)(v4 + 32);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v7 = *(void **)v6;
  v8 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 32);
  v9 = *(_QWORD *)(v6 + 40);
  v11 = *(void **)(v6 + 56);
  v12 = *(_QWORD *)(v5 + 24);
  v27 = *(void **)v6;
  v26 = a3;
  if (v12 >> 62)
  {
    v17 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v5 + 16);
    if (v19)
      goto LABEL_4;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_QWORD *)(v5 + 16);
    if (v13)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA8711CC(v16, v12, v8);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_7:
  sub_1BA6DB13C(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  a3 = v26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v20 = sub_1BB872E2C();
    v22 = v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v24 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v22, a2, AssociatedTypeWitness);
    *(_QWORD *)(v22 + v24) = v16;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v20);
  }
LABEL_9:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAA9FDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v5 = *(_QWORD *)(v4 + 40);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v7 = *(void **)v6;
  v8 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 32);
  v9 = *(_QWORD *)(v6 + 40);
  v11 = *(void **)(v6 + 56);
  v12 = *(_QWORD *)(v5 + 24);
  v27 = *(void **)v6;
  v26 = a3;
  if (v12 >> 62)
  {
    v17 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v5 + 16);
    if (v19)
      goto LABEL_4;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_QWORD *)(v5 + 16);
    if (v13)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA8711CC(v16, v12, v8);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_7:
  sub_1BA6DB13C(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  a3 = v26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v20 = sub_1BB872E2C();
    v22 = v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v24 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v22, a2, AssociatedTypeWitness);
    *(_QWORD *)(v22 + v24) = v16;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v20);
  }
LABEL_9:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v5 = *(_QWORD *)(v4 + 48);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v7 = *(void **)v6;
  v8 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 32);
  v9 = *(_QWORD *)(v6 + 40);
  v11 = *(void **)(v6 + 56);
  v12 = *(_QWORD *)(v5 + 24);
  v27 = *(void **)v6;
  v26 = a3;
  if (v12 >> 62)
  {
    v17 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v5 + 16);
    if (v19)
      goto LABEL_4;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_QWORD *)(v5 + 16);
    if (v13)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA8711CC(v16, v12, v8);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_7:
  sub_1BA6DB13C(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  a3 = v26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v20 = sub_1BB872E2C();
    v22 = v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v24 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v22, a2, AssociatedTypeWitness);
    *(_QWORD *)(v22 + v24) = v16;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v20);
  }
LABEL_9:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[5];

  if (*(_QWORD *)(v4 + 56))
  {
    v6 = (_OWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
    v7 = v6[3];
    v15[2] = v6[2];
    v15[3] = v7;
    v15[4] = v6[4];
    v8 = v6[1];
    v15[0] = *v6;
    v15[1] = v8;
    sub_1BA653910((uint64_t)v15);
    sub_1BAAA2BC4((uint64_t)v15);
    v9 = sub_1BA4CBDD0((uint64_t)v15);
    MEMORY[0x1E0C80A78](v9);
    v13 = *(_QWORD *)(a3 + 16);
    v14 = *(_QWORD *)(a3 + 24);
    sub_1BAAA7C54();
    type metadata accessor for FeedGroupEmitterRule(0, v13, v14, v10);
    sub_1BA4A2870(&qword_1EF2AEEC0, (uint64_t (*)(uint64_t))sub_1BAAA7C54, MEMORY[0x1E0DEAF38]);
    v11 = sub_1BB872BF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
    return sub_1BB872E68();
  }
  return v11;
}

uint64_t sub_1BAAA05B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 64))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 72))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 80))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 88))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 96))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA0E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 104))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA1020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v5 = *(_QWORD *)(v4 + 120);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v7 = *(void **)v6;
  v8 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 32);
  v9 = *(_QWORD *)(v6 + 40);
  v11 = *(void **)(v6 + 56);
  v12 = *(_QWORD *)(v5 + 24);
  v27 = *(void **)v6;
  v26 = a3;
  if (v12 >> 62)
  {
    v17 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v5 + 16);
    if (v19)
      goto LABEL_4;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_QWORD *)(v5 + 16);
    if (v13)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA8711CC(v16, v12, v8);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_7:
  sub_1BA6DB13C(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  a3 = v26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v20 = sub_1BB872E2C();
    v22 = v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v24 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v22, a2, AssociatedTypeWitness);
    *(_QWORD *)(v22 + v24) = v16;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v20);
  }
LABEL_9:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA1370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v5 = *(_QWORD *)(v4 + 112);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v7 = *(void **)v6;
  v8 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 32);
  v9 = *(_QWORD *)(v6 + 40);
  v11 = *(void **)(v6 + 56);
  v12 = *(_QWORD *)(v5 + 24);
  v27 = *(void **)v6;
  v26 = a3;
  if (v12 >> 62)
  {
    v17 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v5 + 16);
    if (v19)
      goto LABEL_4;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v9);
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_QWORD *)(v5 + 16);
    if (v13)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA8711CC(v16, v12, v8);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_7:
  sub_1BA6DB13C(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  a3 = v26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v20 = sub_1BB872E2C();
    v22 = v21;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v24 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v22, a2, AssociatedTypeWitness);
    *(_QWORD *)(v22 + v24) = v16;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v20);
  }
LABEL_9:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA16C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 128))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 136))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA1A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 144))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA1BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  if (*(_QWORD *)(v4 + 152))
  {
    v5 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
    v6 = *(_QWORD *)(v5 + 32);
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(void **)(v5 + 56);
    v9 = *(id *)v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FeedGroupKnobsRuleSet.value(for:)();
  }
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA1DB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t *v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v4 = v3[13];
  v42 = v3[12];
  v43 = v4;
  v44 = v3[14];
  v5 = v3[9];
  v38 = v3[8];
  v39 = v5;
  v6 = v3[11];
  v40 = v3[10];
  v41 = v6;
  v7 = v3[5];
  v34 = v3[4];
  v35 = v7;
  v8 = v3[7];
  v36 = v3[6];
  v37 = v8;
  v9 = v3[1];
  v30 = *v3;
  v31 = v9;
  v10 = v3[3];
  v32 = v3[2];
  v33 = v10;
  v11 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
  v12 = *((_BYTE *)v11 + 8);
  v13 = *((_BYTE *)v11 + 9);
  v14 = *((_BYTE *)v11 + 10);
  v15 = *((_BYTE *)v11 + 11);
  v16 = *((_BYTE *)v11 + 48);
  v17 = v11[7];
  v20 = *v11;
  v21 = v12;
  v22 = v13;
  v23 = v14;
  v24 = v15;
  v18 = *((_OWORD *)v11 + 2);
  v25 = *((_OWORD *)v11 + 1);
  v26 = v18;
  v27 = v16;
  v28 = v17;
  v29 = *((_OWORD *)v11 + 4);
  return a3(&v20);
}

uint64_t sub_1BAAA1E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  int v17;
  char v18;
  uint64_t v19;
  id v21;
  id v22;
  uint64_t v23;
  void *v25;

  v5 = a2;
  v6 = *(_QWORD *)(v4 + 208);
  if (!v6)
    goto LABEL_8;
  v7 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v8 = *(void **)v7;
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(void **)(v7 + 56);
  v13 = *(_QWORD *)(v6 + 24);
  v25 = *(void **)v7;
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v11);
    v16 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = *(unsigned __int8 *)(v6 + 16);
    if (v14)
      goto LABEL_4;
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1BA6DB13C(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v5 = a2;
    if (v17)
      goto LABEL_5;
    goto LABEL_8;
  }
  v21 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v10, v11);
  v22 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v17 = *(unsigned __int8 *)(v6 + 16);
  if (!v23)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1BAAA6948(v17, v13, v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_1BA6DB13C(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v5 = a2;
  if ((v18 & 1) != 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v19 = sub_1BB872E2C();
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v19);
  }
LABEL_8:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA20EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  int v17;
  char v18;
  uint64_t v19;
  id v21;
  id v22;
  uint64_t v23;
  void *v25;

  v5 = a2;
  v6 = *(_QWORD *)(v4 + 216);
  if (!v6)
    goto LABEL_8;
  v7 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 184);
  v8 = *(void **)v7;
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(void **)(v7 + 56);
  v13 = *(_QWORD *)(v6 + 24);
  v25 = *(void **)v7;
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v10, v11);
    v16 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = *(unsigned __int8 *)(v6 + 16);
    if (v14)
      goto LABEL_4;
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1BA6DB13C(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v5 = a2;
    if (v17)
      goto LABEL_5;
    goto LABEL_8;
  }
  v21 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v10, v11);
  v22 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v17 = *(unsigned __int8 *)(v6 + 16);
  if (!v23)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1BAAA6948(v17, v13, v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_1BA6DB13C(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v5 = a2;
  if ((v18 & 1) != 0)
  {
LABEL_5:
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
    sub_1BB874218();
    swift_allocObject();
    v19 = sub_1BB872E2C();
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v19);
  }
LABEL_8:
  type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
  return sub_1BB872E68();
}

uint64_t sub_1BAAA2368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD v14[5];

  if (*(_QWORD *)(v4 + 224))
  {
    v6 = (_OWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
    v7 = v6[3];
    v14[2] = v6[2];
    v14[3] = v7;
    v14[4] = v6[4];
    v8 = v6[1];
    v14[0] = *v6;
    v14[1] = v8;
    sub_1BA653910((uint64_t)v14);
    v9 = sub_1BAAA2BC4((uint64_t)v14);
    sub_1BA4CBDD0((uint64_t)v14);
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v10);
    sub_1BB874218();
    swift_allocObject();
    v11 = sub_1BB872E2C();
    *v12 = v9;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v11);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    return sub_1BB872E68();
  }
}

uint64_t sub_1BAAA2460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD v14[5];

  if (*(_QWORD *)(v4 + 232))
  {
    v6 = (_OWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
    v7 = v6[3];
    v14[2] = v6[2];
    v14[3] = v7;
    v14[4] = v6[4];
    v8 = v6[1];
    v14[0] = *v6;
    v14[1] = v8;
    sub_1BA653910((uint64_t)v14);
    v9 = sub_1BAAA2BC4((uint64_t)v14);
    sub_1BA4CBDD0((uint64_t)v14);
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v10);
    sub_1BB874218();
    swift_allocObject();
    v11 = sub_1BB872E2C();
    *v12 = v9;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v11);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    return sub_1BB872E68();
  }
}

uint64_t sub_1BAAA2558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD v14[5];

  if (*(_QWORD *)(v4 + 192))
  {
    v6 = (_OWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
    v7 = v6[3];
    v14[2] = v6[2];
    v14[3] = v7;
    v14[4] = v6[4];
    v8 = v6[1];
    v14[0] = *v6;
    v14[1] = v8;
    sub_1BA653910((uint64_t)v14);
    v9 = sub_1BAAA2BC4((uint64_t)v14);
    sub_1BA4CBDD0((uint64_t)v14);
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v10);
    sub_1BB874218();
    swift_allocObject();
    v11 = sub_1BB872E2C();
    *v12 = v9;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v11);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    return sub_1BB872E68();
  }
}

uint64_t sub_1BAAA2650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD v14[5];

  if (*(_QWORD *)(v4 + 200))
  {
    v6 = (_OWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
    v7 = v6[3];
    v14[2] = v6[2];
    v14[3] = v7;
    v14[4] = v6[4];
    v8 = v6[1];
    v14[0] = *v6;
    v14[1] = v8;
    sub_1BA653910((uint64_t)v14);
    v9 = sub_1BAAA2BC4((uint64_t)v14);
    sub_1BA4CBDD0((uint64_t)v14);
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v10);
    sub_1BB874218();
    swift_allocObject();
    v11 = sub_1BB872E2C();
    *v12 = v9;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v11);
  }
  else
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    return sub_1BB872E68();
  }
}

uint64_t FeedGroupKnobsRules.emitterRankMultiplier(cursor:)(uint64_t a1, uint64_t a2)
{
  return sub_1BAAA291C(a1, a2, (uint64_t (*)(uint64_t *))FeedGroupKnobsRules.emitterRankMultiplier(context:));
}

uint64_t FeedGroupKnobsRules.emitterRankMultiplier(context:)(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *v1;
  if (*v1)
  {
    v3 = *(_QWORD *)(result + 16);
    v4 = *(_QWORD *)(v2 + 24);
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      if (!v5)
        return result;
    }
    else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAAA7084(v4, v3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedGroupKnobsRules.emitterBaseScore(cursor:)(uint64_t a1, uint64_t a2)
{
  return sub_1BAAA291C(a1, a2, (uint64_t (*)(uint64_t *))FeedGroupKnobsRules.emitterBaseScore(context:));
}

uint64_t FeedGroupKnobsRules.emitterBaseScore(context:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(result + 16);
    v4 = *(_QWORD *)(v2 + 24);
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      if (!v5)
        return result;
    }
    else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAAA7084(v4, v3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedGroupKnobsRules.emitterScoreThreshold(cursor:)(uint64_t a1, uint64_t a2)
{
  return sub_1BAAA291C(a1, a2, (uint64_t (*)(uint64_t *))FeedGroupKnobsRules.emitterScoreThreshold(context:));
}

uint64_t sub_1BAAA291C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t *v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;

  v3 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
  v4 = *((_BYTE *)v3 + 8);
  v5 = *((_BYTE *)v3 + 9);
  v6 = *((_BYTE *)v3 + 10);
  v7 = *((_BYTE *)v3 + 11);
  v8 = *((_BYTE *)v3 + 48);
  v9 = v3[7];
  v12 = *v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v10 = *((_OWORD *)v3 + 2);
  v17 = *((_OWORD *)v3 + 1);
  v18 = v10;
  v19 = v8;
  v20 = v9;
  v21 = *((_OWORD *)v3 + 4);
  return a3(&v12);
}

uint64_t FeedGroupKnobsRules.emitterScoreThreshold(context:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(result + 16);
    v4 = *(_QWORD *)(v2 + 24);
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      if (!v5)
        return result;
    }
    else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAAA7084(v4, v3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedGroupKnobsRules.emitterSelectors(cursor:)(uint64_t a1)
{
  uint64_t *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  __int128 v19;

  v1 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
  v2 = *((_BYTE *)v1 + 8);
  v3 = *((_BYTE *)v1 + 9);
  v4 = *((_BYTE *)v1 + 10);
  v5 = *((_BYTE *)v1 + 11);
  v6 = *((_BYTE *)v1 + 48);
  v7 = v1[7];
  v10 = *v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v8 = *((_OWORD *)v1 + 2);
  v15 = *((_OWORD *)v1 + 1);
  v16 = v8;
  v17 = v6;
  v18 = v7;
  v19 = *((_OWORD *)v1 + 4);
  return FeedGroupKnobsRules.emitterSelectors(context:)((uint64_t)&v10);
}

uint64_t FeedGroupKnobsRules.emitterSelectors(context:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 24);
  if (!v2)
    return MEMORY[0x1E0DEE9E8];
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v2 + 16);
    if (v8)
      goto LABEL_4;
LABEL_7:
    swift_bridgeObjectRetain();
    return v5;
  }
  v5 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BAAA6CD4(v6, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BAAA2BC4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 24);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
LABEL_5:
    v6 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v6;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1BAAA6CD4(v5, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t FeedGroupKnobsRules.daysOfWeekRules(context:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v5 = *a1;
  v37 = *a1;
  v6 = *((_BYTE *)a1 + 8);
  v7 = *((_BYTE *)a1 + 9);
  v8 = *((_BYTE *)a1 + 10);
  v9 = *((_BYTE *)a1 + 11);
  v10 = a1[2];
  v11 = a1[3];
  v12 = a1[4];
  v13 = a1[5];
  v42 = *((_BYTE *)a1 + 48);
  v40 = a1[8];
  v41 = a1[7];
  v39 = a1[9];
  v14 = v4[13];
  v82 = v4[12];
  v83 = v14;
  v84 = v4[14];
  v15 = v4[9];
  v78 = v4[8];
  v79 = v15;
  v16 = v4[11];
  v80 = v4[10];
  v81 = v16;
  v17 = v4[5];
  v74 = v4[4];
  v75 = v17;
  v18 = v4[7];
  v76 = v4[6];
  v77 = v18;
  v19 = v4[1];
  v70 = *v4;
  v71 = v19;
  v20 = v4[3];
  v72 = v4[2];
  v73 = v20;
  type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v43 = sub_1BB872EE0();
  sub_1BB874218();
  swift_allocObject();
  v38 = sub_1BB872E2C();
  v44 = v21;
  v22 = v4[13];
  v67 = v4[12];
  v68 = v22;
  v69 = v4[14];
  v23 = v4[9];
  v63 = v4[8];
  v64 = v23;
  v24 = v4[11];
  v65 = v4[10];
  v66 = v24;
  v25 = v4[5];
  v59 = v4[4];
  v60 = v25;
  v26 = v4[7];
  v61 = v4[6];
  v62 = v26;
  v27 = v4[1];
  v55 = *v4;
  v56 = v27;
  v28 = v4[3];
  v57 = v4[2];
  v58 = v28;
  *(_QWORD *)&v46 = v5;
  BYTE8(v46) = v6;
  BYTE9(v46) = v7;
  BYTE10(v46) = v8;
  BYTE11(v46) = v9;
  v47 = v10;
  v48 = v11;
  v49 = v12;
  v50 = v13;
  v51 = v42;
  v52 = v41;
  v53 = v40;
  v54 = v39;
  *v21 = sub_1BAAA2F6C(&v46, a2, v29, v30);
  v67 = v82;
  v68 = v83;
  v69 = v84;
  v63 = v78;
  v64 = v79;
  v65 = v80;
  v66 = v81;
  v59 = v74;
  v60 = v75;
  v61 = v76;
  v62 = v77;
  v55 = v70;
  v56 = v71;
  v57 = v72;
  v58 = v73;
  *(_QWORD *)&v46 = v37;
  BYTE8(v46) = v6;
  BYTE9(v46) = v7;
  BYTE10(v46) = v8;
  BYTE11(v46) = v9;
  v47 = v10;
  v48 = v11;
  v49 = v12;
  v50 = v13;
  v51 = v42;
  v52 = v41;
  v53 = v40;
  v54 = v39;
  v44[1] = sub_1BAAA31D0(&v46, a2, v31, v32);
  *(_QWORD *)&v55 = sub_1BA69C794(v38);
  v33 = sub_1BB872EE0();
  v34 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v33);
  MEMORY[0x1BCCE5B24](v34, v43);
  v35 = sub_1BB872C64();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1BAAA2F6C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _OWORD v25[5];

  v6 = a1[3];
  v25[2] = a1[2];
  v25[3] = v6;
  v25[4] = a1[4];
  v7 = a1[1];
  v25[0] = *a1;
  v25[1] = v7;
  if (!*(_QWORD *)(v4 + 160))
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    return sub_1BB872E68();
  }
  v8 = sub_1BAAA2BC4((uint64_t)v25);
  v24 = MEMORY[0x1E0DEE9D8];
  v9 = v8 + 56;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v12 &= v12 - 1;
      goto LABEL_6;
    }
    v17 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v15;
    if (!v18)
    {
      v15 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v9 + 8 * v15);
      if (!v18)
      {
        v15 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_26;
        v18 = *(_QWORD *)(v9 + 8 * v15);
        if (!v18)
        {
          v15 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_26;
          v18 = *(_QWORD *)(v9 + 8 * v15);
          if (!v18)
          {
            v15 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_26;
            v18 = *(_QWORD *)(v9 + 8 * v15);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
LABEL_6:
    v16 = FeedDaysOfWeek.values.getter();
    result = sub_1BB384AA0(v16);
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    v20 = sub_1BAC86C9C(v24);
    swift_bridgeObjectRelease();
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v21);
    sub_1BB874218();
    swift_allocObject();
    v22 = sub_1BB872E2C();
    *v23 = v20;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v22);
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v15 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v15 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v9 + 8 * v15);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BAAA31D0(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _OWORD v25[5];

  v6 = a1[3];
  v25[2] = a1[2];
  v25[3] = v6;
  v25[4] = a1[4];
  v7 = a1[1];
  v25[0] = *a1;
  v25[1] = v7;
  if (!*(_QWORD *)(v4 + 168))
  {
    type metadata accessor for FeedGroupEmitterRule(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    return sub_1BB872E68();
  }
  v8 = sub_1BAAA2BC4((uint64_t)v25);
  v24 = MEMORY[0x1E0DEE9D8];
  v9 = v8 + 56;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v12 &= v12 - 1;
      goto LABEL_6;
    }
    v17 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v15;
    if (!v18)
    {
      v15 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v9 + 8 * v15);
      if (!v18)
      {
        v15 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_26;
        v18 = *(_QWORD *)(v9 + 8 * v15);
        if (!v18)
        {
          v15 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_26;
          v18 = *(_QWORD *)(v9 + 8 * v15);
          if (!v18)
          {
            v15 = v17 + 4;
            if (v17 + 4 >= v13)
              goto LABEL_26;
            v18 = *(_QWORD *)(v9 + 8 * v15);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
LABEL_6:
    v16 = FeedDaysOfWeek.values.getter();
    result = sub_1BB384AA0(v16);
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    v20 = sub_1BAC86C9C(v24);
    swift_bridgeObjectRelease();
    type metadata accessor for FeedGroupEmitterRule(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v21);
    sub_1BB874218();
    swift_allocObject();
    v22 = sub_1BB872E2C();
    *v23 = v20;
    swift_storeEnumTagMultiPayload();
    return sub_1BA69C794(v22);
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v15 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v15 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v9 + 8 * v15);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

BOOL static FeedGroupKnobsRules.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v2 = *a1;
  v3 = a1[1];
  v125 = a1[2];
  v122 = a1[3];
  v120 = a1[4];
  v118 = a1[5];
  v115 = a1[6];
  v113 = a1[7];
  v111 = a1[8];
  v107 = a1[10];
  v108 = a1[9];
  v104 = a1[11];
  v93 = a1[13];
  v95 = a1[14];
  v97 = a1[15];
  v4 = a1[17];
  v99 = a1[16];
  v5 = a1[27];
  v101 = a1[26];
  v102 = a1[12];
  v6 = a1[28];
  v114 = a1[29];
  v7 = *a2;
  v127 = a2[1];
  v123 = a2[2];
  v121 = a2[3];
  v119 = a2[4];
  v116 = a2[6];
  v117 = a2[5];
  v112 = a2[7];
  v109 = a2[9];
  v110 = a2[8];
  v105 = a2[11];
  v106 = a2[10];
  v103 = a2[12];
  v92 = a2[13];
  v94 = a2[14];
  v96 = a2[15];
  v98 = a2[16];
  v8 = a2[18];
  v100 = a2[17];
  v10 = a2[27];
  v9 = a2[28];
  v11 = a2[29];
  if (*a1)
  {
    if (!v7)
      return 0;
    if (*(double *)(v2 + 16) != *(double *)(v7 + 16))
      return 0;
    v76 = a1[18];
    v77 = a2[19];
    v78 = a1[19];
    v79 = a2[20];
    v80 = a1[20];
    v81 = a2[21];
    v82 = a1[21];
    v83 = a2[22];
    v84 = a1[22];
    v85 = a2[23];
    v86 = a1[23];
    v87 = a2[24];
    v88 = a1[24];
    v89 = a2[25];
    v90 = a1[25];
    v91 = a2[26];
    v12 = *(_QWORD *)(v2 + 24);
    v74 = a2[27];
    v13 = a1[27];
    v14 = a2[28];
    v15 = a1[28];
    v16 = a2[29];
    v17 = *(_QWORD *)(v7 + 24);
    swift_retain();
    swift_retain();
    v18 = v17;
    v11 = v16;
    v6 = v15;
    v9 = v14;
    v5 = v13;
    v10 = v74;
    LOBYTE(v12) = sub_1BA894130(v12, v18);
    swift_release();
    swift_release();
    if ((v12 & 1) == 0)
      return 0;
  }
  else
  {
    v76 = a1[18];
    v77 = a2[19];
    v78 = a1[19];
    v79 = a2[20];
    v80 = a1[20];
    v81 = a2[21];
    v82 = a1[21];
    v83 = a2[22];
    v84 = a1[22];
    v85 = a2[23];
    v86 = a1[23];
    v87 = a2[24];
    v88 = a1[24];
    v89 = a2[25];
    v90 = a1[25];
    v91 = a2[26];
    if (v7)
      return 0;
  }
  if (v3)
  {
    if (!v127)
      return 0;
    if (*(double *)(v3 + 16) != *(double *)(v127 + 16))
      return 0;
    v19 = *(_QWORD *)(v3 + 24);
    v20 = *(_QWORD *)(v127 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v19) = sub_1BA894130(v19, v20);
    swift_release();
    swift_release();
    if ((v19 & 1) == 0)
      return 0;
  }
  else if (v127)
  {
    return 0;
  }
  if (v125)
  {
    if (!v123)
      return 0;
    if (*(double *)(v125 + 16) != *(double *)(v123 + 16))
      return 0;
    v75 = v10;
    v21 = *(_QWORD *)(v125 + 24);
    v22 = v4;
    v23 = *(_QWORD *)(v123 + 24);
    swift_retain();
    swift_retain();
    v24 = v23;
    v4 = v22;
    LOBYTE(v21) = sub_1BA894130(v21, v24);
    swift_release();
    swift_release();
    if ((v21 & 1) == 0)
      return 0;
  }
  else
  {
    v75 = v10;
    if (v123)
      return 0;
  }
  if (v122)
  {
    if (!v121)
      return 0;
    v25 = v5;
    v128 = v9;
    v26 = *(_QWORD *)(v122 + 16);
    v27 = *(_QWORD *)(v121 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA6EB330(v26, v27) & 1) == 0)
      goto LABEL_30;
    v28 = sub_1BA894E00(*(_QWORD *)(v122 + 24), *(_QWORD *)(v121 + 24));
    swift_release();
    swift_release();
    v5 = v25;
    if ((v28 & 1) == 0)
      return 0;
  }
  else
  {
    v128 = v9;
    if (v121)
      return 0;
  }
  if (v120)
  {
    if (!v119)
      return 0;
    if (*(_QWORD *)(v120 + 16) != *(_QWORD *)(v119 + 16))
      return 0;
    v126 = v6;
    v29 = *(_QWORD *)(v120 + 24);
    v30 = *(_QWORD *)(v119 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v29) = sub_1BA893E60(v29, v30);
    swift_release();
    swift_release();
    if ((v29 & 1) == 0)
      return 0;
  }
  else
  {
    v126 = v6;
    if (v119)
      return 0;
  }
  if (v118)
  {
    if (!v117)
      return 0;
    if (*(_QWORD *)(v118 + 16) != *(_QWORD *)(v117 + 16))
      return 0;
    v32 = *(_QWORD *)(v118 + 24);
    v33 = *(_QWORD *)(v117 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v32) = sub_1BA893E60(v32, v33);
    swift_release();
    swift_release();
    if ((v32 & 1) == 0)
      return 0;
  }
  else if (v117)
  {
    return 0;
  }
  if (v115)
  {
    if (!v116)
      return 0;
    v72 = v8;
    v73 = v4;
    v124 = v5;
    v34 = v11;
    v35 = v114;
    if (*(_QWORD *)(v115 + 16) != *(_QWORD *)(v116 + 16))
      return 0;
    v36 = *(_QWORD *)(v115 + 24);
    v37 = *(_QWORD *)(v116 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v36) = sub_1BA893E60(v36, v37);
    swift_release();
    swift_release();
    if ((v36 & 1) == 0)
      return 0;
  }
  else
  {
    v72 = v8;
    v73 = v4;
    v124 = v5;
    v34 = v11;
    v35 = v114;
    if (v116)
      return 0;
  }
  if (v113)
  {
    if (!v112)
      return 0;
    if ((sub_1BA894A40(*(_QWORD *)(v113 + 16), *(_QWORD *)(v112 + 16)) & 1) == 0)
      return 0;
    v38 = *(_QWORD *)(v113 + 24);
    v39 = *(_QWORD *)(v112 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v38) = sub_1BA894AC8(v38, v39);
    swift_release();
    swift_release();
    if ((v38 & 1) == 0)
      return 0;
  }
  else if (v112)
  {
    return 0;
  }
  if (v111)
  {
    if (v110)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v110)
    return 0;
  if (v108)
  {
    if (v109)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v109)
    return 0;
  if (v107)
  {
    if (v106)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v106)
    return 0;
  if (v104)
  {
    if (v105)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v105)
    return 0;
  if (v102)
  {
    if (v103)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v103)
    return 0;
  if (v93)
  {
    if (v92)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v92)
    return 0;
  if (v95)
  {
    if (!v94)
      return 0;
    if (*(_QWORD *)(v95 + 16) != *(_QWORD *)(v94 + 16))
      return 0;
    v40 = *(_QWORD *)(v95 + 24);
    v41 = *(_QWORD *)(v94 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v40) = sub_1BA893E60(v40, v41);
    swift_release();
    swift_release();
    if ((v40 & 1) == 0)
      return 0;
  }
  else if (v94)
  {
    return 0;
  }
  if (v97)
  {
    if (!v96)
      return 0;
    if (*(_QWORD *)(v97 + 16) != *(_QWORD *)(v96 + 16))
      return 0;
    v42 = *(_QWORD *)(v97 + 24);
    v43 = *(_QWORD *)(v96 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v42) = sub_1BA893E60(v42, v43);
    swift_release();
    swift_release();
    if ((v42 & 1) == 0)
      return 0;
  }
  else if (v96)
  {
    return 0;
  }
  if (v99)
  {
    if (v98)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v98)
    return 0;
  if (v73)
  {
    if (v100)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v100)
    return 0;
  if (v76)
  {
    if (v72)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v72)
    return 0;
  if (v78)
  {
    if (v77)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for FeedGroupKnobsRuleSet();
    }
    return 0;
  }
  if (v77)
    return 0;
  if (v80)
  {
    if (!v79)
      return 0;
    v44 = *(_QWORD *)(v80 + 16);
    v45 = *(_QWORD *)(v79 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA85BDE8(v44, v45) & 1) == 0)
      goto LABEL_30;
    v46 = sub_1BA894A34(*(_QWORD *)(v80 + 24), *(_QWORD *)(v79 + 24));
    swift_release();
    swift_release();
    if ((v46 & 1) == 0)
      return 0;
  }
  else if (v79)
  {
    return 0;
  }
  if (v82)
  {
    if (!v81)
      return 0;
    v47 = *(_QWORD *)(v82 + 16);
    v48 = *(_QWORD *)(v81 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA85BDE8(v47, v48) & 1) == 0)
      goto LABEL_30;
    v49 = sub_1BA894A34(*(_QWORD *)(v82 + 24), *(_QWORD *)(v81 + 24));
    swift_release();
    swift_release();
    if ((v49 & 1) == 0)
      return 0;
  }
  else if (v81)
  {
    return 0;
  }
  if (v84)
  {
    if (!v83)
      return 0;
    v50 = *(_QWORD *)(v84 + 16);
    v51 = *(_QWORD *)(v83 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA85B9E8(v50, v51) & 1) == 0)
      goto LABEL_30;
    v52 = sub_1BA894A28(*(_QWORD *)(v84 + 24), *(_QWORD *)(v83 + 24));
    swift_release();
    swift_release();
    if ((v52 & 1) == 0)
      return 0;
  }
  else if (v83)
  {
    return 0;
  }
  if (v86)
  {
    if (!v85)
      return 0;
    v53 = *(_QWORD *)(v86 + 16);
    v54 = *(_QWORD *)(v85 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA85B9E8(v53, v54) & 1) == 0)
      goto LABEL_30;
    v55 = sub_1BA894A28(*(_QWORD *)(v86 + 24), *(_QWORD *)(v85 + 24));
    swift_release();
    swift_release();
    if ((v55 & 1) == 0)
      return 0;
  }
  else if (v85)
  {
    return 0;
  }
  if (v88)
  {
    if (!v87)
      return 0;
    v56 = *(_QWORD *)(v88 + 16);
    v57 = *(_QWORD *)(v87 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA85B740(v56, v57) & 1) == 0)
      goto LABEL_30;
    v58 = sub_1BA894A1C(*(_QWORD *)(v88 + 24), *(_QWORD *)(v87 + 24));
    swift_release();
    swift_release();
    if ((v58 & 1) == 0)
      return 0;
  }
  else if (v87)
  {
    return 0;
  }
  if (v90)
  {
    if (!v89)
      return 0;
    v59 = *(_QWORD *)(v90 + 16);
    v60 = *(_QWORD *)(v89 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA85B740(v59, v60) & 1) == 0)
      goto LABEL_30;
    v61 = sub_1BA894A1C(*(_QWORD *)(v90 + 24), *(_QWORD *)(v89 + 24));
    swift_release();
    swift_release();
    if ((v61 & 1) == 0)
      return 0;
  }
  else if (v89)
  {
    return 0;
  }
  if (v101)
  {
    if (!v91)
      return 0;
    if (*(unsigned __int8 *)(v101 + 16) != *(unsigned __int8 *)(v91 + 16))
      return 0;
    v62 = *(_QWORD *)(v101 + 24);
    v63 = *(_QWORD *)(v91 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v62) = sub_1BA894740(v62, v63);
    swift_release();
    swift_release();
    if ((v62 & 1) == 0)
      return 0;
  }
  else if (v91)
  {
    return 0;
  }
  if (v124)
  {
    if (!v75)
      return 0;
    if (*(unsigned __int8 *)(v124 + 16) != *(unsigned __int8 *)(v75 + 16))
      return 0;
    v64 = *(_QWORD *)(v124 + 24);
    v65 = *(_QWORD *)(v75 + 24);
    swift_retain();
    swift_retain();
    LOBYTE(v64) = sub_1BA894740(v64, v65);
    swift_release();
    swift_release();
    if ((v64 & 1) == 0)
      return 0;
  }
  else if (v75)
  {
    return 0;
  }
  if (v126)
  {
    if (!v128)
      return 0;
    v66 = *(_QWORD *)(v126 + 16);
    v67 = *(_QWORD *)(v128 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA6C1868(v66, v67) & 1) == 0)
      goto LABEL_30;
    v68 = sub_1BA894A10(*(_QWORD *)(v126 + 24), *(_QWORD *)(v128 + 24));
    swift_release();
    swift_release();
    if ((v68 & 1) == 0)
      return 0;
  }
  else if (v128)
  {
    return 0;
  }
  if (v35)
  {
    if (!v34)
      return 0;
    v69 = *(_QWORD *)(v35 + 16);
    v70 = *(_QWORD *)(v34 + 16);
    swift_retain();
    swift_retain();
    if ((sub_1BA6C1868(v69, v70) & 1) != 0)
    {
      v71 = sub_1BA894A10(*(_QWORD *)(v35 + 24), *(_QWORD *)(v34 + 24));
      swift_release();
      swift_release();
      return (v71 & 1) != 0;
    }
LABEL_30:
    swift_release();
    swift_release();
    return 0;
  }
  return !v34;
}

uint64_t sub_1BAAA4E70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746C754D6B6E6172 && a2 == 0xEE007265696C7069;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F635365736162 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72685465726F6373 && a2 == 0xEE00646C6F687365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x727563634F78616DLL && a2 == 0xED000065636E6572 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB969B30 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BB969B50 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB969B70 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465646563657270 && a2 == 0xEA00000000007942 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB969B90 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6563657250746F6ELL && a2 == 0xED00007942646564 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB969BB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB969BD0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB969BF0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x73694470756F7267 && a2 == 0xED000065636E6174 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB969C10 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6465776F6C6C6F66 && a2 == 0xEA00000000007942 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB969C30 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6F6C6C6F46746F6ELL && a2 == 0xED00007942646577 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB969C50 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6557664F73796164 && a2 == 0xEA00000000006B65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x4F73796144746F6ELL && a2 == 0xED00006B65655766 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x44664F73656D6974 && a2 == 0xEA00000000007961 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x73656D6954746F6ELL && a2 == 0xED0000796144664FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x65646F4D64656566 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x4D64656546746F6ELL && a2 == 0xEC0000007365646FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6B53737961776C61 && a2 == 0xEA00000000007069 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB969C70 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95A8C0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95A8E0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 29;
    else
      return 30;
  }
}

uint64_t sub_1BAAA5AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAAA4E70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAAA5AF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAAA7410();
  *a1 = result;
  return result;
}

uint64_t sub_1BAAA5B18(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB899278, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAAA5B4C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB899278, a1);
  return sub_1BB87471C();
}

uint64_t FeedGroupKnobsRules.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[22];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;

  v6 = *(_QWORD *)(a2 + 16);
  v31 = *(_QWORD *)(a2 + 24);
  v32 = v6;
  v7 = type metadata accessor for FeedGroupKnobsRules.CodingKeys(255, v6, v31, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB899278, v7);
  v8 = sub_1BB8741D0();
  v41 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v29 - v9;
  v12 = *v4;
  v11 = v4[1];
  v38 = v4[2];
  v39 = v11;
  v13 = (char *)v4[3];
  v36 = v4[4];
  v37 = v13;
  v14 = v4[5];
  v34 = v4[6];
  v35 = v14;
  v33 = v4[7];
  v15 = v4[8];
  v29[21] = v4[9];
  v30 = v15;
  v16 = v4[10];
  v29[19] = v4[11];
  v29[20] = v16;
  v29[18] = v4[12];
  v29[17] = v4[13];
  v29[16] = v4[14];
  v29[15] = v4[15];
  v29[14] = v4[16];
  v29[1] = v4[17];
  v29[2] = v4[18];
  v29[3] = v4[19];
  v29[4] = v4[20];
  v29[5] = v4[21];
  v29[6] = v4[22];
  v29[7] = v4[23];
  v29[8] = v4[24];
  v29[9] = v4[25];
  v29[10] = v4[26];
  v29[11] = v4[27];
  v29[12] = v4[28];
  v29[13] = v4[29];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = v8;
  sub_1BB8746C8();
  v42 = v12;
  LOBYTE(v47) = 0;
  sub_1BA5ECCB8();
  sub_1BA4A2870(&qword_1ED3A5070, (uint64_t (*)(uint64_t))sub_1BA5ECCB8, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  v18 = v40;
  sub_1BB87414C();
  if (!v18)
  {
    v20 = v37;
    v19 = v38;
    v21 = v36;
    v42 = v39;
    LOBYTE(v47) = 1;
    sub_1BB87414C();
    v42 = v19;
    LOBYTE(v47) = 2;
    sub_1BB87414C();
    v42 = (uint64_t)v20;
    LOBYTE(v47) = 3;
    sub_1BA5ECE7C();
    sub_1BA4A2870(&qword_1ED3A4EF0, (uint64_t (*)(uint64_t))sub_1BA5ECE7C, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
    sub_1BB87414C();
    v42 = v21;
    LOBYTE(v47) = 4;
    v23 = sub_1BA5ECC44();
    v24 = sub_1BA4A2870(qword_1ED3A5078, (uint64_t (*)(uint64_t))sub_1BA5ECC44, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
    sub_1BB87414C();
    v42 = v35;
    LOBYTE(v47) = 5;
    sub_1BB87414C();
    v42 = v34;
    LOBYTE(v47) = 6;
    sub_1BB87414C();
    v39 = v24;
    v40 = v23;
    v42 = v33;
    LOBYTE(v47) = 7;
    sub_1BA5ECDAC();
    sub_1BA4A2870(&qword_1ED3A4F70, (uint64_t (*)(uint64_t))sub_1BA5ECDAC, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleList<A>);
    sub_1BB87414C();
    v47 = v30;
    v46 = 8;
    swift_getAssociatedTypeWitness();
    v38 = v17;
    swift_getAssociatedConformanceWitness();
    v37 = v10;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v27 = swift_getAssociatedConformanceWitness();
    v28 = swift_getAssociatedConformanceWitness();
    v42 = AssociatedTypeWitness;
    v43 = AssociatedConformanceWitness;
    v44 = v27;
    v45 = v28;
    type metadata accessor for FeedGroupKnobsRuleSet();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v10, v8);
}

void sub_1BAAA6150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>, a1);
  sub_1BB87414C();
  if (!v1)
  {
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 232);
    *(_BYTE *)(v2 - 72) = 9;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 240);
    *(_BYTE *)(v2 - 72) = 10;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 248);
    *(_BYTE *)(v2 - 72) = 11;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 256);
    *(_BYTE *)(v2 - 72) = 12;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 264);
    *(_BYTE *)(v2 - 72) = 13;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 272);
    *(_BYTE *)(v2 - 72) = 14;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 280);
    *(_BYTE *)(v2 - 72) = 15;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 288);
    *(_BYTE *)(v2 - 72) = 16;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 392);
    *(_BYTE *)(v2 - 72) = 17;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 384);
    *(_BYTE *)(v2 - 72) = 18;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 376);
    *(_BYTE *)(v2 - 72) = 19;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 368);
    *(_BYTE *)(v2 - 72) = 20;
    sub_1BA5ED070();
    sub_1BA4A2870(&qword_1ED3A4ED8, (uint64_t (*)(uint64_t))sub_1BA5ED070, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 360);
    *(_BYTE *)(v2 - 72) = 21;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 352);
    *(_BYTE *)(v2 - 72) = 22;
    sub_1BA5ECEF0();
    sub_1BA4A2870(&qword_1ED3A4EE8, (uint64_t (*)(uint64_t))sub_1BA5ECEF0, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 344);
    *(_BYTE *)(v2 - 72) = 23;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 336);
    *(_BYTE *)(v2 - 72) = 24;
    sub_1BA5ECFF0();
    sub_1BA4A2870(&qword_1ED3A2890, (uint64_t (*)(uint64_t))sub_1BA5ECFF0, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 328);
    *(_BYTE *)(v2 - 72) = 25;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 320);
    *(_BYTE *)(v2 - 72) = 26;
    sub_1BA5ECD38();
    sub_1BA4A2870(&qword_1ED3A5068, (uint64_t (*)(uint64_t))sub_1BA5ECD38, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 312);
    *(_BYTE *)(v2 - 72) = 27;
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 304);
    *(_BYTE *)(v2 - 72) = 28;
    sub_1BA5ECF70();
    sub_1BA4A2870(&qword_1ED3A4EE0, (uint64_t (*)(uint64_t))sub_1BA5ECF70, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>);
    sub_1BB87414C();
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 296);
    *(_BYTE *)(v2 - 72) = 29;
    sub_1BB87414C();
  }
  JUMPOUT(0x1BAAA5E0CLL);
}

uint64_t sub_1BAAA6710(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FeedGroupKnobsRules.encode(to:)(a1, a2, a3, a4);
}

BOOL sub_1BAAA6724(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRules.== infix(_:_:)(a1, a2);
}

uint64_t sub_1BAAA6730@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = *a1;
  if (*a1 < 0)
  {
    v17 = type metadata accessor for FeedGroupEmitterRule(0, a3, a4, a4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
  else
  {
    v11 = a1[1];
    v10 = a1[2];
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    sub_1BA5ED1D4();
    v13 = (_QWORD *)(a5 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a5, a2, AssociatedTypeWitness);
    *v13 = v8;
    v13[1] = v11;
    v13[2] = v10;
    v15 = type metadata accessor for FeedGroupEmitterRule(0, a3, a4, v14);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a5, 0, 1, v15);
  }
}

void sub_1BAAA6908()
{
  type metadata accessor for FeedGroupKnobsRuleSet.Selector();
}

uint64_t sub_1BAAA6930()
{
  return sub_1BB872E68();
}

uint64_t sub_1BAAA6948(int a1, unint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  unint64_t v16;
  size_t v17;
  uint64_t isStackAllocationSafe;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t result;
  id v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39[3];

  v37 = a3;
  v3 = a2;
  v29 = a1;
  v39[2] = *MEMORY[0x1E0C80C00];
  if (a2 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    return v29 & 1;
  }
LABEL_3:
  v5 = 0;
  v32 = v3;
  v33 = v3 & 0xC000000000000001;
  v30 = v3 + 32;
  v31 = v4;
  while (1)
  {
    if (v33)
    {
      v6 = MEMORY[0x1BCCE4630](v5, v3);
      v7 = __OFADD__(v5++, 1);
      if (v7)
        goto LABEL_27;
    }
    else
    {
      v6 = *(_QWORD *)(v30 + 8 * v5);
      swift_retain();
      v7 = __OFADD__(v5++, 1);
      if (v7)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        v4 = sub_1BB873F30();
        if (!v4)
          goto LABEL_29;
        goto LABEL_3;
      }
    }
    if (qword_1ED3BE7F8 != -1)
      swift_once();
    v8 = *(_QWORD *)(v6 + 24);
    v39[0] = *(_QWORD *)(v6 + 16);
    v39[1] = v8;
    swift_bridgeObjectRetain();
    v9 = sub_1BA6E583C(v39);
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
      break;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    if (v5 == v4)
      goto LABEL_29;
  }
  v35 = v6;
  v36 = v5;
  v34 = v9;
  v11 = (uint64_t *)(v9 + 64);
  while (1)
  {
    v12 = *(v11 - 1);
    v13 = *v11;
    v14 = *(_BYTE *)(v12 + 32);
    v15 = v14 & 0x3F;
    v16 = (unint64_t)((1 << v14) + 63) >> 6;
    v17 = 8 * v16;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v15 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v19 = (char *)swift_slowAlloc();
    bzero(v19, v17);
    v22 = v38;
    v23 = sub_1BA6EB5B4((uint64_t)v19, v16, v12, v37);
    v38 = v22;
    if (v22)
      goto LABEL_30;
    v21 = v23;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE5C38](v19, -1, -1);
LABEL_23:
    v24 = sub_1BA6EB330(v21, v12);
    swift_release();
    if ((v24 & 1) != 0)
    {
      v25 = sub_1BA6EBD20(v37, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        v29 = *(unsigned __int8 *)(v35 + 32);
LABEL_26:
        swift_release();
        swift_bridgeObjectRelease();
        v4 = v31;
        v3 = v32;
        v5 = v36;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v11 += 5;
    if (!--v10)
      goto LABEL_26;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v19 = (char *)&v28 - ((v17 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v19, v17);
  v20 = v38;
  v21 = sub_1BA6EB5B4((uint64_t)v19, v16, v12, v37);
  swift_bridgeObjectRelease();
  v38 = v20;
  if (!v20)
    goto LABEL_23;
  v27 = v38;
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  result = MEMORY[0x1BCCE5C38](v19, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAAA6CD4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  size_t v20;
  uint64_t isStackAllocationSafe;
  char *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42[3];

  v4 = v3;
  v40 = a3;
  v5 = a2;
  v42[2] = *MEMORY[0x1E0C80C00];
  v33 = a1;
  if (a2 >> 62)
    goto LABEL_28;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    return v33;
  }
LABEL_3:
  v7 = 0;
  v35 = v5;
  v36 = v5 & 0xC000000000000001;
  v32 = v5 + 32;
  v34 = v6;
  while (1)
  {
    if (v36)
    {
      v8 = MEMORY[0x1BCCE4630](v7, v5);
      v9 = __OFADD__(v7++, 1);
      if (v9)
        goto LABEL_27;
    }
    else
    {
      v8 = *(_QWORD *)(v32 + 8 * v7);
      swift_retain();
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v6 = sub_1BB873F30();
        if (!v6)
          goto LABEL_29;
        goto LABEL_3;
      }
    }
    if (qword_1ED3BE7F8 != -1)
      swift_once();
    v39 = v8;
    v10 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    v42[0] = v10;
    v42[1] = v11;
    swift_bridgeObjectRetain();
    v12 = sub_1BA6E583C(v42);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
      break;
    swift_bridgeObjectRelease();
LABEL_5:
    swift_release();
    if (v7 == v6)
      goto LABEL_29;
  }
  v37 = v12;
  v38 = v7;
  v14 = (uint64_t *)(v12 + 64);
  while (1)
  {
    v41 = v4;
    v15 = *(v14 - 1);
    v16 = *v14;
    v17 = *(_BYTE *)(v15 + 32);
    v18 = v17 & 0x3F;
    v19 = (unint64_t)((1 << v17) + 63) >> 6;
    v20 = 8 * v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v18 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v22 = (char *)swift_slowAlloc();
    bzero(v22, v20);
    v25 = v41;
    v26 = sub_1BA6EB5B4((uint64_t)v22, v19, v15, v40);
    v4 = v25;
    if (v25)
      goto LABEL_30;
    v24 = v26;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE5C38](v22, -1, -1);
LABEL_23:
    v27 = sub_1BA6EB330(v24, v15);
    swift_release();
    if ((v27 & 1) != 0)
    {
      v28 = sub_1BA6EBD20(v40, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v39 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v33 = v29;
        v6 = v34;
        v5 = v35;
        v7 = v38;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v14 += 5;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      v6 = v34;
      v5 = v35;
      v7 = v38;
      goto LABEL_5;
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v22 = (char *)&v31 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v22, v20);
  v23 = v41;
  v24 = sub_1BA6EB5B4((uint64_t)v22, v19, v15, v40);
  v4 = v23;
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_23;
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  result = MEMORY[0x1BCCE5C38](v22, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAAA7084(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned int v14;
  unint64_t v15;
  size_t v16;
  uint64_t isStackAllocationSafe;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t result;
  id v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36[3];

  v34 = a2;
  v2 = a1;
  v36[2] = *MEMORY[0x1E0C80C00];
  if (a1 >> 62)
    goto LABEL_27;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    return swift_bridgeObjectRelease();
LABEL_3:
  v4 = 0;
  v29 = v2;
  v30 = v2 & 0xC000000000000001;
  v27 = v2 + 32;
  v28 = v3;
  while (1)
  {
    if (v30)
    {
      v5 = MEMORY[0x1BCCE4630](v4, v2);
      v6 = __OFADD__(v4++, 1);
      if (v6)
        goto LABEL_26;
    }
    else
    {
      v5 = *(_QWORD *)(v27 + 8 * v4);
      swift_retain();
      v6 = __OFADD__(v4++, 1);
      if (v6)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        v3 = sub_1BB873F30();
        if (!v3)
          return swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    if (qword_1ED3BE7F8 != -1)
      swift_once();
    v7 = *(_QWORD *)(v5 + 24);
    v36[0] = *(_QWORD *)(v5 + 16);
    v36[1] = v7;
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E583C(v36);
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
      break;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    if (v4 == v3)
      return swift_bridgeObjectRelease();
  }
  v32 = v5;
  v33 = v4;
  v31 = v8;
  v10 = (uint64_t *)(v8 + 64);
  while (1)
  {
    v12 = *(v10 - 1);
    v11 = *v10;
    v13 = *(_BYTE *)(v12 + 32);
    v14 = v13 & 0x3F;
    v15 = (unint64_t)((1 << v13) + 63) >> 6;
    v16 = 8 * v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v14 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v18 = (char *)swift_slowAlloc();
    bzero(v18, v16);
    v21 = v35;
    v22 = sub_1BA6EB5B4((uint64_t)v18, v15, v12, v34);
    v35 = v21;
    if (v21)
      goto LABEL_29;
    v20 = v22;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE5C38](v18, -1, -1);
LABEL_23:
    v23 = sub_1BA6EB330(v20, v12);
    swift_release();
    if ((v23 & 1) != 0)
    {
      v24 = sub_1BA6EBD20(v34, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
      {
LABEL_25:
        swift_release();
        swift_bridgeObjectRelease();
        v3 = v28;
        v2 = v29;
        v4 = v33;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v10 += 5;
    if (!--v9)
      goto LABEL_25;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v18 = (char *)&v27 - ((v16 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v18, v16);
  v19 = v35;
  v20 = sub_1BA6EB5B4((uint64_t)v18, v15, v12, v34);
  swift_bridgeObjectRelease();
  v35 = v19;
  if (!v19)
    goto LABEL_23;
  v26 = v35;
  swift_willThrow();

  __break(1u);
LABEL_29:
  swift_bridgeObjectRelease();

  result = MEMORY[0x1BCCE5C38](v18, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAAA7410()
{
  return 30;
}

uint64_t sub_1BAAA7418(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t storeEnumTagSinglePayload for FeedTimeOfDay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAAA7620 + 4 * byte_1BB898E2A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAAA7654 + 4 * byte_1BB898E25[v4]))();
}

uint64_t sub_1BAAA7654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAA765C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAA7664);
  return result;
}

uint64_t sub_1BAAA7670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAA7678);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAAA767C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAA7684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedTimeOfDay()
{
  return &type metadata for FeedTimeOfDay;
}

_QWORD *sub_1BAAA76A0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  a1[19] = a2[19];
  swift_retain();
  swift_release();
  a1[20] = a2[20];
  swift_retain();
  swift_release();
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  a1[22] = a2[22];
  swift_retain();
  swift_release();
  a1[23] = a2[23];
  swift_retain();
  swift_release();
  a1[24] = a2[24];
  swift_retain();
  swift_release();
  a1[25] = a2[25];
  swift_retain();
  swift_release();
  a1[26] = a2[26];
  swift_retain();
  swift_release();
  a1[27] = a2[27];
  swift_retain();
  swift_release();
  a1[28] = a2[28];
  swift_retain();
  swift_release();
  a1[29] = a2[29];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1BAAA799C(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  swift_release();
  a1[7] = a2[7];
  swift_release();
  swift_release();
  a1[8] = a2[8];
  swift_release();
  swift_release();
  a1[9] = a2[9];
  swift_release();
  swift_release();
  a1[10] = a2[10];
  swift_release();
  swift_release();
  a1[11] = a2[11];
  swift_release();
  swift_release();
  a1[12] = a2[12];
  swift_release();
  swift_release();
  a1[13] = a2[13];
  swift_release();
  swift_release();
  a1[14] = a2[14];
  swift_release();
  return a1;
}

uint64_t sub_1BAAA7B28(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 29 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 29) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE2)
    return ((uint64_t (*)(void))((char *)&loc_1BAAA7B74 + 4 * byte_1BB898E34[v4]))();
  *a1 = a2 + 29;
  return ((uint64_t (*)(void))((char *)sub_1BAAA7BA8 + 4 * byte_1BB898E2F[v4]))();
}

uint64_t sub_1BAAA7BA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAA7BB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAA7BB8);
  return result;
}

uint64_t sub_1BAAA7BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAA7BCCLL);
  *(_BYTE *)result = a2 + 29;
  return result;
}

uint64_t sub_1BAAA7BD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAA7BD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAAA7BE4()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAAA7BF4()
{
  unint64_t result;

  result = qword_1EF2AEEB0;
  if (!qword_1EF2AEEB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTimeOfDay, &type metadata for FeedTimeOfDay);
    atomic_store(result, (unint64_t *)&qword_1EF2AEEB0);
  }
  return result;
}

uint64_t sub_1BAAA7C38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BAAA6730(a1, v2[4], v2[2], v2[3], a2);
}

void sub_1BAAA7C54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AEEB8)
  {
    sub_1BA5ED1D4();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AEEB8);
  }
}

uint64_t sub_1BAAA7CA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA8B312C(a1, a2);
}

id sub_1BAAA7CBC()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3450]), sel_init);
}

void __swiftcall OfflineAlertControllerFactoryType.alertController(for:)(UIAlertController *__return_ptr retstr, NewsFeed::OfflineModel *a2)
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3450]), sel_init);
}

void __swiftcall OfflineAlertControllerFactoryType.alertController(for:type:reason:)(UIAlertController *__return_ptr retstr, NewsFeed::OfflineModel *a2, NewsFeed::AlertContentType type, NewsFeed::ContentAvailability::UnavailableReason reason)
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3450]), sel_init);
}

uint64_t sub_1BAAA7D28()
{
  uint64_t v1;

  sub_1BAAA7E18();
  v1 = swift_allocObject();
  sub_1BB871314();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_allocObject();
  return sub_1BB8712E4();
}

uint64_t OfflineAlertControllerFactoryType.alert(for:)()
{
  uint64_t v1;

  sub_1BAAA7E18();
  v1 = swift_allocObject();
  sub_1BB871314();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_allocObject();
  return sub_1BB8712E4();
}

unint64_t sub_1BAAA7E18()
{
  unint64_t result;

  result = qword_1EF2AEEC8;
  if (!qword_1EF2AEEC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8993E0, &type metadata for NoopAlert);
    atomic_store(result, (unint64_t *)&qword_1EF2AEEC8);
  }
  return result;
}

uint64_t sub_1BAAA7E5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL static AlertContentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AlertContentType.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t AlertContentType.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAAA7F44()
{
  unint64_t result;

  result = qword_1EF2AEED0;
  if (!qword_1EF2AEED0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AlertContentType, &type metadata for AlertContentType);
    atomic_store(result, (unint64_t *)&qword_1EF2AEED0);
  }
  return result;
}

uint64_t dispatch thunk of OfflineAlertControllerFactoryType.alertController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of OfflineAlertControllerFactoryType.alertController(for:type:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of OfflineAlertControllerFactoryType.alert(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for OfflineAlertControllerFactory()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for AlertContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAAA800C + 4 * byte_1BB8992D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAAA8040 + 4 * byte_1BB8992D0[v4]))();
}

uint64_t sub_1BAAA8040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAA8048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAA8050);
  return result;
}

uint64_t sub_1BAAA805C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAA8064);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAAA8068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAA8070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertContentType()
{
  return &type metadata for AlertContentType;
}

ValueMetadata *type metadata accessor for NoopAlert()
{
  return &type metadata for NoopAlert;
}

uint64_t PuzzleEmbedScript.__allocating_init(with:)(uint64_t a1)
{
  return sub_1BAAA8520(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BAAA874C);
}

uint64_t PuzzleEmbedScript.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleEmbedScript.eventName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleEmbedScript.eventDetail.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleEmbedScript.userScript.getter()
{
  return 0;
}

uint64_t PuzzleEmbedScript.executableScript.getter()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v17[2];

  v2 = sub_1BB87279C();
  if (v1)
  {
    v3 = v1;
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v4 = sub_1BB86EFEC();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED476918);
    v5 = v0;
    swift_bridgeObjectRetain_n();
    v6 = (char *)v5;
    v7 = sub_1BB86EFC8();
    v8 = sub_1BB87330C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v17[0] = v10;
      *(_DWORD *)v9 = 136315394;
      v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName];
      v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName + 8];
      swift_bridgeObjectRetain();
      sub_1BA5D2E14(v11, v12, v17);
      sub_1BB873A8C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1BA5D2E14(v2, v3, v17);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v7, v8, "Sending executable script with eventName: %s and detail: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v10, -1, -1);
      MEMORY[0x1BCCE5C38](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("fflineAlertControllerFactory");
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v13);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v14);
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    sub_1BB872AFC("var event = new CustomEvent('");
    return v17[0];
  }
  return v2;
}

uint64_t PuzzleEmbedScript.queueable.getter()
{
  return 0;
}

uint64_t PuzzleEmbedScript.init(with:)(uint64_t a1)
{
  return sub_1BAAA8520(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BAAA8678);
}

uint64_t sub_1BAAA8520(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = a2(v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v8;
}

id PuzzleEmbedScript.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PuzzleEmbedScript.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PuzzleEmbedScript.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BAAA8678(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  objc_class *ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_queueable] = 0;
  v8 = a4[1];
  v9 = a2;
  v10 = v8(a3, (uint64_t)a4);
  v11 = (uint64_t *)&v9[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_identifier];
  *v11 = v10;
  v11[1] = v12;
  v13 = a4[2](a3, (uint64_t)a4);
  v14 = (uint64_t *)&v9[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName];
  *v14 = v13;
  v14[1] = v15;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventDetail] = a4[3](a3, (uint64_t)a4);

  v17.receiver = v9;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

id sub_1BAAA874C(uint64_t a1, Class a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  return sub_1BAAA8678(a1, objc_allocWithZone(a2), a3, a4);
}

uint64_t dispatch thunk of PuzzleEmbedScriptable.scriptId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedScriptable.scriptEventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedScriptable.scriptEventDetail.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for PuzzleEmbedScript()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleEmbedScript()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleEmbedScript.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for DebugFormatSnapshotContentView()
{
  return objc_opt_self();
}

unint64_t sub_1BAAA88C4()
{
  unint64_t result;

  result = qword_1EF2AEFE0;
  if (!qword_1EF2AEFE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2AEFE0);
  }
  return result;
}

uint64_t static UIActivityType.copyLink.getter()
{
  return sub_1BB872970();
}

uint64_t static ContextMenuItem.copyLink(tag:)(void *a1)
{
  swift_getObjectType();
  return sub_1BAAA8950(a1);
}

uint64_t sub_1BAAA8950(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v2 = sub_1BB870150();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, sel_identifier, v11);
  if (!v14)
  {
    sub_1BB8729A0();
    v14 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v14);

  sub_1BB86C5EC();
  sub_1BB8714A0();
  sub_1BB871494();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v13, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  v24 = a1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  swift_unknownObjectRetain();
  sub_1BB87015C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v18 = objc_msgSend((id)objc_opt_self(), sel_ts_link);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v4, *MEMORY[0x1E0DB8530], v23);
  swift_allocObject();
  v19 = sub_1BB86FB20();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v19;
}

uint64_t sub_1BAAA8C88(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD v23[2];

  v23[0] = a2;
  v3 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - v9;
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isPuzzleHub, v13, v23[0]))
  {
    sub_1BB86C634();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  v16 = objc_msgSend(a1, sel_identifier);
  if (!v16)
  {
    sub_1BB8729A0();
    v16 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v16);

  sub_1BB86C5EC();
  sub_1BA7F0A80((uint64_t)v10);
LABEL_8:
  sub_1BB8714A0();
  sub_1BB871494();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v15, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  v23[1] = a1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  swift_unknownObjectRetain();
  sub_1BB87015C();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A8 != -1)
    swift_once();
  v20 = (id)qword_1EF2C4778;
  sub_1BB8703D8();
  swift_allocObject();
  v21 = sub_1BB86FC94();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v21;
}

uint64_t sub_1BAAA9090(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  id v22;
  _QWORD v24[2];

  v4 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v4);
  v24[0] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - v11;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2[3];
  v18 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(a1, v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BA7F0A80((uint64_t)v12);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1BB8714A0();
    sub_1BB871494();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    v24[1] = a1;
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
    swift_unknownObjectRetain();
    sub_1BB87015C();
    sub_1BB872970();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    if (qword_1EF2A72A8 != -1)
      swift_once();
    v22 = (id)qword_1EF2C4778;
    sub_1BB8703D8();
    sub_1BB86FCA0();
    swift_allocObject();
    v19 = sub_1BB86FC94();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v19;
}

uint64_t sub_1BAAA9418(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  id v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD v29[2];

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  v29[0] = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v29 - v9;
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v29 - v17;
  v19 = objc_msgSend(a1, sel_identifier, v16);
  if (!v19)
  {
    sub_1BB8729A0();
    v19 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForIssueID_, v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_9;
  }
  sub_1BB86C5EC();

  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v10, v14, v11);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v22(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    sub_1BA7F0A80((uint64_t)v10);
    return 0;
  }
  v21(v18, v10, v11);
  sub_1BB8714A0();
  sub_1BB871494();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v18, v11);
  v22(v7, 0, 1, v11);
  v29[1] = a1;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA820);
  v23 = a1;
  sub_1BB87015C();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v25 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A8 != -1)
    swift_once();
  v26 = (id)qword_1EF2C4778;
  sub_1BB8703D8();
  sub_1BB86FCA0();
  swift_allocObject();
  v27 = sub_1BB86FC94();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return v27;
}

uint64_t sub_1BAAA983C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  _QWORD v13[2];

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v6);
  sub_1BB8714A0();
  sub_1BB871494();
  FCFeedDescriptor.feedURL.getter();
  v7 = sub_1BB86C67C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v13[1] = a1;
  sub_1BA49A224(0, &qword_1EF2AEFE8);
  v8 = a1;
  sub_1BB87015C();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A8 != -1)
    swift_once();
  v11 = (id)qword_1EF2C4778;
  sub_1BB8703D8();
  sub_1BB86FCA0();
  swift_allocObject();
  return sub_1BB86FC94();
}

uint64_t sub_1BAAA9AD8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t ObjCClassFromMetadata;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD v28[2];

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  v28[0] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v28 - v9;
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v28 - v17;
  v19 = objc_msgSend(a1, sel_identifier, v16);
  if (!v19)
  {
    sub_1BB8729A0();
    v19 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleID_, v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_9;
  }
  sub_1BB86C5EC();

  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v10, v14, v11);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v22(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    sub_1BA7F0A80((uint64_t)v10);
    return 0;
  }
  v21(v18, v10, v11);
  sub_1BB8714A0();
  sub_1BB871494();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v18, v11);
  v22(v7, 0, 1, v11);
  v28[1] = a1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF910);
  swift_unknownObjectRetain();
  sub_1BB87015C();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v24 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A8 != -1)
    swift_once();
  v25 = (id)qword_1EF2C4778;
  sub_1BB8703D8();
  sub_1BB86FCA0();
  swift_allocObject();
  v26 = sub_1BB86FC94();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return v26;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink14feedDescriptorACSo06FCFeedK0C_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  id v14;
  _QWORD v16[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v9);
  sub_1BB8714A0();
  sub_1BB871494();
  FCFeedDescriptor.feedURL.getter();
  v10 = sub_1BB86C67C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  v16[1] = a1;
  sub_1BA49A224(0, &qword_1EF2AEFE8);
  v11 = a1;
  sub_1BB87015C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v14 = objc_msgSend((id)objc_opt_self(), sel_ts_link);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink6puzzleACSo17FCPuzzleProviding_p_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD v26[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB870168();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v26 - v15;
  v17 = objc_msgSend(a1, sel_identifier, v14);
  if (!v17)
  {
    sub_1BB8729A0();
    v17 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v18 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleID_, v17);

  if (v18)
  {
    sub_1BB86C5EC();

    v19 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
  }
  else
  {
    v20 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  }
  sub_1BA7F0AD4((uint64_t)v12, (uint64_t)v16);
  sub_1BB8714A0();
  sub_1BB871494();
  sub_1BA7E8428((uint64_t)v16, (uint64_t)v9);
  v26[1] = a1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF910);
  swift_unknownObjectRetain();
  sub_1BB87015C();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v22 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v23 = objc_msgSend((id)objc_opt_self(), sel_ts_link);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v24 = sub_1BB86FB20();
  sub_1BA7F0A80((uint64_t)v16);
  return v24;
}

Swift::Void __swiftcall FormatProgressView.updateProgress(progress:animated:)(Swift::Double progress, Swift::Bool animated)
{
  void **v2;
  Swift::Double v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;

  v4 = progress;
  v5 = (unint64_t)*v2;
  v6 = (unint64_t)*v2 >> 62;
  if ((_DWORD)v6)
  {
    v7 = (void *)(v5 & 0x3FFFFFFFFFFFFFFFLL);
    if ((_DWORD)v6 == 1)
    {
      v8 = v7;
      FormatProgressPieView.updatePieProgress(progress:)(v4);
    }
    else
    {
      v8 = v7;
      FormatProgressCircleView.updateCircleProgress(progress:)(v4);
    }

  }
  else
  {
    *(float *)&progress = progress;
    objc_msgSend((id)v5, sel_setProgress_animated_, animated, progress);
  }
}

uint64_t FormatProgressBarView.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatProgressBarView.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressBarView.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id FormatProgressBarView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatProgressBarView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatProgressBarView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatProgressBarView.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id FormatProgressBarView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BAAAA86C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatProgressView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for FormatProgressView(_QWORD *a1)
{

}

uint64_t *assignWithCopy for FormatProgressView(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for FormatProgressView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for FormatProgressView()
{
  return &type metadata for FormatProgressView;
}

uint64_t sub_1BAAAA984(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    return swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SportsRecordFactoryError(uint64_t a1)
{
  return sub_1BAAAA9C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1BAAAA9C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_unknownObjectRelease();
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SportsRecordFactoryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAAAA984(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SportsRecordFactoryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAAAA984(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BAAAA9C4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SportsRecordFactoryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BAAAA9C4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for SportsRecordFactoryError()
{
  return &type metadata for SportsRecordFactoryError;
}

uint64_t sub_1BAAAAB20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  uint64_t *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  uint64_t result;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;

  v144 = *a2;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = sub_1BB872A0C();
  v8 = v7;
  v134 = v6;
  if (v5)
  {
    *(_QWORD *)&v135 = sub_1BB872A0C();
    *((_QWORD *)&v135 + 1) = v9;
  }
  else
  {
    *(_QWORD *)&v142 = v6;
    *((_QWORD *)&v142 + 1) = v7;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v10);
    v135 = v142;
  }
  if (qword_1ED3AAC10 != -1)
    goto LABEL_72;
  while (2)
  {
    v11 = (void *)qword_1ED476750;
    sub_1BA7AA598();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87FC80;
    v13 = v11;
    v14 = objc_msgSend((id)a1, sel_identifier);
    v15 = sub_1BB8729A0();
    v17 = v16;

    v18 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    v19 = sub_1BA6A2D8C();
    *(_QWORD *)(v12 + 32) = v15;
    *(_QWORD *)(v12 + 40) = v17;
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = v19;
    *(_QWORD *)(v12 + 64) = v19;
    *(_QWORD *)(v12 + 72) = v134;
    *(_QWORD *)(v12 + 80) = v8;
    *(_QWORD *)(v12 + 136) = v18;
    *(_QWORD *)(v12 + 144) = v19;
    v133 = v19;
    *(_OWORD *)(v12 + 112) = v135;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1BB87330C();
    sub_1BB86EF44("Sports record attempting to build record for %{public}@ with rank league type %@ and stat name %@", 97, 2, &dword_1BA493000, v13, v20, v12);

    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v144 + 16);
    if (!v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      sub_1BAAAB9C4();
      swift_allocError();
      *(_QWORD *)(v34 + 8) = 0;
      *(_QWORD *)(v34 + 16) = 0;
      *(_QWORD *)v34 = a1;
      *(_BYTE *)(v34 + 24) = 0;
LABEL_63:
      swift_unknownObjectRetain();
      return swift_willThrow();
    }
    v132 = v8;
    swift_bridgeObjectRetain_n();
    v22 = (uint64_t *)(v144 + 56);
    v8 = (uint64_t)&selRef_backgroundColor;
    while (1)
    {
      v23 = *(v22 - 3);
      v24 = *(v22 - 2);
      v26 = *(v22 - 1);
      v25 = *v22;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = objc_msgSend((id)a1, sel_UMCCanonicalID);
      if (v27)
        break;
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 += 4;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
    }
    v28 = v27;
    v137 = v25;
    v138 = v26;
    v29 = sub_1BB8729A0();
    v31 = v30;

    if (v23 == v29 && v24 == v31)
    {
      swift_bridgeObjectRelease_n();
      v35 = v138;
      goto LABEL_21;
    }
    v33 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
      goto LABEL_8;
    v35 = v138;
LABEL_21:
    swift_bridgeObjectRelease_n();
    v36 = *(_QWORD *)(v35 + 16);
    v136 = a1;
    if (v36)
    {
      swift_bridgeObjectRetain_n();
      a1 = v35 + 56;
      v37 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      while (1)
      {
        v139 = v36;
        v39 = *(_QWORD *)a1;
        v144 = *(_QWORD *)(a1 - 8);
        v40 = sub_1BB872A0C();
        v42 = v41;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v43 = v37;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v142 = v43;
        v46 = sub_1BA6E35A8(v40, v42);
        v47 = v43[2];
        v48 = (v45 & 1) == 0;
        v49 = v47 + v48;
        if (__OFADD__(v47, v48))
        {
          __break(1u);
          goto LABEL_69;
        }
        v8 = v45;
        if (v43[3] >= v49)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v37 = (_QWORD *)v142;
            if ((v45 & 1) == 0)
              goto LABEL_32;
          }
          else
          {
            sub_1BB4C216C();
            v37 = (_QWORD *)v142;
            if ((v8 & 1) == 0)
              goto LABEL_32;
          }
        }
        else
        {
          sub_1BB4AE750(v49, isUniquelyReferenced_nonNull_native);
          v50 = sub_1BA6E35A8(v40, v42);
          if ((v8 & 1) != (v51 & 1))
          {
LABEL_73:
            result = sub_1BB874560();
            __break(1u);
            return result;
          }
          v46 = v50;
          v37 = (_QWORD *)v142;
          if ((v8 & 1) == 0)
          {
LABEL_32:
            v37[(v46 >> 6) + 8] |= 1 << v46;
            v52 = (uint64_t *)(v37[6] + 16 * v46);
            *v52 = v40;
            v52[1] = v42;
            v53 = (_QWORD *)(v37[7] + 16 * v46);
            *v53 = v144;
            v53[1] = v39;
            v54 = v37[2];
            v55 = __OFADD__(v54, 1);
            v56 = v54 + 1;
            if (v55)
              goto LABEL_70;
            v37[2] = v56;
            swift_bridgeObjectRetain();
            goto LABEL_24;
          }
        }
        v38 = (_QWORD *)(v37[7] + 16 * v46);
        swift_bridgeObjectRelease();
        *v38 = v144;
        v38[1] = v39;
LABEL_24:
        a1 += 32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v36;
        if (v139 == 1)
        {
          v35 = v138;
          swift_bridgeObjectRelease();
          a1 = v136;
          v57 = v37;
          goto LABEL_38;
        }
      }
    }
    swift_bridgeObjectRetain();
    v57 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_38:
    swift_bridgeObjectRelease();
    v58 = (void *)qword_1ED476750;
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1BB87FC80;
    v60 = *(_QWORD *)(v35 + 16);
    v61 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v59 + 64) = v61;
    *(_QWORD *)(v59 + 32) = v60;
    v62 = v58;
    v63 = objc_msgSend((id)a1, sel_identifier);
    v64 = sub_1BB8729A0();
    v66 = v65;

    v67 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v59 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v59 + 104) = v133;
    *(_QWORD *)(v59 + 72) = v64;
    *(_QWORD *)(v59 + 80) = v66;
    swift_bridgeObjectRetain();
    v68 = sub_1BB8727D8();
    v70 = v69;
    v130 = (uint64_t)v57;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v59 + 136) = v67;
    *(_QWORD *)(v59 + 144) = v133;
    *(_QWORD *)(v59 + 112) = v68;
    *(_QWORD *)(v59 + 120) = v70;
    v71 = sub_1BB87330C();
    sub_1BB86EF44("Sports record found %ld statistics for %{public}@, %@", 53, 2, &dword_1BA493000, v62, v71, v59);

    swift_bridgeObjectRelease();
    v72 = v137;
    v73 = *(_QWORD *)(v137 + 16);
    if (v73)
    {
      swift_bridgeObjectRetain_n();
      v74 = (uint64_t *)(v137 + 40);
      v75 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      while (1)
      {
        v140 = v73;
        v78 = *v74;
        v144 = *(v74 - 1);
        v8 = sub_1BB872A0C();
        v80 = v79;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a1 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v142 = v75;
        v82 = sub_1BA6E35A8(v8, v80);
        v83 = v75[2];
        v84 = (v81 & 1) == 0;
        v85 = v83 + v84;
        if (__OFADD__(v83, v84))
          break;
        v86 = v81;
        if (v75[3] >= v85)
        {
          if ((a1 & 1) == 0)
            sub_1BB4C216C();
        }
        else
        {
          sub_1BB4AE750(v85, a1);
          v87 = sub_1BA6E35A8(v8, v80);
          if ((v86 & 1) != (v88 & 1))
            goto LABEL_73;
          v82 = v87;
        }
        a1 = v136;
        v75 = (_QWORD *)v142;
        if ((v86 & 1) != 0)
        {
          v76 = (_QWORD *)v142;
          v77 = (_QWORD *)(*(_QWORD *)(v142 + 56) + 16 * v82);
          swift_bridgeObjectRelease();
          *v77 = v144;
          v77[1] = v78;
          v75 = v76;
        }
        else
        {
          *(_QWORD *)(v142 + 8 * (v82 >> 6) + 64) |= 1 << v82;
          v89 = (uint64_t *)(v75[6] + 16 * v82);
          *v89 = v8;
          v89[1] = v80;
          v90 = (_QWORD *)(v75[7] + 16 * v82);
          *v90 = v144;
          v90[1] = v78;
          v91 = v75[2];
          v55 = __OFADD__(v91, 1);
          v92 = v91 + 1;
          if (v55)
            goto LABEL_71;
          v75[2] = v92;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v74 += 6;
        v73 = v140 - 1;
        if (v140 == 1)
        {
          v72 = v137;
          swift_bridgeObjectRelease();
          v93 = (uint64_t)v75;
          goto LABEL_53;
        }
      }
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      swift_once();
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  v93 = MEMORY[0x1E0DEE9E0];
LABEL_53:
  swift_bridgeObjectRelease();
  v94 = (void *)qword_1ED476750;
  v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = xmmword_1BB87FC80;
  swift_bridgeObjectRetain();
  v96 = v94;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v97 = *(_QWORD *)(v72 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v95 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v95 + 64) = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v95 + 32) = v97;
  v98 = objc_msgSend((id)a1, sel_identifier);
  v99 = sub_1BB8729A0();
  v101 = v100;

  v102 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v95 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v95 + 104) = v133;
  *(_QWORD *)(v95 + 72) = v99;
  *(_QWORD *)(v95 + 80) = v101;
  swift_bridgeObjectRetain();
  v103 = sub_1BB8727D8();
  v105 = v104;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v95 + 136) = v102;
  *(_QWORD *)(v95 + 144) = v133;
  *(_QWORD *)(v95 + 112) = v103;
  *(_QWORD *)(v95 + 120) = v105;
  v106 = sub_1BB87330C();
  sub_1BB86EF44("Sports record found %ld leagues for %{public}@, %@", 50, 2, &dword_1BA493000, v96, v106, v95);

  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v130 + 16) || (v107 = sub_1BA6E35A8(1936615799, 0xE400000000000000), (v108 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BAAAB9C4();
    swift_allocError();
    *(_QWORD *)v124 = a1;
    v125 = xmmword_1BB8995A0;
LABEL_62:
    *(_OWORD *)(v124 + 8) = v125;
    *(_BYTE *)(v124 + 24) = 1;
    goto LABEL_63;
  }
  v109 = (uint64_t *)(*(_QWORD *)(v130 + 56) + 16 * v107);
  v111 = *v109;
  v110 = v109[1];
  v112 = *(_QWORD *)(v130 + 16);
  swift_bridgeObjectRetain();
  if (!v112 || (v113 = sub_1BA6E35A8(0x736573736F6CLL, 0xE600000000000000), (v114 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BAAAB9C4();
    swift_allocError();
    *(_QWORD *)v124 = a1;
    v125 = xmmword_1BB899590;
    goto LABEL_62;
  }
  v115 = (uint64_t *)(*(_QWORD *)(v130 + 56) + 16 * v113);
  v117 = *v115;
  v116 = v115[1];
  v118 = *(_QWORD *)(v130 + 16);
  swift_bridgeObjectRetain();
  v144 = v117;
  if (v118)
  {
    v119 = sub_1BA6E35A8(1936025972, 0xE400000000000000);
    v120 = *((_QWORD *)&v135 + 1);
    if ((v121 & 1) != 0)
    {
      v122 = (uint64_t *)(*(_QWORD *)(v130 + 56) + 16 * v119);
      v123 = v122[1];
      v141 = *v122;
      swift_bridgeObjectRetain();
    }
    else
    {
      v141 = 0;
      v123 = 0;
    }
    v127 = v134;
  }
  else
  {
    v141 = 0;
    v123 = 0;
    v127 = v134;
    v120 = *((_QWORD *)&v135 + 1);
  }
  sub_1BAAAB638(v130, v135, v120, v93, v127, v132, (uint64_t *)&v142);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v128 = v143;
  v129 = v142;
  *(_QWORD *)a4 = v111;
  *(_QWORD *)(a4 + 8) = v110;
  *(_QWORD *)(a4 + 16) = v144;
  *(_QWORD *)(a4 + 24) = v116;
  *(_QWORD *)(a4 + 32) = v141;
  *(_QWORD *)(a4 + 40) = v123;
  *(_OWORD *)(a4 + 48) = v129;
  *(_QWORD *)(a4 + 64) = v128;
  return result;
}

uint64_t sub_1BAAAB638@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  char v42;
  _QWORD v43[3];

  if (!*(_QWORD *)(result + 16))
    goto LABEL_51;
  v13 = result;
  swift_bridgeObjectRetain();
  v14 = sub_1BA6E35A8(a2, a3);
  if ((v15 & 1) == 0)
    goto LABEL_12;
  v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v14);
  v18 = *v16;
  v17 = v16[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v19 = HIBYTE(v17) & 0xF;
  v20 = v18 & 0xFFFFFFFFFFFFLL;
  if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v18 & 0xFFFFFFFFFFFFLL))
    goto LABEL_12;
  if ((v17 & 0x1000000000000000) != 0)
  {
    v23 = (uint64_t)sub_1BA9BF9A4(v18, v17, 10);
    LOBYTE(v18) = v42;
LABEL_47:
    result = swift_bridgeObjectRelease();
    if ((v18 & 1) != 0 || !*(_QWORD *)(a4 + 16))
      goto LABEL_51;
    swift_bridgeObjectRetain();
    v34 = sub_1BA6E35A8(a5, a6);
    if ((v35 & 1) != 0)
    {
      v36 = (uint64_t *)(*(_QWORD *)(a4 + 56) + 16 * v34);
      v38 = *v36;
      v37 = v36[1];
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      *a7 = v23;
      a7[1] = v38;
      a7[2] = v37;
      return result;
    }
LABEL_12:
    result = swift_bridgeObjectRelease();
LABEL_51:
    *a7 = 0;
    a7[1] = 0;
    a7[2] = 0;
    return result;
  }
  if ((v17 & 0x2000000000000000) == 0)
  {
    if ((v18 & 0x1000000000000000) != 0)
      v22 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v22 = (unsigned __int8 *)sub_1BB873D80();
    v23 = (uint64_t)sub_1BA9BF8AC(v22, v20, 10);
    LOBYTE(v18) = v24 & 1;
    goto LABEL_47;
  }
  v43[0] = v18;
  v43[1] = v17 & 0xFFFFFFFFFFFFFFLL;
  if (v18 == 43)
  {
    if (!v19)
      goto LABEL_63;
    if (v19 == 1 || (BYTE1(v18) - 48) > 9u)
      goto LABEL_34;
    v23 = (BYTE1(v18) - 48);
    if (v19 != 2)
    {
      if ((BYTE2(v18) - 48) > 9u)
        goto LABEL_34;
      v23 = 10 * (BYTE1(v18) - 48) + (BYTE2(v18) - 48);
      v25 = v19 - 3;
      if (v25)
      {
        v26 = (unsigned __int8 *)v43 + 3;
        while (1)
        {
          v27 = *v26 - 48;
          if (v27 > 9)
            goto LABEL_34;
          v28 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63)
            goto LABEL_34;
          v23 = v28 + v27;
          if (__OFADD__(v28, v27))
            goto LABEL_34;
          LOBYTE(v18) = 0;
          ++v26;
          if (!--v25)
            goto LABEL_47;
        }
      }
    }
LABEL_46:
    LOBYTE(v18) = 0;
    goto LABEL_47;
  }
  if (v18 != 45)
  {
    if (!v19 || (v18 - 48) > 9u)
      goto LABEL_34;
    v23 = (v18 - 48);
    if (v19 != 1)
    {
      if ((BYTE1(v18) - 48) > 9u)
        goto LABEL_34;
      v23 = 10 * (v18 - 48) + (BYTE1(v18) - 48);
      v29 = v19 - 2;
      if (v29)
      {
        v30 = (unsigned __int8 *)v43 + 2;
        while (1)
        {
          v31 = *v30 - 48;
          if (v31 > 9)
            goto LABEL_34;
          v32 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63)
            goto LABEL_34;
          v23 = v32 + v31;
          if (__OFADD__(v32, v31))
            goto LABEL_34;
          LOBYTE(v18) = 0;
          ++v30;
          if (!--v29)
            goto LABEL_47;
        }
      }
    }
    goto LABEL_46;
  }
  if (v19)
  {
    if (v19 != 1 && (BYTE1(v18) - 48) <= 9u)
    {
      if (v19 == 2)
      {
        LOBYTE(v18) = 0;
        v23 = -(uint64_t)(BYTE1(v18) - 48);
        goto LABEL_47;
      }
      if ((BYTE2(v18) - 48) <= 9u)
      {
        v23 = -10 * (BYTE1(v18) - 48) - (BYTE2(v18) - 48);
        v33 = v19 - 3;
        if (!v33)
          goto LABEL_46;
        v39 = (unsigned __int8 *)v43 + 3;
        while (1)
        {
          v40 = *v39 - 48;
          if (v40 > 9)
            break;
          v41 = 10 * v23;
          if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63)
            break;
          v23 = v41 - v40;
          if (__OFSUB__(v41, v40))
            break;
          LOBYTE(v18) = 0;
          ++v39;
          if (!--v33)
            goto LABEL_47;
        }
      }
    }
LABEL_34:
    v23 = 0;
    LOBYTE(v18) = 1;
    goto LABEL_47;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

unint64_t sub_1BAAAB9C4()
{
  unint64_t result;

  result = qword_1EF2AF000;
  if (!qword_1EF2AF000)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsRecordFactoryError, &type metadata for SportsRecordFactoryError);
    atomic_store(result, (unint64_t *)&qword_1EF2AF000);
  }
  return result;
}

uint64_t FCCoreConfigurationManager.fetchConfiguration()()
{
  sub_1BA4A6114(0, (unint64_t *)&unk_1ED3B08D0, &qword_1ED3B9870);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BAAABA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = sub_1BA573ED8;
  v11[3] = v10;
  v11[4] = a3;
  v11[5] = a4;
  v13[4] = sub_1BAAAC0A4;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BAAABB6C;
  v13[3] = &block_descriptor_20;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_fetchConfigurationIfNeededWithCompletion_, v12);
  _Block_release(v12);
}

void sub_1BAAABB70(uint64_t a1, void *a2, void (*a3)(), uint64_t a4, void (*a5)(), uint64_t a6, unint64_t *a7)
{
  id v11;
  void *v12;
  char v13;

  swift_unknownObjectRetain();
  v11 = a2;
  sub_1BA4EFE00(0, a7);
  sub_1BB86E8E4();
  if ((v13 & 1) != 0)
    a5();
  else
    a3();
  sub_1BAAAC0D0(v12, v13);
}

uint64_t sub_1BAAABC28(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1BAAABC90(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  sub_1BA81D718();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v4);
  FCCurrentQoS();
  v8 = (id)FCDispatchQueueForQualityOfService();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1BAAAC13C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BAAABB6C;
  aBlock[3] = &block_descriptor_26;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchAppConfigurationIfNeededWithCompletionQueue_completion_, v8, v11);
  _Block_release(v11);

}

void sub_1BAAABDD8(uint64_t a1)
{
  uint64_t v1;

  sub_1BAAABC90(a1, *(void **)(v1 + 24));
}

void sub_1BAAABDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BAAABA6C(a1, a2, a3, a4, *(void **)(v4 + 24));
}

uint64_t sub_1BAAABDE8(uint64_t a1, void *a2)
{
  id v3;
  char v5;

  swift_unknownObjectRetain();
  v3 = a2;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED39C030);
  sub_1BB86E8E4();
  sub_1BA81D718();
  if ((v5 & 1) != 0)
    return sub_1BB872F34();
  else
    return sub_1BB872F40();
}

uint64_t FCNewsAppConfigurationManager.accessor<A>(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  sub_1BB86EC2C();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = a2;
  v5[3] = v2;
  v5[4] = a1;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1BB86EC38();
}

uint64_t sub_1BAAABF24(void *a1)
{
  objc_msgSend(a1, sel_possiblyUnfetchedAppConfiguration);
  swift_getAtKeyPath();
  return swift_unknownObjectRelease();
}

uint64_t FCNewsAppConfigurationManager.int(for:)()
{
  void *v0;
  uint64_t v2;
  char v3;

  objc_msgSend(v0, sel_possiblyUnfetchedAppConfiguration);
  swift_getAtKeyPath();
  swift_unknownObjectRelease();
  if (v3)
    return 0;
  else
    return v2;
}

unint64_t sub_1BAAABFF4()
{
  unint64_t result;

  result = qword_1EF2AF018;
  if (!qword_1EF2AF018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedEditionConfig, &type metadata for FeedEditionConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2AF018);
  }
  return result;
}

uint64_t sub_1BAAAC03C()
{
  uint64_t v0;

  return sub_1BAAABF24(*(void **)(v0 + 24));
}

void sub_1BAAAC050(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BAAABB70(a1, a2, *(void (**)())(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)())(v2 + 32), *(_QWORD *)(v2 + 40), (unint64_t *)&qword_1ED39C030);
}

uint64_t sub_1BAAAC07C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAAAC0A4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BAAABB70(a1, a2, *(void (**)())(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)())(v2 + 32), *(_QWORD *)(v2 + 40), &qword_1ED3B9870);
}

void sub_1BAAAC0D0(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_unknownObjectRelease();
}

uint64_t sub_1BAAAC0DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA81D718();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BAAAC13C(uint64_t a1, void *a2)
{
  sub_1BA81D718();
  return sub_1BAAABDE8(a1, a2);
}

void static FormatCodingScrollingTraitSnapToLeadingStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

BOOL static FormatCodingScrollingTraitSnapToLeadingStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 2;
}

BOOL sub_1BAAAC1BC(unsigned __int8 *a1)
{
  return *a1 != 2;
}

unint64_t sub_1BAAAC1CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAAC1F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAAC1F0()
{
  unint64_t result;

  result = qword_1EF2AF020;
  if (!qword_1EF2AF020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingScrollingTraitSnapToLeadingStrategy, &type metadata for FormatCodingScrollingTraitSnapToLeadingStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AF020);
  }
  return result;
}

unint64_t sub_1BAAAC238()
{
  unint64_t result;

  result = qword_1EF2AF028;
  if (!qword_1EF2AF028)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScrollingTrait, &type metadata for FormatScrollingTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2AF028);
  }
  return result;
}

unint64_t sub_1BAAAC280()
{
  unint64_t result;

  result = qword_1EF2AF030;
  if (!qword_1EF2AF030)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScrollingTrait, &type metadata for FormatScrollingTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2AF030);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingScrollingTraitSnapToLeadingStrategy()
{
  return &type metadata for FormatCodingScrollingTraitSnapToLeadingStrategy;
}

ValueMetadata *type metadata accessor for A12_V5()
{
  return &type metadata for A12_V5;
}

uint64_t sub_1BAAAC2E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AF1D0, (uint64_t (*)(void))sub_1BAAAF538, (uint64_t)&type metadata for A12_V5.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAAAF538();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAAAC498()
{
  sub_1BAAAF538();
  return sub_1BB874710();
}

uint64_t sub_1BAAAC4C0()
{
  sub_1BAAAF538();
  return sub_1BB87471C();
}

double sub_1BAAAC4E8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAAAF324(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAAAC52C(_QWORD *a1)
{
  return sub_1BAAAC2E4(a1);
}

uint64_t sub_1BAAAC540()
{
  sub_1BAAAF018();
  return sub_1BB86D96C();
}

uint64_t sub_1BAAAC5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V5;
  v20 = sub_1BA8EE5A0();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V5;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E72685F8, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7268620, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V5.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(&qword_1EF2AF0A8, (uint64_t (*)(uint64_t))type metadata accessor for A12_V5.Bound, (uint64_t)&unk_1BB899788);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

uint64_t sub_1BAAACBDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _BYTE *v38;
  _QWORD v39[4];
  uint64_t v40;
  char v41[105];
  __int128 v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[6];

  v2 = v1;
  v38 = a1;
  v36 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A12_V5.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(int *)(v8 + 32);
  *(_QWORD *)&v37 = v7;
  v11 = *(double *)(v7 + v10);
  sub_1BA4C010C(v9 + 16, (uint64_t)&v43);
  sub_1BA4C010C(v9 + 56, (uint64_t)v42);
  v12 = v11 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v43, inited + 16);
  sub_1BA4CECCC(v42, inited + 56);
  *(double *)(inited + 96) = v12;
  v41[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v41, v47);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v14 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v39[2] = v2;
  v39[3] = v47;
  swift_bridgeObjectRetain();
  v15 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v39, v14, (uint64_t)&v40);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16 >= 3)
    v17 = 3;
  else
    v17 = *(_QWORD *)(v15 + 16);
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v19 = *(_QWORD *)(v18 + 16);
  swift_release();
  if (v19 == v16 - v17)
  {
    v20 = swift_dynamicCastClass();
    if (!v20)
    {
      swift_bridgeObjectRelease();
      v20 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v20 = sub_1BA85CDD8(v15, v15 + ((v34 + 32) & ~v34), v17, (2 * v16) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v43 = v20;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v22 = v21;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v35 = v22;
  sub_1BB8730F0();
  swift_release();
  v23 = *MEMORY[0x1E0DB5D88];
  v24 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v5, v23, v24);
  v25 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v36);
  MEMORY[0x1E0C80A78](v25);
  sub_1BAAAF0BC(0, &qword_1EF2AF150, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v26 = sub_1BB86DB40();
  v37 = v43;
  v27 = v44;
  v28 = v45;
  *(_QWORD *)&v43 = v15;
  *(_QWORD *)&v42[0] = v46;
  MEMORY[0x1E0C80A78](v26);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v29 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v43 = v29;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v30 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v31 = v38;
  *v38 = 0;
  *(_OWORD *)(v31 + 8) = v37;
  *((_QWORD *)v31 + 3) = v27;
  *((_QWORD *)v31 + 4) = v28;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v31 + 5) = v30;
  *((_QWORD *)v31 + 6) = v32;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
}

uint64_t sub_1BAAAD104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BAAAF0BC(0, &qword_1EF2AF170, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAAAF07C(&qword_1EF2AF178, &qword_1EF2AF170, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAAAD260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD);
  uint64_t v13;
  void (*v14)(uint64_t *);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  void (*v43)(uint64_t *);
  unsigned int v44;
  void (*v45)(uint64_t, _QWORD, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (_QWORD *)((char *)v37 - v8);
  v49 = a1;
  v10 = sub_1BB86D438();
  v11 = swift_allocBox();
  v12 = *(void (**)(_QWORD))(*(_QWORD *)(v10 - 8) + 104);
  v42 = *MEMORY[0x1E0DB5A38];
  v41 = v10;
  v45 = (void (*)(uint64_t, _QWORD, uint64_t))v12;
  v12(v13);
  *v9 = v11;
  v14 = *(void (**)(uint64_t *))(v7 + 104);
  v44 = *MEMORY[0x1E0DB6318];
  v14(v9);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v15, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v19 = *(void (**)(uint64_t *, uint64_t))(v7 + 8);
  v20 = v18;
  v19(v9, v6);
  v46 = a1;
  v49 = a1;
  v21 = *MEMORY[0x1E0DB6410];
  v43 = v14;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v14)(v9, v21, v6);
  sub_1BAAAF138();
  sub_1BA4CDF6C(0, &qword_1EF2AF198, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v24 + 104))(v26 + v25, *MEMORY[0x1E0DB5C80], v23);
  v48 = v47;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  result = ((uint64_t (*)(uint64_t *, uint64_t))v19)(v9, v6);
  v47 = a3;
  v28 = *(_QWORD *)(a3 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    v39 = v17;
    v40 = v20;
    v29 = 0;
    v38 = *MEMORY[0x1E0DB63C0];
    v37[0] = v28;
    v37[1] = v19;
    v30 = v43;
    do
    {
      v31 = v46;
      ++v29;
      v49 = v46;
      v32 = v41;
      v33 = swift_allocBox();
      v45(v34, v42, v32);
      *v9 = v33;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v30)(v9, v44, v6);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v19(v9, v6);
      v49 = v31;
      v35 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v30)(v9, v38, v6);
      MEMORY[0x1E0C80A78](v35);
      sub_1BB86D498();
      v36 = v37[0];
      v19(v9, v6);
      swift_bridgeObjectRelease();
    }
    while (v36 != v29);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAAAD62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v23 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 4;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v22 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
  sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v23 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 4;
  *v8 = v14;
  v11(v8, v10, v5);
  v15 = v19;
  v21 = v19;
  sub_1BB86D4BC();
  v13(v8, v5);
  v23 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 4;
  *v8 = v16;
  v11(v8, v10, v5);
  v20 = v15;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAAAD894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
  sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAAADC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
  sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAAAE0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
  sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAAAE4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
  sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAAAE694(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16))
  {
    v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v15 = a2 + ((v14 + 32) & ~v14);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
    sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAAAE948(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2AF168, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80));
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAAAF0BC(0, &qword_1EF2AF180, MEMORY[0x1E0DB5A10]);
    sub_1BAAAF07C(&qword_1EF2AF188, &qword_1EF2AF180, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BAAAEC08@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V5.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAAAECE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAAAC5A8(a1, a2, a3);
}

uint64_t sub_1BAAAECFC()
{
  return sub_1BB690B60();
}

unint64_t sub_1BAAAED0C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAAAED38();
  result = sub_1BAAAED7C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAAAED38()
{
  unint64_t result;

  result = qword_1EF2AF098;
  if (!qword_1EF2AF098)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8996D4, &type metadata for A12_V5);
    atomic_store(result, (unint64_t *)&qword_1EF2AF098);
  }
  return result;
}

unint64_t sub_1BAAAED7C()
{
  unint64_t result;

  result = qword_1EF2AF0A0;
  if (!qword_1EF2AF0A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8996FC, &type metadata for A12_V5);
    atomic_store(result, (unint64_t *)&qword_1EF2AF0A0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V5.Bound()
{
  uint64_t result;

  result = qword_1EF2AF108;
  if (!qword_1EF2AF108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAAAEDFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAAAEE08(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAAAEE84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAAAEE90(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAAAEF04()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAAAEF90(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AF148, (uint64_t (*)(uint64_t))type metadata accessor for A12_V5.Bound, (uint64_t)&unk_1BB899760);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAAAEFCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAD104(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BAAAEFD4()
{
  unint64_t result;

  result = qword_1EF2AF158;
  if (!qword_1EF2AF158)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8998B8, &type metadata for A12_V5.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2AF158);
  }
  return result;
}

unint64_t sub_1BAAAF018()
{
  unint64_t result;

  result = qword_1EF2AF160;
  if (!qword_1EF2AF160)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB899888, &type metadata for A12_V5.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF160);
  }
  return result;
}

uint64_t sub_1BAAAF05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAAAEC08(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAAAF064()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAAF074(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAD260(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAAAF07C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAAAF0BC(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAAAF0BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V5.Layout;
    v8[1] = &type metadata for A12_V5.Layout.Attributes;
    v8[2] = sub_1BAAAEFD4();
    v8[3] = sub_1BAAAF018();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BAAAF138()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AF190)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AF198, (uint64_t (*)(void))sub_1BAAAEFD4, (uint64_t)&type metadata for A12_V5.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AF190);
  }
}

uint64_t sub_1BAAAF1AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAD62C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAAF1B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAE4AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAAF1BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAE694(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAAF1C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAE948(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAAF1CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAD894(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAAF1D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAADC94(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAAF1DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAAE0A0(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V5.Layout.Attributes()
{
  return &type metadata for A12_V5.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V5.Layout()
{
  return &type metadata for A12_V5.Layout;
}

unint64_t sub_1BAAAF208()
{
  unint64_t result;

  result = qword_1EF2AF1A0;
  if (!qword_1EF2AF1A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB899828, &type metadata for A12_V5.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1A0);
  }
  return result;
}

unint64_t sub_1BAAAF250()
{
  unint64_t result;

  result = qword_1EF2AF1A8;
  if (!qword_1EF2AF1A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB899800, &type metadata for A12_V5.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1A8);
  }
  return result;
}

unint64_t sub_1BAAAF298()
{
  unint64_t result;

  result = qword_1EF2AF1B0;
  if (!qword_1EF2AF1B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8997D8, &type metadata for A12_V5.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1B0);
  }
  return result;
}

unint64_t sub_1BAAAF2E0()
{
  unint64_t result;

  result = qword_1EF2AF1B8;
  if (!qword_1EF2AF1B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB899850, &type metadata for A12_V5.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1B8);
  }
  return result;
}

uint64_t sub_1BAAAF324@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AF1C0, (uint64_t (*)(void))sub_1BAAAF538, (uint64_t)&type metadata for A12_V5.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAAAF538();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAAAF538()
{
  unint64_t result;

  result = qword_1EF2AF1C8;
  if (!qword_1EF2AF1C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8999AC, &type metadata for A12_V5.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V5.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAAAF5C8 + 4 * byte_1BB8996C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAAAF5FC + 4 * asc_1BB8996C0[v4]))();
}

uint64_t sub_1BAAAF5FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAAF604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAAF60CLL);
  return result;
}

uint64_t sub_1BAAAF618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAAF620);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAAAF624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAAF62C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V5.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V5.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAAAF64C()
{
  unint64_t result;

  result = qword_1EF2AF1D8;
  if (!qword_1EF2AF1D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB899984, &type metadata for A12_V5.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1D8);
  }
  return result;
}

unint64_t sub_1BAAAF694()
{
  unint64_t result;

  result = qword_1EF2AF1E0;
  if (!qword_1EF2AF1E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8998F4, &type metadata for A12_V5.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1E0);
  }
  return result;
}

unint64_t sub_1BAAAF6DC()
{
  unint64_t result;

  result = qword_1EF2AF1E8;
  if (!qword_1EF2AF1E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89991C, &type metadata for A12_V5.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF1E8);
  }
  return result;
}

id sub_1BAAAF720()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_initWithTarget_action_, v0, sel_doPanGestureWithGesture_);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BAAAF844()
{
  char *v0;
  char *v1;
  void *v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  objc_super v32;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController];
  objc_msgSend(v0, sel_addChildViewController_, v2);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = result;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = result;
  objc_msgSend(v4, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = result;
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v7 = result;
  objc_msgSend(result, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v6, sel_setFrame_, v9, v11, v13, v15);
  v16 = sub_1BAAAF720();
  objc_msgSend(v16, sel_setDelegate_, v1);

  result = objc_msgSend(v2, sel_toolbar);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v17 = result;
  v18 = sub_1BAAAF720();
  objc_msgSend(v17, sel_addGestureRecognizer_, v18);

  v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController];
  objc_msgSend(v1, sel_addChildViewController_, v19);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20 = result;
  result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = result;
  objc_msgSend(v20, sel_addSubview_, result);

  objc_msgSend(v19, sel_didMoveToParentViewController_, v1);
  result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v22 = result;
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v23 = result;
    objc_msgSend(result, sel_bounds);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    objc_msgSend(v22, sel_setFrame_, v25, v27, v29, v31);
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    return (id)swift_release();
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1BAAAFB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editor);
  type metadata accessor for DebugFormatConsoleAnimator();
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 16) = v1;
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1BA8F6C64();
  return swift_release();
}

void sub_1BAAAFC40()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  id v40;
  void *v41;
  double Height;
  id v43;
  void *v44;
  id v45;
  void *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  id v56;
  void *v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  id v66;
  double v67;
  CGFloat v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  char v76;
  objc_super v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;

  v1 = v0;
  v77.receiver = v0;
  v77.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v77, sel_viewWillLayoutSubviews);
  if ((v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight + 8] & 1) != 0)
  {
    v2 = objc_msgSend(v0, sel_view);
    if (!v2)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v3 = v2;
    objc_msgSend(v2, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v78.origin.x = v5;
    v78.origin.y = v7;
    v78.size.width = v9;
    v78.size.height = v11;
    v12 = CGRectGetHeight(v78) * 0.4;
  }
  else
  {
    v12 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
  }
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (!v76)
  {
    v43 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController], sel_view);
    if (v43)
    {
      v44 = v43;
      v45 = objc_msgSend(v1, sel_view);
      if (v45)
      {
        v46 = v45;
        objc_msgSend(v45, sel_bounds);
        v48 = v47;
        v50 = v49;
        v52 = v51;
        v54 = v53;

        objc_msgSend(v44, sel_setFrame_, v48, v50, v52, v54);
        v55 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController], sel_view);
        if (v55)
        {
          v28 = v55;
          v56 = objc_msgSend(v1, sel_view);
          if (v56)
          {
            v57 = v56;
            objc_msgSend(v56, sel_bounds);
            v59 = v58;
            v61 = v60;
            v63 = v62;
            v65 = v64;

            v81.origin.x = v59;
            v81.origin.y = v61;
            v81.size.width = v63;
            v81.size.height = v65;
            Height = CGRectGetHeight(v81);
            v66 = objc_msgSend(v1, sel_view);
            if (v66)
            {
              v41 = v66;
              goto LABEL_20;
            }
LABEL_33:
            __break(1u);
            return;
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v76 != 1)
    return;
  v13 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController], sel_view);
  if (!v13)
    goto LABEL_23;
  v14 = v13;
  v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v16 = v15;
  v75 = v12;
  objc_msgSend(v15, sel_bounds);

  v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v18 = v17;
  objc_msgSend(v17, sel_bounds);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v79.origin.x = v20;
  v79.origin.y = v22;
  v79.size.width = v24;
  v79.size.height = v26;
  CGRectGetHeight(v79);
  v12 = v75;
  sub_1BB873600();
  objc_msgSend(v14, sel_setFrame_);

  v27 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController], sel_view);
  if (!v27)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v28 = v27;
  v29 = objc_msgSend(v1, sel_view);
  if (!v29)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v30 = v29;
  objc_msgSend(v29, sel_bounds);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v80.origin.x = v32;
  v80.origin.y = v34;
  v80.size.width = v36;
  v80.size.height = v38;
  v39 = CGRectGetHeight(v80);
  v40 = objc_msgSend(v1, sel_view);
  if (!v40)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v41 = v40;
  Height = v39 - v75;
LABEL_20:
  objc_msgSend(v41, sel_bounds);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;

  v82.origin.x = v68;
  v82.origin.y = v70;
  v82.size.width = v72;
  v82.size.height = v74;
  objc_msgSend(v28, sel_setFrame_, 0.0, Height, CGRectGetWidth(v82), v12);

}

void sub_1BAAB00C0(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  char *v5;
  double *v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  CGFloat MinY;
  double *v34;
  double *v35;
  double v36;
  double v37;
  id v38;
  double v39;
  double v40;
  id v41;
  void *v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  CGFloat Height;
  void *v52;
  id v53;
  void *v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double v63;
  id v64;
  void *v65;
  double v66;
  double v67;
  double v68;
  double v69;
  id v70;
  void *v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  id v81;
  void *v82;
  double v83;
  double v84;
  double v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  double v94;
  double *v95;
  id v96;
  void *v97;
  id v98;
  double v99;
  double v100;
  id v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v2 = v1;
  v4 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v4 - 3) >= 3)
  {
    if (v4 == (char *)2)
    {
      v35 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
      if ((v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession + 24] & 1) != 0)
        return;
      v36 = v35[1];
      v37 = v35[2];
      v38 = objc_msgSend(v2, sel_view);
      objc_msgSend(a1, sel_locationInView_, v38);
      v40 = v39;

      v41 = objc_msgSend(v2, sel_view);
      if (v41)
      {
        v42 = v41;
        objc_msgSend(v41, sel_bounds);
        v44 = v43;
        v46 = v45;
        v48 = v47;
        v50 = v49;

        v104.origin.x = v44;
        v104.origin.y = v46;
        v104.size.width = v48;
        v104.size.height = v50;
        Height = CGRectGetHeight(v104);
        v52 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController];
        v53 = objc_msgSend(v52, sel_toolbar);
        if (v53)
        {
          v54 = v53;
          v99 = Height;
          v100 = v36;
          objc_msgSend(v53, sel_bounds);
          v56 = v55;
          v58 = v57;
          v60 = v59;
          v62 = v61;

          v105.origin.x = v56;
          v105.origin.y = v58;
          v105.size.width = v60;
          v105.size.height = v62;
          v63 = CGRectGetHeight(v105);
          v64 = objc_msgSend(v52, sel_view);
          if (v64)
          {
            v65 = v64;
            v66 = v40;
            v67 = v37;
            objc_msgSend(v64, sel_safeAreaInsets);
            v69 = v68;

            v70 = objc_msgSend(v2, sel_view);
            if (v70)
            {
              v71 = v70;
              objc_msgSend(v70, sel_bounds);
              v73 = v72;
              v75 = v74;
              v77 = v76;
              v79 = v78;

              v106.origin.x = v73;
              v106.origin.y = v75;
              v106.size.width = v77;
              v106.size.height = v79;
              v80 = CGRectGetHeight(v106);
              v81 = objc_msgSend(v2, sel_view);
              if (v81)
              {
                v82 = v81;
                v83 = v67 + v100 + v66 - v100;
                v84 = v99 - v63 - v69;
                v85 = v80 * 0.4;
                objc_msgSend(v81, sel_bounds);
                v87 = v86;
                v89 = v88;
                v91 = v90;
                v93 = v92;

                v107.origin.x = v87;
                v107.origin.y = v89;
                v107.size.width = v91;
                v107.size.height = v93;
                v94 = CGRectGetHeight(v107) - v83;
                if (v94 >= v84)
                  v94 = v84;
                if (v85 > v94)
                  v94 = v85;
                v95 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
                *v95 = v94;
                *((_BYTE *)v95 + 8) = 0;
                v96 = objc_msgSend(v2, sel_view);
                if (v96)
                {
                  v97 = v96;
                  objc_msgSend(v96, sel_setNeedsLayout);

                  v98 = objc_msgSend(v2, sel_view);
                  if (v98)
                  {
                    v101 = v98;
                    objc_msgSend(v98, sel_layoutIfNeeded);

                    return;
                  }
                  goto LABEL_33;
                }
LABEL_32:
                __break(1u);
LABEL_33:
                __break(1u);
                return;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v4 != (char *)1)
      return;
    v18 = objc_msgSend(v2, sel_view);
    objc_msgSend(a1, sel_locationInView_, v18);
    v20 = v19;
    v22 = v21;

    v23 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController], sel_view);
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, sel_frame);
      v26 = v25;
      v28 = v27;
      v30 = v29;
      v32 = v31;

      v103.origin.x = v26;
      v103.origin.y = v28;
      v103.size.width = v30;
      v103.size.height = v32;
      MinY = CGRectGetMinY(v103);
      v34 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
      *(_QWORD *)v34 = v20;
      v34[1] = v22;
      v34[2] = MinY - v22;
      *((_BYTE *)v34 + 24) = 0;
      swift_retain();
      sub_1BB86E4A0();
      goto LABEL_10;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = &v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = 0;
  v5[24] = 1;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  v6 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
  if ((v2[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight + 8] & 1) != 0)
    return;
  v7 = *v6;
  v8 = objc_msgSend(v2, sel_view);
  if (!v8)
  {
    __break(1u);
    goto LABEL_26;
  }
  v9 = v8;
  objc_msgSend(v8, sel_bounds);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v102.origin.x = v11;
  v102.origin.y = v13;
  v102.size.width = v15;
  v102.size.height = v17;
  if (v7 < CGRectGetHeight(v102) * 0.2)
  {
    *v6 = 0.0;
    *((_BYTE *)v6 + 8) = 1;
    swift_retain();
    sub_1BB86D2C4();
LABEL_10:
    swift_release();
  }
}

uint64_t type metadata accessor for DebugFormatConsoleViewController()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for DebugFormatConsolePanSession(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugFormatConsolePanSession(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatConsolePanSession()
{
  return &type metadata for DebugFormatConsolePanSession;
}

uint64_t sub_1BAAB079C()
{
  char v0;
  char v1;
  char v3;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v3)
  {
    v0 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v1 = v0 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v1 = 0;
  }
  return v1 & 1;
}

uint64_t FCFeedTheming.hasNavigationChromeBackgroundImage.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t result;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3)
  {
    v4 = objc_msgSend(v1, sel_currentDevice);
    objc_msgSend(v4, sel_userInterfaceIdiom);

    result = (uint64_t)objc_msgSend(v0, sel_navigationChromeBackgroundImage);
    if (!result)
      return result;
  }
  else
  {
    result = (uint64_t)objc_msgSend(v0, sel_navigationChromeBackgroundImageCompact);
    if (!result)
      return result;
  }

  return 1;
}

id FCFeedTheming.navigationBarBackgroundColor.getter()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v11;
  id v12;
  id v13;
  id v14;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v0, sel_navigationChromeBackgroundColor);
  if (v3 || (v3 = objc_msgSend(v0, sel_backgroundColor)) != 0)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_ne_color);

  }
  else
  {
    if (qword_1ED3D5150 != -1)
      swift_once();
    if (byte_1ED3D5168 == 1)
    {
      v11 = objc_msgSend(v2, sel_secondarySystemBackgroundColor);
      v12 = objc_msgSend(v2, sel_systemBackgroundColor);
      v5 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v11, v12);

    }
    else
    {
      v5 = objc_msgSend(v2, sel_systemBackgroundColor);
    }
  }
  v6 = objc_msgSend(v1, sel_darkStyleNavigationChromeBackgroundColor);
  if (v6 || (v6 = objc_msgSend(v1, sel_darkStyleBackgroundColor)) != 0)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_ne_color);

  }
  else
  {
    if (qword_1ED3D5150 != -1)
      swift_once();
    if (byte_1ED3D5168 == 1)
    {
      v13 = objc_msgSend(v2, sel_secondarySystemBackgroundColor);
      v14 = objc_msgSend(v2, sel_systemBackgroundColor);
      v8 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v13, v14);

    }
    else
    {
      v8 = objc_msgSend(v2, sel_systemBackgroundColor);
    }
  }
  v9 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v8);

  return v9;
}

id FCFeedTheming.navigationBarForegroundColor.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  unsigned int v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;

  sub_1BAAB0F80();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, sel_foregroundColor, v4);
  if (!v7)
    goto LABEL_7;
  v8 = v7;
  v36 = v6;
  v37 = v3;
  v38 = v2;
  v9 = objc_msgSend(v0, sel_darkStyleForegroundColor, v0);
  if (!v9)
    v9 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v8, sel_red);
  v11 = v10;
  objc_msgSend(v8, sel_green);
  v13 = v12;
  objc_msgSend(v8, sel_blue);
  v15 = v14;
  objc_msgSend(v8, sel_alpha);
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v11, v13, v15, v16);
  v18 = v9;
  objc_msgSend(v18, sel_red);
  v20 = v19;
  objc_msgSend(v18, sel_green);
  v22 = v21;
  objc_msgSend(v18, sel_blue);
  v24 = v23;
  objc_msgSend(v18, sel_alpha);
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v20, v22, v24, v25);
  v27 = (void *)objc_opt_self();
  v28 = objc_msgSend(v27, sel_ts_dynamicColor_withDarkStyleVariant_, v17, v26);

  v3 = v37;
  v2 = v38;
  v6 = v36;
  if (!v28)
  {
LABEL_7:
    v32 = (void *)objc_opt_self();
    v40 = objc_msgSend(v32, sel_blackColor);
    v39 = objc_msgSend(v32, sel_whiteColor);
    sub_1BA748DB8();
    sub_1BB86F688();
    v33 = FCFeedTheming.navigationBarBackgroundColor.getter();
    sub_1BB86F694();

    goto LABEL_8;
  }
  v29 = FCFeedTheming.navigationBarBackgroundColor.getter();
  v30 = objc_msgSend(v28, sel__isSimilarToColor_withinPercentage_, v29, 0.12);

  if (v30)
  {
    v40 = objc_msgSend(v27, sel_blackColor);
    v39 = objc_msgSend(v27, sel_whiteColor);
    sub_1BA748DB8();
    sub_1BB86F688();
    v31 = FCFeedTheming.navigationBarBackgroundColor.getter();
    sub_1BB86F694();

LABEL_8:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return v40;
  }
  return v28;
}

id FCFeedTheming.navigationChromeBackgroundImage(for:userInterfaceIdiom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAAB0FE8(a1, a2, a3, (SEL *)&selRef_navigationChromeBackgroundImageCompact, (SEL *)&selRef_navigationChromeBackgroundImage);
}

void sub_1BAAB0F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C3B8)
  {
    sub_1BA748DB8();
    v0 = sub_1BB86F6A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C3B8);
  }
}

id FCFeedTheming.darkStyleNavigationChromeBackgroundImage(for:userInterfaceIdiom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAAB0FE8(a1, a2, a3, (SEL *)&selRef_darkStyleNavigationChromeBackgroundImageCompact, (SEL *)&selRef_darkStyleNavigationChromeBackgroundImage);
}

id sub_1BAAB0FE8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  void *v5;
  BOOL v6;

  if (a2)
    v6 = 0;
  else
    v6 = a1 == 1;
  if (!v6)
    a4 = a5;
  return objc_msgSend(v5, *a4);
}

uint64_t FCFeedTheming.navigationChromeBackgroundImageContentMode(for:userInterfaceIdiom:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  char **v3;
  unint64_t v4;

  if (!a1 || a1 == 2)
  {
    v4 = (unint64_t)objc_msgSend(v2, sel_navigationChromeBackgroundImageContentMode);
  }
  else
  {
    if (a1 != 1)
    {
      v4 = (unint64_t)objc_msgSend(v2, sel_navigationChromeBackgroundImageContentMode);
      if (v4 <= 9)
        return qword_1BB899A68[v4];
      return 4;
    }
    v3 = &selRef_navigationChromeBackgroundImageContentModeCompact;
    if (a2)
      v3 = &selRef_navigationChromeBackgroundImageContentMode;
    v4 = (unint64_t)objc_msgSend(v2, *v3);
  }
  if (v4 < 0xA)
    return qword_1BB899A68[v4];
  return 4;
}

uint64_t dispatch thunk of FormatTraversalContextType.inventory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedCursorToken.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorToken.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

unint64_t FeedCursorToken.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return 0xD000000000000013;
}

unint64_t sub_1BAAB118C()
{
  return FeedCursorToken.description.getter();
}

uint64_t static FeedCursorToken.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

_QWORD *FeedCursorStore.__allocating_init(log:)(void *a1)
{
  _QWORD *v2;

  v2 = sub_1BA62FC5C(a1);

  return v2;
}

_QWORD *FeedCursorStore.init(log:)(void *a1)
{
  _QWORD *v2;

  v2 = sub_1BA62FC94(a1);

  return v2;
}

uint64_t FeedCursorStore.update(location:cursorContainer:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA630038(a2);
}

uint64_t FeedCursorStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursorStore.__deallocating_deinit()
{
  FeedCursorStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAAB1298()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t FeedCursorStoreManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursorStoreManager.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedCursorToken()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for FeedCursorStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedCursorStore.__allocating_init(log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedCursorStoreManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.cornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.accessoryLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.accessoryPointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.titleLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.followingButtonTextLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.followingButtonTextPointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.followingButtonTopPadding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.titleFontColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(dateText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(badgeText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(followButtonText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.styled(unfollowButtonText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(imageView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(accessoryLabel:badge:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(followingButton:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of CoverChannelViewStylerType.style(moreActionsButton:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

id sub_1BAAB13C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = *(void **)(v0 + 72);
  v12 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v5;
  v16 = v10;
  v17 = v11;
  v18 = v13;
  v19 = v6;
  sub_1BA76E82C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v22 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id sub_1BAAB15D4()
{
  uint64_t v0;
  id v1;
  uint64_t inited;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v1, sel_setLineBreakMode_, 4);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = *(void **)(v0 + 24);
  v5 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = *(void **)(v0 + 80);
  v8 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v7;
  v9 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v1;
  swift_bridgeObjectRetain();
  v10 = v3;
  v11 = v4;
  v12 = v6;
  v13 = v7;
  v14 = v9;
  v15 = v1;
  sub_1BA76E82C(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v18 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1BAAB17C8()
{
  uint64_t v0;
  id v1;
  uint64_t inited;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v1, sel_setAlignment_, 1);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = *(void **)(v0 + 24);
  v5 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = *(void **)(v0 + 88);
  v8 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v7;
  v9 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v1;
  swift_bridgeObjectRetain();
  v10 = v3;
  v11 = v4;
  v12 = v6;
  v13 = v7;
  v14 = v9;
  v15 = v1;
  sub_1BA76E82C(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v18 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1BAAB19BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v28;

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(v0 + 32);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setAlignment_, 1);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = *(void **)(v0 + 128);
  v12 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  v14 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  v15 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 144) = v14;
  *(_QWORD *)(inited + 152) = v15;
  *(_QWORD *)(inited + 184) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 160) = 0xBFE0000000000000;
  v16 = v5;
  swift_bridgeObjectRetain();
  v17 = v8;
  v18 = v10;
  v19 = v11;
  v20 = v13;
  v21 = v6;
  v22 = v15;
  sub_1BA76E82C(inited);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v25 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

id sub_1BAAB1C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  _BYTE v28[192];

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(id *)(v0 + 32);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);

  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setAlignment_, 0);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = (void *)objc_opt_self();
  v12 = v5;
  swift_bridgeObjectRetain();
  v13 = v8;
  v14 = v10;
  v15 = objc_msgSend(v11, sel_secondaryLabelColor);
  v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v15;
  v17 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  v18 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  v19 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 144) = v18;
  *(_QWORD *)(inited + 152) = v19;
  *(_QWORD *)(inited + 184) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 160) = 0xBFE0000000000000;
  v20 = v17;
  v21 = v6;
  v22 = v19;
  sub_1BA76E82C(inited);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v25 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

void sub_1BAAB1E90(id a1, _BYTE *a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  if (*a2)
  {
    if (*a2 == 1)
    {
      objc_msgSend(a1, sel_setClipsToBounds_, 1);
      v4 = objc_msgSend(a1, sel_layer);
      objc_msgSend(v4, sel_setCornerRadius_, 4.5);

      v5 = *(_QWORD *)(v2 + 96);
    }
    else
    {
      objc_msgSend(a1, sel_setClipsToBounds_, 1);
      v7 = objc_msgSend(a1, sel_layer);
      objc_msgSend(v7, sel_setCornerRadius_, 4.5);

      v5 = *(_QWORD *)(v2 + 104);
    }
    objc_msgSend(a1, sel_setBackgroundColor_, v5);
  }
  else
  {
    objc_msgSend(a1, sel_setClipsToBounds_, 0);
    v6 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v6, sel_setCornerRadius_, 0.0);

    v8 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(a1, sel_setBackgroundColor_, v8);

  }
}

void sub_1BAAB2000(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  CGRect v19;

  v3 = sub_1BB86F658();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == *MEMORY[0x1E0DB6BE8])
  {
    v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v9, sel_setBorderWidth_, 0.0);
LABEL_8:

    return;
  }
  if (v8 == *MEMORY[0x1E0DB6BF0])
  {
    v10 = *(void **)(v1 + 128);
    v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor;
    v12 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor];
    *(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor] = v10;
    v13 = v10;

    v14 = objc_msgSend(a1, sel_layer);
    v15 = *(void **)&a1[v11];
    if (v15)
      v16 = objc_msgSend(v15, sel_CGColor);
    else
      v16 = 0;
    objc_msgSend(v14, sel_setBorderColor_, v16);

    v17 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v17, sel_setBorderWidth_, 1.5);

    v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(a1, sel_bounds);
    objc_msgSend(v9, sel_setCornerRadius_, CGRectGetHeight(v19) * 0.5);
    goto LABEL_8;
  }
  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BAAB2264()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v5 = *(void **)(v0 + 48);

  v6 = *(void **)(v0 + 64);
  v7 = *(void **)(v0 + 72);
  v8 = *(void **)(v0 + 80);
  v9 = *(void **)(v0 + 88);
  v10 = *(void **)(v0 + 96);
  v11 = *(void **)(v0 + 104);
  v12 = *(void **)(v0 + 112);
  v13 = *(void **)(v0 + 120);

  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoverChannelViewStyler()
{
  return objc_opt_self();
}

double sub_1BAAB232C()
{
  return 4.5;
}

id sub_1BAAB2334()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 24), sel_lineHeight);
}

id sub_1BAAB2348()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 24), sel_pointSize);
}

id sub_1BAAB235C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_lineHeight);
}

id sub_1BAAB2370()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 32), sel_pointSize);
}

double sub_1BAAB2384()
{
  return 2.5;
}

id sub_1BAAB238C()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 72);
}

id sub_1BAAB2398()
{
  return sub_1BAAB13C0();
}

id sub_1BAAB23B8()
{
  return sub_1BAAB15D4();
}

id sub_1BAAB23D8()
{
  return sub_1BAAB17C8();
}

id sub_1BAAB23F8()
{
  return sub_1BAAB19BC();
}

id sub_1BAAB2418()
{
  return sub_1BAAB1C14();
}

void sub_1BAAB243C(void *a1, _BYTE *a2)
{
  sub_1BAAB1E90(a1, a2);
}

void sub_1BAAB245C(char *a1)
{
  sub_1BAAB2000(a1);
}

void sub_1BAAB247C(char *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(void **)(*(_QWORD *)v1 + 72);
  v4 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  v5 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState];
  *(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState] = v3;
  v6 = v3;

  objc_msgSend(a1, sel_setTintColor_, *(_QWORD *)&a1[v4]);
}

void sub_1BAAB24EC(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;

  objc_msgSend(a1, sel_setClipsToBounds_, 1);
  v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setCornerRadius_, 6.0);

  v3 = objc_msgSend(a1, sel_layer);
  v4 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v5 = objc_msgSend(v4, sel_CGColor);

  objc_msgSend(v3, sel_setShadowColor_, v5);
  v6 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v6, sel_setShadowOffset_, 0.0, 2.0);

  v7 = objc_msgSend(a1, sel_layer);
  LODWORD(v8) = 1045220557;
  objc_msgSend(v7, sel_setShadowOpacity_, v8);

  v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setShadowRadius_, 4.0);

  v10 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v10, sel_setMasksToBounds_, 0);

  v11 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  v16 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRect_, v12, v13, v14, v15);
  v17 = objc_msgSend(v16, sel_CGPath);

  objc_msgSend(v11, sel_setShadowPath_, v17);
}

uint64_t WebEmbedViewController.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t WebEmbedViewController.layoutIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*WebEmbedViewController.layoutIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id WebEmbedViewController.onReuse.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onReuse);
}

uint64_t sub_1BAAB2848@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)(double *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(double *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BAABEF28;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(double *))v6;
  return sub_1BA4BEB58(v4);
}

uint64_t sub_1BAAB28DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(double, double);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BAABEEF8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BA4BEB58(v3);
  return sub_1BA49EBE0(v8);
}

uint64_t WebEmbedViewController.onSizeInvalidation.getter()
{
  return sub_1BAAB2EB8(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation, (void (*)(_QWORD, _QWORD))sub_1BAABF114);
}

uint64_t WebEmbedViewController.onSizeInvalidation.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BAAB2F2C(a1, a2, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation, (uint64_t (*)(uint64_t, uint64_t))sub_1BAABF118);
}

uint64_t (*WebEmbedViewController.onSizeInvalidation.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t WebEmbedViewController.webLinkPresentingViewController.getter()
{
  return sub_1BAAB2C48(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webLinkPresentingViewController, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEF48]);
}

void sub_1BAAB2A14()
{
  uint64_t v0;
  void *v1;

  swift_beginAccess();
  v0 = swift_unknownObjectWeakAssign();
  v1 = (void *)MEMORY[0x1BCCE5D40](v0);
  swift_unknownObjectWeakAssign();

}

void WebEmbedViewController.webLinkPresentingViewController.setter(void *a1)
{
  uint64_t v2;
  void *v3;

  swift_beginAccess();
  v2 = swift_unknownObjectWeakAssign();
  v3 = (void *)MEMORY[0x1BCCE5D40](v2);
  swift_unknownObjectWeakAssign();

}

void (*WebEmbedViewController.webLinkPresentingViewController.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webLinkPresentingViewController;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCE5D40](v5);
  return sub_1BAAB2B94;
}

void sub_1BAAB2B94(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32) + *(_QWORD *)(v3 + 40);
    swift_endAccess();

    v6 = (void *)MEMORY[0x1BCCE5D40](v5);
    swift_unknownObjectWeakAssign();

  }
  free((void *)v3);
}

uint64_t WebEmbedViewController.resizingProvider.getter()
{
  return sub_1BAAB2C48(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_resizingProvider, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEFA8]);
}

uint64_t sub_1BAAB2C48(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return a2(v4);
}

uint64_t WebEmbedViewController.resizingProvider.setter()
{
  swift_beginAccess();
  swift_weakAssign();
  return swift_release();
}

void (*WebEmbedViewController.resizingProvider.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_resizingProvider;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1BA9D4CB4;
}

uint64_t sub_1BAAB2D58@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BA4D7948;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BA4BEB58(v4);
}

uint64_t sub_1BAAB2DEC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BA4D7948;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BA4BEB58(v3);
  return sub_1BA49EBE0(v8);
}

uint64_t WebEmbedViewController.onEmbedInteraction.getter()
{
  return sub_1BAAB2EB8(&OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction, (void (*)(_QWORD, _QWORD))sub_1BA4BEB58);
}

uint64_t sub_1BAAB2EB8(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess();
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t WebEmbedViewController.onEmbedInteraction.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BAAB2F2C(a1, a2, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction, (uint64_t (*)(uint64_t, uint64_t))sub_1BA49EBE0);
}

uint64_t sub_1BAAB2F2C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  v9 = *v8;
  v10 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*WebEmbedViewController.onEmbedInteraction.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t WebEmbedViewController.showsLoadingSpinner.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  swift_beginAccess();
  return *v1;
}

id WebEmbedViewController.showsLoadingSpinner.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  double v4;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  swift_beginAccess();
  *v3 = a1;
  v4 = 0.0;
  if ((a1 & 1) != 0)
    v4 = 1.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator), sel_setAlpha_, v4);
}

void (*WebEmbedViewController.showsLoadingSpinner.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BAAB30E0;
}

void sub_1BAAB30E0(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  double v5;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = 0.0;
    if (*(_BYTE *)(v4 + v3[4]))
      v5 = 1.0;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator), sel_setAlpha_, v5);
  }
  free(v3);
}

id WebEmbedViewController.errorView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView);
}

uint64_t sub_1BAAB3150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v19[-v11];
  v13 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
  swift_beginAccess();
  sub_1BA4C2DD8(v13, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  swift_beginAccess();
  sub_1BAABEF90(a1, v13, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  swift_endAccess();
  sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    v14 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
    v15 = (uint64_t)v9;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager), v16);
    (*(void (**)(uint64_t, _UNKNOWN **, _BYTE *, uint64_t, uint64_t))(v17 + 24))(v1, &protocol witness table for WebEmbedViewController, v6, v16, v17);
    v15 = (uint64_t)v6;
    v14 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
  }
  sub_1BA4A2E80(v15, v14);
  sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
}

uint64_t sub_1BAAB3340(uint64_t a1)
{
  return sub_1BAAB3388(a1, &qword_1ED3A3360);
}

uint64_t sub_1BAAB3364(uint64_t a1)
{
  return sub_1BAAB3388(a1, &qword_1ED3A2528);
}

uint64_t sub_1BAAB3388(uint64_t a1, _QWORD *a2)
{
  sub_1BB86D294();
  sub_1BB86D27C();
  if (*a2 != -1)
    swift_once();
  sub_1BB86D270();
  return swift_release();
}

id sub_1BAAB3400()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t inited;
  unint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  id v89;
  id v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  unint64_t aBlock;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  uint64_t v101;

  v1 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v2 = (void *)sub_1BB872970();
  v95 = objc_msgSend(v1, sel_initWithName_, v2);

  v3 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v4 = (void *)sub_1BB872970();
  v91 = objc_msgSend(v3, sel_initWithName_, v4);

  v5 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE5DC;
  v101 = v5;
  v6 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v97 = 1107296256;
  v98 = sub_1BAAB8B50;
  v99 = &block_descriptor_18;
  v7 = _Block_copy(&aBlock);
  swift_release();
  v8 = objc_msgSend(v91, sel_onWillEnter_, v7);
  _Block_release(v7);
  v9 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE604;
  v101 = v9;
  aBlock = v6;
  v97 = 1107296256;
  v98 = sub_1BAAB8B50;
  v99 = &block_descriptor_18_1;
  v10 = _Block_copy(&aBlock);
  swift_release();
  v11 = objc_msgSend(v8, sel_onWillExit_, v10);
  _Block_release(v10);

  v12 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v13 = (void *)sub_1BB872970();
  v14 = objc_msgSend(v12, sel_initWithName_, v13);

  v15 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE62C;
  v101 = v15;
  aBlock = v6;
  v97 = 1107296256;
  v98 = sub_1BAAB8B50;
  v99 = &block_descriptor_22_0;
  v16 = _Block_copy(&aBlock);
  swift_release();
  v17 = objc_msgSend(v14, sel_onWillEnter_, v16);
  _Block_release(v16);
  v18 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE634;
  v101 = v18;
  aBlock = v6;
  v97 = 1107296256;
  v98 = sub_1BAAB9508;
  v99 = &block_descriptor_26_0;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v17, sel_onDidEnter_, v19);
  _Block_release(v19);

  v21 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE63C;
  v101 = v21;
  aBlock = v6;
  v97 = 1107296256;
  v98 = sub_1BAAB8B50;
  v99 = &block_descriptor_30;
  v22 = _Block_copy(&aBlock);
  swift_release();
  v23 = objc_msgSend(v20, sel_onWillExit_, v22);
  _Block_release(v22);

  v24 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState) = v14;
  v25 = v14;

  v26 = objc_allocWithZone(MEMORY[0x1E0D60B10]);
  v27 = (void *)sub_1BB872970();
  v28 = objc_msgSend(v26, sel_initWithName_, v27);

  v29 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE644;
  v101 = v29;
  aBlock = v6;
  v97 = 1107296256;
  v98 = sub_1BAAB8B50;
  v99 = &block_descriptor_34_0;
  v30 = _Block_copy(&aBlock);
  swift_release();
  v31 = objc_msgSend(v28, sel_onWillEnter_, v30);
  _Block_release(v30);
  v32 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v100 = sub_1BAABE64C;
  v101 = v32;
  aBlock = v6;
  v97 = 1107296256;
  v98 = sub_1BAAB8B50;
  v99 = &block_descriptor_38;
  v33 = _Block_copy(&aBlock);
  swift_release();
  v34 = objc_msgSend(v31, sel_onWillExit_, v33);
  _Block_release(v33);

  v35 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState) = v28;
  v36 = v28;

  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D60B00]), sel_initWithState_withOwner_, v95, v0);
  objc_msgSend(v37, sel_addState_, v91);
  objc_msgSend(v37, sel_addState_, v25);
  objc_msgSend(v37, sel_addState_, v36);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB895110;
  *(_QWORD *)(inited + 32) = v25;
  *(_QWORD *)(inited + 40) = v36;
  *(_QWORD *)(inited + 48) = v91;
  aBlock = inited;
  sub_1BB872DCC();
  v39 = aBlock;
  if (!(aBlock >> 62))
  {
    v40 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
    v41 = v25;
    v42 = v36;
    v43 = v91;
    if (!v40)
      goto LABEL_5;
    goto LABEL_3;
  }
  v44 = v25;
  v45 = v36;
  v46 = v91;
  swift_bridgeObjectRetain();
  v47 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v47)
LABEL_3:
    sub_1BA862420(v39);
LABEL_5:
  swift_bridgeObjectRelease();
  v48 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v49 = v95;
  v50 = (void *)sub_1BB872970();
  sub_1BA49A224(0, (unint64_t *)&unk_1ED39C010);
  sub_1BAABE654();
  v51 = (void *)sub_1BB873024();
  swift_bridgeObjectRelease();
  v93 = objc_msgSend(v48, sel_initWithName_transitionFromStates_toState_, v50, v51, v49);

  v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_1BB895110;
  *(_QWORD *)(v52 + 32) = v49;
  *(_QWORD *)(v52 + 40) = v25;
  *(_QWORD *)(v52 + 48) = v36;
  aBlock = v52;
  sub_1BB872DCC();
  v53 = aBlock;
  if (!(aBlock >> 62))
  {
    v54 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
    v55 = v25;
    v56 = v36;
    v57 = v49;
    v94 = v49;
    if (!v54)
      goto LABEL_9;
    goto LABEL_7;
  }
  v58 = v25;
  v59 = v36;
  v60 = v49;
  swift_bridgeObjectRetain();
  v61 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v94 = v49;
  if (v61)
LABEL_7:
    sub_1BA862420(v53);
LABEL_9:
  swift_bridgeObjectRelease();
  v62 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v63 = v91;
  v64 = (void *)sub_1BB872970();
  v65 = (void *)sub_1BB873024();
  swift_bridgeObjectRelease();
  v92 = objc_msgSend(v62, sel_initWithName_transitionFromStates_toState_, v64, v65, v63);

  v66 = swift_initStackObject();
  *(_OWORD *)(v66 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v66 + 32) = v63;
  aBlock = v66;
  sub_1BB872DCC();
  v67 = aBlock;
  if (!(aBlock >> 62))
  {
    v68 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
    v69 = v63;
    if (!v68)
      goto LABEL_13;
    goto LABEL_11;
  }
  v70 = v63;
  swift_bridgeObjectRetain();
  v71 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v71)
LABEL_11:
    sub_1BA862420(v67);
LABEL_13:
  swift_bridgeObjectRelease();
  v72 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v73 = v25;
  v74 = (void *)sub_1BB872970();
  v75 = (void *)sub_1BB873024();
  swift_bridgeObjectRelease();
  v76 = objc_msgSend(v72, sel_initWithName_transitionFromStates_toState_, v74, v75, v73);

  v77 = swift_initStackObject();
  *(_OWORD *)(v77 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v77 + 32) = v63;
  *(_QWORD *)(v77 + 40) = v73;
  aBlock = v77;
  sub_1BB872DCC();
  v78 = aBlock;
  if (aBlock >> 62)
  {
    v82 = v73;
    v83 = v63;
    swift_bridgeObjectRetain();
    v84 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v84)
      goto LABEL_17;
    goto LABEL_15;
  }
  v79 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
  v80 = v73;
  v81 = v63;
  if (v79)
LABEL_15:
    sub_1BA862420(v78);
LABEL_17:
  swift_bridgeObjectRelease();
  v85 = objc_allocWithZone(MEMORY[0x1E0D60B08]);
  v86 = v36;
  v87 = (void *)sub_1BB872970();
  v88 = (void *)sub_1BB873024();
  swift_bridgeObjectRelease();
  v89 = objc_msgSend(v85, sel_initWithName_transitionFromStates_toState_, v87, v88, v86);

  objc_msgSend(v37, sel_addEvent_, v93);
  objc_msgSend(v37, sel_addEvent_, v92);
  objc_msgSend(v37, sel_addEvent_, v76);
  objc_msgSend(v37, sel_addEvent_, v89);
  objc_msgSend(v37, sel_activate);

  return v37;
}

void sub_1BAAB3EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BAAB3F04();

  }
}

id sub_1BAAB3F04()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id result;
  uint64_t v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  id v44;
  char v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  id v49;
  uint64_t *v50;
  id v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  _QWORD v54[5];

  v1 = v0;
  v2 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - v6;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v53 = (uint64_t)&v50 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL];
  swift_beginAccess();
  sub_1BA4C2DD8(v20, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v21(v15, 1, v16) == 1)
    return (id)sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v52 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v52(v19, v15, v16);
  v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location];
  if (!v23)
    return (id)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v51 = *(id *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  sub_1BA4C010C((uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_configurationProvider], (uint64_t)v54);
  v50 = __swift_project_boxed_opaque_existential_1(v54, v54[3]);
  swift_unknownObjectRetain();
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v24 = result;
    objc_msgSend(result, sel_bounds);
    v26 = v25;
    v28 = v27;

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView], sel_frame);
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v37 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL];
    swift_beginAccess();
    sub_1BA4C2DD8(v37, v53, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BB86E164();
    sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatPictureInPictureModel);
    v38 = 1;
    if (v21(v4, 1, v16) != 1)
    {
      v52(v10, v4, v16);
      v38 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, v38, 1, v16);
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPictureInPictureModel);
    v39 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration];
    v40 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager];
    v41 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24];
    v42 = *((_QWORD *)v40 + 4);
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v43 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8);
    v44 = v39;
    v45 = v43(v41, v42);
    v46 = *v50;
    ObjectType = swift_getObjectType();
    v48 = v53;
    v49 = sub_1BB4A3ED4(v53, v23, (uint64_t)v19, (uint64_t)v10, v44, v45 & 1, v46, ObjectType, v26, v28, v30, v32, v34, v36);

    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    objc_msgSend(v51, sel_setConfiguration_, v49);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall WebEmbedViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  objc_class *v25;
  id v26;
  char *v27;
  id v28;
  void *v29;
  void *v30;
  char *v31;
  id v32;
  char *v33;
  id v34;
  void *v35;
  void *v36;
  objc_super v37;

  v1 = v0;
  v37.receiver = v0;
  v37.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v37, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_19;
  }
  v3 = v2;
  objc_msgSend(v2, sel_setClipsToBounds_, 1);

  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v5 = v4;
  objc_msgSend(v4, sel_setAutoresizingMask_, 0);

  v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  objc_msgSend(v1, sel_addChildViewController_, v6);
  v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v8 = v7;
  v9 = objc_msgSend(v6, sel_view);
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v10 = v9;
  objc_msgSend(v8, sel_addSubview_, v9);

  objc_msgSend(v6, sel_prewarm);
  v11 = objc_msgSend(v6, sel_view);
  if (!v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = v11;
  objc_msgSend(v11, sel_setHidden_, 1);

  objc_msgSend(v6, sel_didMoveToParentViewController_, v1);
  v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator];
  objc_msgSend(v13, sel_setAutoresizingMask_, 18);
  v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v15 = v14;
  objc_msgSend(v14, sel_addSubview_, v13);

  v16 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];
  objc_msgSend(v16, sel_setAutoresizingMask_, 18);
  objc_msgSend(v16, sel_setHidden_, 1);
  v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v18 = v17;
  objc_msgSend(v17, sel_addSubview_, v16);

  v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView];
  objc_msgSend(v19, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v19, sel_setAutoresizingMask_, 18);
  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v20;
  objc_msgSend(v20, sel_addSubview_, v19);

  v22 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
  if (v22)
  {
    v23 = v22;
    v24 = (void *)sub_1BB872970();

  }
  if (qword_1ED3A70B0 != -1)
    swift_once();
  if (byte_1ED3ACA20 == 1)
  {
    v25 = (objc_class *)type metadata accessor for WebEmbedDebugView();
    v26 = objc_allocWithZone(v25);
    v27 = sub_1BB19CF38(1);
    v28 = objc_msgSend(v1, sel_view);
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, sel_addSubview_, v27);

      v30 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
      *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView] = v27;
      v31 = v27;

      v32 = objc_allocWithZone(v25);
      v33 = sub_1BB19CF38(0);
      v34 = objc_msgSend(v1, sel_view);
      if (v34)
      {
        v35 = v34;
        objc_msgSend(v34, sel_addSubview_, v33);

        v36 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
        *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView] = v33;

        return;
      }
LABEL_27:
      __break(1u);
      return;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
}

Swift::Void __swiftcall WebEmbedViewController.viewDidLayoutSubviews()()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  double v65;
  double v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  objc_super v72;

  v72.receiver = v0;
  v72.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v72, sel_viewDidLayoutSubviews);
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController], sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_18;
  }
  v2 = v1;
  v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v4 = v3;
  objc_msgSend(v3, sel_bounds);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  sub_1BAAB3F04();
  v13 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView], sel_frame);
  objc_msgSend(v13, sel_setFrame_);
  v14 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator];
  v15 = &v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner];
  swift_beginAccess();
  v16 = 0.0;
  v17 = 0.0;
  v18 = 0.0;
  v19 = 0.0;
  if (*v15 == 1)
  {
    v20 = objc_msgSend(v0, sel_view);
    if (!v20)
    {
LABEL_25:
      __break(1u);
      return;
    }
    v21 = v20;
    objc_msgSend(v20, sel_bounds);
    v16 = v22;
    v17 = v23;
    v18 = v24;
    v19 = v25;

  }
  objc_msgSend(v14, sel_setFrame_, v16, v17, v18, v19);
  v26 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v0, sel_view);
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, sel_bounds);
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v37 = v36;

      objc_msgSend(v27, sel_setFrame_, v31, v33, v35, v37);
      v38 = objc_msgSend(v27, sel_layer);
      v39 = objc_msgSend(v0, sel_view);
      if (v39)
      {
        v40 = v39;
        v41 = objc_msgSend(v39, sel_layer);

        objc_msgSend(v41, sel_cornerRadius);
        v43 = v42;

        objc_msgSend(v38, sel_setCornerRadius_, v43);
        v44 = objc_msgSend(v27, sel_layer);
        v45 = objc_msgSend(v0, sel_view);
        if (v45)
        {
          v46 = v45;
          v47 = objc_msgSend(v45, sel_layer);

          v48 = objc_msgSend(v47, sel_cornerCurve);
          objc_msgSend(v44, sel_setCornerCurve_, v48);

          goto LABEL_11;
        }
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_11:
  v49 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
  if (!v49)
    return;
  v50 = v49;
  v51 = objc_msgSend(v0, sel_view);
  if (!v51)
    goto LABEL_22;
  v52 = v51;
  objc_msgSend(v51, sel_bounds);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;

  objc_msgSend(v50, sel_setFrame_, v54, v56, v58, v60);
  v61 = objc_msgSend(v50, sel_layer);
  v62 = objc_msgSend(v0, sel_view);
  if (!v62)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v63 = v62;
  v64 = objc_msgSend(v62, sel_layer);

  objc_msgSend(v64, sel_cornerRadius);
  v66 = v65;

  objc_msgSend(v61, sel_setCornerRadius_, v66);
  v67 = objc_msgSend(v50, sel_layer);
  v68 = objc_msgSend(v0, sel_view);
  if (!v68)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v69 = v68;
  v70 = objc_msgSend(v68, sel_layer);

  v71 = objc_msgSend(v70, sel_cornerCurve);
  objc_msgSend(v67, sel_setCornerCurve_, v71);

}

Swift::Void __swiftcall WebEmbedViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  char v32;
  _QWORD v33[2];
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38.receiver = v1;
  v38.super_class = ObjectType;
  objc_msgSendSuper2(&v38, sel_viewWillAppear_, a1, v8);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v11 = sub_1BB86EFEC();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED4764A8);
  v12 = v1;
  v13 = sub_1BB86EFC8();
  v14 = sub_1BB87330C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v37 = v35;
    *(_DWORD *)v15 = 136315138;
    v33[1] = v15 + 4;
    v34 = v15;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v16 + 56) = ObjectType;
    *(_QWORD *)(v16 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v16 + 32) = v12;
    v17 = v12;
    v18 = sub_1BB8729D0();
    v20 = v19;
    v21 = (uint64_t)&v17[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    sub_1BA4C2DD8(v21, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v22 = (uint64_t)&v17[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    sub_1BA4C2DD8(v22, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v23 = sub_1BAABDDAC(v18, v20, (uint64_t)v10, (uint64_t)v6);
    v36 = sub_1BA5D2E14(v23, v24, &v37);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    v25 = v34;
    _os_log_impl(&dword_1BA493000, v13, v14, "View will appear, %s", v34, 0xCu);
    v26 = v35;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v26, -1, -1);
    MEMORY[0x1BCCE5C38](v25, -1, -1);

  }
  else
  {

  }
  sub_1BAAB5080();
  sub_1BAAB5284();
  v27 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
  if (v27)
  {
    v28 = objc_msgSend(v27, sel_state);
    if (v28)
    {
      v29 = v28;
      v30 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState];
      if (v30)
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        v31 = v30;
        v32 = sub_1BB8738B8();

        if ((v32 & 1) != 0)
          sub_1BAAB5388();
      }
      else
      {

      }
    }
  }
}

void sub_1BAAB5080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v1 = v0;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WebEmbedDataVisualization();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v10)
  {
    v11 = objc_msgSend(v10, sel_state, v7);
    if (v11)
    {
      v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
      if (v12)
      {
        v20 = v11;
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        v13 = v12;
        v14 = sub_1BB8738B8();

        if ((v14 & 1) != 0)
        {
          v15 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
          swift_beginAccess();
          sub_1BA4C2DD8(v15, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {
            v16 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
            v17 = (uint64_t)v4;
          }
          else
          {
            sub_1BA5193C4((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24);
            v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32);
            __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager), v18);
            (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v19 + 16))(v1, &protocol witness table for WebEmbedViewController, v9, v18, v19);
            v17 = (uint64_t)v9;
            v16 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
          }
          sub_1BA4A2E80(v17, v16);
        }
      }
      else
      {

      }
    }
  }
}

void sub_1BAAB5284()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v1)
  {
    v2 = v0;
    v3 = objc_msgSend(v1, sel_state);
    if (v3)
    {
      v4 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
      if (v4)
      {
        v9 = v3;
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        v5 = v4;
        v6 = sub_1BB8738B8();

        if ((v6 & 1) != 0 && (sub_1BAAB8150() & 1) != 0)
        {
          v7 = *(_QWORD *)(v2
                         + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager
                         + 24);
          v8 = *(_QWORD *)(v2
                         + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager
                         + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager), v7);
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 40))(v2, &protocol witness table for WebEmbedViewController, v7, v8);
        }
      }
      else
      {

      }
    }
  }
}

uint64_t sub_1BAAB5388()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t ObjectType;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v51 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - v17;
  v19 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
  swift_beginAccess();
  sub_1BA4C2DD8(v19, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v20(v11, 1, v12) == 1)
    return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v50 = v3;
  v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v22(v18, v11, v12);
  v23 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location];
  if (!v23)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v24 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL];
  swift_beginAccess();
  sub_1BA4C2DD8(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if (v20(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  }
  else
  {
    v22(v15, v8, v12);
    v25 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_delegate]
        + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier;
    v26 = *(_QWORD *)(v25 + 8);
    if (v26)
    {
      v49 = *(void **)v25;
      v27 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSend(v27, sel_frame);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v36 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL];
      swift_beginAccess();
      sub_1BA4C2DD8(v36, v51, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v37 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize];
      v38 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize + 8];
      v39 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      v40 = v50;
      sub_1BA4C2DD8(v39, (uint64_t)v50, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v48 = v26;
      v41 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration];
      ObjectType = swift_getObjectType();
      v43 = v41;
      v46 = v0;
      v44 = v51;
      sub_1BAABB968((uint64_t)v18, v51, v23, (uint64_t)v15, v40, v49, v48, v43, v29, v31, v33, v35, v37, v38, v46, ObjectType);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      sub_1BA4A2E80((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    v45 = *(void (**)(char *, uint64_t))(v13 + 8);
    v45(v15, v12);
    return ((uint64_t (*)(char *, uint64_t))v45)(v18, v12);
  }
}

Swift::Void __swiftcall WebEmbedViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _QWORD *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53[3];
  objc_super v54;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for WebEmbedDataVisualization();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v46 - v12;
  sub_1BA6EF3B0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54.receiver = v1;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, sel_viewDidDisappear_, a1, v15);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v18 = sub_1BB86EFEC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED4764A8);
  v19 = v1;
  v20 = sub_1BB86EFC8();
  v21 = sub_1BB87330C();
  v51 = v21;
  v22 = &unk_1ED3CA000;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v53[0] = v48;
    v49 = v5;
    *(_DWORD *)v23 = 136315138;
    v46[1] = v23 + 12;
    v47 = v23;
    v46[0] = v23 + 4;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    v50 = v4;
    v25 = v24;
    *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v24 + 56) = ObjectType;
    *(_QWORD *)(v24 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v25 + 32) = v19;
    v26 = v19;
    v27 = sub_1BB8729D0();
    v28 = v7;
    v30 = v29;
    v31 = (uint64_t)&v26[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    sub_1BA4C2DD8(v31, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v32 = (uint64_t)&v26[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    sub_1BA4C2DD8(v32, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v33 = v27;
    v4 = v50;
    v34 = v30;
    v7 = v28;
    v35 = sub_1BAABDDAC(v33, v34, (uint64_t)v17, (uint64_t)v13);
    v52 = sub_1BA5D2E14(v35, v36, v53);
    v5 = v49;
    sub_1BB873A8C();

    v22 = (_QWORD *)&unk_1ED3CA000;
    swift_bridgeObjectRelease();
    v37 = v47;
    _os_log_impl(&dword_1BA493000, v20, (os_log_type_t)v51, "View did disappear, %s", v47, 0xCu);
    v38 = v48;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v38, -1, -1);
    MEMORY[0x1BCCE5C38](v37, -1, -1);

  }
  else
  {

  }
  v39 = (uint64_t)&v19[v22[103]];
  swift_beginAccess();
  sub_1BA4C2DD8(v39, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    v40 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
    v41 = (uint64_t)v10;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v42 = *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24];
    v43 = *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32];
    __swift_project_boxed_opaque_existential_1(&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager], v42);
    (*(void (**)(char *, _UNKNOWN **, char *, uint64_t, uint64_t))(v43 + 24))(v19, &protocol witness table for WebEmbedViewController, v7, v42, v43);
    v41 = (uint64_t)v7;
    v40 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
  }
  sub_1BA4A2E80(v41, v40);
  v44 = *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24];
  v45 = *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 32];
  __swift_project_boxed_opaque_existential_1(&v19[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager], v44);
  (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v45 + 48))(v19, &protocol witness table for WebEmbedViewController, v44, v45);
}

id WebEmbedViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  char *v3;
  id result;
  objc_super v8;

  v8.receiver = v3;
  v8.super_class = (Class)swift_getObjectType();
  result = objc_msgSendSuper2(&v8, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if (v3[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable] == 1)
    return objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager], sel_prepareForLegacyResize);
  return result;
}

uint64_t WebEmbedViewController.accessibilityElements.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController), sel_accessibilityElements);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t (*WebEmbedViewController.accessibilityElements.modify(uint64_t *a1))()
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController), sel_accessibilityElements);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BB872DB4();

  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  return destroy for FormatOptionBindingModifier;
}

Swift::Void __swiftcall WebEmbedViewController.prepare(contentFrame:isResizable:)(__C::CGRect contentFrame, Swift::Bool isResizable)
{
  uint64_t v2;
  double height;
  double width;
  double y;
  double x;
  void *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGRect v13;
  CGRect v14;

  height = contentFrame.size.height;
  width = contentFrame.size.width;
  y = contentFrame.origin.y;
  x = contentFrame.origin.x;
  v8 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView);
  objc_msgSend(v8, sel_frame);
  v14.origin.x = v9;
  v14.origin.y = v10;
  v14.size.width = v11;
  v14.size.height = v12;
  v13.origin.x = x;
  v13.origin.y = y;
  v13.size.width = width;
  v13.size.height = height;
  if (!CGRectEqualToRect(v13, v14))
  {
    objc_msgSend(v8, sel_setFrame_, x, y, width, height);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged) = 1;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable) = isResizable;
}

void WebEmbedViewController.populate(with:contentFrame:dataFeedURL:location:sourceURL:viewportSize:dataVisualization:identifier:feedConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, void *a6, uint64_t a7, char *a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, double a13, double a14)
{
  char *v14;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  sub_1BAABB968(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v14, ObjectType);
}

uint64_t sub_1BAAB6118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t, double);
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v59 = a3;
  v67 = a2;
  v5 = type metadata accessor for WebEmbedDataVisualization();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9ED538(0, &qword_1ED3A7A70, sub_1BA6CAB4C);
  v62 = v7;
  MEMORY[0x1E0C80A78](v7);
  v65 = (uint64_t)&v57 - v8;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v9);
  v60 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v68 = (uint64_t)&v57 - v12;
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3B04F0, (void (*)(uint64_t))sub_1BA6EF3B0);
  v14 = v13;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v57 - v15;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v17);
  v66 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v57 - v20;
  v22 = sub_1BB86C67C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v61 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v57 - v27;
  v29 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged);
  v30 = *(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16);
  v30((char *)&v57 - v27, a1, v22, v26);
  if (v29 == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
LABEL_9:
    v35 = v68;
    sub_1BA4C2DD8(v67, v68, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
LABEL_10:
    sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    return 1;
  }
  v31 = v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v30)(v21, v28, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  v32 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1BA4C2DD8(v31, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8((uint64_t)v21, v32, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v34 = v3;
  if (v33((uint64_t)v16, 1, v22) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    if (v33(v32, 1, v22) == 1)
    {
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v35 = v68;
      sub_1BA4C2DD8(v67, v68, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      goto LABEL_13;
    }
LABEL_8:
    sub_1BA9ED590((uint64_t)v16, (unint64_t *)&qword_1ED3B04F0, (void (*)(uint64_t))sub_1BA6EF3B0);
    goto LABEL_9;
  }
  v36 = v66;
  sub_1BA4C2DD8((uint64_t)v16, v66, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if (v33(v32, 1, v22) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v37 = *(void (**)(char *, uint64_t))(v23 + 8);
    v37(v28, v22);
    v37((char *)v36, v22);
    goto LABEL_8;
  }
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v61, v32, v22);
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v40 = sub_1BB872958();
  v41 = *(void (**)(char *, uint64_t))(v23 + 8);
  v41(v39, v22);
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v41(v28, v22);
  v41((char *)v36, v22);
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v35 = v68;
  sub_1BA4C2DD8(v67, v68, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((v40 & 1) == 0)
    goto LABEL_10;
LABEL_13:
  v42 = v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
  swift_beginAccess();
  v43 = v65;
  v44 = v65 + *(int *)(v62 + 48);
  sub_1BA4C2DD8(v42, v65, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4C2DD8(v35, v44, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v45 = v64;
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v46(v43, 1, v64) == 1)
  {
    sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    if (v46(v44, 1, v45) == 1)
      goto LABEL_22;
LABEL_18:
    sub_1BA9ED590(v43, &qword_1ED3A7A70, sub_1BA6CAB4C);
    return 1;
  }
  v47 = v60;
  sub_1BA4C2DD8(v43, v60, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if (v46(v44, 1, v45) == 1)
  {
    sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_18;
  }
  v48 = v58;
  sub_1BA5193C4(v44, v58, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v49 = WebEmbedDataVisualization.identifier.getter();
  v51 = v50;
  if (v49 == WebEmbedDataVisualization.identifier.getter() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_22:
    sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    goto LABEL_23;
  }
  v56 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((v56 & 1) == 0)
    return 1;
LABEL_23:
  v53 = *(void **)(v34 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration);
  sub_1BA49A224(0, &qword_1ED3AB1F0);
  v54 = v53;
  v55 = sub_1BB8738B8();

  if ((v55 & 1) == 0)
    return 1;
  return objc_msgSend(*(id *)(v34 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView), sel_isHidden) ^ 1;
}

void sub_1BAAB682C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, _QWORD *);
  uint64_t v46;
  objc_class *SuccessContext;
  char *v48;
  id v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  id v54;
  _QWORD v55[3];
  uint8_t *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  objc_super v64;
  uint64_t v65[3];

  v6 = (_QWORD *)sub_1BB86C8B0();
  v7 = *(v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_projectBox();
  swift_beginAccess();
  v17 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v17)
  {
    v18 = (void *)v17;
    v61 = a2;
    if (qword_1ED3A25E8 != -1)
      swift_once();
    v19 = sub_1BB86EFEC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED4764A8);
    v20 = v18;
    v21 = sub_1BB86EFC8();
    v22 = sub_1BB87330C();
    v23 = v22;
    v24 = os_log_type_enabled(v21, v22);
    v62 = a3;
    if (v24)
    {
      v59 = v7;
      v25 = swift_slowAlloc();
      v57 = v23;
      v26 = (uint8_t *)v25;
      v58 = swift_slowAlloc();
      v65[0] = v58;
      v60 = v6;
      v56 = v26;
      *(_DWORD *)v26 = 136315138;
      v55[2] = v26 + 12;
      v55[1] = v26 + 4;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v27 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(_QWORD *)(v27 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v27 + 32) = v20;
      v28 = v20;
      v29 = sub_1BB8729D0();
      v30 = v9;
      v32 = v31;
      v33 = v16;
      v34 = (uint64_t)&v28[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BA4C2DD8(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v35 = &v28[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      v36 = (uint64_t)v35;
      v16 = v33;
      sub_1BA4C2DD8(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v37 = v32;
      v9 = v30;
      v38 = sub_1BAABDDAC(v29, v37, (uint64_t)v15, (uint64_t)v12);
      v63 = sub_1BA5D2E14(v38, v39, v65);
      v6 = v60;
      sub_1BB873A8C();

      v7 = v59;
      swift_bridgeObjectRelease();
      v40 = v56;
      _os_log_impl(&dword_1BA493000, v21, (os_log_type_t)v57, "Did finish presenting, %s", v56, 0xCu);
      v41 = v58;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v41, -1, -1);
      MEMORY[0x1BCCE5C38](v40, -1, -1);

    }
    else
    {

    }
    v42 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
    if (v42)
    {
      v60 = v42;
      v43 = (void *)sub_1BB872970();
      swift_beginAccess();
      v44 = v16;
      v45 = *(void (**)(char *, uint64_t, _QWORD *))(v7 + 16);
      v45(v9, v44, v6);
      v46 = v7;
      SuccessContext = (objc_class *)type metadata accessor for LoadSuccessContext(0);
      v48 = v9;
      v49 = objc_allocWithZone(SuccessContext);
      v50 = v62;
      swift_bridgeObjectRetain();
      v51 = (char *)v49;
      sub_1BB86C8A4();
      v52 = &v51[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_identifier];
      *(_QWORD *)v52 = v61;
      *((_QWORD *)v52 + 1) = v50;
      v45(&v51[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_startDate], (uint64_t)v48, v6);

      v64.receiver = v51;
      v64.super_class = SuccessContext;
      v53 = objc_msgSendSuper2(&v64, sel_init);
      (*(void (**)(char *, _QWORD *))(v46 + 8))(v48, v6);
      v54 = v60;

    }
    sub_1BAAB6D38();

  }
}

id sub_1BAAB6D38()
{
  char *v0;
  uint64_t *v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double Width;
  double v27;
  CGRect v28;
  CGRect v29;

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier];
  result = (id)swift_beginAccess();
  v3 = v1[1];
  if (v3 && v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable] == 1)
  {
    v4 = *v1;
    v5 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
    swift_bridgeObjectRetain();
    objc_msgSend(v5, sel_height);
    v7 = v6;
    result = objc_msgSend(v0, sel_view);
    if (result)
    {
      v8 = result;
      objc_msgSend(result, sel_bounds);
      v10 = v9;
      v12 = v11;
      v14 = v13;
      v16 = v15;

      v28.origin.x = v10;
      v28.origin.y = v12;
      v28.size.width = v14;
      v28.size.height = v16;
      if (v7 == CGRectGetHeight(v28))
        return (id)swift_bridgeObjectRelease();
      swift_beginAccess();
      if (!swift_weakLoadStrong())
        return (id)swift_bridgeObjectRelease();
      result = objc_msgSend(v0, sel_view);
      if (result)
      {
        v17 = result;
        objc_msgSend(result, sel_bounds);
        v19 = v18;
        v21 = v20;
        v23 = v22;
        v25 = v24;

        v29.origin.x = v19;
        v29.origin.y = v21;
        v29.size.width = v23;
        v29.size.height = v25;
        Width = CGRectGetWidth(v29);
        objc_msgSend(v5, sel_height);
        sub_1BA9D09DC(v4, v3, Width, v27, *(double *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize], *(double *)&v0[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize + 8]);
        swift_release();
        return (id)swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_1BAAB6F18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  _QWORD v35[2];
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C8B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + 16;
  v13 = swift_projectBox();
  swift_beginAccess();
  v14 = MEMORY[0x1BCCE5D40](v12);
  if (v14)
  {
    v15 = (void *)v14;
    sub_1BB86C8A4();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v13, v11, v8);
    if (qword_1ED3A25E8 != -1)
      swift_once();
    v16 = sub_1BB86EFEC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED4764A8);
    v17 = v15;
    v18 = sub_1BB86EFC8();
    v19 = sub_1BB87330C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v39 = v37;
      *(_DWORD *)v20 = 136315138;
      v35[1] = v20 + 4;
      v36 = v20;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v21 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(_QWORD *)(v21 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v21 + 32) = v17;
      v22 = v17;
      v23 = sub_1BB8729D0();
      v25 = v24;
      v26 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BA4C2DD8(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v27 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      sub_1BA4C2DD8(v27, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v28 = sub_1BAABDDAC(v23, v25, (uint64_t)v7, (uint64_t)v4);
      v38 = sub_1BA5D2E14(v28, v29, &v39);
      sub_1BB873A8C();

      swift_bridgeObjectRelease();
      v30 = v36;
      _os_log_impl(&dword_1BA493000, v18, v19, "Will start presenting, %s", v36, 0xCu);
      v31 = v37;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v31, -1, -1);
      MEMORY[0x1BCCE5C38](v30, -1, -1);

    }
    else
    {

    }
    v32 = *(void **)&v17[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
    if (v32)
    {
      v33 = v32;
      v34 = (void *)sub_1BB872970();

    }
  }
}

void sub_1BAAB732C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  void (*v5)(void);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
    swift_beginAccess();
    v5 = (void (*)(void))*v4;
    sub_1BA4BEB58(*v4);

    if (v5)
    {
      v5();
      sub_1BA49EBE0((uint64_t)v5);
    }
  }
}

void sub_1BAAB73C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, _QWORD *);
  _BYTE *v52;
  _QWORD *v53;
  objc_class *FailureContext;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  id v62;
  id v63;
  _BYTE v64[4];
  int v65;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  objc_super v77;
  uint64_t v78[3];

  v8 = (_QWORD *)sub_1BB86C8B0();
  v9 = *(v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v73 = &v64[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v64[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v14);
  v16 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v74 = swift_projectBox();
  swift_beginAccess();
  v17 = MEMORY[0x1BCCE5D40](a2 + 16);
  if (v17)
  {
    v18 = (void *)v17;
    if (qword_1ED3A25E8 != -1)
      swift_once();
    v19 = sub_1BB86EFEC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED4764A8);
    v20 = a1;
    v21 = v18;
    v22 = a1;
    v23 = (char *)v21;
    v24 = sub_1BB86EFC8();
    v25 = sub_1BB87330C();
    v26 = v25;
    v27 = os_log_type_enabled(v24, v25);
    v70 = a3;
    v71 = a4;
    v72 = v23;
    if (v27)
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v67 = v24;
      v30 = (_QWORD *)v29;
      v66 = v29;
      v68 = swift_slowAlloc();
      v78[0] = v68;
      *(_DWORD *)v28 = 138543618;
      v31 = a1;
      v32 = _swift_stdlib_bridgeErrorToNSError();
      v69 = v8;
      v33 = v32;
      v76 = v32;
      sub_1BB873A8C();
      *v30 = v33;

      *(_WORD *)(v28 + 12) = 2080;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v34 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(_QWORD *)(v34 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v34 + 32) = v23;
      v35 = v23;
      v36 = sub_1BB8729D0();
      v37 = v9;
      v39 = v38;
      v65 = v26;
      v40 = (uint64_t)&v35[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BA4C2DD8(v40, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v41 = (uint64_t)&v35[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      sub_1BA4C2DD8(v41, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v42 = v39;
      v9 = v37;
      v43 = sub_1BAABDDAC(v36, v42, (uint64_t)v16, (uint64_t)v13);
      v75 = sub_1BA5D2E14(v43, v44, v78);
      sub_1BB873A8C();

      v8 = v69;
      swift_bridgeObjectRelease();
      v45 = v67;
      _os_log_impl(&dword_1BA493000, v67, (os_log_type_t)v65, "Failed loading with error=%{public}@, %s", (uint8_t *)v28, 0x16u);
      sub_1BA92CD5C();
      v46 = v66;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v46, -1, -1);
      v47 = v68;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v47, -1, -1);
      MEMORY[0x1BCCE5C38](v28, -1, -1);

      v23 = v72;
    }
    else
    {

    }
    v48 = *(void **)&v23[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
    if (v48)
    {
      v69 = v48;
      v49 = (void *)sub_1BB872970();
      v50 = v74;
      swift_beginAccess();
      v51 = *(void (**)(char *, uint64_t, _QWORD *))(v9 + 16);
      v52 = v73;
      v51(v73, v50, v8);
      v53 = v8;
      FailureContext = (objc_class *)type metadata accessor for LoadFailureContext(0);
      v55 = v9;
      v56 = objc_allocWithZone(FailureContext);
      v57 = a1;
      v58 = v71;
      swift_bridgeObjectRetain();
      v59 = (char *)v56;
      sub_1BB86C8A4();
      v60 = &v59[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_identifier];
      *(_QWORD *)v60 = v70;
      *((_QWORD *)v60 + 1) = v58;
      v51(&v59[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_startDate], (uint64_t)v52, v53);
      *(_QWORD *)&v59[OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_error] = a1;
      v61 = a1;

      v77.receiver = v59;
      v77.super_class = FailureContext;
      v62 = objc_msgSendSuper2(&v77, sel_init);

      v23 = v72;
      (*(void (**)(_BYTE *, _QWORD *))(v55 + 8))(v52, v53);
      v63 = v69;

    }
  }
}

void sub_1BAAB79A0(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint8_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t, double, double);
  uint64_t v34;
  _QWORD v35[3];
  uint8_t *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40[3];

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize;
    if ((*(_BYTE *)(v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize + 16) & 1) != 0
      || *(double *)v14 != a2
      || *(double *)(v14 + 8) != a3)
    {
      if (qword_1ED3A25E8 != -1)
        swift_once();
      v15 = sub_1BB86EFEC();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED4764A8);
      v16 = v13;
      v17 = sub_1BB86EFC8();
      v18 = sub_1BB87330C();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v38 = v19;
        v20 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v40[0] = v37;
        *(_DWORD *)v20 = 136315138;
        v35[2] = v20 + 12;
        v36 = v20;
        v35[1] = v20 + 4;
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v21 + 56) = type metadata accessor for WebEmbedViewController(0);
        *(_QWORD *)(v21 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
        *(_QWORD *)(v21 + 32) = v16;
        v22 = v16;
        v23 = sub_1BB8729D0();
        v25 = v24;
        v26 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
        swift_beginAccess();
        sub_1BA4C2DD8(v26, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        v27 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
        swift_beginAccess();
        sub_1BA4C2DD8(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
        v28 = sub_1BAABDDAC(v23, v25, (uint64_t)v11, (uint64_t)v8);
        v39 = sub_1BA5D2E14(v28, v29, v40);
        sub_1BB873A8C();

        swift_bridgeObjectRelease();
        v30 = v36;
        _os_log_impl(&dword_1BA493000, v17, (os_log_type_t)v38, "Preferred size did update, %s", v36, 0xCu);
        v31 = v37;
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v31, -1, -1);
        MEMORY[0x1BCCE5C38](v30, -1, -1);

      }
      else
      {

      }
      *(double *)v14 = a2;
      *(double *)(v14 + 8) = a3;
      *(_BYTE *)(v14 + 16) = 0;
      v32 = &v16[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation];
      swift_beginAccess();
      v33 = *(void (**)(uint64_t, double, double))v32;
      if (*(_QWORD *)v32)
      {
        v34 = swift_retain();
        v33(v34, a2, a3);
        sub_1BA49EBE0((uint64_t)v33);
      }
    }

  }
}

void sub_1BAAB7D70(uint64_t a1, char a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  char *v33;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  LODWORD(v3) = a3;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v12 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (!v12)
    return;
  v13 = (void *)v12;
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v14 = sub_1BB86EFEC();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED4764A8);
  v15 = v13;
  v16 = sub_1BB86EFC8();
  v17 = sub_1BB87330C();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v41 = v37;
    *(_DWORD *)v19 = 67109378;
    v40 = a2 & 1;
    sub_1BB873A8C();
    *(_WORD *)(v19 + 8) = 2080;
    v36 = v19 + 10;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v20 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(_QWORD *)(v20 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v20 + 32) = v15;
    v21 = v15;
    v35 = v18;
    v22 = v21;
    v23 = sub_1BB8729D0();
    v38 = v3;
    v3 = v24;
    v25 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    sub_1BA4C2DD8(v25, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v26 = (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    sub_1BA4C2DD8(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v27 = sub_1BAABDDAC(v23, v3, (uint64_t)v11, (uint64_t)v8);
    v39 = sub_1BA5D2E14(v27, v28, &v41);
    sub_1BB873A8C();

    LOBYTE(v3) = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v16, (os_log_type_t)v35, "Did load data visualization data store, isEmbedInitialized=%{BOOL}d, %s", (uint8_t *)v19, 0x12u);
    v29 = v37;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v29, -1, -1);
    MEMORY[0x1BCCE5C38](v19, -1, -1);

    if ((a2 & 1) == 0)
      goto LABEL_11;
LABEL_8:
    if ((v3 & 1) != 0)
    {
      v30 = objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController], sel_view);
      if (!v30)
      {
        __break(1u);
        return;
      }
      v31 = v30;
      objc_msgSend(v30, sel_setHidden_, 0);

    }
    goto LABEL_11;
  }

  if ((a2 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v32 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
  if (v32)
  {
    v33 = v32;
    sub_1BB19CB50(0);

    v15 = v33;
  }

}

uint64_t sub_1BAAB8150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v19[24];

  v1 = v0;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager), v12);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13) & 1) != 0)
  {
    v14 = v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BA4C2DD8(v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v15 = type metadata accessor for WebEmbedDataVisualization();
    LODWORD(v14) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15);
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    if ((_DWORD)v14 == 1)
    {
      v16 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
      swift_beginAccess();
      sub_1BA4C2DD8(v16, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
        v17 = sub_1BB86C5A4();
        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
        if ((v17 & 1) != 0)
          return 1;
      }
    }
  }
  return 0;
}

void sub_1BAAB8378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v8)
  {
    v9 = (void *)v8;
    if (qword_1ED3A25E8 != -1)
      swift_once();
    v10 = sub_1BB86EFEC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED4764A8);
    v11 = v9;
    v12 = sub_1BB86EFC8();
    v13 = sub_1BB87330C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v32 = v30;
      *(_DWORD *)v14 = 136315138;
      v28 = v14 + 4;
      v29 = v14;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v15 + 56) = type metadata accessor for WebEmbedViewController(0);
      *(_QWORD *)(v15 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v15 + 32) = v11;
      v16 = v11;
      v17 = sub_1BB8729D0();
      v19 = v18;
      v20 = (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
      swift_beginAccess();
      sub_1BA4C2DD8(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v21 = (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
      swift_beginAccess();
      sub_1BA4C2DD8(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v22 = sub_1BAABDDAC(v17, v19, (uint64_t)v7, (uint64_t)v4);
      v31 = sub_1BA5D2E14(v22, v23, &v32);
      sub_1BB873A8C();

      swift_bridgeObjectRelease();
      v24 = v29;
      _os_log_impl(&dword_1BA493000, v12, v13, "Did load live activity data store, %s", v29, 0xCu);
      v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v25, -1, -1);
      MEMORY[0x1BCCE5C38](v24, -1, -1);

    }
    else
    {

    }
    v26 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView];
    if (v26)
    {
      v27 = v26;
      sub_1BB19CB50(2uLL);

    }
  }
}

uint64_t sub_1BAAB86D8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  NSObject *v14;
  int v15;
  uint8_t *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  _BYTE *v27;
  _QWORD *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[6];
  objc_super v51;

  v48 = a2;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86EFEC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86EFB0();
  v13 = v3;
  v14 = sub_1BB86EFC8();
  v15 = sub_1BB87330C();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v42 = v15;
    v43 = v10;
    v44 = v9;
    v45 = a1;
    v46 = a3;
    v16 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    aBlock[0] = v41;
    *(_DWORD *)v16 = 136446210;
    v17 = &v13[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v17, 1, v6))
    {
      v18 = 0xE500000000000000;
      v19 = 0x3E6C696E3CLL;
    }
    else
    {
      v22 = v47;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v47, v17, v6);
      v19 = sub_1BB86C538();
      v18 = v23;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    }
    v24 = v43;
    v49 = sub_1BA5D2E14(v19, v18, aBlock);
    sub_1BB873A8C();
    v21 = v13;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v14, (os_log_type_t)v42, "WebEmbedViewController will inject live activity store, embedURL=%{public}s", v16, 0xCu);
    v25 = v41;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v25, -1, -1);
    MEMORY[0x1BCCE5C38](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v44);
    a1 = v45;
    v20 = v46;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v20 = a3;
    v21 = v13;
  }
  v26 = (objc_class *)type metadata accessor for LiveActivityEmbedScript();
  v27 = objc_allocWithZone(v26);
  v28 = &v27[OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_identifier];
  *v28 = 0xD000000000000018;
  v28[1] = 0x80000001BB96A9F0;
  v27[OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_queueable] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_newDatastore] = a1;
  v51.receiver = v27;
  v51.super_class = v26;
  v29 = a1;
  v30 = objc_msgSendSuper2(&v51, sel_init);
  v31 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  v32 = objc_msgSend(v31, sel_scriptsManager);
  swift_bridgeObjectRetain();
  v33 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_removeScriptByIdentifier_, v33);
  swift_unknownObjectRelease();

  v34 = objc_msgSend(v31, sel_scriptsManager);
  v35 = v48;
  if (v48)
  {
    aBlock[4] = v48;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BA4F1DD8;
    aBlock[3] = (uint64_t)&block_descriptor_55;
    v36 = _Block_copy(aBlock);
    v37 = v30;
    sub_1BA4BEB58(v35);
    swift_release();
  }
  else
  {
    v38 = v30;
    v36 = 0;
  }
  objc_msgSend(v34, sel_executeScript_completion_, v30, v36);
  _Block_release(v36);
  swift_unknownObjectRelease();

  objc_msgSend(objc_msgSend(v31, sel_scriptsManager), sel_addScript_, v30);
  return swift_unknownObjectRelease();
}

uint64_t sub_1BAAB8B50(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(id, _QWORD *);
  id v6;
  _QWORD v8[4];

  v5 = *(void (**)(id, _QWORD *))(a1 + 32);
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, v8);
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

void sub_1BAAB8BD8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  id v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  SEL *v42;
  uint64_t v43;
  uint64_t v44[3];

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v14 = sub_1BB86EFEC();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED4764A8);
  swift_retain_n();
  v15 = sub_1BB86EFC8();
  v16 = sub_1BB87330C();
  if (os_log_type_enabled(v15, v16))
  {
    v40 = a4;
    v17 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v44[0] = v39;
    v38 = v17;
    *(_DWORD *)v17 = 136315138;
    v37 = v17 + 4;
    Strong = swift_unknownObjectUnownedLoadStrong();
    v41 = a3 + 16;
    v19 = (void *)Strong;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_allocObject();
    v42 = a5;
    v21 = v20;
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v20 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(_QWORD *)(v21 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v21 + 32) = v19;
    v22 = v19;
    v23 = sub_1BB8729D0();
    v25 = v24;
    v26 = (uint64_t)v22 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BA4C2DD8(v26, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v27 = (uint64_t)v22 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BA4C2DD8(v27, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v28 = sub_1BAABDDAC(v23, v25, (uint64_t)v13, (uint64_t)v10);
    v30 = v29;

    v43 = sub_1BA5D2E14(v28, v30, v44);
    sub_1BB873A8C();
    swift_release_n();
    a5 = v42;
    swift_bridgeObjectRelease();
    v31 = v38;
    _os_log_impl(&dword_1BA493000, v15, v16, v40, v38, 0xCu);
    v32 = v39;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v32, -1, -1);
    MEMORY[0x1BCCE5C38](v31, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v33 = (char *)swift_unknownObjectUnownedLoadStrong();
  v34 = &v33[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner];
  swift_beginAccess();
  LODWORD(v34) = *v34;

  if ((_DWORD)v34 == 1)
  {
    v35 = (char *)swift_unknownObjectUnownedLoadStrong();
    v36 = *(id *)&v35[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator];

    objc_msgSend(v36, *a5);
  }
}

void sub_1BAAB8F9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *Strong;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD v23[2];
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v6 = sub_1BB86EFEC();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED4764A8);
  swift_retain_n();
  v7 = sub_1BB86EFC8();
  v8 = sub_1BB87330C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v9 = 136315138;
    v23[1] = v9 + 4;
    v24 = v9;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v11 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(_QWORD *)(v11 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v11 + 32) = Strong;
    v12 = Strong;
    v13 = sub_1BB8729D0();
    v15 = v14;
    v16 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BA4C2DD8(v16, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v17 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BA4C2DD8(v17, (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v18 = sub_1BAABDDAC(v13, v15, (uint64_t)v5, (uint64_t)v2);
    v20 = v19;

    v26 = sub_1BA5D2E14(v18, v20, &v27);
    sub_1BB873A8C();
    swift_release_n();
    swift_bridgeObjectRelease();
    v21 = v24;
    _os_log_impl(&dword_1BA493000, v7, v8, "Will present as loaded, %s", v24, 0xCu);
    v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v22, -1, -1);
    MEMORY[0x1BCCE5C38](v21, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1BAAB92D0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *Strong;
  id v7;
  id v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v2 = sub_1BB86BEC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v7 = *(id *)&Strong[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];

  v8 = objc_msgSend(v7, sel_view);
  if (!v8)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  objc_msgSend(v8, sel_setHidden_, 0);

  v9 = (char *)swift_unknownObjectUnownedLoadStrong();
  v10 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
  swift_unknownObjectRetain();

  objc_msgSend(v10, sel_setPresentationState_, 1);
  swift_unknownObjectRelease();
  if (objc_msgSend(a1, sel_context))
  {
    type metadata accessor for LoadSuccessContext(0);
    v11 = swift_dynamicCastClass();
    if (v11)
    {
      v12 = v11;
      v13 = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_1BA4C010C((uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_coordinator, (uint64_t)v19);

      v14 = v20;
      v15 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      v16 = *(_QWORD *)(v12
                      + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_identifier);
      v17 = *(_QWORD *)(v12
                      + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadSuccessContext_identifier
                      + 8);
      sub_1BB86BE60();
      (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v16, v17, v5, v14, v15);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D60AF0]), sel_initWithValue_, 0))
    goto LABEL_9;
}

id sub_1BAAB9508(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t (*v5)(id, _QWORD *);
  id v6;
  void *v7;
  _QWORD v9[4];

  v5 = *(uint64_t (**)(id, _QWORD *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a3;
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v7 = (void *)v5(v6, v9);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7;
}

void sub_1BAAB9598()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  int v9;
  uint8_t *v10;
  void *Strong;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  char *v27;
  void *v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v6 = sub_1BB86EFEC();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED4764A8);
  swift_retain_n();
  v7 = sub_1BB86EFC8();
  v8 = sub_1BB87330C();
  v9 = v8;
  if (os_log_type_enabled(v7, v8))
  {
    v32 = v9;
    v10 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v34 = v31;
    *(_DWORD *)v10 = 136315138;
    v29 = v10 + 4;
    v30 = v10;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v12 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(_QWORD *)(v12 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v12 + 32) = Strong;
    v13 = Strong;
    v14 = sub_1BB8729D0();
    v16 = v15;
    v17 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BA4C2DD8(v17, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v18 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BA4C2DD8(v18, (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v19 = sub_1BAABDDAC(v14, v16, (uint64_t)v5, (uint64_t)v2);
    v21 = v20;

    v33 = sub_1BA5D2E14(v19, v21, &v34);
    sub_1BB873A8C();
    swift_release_n();
    swift_bridgeObjectRelease();
    v22 = v30;
    _os_log_impl(&dword_1BA493000, v7, (os_log_type_t)v32, "Will present as unloaded, %s", v30, 0xCu);
    v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    MEMORY[0x1BCCE5C38](v22, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v24 = (char *)swift_unknownObjectUnownedLoadStrong();
  v25 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];

  v26 = objc_msgSend(v25, sel_view);
  if (v26)
  {
    objc_msgSend(v26, sel_setHidden_, 1);

    v27 = (char *)swift_unknownObjectUnownedLoadStrong();
    v28 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
    swift_unknownObjectRetain();

    objc_msgSend(v28, sel_setPresentationState_, 2);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BAAB9980(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  _BOOL4 v16;
  uint8_t *v17;
  void *Strong;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE v45[12];
  int v46;
  uint8_t *v47;
  uint8_t *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;
  uint64_t v57;

  v2 = sub_1BB86BEC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v12 = sub_1BB86EFEC();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED4764A8);
  swift_retain_n();
  v13 = sub_1BB86EFC8();
  v14 = sub_1BB87330C();
  v15 = v14;
  v16 = os_log_type_enabled(v13, v14);
  v52 = v5;
  v53 = v3;
  if (v16)
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v55[0] = v49;
    v51 = v2;
    *(_DWORD *)v17 = 136315138;
    v47 = v17 + 4;
    v48 = v17;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v19 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(_QWORD *)(v19 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v19 + 32) = Strong;
    v20 = Strong;
    v21 = sub_1BB8729D0();
    v46 = v15;
    v23 = v22;
    v50 = a1;
    v24 = (uint64_t)v20 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BA4C2DD8(v24, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v25 = (uint64_t)v20 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BA4C2DD8(v25, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v26 = sub_1BAABDDAC(v21, v23, (uint64_t)v11, (uint64_t)v8);
    v28 = v27;

    v54 = sub_1BA5D2E14(v26, v28, v55);
    v2 = v51;
    sub_1BB873A8C();
    swift_release_n();
    a1 = v50;
    swift_bridgeObjectRelease();
    v29 = v48;
    _os_log_impl(&dword_1BA493000, v13, (os_log_type_t)v46, "Will present as error state, %s", v48, 0xCu);
    v30 = v49;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v30, -1, -1);
    MEMORY[0x1BCCE5C38](v29, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v31 = (char *)swift_unknownObjectUnownedLoadStrong();
  v32 = *(id *)&v31[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];

  objc_msgSend(v32, sel_setHidden_, 0);
  v33 = (void *)swift_unknownObjectUnownedLoadStrong();
  v34 = objc_msgSend(v33, sel_view);

  if (v34)
  {
    v35 = (char *)swift_unknownObjectUnownedLoadStrong();
    v36 = *(id *)&v35[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_tapGestureRecognizer];

    objc_msgSend(v34, sel_addGestureRecognizer_, v36);
    if (objc_msgSend(a1, sel_context))
    {
      type metadata accessor for LoadFailureContext(0);
      v37 = swift_dynamicCastClass();
      if (v37)
      {
        v38 = v37;
        v39 = (void *)swift_unknownObjectUnownedLoadStrong();
        sub_1BA4C010C((uint64_t)v39 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_coordinator, (uint64_t)v55);

        v40 = v56;
        v41 = v57;
        __swift_project_boxed_opaque_existential_1(v55, v56);
        v42 = *(_QWORD *)(v38
                        + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_identifier);
        v43 = *(_QWORD *)(v38
                        + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_identifier
                        + 8);
        v44 = v52;
        sub_1BB86BE60();
        (*(void (**)(uint64_t, uint64_t, _BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 24))(v42, v43, v44, *(_QWORD *)(v38 + OBJC_IVAR____TtC8NewsFeedP33_898A0B03A217A95A42970FA509579B3F18LoadFailureContext_error), v40, v41);
        (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v44, v2);
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1BAAB9EC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  int v9;
  uint8_t *v10;
  void *Strong;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  id v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v6 = sub_1BB86EFEC();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED4764A8);
  swift_retain_n();
  v7 = sub_1BB86EFC8();
  v8 = sub_1BB87330C();
  v9 = v8;
  if (os_log_type_enabled(v7, v8))
  {
    v33 = v9;
    v10 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v35 = v32;
    *(_DWORD *)v10 = 136315138;
    v30 = v10 + 4;
    v31 = v10;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v12 + 56) = type metadata accessor for WebEmbedViewController(0);
    *(_QWORD *)(v12 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v12 + 32) = Strong;
    v13 = Strong;
    v14 = sub_1BB8729D0();
    v16 = v15;
    v17 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BA4C2DD8(v17, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v18 = (uint64_t)v13 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
    swift_beginAccess();
    sub_1BA4C2DD8(v18, (uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v19 = sub_1BAABDDAC(v14, v16, (uint64_t)v5, (uint64_t)v2);
    v21 = v20;

    v34 = sub_1BA5D2E14(v19, v21, &v35);
    sub_1BB873A8C();
    swift_release_n();
    swift_bridgeObjectRelease();
    v22 = v31;
    _os_log_impl(&dword_1BA493000, v7, (os_log_type_t)v33, "Will remove error state, %s", v31, 0xCu);
    v23 = v32;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v23, -1, -1);
    MEMORY[0x1BCCE5C38](v22, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v24 = (char *)swift_unknownObjectUnownedLoadStrong();
  v25 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView];

  objc_msgSend(v25, sel_setHidden_, 1);
  v26 = (void *)swift_unknownObjectUnownedLoadStrong();
  v27 = objc_msgSend(v26, sel_view);

  if (v27)
  {
    v28 = (char *)swift_unknownObjectUnownedLoadStrong();
    v29 = *(id *)&v28[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_tapGestureRecognizer];

    objc_msgSend(v27, sel_removeGestureRecognizer_, v29);
  }
  else
  {
    __break(1u);
  }
}

id WebEmbedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void WebEmbedViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

Swift::Void __swiftcall WebEmbedViewController.prepareForReuse()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  MEMORY[0x1BCCE1C6C]();

  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v3 = *v2;
  *v2 = 0;
  v2[1] = 0;
  sub_1BA49EBE0(v3);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation);
  swift_beginAccess();
  v5 = *v4;
  *v4 = 0;
  v4[1] = 0;
  sub_1BA49EBE0(v5);
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize;
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_BYTE *)(v6 + 16) = 1;
}

void sub_1BAABA6E0()
{
  WebEmbedViewController.prepareForReuse()();
}

void sub_1BAABA700()
{
  sub_1BA4A2870(&qword_1ED3B70C8, type metadata accessor for WebEmbedViewController, (uint64_t)&protocol conformance descriptor for WebEmbedViewController);
  JUMPOUT(0x1BCCE1E7CLL);
}

Swift::Void __swiftcall WebEmbedViewController.refresh()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  int v18;
  void *v19;
  void *v20;
  uint64_t v21;

  v1 = v0;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v10)
  {
    v11 = objc_msgSend(v10, sel_state, v7);
    v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
    if (v11)
    {
      v13 = v11;
      if (!v12)
      {

        goto LABEL_15;
      }
      sub_1BA49A224(0, (unint64_t *)&unk_1ED39C010);
      v14 = v12;
      v15 = v13;
      v16 = sub_1BB8738B8();

      if ((v16 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
  }
  else
  {
    v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
  }
  if (v12)
  {
LABEL_15:
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager), sel_refresh);
    return;
  }
LABEL_8:
  v17 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
  swift_beginAccess();
  sub_1BA4C2DD8(v17, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  if (qword_1ED3A2B78 != -1)
    swift_once();
  v18 = byte_1EF2AF301;
  v19 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController);
  v20 = (void *)sub_1BB86C58C();
  if (v18 == 1)
    objc_msgSend(v19, sel_loadURL_cachePolicy_, v20, 4);
  else
    objc_msgSend(v19, sel_loadURL_, v20);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1BAABA9B8()
{
  WebEmbedViewController.refresh()();
}

id WebEmbedViewController.isSelectable.getter()
{
  uint64_t v0;
  id result;
  unint64_t v2;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_interactionProvider), sel_interaction);
  if (result)
  {
    v2 = (unint64_t)objc_msgSend(result, sel_type);
    swift_unknownObjectRelease();
    if (v2 >= 3)
    {
      result = (id)sub_1BB873EAC();
      __break(1u);
    }
    else
    {
      return (id)((v2 & 7) == 2);
    }
  }
  return result;
}

unint64_t sub_1BAABAA98()
{
  return (unint64_t)WebEmbedViewController.isSelectable.getter() & 1;
}

void (*sub_1BAABAAC4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BB86FA30();
  return sub_1BA9D68C8;
}

void WebEmbedViewController.webEmbedDataSourceManager(_:dataVisualization:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  char v54;
  uint64_t v55;
  uint64_t v56;
  char updated;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v74 = a3;
  v73 = type metadata accessor for WebEmbedDatastoreUpdate();
  v69 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v64 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3A7380, sub_1BA854878);
  v68 = v6;
  MEMORY[0x1E0C80A78](v6);
  v71 = (uint64_t)&v63 - v7;
  sub_1BA854878(0);
  MEMORY[0x1E0C80A78](v8);
  v66 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v67 = (uint64_t)&v63 - v11;
  MEMORY[0x1E0C80A78](v12);
  v65 = (uint64_t)&v63 - v13;
  MEMORY[0x1E0C80A78](v14);
  v72 = (uint64_t)&v63 - v15;
  MEMORY[0x1E0C80A78](v16);
  v70 = (char *)&v63 - v17;
  v18 = type metadata accessor for WebEmbedDataVisualization();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9ED538(0, &qword_1ED3A7A70, sub_1BA6CAB4C);
  v23 = v22;
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v63 - v24;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v63 - v30;
  sub_1BA4C2DD8(a2, (uint64_t)&v63 - v30, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v31, 0, 1, v18);
  v75 = v3;
  v32 = v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization;
  swift_beginAccess();
  v33 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_1BA4C2DD8((uint64_t)v31, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4C2DD8(v32, v33, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v34((uint64_t)v25, 1, v18) == 1)
  {
    sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    if (v34(v33, 1, v18) == 1)
      goto LABEL_10;
LABEL_6:
    sub_1BA9ED590((uint64_t)v25, &qword_1ED3A7A70, sub_1BA6CAB4C);
    return;
  }
  sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if (v34(v33, 1, v18) == 1)
  {
    sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_6;
  }
  sub_1BA5193C4(v33, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v35 = WebEmbedDataVisualization.identifier.getter();
  v37 = v36;
  if (v35 == WebEmbedDataVisualization.identifier.getter() && v37 == v38)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_10:
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v39 = v75;
    goto LABEL_11;
  }
  v54 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v39 = v75;
  if ((v54 & 1) == 0)
    return;
LABEL_11:
  v40 = *(void **)(v39 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v40)
  {
    v41 = objc_msgSend(v40, sel_state);
    if (v41)
    {
      v42 = v41;
      v43 = *(void **)(v39 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState);
      if (!v43)
      {

        return;
      }
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
      v44 = v43;
      v45 = sub_1BB8738B8();

      if ((v45 & 1) == 0)
        return;
      swift_retain();
      v46 = (uint64_t)v70;
      sub_1BB86E878();
      swift_release();
      v47 = v72;
      sub_1BA4C2DD8(v74, v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      v48 = v69;
      v49 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56);
      v50 = v73;
      v49(v47, 0, 1, v73);
      v51 = v71;
      v52 = v71 + *(int *)(v68 + 48);
      sub_1BA4C2DD8(v46, v71, (uint64_t (*)(_QWORD))sub_1BA854878);
      sub_1BA4C2DD8(v47, v52, (uint64_t (*)(_QWORD))sub_1BA854878);
      v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      if (v53(v51, 1, v50) == 1)
      {
        sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA854878);
        sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BA854878);
        if (v53(v52, 1, v50) == 1)
        {
          sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA854878);
          return;
        }
      }
      else
      {
        v55 = v65;
        sub_1BA4C2DD8(v51, v65, (uint64_t (*)(_QWORD))sub_1BA854878);
        if (v53(v52, 1, v50) != 1)
        {
          v56 = v64;
          sub_1BA5193C4(v52, v64, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
          updated = _s8NewsFeed23WebEmbedDatastoreUpdateV2eeoiySbAC_ACtFZ_0(v55, v56);
          sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
          sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))sub_1BA854878);
          sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BA854878);
          sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
          sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA854878);
          if ((updated & 1) != 0)
            return;
          goto LABEL_25;
        }
        sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))sub_1BA854878);
        sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BA854878);
        sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      }
      sub_1BA9ED590(v51, (unint64_t *)&qword_1ED3A7380, sub_1BA854878);
LABEL_25:
      v58 = v74;
      v59 = v67;
      sub_1BA4C2DD8(v74, v67, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      v60 = v73;
      v49(v59, 0, 1, v73);
      sub_1BA4C2DD8(v59, v66, (uint64_t (*)(_QWORD))sub_1BA854878);
      swift_retain();
      sub_1BB86E884();
      swift_release();
      sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))sub_1BA854878);
      objc_msgSend(*(id *)(v39 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController), sel_loadLocalDatastore_forceUpdate_completion_, *(_QWORD *)(*(_QWORD *)(v58 + *(int *)(v60 + 20)) + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), 0, 0);
      v61 = *(void **)(v39 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView);
      if (v61)
      {
        v62 = v61;
        sub_1BB19CB50(1uLL);

      }
    }
  }
}

uint64_t WebEmbedViewController.liveActivityWebEmbedDatastoreDidChange(datastore:swDatastore:)(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BAAB86D8(a2, (uint64_t)sub_1BAABE264, v3);
  return swift_release_n();
}

void sub_1BAABB4FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView);
    if (v4)
    {
      v5 = v4;
      sub_1BB19CB50(3uLL);

    }
  }
}

uint64_t sub_1BAABB56C(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BAAB86D8(a2, (uint64_t)sub_1BAABE264, v3);
  return swift_release_n();
}

Swift::Void __swiftcall WebEmbedViewController.sceneWillEnterForeground()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  char v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_state);
    if (v2)
    {
      v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
      if (v3)
      {
        v6 = v2;
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        v4 = v3;
        v5 = sub_1BB8738B8();

        if ((v5 & 1) != 0)
          sub_1BAAB5388();
      }
      else
      {

      }
    }
  }
}

uint64_t sub_1BAABB6B0()
{
  swift_getObjectType();
  return sub_1BB86E3BC();
}

uint64_t sub_1BAABB6D8()
{
  swift_getObjectType();
  return sub_1BB86E3E0();
}

uint64_t sub_1BAABB720()
{
  swift_getObjectType();
  return sub_1BB86E3BC();
}

uint64_t sub_1BAABB748()
{
  swift_getObjectType();
  return sub_1BB86E3E0();
}

uint64_t sub_1BAABB78C()
{
  swift_getObjectType();
  return sub_1BB86E3BC();
}

id sub_1BAABB7E0()
{
  return sub_1BAABB8AC(type metadata accessor for LoadSuccessContext);
}

id sub_1BAABB8A0()
{
  return sub_1BAABB8AC(type metadata accessor for LoadFailureContext);
}

id sub_1BAABB8AC(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1BAABB968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, void *a6, uint64_t a7, char *a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, double a13, double a14, char *a15, uint64_t a16)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double *v58;
  char *v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  void *v98;
  uint64_t *v99;
  id v100;
  void *v101;
  double v102;
  double v103;
  double v104;
  double v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  id v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  _QWORD *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  _QWORD *v131;
  void *v132;
  void *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  unsigned int (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  void *v148;
  id v149;
  uint64_t v150;
  char *v151;
  NSObject *v152;
  os_log_type_t v153;
  uint8_t *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  void *v175;
  id v176;
  void *v177;
  id v178;
  void (*v179)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v180;
  void *v181;
  id v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  char *v198;
  NSObject *v199;
  os_log_type_t v200;
  BOOL v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  char v215;
  id v216;
  void *v217;
  char v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  uint64_t v232;
  char *v233;
  NSObject *v234;
  os_log_type_t v235;
  int v236;
  uint8_t *v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  id v257;
  void *v258;
  uint64_t v259;
  uint64_t v260;
  unsigned int (*v261)(uint64_t, uint64_t, uint64_t);
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char v267;
  uint64_t v268;
  void (*v269)(char *, uint64_t);
  uint64_t v270;
  uint64_t v271;
  char *v272;
  NSObject *v273;
  os_log_type_t v274;
  uint8_t *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  unint64_t v287;
  int v288;
  void *v289;
  id v290;
  void *v291;
  void *v292;
  id v293;
  char v294;
  uint64_t v295;
  char *v296;
  NSObject *v297;
  os_log_type_t v298;
  uint8_t *v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  _QWORD v310[2];
  void (*v311)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v312;
  unsigned int (*v313)(uint64_t, uint64_t, uint64_t);
  void (*v314)(uint64_t, uint64_t, uint64_t);
  uint64_t v315;
  char *v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t ObjectType;
  uint64_t v335;
  uint8_t *v336;
  void (*v337)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  void *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint8_t *aBlock;
  uint64_t v350;
  void *v351;
  void *v352;
  void *v353;
  _QWORD *v354;
  uint64_t v355;
  uint64_t v356;
  CGRect v357;
  CGRect v358;

  v344 = a7;
  v343 = a6;
  v342 = a4;
  v341 = a3;
  ObjectType = swift_getObjectType();
  v348 = sub_1BB86C67C();
  v338 = *(_QWORD *)(v348 - 8);
  MEMORY[0x1E0C80A78](v348);
  v318 = (char *)v310 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9ED538(0, (unint64_t *)&qword_1ED3B04F0, (void (*)(uint64_t))sub_1BA6EF3B0);
  v323 = v27;
  MEMORY[0x1E0C80A78](v27);
  v324 = (char *)v310 - v28;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v29);
  v330 = (uint64_t)v310 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v345 = (uint64_t)v310 - v32;
  MEMORY[0x1E0C80A78](v33);
  v329 = (uint64_t)v310 - v34;
  v340 = type metadata accessor for WebEmbedDataVisualization();
  v328 = *(_QWORD *)(v340 - 8);
  MEMORY[0x1E0C80A78](v340);
  v321 = (uint64_t)v310 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v332 = (uint64_t)v310 - v37;
  MEMORY[0x1E0C80A78](v38);
  v319 = (uint64_t)v310 - v39;
  v40 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1E0C80A78](v40);
  v326 = (uint64_t)v310 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v327 = (char *)v310 - v43;
  sub_1BA854878(0);
  MEMORY[0x1E0C80A78](v44);
  v335 = (uint64_t)v310 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v336 = (uint8_t *)v310 - v47;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v48);
  v320 = (uint64_t)v310 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50);
  v333 = (uint64_t)v310 - v51;
  MEMORY[0x1E0C80A78](v52);
  v339 = (char *)v310 - v53;
  MEMORY[0x1E0C80A78](v54);
  v325 = (char *)v310 - v55;
  MEMORY[0x1E0C80A78](v56);
  v347 = (uint64_t)v310 - v57;
  v58 = (double *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize];
  *v58 = a13;
  v58[1] = a14;
  v59 = (char *)OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate;
  v60 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate];
  if (v60)
  {
    v346 = (char *)OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate;
    v61 = a2;
    v62 = a8;
    v63 = a1;
    v64 = (void *)objc_opt_self();
    v65 = v60;
    v66 = objc_msgSend(v64, sel_sharedApplication);
    v67 = objc_msgSend(v66, sel_preferredContentSizeCategory);

    v68 = sub_1BB8729A0();
    v70 = v69;
    if (v68 == sub_1BB8729A0() && v70 == v71)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v72 = sub_1BB874398();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v72 & 1) == 0)
      {
        objc_msgSend(*(id *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController], sel_prewarm);
        v73 = v347;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v338 + 56))(v347, 1, 1, v348);
        v74 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
        swift_beginAccess();
        sub_1BAABEF4C(v73, v74);
        swift_endAccess();
      }

    }
    a1 = v63;
    a8 = v62;
    a2 = v61;
    v59 = v346;
  }
  if ((sub_1BAAB6118(a1, (uint64_t)a5, (uint64_t)a8) & 1) == 0)
  {
    v148 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
    if (v148)
    {
      v149 = v148;
      sub_1BB19C9A0((uint64_t)a5);

    }
    if (qword_1ED3A25E8 != -1)
      swift_once();
    v150 = sub_1BB86EFEC();
    __swift_project_value_buffer(v150, (uint64_t)qword_1ED4764A8);
    v151 = a15;
    v152 = sub_1BB86EFC8();
    v153 = sub_1BB87330C();
    if (!os_log_type_enabled(v152, v153))
    {

      return;
    }
    v154 = (uint8_t *)swift_slowAlloc();
    v155 = swift_slowAlloc();
    v356 = v155;
    *(_DWORD *)v154 = 136315138;
    v348 = (uint64_t)(v154 + 4);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v156 = swift_allocObject();
    *(_OWORD *)(v156 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v156 + 56) = ObjectType;
    *(_QWORD *)(v156 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v156 + 32) = v151;
    v157 = v151;
    v158 = sub_1BB8729D0();
    v160 = v159;
    v161 = (uint64_t)&v157[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
    swift_beginAccess();
    v162 = v347;
    sub_1BA4C2DD8(v161, v347, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v163 = &v157[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
    swift_beginAccess();
    v164 = (uint64_t)v163;
    v165 = v345;
    sub_1BA4C2DD8(v164, v345, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v166 = sub_1BAABDDAC(v158, v160, v162, v165);
    v355 = sub_1BA5D2E14(v166, v167, &v356);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v152, v153, "Blocked reloading web embed based on configuration, %s", v154, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v155, -1, -1);
    MEMORY[0x1BCCE5C38](v154, -1, -1);
    goto LABEL_89;
  }
  v346 = a8;
  v331 = a5;
  v75 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView];
  objc_msgSend(v75, sel_frame);
  v358.origin.x = v76;
  v358.origin.y = v77;
  v358.size.width = v78;
  v358.size.height = v79;
  v357.origin.x = a9;
  v357.origin.y = a10;
  v357.size.width = a11;
  v357.size.height = a12;
  if (!CGRectEqualToRect(v357, v358))
  {
    objc_msgSend(v75, sel_setFrame_, a9, a10, a11, a12);
    a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged] = 1;
  }
  a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged] = 0;
  v80 = v338;
  v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v338 + 16);
  v82 = v347;
  v83 = v348;
  v81(v347, a1, v348);
  v84 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
  v84(v82, 0, 1, v83);
  v85 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
  swift_beginAccess();
  v315 = v85;
  sub_1BAABEF4C(v82, v85);
  swift_endAccess();
  v86 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL];
  swift_beginAccess();
  v317 = a2;
  sub_1BAABEF90(a2, v86, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  swift_endAccess();
  *(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location] = v341;
  swift_unknownObjectRelease();
  v314 = v81;
  v81(v82, v342, v83);
  v337 = v84;
  v84(v82, 0, 1, v83);
  v87 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL];
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1BAABEF4C(v82, v87);
  swift_endAccess();
  v88 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration];
  v89 = v346;
  *(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration] = v346;
  v316 = v89;

  v90 = type metadata accessor for WebEmbedDatastoreUpdate();
  v91 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56);
  v92 = (uint64_t)v336;
  v312 = v90;
  v311 = v91;
  ((void (*)(uint8_t *, uint64_t, uint64_t))v91)(v336, 1, 1);
  v310[1] = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController__lastDatastoreUpdate;
  sub_1BA4C2DD8(v92, v335, (uint64_t (*)(_QWORD))sub_1BA854878);
  swift_retain();
  sub_1BB86E884();
  swift_release();
  sub_1BA4A2E80(v92, (uint64_t (*)(_QWORD))sub_1BA854878);
  v93 = (_QWORD *)(*(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_delegate]
                 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier);
  v94 = v344;
  *v93 = v343;
  v93[1] = v94;
  swift_bridgeObjectRelease();
  v95 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v96 = objc_msgSend(v95, sel_sharedApplication);
  v97 = objc_msgSend(v96, sel_preferredContentSizeCategory);

  v98 = *(void **)&v59[(_QWORD)a15];
  *(_QWORD *)&v59[(_QWORD)a15] = v97;

  v346 = *(char **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController];
  sub_1BA4C010C((uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_configurationProvider], (uint64_t)&aBlock);
  v99 = __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v352);
  v100 = objc_msgSend(a15, sel_view);
  if (!v100)
  {
    __break(1u);
    goto LABEL_106;
  }
  v101 = v100;
  v322 = a1;
  objc_msgSend(v100, sel_bounds);
  v103 = v102;
  v105 = v104;

  v106 = v327;
  sub_1BB86E164();
  v107 = v326;
  sub_1BA4C2DD8((uint64_t)v106, v326, (uint64_t (*)(_QWORD))type metadata accessor for FormatPictureInPictureModel);
  v108 = 1;
  v313 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  v109 = v313(v107, 1, v83);
  v110 = (uint64_t)v325;
  if (v109 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v325, v107, v83);
    v108 = 0;
  }
  v337(v110, v108, 1, v83);
  sub_1BA4A2E80((uint64_t)v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatPictureInPictureModel);
  v111 = *(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 24];
  v112 = *(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager + 32];
  v327 = &a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager];
  __swift_project_boxed_opaque_existential_1(&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_liveActivityWebEmbedDatastoreManager], v111);
  v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v111, v112);
  v114 = sub_1BB4A3ED4(v317, v341, v342, v110, v316, v113 & 1, *v99, a16, v103, v105, a9, a10, a11, a12);
  sub_1BA4A2E80(v110, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  objc_msgSend(v346, sel_setConfiguration_, v114);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  sub_1BB86C8B0();
  v115 = swift_allocBox();
  sub_1BB86C8A4();
  v116 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_presentationManager];
  v117 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v118 = (_QWORD *)swift_allocObject();
  v119 = v343;
  v118[2] = v117;
  v118[3] = v119;
  v120 = v344;
  v118[4] = v344;
  v118[5] = v115;
  v353 = sub_1BAABEFD8;
  v354 = v118;
  v121 = MEMORY[0x1E0C809B0];
  aBlock = (uint8_t *)MEMORY[0x1E0C809B0];
  v350 = 1107296256;
  v351 = sub_1BB1B6F74;
  v352 = &block_descriptor_62;
  v122 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v116, sel_onPresentable_, v122);
  _Block_release(v122);
  v123 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v124 = swift_allocObject();
  *(_QWORD *)(v124 + 16) = v123;
  *(_QWORD *)(v124 + 24) = v115;
  v353 = sub_1BAABF010;
  v354 = (_QWORD *)v124;
  aBlock = (uint8_t *)v121;
  v350 = 1107296256;
  v351 = sub_1BA4F1DD8;
  v352 = &block_descriptor_69;
  v125 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v116, sel_onLoad_, v125);
  _Block_release(v125);
  v126 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_interactionProvider];
  v127 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v353 = sub_1BAABF018;
  v354 = (_QWORD *)v127;
  aBlock = (uint8_t *)v121;
  v350 = 1107296256;
  v351 = sub_1BA4F1DD8;
  v352 = &block_descriptor_73;
  v128 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v126, sel_setInteractionBlock_, v128);
  _Block_release(v128);
  v129 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorProvider];
  v130 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v131 = (_QWORD *)swift_allocObject();
  v131[2] = v130;
  v131[3] = v119;
  v131[4] = v120;
  v131[5] = v115;
  v353 = sub_1BAABF058;
  v354 = v131;
  aBlock = (uint8_t *)v121;
  v350 = 1107296256;
  v351 = sub_1BA573874;
  v352 = &block_descriptor_80;
  v132 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v129, sel_onError_, v132);
  _Block_release(v132);
  v133 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSizeManager];
  v134 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v353 = sub_1BAABF064;
  v354 = (_QWORD *)v134;
  aBlock = (uint8_t *)v121;
  v350 = 1107296256;
  v351 = sub_1BB76B9D0;
  v352 = &block_descriptor_84;
  v135 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v133, sel_onPreferredSize_, v135);
  _Block_release(v135);
  v136 = (uint64_t)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
  swift_beginAccess();
  v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v328 + 48);
  v344 = v136;
  v138 = v340;
  v139 = 0;
  v140 = 0;
  if (!v137(v136, 1, v340))
  {
    v141 = v319;
    sub_1BA4C2DD8(v344, v319, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v139 = WebEmbedDataVisualization.identifier.getter();
    v140 = v142;
    sub_1BA4A2E80(v141, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  v143 = v329;
  sub_1BA4C2DD8((uint64_t)v331, v329, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v144 = v137(v143, 1, v138);
  v145 = (uint64_t)v339;
  v342 = v115;
  if (v144 == 1)
  {
    sub_1BA4A2E80(v143, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    if (!v140)
    {
      LODWORD(v343) = 1;
      v146 = v348;
      v147 = v327;
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  v168 = WebEmbedDataVisualization.identifier.getter();
  v170 = v169;
  sub_1BA4A2E80(v143, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (v140)
  {
    if (v170)
    {
      if (v139 == v168 && v140 == v170)
      {
        swift_bridgeObjectRelease();
        LODWORD(v343) = 1;
      }
      else
      {
        LODWORD(v343) = sub_1BB874398();
        swift_bridgeObjectRelease();
      }
      goto LABEL_33;
    }
LABEL_32:
    LODWORD(v343) = 0;
LABEL_33:
    v146 = v348;
    v147 = v327;
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v146 = v348;
  v147 = v327;
  if (v170)
  {
    LODWORD(v343) = 0;
    goto LABEL_34;
  }
  LODWORD(v343) = 1;
LABEL_35:
  v171 = v331;
  v172 = v345;
  sub_1BA4C2DD8((uint64_t)v331, v345, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v173 = v172;
  v174 = v171;
  sub_1BAAB3150(v173);
  v175 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView];
  if (v175)
  {
    v176 = v175;
    sub_1BB19C9A0((uint64_t)v174);

  }
  v329 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine;
  v177 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine];
  if (v177)
  {
    v178 = objc_msgSend(v177, sel_state);
    v179 = v337;
    if (v178)
    {
      v180 = v178;
      v181 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState];
      if (v181)
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        v182 = v181;
        v183 = sub_1BB8738B8();

        v180 = v182;
      }
      else
      {
        v183 = 0;
      }
      v174 = v331;

    }
    else
    {
      v183 = 0;
    }
  }
  else
  {
    v183 = 0;
    v179 = v337;
  }
  v184 = (uint64_t)v174;
  v185 = v330;
  sub_1BA4C2DD8(v184, v330, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if (v137(v185, 1, v340) == 1)
  {
    sub_1BA4A2E80(v185, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v186 = v333;
    goto LABEL_60;
  }
  LODWORD(v341) = v183;
  v187 = v185;
  v188 = v332;
  sub_1BA5193C4(v187, v332, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v189 = *(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 24];
  v190 = *(_QWORD *)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager + 32];
  v331 = &a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager];
  __swift_project_boxed_opaque_existential_1(&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webEmbedDataSourceManager], v189);
  v191 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v190 + 32))(v188, v189, v190);
  v192 = v188;
  v193 = v321;
  sub_1BA4C2DD8(v192, v321, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (!v191)
    v191 = _s8NewsFeed17WebEmbedDatastoreC5empty3forAcA0cD17DataVisualizationO_tFZ_0(v193);
  v194 = v312;
  v195 = v311;
  sub_1BA4A2E80(v193, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v196 = (uint64_t)v336;
  sub_1BA4C2DD8(v332, (uint64_t)v336, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  *(_QWORD *)(v196 + *(int *)(v194 + 20)) = v191;
  v195(v196, 0, 1, v194);
  sub_1BA4C2DD8(v196, v335, (uint64_t (*)(_QWORD))sub_1BA854878);
  swift_retain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  sub_1BA4A2E80(v196, (uint64_t (*)(_QWORD))sub_1BA854878);
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v340 = v191;
  v197 = sub_1BB86EFEC();
  __swift_project_value_buffer(v197, (uint64_t)qword_1ED4764A8);
  v198 = a15;
  v199 = sub_1BB86EFC8();
  v200 = sub_1BB87330C();
  v201 = os_log_type_enabled(v199, v200);
  v202 = v341;
  if (v201)
  {
    v203 = swift_slowAlloc();
    v336 = (uint8_t *)swift_slowAlloc();
    aBlock = v336;
    *(_DWORD *)v203 = 67109378;
    LODWORD(v356) = v202 & 1;
    sub_1BB873A8C();
    *(_WORD *)(v203 + 8) = 2080;
    v335 = v203 + 10;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v204 = swift_allocObject();
    *(_OWORD *)(v204 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v204 + 56) = ObjectType;
    *(_QWORD *)(v204 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v204 + 32) = v198;
    v205 = v198;
    v206 = v198;
    v207 = sub_1BB8729D0();
    v209 = v208;
    v210 = v347;
    sub_1BA4C2DD8(v315, v347, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v211 = v345;
    sub_1BA4C2DD8(v344, v345, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v212 = sub_1BAABDDAC(v207, v209, v210, v211);
    v356 = sub_1BA5D2E14(v212, v213, (uint64_t *)&aBlock);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v199, v200, "Will load data visualization data store, isEmbedInitialized=%{BOOL}d, %s", (uint8_t *)v203, 0x12u);
    v214 = (uint64_t)v336;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v214, -1, -1);
    v202 = v341;
    MEMORY[0x1BCCE5C38](v203, -1, -1);

  }
  else
  {

    v205 = v198;
  }
  v146 = v348;
  v186 = v333;
  v215 = (char)v343;
  if (!(v343 & 1 | ((v202 & 1) == 0)))
  {
    v216 = objc_msgSend(v346, sel_view);
    if (v216)
    {
      v217 = v216;
      objc_msgSend(v216, sel_setHidden_, 1);

      goto LABEL_59;
    }
LABEL_106:
    __break(1u);
    return;
  }
LABEL_59:
  v218 = v215 ^ 1;
  v219 = *(void **)(v340 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore);
  v220 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v221 = swift_allocObject();
  *(_QWORD *)(v221 + 16) = v220;
  *(_BYTE *)(v221 + 24) = v202 & 1;
  *(_BYTE *)(v221 + 25) = v218 & 1;
  v353 = sub_1BAABF098;
  v354 = (_QWORD *)v221;
  aBlock = (uint8_t *)MEMORY[0x1E0C809B0];
  v350 = 1107296256;
  v351 = sub_1BA4F1DD8;
  v352 = &block_descriptor_92;
  v222 = _Block_copy(&aBlock);
  v223 = v219;
  swift_release();
  objc_msgSend(v346, sel_loadLocalDatastore_forceUpdate_completion_, v223, 1, v222);
  _Block_release(v222);

  v224 = *((_QWORD *)v331 + 3);
  v225 = *((_QWORD *)v331 + 4);
  __swift_project_boxed_opaque_existential_1(v331, v224);
  v226 = v332;
  (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v225 + 16))(v205, &protocol witness table for WebEmbedViewController, v332, v224, v225);
  v179 = v337;
  swift_release();
  sub_1BA4A2E80(v226, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v145 = (uint64_t)v339;
  v147 = v327;
LABEL_60:
  v227 = *((_QWORD *)v147 + 3);
  v228 = *((_QWORD *)v147 + 4);
  __swift_project_boxed_opaque_existential_1(v147, v227);
  (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v228 + 48))(a15, &protocol witness table for WebEmbedViewController, v227, v228);
  if ((sub_1BAAB8150() & 1) != 0)
  {
    v229 = *((_QWORD *)v147 + 3);
    v230 = *((_QWORD *)v147 + 4);
    __swift_project_boxed_opaque_existential_1(v147, v229);
    v231 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v230 + 24))(v229, v230);
    if (qword_1ED3A25E8 != -1)
      swift_once();
    v232 = sub_1BB86EFEC();
    __swift_project_value_buffer(v232, (uint64_t)qword_1ED4764A8);
    v233 = a15;
    v234 = sub_1BB86EFC8();
    v235 = sub_1BB87330C();
    v236 = v235;
    if (os_log_type_enabled(v234, v235))
    {
      LODWORD(v341) = v236;
      v237 = (uint8_t *)swift_slowAlloc();
      v340 = swift_slowAlloc();
      aBlock = (uint8_t *)v340;
      *(_DWORD *)v237 = 136315138;
      v336 = v237 + 4;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v238 = swift_allocObject();
      *(_OWORD *)(v238 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v238 + 56) = ObjectType;
      *(_QWORD *)(v238 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v238 + 32) = v233;
      v239 = v233;
      v343 = v231;
      v240 = v239;
      v241 = sub_1BB8729D0();
      v243 = v242;
      v244 = v347;
      sub_1BA4C2DD8(v315, v347, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v245 = v345;
      sub_1BA4C2DD8(v344, v345, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v246 = v243;
      v186 = v333;
      v247 = v244;
      v146 = v348;
      v248 = v245;
      v179 = v337;
      v249 = sub_1BAABDDAC(v241, v246, v247, v248);
      v356 = sub_1BA5D2E14(v249, v250, (uint64_t *)&aBlock);
      sub_1BB873A8C();

      v231 = v343;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA493000, v234, (os_log_type_t)v341, "Will load live activity data store, %s", v237, 0xCu);
      v251 = v340;
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v251, -1, -1);
      MEMORY[0x1BCCE5C38](v237, -1, -1);

    }
    else
    {

    }
    v145 = (uint64_t)v339;
    v252 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_1BAAB86D8(v231, (uint64_t)sub_1BAABF06C, v252);
    swift_release_n();
    v253 = v231;
    v254 = *((_QWORD *)v327 + 3);
    v255 = *((_QWORD *)v327 + 4);
    __swift_project_boxed_opaque_existential_1(v327, v254);
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v255 + 40))(v233, &protocol witness table for WebEmbedViewController, v254, v255);

  }
  v314(v145, v322, v146);
  v256 = 1;
  v179(v145, 0, 1, v146);
  v257 = objc_msgSend(v346, sel_loadedURL);
  if (v257)
  {
    v258 = v257;
    sub_1BB86C5EC();

    v256 = 0;
  }
  v259 = (uint64_t)v324;
  v179(v186, v256, 1, v146);
  v260 = v259 + *(int *)(v323 + 48);
  sub_1BA4C2DD8(v145, v259, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4C2DD8(v186, v260, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v261 = v313;
  v262 = &qword_1EF2AF000;
  if (v313(v259, 1, v146) != 1)
  {
    v263 = v320;
    sub_1BA4C2DD8(v259, v320, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    if (v261(v260, 1, v146) != 1)
    {
      v264 = v145;
      v265 = v338;
      v266 = v318;
      (*(void (**)(char *, uint64_t, uint64_t))(v338 + 32))(v318, v260, v146);
      sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v267 = sub_1BB872958();
      v268 = v259;
      v269 = *(void (**)(char *, uint64_t))(v265 + 8);
      v269(v266, v146);
      sub_1BA4A2E80(v333, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      sub_1BA4A2E80(v264, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v270 = v263;
      v262 = &qword_1EF2AF000;
      v269((char *)v270, v146);
      sub_1BA4A2E80(v268, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      if ((v267 & 1) != 0)
        goto LABEL_76;
LABEL_78:
      if (qword_1ED3A25E8 != -1)
        swift_once();
      v271 = sub_1BB86EFEC();
      __swift_project_value_buffer(v271, (uint64_t)qword_1ED4764A8);
      v272 = a15;
      v273 = sub_1BB86EFC8();
      v274 = sub_1BB87330C();
      if (os_log_type_enabled(v273, v274))
      {
        v275 = (uint8_t *)swift_slowAlloc();
        v276 = swift_slowAlloc();
        *(_DWORD *)v275 = 136315138;
        v348 = (uint64_t)(v275 + 4);
        aBlock = (uint8_t *)v276;
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v277 = swift_allocObject();
        *(_OWORD *)(v277 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v277 + 56) = ObjectType;
        *(_QWORD *)(v277 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
        *(_QWORD *)(v277 + 32) = v272;
        v278 = v272;
        v279 = sub_1BB8729D0();
        v281 = v280;
        v282 = v347;
        sub_1BA4C2DD8(v315, v347, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        v283 = v345;
        sub_1BA4C2DD8(v344, v345, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
        v284 = v281;
        v285 = v346;
        v286 = sub_1BAABDDAC(v279, v284, v282, v283);
        v356 = sub_1BA5D2E14(v286, v287, (uint64_t *)&aBlock);
        sub_1BB873A8C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA493000, v273, v274, "Load embed web view with URL, %s", v275, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v276, -1, -1);
        MEMORY[0x1BCCE5C38](v275, -1, -1);

      }
      else
      {
        v285 = v346;

      }
      if (qword_1ED3A2B78 != -1)
        swift_once();
      v288 = byte_1EF2AF301;
      v152 = sub_1BB86C58C();
      if (v288 == 1)
        objc_msgSend(v285, sel_loadURL_cachePolicy_, v152, 4);
      else
        objc_msgSend(v285, sel_loadURL_, v152);
      swift_release();
LABEL_89:

      return;
    }
    sub_1BA4A2E80(v186, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v263, v146);
LABEL_74:
    sub_1BA9ED590(v259, (unint64_t *)&qword_1ED3B04F0, (void (*)(uint64_t))sub_1BA6EF3B0);
    goto LABEL_78;
  }
  sub_1BA4A2E80(v186, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if (v261(v260, 1, v146) != 1)
    goto LABEL_74;
  sub_1BA4A2E80(v259, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
LABEL_76:
  if (qword_1ED3A2B78 == -1)
  {
    if ((*((_BYTE *)v262 + 769) & 1) != 0)
      goto LABEL_78;
  }
  else
  {
    swift_once();
    if ((*((_BYTE *)v262 + 769) & 1) != 0)
      goto LABEL_78;
  }
  v289 = *(void **)&a15[v329];
  if (v289)
  {
    v290 = objc_msgSend(v289, sel_state);
    if (v290)
    {
      v291 = v290;
      v292 = *(void **)&a15[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState];
      if (v292)
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
        v293 = v292;
        v294 = sub_1BB8738B8();

        if ((v294 & 1) != 0)
          goto LABEL_78;
      }
      else
      {

      }
    }
  }
  if (qword_1ED3A25E8 != -1)
    swift_once();
  v295 = sub_1BB86EFEC();
  __swift_project_value_buffer(v295, (uint64_t)qword_1ED4764A8);
  v296 = a15;
  v297 = sub_1BB86EFC8();
  v298 = sub_1BB87330C();
  if (os_log_type_enabled(v297, v298))
  {
    v299 = (uint8_t *)swift_slowAlloc();
    v300 = swift_slowAlloc();
    *(_DWORD *)v299 = 136315138;
    v348 = (uint64_t)(v299 + 4);
    aBlock = (uint8_t *)v300;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v301 = swift_allocObject();
    *(_OWORD *)(v301 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v301 + 56) = ObjectType;
    *(_QWORD *)(v301 + 64) = sub_1BA4A2870(&qword_1ED3A0F88, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v301 + 32) = v296;
    v302 = v296;
    v303 = sub_1BB8729D0();
    v305 = v304;
    v306 = v347;
    sub_1BA4C2DD8(v315, v347, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v307 = v345;
    sub_1BA4C2DD8(v344, v345, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v308 = sub_1BAABDDAC(v303, v305, v306, v307);
    v356 = sub_1BA5D2E14(v308, v309, (uint64_t *)&aBlock);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v297, v298, "Already loaded, %s", v299, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v300, -1, -1);
    MEMORY[0x1BCCE5C38](v299, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v346, sel_webViewSetNeedsLayout);
  swift_release();
}

uint64_t sub_1BAABDDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v38[1] = a1;
  v6 = type metadata accessor for WebEmbedDataVisualization();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v38[0] = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAABF0A8();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  v40 = a3;
  sub_1BA4C2DD8(a3, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v39 = a4;
  sub_1BA4C2DD8(a4, v17, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  LODWORD(a3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v17, 1, v6);
  v19 = v18;
  if ((_DWORD)a3 == 1)
  {
    if (v18 == 1)
    {
      v41 = 123;
      v42 = 0xE100000000000000;
      sub_1BB872AFC((_QWORD *)0x7B);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v20);
      v21 = v41;
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v22 = (uint64_t (*)(_QWORD))sub_1BA6EF3B0;
      v23 = v40;
    }
    else
    {
      v29 = v38[0];
      sub_1BA5193C4(v17, v38[0], (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v41 = 0;
      v42 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v41 = 123;
      v42 = 0xE100000000000000;
      sub_1BB872AFC((_QWORD *)0x7B);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("v24@?0{CGSize=dd}8");
      WebEmbedDataVisualization.identifier.getter();
      sub_1BB872AFC(v30);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v31);
      v21 = v41;
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v23 = v29;
      v22 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    }
    sub_1BA4A2E80(v23, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    if (v19 == 1)
    {
      v41 = 123;
      v42 = 0xE100000000000000;
      sub_1BB872AFC((_QWORD *)0x7B);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v24);
      sub_1BA4A2870((unint64_t *)&qword_1ED3A0CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      sub_1BB87420C();
      sub_1BB872AFC(v25);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v26);
      v21 = v41;
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      v27 = (uint64_t (*)(_QWORD))sub_1BA6EF3B0;
      v28 = v40;
    }
    else
    {
      v32 = v38[0];
      sub_1BA5193C4(v17, v38[0], (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v41 = 0;
      v42 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v41 = 123;
      v42 = 0xE100000000000000;
      sub_1BB872AFC((_QWORD *)0x7B);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v33);
      sub_1BA4A2870((unint64_t *)&qword_1ED3A0CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      sub_1BB87420C();
      sub_1BB872AFC(v34);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("v24@?0{CGSize=dd}8");
      WebEmbedDataVisualization.identifier.getter();
      sub_1BB872AFC(v35);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v36);
      v21 = v41;
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v28 = v32;
      v27 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    }
    sub_1BA4A2E80(v28, v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v21;
}

uint64_t sub_1BAABE240()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BAABE264()
{
  uint64_t v0;

  sub_1BAABB4FC(v0);
}

uint64_t sub_1BAABE26C()
{
  return sub_1BA4A2870((unint64_t *)&unk_1ED3B70B8, type metadata accessor for WebEmbedViewController, (uint64_t)&protocol conformance descriptor for WebEmbedViewController);
}

uint64_t sub_1BAABE2A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_1Tm_0(a1, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webLinkPresentingViewController, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEF48], a2);
}

uint64_t sub_1BAABE2B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_1Tm_0(a1, &OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_resizingProvider, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEFA8], a2);
}

uint64_t keypath_get_1Tm_0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = *a1 + *a2;
  swift_beginAccess();
  result = a3(v6);
  *a4 = result;
  return result;
}

uint64_t sub_1BAABE328()
{
  swift_beginAccess();
  return swift_weakAssign();
}

uint64_t sub_1BAABE384@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id sub_1BAABE3D4(unsigned __int8 *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;

  v2 = *a1;
  v3 = *a2;
  v4 = (_BYTE *)(*a2 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner);
  swift_beginAccess();
  *v4 = v2;
  v5 = 0.0;
  if (v2)
    v5 = 1.0;
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator), sel_setAlpha_, v5);
}

uint64_t sub_1BAABE450()
{
  return type metadata accessor for WebEmbedViewController(0);
}

uint64_t method lookup function for WebEmbedViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for WebEmbedURLHandlerDelegate()
{
  return objc_opt_self();
}

uint64_t sub_1BAABE484()
{
  return type metadata accessor for LoadSuccessContext(0);
}

uint64_t type metadata accessor for LoadSuccessContext(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A64E0);
}

uint64_t sub_1BAABE4A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BAABE518()
{
  return type metadata accessor for LoadFailureContext(0);
}

uint64_t type metadata accessor for LoadFailureContext(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A1358);
}

uint64_t sub_1BAABE534()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BAABE5B8()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1BAABE5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BAAB8BD8(a1, a2, v2, "Will start loading with spinner, %s", (SEL *)&selRef_startAnimating);
}

void sub_1BAABE604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BAAB8BD8(a1, a2, v2, "Did finish loading with spinner, %s", (SEL *)&selRef_stopAnimating);
}

void sub_1BAABE62C()
{
  sub_1BAAB8F9C();
}

void sub_1BAABE634(void *a1)
{
  sub_1BAAB92D0(a1);
}

void sub_1BAABE63C()
{
  sub_1BAAB9598();
}

void sub_1BAABE644(void *a1)
{
  sub_1BAAB9980(a1);
}

void sub_1BAABE64C()
{
  sub_1BAAB9EC4();
}

unint64_t sub_1BAABE654()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39C020;
  if (!qword_1ED39C020)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&unk_1ED39C010);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39C020);
  }
  return result;
}

void sub_1BAABE6AC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  Class v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  sub_1BA854878(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - v6;
  v8 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_layoutIdentifier];
  *v8 = 0;
  v8[1] = 0;
  v9 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onReuse;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone(v10), sel_init);
  v11 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onSizeInvalidation];
  *v11 = 0;
  v11[1] = 0;
  swift_unknownObjectWeakInit();
  v12 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  swift_weakInit();
  v13 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_onEmbedInteraction];
  *v13 = 0;
  v13[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_showsLoadingSpinner] = 1;
  v14 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorView;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WebEmbedErrorView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_contentFrameChanged] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredContentSizeCategoryOnPopulate] = 0;
  v15 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL];
  v16 = sub_1BB86C67C();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v17(&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataFeedURL], 1, 1, v16);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_location] = 0;
  v17(&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_sourceURL], 1, 1, v16);
  v18 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_feedConfiguration;
  *(_QWORD *)&v1[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D0]), sel_init);
  v19 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_viewportSize];
  *v19 = 0;
  v19[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_isResizable] = 0;
  v20 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_preferredSize];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v21 = &v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_dataVisualization];
  v22 = type metadata accessor for WebEmbedDataVisualization();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_loadedState] = 0;
  v23 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_activityIndicator;
  *(_QWORD *)&v1[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v24 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_tapGestureRecognizer;
  *(_QWORD *)&v1[v24] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, 0, 0);
  v25 = OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController__lastDatastoreUpdate;
  v26 = type metadata accessor for WebEmbedDatastoreUpdate();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA854878);
  sub_1BA4B07F0(0, &qword_1ED3A39F0, (uint64_t (*)(uint64_t))sub_1BA854878, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v27 = sub_1BB86E86C();
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA854878);
  *(_QWORD *)&v1[v25] = v27;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugLoadView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_debugVisualizationView] = 0;

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BAABEAB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  int v17;
  void *v18;
  void *v19;
  id v20;

  v1 = v0;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_stateMachine);
  if (!v10)
  {
    v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
LABEL_7:
    if (v12)
      return;
LABEL_8:
    v16 = v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_embedURL;
    swift_beginAccess();
    sub_1BA4C2DD8(v16, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      if (qword_1ED3A2B78 != -1)
        swift_once();
      v17 = byte_1EF2AF301;
      v18 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_webContentViewController);
      v19 = (void *)sub_1BB86C58C();
      if (v17 == 1)
        objc_msgSend(v18, sel_loadURL_cachePolicy_, v19, 4);
      else
        objc_msgSend(v18, sel_loadURL_, v19);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    return;
  }
  v11 = objc_msgSend(v10, sel_state, v7);
  v12 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_errorState);
  if (!v11)
    goto LABEL_7;
  if (!v12)
  {

    return;
  }
  v20 = v11;
  sub_1BA49A224(0, (unint64_t *)&unk_1ED39C010);
  v13 = v12;
  v14 = v20;
  v15 = sub_1BB8738B8();

  if ((v15 & 1) != 0)
    goto LABEL_8;
}

void sub_1BAABED1C(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v5 = (void *)MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webLinkPresentingViewController);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_view);

    if (v7)
    {
      v8 = objc_msgSend(v7, sel_window);

      if (v8)
      {
        v9 = objc_msgSend(v8, sel_rootViewController);

        if (v9)
        {
          v10 = (id)sub_1BB8733CC();

          objc_msgSend(v10, sel_presentViewController_animated_completion_, a1, a2 & 1, 0);
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1BAABEE10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_1BA4C010C(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedCoordinator, (uint64_t)v9);
  v3 = v10;
  v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier + 8))
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26WebEmbedURLHandlerDelegate_webEmbedIdentifier + 8);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v7 = *(void (**)(uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  v7(v5, v6, a1, 0, v3, v4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1BAABEED4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAABEEF8(double a1, double a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  *(double *)v5 = a1;
  *(double *)&v5[1] = a2;
  return v3(v5);
}

uint64_t sub_1BAABEF28(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double, double))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1BAABEF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6EF3B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAABEF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

void sub_1BAABEFD8()
{
  uint64_t *v0;

  sub_1BAAB682C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BAABEFE4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAABF010()
{
  uint64_t v0;

  sub_1BAAB6F18(*(_QWORD *)(v0 + 16));
}

void sub_1BAABF018()
{
  uint64_t v0;

  sub_1BAAB732C(v0);
}

uint64_t objectdestroy_58Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAABF058(void *a1)
{
  uint64_t *v1;

  sub_1BAAB73C4(a1, v1[2], v1[3], v1[4]);
}

void sub_1BAABF064(double a1, double a2)
{
  uint64_t v2;

  sub_1BAAB79A0(v2, a1, a2);
}

void sub_1BAABF06C()
{
  uint64_t v0;

  sub_1BAAB8378(v0);
}

uint64_t sub_1BAABF074()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAABF098()
{
  uint64_t v0;

  sub_1BAAB7D70(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(unsigned __int8 *)(v0 + 25));
}

void sub_1BAABF0A8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A2460)
  {
    sub_1BA6EF3B0();
    sub_1BA6CAB4C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A2460);
  }
}

void sub_1BAABF1A4()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = (void *)sub_1BB872970();
  objc_msgSend(v1, sel_setTitle_, v2);

  v3 = (void *)sub_1BB872970();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  if (v4)
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v6 = v0;
    v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 2, v6, sel_doDismiss);

    v8 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
    objc_msgSend(v7, sel_setTintColor_, v8);

    v9 = objc_msgSend(v6, sel_navigationItem);
    sub_1BA65E330();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v10 + 32) = v7;
    sub_1BB872DCC();
    sub_1BAAC19FC();
    v11 = v7;
    v12 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setRightBarButtonItems_, v12);

    v13 = *(void **)&v6[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tableView];
    objc_msgSend(v13, sel_setDelegate_, v6);
    objc_msgSend(v13, sel_setDataSource_, v6);
    objc_msgSend(v13, sel_setAlwaysBounceVertical_, 1);
    type metadata accessor for DebugJournalTableViewCell();
    sub_1BB873234();
    type metadata accessor for FeedItemTableViewCell();
    sub_1BB873234();
    v14 = objc_msgSend(v6, sel_view);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, sel_addSubview_, v13);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BAABF5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;

  v1 = type metadata accessor for DebugJournalGroupItem();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - v6;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_sections);
  v9 = sub_1BB86CBD4();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(_QWORD *)(v8 + 16))
  {
    v10 = *(_QWORD *)(v8 + 24 * v9 + 48);
    swift_bridgeObjectRetain();
    v11 = sub_1BB86CBB0();
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11 < *(_QWORD *)(v10 + 16))
      {
        sub_1BA4C2DD8(v10+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v11, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugJournalGroupItem);
        swift_bridgeObjectRelease();
        sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DebugJournalGroupItem);
        v12 = (char *)&loc_1BAABF6E0 + *((int *)qword_1BAAC0650 + swift_getEnumCaseMultiPayload());
        __asm { BR              X10 }
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x1BAAC0638);
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __break(1u);
  goto LABEL_8;
}

void *sub_1BAAC0664()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;

  type metadata accessor for DebugJournalTableViewCell();
  v0 = (void *)sub_1BB87321C();
  v1 = objc_msgSend(v0, sel_textLabel);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v2, sel_setFont_, v3);

  }
  v4 = objc_msgSend(v0, sel_textLabel);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

  }
  v7 = objc_msgSend(v0, sel_textLabel);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_setNumberOfLines_, 0);

  }
  v9 = objc_msgSend(v0, sel_detailTextLabel);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v10, sel_setTextColor_, v11);

  }
  v12 = objc_msgSend(v0, sel_detailTextLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v13, sel_setFont_, v14);

  }
  v15 = objc_msgSend(v0, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v0, sel_setSelectionStyle_, 0);
  objc_msgSend(v0, sel_setAccessoryType_, 0);
  return v0;
}

void sub_1BAAC08B4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v16;
  void *v17;
  void *v18;
  id v19;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1BCCE5D40](v5);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_textLabel);

    if (!v8)
    {
      v7 = 0;
      goto LABEL_8;
    }
    v9 = objc_msgSend(v8, sel_text);

    if (v9)
    {
      v7 = (void *)sub_1BB8729A0();
      v8 = v10;

      goto LABEL_8;
    }
    v7 = 0;
  }
  v8 = 0;
LABEL_8:
  v11 = a3[3];
  v12 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v11);
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 24))(v11);
  if (!v8)
  {
    if (!v14)
      goto LABEL_20;
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  if (!v14)
    goto LABEL_17;
  if (v7 == (void *)v13 && v8 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return;
  }
LABEL_20:
  swift_beginAccess();
  v17 = (void *)MEMORY[0x1BCCE5D40](v5);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_imageView);

    if (v19)
    {
      objc_msgSend(v19, sel_setImage_, a1);

    }
  }
}

void sub_1BAAC0BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  v2 = sub_1BB8714E8();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for DebugJournalGroupItem();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - v9;
  v17 = v1;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_sections);
  v12 = sub_1BB86CBD4();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(_QWORD *)(v11 + 16))
  {
    v13 = *(_QWORD *)(v11 + 24 * v12 + 48);
    swift_bridgeObjectRetain();
    v14 = sub_1BB86CBB0();
    if ((v14 & 0x8000000000000000) == 0)
    {
      if (v14 < *(_QWORD *)(v13 + 16))
      {
        sub_1BA4C2DD8(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugJournalGroupItem);
        swift_bridgeObjectRelease();
        sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugJournalGroupItem);
        v15 = (char *)&loc_1BAAC0D24 + *((int *)qword_1BAAC1088 + swift_getEnumCaseMultiPayload());
        __asm { BR              X10 }
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x1BAAC1088);
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __break(1u);
  goto LABEL_8;
}

void sub_1BAAC11B8(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(id))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  id v17;
  id v18;
  uint64_t v19;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](v7);
  if (v8)
  {
    v9 = (char *)v8;
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v10 = sub_1BB86DEE8();
    v12 = v11;
    if (a1)
      v13 = a1;
    else
      v13 = *(id *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage];
    v14 = &v9[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages];
    swift_beginAccess();
    v15 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *(_QWORD *)v14;
    *(_QWORD *)v14 = 0x8000000000000000;
    sub_1BB4BF834((uint64_t)v13, v10, v12, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v14 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v17 = v15;
    if (!a1)
      v17 = *(id *)&v9[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage];
    v18 = v15;
    a4(v17);

  }
}

uint64_t type metadata accessor for DebugJournalGroupViewController()
{
  return objc_opt_self();
}

id sub_1BAAC1420(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  objc_class *ObjectType;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tableView;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v11 = v8;
  *(_QWORD *)&v8[v9] = objc_msgSend(v10, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages] = MEMORY[0x1E0DEE9E0];
  v12 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_placeholderImage;
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_systemGrayColor);
  v15 = objc_msgSend(v13, sel_lightGrayColor);
  v16 = (void *)objc_opt_self();
  v17 = *MEMORY[0x1E0DC1420];
  v18 = objc_msgSend(v16, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1420]);
  v19 = sub_1BACD43D0(v14, 0, 0, v15, v18, 44.0, 44.0);

  *(_QWORD *)&v11[v12] = v19;
  v20 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage;
  v21 = objc_msgSend(v13, sel_lightGrayColor);
  v22 = objc_msgSend(v16, sel_systemFontOfSize_weight_, 12.0, v17);
  v23 = sub_1BACD43D0(0, 4271950, 0xE300000000000000, v21, v22, 44.0, 44.0);

  *(_QWORD *)&v11[v20] = v23;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_cloudContext] = a1;
  sub_1BA4C010C(a3, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tagService]);
  v24 = &v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_commandCenter];
  *(_QWORD *)v24 = a5;
  *((_QWORD *)v24 + 1) = a6;
  sub_1BA670450(a7, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_group]);
  v25 = a1;
  swift_unknownObjectRetain();
  sub_1BB843E3C((uint64_t)v25, a2, a3, a4, a7, a8);
  v27 = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_sections] = v27;

  v39.receiver = v11;
  v39.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v39, sel_initWithNibName_bundle_, 0, 0);
  sub_1BAA7D0B0(a7);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v28;
}

void sub_1BAAC16FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_tableView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_feedItemImages] = MEMORY[0x1E0DEE9E0];
  v2 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_placeholderImage;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_systemGrayColor);
  v5 = objc_msgSend(v3, sel_lightGrayColor);
  v6 = (void *)objc_opt_self();
  v7 = *MEMORY[0x1E0DC1420];
  v8 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1420]);
  v9 = sub_1BACD43D0(v4, 0, 0, v5, v8, 44.0, 44.0);

  *(_QWORD *)&v0[v2] = v9;
  v10 = OBJC_IVAR____TtC8NewsFeed31DebugJournalGroupViewController_naImage;
  v11 = objc_msgSend(v3, sel_lightGrayColor);
  v12 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 12.0, v7);
  v13 = sub_1BACD43D0(0, 4271950, 0xE300000000000000, v11, v12, 44.0, 44.0);

  *(_QWORD *)&v0[v10] = v13;
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BAAC18F4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AF5B0)
  {
    sub_1BB8714E8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AF5B0);
  }
}

uint64_t sub_1BAAC195C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAAC1980()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1BAAC19AC(uint64_t a1)
{
  uint64_t v1;

  sub_1BAAC08B4(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1BAAC19B8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void sub_1BAAC19EC(void *a1)
{
  uint64_t v1;

  sub_1BAAC11B8(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), *(void (**)(id))(v1 + 64));
}

unint64_t sub_1BAAC19FC()
{
  unint64_t result;

  result = qword_1EF2AF5C0;
  if (!qword_1EF2AF5C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2AF5C0);
  }
  return result;
}

void sub_1BAAC1A3C(_BYTE *a1@<X8>)
{
  FeedKnobsConfigType.feedRefreshStrategy(for:)(a1);
}

void FeedKnobsConfigType.feedRefreshStrategy(for:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t dispatch thunk of FeedKnobsConfigType.maxGroups.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedKnobsConfigType.groupKnobs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedKnobsConfigType.feedRefreshStrategy(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1BAAC1A74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - v13;
  if (*v2)
  {
    if (*v2 == 1)
    {
      v15 = objc_msgSend(a1, sel_loadDate, v12);
      if (v15)
      {
        v16 = v15;
        sub_1BB86C874();

        v17 = sub_1BB86C8B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 0, 1, v17);
      }
      else
      {
        v24 = sub_1BB86C8B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
      }
      v14 = v10;
    }
    else
    {
      v21 = objc_msgSend(a1, sel_publisherSpecifiedArticleIDsModifiedDate, v12);
      if (v21)
      {
        v22 = v21;
        sub_1BB86C874();

        v23 = sub_1BB86C8B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 0, 1, v23);
      }
      else
      {
        v26 = sub_1BB86C8B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
      }
      v14 = v7;
    }
  }
  else
  {
    v18 = objc_msgSend(a1, sel_fetchDate, v12);
    if (v18)
    {
      v19 = v18;
      sub_1BB86C874();

      v20 = sub_1BB86C8B0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 0, 1, v20);
    }
    else
    {
      v25 = sub_1BB86C8B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
    }
  }
  return sub_1BA50236C((uint64_t)v14, a2);
}

uint64_t sub_1BAAC1C9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB8007C0(*a1, *a2);
}

uint64_t sub_1BAAC1CA8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAC1D50()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAAC1DD4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAC1E78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAAC27F8();
  *a1 = result;
  return result;
}

void sub_1BAAC1EA4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000065;
  v4 = 0xE800000000000000;
  v5 = 0x6574614464616F6CLL;
  if (v2 != 1)
  {
    v5 = 0xD000000000000028;
    v4 = 0x80000001BB95C130;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7461446863746566;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAAC1F0C()
{
  sub_1BAAC23A0();
  return sub_1BB872D60();
}

uint64_t sub_1BAAC1F68()
{
  sub_1BAAC23A0();
  return sub_1BB872D0C();
}

void sub_1BAAC1FB4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251178;
}

BOOL static FormatTagBinding.DateTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatTagBinding.DateTime.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatTagBinding.DateTime.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAAC2048()
{
  unint64_t result;

  result = qword_1EF2AF5D0;
  if (!qword_1EF2AF5D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.DateTime, &type metadata for FormatTagBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2AF5D0);
  }
  return result;
}

unint64_t sub_1BAAC208C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAC20B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAC20B0()
{
  unint64_t result;

  result = qword_1EF2AF5D8;
  if (!qword_1EF2AF5D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.DateTime, &type metadata for FormatTagBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2AF5D8);
  }
  return result;
}

unint64_t sub_1BAAC20F4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAAC2128();
  a1[2] = sub_1BAAC216C();
  result = sub_1BAAC2048();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAC2128()
{
  unint64_t result;

  result = qword_1EF2AF5E0;
  if (!qword_1EF2AF5E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.DateTime, &type metadata for FormatTagBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2AF5E0);
  }
  return result;
}

unint64_t sub_1BAAC216C()
{
  unint64_t result;

  result = qword_1EF2AF5E8;
  if (!qword_1EF2AF5E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.DateTime, &type metadata for FormatTagBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2AF5E8);
  }
  return result;
}

uint64_t sub_1BAAC21B0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatTagBinding.DateTime.init(from:)(a1, a2);
}

uint64_t sub_1BAAC21C4(_QWORD *a1)
{
  return FormatTagBinding.DateTime.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatTagBinding.DateTime()
{
  return &type metadata for FormatTagBinding.DateTime;
}

uint64_t _s14descr1E728EA89V8DateTimeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAAC2238 + 4 * byte_1BB89A039[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAAC226C + 4 * byte_1BB89A034[v4]))();
}

uint64_t sub_1BAAC226C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC2274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAC227CLL);
  return result;
}

uint64_t sub_1BAAC2288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAC2290);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAAC2294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC229C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E728EA89V8DateTimeO10CodingTypeOMa()
{
  return &_s14descr1E728EA89V8DateTimeO10CodingTypeON;
}

unint64_t sub_1BAAC22BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AF5F0;
  if (!qword_1EF2AF5F0)
  {
    sub_1BAAC2304();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AF5F0);
  }
  return result;
}

void sub_1BAAC2304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AF5F8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AF5F8);
  }
}

unint64_t sub_1BAAC235C()
{
  unint64_t result;

  result = qword_1EF2AF600;
  if (!qword_1EF2AF600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A240, &_s14descr1E728EA89V8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2AF600);
  }
  return result;
}

unint64_t sub_1BAAC23A0()
{
  unint64_t result;

  result = qword_1EF2AF608;
  if (!qword_1EF2AF608)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A1C8, &_s14descr1E728EA89V8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2AF608);
  }
  return result;
}

uint64_t sub_1BAAC23E4@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *boxed_opaque_existential_0;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43[3];
  uint64_t v44;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v43 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v43 - v12;
  if (*a1)
  {
    if (*a1 == 1)
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
      v15 = (v14 + 32) & ~v14;
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
      v17 = (_QWORD *)(v16 + v15);
      v44 = v5;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
      v19 = objc_msgSend((id)swift_unknownObjectRetain(), sel_loadDate);
      if (v19)
      {
        v20 = v19;
        sub_1BB86C874();

        v21 = sub_1BB86C8B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 0, 1, v21);
      }
      else
      {
        v36 = sub_1BB86C8B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v10, 1, 1, v36);
      }
      sub_1BA50236C((uint64_t)v10, (uint64_t)boxed_opaque_existential_0);
      v37 = v17;
      v38 = 0x7461442064616F4CLL;
      v39 = 0xE900000000000065;
    }
    else
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
      v30 = (v29 + 32) & ~v29;
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
      v31 = (_QWORD *)(v16 + v30);
      v44 = v5;
      v32 = __swift_allocate_boxed_opaque_existential_0(v43);
      v33 = objc_msgSend((id)swift_unknownObjectRetain(), sel_publisherSpecifiedArticleIDsModifiedDate);
      if (v33)
      {
        v34 = v33;
        sub_1BB86C874();

        v35 = sub_1BB86C8B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v7, 0, 1, v35);
      }
      else
      {
        v41 = sub_1BB86C8B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v7, 1, 1, v41);
      }
      sub_1BA50236C((uint64_t)v7, (uint64_t)v32);
      v39 = 0x80000001BB96AB60;
      v37 = v31;
      v38 = 0xD00000000000002CLL;
    }
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v23 = (v22 + 32) & ~v22;
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
    v24 = (_QWORD *)(v16 + v23);
    v44 = v5;
    v25 = __swift_allocate_boxed_opaque_existential_0(v43);
    v26 = objc_msgSend((id)swift_unknownObjectRetain(), sel_fetchDate);
    if (v26)
    {
      v27 = v26;
      sub_1BB86C874();

      v28 = sub_1BB86C8B0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 0, 1, v28);
    }
    else
    {
      v40 = sub_1BB86C8B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v13, 1, 1, v40);
    }
    sub_1BA50236C((uint64_t)v13, (uint64_t)v25);
    v37 = v24;
    v38 = 0x6144206863746546;
    v39 = 0xEA00000000006574;
  }
  sub_1BAAF40BC(v38, v39, (uint64_t)v43, v37);
  result = swift_unknownObjectRelease();
  *a2 = v16;
  return result;
}

uint64_t sub_1BAAC27F8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t FormatShineBlend.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BA8961B4(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

void FormatShineBlend.blendMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 65);
}

void FormatShineBlend.alphaProcessor.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 80);
  v3 = *(_BYTE *)(v1 + 81);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t sub_1BAAC28B4@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatShineBlend.init(from:)(a1, a2);
}

uint64_t sub_1BAAC28C8(_QWORD *a1)
{
  return FormatShineBlend.encode(to:)(a1);
}

BOOL _s8NewsFeed16FormatShineBlendV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  int v3;
  double v4;
  char v5;
  char v6;
  char v7;
  int v8;
  double v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BOOL8 result;
  _OWORD v22[4];
  char v23;
  _OWORD v24[4];
  char v25;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(unsigned __int8 *)(a1 + 65);
  v4 = *(double *)(a1 + 72);
  v5 = *(_BYTE *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 81);
  v7 = *(_BYTE *)(a2 + 64);
  v8 = *(unsigned __int8 *)(a2 + 65);
  v9 = *(double *)(a2 + 72);
  v10 = *(_BYTE *)(a2 + 80);
  v11 = *(_BYTE *)(a2 + 81);
  v12 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v12;
  v13 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v13;
  v25 = v2;
  v14 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v15;
  v23 = v7;
  if (!_s8NewsFeed16FormatShineColorO2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v22))
    return 0;
  if (v3 == 16)
  {
    if (v8 != 16)
      return 0;
  }
  else
  {
    if (v8 == 16)
      return 0;
    LOBYTE(v24[0]) = v3;
    LOBYTE(v22[0]) = v8;
    v16 = FormatBlendMode.rawValue.getter();
    v18 = v17;
    if (v16 == FormatBlendMode.rawValue.getter() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v20 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v20 & 1) == 0)
        return result;
    }
  }
  if ((v6 & 1) != 0)
  {
    if ((v11 & 1) != 0)
      return 1;
  }
  else if ((v11 & 1) == 0)
  {
    if ((v5 & 1) != 0)
    {
      if (v4 == 0.0)
      {
        if ((v10 & 1) != 0)
          return *(_QWORD *)&v9 == 0;
      }
      else if ((v10 & 1) != 0)
      {
        return *(_QWORD *)&v9 != 0;
      }
      return 0;
    }
    if ((v10 & 1) == 0 && v4 == v9)
      return 1;
  }
  return 0;
}

unint64_t sub_1BAAC2A6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAC2A90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAC2A90()
{
  unint64_t result;

  result = qword_1EF2AF610;
  if (!qword_1EF2AF610)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineBlend, &type metadata for FormatShineBlend);
    atomic_store(result, (unint64_t *)&qword_1EF2AF610);
  }
  return result;
}

unint64_t sub_1BAAC2AD4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAAC2B08();
  a1[2] = sub_1BAAC2B4C();
  result = sub_1BAAC2B90();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAC2B08()
{
  unint64_t result;

  result = qword_1EF2AF618;
  if (!qword_1EF2AF618)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineBlend, &type metadata for FormatShineBlend);
    atomic_store(result, (unint64_t *)&qword_1EF2AF618);
  }
  return result;
}

unint64_t sub_1BAAC2B4C()
{
  unint64_t result;

  result = qword_1EF2AF620;
  if (!qword_1EF2AF620)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineBlend, &type metadata for FormatShineBlend);
    atomic_store(result, (unint64_t *)&qword_1EF2AF620);
  }
  return result;
}

unint64_t sub_1BAAC2B90()
{
  unint64_t result;

  result = qword_1EF2AF628;
  if (!qword_1EF2AF628)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineBlend, &type metadata for FormatShineBlend);
    atomic_store(result, (unint64_t *)&qword_1EF2AF628);
  }
  return result;
}

uint64_t destroy for FormatShineColor(uint64_t a1)
{
  return sub_1BA8962BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatShineBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_BYTE *)(a2 + 64);
  sub_1BA8961B4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for FormatShineBlend(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v23;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v23 = *(_BYTE *)(a2 + 64);
  sub_1BA8961B4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v23);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v23;
  sub_1BA8962BC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v21 = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v21;
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FormatShineBlend(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_BYTE *)(a1 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_BYTE *)(a1 + 64) = v4;
  sub_1BA8962BC(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatShineBlend(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 82))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatShineBlend(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 82) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatShineBlend()
{
  return &type metadata for FormatShineBlend;
}

double static FormatCodingFloatEquationZeroStrategy.defaultValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  sub_1BA790480();
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

uint64_t sub_1BAAC2F58()
{
  return swift_deallocObject();
}

double sub_1BAAC2F6C@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  sub_1BA790480();
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double static FormatCodingFloatEquationOneStrategy.defaultValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x3FF0000000000000;
  sub_1BA790480();
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double sub_1BAAC3040@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x3FF0000000000000;
  sub_1BA790480();
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double static FormatCodingFloatEquationEightStrategy.defaultValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x4020000000000000;
  sub_1BA790480();
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

double sub_1BAAC3118@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x4020000000000000;
  sub_1BA790480();
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 40) = 0;
  *a1 = v3;
  return result;
}

BOOL _s8NewsFeed36FormatCodingFloatEquationOneStrategyV12shouldEncode12wrappedValueSbAA0cF0VyAA0cE0OG_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v1 = *a1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x3FF0000000000000;
  sub_1BA790480();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v2;
  *(_BYTE *)(inited + 40) = 0;
  LOBYTE(v1) = sub_1BA881EAC(v1, inited);
  swift_setDeallocating();
  sub_1BA82EF88(0, qword_1ED3B5BC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
  swift_arrayDestroy();
  return (v1 & 1) == 0;
}

BOOL _s8NewsFeed37FormatCodingFloatEquationZeroStrategyV12shouldEncode12wrappedValueSbAA0cF0VyAA0cE0OG_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v1 = *a1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  sub_1BA790480();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v2;
  *(_BYTE *)(inited + 40) = 0;
  LOBYTE(v1) = sub_1BA881EAC(v1, inited);
  swift_setDeallocating();
  sub_1BA82EF88(0, qword_1ED3B5BC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
  swift_arrayDestroy();
  return (v1 & 1) == 0;
}

BOOL _s8NewsFeed38FormatCodingFloatEquationEightStrategyV12shouldEncode12wrappedValueSbAA0cF0VyAA0cE0OG_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v1 = *a1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x4020000000000000;
  sub_1BA790480();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v2;
  *(_BYTE *)(inited + 40) = 0;
  LOBYTE(v1) = sub_1BA881EAC(v1, inited);
  swift_setDeallocating();
  sub_1BA82EF88(0, qword_1ED3B5BC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
  swift_arrayDestroy();
  return (v1 & 1) == 0;
}

unint64_t sub_1BAAC33CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAC33F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAC33F0()
{
  unint64_t result;

  result = qword_1EF2AF630;
  if (!qword_1EF2AF630)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingFloatEquationZeroStrategy, &type metadata for FormatCodingFloatEquationZeroStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AF630);
  }
  return result;
}

uint64_t sub_1BAAC3434()
{
  return sub_1BAAC347C((unint64_t *)&qword_1ED3B4008, (uint64_t)&protocol conformance descriptor for FormatEquation<A>);
}

uint64_t sub_1BAAC3458()
{
  return sub_1BAAC347C((unint64_t *)&qword_1ED3B4000, (uint64_t)&protocol conformance descriptor for FormatEquation<A>);
}

uint64_t sub_1BAAC347C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA82EF88(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquation);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAAC34CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAC34F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAC34F0()
{
  unint64_t result;

  result = qword_1EF2AF698;
  if (!qword_1EF2AF698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingFloatEquationOneStrategy, &type metadata for FormatCodingFloatEquationOneStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AF698);
  }
  return result;
}

unint64_t sub_1BAAC3534(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAC3558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAC3558()
{
  unint64_t result;

  result = qword_1EF2AF700;
  if (!qword_1EF2AF700)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingFloatEquationEightStrategy, &type metadata for FormatCodingFloatEquationEightStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2AF700);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingFloatEquationZeroStrategy()
{
  return &type metadata for FormatCodingFloatEquationZeroStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingFloatEquationOneStrategy()
{
  return &type metadata for FormatCodingFloatEquationOneStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingFloatEquationEightStrategy()
{
  return &type metadata for FormatCodingFloatEquationEightStrategy;
}

uint64_t WebEmbedDataSourcesConfiguration.dataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedDataSourcesConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;

  v18 = a2;
  sub_1BAAC379C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAAC3AB0(0, &qword_1EF2AF788, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAAC38DC();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BAAC37F0();
    v13 = v12;
    sub_1BAAC3920();
    sub_1BB874068();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
    {
      sub_1BAAC3968((uint64_t)v6);
      v15 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v15 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *v18 = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAAC379C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AF768)
  {
    sub_1BAAC37F0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AF768);
  }
}

void sub_1BAAC37F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AF770)
  {
    sub_1BAAC3854();
    sub_1BAAC3898();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AF770);
  }
}

unint64_t sub_1BAAC3854()
{
  unint64_t result;

  result = qword_1EF2AF778;
  if (!qword_1EF2AF778)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GenericDataVisualizationResponseItem, &type metadata for GenericDataVisualizationResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EF2AF778);
  }
  return result;
}

unint64_t sub_1BAAC3898()
{
  unint64_t result;

  result = qword_1EF2AF780;
  if (!qword_1EF2AF780)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GenericDataVisualizationResponseItem, &type metadata for GenericDataVisualizationResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EF2AF780);
  }
  return result;
}

unint64_t sub_1BAAC38DC()
{
  unint64_t result;

  result = qword_1EF2AF790;
  if (!qword_1EF2AF790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A62C, &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF790);
  }
  return result;
}

unint64_t sub_1BAAC3920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AF798;
  if (!qword_1EF2AF798)
  {
    sub_1BAAC37F0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AF798);
  }
  return result;
}

uint64_t sub_1BAAC3968(uint64_t a1)
{
  uint64_t v2;

  sub_1BAAC379C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WebEmbedDataSourcesConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BAAC3AB0(0, &qword_1EF2AF7A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAAC38DC();
  sub_1BB8746C8();
  v10[1] = v8;
  sub_1BAAC3B0C();
  sub_1BAAC3B60();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BAAC3AB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAAC38DC();
    v7 = a3(a1, &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BAAC3B0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B6260)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B6260);
  }
}

unint64_t sub_1BAAC3B60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2AF7A8;
  if (!qword_1EF2AF7A8)
  {
    sub_1BAAC3B0C();
    v2 = v1;
    v3 = sub_1BAAC3898();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7A8);
  }
  return result;
}

uint64_t sub_1BAAC3BC0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAAC3C18()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAAC3C38()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAAC3C8C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BAAC3CDC(_QWORD *a1@<X8>)
{
  *a1 = 0x72756F5361746164;
  a1[1] = 0xEB00000000736563;
}

uint64_t sub_1BAAC3D00()
{
  return 0x72756F5361746164;
}

uint64_t sub_1BAAC3D20@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BAAC3D74()
{
  sub_1BAAC38DC();
  return sub_1BB874710();
}

uint64_t sub_1BAAC3D9C()
{
  sub_1BAAC38DC();
  return sub_1BB87471C();
}

uint64_t sub_1BAAC3DC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WebEmbedDataSourcesConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BAAC3DD8(_QWORD *a1)
{
  return WebEmbedDataSourcesConfiguration.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WebEmbedDataSourcesConfiguration()
{
  return &type metadata for WebEmbedDataSourcesConfiguration;
}

uint64_t storeEnumTagSinglePayload for WebEmbedDataSourcesConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAAC3E3C + 4 * asc_1BB89A4B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAAC3E5C + 4 * byte_1BB89A4B5[v4]))();
}

_BYTE *sub_1BAAC3E3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAAC3E5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAAC3E64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAAC3E6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAAC3E74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAAC3E7C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataSourcesConfiguration.CodingKeys()
{
  return &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys;
}

unint64_t sub_1BAAC3E9C()
{
  unint64_t result;

  result = qword_1EF2AF7B0;
  if (!qword_1EF2AF7B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A604, &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7B0);
  }
  return result;
}

unint64_t sub_1BAAC3EE4()
{
  unint64_t result;

  result = qword_1EF2AF7B8;
  if (!qword_1EF2AF7B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A53C, &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7B8);
  }
  return result;
}

unint64_t sub_1BAAC3F2C()
{
  unint64_t result;

  result = qword_1EF2AF7C0;
  if (!qword_1EF2AF7C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A564, &type metadata for WebEmbedDataSourcesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7C0);
  }
  return result;
}

void sub_1BAAC3F70()
{
  __asm { BR              X10 }
}

void sub_1BAAC3FAC(uint64_t a1)
{
  uint64_t *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = objc_msgSend(*(id *)(a1 + 40), sel_storyStyle);
  v3 = swift_allocObject();
  if (v2)
  {
    sub_1BAAC424C(v2, &v7);
    v4 = v7;
    sub_1BAAC435C(v2, &v6);

    v5 = v6;
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v5;
  }
  else
  {
    sub_1BAAC4B7C();
    sub_1BB028F90((uint64_t *)(v3 + 16));
  }
  *v1 = v3 | 0x3000000000000000;
}

void sub_1BAAC424C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  id v7;

  v3 = objc_msgSend(a1, sel_foreground_color);
  if (v3)
  {
    v7 = v3;
    FCColor.formatColor.getter(a2);

  }
  else
  {
    v4 = swift_allocObject();
    *(int64x2_t *)(v4 + 16) = vdupq_n_s64(0x404E000000000000uLL);
    *(_QWORD *)(v4 + 32) = 0x4050C00000000000;
    *(_QWORD *)(v4 + 40) = 0x3FE3333333333333;
    *(_BYTE *)(v4 + 48) = 0;
    v5 = v4 | 0x6000000000000000;
    v6 = (int64x2_t *)swift_allocObject();
    v6[1] = vdupq_n_s64(0x4068600000000000uLL);
    v6[2].i64[0] = 0x4067800000000000;
    v6[2].i64[1] = 0x3FE3333333333333;
    v6[3].i8[0] = 0;
    swift_retain();
    swift_release();
    swift_release();
    *a2 = v5;
  }
}

void sub_1BAAC435C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  int64x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = objc_msgSend(a1, sel_dark_style_foreground_color);
  if (v3)
  {
    v7 = v3;
    FCColor.formatColor.getter(a2);

  }
  else
  {
    v4 = (int64x2_t *)swift_allocObject();
    v4[1] = vdupq_n_s64(0x404E000000000000uLL);
    v4[2].i64[0] = 0x4050C00000000000;
    v4[2].i64[1] = 0x3FE3333333333333;
    v4[3].i8[0] = 0;
    v5 = swift_allocObject();
    *(int64x2_t *)(v5 + 16) = vdupq_n_s64(0x4068600000000000uLL);
    *(_QWORD *)(v5 + 32) = 0x4067800000000000;
    *(_QWORD *)(v5 + 40) = 0x3FE3333333333333;
    *(_BYTE *)(v5 + 48) = 0;
    v6 = v5 | 0x6000000000000000;
    swift_retain();
    swift_release();
    swift_release();
    *a2 = v6;
  }
}

void sub_1BAAC445C(char *a1)
{
  sub_1BB7F929C(*a1);
}

void sub_1BAAC4468()
{
  char *v0;

  sub_1BA8D26E0(*v0);
}

void sub_1BAAC4470(uint64_t a1)
{
  char *v1;

  sub_1BA9D2BEC(a1, *v1);
}

void sub_1BAAC4478(uint64_t a1)
{
  char *v1;

  sub_1BAB0944C(a1, *v1);
}

void sub_1BAAC4480(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252368;
}

uint64_t FormatHeadlineBinding.Color.hash(into:)()
{
  return sub_1BB8745D8();
}

BOOL static FormatHeadlineBinding.Color.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatHeadlineBinding.Color.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAAC4514()
{
  unint64_t result;

  result = qword_1EF2AF7C8;
  if (!qword_1EF2AF7C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Color, &type metadata for FormatHeadlineBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7C8);
  }
  return result;
}

unint64_t sub_1BAAC4558(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAC457C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAC457C()
{
  unint64_t result;

  result = qword_1EF2AF7D0;
  if (!qword_1EF2AF7D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Color, &type metadata for FormatHeadlineBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7D0);
  }
  return result;
}

unint64_t sub_1BAAC45C0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA644404();
  a1[2] = sub_1BA624A14();
  result = sub_1BAAC4514();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Color()
{
  return &type metadata for FormatHeadlineBinding.Color;
}

ValueMetadata *_s14descr1E728F061C5ColorO10CodingTypeOMa()
{
  return &_s14descr1E728F061C5ColorO10CodingTypeON;
}

unint64_t sub_1BAAC4618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AF7D8;
  if (!qword_1EF2AF7D8)
  {
    sub_1BAAC4660();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7D8);
  }
  return result;
}

void sub_1BAAC4660()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AF7E0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AF7E0);
  }
}

unint64_t sub_1BAAC46B8()
{
  unint64_t result;

  result = qword_1EF2AF7E8;
  if (!qword_1EF2AF7E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A890, &_s14descr1E728F061C5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2AF7E8);
  }
  return result;
}

void sub_1BAAC46FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BAAC4790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA76C878(v0, v2);
  v4 = objc_msgSend(*(id *)(v2 + 40), sel_storyStyle);
  v5 = swift_allocObject();
  if (v4)
  {
    sub_1BAAC424C(v4, (uint64_t *)(v3 - 56));
    v6 = *(_QWORD *)(v3 - 56);
    sub_1BAAC435C(v4, (uint64_t *)(v3 - 64));

    v7 = *(_QWORD *)(v3 - 64);
    *(_QWORD *)(v5 + 16) = v6;
    *(_QWORD *)(v5 + 24) = v7;
  }
  else
  {
    sub_1BAAC4B7C();
    sub_1BB028F90((uint64_t *)(v5 + 16));
  }
  v9 = v5 | 0x3000000000000000;
  v10 = type metadata accessor for FormatInspectionItem(0);
  v11 = (uint64_t *)(v1 + *(int *)(v10 + 24));
  *v11 = v9;
  v12 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  *(_OWORD *)v1 = xmmword_1BB89A8F0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  v13 = v1 + *(int *)(v10 + 28);
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = -1;
  sub_1BA717468(v2);
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 0, 1, v10);
}

uint64_t sub_1BAAC4B48()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAAC4B7C()
{
  unint64_t result;

  result = qword_1EF2AF7F0;
  if (!qword_1EF2AF7F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2AF7F0);
  }
  return result;
}

uint64_t sub_1BAAC4BB8()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAC4BC8()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for A6_V1()
{
  return &type metadata for A6_V1;
}

uint64_t sub_1BAAC4BE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AF7F8, (uint64_t (*)(void))sub_1BA4DB5AC, (uint64_t)&type metadata for A6_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4DB5AC();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAAC4D9C()
{
  sub_1BA4DB5AC();
  return sub_1BB874710();
}

uint64_t sub_1BAAC4DC4()
{
  sub_1BA4DB5AC();
  return sub_1BB87471C();
}

uint64_t sub_1BAAC4DEC(_QWORD *a1)
{
  return sub_1BAAC4BE8(a1);
}

uint64_t sub_1BAAC4E00()
{
  sub_1BA59622C();
  return sub_1BB86D96C();
}

uint64_t sub_1BAAC4E68()
{
  return sub_1BB690BE4();
}

uint64_t sub_1BAAC4E78()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAC4E88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAC4EAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAAC4EB8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAAC4F34()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAAC4F40(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAAC4FB4()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for A6_V1.Layout.Attributes()
{
  return &type metadata for A6_V1.Layout.Attributes;
}

uint64_t storeEnumTagSinglePayload for A6_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAAC5020 + 4 * byte_1BB89A905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAAC5054 + 4 * byte_1BB89A900[v4]))();
}

uint64_t sub_1BAAC5054(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC505C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAC5064);
  return result;
}

uint64_t sub_1BAAC5070(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAC5078);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAAC507C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC5084(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A6_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for A6_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAAC50A4()
{
  unint64_t result;

  result = qword_1EF2AF800;
  if (!qword_1EF2AF800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89ABC4, &type metadata for A6_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF800);
  }
  return result;
}

void sub_1BAAC50E8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAAC5118()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for UnwrappedSportsTaxonomyGraphNodeWeakReference();
  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v0 + 16) = v1;
  swift_release();
  return v0;
}

uint64_t type metadata accessor for SportsTaxonomyGraphNodeWeakReference()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UnwrappedSportsTaxonomyGraphNodeWeakReference()
{
  return objc_opt_self();
}

uint64_t sub_1BAAC51E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1BAAC5208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;

  v12 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a6, a3, v12);
  objc_msgSend(a4, sel_boundingRectForGlyphRange_inTextContainer_, a1, a2, a5);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  result = type metadata accessor for FormatTextLink.Link();
  v22 = (_QWORD *)(a6 + *(int *)(result + 20));
  *v22 = v14;
  v22[1] = v16;
  v22[2] = v18;
  v22[3] = v20;
  return result;
}

uint64_t sub_1BAAC52BC@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CGPoint v22;

  v7 = type metadata accessor for FormatTextLink.Link();
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = a3 - *(double *)(v3 + 32);
    v14 = a2 - *(double *)(v3 + 24);
    v15 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v16 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatTextLink.Link);
      v22.x = v14;
      v22.y = v13;
      if (CGRectContainsPoint(*(CGRect *)&v10[*(int *)(v7 + 20)], v22))
        break;
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatTextLink.Link);
      v15 += v16;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    v19 = sub_1BB86C67C();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a1, v10, v19);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
  }
  else
  {
LABEL_6:
    v17 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t FormatTextLink.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatTextLink.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatTextLink()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1BAAC547C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t sub_1BAAC550C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1BAAC5570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t sub_1BAAC55EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1BAAC5650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1BAAC56B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAAC56C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BAAC56FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAAC5708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatTextLink.Link()
{
  uint64_t result;

  result = qword_1EF2AF860;
  if (!qword_1EF2AF860)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAAC5784()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAAC57F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAC5804()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAC5814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_1BAAC5208(a1, a2, a3, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BAAC581C(uint64_t a1, void (*a2)(_QWORD, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, char *);
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  v21 = a3;
  v5 = type metadata accessor for FormatTextLink.Link();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v18 = v3;
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A834(0, v9, 0);
    v10 = v22;
    sub_1BA5D21D4();
    v19 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v13 = (char *)(a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
    v14 = *(_QWORD *)(v12 + 72);
    do
    {
      v20(*(_QWORD *)v13, *((_QWORD *)v13 + 1), &v13[*(int *)(v19 + 48)]);
      v22 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BAC7A834(v15 > 1, v16 + 1, 1);
        v10 = v22;
      }
      v13 += v14;
      *(_QWORD *)(v10 + 16) = v16 + 1;
      sub_1BA5193C4((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatTextLink.Link);
      --v9;
    }
    while (v9);
  }
  return v10;
}

NewsFeed::ManageChannelNotificationsCommandState_optional __swiftcall ManageChannelNotificationsCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  NewsFeed::ManageChannelNotificationsCommandState_optional v2;

  v1 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = NewsFeed_ManageChannelNotificationsCommandState_showManageNotifications;
  else
    v2.value = NewsFeed_ManageChannelNotificationsCommandState_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

unint64_t ManageChannelNotificationsCommandState.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0xD000000000000013;
}

uint64_t sub_1BAAC5A14(char *a1, char *a2)
{
  return sub_1BB7ED4C4(*a1, *a2);
}

uint64_t sub_1BAAC5A20()
{
  return sub_1BA8D27C8();
}

uint64_t sub_1BAAC5A28()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAAC5A88()
{
  return sub_1BAB07300();
}

uint64_t sub_1BAAC5A90@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAAC5AEC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000017;
  else
    v2 = 0xD000000000000013;
  v3 = 0x80000001BB95F070;
  if (*v1)
    v3 = 0x80000001BB95F090;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAAC5B30()
{
  sub_1BAAC6A14();
  return sub_1BB872CE8();
}

NewsFeed::ManageNotificationsContext::TaglessNotification_optional __swiftcall ManageNotificationsContext.TaglessNotification.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::ManageNotificationsContext::TaglessNotification_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ManageNotificationsContext.TaglessNotification.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAAC5BF0 + 4 * byte_1BB89AD10[*v0]))(0x73656C7A7A7570, 0xE700000000000000);
}

uint64_t sub_1BAAC5BF0()
{
  return 0x657573734977656ELL;
}

uint64_t sub_1BAAC5C10()
{
  return 0x6E6974656B72616DLL;
}

uint64_t sub_1BAAC5C2C()
{
  return 0x647541664F646E65;
}

uint64_t sub_1BAAC5C50()
{
  return 0x7474656C7377656ELL;
}

uint64_t sub_1BAAC5C6C()
{
  return 0x7374726F7073;
}

void sub_1BAAC5C80(char *a1)
{
  sub_1BB7F2E14(*a1);
}

void sub_1BAAC5C8C()
{
  char *v0;

  sub_1BA8D284C(*v0);
}

void sub_1BAAC5C94()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAAC5CD0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAAC5D74(uint64_t a1)
{
  char *v1;

  sub_1BAB0842C(a1, *v1);
}

NewsFeed::ManageNotificationsContext::TaglessNotification_optional sub_1BAAC5D7C(Swift::String *a1)
{
  return ManageNotificationsContext.TaglessNotification.init(rawValue:)(*a1);
}

uint64_t sub_1BAAC5D88()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAAC5DB8 + 4 * byte_1BB89AD1C[*v0]))();
}

void sub_1BAAC5DB8(_QWORD *a1@<X8>)
{
  *a1 = 0x657573734977656ELL;
  a1[1] = 0xE900000000000073;
}

void sub_1BAAC5DDC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6974656B72616DLL;
  a1[1] = 0xE900000000000067;
}

void sub_1BAAC5DFC(_QWORD *a1@<X8>)
{
  *a1 = 0x647541664F646E65;
  a1[1] = 0xEF6B636172546F69;
}

void sub_1BAAC5E24(_QWORD *a1@<X8>)
{
  *a1 = 0x7474656C7377656ELL;
  a1[1] = 0xEA00000000007265;
}

void sub_1BAAC5E44(_QWORD *a1@<X8>)
{
  *a1 = 0x7374726F7073;
  a1[1] = 0xE600000000000000;
}

uint64_t ManageNotificationsContext.identifier.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    __asm { BR              X10 }
  sub_1BB872AFC(*(_QWORD **)v0);
  return 979853684;
}

void sub_1BAAC5EFC()
{
  JUMPOUT(0x1BAAC5EECLL);
}

void sub_1BAAC5F18()
{
  JUMPOUT(0x1BAAC5EECLL);
}

void sub_1BAAC5F3C()
{
  JUMPOUT(0x1BAAC5EECLL);
}

void sub_1BAAC5F58()
{
  JUMPOUT(0x1BAAC5EECLL);
}

uint64_t static ContextMenuItem.manageChannelNotifications(context:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BAAC6170(0, (unint64_t *)&unk_1ED3AFA60, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v2);
  sub_1BAAC6170(0, (unint64_t *)&unk_1ED3AFA00, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v3);
  sub_1BAAC6170(0, (unint64_t *)&unk_1ED3AFA30, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v4);
  if (!a1)
    return 0;
  v5 = qword_1ED39F0A0;
  swift_unknownObjectRetain();
  if (v5 != -1)
    swift_once();
  sub_1BA81FF50();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB870030();
  sub_1BB870018();
  sub_1BB870348();
  swift_allocObject();
  v6 = sub_1BB86FB2C();
  swift_unknownObjectRelease();
  return v6;
}

void sub_1BAAC6170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA81FF50();
    v7 = a3(a1, &type metadata for ManageChannelNotificationsCommandState, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAAC61CC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t sub_1BAAC62C8()
{
  sub_1BB8713C8();
  return sub_1BB8713A4();
}

uint64_t static SharingActivity.manageChannelNotifications(context:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BAAC64B8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BAAC6520();
  MEMORY[0x1E0C80A78](v3);
  if (!a1)
    return 0;
  v4 = qword_1ED39F0A0;
  swift_unknownObjectRetain();
  if (v4 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  sub_1BA81FF50();
  sub_1BB870048();
  sub_1BB8703E4();
  sub_1BB870048();
  swift_allocObject();
  v5 = sub_1BB86FC88();
  swift_unknownObjectRelease();
  return v5;
}

void sub_1BAAC64B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E08)
  {
    sub_1BB8703E4();
    sub_1BA81FF50();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E08);
  }
}

void sub_1BAAC6520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E10)
  {
    sub_1BA81FF50();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E10);
  }
}

void sub_1BAAC6580(uint64_t *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_1BB86C340();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_1BAAC667C()
{
  sub_1BB8713C8();
  sub_1BB8713A4();
  return sub_1BB8703D8();
}

unint64_t sub_1BAAC66C8()
{
  unint64_t result;

  result = qword_1EF2AF898;
  if (!qword_1EF2AF898)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ManageChannelNotificationsCommandState, &type metadata for ManageChannelNotificationsCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2AF898);
  }
  return result;
}

unint64_t sub_1BAAC6714()
{
  unint64_t result;

  result = qword_1EF2AF8A0;
  if (!qword_1EF2AF8A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ManageNotificationsContext.TaglessNotification, &type metadata for ManageNotificationsContext.TaglessNotification);
    atomic_store(result, (unint64_t *)&qword_1EF2AF8A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Manage()
{
  return &type metadata for Commands.Manage;
}

uint64_t storeEnumTagSinglePayload for ManageChannelNotificationsCommandState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAAC67B4 + 4 * byte_1BB89AD2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAAC67E8 + 4 * byte_1BB89AD28[v4]))();
}

uint64_t sub_1BAAC67E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC67F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAC67F8);
  return result;
}

uint64_t sub_1BAAC6804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAC680CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAAC6810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC6818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManageChannelNotificationsCommandState()
{
  return &type metadata for ManageChannelNotificationsCommandState;
}

uint64_t sub_1BAAC6838(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ManageNotificationsContext(uint64_t a1)
{
  return sub_1BAAC6858(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BAAC6858(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8NewsFeed26ManageNotificationsContextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAAC6838(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ManageNotificationsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAAC6838(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAAC6858(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ManageNotificationsContext(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAAC6858(v4, v5, v6);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ManageNotificationsContext.TaglessNotification(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BAAC6994 + 4 * byte_1BB89AD37[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BAAC69C8 + 4 * byte_1BB89AD32[v4]))();
}

uint64_t sub_1BAAC69C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC69D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAC69D8);
  return result;
}

uint64_t sub_1BAAC69E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAC69ECLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BAAC69F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAC69F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManageNotificationsContext.TaglessNotification()
{
  return &type metadata for ManageNotificationsContext.TaglessNotification;
}

unint64_t sub_1BAAC6A14()
{
  unint64_t result;

  result = qword_1EF2AF8A8;
  if (!qword_1EF2AF8A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ManageChannelNotificationsCommandState, &type metadata for ManageChannelNotificationsCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2AF8A8);
  }
  return result;
}

void sub_1BAAC6A58(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  if ((a1 & 1) == 0)
  {
    v1 = sub_1BB8732F4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BB87FC80;
    v3 = sub_1BB871440();
    v5 = v4;
    v6 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
    v7 = sub_1BA6A2D8C();
    *(_QWORD *)(v2 + 64) = v7;
    *(_QWORD *)(v2 + 32) = v3;
    *(_QWORD *)(v2 + 40) = v5;
    sub_1BB86C67C();
    sub_1BAAC6DFC();
    v8 = sub_1BB87420C();
    *(_QWORD *)(v2 + 96) = v6;
    *(_QWORD *)(v2 + 104) = v7;
    *(_QWORD *)(v2 + 72) = v8;
    *(_QWORD *)(v2 + 80) = v9;
    sub_1BA4B07F0(0, &qword_1EF2AF8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB96A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_retain();
    v10 = sub_1BB872A00();
    *(_QWORD *)(v2 + 136) = v6;
    *(_QWORD *)(v2 + 144) = v7;
    *(_QWORD *)(v2 + 112) = v10;
    *(_QWORD *)(v2 + 120) = v11;
    sub_1BA517860();
    v12 = (void *)sub_1BB873A08();
    sub_1BB86EF44("open url command handler failed, command=%{public}@, context=%{public}@, source=%{public}@", 90, 2, &dword_1BA493000, v12, v1, v2);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BAAC6BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v19[1] = a4;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)(*(_QWORD *)v5 + 16);
  v14 = *(_QWORD *)(*(_QWORD *)v5 + 40);
  v19[3] = *(_QWORD *)(*(_QWORD *)v5 + 48);
  v19[2] = __swift_project_boxed_opaque_existential_1(v13, v14);
  sub_1BA8F35EC(MEMORY[0x1E0DEE9D8]);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  *(_QWORD *)(v17 + v16) = a5;
  swift_retain();
  swift_retain();
  sub_1BB86FE50();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAAC6D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1BAAC6DA8(char a1)
{
  sub_1BB86C67C();
  sub_1BAAC6A58(a1);
}

unint64_t sub_1BAAC6DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A0CE0;
  if (!qword_1ED3A0CE0)
  {
    v1 = sub_1BB86C67C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A0CE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V2()
{
  return &type metadata for A12_V2;
}

uint64_t sub_1BAAC6E54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AF9F0, (uint64_t (*)(void))sub_1BAACA1B0, (uint64_t)&type metadata for A12_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAACA1B0();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAAC7008()
{
  sub_1BAACA1B0();
  return sub_1BB874710();
}

uint64_t sub_1BAAC7030()
{
  sub_1BAACA1B0();
  return sub_1BB87471C();
}

double sub_1BAAC7058@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAAC9F9C(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAAC709C(_QWORD *a1)
{
  return sub_1BAAC6E54(a1);
}

uint64_t sub_1BAAC70B0()
{
  sub_1BAAC9C98();
  return sub_1BB86D96C();
}

uint64_t sub_1BAAC7118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V2;
  v20 = sub_1BA8EE44C();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V2;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E72687D0, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E72687F8, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V2.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(&qword_1EF2AF8C8, (uint64_t (*)(uint64_t))type metadata accessor for A12_V2.Bound, (uint64_t)&unk_1BB89B0C8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BAAC774C@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  char v40[105];
  __int128 v41[9];
  __int128 v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A12_V2.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v43);
  sub_1BA4C010C(v11 + 56, (uint64_t)v42);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v43, v14 + 16);
  sub_1BA4CECCC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v42);
  sub_1BA4C010C(v15 + 56, (uint64_t)v41);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v42, v17 + 16);
  sub_1BA4CECCC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v43, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v43 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v43;
  v39[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *MEMORY[0x1E0DB5D88];
  v23 = sub_1BB86D678();
  v24 = v33[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E0DB6200], v35);
  v37 = v21;
  v38 = v2;
  sub_1BAAC9D3C(0, &qword_1EF2AF970, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v43;
  v26 = v44;
  v27 = v45;
  *(_QWORD *)&v43 = v21;
  *(_QWORD *)&v42[0] = v46;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v43 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BAAC7C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BAAC9D3C(0, &qword_1EF2AF990, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAAC9CFC(&qword_1EF2AF998, &qword_1EF2AF990, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAAC7D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  void (*v16)(uint64_t *, uint64_t);
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v18[-v9];
  v21 = a1;
  v11 = sub_1BB86D438();
  v12 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, *MEMORY[0x1E0DB5A38], v11);
  *v10 = v12;
  v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104);
  v14(v10, *MEMORY[0x1E0DB6318], v7);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v15, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v16 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v21 = a1;
  v14(v10, *MEMORY[0x1E0DB63C0], v7);
  v19 = a2;
  v20 = a3;
  sub_1BB86D498();
  return ((uint64_t (*)(uint64_t *, uint64_t))v16)(v10, v7);
}

uint64_t sub_1BAAC7F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  void (*v23)(uint64_t *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v29 = a3;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v26 - v7);
  v33 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v27(v8, v10, v5);
  sub_1BAAC9DC0();
  sub_1BA4CDF6C(0, &qword_1EF2AF9B8, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v16 = v15 + v14;
  sub_1BA7FDE2C();
  v18 = (_QWORD *)(v16 + *(int *)(v17 + 48));
  v19 = *MEMORY[0x1E0DB6000];
  v20 = sub_1BB86D8B8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v16, v19, v20);
  *v18 = 0x6C6F437468676972;
  v18[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0DB5BF8], v12);
  v21 = v26;
  v32 = v26;
  v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v22, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v23 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v23(v8, v5);
  v33 = v28;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 6;
  *v8 = v24;
  v27(v8, v10, v5);
  v30 = v21;
  v31 = v29;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v23)(v8, v5);
}

uint64_t sub_1BAAC8254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 1;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BAAC8654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, _QWORD *);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t);
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  void (*v60)(uint64_t *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, double);
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t KeyPath;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  void (*v90)(uint64_t, _QWORD, uint64_t);
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, double);
  void (*v108)(char *, _QWORD, uint64_t);
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;

  v97 = a3;
  v96 = a2;
  v100 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v100);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (uint64_t *)((char *)&v77 - v11);
  v111 = a1;
  v13 = *MEMORY[0x1E0DB6410];
  v107 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 104);
  v107((char *)&v77 - v11, v13, v8, v10);
  sub_1BAAC9DC0();
  v105 = v14;
  sub_1BA4CDF6C(0, &qword_1EF2AF9B8, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v106 = v15;
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v102 = v19 | 7;
  v103 = v20 + v18;
  v21 = swift_allocObject();
  v101 = xmmword_1BB87CE70;
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  v22 = *MEMORY[0x1E0DB5C80];
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104);
  v104(v21 + v20, v22, v16);
  v110 = a2;
  v23 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  v25 = v24;
  v76 = sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v23, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v26 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v26(v12, v8);
  v111 = a1;
  v27 = sub_1BB86D438();
  v28 = swift_allocBox();
  v29 = *(void (**)(_QWORD))(*(_QWORD *)(v27 - 8) + 104);
  v91 = *MEMORY[0x1E0DB5A38];
  v92 = v27;
  v90 = (void (*)(uint64_t, _QWORD, uint64_t))v29;
  v29(v30);
  *v12 = v28;
  v89 = *MEMORY[0x1E0DB6318];
  v31 = (void (*)(uint64_t *, uint64_t, uint64_t))v107;
  ((void (*)(uint64_t *))v107)(v12);
  v87 = v25;
  v99 = v76;
  sub_1BB86D4EC();
  v98 = v26;
  v26(v12, v8);
  v95 = a1;
  v111 = a1;
  KeyPath = swift_getKeyPath();
  sub_1BAA71EEC();
  v33 = v32;
  v34 = swift_allocBox();
  v88 = v33;
  v36 = (char *)v35 + *(int *)(v33 + 48);
  *v35 = 2;
  v37 = *MEMORY[0x1E0DB61C8];
  v38 = sub_1BB86DA20();
  v85 = *(_QWORD *)(v38 - 8);
  v39 = *(void (**)(char *, _QWORD, uint64_t))(v85 + 104);
  v109 = v37;
  v108 = v39;
  v39(v36, v37, v38);
  *v12 = v34;
  v40 = *MEMORY[0x1E0DB6338];
  v41 = *MEMORY[0x1E0DB6338];
  v93 = v8;
  v31(v12, v41, v8);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v101;
  v94 = v20;
  v43 = (double *)(v42 + v20);
  v44 = v96;
  v45 = v97 + *(int *)(type metadata accessor for A12_V2.Bound() + 24);
  v46 = *(int *)(type metadata accessor for GroupLayoutContext() + 32);
  *v43 = *(double *)(v45 + v46) * 135.0;
  LODWORD(v97) = *MEMORY[0x1E0DB5CB8];
  result = ((uint64_t (*)(double *))v104)(v43);
  if (*(_QWORD *)(v44 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    v84 = *(_QWORD *)(v44 + 16);
    v48 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v49 = v44 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    v80 = *(_QWORD *)(v48 + 72);
    v81 = v49;
    v50 = v49 + 3 * v80;
    v96 = v46;
    v51 = v100;
    v52 = *(int *)(v100 + 20);
    v82 = v40;
    v83 = v45;
    v53 = &v6[v52];
    v108(&v6[v52], v109, v38);
    v85 = *(_QWORD *)(v85 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v85)(v53, 0, 1, v38);
    v54 = (void *)*MEMORY[0x1E0DC4918];
    *(_QWORD *)v6 = 0;
    *(_QWORD *)&v6[*(int *)(v51 + 24)] = 0;
    *(_QWORD *)&v6[*(int *)(v51 + 28)] = v54;
    v55 = *MEMORY[0x1E0DC49E8];
    v56 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v57 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v58 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v78 = v54;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v50, (uint64_t)v6, v55, v56, v57, v58);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v79 = sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v59 = v93;
    v60 = v98;
    v98(v12, v93);
    v61 = v95;
    v111 = v95;
    v62 = v92;
    v63 = swift_allocBox();
    v90(v64, v91, v62);
    *v12 = v63;
    v65 = v107;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v107)(v12, v89, v59);
    sub_1BB86D4EC();
    v60(v12, v59);
    v111 = v61;
    swift_getKeyPath();
    v66 = v88;
    v67 = swift_allocBox();
    v69 = (char *)v68 + *(int *)(v66 + 48);
    *v68 = 2;
    v108(v69, v109, v38);
    *v12 = v67;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v65)(v12, v82, v59);
    v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = v101;
    *(double *)(v70 + v94) = *(double *)(v83 + v96) * 135.0;
    result = ((uint64_t (*)(void))v104)();
    if (v84 != 4)
    {
      v71 = v81 + 4 * v80;
      v72 = v100;
      v73 = &v6[*(int *)(v100 + 20)];
      v108(v73, v109, v38);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v85)(v73, 0, 1, v38);
      *(_QWORD *)v6 = 0;
      *(_QWORD *)&v6[*(int *)(v72 + 24)] = 0;
      v74 = v78;
      *(_QWORD *)&v6[*(int *)(v72 + 28)] = v78;
      v75 = v74;
      _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v71, (uint64_t)v6, v55, v56, v57, v58);
      sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
      sub_1BB86D4C8();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return ((uint64_t (*)(uint64_t *, uint64_t))v98)(v12, v59);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAAC8E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 3;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 3;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAAC9070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAAC947C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AF988, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAAC9D3C(0, &qword_1EF2AF9A0, MEMORY[0x1E0DB5A10]);
  sub_1BAAC9CFC(&qword_1EF2AF9A8, &qword_1EF2AF9A0, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAAC9888@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V2.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAAC9968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAAC7118(a1, a2, a3);
}

uint64_t sub_1BAAC997C()
{
  return sub_1BB690B84();
}

unint64_t sub_1BAAC998C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAAC99B8();
  result = sub_1BAAC99FC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAAC99B8()
{
  unint64_t result;

  result = qword_1EF2AF8B8;
  if (!qword_1EF2AF8B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B014, &type metadata for A12_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2AF8B8);
  }
  return result;
}

unint64_t sub_1BAAC99FC()
{
  unint64_t result;

  result = qword_1EF2AF8C0;
  if (!qword_1EF2AF8C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B03C, &type metadata for A12_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2AF8C0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V2.Bound()
{
  uint64_t result;

  result = qword_1EF2AF928;
  if (!qword_1EF2AF928)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAAC9A7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAAC9A88(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAAC9B04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAAC9B10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAAC9B84()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAAC9C10(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AF968, (uint64_t (*)(uint64_t))type metadata accessor for A12_V2.Bound, (uint64_t)&unk_1BB89B0A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAAC9C4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC7C30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BAAC9C54()
{
  unint64_t result;

  result = qword_1EF2AF978;
  if (!qword_1EF2AF978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B1F8, &type metadata for A12_V2.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2AF978);
  }
  return result;
}

unint64_t sub_1BAAC9C98()
{
  unint64_t result;

  result = qword_1EF2AF980;
  if (!qword_1EF2AF980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B1C8, &type metadata for A12_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF980);
  }
  return result;
}

uint64_t sub_1BAAC9CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAAC9888(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAAC9CE4()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAC9CF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC7D8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAAC9CFC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAAC9D3C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAAC9D3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V2.Layout;
    v8[1] = &type metadata for A12_V2.Layout.Attributes;
    v8[2] = sub_1BAAC9C54();
    v8[3] = sub_1BAAC9C98();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BAAC9DB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC7F54(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BAAC9DC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AF9B0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AF9B8, (uint64_t (*)(void))sub_1BAAC9C54, (uint64_t)&type metadata for A12_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AF9B0);
  }
}

uint64_t sub_1BAAC9E34(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC8254(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAC9E3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC8654(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAAC9E44(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC8E88(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAC9E4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC9070(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAC9E54(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAC947C(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V2.Layout.Attributes()
{
  return &type metadata for A12_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V2.Layout()
{
  return &type metadata for A12_V2.Layout;
}

unint64_t sub_1BAAC9E80()
{
  unint64_t result;

  result = qword_1EF2AF9C0;
  if (!qword_1EF2AF9C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B168, &type metadata for A12_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF9C0);
  }
  return result;
}

unint64_t sub_1BAAC9EC8()
{
  unint64_t result;

  result = qword_1EF2AF9C8;
  if (!qword_1EF2AF9C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B140, &type metadata for A12_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF9C8);
  }
  return result;
}

unint64_t sub_1BAAC9F10()
{
  unint64_t result;

  result = qword_1EF2AF9D0;
  if (!qword_1EF2AF9D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B118, &type metadata for A12_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF9D0);
  }
  return result;
}

unint64_t sub_1BAAC9F58()
{
  unint64_t result;

  result = qword_1EF2AF9D8;
  if (!qword_1EF2AF9D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B190, &type metadata for A12_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AF9D8);
  }
  return result;
}

uint64_t sub_1BAAC9F9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AF9E0, (uint64_t (*)(void))sub_1BAACA1B0, (uint64_t)&type metadata for A12_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAACA1B0();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAACA1B0()
{
  unint64_t result;

  result = qword_1EF2AF9E8;
  if (!qword_1EF2AF9E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B2EC, &type metadata for A12_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF9E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V2.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAACA240 + 4 * byte_1BB89B005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAACA274 + 4 * byte_1BB89B000[v4]))();
}

uint64_t sub_1BAACA274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAACA27C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAACA284);
  return result;
}

uint64_t sub_1BAACA290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAACA298);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAACA29C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAACA2A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAACA2C4()
{
  unint64_t result;

  result = qword_1EF2AF9F8;
  if (!qword_1EF2AF9F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B2C4, &type metadata for A12_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AF9F8);
  }
  return result;
}

unint64_t sub_1BAACA30C()
{
  unint64_t result;

  result = qword_1EF2AFA00;
  if (!qword_1EF2AFA00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B234, &type metadata for A12_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFA00);
  }
  return result;
}

unint64_t sub_1BAACA354()
{
  unint64_t result;

  result = qword_1EF2AFA08;
  if (!qword_1EF2AFA08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B25C, &type metadata for A12_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFA08);
  }
  return result;
}

id CoverIssueView.moreActionsButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton);
}

uint64_t CoverIssueView.downloadButtonDataProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1);
}

uint64_t sub_1BAACA3F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRetain();
  sub_1BAACA4D4();
  return swift_unknownObjectRelease();
}

uint64_t CoverIssueView.downloadButtonDataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_1BAACA4D4();
  return swift_unknownObjectRelease();
}

void sub_1BAACA4D4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BB86F8C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider];
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  if (v7)
  {
    v8 = v7;
    v9 = *((_QWORD *)v6 + 1);
    swift_getObjectType();
    sub_1BB870BDC();
    sub_1BB86E1AC();
    swift_release();
    sub_1BAACA7E4((uint64_t)v5, 0, (uint64_t)v1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BB870BDC();
    sub_1BA657D64();
    v10 = (void *)sub_1BB87345C();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v1;
    v11[3] = v8;
    v11[4] = v9;
    v12 = v1;
    swift_unknownObjectRetain();
    sub_1BB86E1C4();
    swift_release();

    swift_release();
    v13 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable;
    swift_beginAccess();
    sub_1BAACC86C((uint64_t)&v18, v13);
    swift_endAccess();
    sub_1BB870BE8();
    v14 = (void *)sub_1BB87345C();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BB86E1C4();
    swift_unknownObjectRelease();
    swift_release();

    swift_release();
    v15 = (uint64_t)v12 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable;
    swift_beginAccess();
    sub_1BAACC86C((uint64_t)&v18, v15);
  }
  else
  {
    v16 = (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable;
    swift_beginAccess();
    if (*(_QWORD *)(v16 + 24))
    {
      sub_1BA4C010C(v16, (uint64_t)&v18);
      __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
      sub_1BB86DCFC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    }
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    swift_beginAccess();
    sub_1BAACC86C((uint64_t)&v18, v16);
  }
  swift_endAccess();
  sub_1BAACAB90();
}

void sub_1BAACA7E4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id *v10;
  int v11;
  double v12;
  void *v13;
  double v14;
  void *v15;
  uint64_t v16;
  double v17;

  v6 = sub_1BB86F8C8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (id *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  v11 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x1E0DB73F0])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v10, v6);
    swift_release();
    v13 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);
    swift_getObjectType();
    sub_1BB870BE8();
    sub_1BB86E1AC();
    swift_release();
    HIDWORD(v14) = HIDWORD(v17);
    *(float *)&v14 = v17;
    objc_msgSend(v13, sel_setProgress_animated_, 0, v14);
    objc_msgSend(v13, sel_setAlpha_, 1.0);
    objc_msgSend(v13, sel_setHidden_, 0);
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E0DB7400])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v10, v6);

    if ((a2 & 1) == 0)
    {
LABEL_7:
      sub_1BAACAB90();
      return;
    }
LABEL_6:
    sub_1BAACAA4C();
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E0DB73F8])
  {
    v15 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);
    LODWORD(v12) = 0;
    objc_msgSend(v15, sel_setProgress_animated_, 0, v12);
    objc_msgSend(v15, sel_setAlpha_, 1.0);
    objc_msgSend(v15, sel_setHidden_, 1);
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E0DB7408])
  {
    if ((a2 & 1) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BAACAA4C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id (*v13)();
  uint64_t v14;

  v1 = (void *)objc_opt_self();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v13 = sub_1BAACC9F0;
  v14 = v2;
  v3 = MEMORY[0x1E0C809B0];
  v9 = MEMORY[0x1E0C809B0];
  v10 = 1107296256;
  v11 = sub_1BA4F1DD8;
  v12 = &block_descriptor_20;
  v4 = _Block_copy(&v9);
  v5 = v0;
  swift_release();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v13 = sub_1BAACCA10;
  v14 = v6;
  v9 = v3;
  v10 = 1107296256;
  v11 = sub_1BB2D2738;
  v12 = &block_descriptor_13;
  v7 = _Block_copy(&v9);
  v8 = v5;
  swift_release();
  objc_msgSend(v1, sel_animateWithDuration_animations_completion_, v4, v7, 0.2);
  _Block_release(v7);
  _Block_release(v4);
}

void sub_1BAACAB90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  id *v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1BB86F8C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (id *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar], sel_isHidden, v4) & 1) != 0)
  {
    objc_msgSend(v0, sel_setTs_accessibilityElementHelp_, 0);
    return;
  }
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();
  v11 = v10;

  v12 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v13 = &v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider];
  swift_beginAccess();
  if (!MEMORY[0x1BCCE5D40](v13))
  {
    swift_bridgeObjectRelease();
    v16 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, v16);

    return;
  }
  v17 = v11;
  swift_getObjectType();
  sub_1BB870BDC();
  sub_1BB86E1AC();
  swift_release();
  v14 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v14 == *MEMORY[0x1E0DB73F0])
  {
    swift_bridgeObjectRelease();
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_release();
    v15 = (void *)sub_1BB872970();
LABEL_12:
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, v15);

    goto LABEL_13;
  }
  if (v14 == *MEMORY[0x1E0DB7400])
  {
    swift_bridgeObjectRelease();
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

LABEL_11:
    v15 = (void *)sub_1BB872970();
    goto LABEL_12;
  }
  if (v14 == *MEMORY[0x1E0DB73F8])
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v14 != *MEMORY[0x1E0DB7408])
  {
    sub_1BB873EAC();
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, 0);
LABEL_13:
  swift_unknownObjectRelease();
}

void sub_1BAACAF90(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  uint64_t v8;
  void *v9;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(id *)(v4 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);

    *(float *)&v7 = v2;
    objc_msgSend(v6, sel_setProgress_animated_, 1, v7);

  }
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](v3);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BAACAB90();

  }
}

void (*CoverIssueView.downloadButtonDataProvider.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BAACB0C0;
}

void sub_1BAACB0C0(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    sub_1BAACA4D4();
  }
  free(v3);
}

id CoverIssueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *CoverIssueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  objc_super v35;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton;
  v11 = objc_allocWithZone((Class)type metadata accessor for CoverViewActionButton());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewFollowSwitch()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView;
  v16 = (objc_class *)type metadata accessor for IssueCoverView();
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone(v16), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView;
  *(_QWORD *)&v12[v17] = objc_msgSend(objc_allocWithZone(v16), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel;
  *(_QWORD *)&v12[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar;
  *(_QWORD *)&v12[v19] = objc_msgSend(objc_allocWithZone((Class)sub_1BB86F6C4()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon;
  *(_QWORD *)&v12[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView;
  *(_QWORD *)&v12[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v22 = &v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_isEditSelected] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  v23 = &v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  v24 = &v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C4618, (uint64_t (*)(uint64_t))type metadata accessor for DebugButton, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_QWORD *)v24 + 4) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_debugButton] = sub_1BB86DD98();

  v35.receiver = v12;
  v35.super_class = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  v26 = *(void **)&v25[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel];
  v27 = v25;
  objc_msgSend(v27, sel_addSubview_, v26);
  v28 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView];
  objc_msgSend(v27, sel_addSubview_, v28);
  v29 = *(void **)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView];
  objc_msgSend(v27, sel_addSubview_, v29);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel]);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton]);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton]);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar]);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon]);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView]);
  objc_msgSend(v26, sel_setLineBreakMode_, 4);
  objc_msgSend(v29, sel_setContentMode_, 4);
  objc_msgSend(v29, sel_setAccessibilityIgnoresInvertColors_, 1);
  objc_msgSend(v28, sel_setContentMode_, 4);
  objc_msgSend(v28, sel_setAccessibilityIgnoresInvertColors_, 1);
  v30 = *MEMORY[0x1E0DC46E0];
  v31 = v27;
  v32 = (unint64_t)objc_msgSend(v31, sel_accessibilityTraits);
  if ((v30 & ~v32) != 0)
    v33 = v30;
  else
    v33 = 0;
  objc_msgSend(v31, sel_setAccessibilityTraits_, v33 | v32);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BB86DD8C();
  swift_release();
  swift_release();

  return v31;
}

id sub_1BAACB64C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *a1 = result;
  return result;
}

void sub_1BAACB694(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_addSubview_, v2);

  }
}

id CoverIssueView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t CoverIssueView.accessibilityValue.getter()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  id *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  double v27;
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB86F8C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (id *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28.receiver = v0;
  v28.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v28, sel_accessibilityValue, v4);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BB8729A0();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider];
  swift_beginAccess();
  if (!MEMORY[0x1BCCE5D40](v12))
  {
    v20 = 0;
    v21 = 0;
LABEL_13:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB0, (uint64_t (*)(uint64_t))sub_1BA76D834, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v25 + 32) = v9;
    *(_QWORD *)(v25 + 40) = v11;
    *(_QWORD *)(v25 + 48) = v20;
    *(_QWORD *)(v25 + 56) = v21;
    v19 = sub_1BB86F748();
    goto LABEL_14;
  }
  swift_getObjectType();
  sub_1BB870BDC();
  sub_1BB86E1AC();
  swift_release();
  v13 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v13 == *MEMORY[0x1E0DB73F0])
  {
    swift_bridgeObjectRelease();
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_release();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1BB86C340();

    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
    sub_1BB870BE8();
    sub_1BB86E1AC();
    swift_release();
    v17 = v27 * 100.0;
    v18 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v16 + 64) = v18;
    *(double *)(v16 + 32) = v17;
    v19 = sub_1BB8729D0();
    swift_unknownObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    return v19;
  }
  if (v13 == *MEMORY[0x1E0DB7400])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

LABEL_12:
    type metadata accessor for Localized();
    v22 = swift_getObjCClassFromMetadata();
    v23 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v22);
    v20 = sub_1BB86C340();
    v21 = v24;
    swift_unknownObjectRelease();

    goto LABEL_13;
  }
  if (v13 == *MEMORY[0x1E0DB73F8] || v13 == *MEMORY[0x1E0DB7408])
    goto LABEL_12;
  swift_bridgeObjectRelease();
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

void CoverIssueView.accessibilityValue.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  void *v5;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    v5 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6.receiver = v2;
  v6.super_class = ObjectType;
  objc_msgSendSuper2(&v6, sel_setAccessibilityValue_, v5);

}

void (*CoverIssueView.accessibilityValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[7] = swift_getObjectType();
  *v3 = CoverIssueView.accessibilityValue.getter();
  v3[1] = v4;
  return sub_1BAACBE2C;
}

void sub_1BAACBE2C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v2 + 48);
    objc_msgSendSuper2((objc_super *)(v2 + 16), sel_setAccessibilityValue_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      v5 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 48);
    objc_msgSendSuper2((objc_super *)(v2 + 32), sel_setAccessibilityValue_, v5);

  }
  free((void *)v2);
}

id CoverIssueView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CoverIssueView.prepareForReuse()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  objc_super v14;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(v1, sel_setAccessibilityLabel_, 0);
  v14.receiver = v1;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, sel_setAccessibilityValue_, 0);
  objc_msgSend(v1, sel_setTs_accessibilityElementHelp_, 0);
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable];
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 24))
  {
    sub_1BA4C010C(v3, (uint64_t)&v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    sub_1BB86DCFC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  swift_beginAccess();
  sub_1BAACC86C((uint64_t)&v11, v3);
  swift_endAccess();
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable];
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    sub_1BA4C010C(v4, (uint64_t)&v11);
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    sub_1BB86DCFC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  swift_beginAccess();
  sub_1BAACC86C((uint64_t)&v11, v3);
  swift_endAccess();
  v5 = &v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  sub_1BA49EBE0(v6);
  sub_1BB86DD68();
  v7 = (void *)v11;
  if ((_QWORD)v11)
  {
    v8 = (void *)sub_1BB871344();

  }
  v9 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton]
                         + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap));

  v10 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton]
                          + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap));

}

void sub_1BAACC288()
{
  CoverIssueView.prepareForReuse()();
}

void sub_1BAACC2A8(Swift::Bool a1, Swift::Bool a2)
{
  CoverIssueView.setMultiSelectionEditing(_:selected:)(a1, a2);
}

Swift::Void __swiftcall CoverIssueView.setMultiSelectionEditing(_:selected:)(Swift::Bool _, Swift::Bool selected)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  _BOOL8 v6;
  void *v7;
  double v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  double v17;
  double v18;
  id v19;
  void (*v20)(uint64_t, Swift::Bool);

  if (_)
    v3 = 0.0;
  else
    v3 = 1.0;
  if (_)
    v4 = 1.0;
  else
    v4 = 0.0;
  v5 = 0.6;
  if (selected)
    v5 = 1.0;
  v6 = _;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_isEditSelected) = selected;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView);
  if (_)
    v8 = v5;
  else
    v8 = 1.0;
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView), sel_layer));
  v10 = objc_msgSend(v7, sel_traitCollection);
  objc_msgSend(v10, sel_displayScale);
  v12 = v11;

  objc_msgSend(v9, sel_setRasterizationScale_, v12);
  v13 = objc_msgSend(v7, sel_layer);
  objc_msgSend(v13, sel_setShouldRasterize_, v6);

  v14 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView);
  v15 = objc_msgSend(v14, sel_layer);
  v16 = objc_msgSend(v14, sel_traitCollection);
  objc_msgSend(v16, sel_displayScale);
  v18 = v17;

  objc_msgSend(v15, sel_setRasterizationScale_, v18);
  v19 = objc_msgSend(v14, sel_layer);
  objc_msgSend(v19, sel_setShouldRasterize_, v6);

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel), sel_setAlpha_, v8);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel), sel_setAlpha_, v3);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView), sel_setAlpha_, v4);
  objc_msgSend(v7, sel_setAlpha_, v8);
  objc_msgSend(v14, sel_setAlpha_, v8);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton), sel_setAlpha_, v3);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton), sel_setAlpha_, v3);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon), sel_setAlpha_, v3);
  v20 = *(void (**)(uint64_t, Swift::Bool))(v2 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection);
  if (v20)
  {
    swift_retain();
    v20(v2, selected);
    sub_1BA49EBE0((uint64_t)v20);
  }
}

void sub_1BAACC594()
{
  sub_1BA835964(&qword_1ED3B3ED0, (uint64_t)&protocol conformance descriptor for CoverIssueView);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BAACC5CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BAACC5F0(uint64_t *a1)
{
  uint64_t v1;

  sub_1BAACB694(a1, v1);
}

void _s8NewsFeed14CoverIssueViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  char *v13;

  v1 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_moreActionsButton;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewActionButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_followButton;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewFollowSwitch()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_issueCoverView;
  v5 = (objc_class *)type metadata accessor for IssueCoverView();
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_secondaryIssueCoverView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_accessoryLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)sub_1BB86F6C4()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_cloudIcon;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC8NewsFeed14CoverIssueView_selectionImageView;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_onEditSelection];
  *v11 = 0;
  v11[1] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_isEditSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  v12 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadStateDisposable];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  v13 = &v0[OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressDisposable];
  *((_QWORD *)v13 + 4) = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BAACC86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, &qword_1ED3B0798, (unint64_t *)&qword_1ED3B0790, MEMORY[0x1E0DB3088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAACC8D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadButtonDataProvider;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BAACC92C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1ED3B0798, (unint64_t *)&qword_1ED3B0790, MEMORY[0x1E0DB3088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAACC988()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BAACC9B4(uint64_t a1)
{
  uint64_t v1;

  sub_1BAACA7E4(a1, 1, *(_QWORD *)(v1 + 16));
}

void sub_1BAACC9C4(double *a1)
{
  uint64_t v1;

  sub_1BAACAF90(a1, v1);
}

uint64_t sub_1BAACC9CC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BAACC9F0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar), sel_setAlpha_, 0.0);
}

id sub_1BAACCA10()
{
  uint64_t v0;
  void *v1;
  double v2;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed14CoverIssueView_downloadProgressBar);
  objc_msgSend(v1, sel_setHidden_, 1);
  LODWORD(v2) = 0;
  return objc_msgSend(v1, sel_setProgress_animated_, 0, v2);
}

uint64_t SportsTaxonomyGraphLeafEntityNode.__allocating_init(tagId:umcId:isHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 56) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_BYTE *)(result + 48) = a5;
  return result;
}

uint64_t SportsTaxonomyGraphLeafEntityNode.init(tagId:umcId:isHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_BYTE *)(v5 + 48) = a5;
  return v5;
}

uint64_t SportsTaxonomyGraphLeafEntityNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraphLeafEntityNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SportsTaxonomyGraphLeafEntityNode()
{
  return objc_opt_self();
}

uint64_t method lookup function for SportsTaxonomyGraphLeafEntityNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsTaxonomyGraphLeafEntityNode.__allocating_init(tagId:umcId:isHidden:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *ImagePersistenceProvider.__allocating_init(imageCache:rendererEnvironment:layoutCollectionProvider:layoutProvider:layoutOptionsProvider:)(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  sub_1BA4CECCC(a1, (uint64_t)(v12 + 2));
  sub_1BA4CECCC(a2, (uint64_t)(v12 + 7));
  v12[12] = a3;
  v12[13] = a4;
  v12[14] = a5;
  v12[15] = a6;
  return v12;
}

Swift::Void __swiftcall ImagePersistenceProvider.persist()()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  _QWORD *v64;
  char *v65;
  char *v66;
  int v67;
  uint64_t v68;
  id v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  void (*v77)(uint64_t *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  _QWORD *v102;
  int v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v1 = v0;
  v2 = (_QWORD *)*v0;
  v3 = v2[11];
  v125 = *(_QWORD *)(v3 - 8);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v124 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[13];
  v127 = sub_1BB87027C();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v123 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v106 = (char *)&v102 - v8;
  MEMORY[0x1E0C80A78](v9);
  v110 = (char *)&v102 - v10;
  v11 = v2[10];
  v12 = v2[12];
  v143 = v11;
  v144 = v3;
  v145 = v12;
  v146 = v5;
  v114 = sub_1BB870600();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v112 = (char *)&v102 - v13;
  v117 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v14);
  v111 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v116 = (char *)&v102 - v17;
  v118 = sub_1BB86CBE0();
  v133 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v107 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v128 = (char *)&v102 - v20;
  sub_1BAACDDC4();
  MEMORY[0x1E0C80A78](v21);
  v134 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1BB870E7C();
  v135 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v120 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v122 = (char *)&v102 - v25;
  v119 = v11;
  v143 = v11;
  v144 = v3;
  v121 = v3;
  v137 = v12;
  v138 = v5;
  v145 = v12;
  v146 = v5;
  v131 = sub_1BB86FAD8();
  v108 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v109 = (char *)&v102 - v26;
  v27 = sub_1BB870AC8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BB86FC70();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v1 + 7, v1[10]);
  sub_1BB870888();
  sub_1BB870FB4();
  sub_1BB86FC64();
  sub_1BB86FC40();
  sub_1BB86FC34();
  v35 = sub_1BB870AB0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (v35)
  {
    v104 = v34;
    v139 = v32;
    v105 = v31;
    *(_QWORD *)&v140 = v1[13];
    v36 = v121;
    v143 = v119;
    v144 = v121;
    v145 = v137;
    v146 = v138;
    v37 = sub_1BB870768();
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB9998], v37);
    v38 = v109;
    sub_1BB870BF4();
    v136 = v35;
    v130 = v35 & 0xFFFFFFFFFFFFFF8;
    if (v35 >> 62)
      goto LABEL_46;
    v39 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
    v40 = v118;
    v41 = (uint64_t)v134;
    v42 = v139;
    v43 = v135;
    if (v39)
    {
      v44 = 0;
      v138 = v136 & 0xC000000000000001;
      v129 = v136 + 32;
      v115 = *MEMORY[0x1E0DBB2A0];
      v103 = *MEMORY[0x1E0DBB298];
      v137 = v39;
      v102 = v1;
      while (1)
      {
        if (v138)
        {
          v45 = (id)MEMORY[0x1BCCE4630](v44, v136);
        }
        else
        {
          if (v44 >= *(_QWORD *)(v130 + 16))
            goto LABEL_45;
          v45 = *(id *)(v129 + 8 * v44);
        }
        v46 = v45;
        if (__OFADD__(v44++, 1))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          swift_bridgeObjectRetain();
          v101 = sub_1BB873F30();
          swift_bridgeObjectRelease();
          v39 = v101;
          goto LABEL_4;
        }
        v48 = objc_msgSend(v45, sel_representedElementCategory);
        if (!v48)
        {
          v52 = objc_msgSend(v46, sel_indexPath);
          v53 = v128;
          sub_1BB86CBA4();

          v54 = v123;
          sub_1BB86FAE4();
          (*(void (**)(char *, uint64_t))(v133 + 8))(v53, v40);
          v55 = v1;
          v56 = v124;
          v57 = v127;
          sub_1BB870270();
          v58 = v54;
          v41 = (uint64_t)v134;
          (*(void (**)(char *, uint64_t))(v126 + 8))(v58, v57);
          v146 = v36;
          v59 = __swift_allocate_boxed_opaque_existential_0(&v143);
          v60 = v38;
          v61 = v125;
          (*(void (**)(uint64_t *, char *, uint64_t))(v125 + 16))(v59, v56, v36);
          sub_1BAACDA74((uint64_t)&v143);
          v43 = v135;

          v62 = *(void (**)(char *, uint64_t))(v61 + 8);
          v38 = v60;
          v63 = v56;
          v1 = v55;
          v62(v63, v36);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          goto LABEL_17;
        }
        if (v48 != (id)1)
          break;
        v49 = v38;
        v50 = v43;
        sub_1BB86F40C();
        v51 = v132;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v132) == 1)
        {

          sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))sub_1BAACDDC4);
          v43 = v50;
          v38 = v49;
LABEL_17:
          v42 = v139;
LABEL_18:
          if (v44 == v137)
            goto LABEL_42;
        }
        else
        {
          v64 = v1;
          v65 = v122;
          (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v122, v41, v51);
          v66 = v120;
          (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v120, v65, v51);
          v67 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v66, v51);
          v68 = v133;
          if (v67 != v115)
          {
            v1 = v64;
            if (v67 != v103)
            {
              v99 = v135;
              v100 = *(void (**)(char *, uint64_t))(v135 + 8);
              v100(v122, v132);

              v100(v120, v132);
              v43 = v99;
              v41 = (uint64_t)v134;
              v38 = v49;
LABEL_38:
              v42 = v139;
              v36 = v121;
              goto LABEL_18;
            }
            v84 = v120;
            (*(void (**)(char *, uint64_t))(v135 + 96))(v120, v51);
            sub_1BAACDE18();
            v86 = v107;
            (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v107, &v84[*(int *)(v85 + 48)], v40);
            v87 = v110;
            v38 = v49;
            sub_1BB86FAE4();
            v88 = v126;
            v89 = v87;
            v90 = v127;
            (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v106, v89, v127);
            sub_1BA4D9CE8(0, &qword_1ED3B0A48);
            v91 = v90;
            v92 = swift_dynamicCast();
            v36 = v121;
            if ((v92 & 1) != 0)
            {
              sub_1BA4CECCC(&v140, (uint64_t)&v143);
              __swift_project_boxed_opaque_existential_1(&v143, v146);
              v93 = sub_1BB87129C();
              if (v93)
              {
                v94 = *(_QWORD *)(v93 + 16);
                if (v94)
                {
                  v95 = (_QWORD *)(v93 + 32);
                  do
                  {
                    v96 = v95[3];
                    v97 = __swift_project_boxed_opaque_existential_1(v95, v96);
                    *((_QWORD *)&v141 + 1) = v96;
                    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v140);
                    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(boxed_opaque_existential_0, v97, v96);
                    sub_1BAACDA74((uint64_t)&v140);
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
                    v95 += 5;
                    --v94;
                  }
                  while (v94);
                }
                swift_bridgeObjectRelease();
              }

              (*(void (**)(char *, uint64_t))(v126 + 8))(v110, v127);
              v40 = v118;
              (*(void (**)(char *, uint64_t))(v133 + 8))(v107, v118);
              v43 = v135;
              (*(void (**)(char *, uint64_t))(v135 + 8))(v122, v132);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
              v36 = v121;
            }
            else
            {
              v142 = 0;
              v140 = 0u;
              v141 = 0u;

              (*(void (**)(char *, uint64_t))(v88 + 8))(v110, v91);
              (*(void (**)(char *, uint64_t))(v133 + 8))(v86, v40);
              v43 = v135;
              (*(void (**)(char *, uint64_t))(v135 + 8))(v122, v132);
              sub_1BA65DB80((uint64_t)&v140, &qword_1ED39C3F8, &qword_1ED3B0A48);
            }
            goto LABEL_41;
          }
          v69 = objc_msgSend(v46, sel_indexPath);
          v70 = v128;
          sub_1BB86CBA4();

          sub_1BB86CBD4();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v40);
          v71 = v112;
          v38 = v49;
          sub_1BB86FAF0();
          v72 = v116;
          v73 = v114;
          sub_1BB8705D0();
          (*(void (**)(char *, uint64_t))(v113 + 8))(v71, v73);
          v74 = v119;
          v146 = v119;
          v75 = __swift_allocate_boxed_opaque_existential_0(&v143);
          v76 = v117;
          v77 = *(void (**)(uint64_t *, char *, uint64_t))(v117 + 16);
          v77(v75, v72, v74);
          sub_1BAACDA74((uint64_t)&v143);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          v77((uint64_t *)v111, v72, v74);
          sub_1BA4D9CE8(0, &qword_1ED3B0A48);
          if ((swift_dynamicCast() & 1) == 0)
          {
            v142 = 0;
            v140 = 0u;
            v141 = 0u;

            (*(void (**)(char *, uint64_t))(v76 + 8))(v72, v74);
            v43 = v135;
            (*(void (**)(char *, uint64_t))(v135 + 8))(v122, v132);
            sub_1BA65DB80((uint64_t)&v140, &qword_1ED39C3F8, &qword_1ED3B0A48);
            v1 = v102;
            v40 = v118;
            v41 = (uint64_t)v134;
            goto LABEL_38;
          }
          sub_1BA4CECCC(&v140, (uint64_t)&v143);
          __swift_project_boxed_opaque_existential_1(&v143, v146);
          v78 = sub_1BB87129C();
          if (!v78)
          {

            (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v119);
            v43 = v135;
            (*(void (**)(char *, uint64_t))(v135 + 8))(v122, v132);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
            v36 = v121;
            v1 = v102;
            v40 = v118;
LABEL_41:
            v41 = (uint64_t)v134;
            goto LABEL_17;
          }
          v79 = *(_QWORD *)(v78 + 16);
          v1 = v102;
          if (v79)
          {
            v80 = (_QWORD *)(v78 + 32);
            do
            {
              v81 = v80[3];
              v82 = __swift_project_boxed_opaque_existential_1(v80, v81);
              *((_QWORD *)&v141 + 1) = v81;
              v83 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v140);
              (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v83, v82, v81);
              sub_1BAACDA74((uint64_t)&v140);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
              v80 += 5;
              --v79;
            }
            while (v79);
          }
          swift_bridgeObjectRelease();

          (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v119);
          v43 = v135;
          (*(void (**)(char *, uint64_t))(v135 + 8))(v122, v132);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          v36 = v121;
          v41 = (uint64_t)v134;
          v42 = v139;
          v40 = v118;
          if (v44 == v137)
            goto LABEL_42;
        }
      }

      goto LABEL_17;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v38, v131);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v105);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  }
}

uint64_t sub_1BAACDA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30[32];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v26 = a1;
  v3 = sub_1BB8705C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v25 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v25);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getObjectType();
  sub_1BB871008();
  sub_1BB870504();
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v9, v3);
  sub_1BB871008();
  v15 = sub_1BB870540();
  v14(v6, v3);
  v16 = (char *)v11 + *(int *)(v25 + 24);
  v17 = sub_1BB86F550();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *v11 = v13;
  v11[1] = v15;
  sub_1BA747A10(v26, (uint64_t)v30);
  sub_1BA4D9CE8(0, &qword_1ED3B8030);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(&v27, (uint64_t)v31);
    v18 = v32;
    v19 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    v20 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 8))(v11, v18, v19);
    if (v20)
    {
      v25 = (uint64_t)v11;
      v26 = v20;
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = v26 + 32;
        do
        {
          sub_1BA4C010C(v22, (uint64_t)&v27);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
          __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
          sub_1BB870B40();
          sub_1BB86F8E0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
      v23 = v25;
    }
    else
    {
      v23 = (uint64_t)v11;
    }
    sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
    return sub_1BA65DB80((uint64_t)&v27, &qword_1ED3B8038, &qword_1ED3B8030);
  }
}

uint64_t ImagePersistenceProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ImagePersistenceProvider.__deallocating_deinit()
{
  ImagePersistenceProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_1BAACDDC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0A18)
  {
    sub_1BB870E7C();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0A18);
  }
}

void sub_1BAACDE18()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED39DA38)
  {
    sub_1BB86CBE0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED39DA38);
  }
}

uint64_t method lookup function for ImagePersistenceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImagePersistenceProvider.__allocating_init(imageCache:rendererEnvironment:layoutCollectionProvider:layoutProvider:layoutOptionsProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t FormatLocalization.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLocalization.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatLocalization.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatLocalization.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLocalization.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatLocalization.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatLocalization.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLocalization.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatLocalization.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatLocalization.strings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatLocalizationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v6 = a1[5];
  v5 = a1[6];
  v8 = a2[2];
  v7 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1BB874398() & 1) == 0)
    return 0;
  if (v4)
  {
    if (!v7 || (v2 != v8 || v4 != v7) && (sub_1BB874398() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
  {
    if (v9 && (v3 == v10 && v6 == v9 || (sub_1BB874398() & 1) != 0))
      return sub_1BA88DA98(v5, v11);
  }
  else if (!v9)
  {
    return sub_1BA88DA98(v5, v11);
  }
  return 0;
}

unint64_t sub_1BAACE10C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA89675C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAACE130(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82FB88();
  a1[2] = sub_1BA82FBCC();
  result = sub_1BAACE164();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAACE164()
{
  unint64_t result;

  result = qword_1ED3D0678;
  if (!qword_1ED3D0678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLocalization, &type metadata for FormatLocalization);
    atomic_store(result, (unint64_t *)&qword_1ED3D0678);
  }
  return result;
}

uint64_t sub_1BAACE1A8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAACE1B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BAACE1F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAACE200(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BAACE240@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAACE24C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatLocalization()
{
  return &type metadata for FormatLocalization;
}

uint64_t PuzzleComponentMenuEvent.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsFeed::PuzzleComponentMenuEvent __swiftcall PuzzleComponentMenuEvent.init(identifier:)(NewsFeed::PuzzleComponentMenuEvent identifier)
{
  NewsFeed::PuzzleComponentMenuEvent *v1;

  *v1 = identifier;
  return identifier;
}

unint64_t PuzzleComponentMenuEvent.scriptId.getter()
{
  return 0xD000000000000011;
}

unint64_t PuzzleComponentMenuEvent.scriptEventName.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t PuzzleComponentMenuEvent.scriptEventDetail.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v2 = *v0;
  v1 = v0[1];
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_1BA76E994(inited);
}

unint64_t sub_1BAACE380()
{
  return 0xD000000000000011;
}

unint64_t sub_1BAACE39C()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1BAACE3B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v2 = *v0;
  v1 = v0[1];
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_1BA76E994(inited);
}

ValueMetadata *type metadata accessor for PuzzleComponentMenuEvent()
{
  return &type metadata for PuzzleComponentMenuEvent;
}

_QWORD *sub_1BAACE440(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  void *__dst;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    v9 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    v10 = a2[12];
    v11 = *(int *)(a3 + 48);
    __dst = (void *)(a1 + v11);
    v12 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v10;
    v13 = sub_1BB86EB84();
    v17 = *(_QWORD *)(v13 - 8);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v12, 1, v13))
    {
      sub_1BA6BF9E8(0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(__dst, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v13);
    }
  }
  return v3;
}

uint64_t sub_1BAACE5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BAACE668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(int *)(a3 + 48);
  __dst = (void *)(a1 + v10);
  v11 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v12 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v12 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v11, 1, v12))
  {
    sub_1BA6BF9E8(0);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1BAACE7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 48);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA6BF9E8(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1BAACE994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(int *)(a3 + 48);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA6BF9E8(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1BAACEA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 48);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BA6BF9E8(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1BAACEBF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAACEC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA6BF9E8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_1BAACEC80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAACEC8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA6BF9E8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DebugNewsroomThemeData()
{
  uint64_t result;

  result = qword_1EF2AFAE0;
  if (!qword_1EF2AFAE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAACED3C()
{
  unint64_t v0;

  sub_1BA6BF9E8(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BAACEDD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAACEDFC + 4 * a3_0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1BAACEDFC()
{
  return 0x6465766968637261;
}

uint64_t sub_1BAACEE14()
{
  return 1701667182;
}

uint64_t sub_1BAACEE24()
{
  return 0x4A6567616B636170;
}

unint64_t sub_1BAACEE6C()
{
  return 0xD000000000000011;
}

unint64_t sub_1BAACEE88()
{
  return 0xD000000000000012;
}

uint64_t sub_1BAACEEA8()
{
  return 0x655674736574616CLL;
}

uint64_t sub_1BAACEECC()
{
  unsigned __int8 *v0;

  return sub_1BAACEDD4(*v0);
}

uint64_t sub_1BAACEED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAACFBE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAACEEF8(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1BAACEF04()
{
  sub_1BAACF6F8();
  return sub_1BB874710();
}

uint64_t sub_1BAACEF2C()
{
  sub_1BAACF6F8();
  return sub_1BB87471C();
}

uint64_t sub_1BAACEF54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BAACF908(0, &qword_1EF2AFB68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAACF6F8();
  sub_1BB8746C8();
  LOBYTE(v12) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BB874128();
    LOBYTE(v12) = 2;
    sub_1BB87411C();
    LOBYTE(v12) = 3;
    sub_1BB87411C();
    LOBYTE(v12) = 4;
    sub_1BB87411C();
    LOBYTE(v12) = 5;
    sub_1BB87411C();
    v12 = *(_QWORD *)(v3 + 88);
    HIBYTE(v11) = 6;
    sub_1BAACF73C();
    sub_1BAACF964(&qword_1EF2AFB70, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BB87414C();
    v12 = *(_QWORD *)(v3 + 96);
    HIBYTE(v11) = 7;
    sub_1BAACF79C();
    sub_1BAACF9C0();
    sub_1BB87414C();
    type metadata accessor for DebugNewsroomThemeData();
    LOBYTE(v12) = 8;
    sub_1BB86EB84();
    sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAACF220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;

  v34 = a2;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAACF908(0, &qword_1EF2AFB40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v35 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - v8;
  v10 = type metadata accessor for DebugNewsroomThemeData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[16] = 2;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 88) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  v14 = &v12[*(int *)(v13 + 48)];
  v15 = sub_1BB86EB84();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v37 = (uint64_t)v14;
  v16(v14, 1, 1, v15);
  v17 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1BAACF6F8();
  v18 = v38;
  sub_1BB87468C();
  if (v18)
  {
    v20 = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = (uint64_t (*)(_QWORD))sub_1BA6BF9E8;
    v33 = v20;
  }
  else
  {
    v38 = v5;
    LOBYTE(v40) = 0;
    v19 = v35;
    *(_QWORD *)v12 = sub_1BB874098();
    *((_QWORD *)v12 + 1) = v22;
    LOBYTE(v40) = 1;
    v23 = sub_1BB874038();
    v25 = (uint64_t)v36;
    v24 = v37;
    v26 = v7;
    v12[16] = v23;
    LOBYTE(v40) = 2;
    *((_QWORD *)v12 + 3) = sub_1BB87402C();
    *((_QWORD *)v12 + 4) = v27;
    LOBYTE(v40) = 3;
    *((_QWORD *)v12 + 5) = sub_1BB87402C();
    *((_QWORD *)v12 + 6) = v28;
    LOBYTE(v40) = 4;
    *((_QWORD *)v12 + 7) = sub_1BB87402C();
    *((_QWORD *)v12 + 8) = v29;
    LOBYTE(v40) = 5;
    *((_QWORD *)v12 + 9) = sub_1BB87402C();
    *((_QWORD *)v12 + 10) = v30;
    sub_1BAACF73C();
    v39 = 6;
    sub_1BAACF964((unint64_t *)&qword_1EF2AFB50, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1BB874068();
    *((_QWORD *)v12 + 11) = v40;
    sub_1BAACF79C();
    v39 = 7;
    sub_1BAACF800();
    sub_1BB874068();
    *((_QWORD *)v12 + 12) = v40;
    LOBYTE(v40) = 8;
    sub_1BA4A2870(&qword_1ED3B0918, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF0]);
    v31 = (uint64_t)v38;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v19);
    sub_1BAACF880(v31, v24);
    sub_1BAACF8C4((uint64_t)v12, v34);
    __swift_destroy_boxed_opaque_existential_1(v25);
    v32 = (uint64_t (*)(_QWORD))type metadata accessor for DebugNewsroomThemeData;
    v33 = (uint64_t)v12;
  }
  return sub_1BA4A2E80(v33, v32);
}

