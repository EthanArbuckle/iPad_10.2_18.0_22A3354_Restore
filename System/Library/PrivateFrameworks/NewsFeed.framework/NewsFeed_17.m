uint64_t sub_1BAF6B6E4(uint64_t a1)
{
  uint64_t result;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  result = (uint64_t)objc_msgSend(*(id *)(a1 + 80), sel_configuration);
  if (result)
  {
    v2 = (void *)result;
    if ((objc_msgSend((id)result, sel_respondsToSelector_, sel_shortcutsMaxCount) & 1) != 0)
    {
      v3 = objc_msgSend(v2, sel_shortcutsMaxCount);
      swift_unknownObjectRelease();
      return (uint64_t)v3;
    }
    else
    {
      swift_unknownObjectRelease();
      if (qword_1EF2A7368 != -1)
        swift_once();
      v4 = sub_1BB86EFEC();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EF3D0930);
      v5 = sub_1BB86EFC8();
      v6 = sub_1BB8732F4();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1BA493000, v5, v6, "ShortcutManager unable to get shortcutMaxCount from configuration, using default value: 8", v7, 2u);
        MEMORY[0x1BCCE5C38](v7, -1, -1);
      }

      return 8;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ShortcutManager.addShortcut(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;

  v2 = v1;
  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9._countAndFlagsBits = countAndFlagsBits;
  v9._object = object;
  if (ShortcutManager.canAddShortcut(identifier:)(v9))
  {
    v10 = *(void **)(v1 + 24);
    v11 = (void *)sub_1BB872970();
    v12 = objc_msgSend(v10, sel_hasSubscriptionForTagID_, v11);

    if ((v12 & 1) == 0)
    {
      v13 = (void *)sub_1BB872970();
      objc_msgSend(v10, sel_addSubscriptionForTagID_type_, v13, 0);

    }
    v14 = *(void **)(v2 + 16);
    swift_bridgeObjectRetain();
    sub_1BB86C8A4();
    v15 = objc_msgSend(v14, sel_orderedShortcuts);
    v16 = objc_msgSend(v15, sel_count);

    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v16);
    v18 = objc_allocWithZone(MEMORY[0x1E0D58ED0]);
    v19 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_1BB86C808();
    v21 = objc_msgSend(v18, sel_initWithIdentifier_dateAdded_order_shortcutType_, v19, v20, v17, 0);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(v14, sel_addShortcut_, v21);

    v22 = *(void **)(v2 + 32);
    if (objc_msgSend(v22, sel_shortcutsOnboardingState) != (id)2)
      objc_msgSend(v22, sel_setShortcutsOnboardingState_, 2);
  }
}

Swift::Void __swiftcall ShortcutManager.removeShortcut(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + 16);
  v3 = (void *)sub_1BB872970();
  objc_msgSend(v2, sel_removeShortcutWithIdentifier_, v3);

  v4 = *(void **)(v1 + 32);
  if (objc_msgSend(v4, sel_shortcutsOnboardingState) != (id)2)
    objc_msgSend(v4, sel_setShortcutsOnboardingState_, 2);
}

Swift::Bool __swiftcall ShortcutManager.hasShortcut(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v2 = *(void **)(v1 + 16);
  v3 = (void *)sub_1BB872970();
  LOBYTE(v2) = objc_msgSend(v2, sel_containsShortcut_, v3);

  return (char)v2;
}

id *ShortcutManager.deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 5));
  swift_unknownObjectRelease();

  return v0;
}

uint64_t ShortcutManager.__deallocating_deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 5));
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

BOOL sub_1BAF6BB7C(uint64_t a1, uint64_t a2)
{
  return ShortcutManager.canAddShortcut(identifier:)(*(Swift::String *)&a1);
}

void sub_1BAF6BBA0(uint64_t a1, uint64_t a2)
{
  ShortcutManager.addShortcut(identifier:)(*(Swift::String *)&a1);
}

id sub_1BAF6BBC0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id result;

  v1 = *v0;
  v2 = *(void **)(*v0 + 16);
  v3 = (void *)sub_1BB872970();
  objc_msgSend(v2, sel_removeShortcutWithIdentifier_, v3);

  v4 = *(void **)(v1 + 32);
  result = objc_msgSend(v4, sel_shortcutsOnboardingState);
  if (result != (id)2)
    return objc_msgSend(v4, sel_setShortcutsOnboardingState_, 2);
  return result;
}

id sub_1BAF6BC44()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1BB872970();
  v3 = objc_msgSend(v1, sel_containsShortcut_, v2);

  return v3;
}

unint64_t sub_1BAF6BC8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39C220;
  if (!qword_1ED39C220)
  {
    v1 = sub_1BB86C4B4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39C220);
  }
  return result;
}

unint64_t sub_1BAF6BCD4()
{
  unint64_t result;

  result = qword_1EF2B7188;
  if (!qword_1EF2B7188)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AlertShortcutsLimitReached, &type metadata for AlertShortcutsLimitReached);
    atomic_store(result, (unint64_t *)&qword_1EF2B7188);
  }
  return result;
}

unint64_t sub_1BAF6BD18()
{
  unint64_t result;

  result = qword_1EF2B7190;
  if (!qword_1EF2B7190)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B7190);
  }
  return result;
}

uint64_t dispatch thunk of ShortcutManagerType.canAddShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ShortcutManagerType.addShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ShortcutManagerType.removeShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ShortcutManagerType.hasShortcut(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for ShortcutManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAF6BD80(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  char v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  objc_super v43;
  uint64_t v44;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = MEMORY[0x1E0DEE9D8];
  v5 = a1 & 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections] = MEMORY[0x1E0DEE9D8];
  v44 = v4;
  v6 = v1;
  sub_1BB873DD4();
  type metadata accessor for DebugFormatRulerIndicatorView.Component();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v7 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_BYTE *)(v7 + 32) = 0;
  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v8 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_BYTE *)(v8 + 32) = 0;
  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines] = v44;
  v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v10 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_BYTE *)(v10 + 32) = 0;
  *(_QWORD *)&v6[v9] = v10;
  v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_direction] = v5;

  v43.receiver = v6;
  v43.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v43, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill;
  v13 = *(void **)(*(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill] + 16);
  v14 = (void *)objc_opt_self();
  v15 = v11;
  v16 = v13;
  v17 = objc_msgSend(v14, sel_systemRedColor);
  v18 = objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.5);

  objc_msgSend(v16, sel_setBackgroundColor_, v18);
  v19 = *(_QWORD *)&v11[v12];
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)(v19 + 16));
  v20 = *(void **)(v19 + 24);
  v21 = (void *)objc_opt_self();
  v22 = v20;
  v42 = v21;
  v23 = objc_msgSend(v21, sel_systemFontOfSize_, 12.0);
  objc_msgSend(v22, sel_setFont_, v23);

  v24 = *(id *)(*(_QWORD *)&v11[v12] + 24);
  v25 = objc_msgSend(v14, sel_whiteColor);
  objc_msgSend(v24, sel_setTextColor_, v25);

  v26 = *(void **)(*(_QWORD *)&v11[v12] + 24);
  objc_msgSend(v26, sel_setTextAlignment_, 1);
  v27 = v26;
  v28 = objc_msgSend(v14, sel_systemRedColor);
  objc_msgSend(v27, sel_setBackgroundColor_, v28);

  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)(*(_QWORD *)&v11[v12] + 24));
  v29 = *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines];
  if (!(v29 >> 62))
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v30)
      goto LABEL_3;
LABEL_10:

    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v30 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v30 >= 1)
  {
    v32 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        v33 = MEMORY[0x1BCCE4630](v32, v29);
      }
      else
      {
        v33 = *(_QWORD *)(v29 + 8 * v32 + 32);
        swift_retain();
      }
      ++v32;
      v34 = *(id *)(v33 + 16);
      v35 = objc_msgSend(v14, sel_systemRedColor);
      objc_msgSend(v34, sel_setBackgroundColor_, v35);

      objc_msgSend(v15, sel_addSubview_, *(_QWORD *)(v33 + 16));
      v36 = *(id *)(v33 + 24);
      v37 = objc_msgSend(v42, sel_systemFontOfSize_, 12.0);
      objc_msgSend(v36, sel_setFont_, v37);

      v38 = *(id *)(v33 + 24);
      v39 = objc_msgSend(v14, sel_whiteColor);
      objc_msgSend(v38, sel_setTextColor_, v39);

      v40 = *(id *)(v33 + 24);
      v41 = objc_msgSend(v14, sel_systemRedColor);
      objc_msgSend(v40, sel_setBackgroundColor_, v41);

      objc_msgSend(v15, sel_addSubview_, *(_QWORD *)(v33 + 24));
      swift_release();
    }
    while (v30 != v32);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1BAF6C3A4()
{
  char *v0;
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  __objc2_class_ro *v24;
  void *v25;
  id v26;
  double Height;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  double v42;
  double v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _BYTE *v55;
  unint64_t v56;
  CGAffineTransform v57;
  uint64_t v58;
  objc_super v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  v1 = v0;
  v59.receiver = v0;
  v59.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v59, sel_layoutSubviews);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines];
  v56 = v2 >> 62;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    if (!v3)
      goto LABEL_10;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_10;
  }
  if (v3 < 1)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = MEMORY[0x1BCCE4630](v4, v2);
    }
    else
    {
      v5 = *(_QWORD *)(v2 + 8 * v4 + 32);
      swift_retain();
    }
    ++v4;
    *(_BYTE *)(v5 + 32) = 1;
    objc_msgSend(*(id *)(v5 + 16), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v5 + 24), sel_setHidden_, *(unsigned __int8 *)(v5 + 32));
    swift_release();
  }
  while (v3 != v4);
LABEL_10:
  swift_bridgeObjectRelease();
  v6 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections;
  v7 = *(double **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections];
  v8 = *((_QWORD *)v7 + 2);
  if (!v8)
  {
LABEL_35:
    v49 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill];
    *(_BYTE *)(v49 + 32) = 1;
    objc_msgSend(*(id *)(v49 + 16), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v49 + 24), sel_setHidden_, *(unsigned __int8 *)(v49 + 32));
    return;
  }
  v9 = *((_QWORD *)v7 + 4);
  v11 = v7[5];
  v10 = v7[6];
  if (v56)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v13 <= 0)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12 <= 0)
      goto LABEL_29;
  }
  v52 = v6;
  v14 = 0;
  v54 = v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_direction];
  v55 = v1;
  v15 = v7 + 9;
  v53 = v8 - 1;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v17 = MEMORY[0x1BCCE4630](v14, v2);
    }
    else
    {
      if ((unint64_t)v14 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_38;
      v17 = *(_QWORD *)(v2 + 8 * v14 + 32);
      swift_retain();
    }
    *(_BYTE *)(v17 + 32) = 0;
    objc_msgSend(*(id *)(v17 + 16), sel_setHidden_, 0, v52);
    v18 = *(void **)(v17 + 24);
    objc_msgSend(v18, sel_setHidden_, *(unsigned __int8 *)(v17 + 32));
    *(_QWORD *)&v57.a = 32;
    v57.b = -1.7573882e159;
    v58 = v9;
    v19 = v18;
    sub_1BB87420C();
    sub_1BB872AFC(v20);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v21);
    v22 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setText_, v22);

    objc_msgSend(*(id *)(v17 + 24), sel_sizeToFit);
    v23 = *(id *)(v17 + 16);
    v24 = &StubThumbnailProcessor;
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v23, sel_setFrame_, v11, 0.0, 1.0, CGRectGetHeight(v60));

    v25 = *(void **)(v17 + 24);
    if ((v54 & 1) != 0)
    {
      v57.b = 0.0;
      v57.c = 0.0;
      v57.a = 1.0;
      v57.d = 1.0;
      v57.tx = 0.0;
      v57.ty = 0.0;
      objc_msgSend(v25, sel_setTransform_, &v57);
      v26 = v25;
      objc_msgSend(v1, sel_bounds);
      Height = CGRectGetHeight(v61);
      objc_msgSend(v26, sel_bounds);
      objc_msgSend(v26, sel_setFrame_, v11, Height, CGRectGetWidth(v62), v10);

      v28 = objc_msgSend(*(id *)(v17 + 24), sel_layer);
      objc_msgSend(v28, sel_setAnchorPoint_, 0.0, 0.0);

      v29 = *(void **)(v17 + 24);
      CGAffineTransformMakeRotation(&v57, 3.14159265);
      v24 = &StubThumbnailProcessor;
      objc_msgSend(v29, sel_setTransform_, &v57);
      swift_release();
    }
    else
    {
      v30 = v25;
      objc_msgSend(v30, sel_bounds);
      objc_msgSend(v30, sel_setFrame_, v11, 0.0, CGRectGetWidth(v63), v10);
      swift_release();

    }
    if (v53 == v14)
      break;
    if ((unint64_t)(v14 + 1) >= *((_QWORD *)v7 + 2))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v9 = *((_QWORD *)v15 - 2);
    v11 = *(v15 - 1);
    v10 = *v15;
    if (v56)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v14;
    v15 += 3;
    if (v14 >= v16)
      goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(*(_QWORD *)&v1[v52] + 16) != 2)
    goto LABEL_35;
  sub_1BAF6CC98();
  swift_bridgeObjectRetain();
  v31 = sub_1BB872E14();
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill];
  *(_BYTE *)(v32 + 32) = 0;
  objc_msgSend(*(id *)(v32 + 16), sel_setHidden_, 0);
  v33 = *(void **)(v32 + 24);
  objc_msgSend(v33, sel_setHidden_, *(unsigned __int8 *)(v32 + 32));
  *(_QWORD *)&v57.a = 32;
  v57.b = -1.7573882e159;
  if (*(_QWORD *)(v31 + 16) < 2uLL)
    goto LABEL_40;
  v34 = *(_QWORD *)(v31 + 56);
  v35 = *(_QWORD *)(v31 + 32);
  v36 = __OFSUB__(v34, v35);
  v37 = v34 - v35;
  if (v36)
    goto LABEL_41;
  v58 = v37;
  v38 = v33;
  sub_1BB87420C();
  sub_1BB872AFC(v39);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v40);
  v41 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v38, sel_setText_, v41);

  objc_msgSend(*(id *)(v32 + 24), sel_sizeToFit);
  v42 = *(double *)(v31 + 40);
  v43 = *(double *)(v31 + 64);
  v44 = *(id *)(v32 + 16);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, v24[54].name);
  objc_msgSend(v44, sel_setFrame_, v42, 0.0, v43 - v42, CGRectGetHeight(v64));

  v45 = *(void **)(v32 + 24);
  if ((v55[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_direction] & 1) != 0)
  {
    v57.a = 1.0;
    v57.b = 0.0;
    v57.c = 0.0;
    v57.d = 1.0;
    v57.tx = 0.0;
    v57.ty = 0.0;
    objc_msgSend(v45, sel_setTransform_, &v57);
    v46 = *(void **)(v32 + 16);
    v47 = v45;
    objc_msgSend(v46, sel_center);
    objc_msgSend(v47, sel_setCenter_);

    v48 = *(void **)(v32 + 24);
    CGAffineTransformMakeRotation(&v57, -1.57079633);
    objc_msgSend(v48, sel_setTransform_, &v57);
  }
  else
  {
    v50 = *(void **)(v32 + 16);
    v51 = v45;
    objc_msgSend(v50, sel_center);
    objc_msgSend(v51, sel_setCenter_);

  }
}

double sub_1BAF6CB68@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1BAF6CBA8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatRulerIndicatorView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugFormatRulerIndicatorView.Component()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DebugFormatRulerIndicatorView.Selection()
{
  return &type metadata for DebugFormatRulerIndicatorView.Selection;
}

unint64_t sub_1BAF6CC98()
{
  unint64_t result;

  result = qword_1EF2B7290;
  if (!qword_1EF2B7290)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF068], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EF2B7290);
  }
  return result;
}

void sub_1BAF6CCDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections] = MEMORY[0x1E0DEE9D8];
  v7 = v2;
  sub_1BB873DD4();
  type metadata accessor for DebugFormatRulerIndicatorView.Component();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v3 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_BYTE *)(v3 + 32) = 0;
  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v4 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_BYTE *)(v4 + 32) = 0;
  sub_1BB873DB0();
  sub_1BB873DE0();
  sub_1BB873DEC();
  sub_1BB873DBC();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_lines] = v7;
  v5 = OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_fill;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v6 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_BYTE *)(v6 + 32) = 0;
  *(_QWORD *)&v1[v5] = v6;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FeedGroupConfigType.expandable.getter()
{
  return 0;
}

void sub_1BAF6CF30(_BYTE *a1@<X8>)
{
  FeedGroupConfigType.dataKind.getter(a1);
}

void FeedGroupConfigType.dataKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BAF6CF4C()
{
  return FeedGroupConfigType.maxAppVersion.getter();
}

uint64_t _s8NewsFeed0B15GroupConfigTypePAAE13minAppVersion13TeaFoundation0H0VSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t FeedGroupConfigType.allowedSegmentSetIds.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t FeedGroupConfigType.blockedSegmentSetIds.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t FeedGroupConfigType.allowedPlatforms.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t FeedGroupConfigType.blockedPlatforms.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BAF6CFD4(_BYTE *a1@<X8>)
{
  FeedGroupConfigType.priority.getter(a1);
}

uint64_t static FeedGroupConfigType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BB86DEE8();
  v2 = v1;
  if (v0 == sub_1BB86DEE8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t FeedGroupConfig.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupConfig.kindIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedGroupConfig.paidVisibility.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

uint64_t FeedGroupConfig.priority.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 84));
  return result;
}

uint64_t FeedGroupConfig.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  char v16;

  v6 = type metadata accessor for FeedGroupConfig.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32));
  MEMORY[0x1BCCE5B24](&unk_1BB8D8A60, v6);
  v13 = sub_1BB8741D0();
  v7 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v14 = (char *)&v11 - v8;
  v12 = v2;
  result = sub_1BB872850();
  if (!v3)
  {
    v11 = v7;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746C8();
    v10 = v12;
    LOBYTE(v15) = 0;
    sub_1BB87417C();
    LOBYTE(v15) = 1;
    sub_1BB87417C();
    v15 = *(_OWORD *)(v10 + 32);
    v16 = 2;
    sub_1BA76D834();
    sub_1BA637DF8((unint64_t *)&qword_1ED39BDB0, (uint64_t (*)(uint64_t))sub_1BA76D834, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v10 + 48);
    v16 = 3;
    sub_1BAF6E998();
    sub_1BB8741AC();
    LOBYTE(v15) = *(_BYTE *)(v10 + 56);
    v16 = 4;
    sub_1BA6604FC();
    sub_1BB8741AC();
    LOBYTE(v15) = 5;
    sub_1BA6BF9E8(0);
    sub_1BAF6E9DC();
    sub_1BB8741AC();
    LOBYTE(v15) = 6;
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v10 + *(int *)(a2 + 68));
    v16 = 7;
    sub_1BA637C70();
    sub_1BA637DF8((unint64_t *)&unk_1ED39BFC0, (uint64_t (*)(uint64_t))sub_1BA637C70, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v10 + *(int *)(a2 + 72));
    v16 = 8;
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v10 + *(int *)(a2 + 76));
    v16 = 9;
    sub_1BA661760();
    sub_1BA637CCC(&qword_1ED3AB168, (uint64_t (*)(void))sub_1BA837FC4, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v12 + *(int *)(a2 + 80));
    v16 = 10;
    sub_1BB8741AC();
    LOBYTE(v15) = *(_BYTE *)(v12 + *(int *)(a2 + 84));
    v16 = 11;
    sub_1BAF6EA4C();
    sub_1BB8741AC();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v13);
  }
  return result;
}

uint64_t sub_1BAF6D5AC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_1BAF6D5F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF6D624 + 4 * aD_0[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1BAF6D624()
{
  return 0x696669746E656469;
}

unint64_t sub_1BAF6D640()
{
  return 0xD000000000000013;
}

unint64_t sub_1BAF6D6F8()
{
  return 0xD000000000000010;
}

uint64_t sub_1BAF6D720()
{
  return 0x797469726F697270;
}

uint64_t sub_1BAF6D738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D89C0, a3);
  return sub_1BB874440();
}

uint64_t sub_1BAF6D78C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D89C0, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BAF6D7D8()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D89C0);
  return sub_1BB872D54();
}

uint64_t sub_1BAF6D828()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D89C0);
  return sub_1BB872D48();
}

uint64_t sub_1BAF6D878@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF6D5AC();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF6D8B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAF6D5F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAF6D8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1BAF6D5F4(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_1BAF6D910@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF6FCB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF6D940(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D8A60, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAF6D974(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D8A60, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BAF6D9A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FeedGroupConfig.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BAF6D9C8(_QWORD *a1, uint64_t a2)
{
  return FeedGroupConfig.encode(to:)(a1, a2);
}

uint64_t sub_1BAF6D9DC()
{
  uint64_t v0;

  v0 = sub_1BA653870();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static FeedGroupConfig<>.== infix(_:_:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *, uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _QWORD *v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  _BYTE *v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _BYTE *v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  _BYTE *v54;
  uint64_t v56;
  _BYTE *v57;
  void (*v58)(_BYTE *, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  _BYTE v68[12];
  int v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  int *v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  void (*v76)(_BYTE *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v72 = a6;
  v76 = a5;
  v77 = a3;
  v9 = sub_1BB86EB84();
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  MEMORY[0x1E0C80A78](v9);
  v75 = &v68[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA6C1CE8();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v74 = &v68[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v68[-v15];
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v17);
  v73 = &v68[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v68[-v20];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v68[-v23];
  MEMORY[0x1E0C80A78](v25);
  v27 = &v68[-v26];
  MEMORY[0x1E0C80A78](v28);
  v30 = &v68[-v29];
  MEMORY[0x1E0C80A78](v31);
  v33 = &v68[-v32];
  if (*(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1] || (v34 = sub_1BB874398(), v35 = 0, (v34 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == a2[2] && *(_QWORD *)(a1 + 24) == a2[3]
      || (v36 = sub_1BB874398(), v35 = 0, (v36 & 1) != 0))
    {
      v37 = *(_QWORD *)(a1 + 40);
      v38 = a2[5];
      if (v37)
      {
        if (!v38)
          goto LABEL_34;
        if (*(_QWORD *)(a1 + 32) != a2[4] || v37 != v38)
        {
          v39 = sub_1BB874398();
          v35 = 0;
          if ((v39 & 1) == 0)
            return v35 & 1;
        }
      }
      else if (v38)
      {
        goto LABEL_34;
      }
      v40 = *(_QWORD **)(a1 + 48);
      v41 = (_QWORD *)a2[6];
      if (v40)
      {
        if (!v41 || !sub_1BA8950E8(v40, v41))
          goto LABEL_34;
      }
      else if (v41)
      {
        goto LABEL_34;
      }
      sub_1BB805A60(*(_BYTE *)(a1 + 56));
      if ((v42 & 1) == 0)
        goto LABEL_34;
      v43 = type metadata accessor for FeedGroupConfig(0, v77, a4, (uint64_t)v76);
      sub_1BA6BF98C(a1 + *(int *)(v43 + 60), (uint64_t)v33);
      v71 = (int *)v43;
      sub_1BA6BF98C((uint64_t)a2 + *(int *)(v43 + 60), (uint64_t)v30);
      v44 = &v16[*(int *)(v12 + 48)];
      sub_1BA6BF98C((uint64_t)v33, (uint64_t)v16);
      v76 = (void (*)(_BYTE *, uint64_t))v44;
      sub_1BA6BF98C((uint64_t)v30, (uint64_t)v44);
      v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
      v46 = v45((uint64_t)v16, 1, v79);
      v70 = v45;
      if (v46 == 1)
      {
        sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        v47 = v79;
        if (v45((uint64_t)v76, 1, v79) == 1)
        {
          sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
LABEL_27:
          v50 = v71;
          sub_1BA6BF98C(a1 + v71[16], (uint64_t)v24);
          sub_1BA6BF98C((uint64_t)a2 + v50[16], (uint64_t)v21);
          v51 = v74;
          v52 = (uint64_t)&v74[*(int *)(v12 + 48)];
          sub_1BA6BF98C((uint64_t)v24, (uint64_t)v74);
          sub_1BA6BF98C((uint64_t)v21, v52);
          v53 = v70;
          if (v70((uint64_t)v51, 1, v47) == 1)
          {
            sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
            sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
            if (v53(v52, 1, v47) == 1)
            {
              sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
LABEL_37:
              if ((sub_1BA6C16A0(*(_QWORD *)(a1 + v50[17]), *(_QWORD *)((char *)a2 + v50[17])) & 1) != 0
                && (sub_1BA6C16A0(*(_QWORD *)(a1 + v50[18]), *(_QWORD *)((char *)a2 + v50[18])) & 1) != 0
                && (sub_1BA6C1868(*(_QWORD *)(a1 + v50[19]), *(_QWORD *)((char *)a2 + v50[19])) & 1) != 0
                && (sub_1BA6C1868(*(_QWORD *)(a1 + v50[20]), *(_QWORD *)((char *)a2 + v50[20])) & 1) != 0)
              {
                v60 = v50[21];
                v61 = *(unsigned __int8 *)(a1 + v60);
                v62 = *((unsigned __int8 *)a2 + v60);
                if (v61)
                  v63 = 0x6C616D726F6ELL;
                else
                  v63 = 7827308;
                if (v61)
                  v64 = 0xE600000000000000;
                else
                  v64 = 0xE300000000000000;
                if (v62)
                  v65 = 0x6C616D726F6ELL;
                else
                  v65 = 7827308;
                if (v62)
                  v66 = 0xE600000000000000;
                else
                  v66 = 0xE300000000000000;
                if (v63 == v65 && v64 == v66)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  v67 = sub_1BB874398();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v35 = 0;
                  if ((v67 & 1) == 0)
                    return v35 & 1;
                }
                v35 = sub_1BB872958();
                return v35 & 1;
              }
              goto LABEL_34;
            }
            goto LABEL_32;
          }
          v54 = v73;
          sub_1BA6BF98C((uint64_t)v51, (uint64_t)v73);
          if (v53(v52, 1, v47) == 1)
          {
            sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
            sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
            (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v54, v47);
LABEL_32:
            v48 = (uint64_t)v51;
            goto LABEL_33;
          }
          v56 = v78;
          v57 = v75;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v78 + 32))(v75, v52, v47);
          sub_1BA66184C(&qword_1ED39C378, MEMORY[0x1E0DB4DE8]);
          LODWORD(v79) = sub_1BB872958();
          v58 = *(void (**)(_BYTE *, uint64_t))(v56 + 8);
          v59 = v57;
          v50 = v71;
          v58(v59, v47);
          sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          v58(v54, v47);
          sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          if ((v79 & 1) != 0)
            goto LABEL_37;
LABEL_34:
          v35 = 0;
          return v35 & 1;
        }
      }
      else
      {
        sub_1BA6BF98C((uint64_t)v16, (uint64_t)v27);
        if (v45((uint64_t)v76, 1, v79) != 1)
        {
          v49 = v79;
          (*(void (**)(_BYTE *, void (*)(_BYTE *, uint64_t), uint64_t))(v78 + 32))(v75, v76, v79);
          sub_1BA66184C(&qword_1ED39C378, MEMORY[0x1E0DB4DE8]);
          v69 = sub_1BB872958();
          v76 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
          v76(v75, v49);
          sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          v76(v27, v49);
          sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
          v47 = v49;
          if ((v69 & 1) == 0)
            goto LABEL_34;
          goto LABEL_27;
        }
        sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
        (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v27, v79);
      }
      v48 = (uint64_t)v16;
LABEL_33:
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA6C1CE8);
      goto LABEL_34;
    }
  }
  return v35 & 1;
}

uint64_t sub_1BAF6E120(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return static FeedGroupConfig<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(void (**)(_BYTE *, uint64_t))(a3 + 32), *(_QWORD *)(a4 - 8));
}

uint64_t FeedGroupConfig.replacing(type:identifier:slots:paidVisibility:minNewsVersion:maxNewsVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:priority:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t *v60;
  void (*v61)(char *, uint64_t, uint64_t, double);
  void (*v62)(uint64_t *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125[9];

  v96 = a8;
  v109 = a7;
  v110 = a6;
  v106 = a5;
  v112 = a4;
  v120 = a1;
  v121 = a3;
  v104 = a9;
  v18 = *(_QWORD *)(a16 + 16);
  v118 = sub_1BB873A2C();
  v116 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v117 = (char *)&v94 - v19;
  v119 = v18;
  v115 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v20);
  v103 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v22);
  v95 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v123 = (uint64_t)&v94 - v25;
  MEMORY[0x1E0C80A78](v26);
  v108 = (uint64_t)&v94 - v27;
  MEMORY[0x1E0C80A78](v28);
  v122 = (uint64_t)&v94 - v29;
  v30 = *(_QWORD *)(a16 - 8);
  MEMORY[0x1E0C80A78](v31);
  v114 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v101 = (char *)&v94 - v34;
  MEMORY[0x1E0C80A78](v35);
  v113 = (uint64_t)&v94 - v36;
  MEMORY[0x1E0C80A78](v37);
  v111 = (char *)&v94 - v38;
  MEMORY[0x1E0C80A78](v39);
  v97 = (char *)&v94 - v40;
  MEMORY[0x1E0C80A78](v41);
  v94 = (char *)&v94 - v42;
  MEMORY[0x1E0C80A78](v43);
  v107 = (char *)&v94 - v44;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v94 - v46;
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v94 - v49;
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)&v94 - v52;
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)&v94 - v55;
  v58 = MEMORY[0x1E0C80A78](v57);
  v60 = (uint64_t *)((char *)&v94 - v59);
  v105 = *v110;
  LODWORD(v110) = *a14;
  v61 = *(void (**)(char *, uint64_t, uint64_t, double))(v30 + 16);
  v61((char *)&v94 - v59, v16, a16, v58);
  if (a2)
  {
    v102 = a2;
  }
  else
  {
    v120 = *v60;
    v102 = v60[1];
    swift_bridgeObjectRetain();
  }
  v62 = *(void (**)(uint64_t *, uint64_t))(v30 + 8);
  swift_bridgeObjectRetain();
  v62(v60, a16);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v56, v16, a16);
  if (v112)
  {
    v100 = v112;
  }
  else
  {
    v63 = *((_QWORD *)v56 + 3);
    v121 = *((_QWORD *)v56 + 2);
    v100 = v63;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v62((uint64_t *)v56, a16);
  v64 = *(_QWORD *)(v16 + 40);
  v99 = *(_QWORD *)(v16 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v53, v16, a16);
  v65 = v106;
  v66 = v106;
  if (v106 == 1)
    v66 = swift_bridgeObjectRetain();
  v112 = v66;
  v98 = v64;
  swift_bridgeObjectRetain();
  sub_1BA6E9BC8(v65);
  v62((uint64_t *)v53, a16);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v50, v16, a16);
  v67 = v105;
  if (v105 == 4)
    v67 = v50[56];
  v62((uint64_t *)v50, a16);
  v125[0] = v67;
  v68 = v108;
  sub_1BA6BF98C(v109, v108);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v47, v16, a16);
  v69 = sub_1BB86EB84();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v71(v68, 1, v69) == 1)
  {
    sub_1BA6BF98C((uint64_t)&v47[*(int *)(a16 + 60)], v122);
    v62((uint64_t *)v47, a16);
    sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  else
  {
    v62((uint64_t *)v47, a16);
    v72 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v122, v68, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v72, 0, 1, v69);
  }
  v73 = v95;
  sub_1BA6BF98C(v96, v95);
  v74 = v107;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v107, v16, a16);
  if (v71(v73, 1, v69) == 1)
  {
    sub_1BA6BF98C((uint64_t)&v74[*(int *)(a16 + 64)], v123);
    v62((uint64_t *)v74, a16);
    sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  else
  {
    v62((uint64_t *)v74, a16);
    v75 = v123;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v123, v73, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v75, 0, 1, v69);
  }
  v76 = v101;
  v77 = v94;
  v78 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v94, v16, a16);
  if (a10)
  {
    v109 = a10;
  }
  else
  {
    v109 = *(_QWORD *)&v77[*(int *)(a16 + 68)];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v62((uint64_t *)v77, a16);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v78, v16, a16);
  if (a11)
  {
    v108 = a11;
  }
  else
  {
    v108 = *(_QWORD *)&v78[*(int *)(a16 + 72)];
    swift_bridgeObjectRetain();
  }
  v79 = v113;
  swift_bridgeObjectRetain();
  v62((uint64_t *)v78, a16);
  v80 = v111;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v111, v16, a16);
  if (a12)
  {
    v113 = a12;
  }
  else
  {
    v113 = *(_QWORD *)&v80[*(int *)(a16 + 76)];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v62((uint64_t *)v80, a16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v79, v16, a16);
  if (a13)
  {
    v81 = a13;
  }
  else
  {
    v81 = *(_QWORD *)(v79 + *(int *)(a16 + 80));
    swift_bridgeObjectRetain();
  }
  v82 = v117;
  swift_bridgeObjectRetain();
  v62((uint64_t *)v79, a16);
  ((void (*)(char *, uint64_t, uint64_t))v61)(v76, v16, a16);
  if ((_DWORD)v110 == 2)
    v83 = v76[*(int *)(a16 + 84)];
  else
    v83 = v110 & 1;
  v84 = v109;
  v62((uint64_t *)v76, a16);
  v124 = v83;
  v85 = v116;
  v86 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v82, a15, v118);
  v87 = v114;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v114, v16, a16);
  v88 = v115;
  v89 = v119;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v82, 1, v119) == 1)
  {
    v90 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
    v91 = (uint64_t)v103;
    v90(v103, &v87[*(int *)(a16 + 88)], v89);
    v62((uint64_t *)v87, a16);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v86);
  }
  else
  {
    v62((uint64_t *)v87, a16);
    v92 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
    v91 = (uint64_t)v103;
    v92(v103, v82, v89);
  }
  return FeedGroupConfig.init(type:identifier:kindIdentifier:slots:paidVisibility:minNewsVersion:maxNewsVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:priority:data:)(v120, v102, v121, v100, v99, v98, v112, v125, v104, v122, v123, v84, v108, v113, v81, &v124, v91, v89, *(_QWORD *)(a16 + 24),
           *(_QWORD *)(a16 + 32));
}

unint64_t sub_1BAF6E998()
{
  unint64_t result;

  result = qword_1ED39C458[0];
  if (!qword_1ED39C458[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupSlots, &type metadata for FeedGroupSlots);
    atomic_store(result, qword_1ED39C458);
  }
  return result;
}

unint64_t sub_1BAF6E9DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39C388;
  if (!qword_1ED39C388)
  {
    sub_1BA6BF9E8(255);
    v2 = v1;
    v3 = sub_1BA66184C(&qword_1ED39C370, MEMORY[0x1E0DB4DD8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39C388);
  }
  return result;
}

unint64_t sub_1BAF6EA4C()
{
  unint64_t result;

  result = qword_1ED39ACF8;
  if (!qword_1ED39ACF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterPriority, &type metadata for FeedGroupEmitterPriority);
    atomic_store(result, (unint64_t *)&qword_1ED39ACF8);
  }
  return result;
}

uint64_t dispatch thunk of FeedGroupConfigType.slots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedGroupConfigType.expandable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedGroupConfigType.dataKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedGroupConfigType.minAppVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedGroupConfigType.maxAppVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupConfigType.allowedSegmentSetIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupConfigType.blockedSegmentSetIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeedGroupConfigType.allowedPlatforms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeedGroupConfigType.blockedPlatforms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeedGroupConfigType.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t *sub_1BAF6EAE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  const void *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  uint64_t v44;
  size_t v45;
  size_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;

  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v7 + 64) + 1;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v12
       + 9
       + ((((((((v9 + 7 + ((v9 + v8 + ((v8 + 57) & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + *(_QWORD *)(v11 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    v16 = v15 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16));
    swift_retain();
  }
  else
  {
    v17 = v6;
    v45 = v9 + v8;
    v46 = v9 + 7;
    v47 = v12 + 9;
    v48 = *(_QWORD *)(v10 - 8);
    v49 = v10;
    v50 = a1;
    v18 = ~v8;
    v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    v20 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v44 = v17;
    v20[1] = v21[1];
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v22[1] = v23[1];
    v24 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
    v26 = (void *)((v24 + v8 + 9) & ~v8);
    v27 = (const void *)((v25 + v8 + 9) & ~v8);
    v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v27, 1, v44))
    {
      memcpy(v26, v27, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v26, v27, v44);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v44);
    }
    v29 = ~v12;
    v30 = (void *)(((unint64_t)v26 + v45) & v18);
    v31 = (const void *)(((unint64_t)v27 + v45) & v18);
    if (v28(v31, 1, v44))
    {
      memcpy(v30, v31, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v30, v31, v44);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v44);
    }
    v32 = (_QWORD *)(((unint64_t)v30 + v46) & 0xFFFFFFFFFFFFF8);
    v33 = (_QWORD *)(((unint64_t)v31 + v46) & 0xFFFFFFFFFFFFFFF8);
    *v32 = *v33;
    v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v34 = *v35;
    v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8);
    v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v36 = *v37;
    v38 = ((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
    v40 = (v47 + v38) & v29;
    v41 = (v47 + v39) & v29;
    v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v48 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v40, v41, v49);
    return v50;
  }
  return (uint64_t *)v16;
}

_QWORD *sub_1BAF6EE08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(unint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;
  size_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v37;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a1;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 + 9 + v9;
  v15 = ~v13;
  v16 = v13 + 9 + v10;
  v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48);
  v18 = v17(v14 & ~v13, 1, v11);
  v19 = v17(v16 & ~v13, 1, v11);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))(v14 & ~v13, v16 & ~v13, v11);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14 & ~v13, 0, 1, v11);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 24))(v14 & ~v13, v16 & ~v13, v11);
      goto LABEL_10;
    }
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v14 & ~v13, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  memcpy((void *)(v14 & ~v13), (const void *)(v16 & ~v13), v20);
LABEL_10:
  if (*(_DWORD *)(v12 + 84))
    v21 = *(_QWORD *)(v12 + 64);
  else
    v21 = *(_QWORD *)(v12 + 64) + 1;
  v22 = (char *)(((v14 | v13) + v21) & v15);
  v23 = (char *)(((v16 | v13) + v21) & v15);
  v24 = v17((unint64_t)v22, 1, v11);
  v25 = v17((unint64_t)v23, 1, v11);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v22, v23, v11);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    memcpy(v22, v23, v21);
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
LABEL_19:
  v26 = (unint64_t)&v22[v21 + 7];
  v27 = (unint64_t)&v23[v21 + 7];
  v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8);
  v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 &= 0xFFFFFFFFFFFFFFF8;
  v28 &= 0xFFFFFFFFFFFFF8uLL;
  *(_QWORD *)v29 = *(_QWORD *)v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = (_QWORD *)((v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)((v28 + 15) & 0xFFFFFFFFFFFFF8);
  *v30 = *v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  v34 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 24))((*(unsigned __int8 *)(v34 + 80) + 9 + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(unsigned __int8 *)(v34 + 80) + 9 + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return v37;
}

_OWORD *sub_1BAF6F160(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v3;
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int (*v31)(unint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v3 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_OWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v11 + 9 + v7;
  v13 = ~v11;
  v14 = v11 + 9 + v8;
  v31 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v31(v14 & ~v11, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = v16 + 1;
    memcpy((void *)(v12 & ~v11), (const void *)(v14 & ~v11), v17);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v12 & ~v11, v14 & ~v11, v9);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12 & ~v11, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  v19 = (void *)(((v12 | v11) + v18) & v13);
  v20 = (const void *)(((v14 | v11) + v18) & v13);
  if (v31((unint64_t)v20, 1, v9))
  {
    memcpy(v19, v20, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v21 = (_QWORD *)(((unint64_t)v20 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v19 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v21;
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v23;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v25;
  v27 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v29 + 32))((*(unsigned __int8 *)(v29 + 80) + 9 + v27) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), (*(unsigned __int8 *)(v29 + 80) + 9 + v28) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  return a1;
}

_QWORD *sub_1BAF6F388(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(unint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  size_t v21;
  size_t v22;
  char *v23;
  const void *v24;
  int v25;
  int v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  v38 = a1;
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = sub_1BB86EB84();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 + 9 + v10;
  v16 = ~v14;
  v17 = v14 + 9 + v11;
  v18 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48);
  v19 = v18(v15 & ~v14, 1, v12);
  v20 = v18(v17 & ~v14, 1, v12);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(v15 & ~v14, v17 & ~v14, v12);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15 & ~v14, 0, 1, v12);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(v15 & ~v14, v17 & ~v14, v12);
      goto LABEL_10;
    }
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15 & ~v14, v12);
  }
  if (*(_DWORD *)(v13 + 84))
    v21 = *(_QWORD *)(v13 + 64);
  else
    v21 = *(_QWORD *)(v13 + 64) + 1;
  memcpy((void *)(v15 & ~v14), (const void *)(v17 & ~v14), v21);
LABEL_10:
  if (*(_DWORD *)(v13 + 84))
    v22 = *(_QWORD *)(v13 + 64);
  else
    v22 = *(_QWORD *)(v13 + 64) + 1;
  v23 = (char *)(((v15 | v14) + v22) & v16);
  v24 = (const void *)(((v17 | v14) + v22) & v16);
  v25 = v18((unint64_t)v23, 1, v12);
  v26 = v18((unint64_t)v24, 1, v12);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, const void *, uint64_t))(v13 + 40))(v23, v24, v12);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    memcpy(v23, v24, v22);
    goto LABEL_19;
  }
  (*(void (**)(char *, const void *, uint64_t))(v13 + 32))(v23, v24, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
LABEL_19:
  v27 = (unint64_t)&v23[v22 + 7];
  v28 = (_QWORD *)(((unint64_t)v24 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8) = *v28;
  v29 = (v27 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v29 &= 0xFFFFFFFFFFFFFFF8;
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)v29 = *v30;
  swift_bridgeObjectRelease();
  v31 = (_QWORD *)((v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8);
  *v31 = *v32;
  swift_bridgeObjectRelease();
  v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  v35 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v35 + 40))((*(unsigned __int8 *)(v35 + 80) + 9 + v33) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), (*(unsigned __int8 *)(v35 + 80) + 9 + v34) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  return v38;
}

uint64_t sub_1BAF6F698(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;

  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (v9 <= *(_DWORD *)(v10 + 84))
    v11 = *(_DWORD *)(v10 + 84);
  else
    v11 = v9;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v13;
  if (!a2)
    return 0;
  v14 = v6;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = v13 + v15;
  v17 = v13 + 7;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = v18 + 9;
  if (a2 <= v12)
    goto LABEL_31;
  v20 = ((v19
        + ((((((((v17 + ((v16 + ((v15 + 57) & ~v15)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v18)
      + *(_QWORD *)(v10 + 64);
  v21 = 8 * v20;
  if (v20 > 3)
    goto LABEL_15;
  v23 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    v22 = *(_DWORD *)(a1 + v20);
    if (v22)
      goto LABEL_22;
LABEL_31:
    if ((v11 & 0x80000000) == 0)
    {
      v26 = *(_QWORD *)(a1 + 8);
      if (v26 >= 0xFFFFFFFF)
        LODWORD(v26) = -1;
      return (v26 + 1);
    }
    v27 = ~v15;
    v28 = (((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v15 + 9) & ~v15;
    if (v9 != v12)
      return (*(uint64_t (**)(unint64_t))(v10 + 48))((v19
                                                                     + ((((((((v17 + ((v16 + v28) & v27)) & 0xFFFFFFFFFFFFFFF8)
                                                                           + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                         + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v18);
    if (v8 >= 2)
    {
      v29 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v7 + 48))(v28, *(unsigned int *)(v7 + 84), v14);
      if (v29 >= 2)
        return v29 - 1;
      else
        return 0;
    }
    return 0;
  }
  if (v23 > 0xFF)
  {
    v22 = *(unsigned __int16 *)(a1 + v20);
    if (*(_WORD *)(a1 + v20))
      goto LABEL_22;
    goto LABEL_31;
  }
  if (v23 < 2)
    goto LABEL_31;
LABEL_15:
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_31;
LABEL_22:
  v24 = (v22 - 1) << v21;
  if (v20 > 3)
    v24 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v25 = ((v19
            + ((((((((v17 + ((v16 + ((v15 + 57) & ~(_DWORD)v15)) & ~(_DWORD)v15)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
              + 15) & 0xFFFFFFF8)) & ~(_DWORD)v18)
          + *(_DWORD *)(v10 + 64);
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  return v12 + v24 + 1;
}

void sub_1BAF6F900(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v8 = 0u;
  v9 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  if (v10)
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v17 = ((*(unsigned __int8 *)(v12 + 80)
        + 9
        + ((((((((v16 + 7 + ((v16 + v15 + ((v15 + 57) & ~v15)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  if (a3 > v14)
  {
    if (v17 > 3)
    {
      v8 = 1u;
      if (v14 >= a2)
LABEL_29:
        __asm { BR              X7 }
LABEL_22:
      v19 = ~v14 + a2;
      if (v17 < 4)
      {
        if ((_DWORD)v17)
        {
          v20 = v19 & ~(-1 << (8 * v17));
          bzero(a1, v17);
          if ((_DWORD)v17 == 3)
          {
            *(_WORD *)a1 = v20;
            a1[2] = BYTE2(v20);
          }
          else if ((_DWORD)v17 == 2)
          {
            *(_WORD *)a1 = v20;
          }
          else
          {
            *a1 = v20;
          }
        }
      }
      else
      {
        bzero(a1, v17);
        *(_DWORD *)a1 = v19;
      }
      __asm { BR              X10 }
    }
    v18 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v18))
    {
      v8 = 4u;
      if (v14 >= a2)
        goto LABEL_29;
      goto LABEL_22;
    }
    if (v18 >= 0x100)
      v8 = 2;
    else
      v8 = v18 > 1;
  }
  if (v14 >= a2)
    goto LABEL_29;
  goto LABEL_22;
}

void sub_1BAF6FBC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1BAF6FBC8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

uint64_t sub_1BAF6FBEC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BAF6FC38 + 4 * byte_1BB8D878B[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BAF6FC6C + 4 * byte_1BB8D8786[v4]))();
}

uint64_t sub_1BAF6FC6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF6FC74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF6FC7CLL);
  return result;
}

uint64_t sub_1BAF6FC88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF6FC90);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BAF6FC94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF6FC9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAF6FCA8()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BAF6FCB8()
{
  return 12;
}

void AdFeedGroup.paidVisibility.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

double AdFeedGroup.rankMultiplier.getter()
{
  return 1.0;
}

unint64_t AdFeedGroup.personalizingScoreProfiles.getter()
{
  return sub_1BA662948(MEMORY[0x1E0DEE9D8]);
}

void AdFeedGroup.repooling.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

unint64_t sub_1BAF6FCEC()
{
  return sub_1BA662948(MEMORY[0x1E0DEE9D8]);
}

double sub_1BAF6FCF8()
{
  return 1.0;
}

uint64_t sub_1BAF6FD00()
{
  return 25665;
}

uint64_t AdFeedGroup.debugName.getter()
{
  return 25665;
}

uint64_t AdFeedGroup.debugTitle.getter()
{
  return 0;
}

unint64_t sub_1BAF6FD24(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAF6FD50();
  result = sub_1BAF6FD94();
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1BAF6FD50()
{
  unint64_t result;

  result = qword_1EF2B7298;
  if (!qword_1EF2B7298)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AdFeedGroup, &type metadata for AdFeedGroup);
    atomic_store(result, (unint64_t *)&qword_1EF2B7298);
  }
  return result;
}

unint64_t sub_1BAF6FD94()
{
  unint64_t result;

  result = qword_1EF2B72A0;
  if (!qword_1EF2B72A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AdFeedGroup, &type metadata for AdFeedGroup);
    atomic_store(result, (unint64_t *)&qword_1EF2B72A0);
  }
  return result;
}

uint64_t static FormatActivityItemsConfiguration.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if ((*a1 & 1) != 0)
  {
    if ((*a2 & 1) == 0)
      return 0;
  }
  else if ((*a2 & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BAF6FDFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF6FE20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF6FE20()
{
  unint64_t result;

  result = qword_1EF2B72A8;
  if (!qword_1EF2B72A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsConfiguration, &type metadata for FormatActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B72A8);
  }
  return result;
}

unint64_t sub_1BAF6FE64(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA821448();
  a1[2] = sub_1BAF6FE98();
  result = sub_1BAF6FEDC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF6FE98()
{
  unint64_t result;

  result = qword_1ED39EC80;
  if (!qword_1ED39EC80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsConfiguration, &type metadata for FormatActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED39EC80);
  }
  return result;
}

unint64_t sub_1BAF6FEDC()
{
  unint64_t result;

  result = qword_1EF2B72B0;
  if (!qword_1EF2B72B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsConfiguration, &type metadata for FormatActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B72B0);
  }
  return result;
}

uint64_t sub_1BAF6FF20@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatActivityItemsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BAF6FF34(_QWORD *a1)
{
  return FormatActivityItemsConfiguration.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatActivityItemsConfiguration()
{
  return &type metadata for FormatActivityItemsConfiguration;
}

uint64_t LayeredMediaLayerProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t LayeredMediaLayerProcessor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t LayeredMediaLayerProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LayeredMediaLayerProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed26LayeredMediaLayerProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  _BYTE v13[40];

  v2 = sub_1BB87387C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA4C010C(a1, (uint64_t)v13);
  sub_1BA54B1AC();
  type metadata accessor for LayeredMediaLayerProcessorRequest();
  if (!swift_dynamicCast())
    return 0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 + 64), *(_QWORD *)(v12 + 88));
  result = sub_1BB86FA78();
  if (v7)
  {
    v8 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
    v9 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v8, sel_initWithContentsOfFile_, v9);

    if (v10)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DBCED8], v2);
      v11 = v10;
      v10 = (id)sub_1BB873870();
      swift_release();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      swift_release();
    }
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t method lookup function for LayeredMediaLayerProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LayeredMediaLayerProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1BAF70154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v2);
  sub_1BAF70DD0(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1BAF70224 + 4 * byte_1BB8D8CA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF70224()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 25);
  v8 = *(unsigned __int8 *)(v2 + 24);
  *(_QWORD *)(v3 - 112) = v4;
  *(_QWORD *)(v3 - 104) = v5;
  *(_QWORD *)(v3 - 96) = v6;
  *(_BYTE *)(v3 - 88) = v8;
  *(_BYTE *)(v3 - 87) = v7;
  sub_1BAF709B8(v4, v5, v6, v8, v7, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  v10 = v9;
  sub_1BAF709B8(v4, v5, v6, v8, v7, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = sub_1BAF709B8(v4, v5, v6, v8, v7, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  if (!v0)
    *v1 = v10;
  return result;
}

void _s8NewsFeed20FormatItemNodeActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  _BYTE v13[80];

  v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1BAF70E58();
  MEMORY[0x1E0C80A78](v8);
  v11 = &v13[*(int *)(v10 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAF70DD0(a1, (uint64_t)&v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1BAF70DD0(a2, (uint64_t)v11);
  v12 = (char *)sub_1BAF704C4 + 4 * byte_1BB8D8CA8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF704C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  char v8;
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  sub_1BAF70DD0(v0, v2);
  v5 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(unsigned __int8 *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 25);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BAF709B8(v5, v4, v6, v7, v8, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    v9 = 0;
    v10 = (uint64_t (*)(_QWORD))sub_1BAF70E58;
  }
  else
  {
    v12 = *(_QWORD *)v1;
    v13 = *(_QWORD *)(v1 + 8);
    v14 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v3 - 160) = v14;
    v15 = *(unsigned __int8 *)(v1 + 25);
    *(_DWORD *)(v3 - 148) = v15;
    v16 = *(unsigned __int8 *)(v1 + 24);
    *(_QWORD *)(v3 - 112) = v5;
    *(_QWORD *)(v3 - 104) = v4;
    *(_QWORD *)(v3 - 96) = v6;
    *(_BYTE *)(v3 - 88) = v7;
    *(_BYTE *)(v3 - 87) = v8;
    *(_QWORD *)(v3 - 144) = v12;
    *(_QWORD *)(v3 - 136) = v13;
    *(_QWORD *)(v3 - 128) = v14;
    *(_BYTE *)(v3 - 120) = v16;
    *(_BYTE *)(v3 - 119) = v15;
    v9 = static FormatCommandBinding.== infix(_:_:)(v3 - 112, v3 - 144);
    sub_1BAF709B8(v12, v13, *(_QWORD *)(v3 - 160), v16, *(_DWORD *)(v3 - 148), (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    sub_1BAF709B8(v5, v4, v6, v7, v8, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    v10 = (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction;
  }
  sub_1BA4A2E80(v0, v10);
  return v9 & 1;
}

uint64_t sub_1BAF70718(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF707B0(&qword_1EF2B72B8, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF7074C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF707B0(&qword_1ED3C8EF8, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
  a1[2] = sub_1BAF707B0(&qword_1ED3A6838, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
  result = sub_1BAF707B0(&qword_1EF2B72C0, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF707B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatItemNodeAction();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatItemNodeAction(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 2)
      {
        v16 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v16;
        a1[2] = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v14 == 1)
        {
          v15 = *((_QWORD *)a2 + 1);
          *a1 = *(_QWORD *)a2;
          a1[1] = v15;
          a1[2] = *((_QWORD *)a2 + 2);
          swift_bridgeObjectRetain();
        }
        else
        {
          v17 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
          v18 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(_QWORD *)&a2[*(int *)(v18 + 20)];
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = *(_QWORD *)a2;
      v9 = *((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
      v11 = a2[25];
      v12 = a2[24];
      sub_1BAF709B8(v8, v9, v10, v12, v11, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
      *a1 = v8;
      a1[1] = v9;
      a1[2] = v10;
      *((_BYTE *)a1 + 24) = v12;
      *((_BYTE *)a1 + 25) = v11;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1BAF709B8(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *assignWithCopy for FormatItemNodeAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v12 == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v13 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
          v14 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = *a2;
      v8 = a2[1];
      v9 = a2[2];
      v10 = *((_BYTE *)a2 + 25);
      v11 = *((unsigned __int8 *)a2 + 24);
      sub_1BAF709B8(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
      *a1 = v7;
      a1[1] = v8;
      a1[2] = v9;
      *((_BYTE *)a1 + 24) = v11;
      *((_BYTE *)a1 + 25) = v10;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for FormatItemNodeAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for FormatCommandOpenURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatItemNodeAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for FormatCommandOpenURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v7 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BAF70DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatItemNodeAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF70E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCommandOpenURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAF70E58()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B72C8[0])
  {
    type metadata accessor for FormatItemNodeAction();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1EF2B72C8);
  }
}

void sub_1BAF70EB8()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAF70EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = swift_projectBox();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
}

uint64_t FormatMerge.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unsigned __int8 v38;

  v35 = a4;
  v32 = a5;
  v33 = a3;
  v6 = a1;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v34 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v29 - v12;
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1BA6B8518();
  v14 = v36;
  sub_1BB87468C();
  if (!v14)
  {
    v29[2] = v9;
    v30 = 0;
    v36 = v11;
    v29[1] = v7;
    v15 = v6[3];
    v31 = v6;
    __swift_project_boxed_opaque_existential_1(v6, v15);
    v16 = sub_1BB872874();
    LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
    swift_bridgeObjectRelease();
    v18 = v34;
    v17 = v35;
    if ((v15 & 1) != 0)
    {
      v19 = sub_1BB8740EC();
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
      {
        v21 = (unint64_t *)(v19 + 40);
        while (1)
        {
          v22 = *v21;
          if (*v21 >= 4)
            break;
          v21 += 2;
          if (!--v20)
            goto LABEL_7;
        }
        v26 = *(v21 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1BA98D1F0();
        swift_allocError();
        *(_QWORD *)v27 = v26;
        *(_QWORD *)(v27 + 8) = v22;
        *(_QWORD *)(v27 + 16) = &unk_1E726FA88;
        *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA98D234(v26, v22);
        goto LABEL_11;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    v23 = type metadata accessor for FormatMerge.CodingType(0, a2, v33, v17);
    v37 = 0uLL;
    MEMORY[0x1BCCE5B24](&unk_1BB8D90E8, v23);
    v24 = v30;
    sub_1BB8740D4();
    if (!v24)
    {
      v25 = v38;
      v37 = xmmword_1BB87FC90;
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v18);
      __asm { BR              X9 }
    }
LABEL_11:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v18);
    v6 = v31;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

void sub_1BAF71228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v5, v0, v2);
  **(_QWORD **)(v3 - 136) = v4 | 4;
  JUMPOUT(0x1BAF71200);
}

void sub_1BAF71250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v5, v0, v2);
  **(_QWORD **)(v3 - 136) = v4 | 0x1000000000000000;
  JUMPOUT(0x1BAF71200);
}

void sub_1BAF71278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v5, v0, v2);
  **(_QWORD **)(v3 - 136) = v4 | 0x1000000000000004;
  JUMPOUT(0x1BAF71200);
}

void FormatMerge.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[24];
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v52[21] = a2;
  v53 = *(_QWORD *)(a2 + 16);
  v52[23] = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](a1);
  v52[20] = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52[19] = (char *)v52 - v6;
  MEMORY[0x1E0C80A78](v7);
  v52[18] = (char *)v52 - v8;
  MEMORY[0x1E0C80A78](v9);
  v52[17] = (char *)v52 - v10;
  MEMORY[0x1E0C80A78](v11);
  v52[16] = (char *)v52 - v12;
  MEMORY[0x1E0C80A78](v13);
  v52[15] = (char *)v52 - v14;
  MEMORY[0x1E0C80A78](v15);
  v52[14] = (char *)v52 - v16;
  MEMORY[0x1E0C80A78](v17);
  v52[13] = (char *)v52 - v18;
  MEMORY[0x1E0C80A78](v19);
  v52[12] = (char *)v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v52[11] = (char *)v52 - v22;
  MEMORY[0x1E0C80A78](v23);
  v52[10] = (char *)v52 - v24;
  MEMORY[0x1E0C80A78](v25);
  v52[9] = (char *)v52 - v26;
  MEMORY[0x1E0C80A78](v27);
  v52[8] = (char *)v52 - v28;
  MEMORY[0x1E0C80A78](v29);
  v52[7] = (char *)v52 - v30;
  MEMORY[0x1E0C80A78](v31);
  v52[6] = (char *)v52 - v32;
  MEMORY[0x1E0C80A78](v33);
  v52[5] = (char *)v52 - v34;
  MEMORY[0x1E0C80A78](v35);
  v52[4] = (char *)v52 - v36;
  MEMORY[0x1E0C80A78](v37);
  v52[3] = (char *)v52 - v38;
  MEMORY[0x1E0C80A78](v39);
  v52[2] = (char *)v52 - v40;
  MEMORY[0x1E0C80A78](v41);
  v52[1] = (char *)v52 - v42;
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  MEMORY[0x1E0C80A78](v46);
  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v48 = *(_QWORD *)(v47 - 8);
  v55 = v47;
  v56 = v48;
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)v52 - v49;
  v51 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v54 = v50;
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BAF719F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = swift_projectBox();
  v4 = *(_QWORD *)(v1 - 152);
  v3 = *(_QWORD *)(v1 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v2, v3);
  *(_BYTE *)(v1 - 65) = 0;
  *(_QWORD *)(v1 - 112) = 0;
  *(_QWORD *)(v1 - 104) = 0;
  v5 = type metadata accessor for FormatMerge.CodingType(0, v3, *(_QWORD *)(*(_QWORD *)(v1 - 168) + 24), *(_QWORD *)(*(_QWORD *)(v1 - 168) + 32));
  MEMORY[0x1BCCE5B24](&unk_1BB8D90C0, v5);
  v6 = *(_QWORD *)(v1 - 128);
  v7 = *(_QWORD *)(v1 - 136);
  v8 = *(_QWORD *)(v1 - 160);
  sub_1BB8741AC();
  if (!v8)
  {
    *(_OWORD *)(v1 - 112) = xmmword_1BB87FC90;
    sub_1BB8741AC();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 120) + 8))(v7, v6);
}

uint64_t sub_1BAF72254()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18)
    return 24;
  else
    return v0;
}

uint64_t sub_1BAF722A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF722D8 + 4 * byte_1BB8D8E50[a1]))(0x6E69746C697562, 0xE700000000000000);
}

uint64_t sub_1BAF722D8()
{
  return 0x656C626169726176;
}

uint64_t sub_1BAF722F0()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BAF72304()
{
  return 0x49746E65746E6F63;
}

unint64_t sub_1BAF72324()
{
  return 0xD000000000000014;
}

uint64_t sub_1BAF72344()
{
  return 0x53746E65746E6F63;
}

uint64_t sub_1BAF72364()
{
  return 0x47746E65746E6F63;
}

uint64_t sub_1BAF72384()
{
  return 0x746E65746E6F63;
}

uint64_t sub_1BAF72398()
{
  return 0x6567616B636170;
}

uint64_t sub_1BAF723AC()
{
  return 0x656C797473;
}

uint64_t sub_1BAF723C0()
{
  return 0x65646F4E6D657469;
}

uint64_t sub_1BAF724C0()
{
  return 0x646F4E6B636F6C62;
}

uint64_t sub_1BAF724DC()
{
  return 0x6B636F6C62;
}

uint64_t sub_1BAF724F0()
{
  return 0x7261696C69787561;
}

uint64_t sub_1BAF72514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D9020, a3);
  return sub_1BB874440();
}

uint64_t sub_1BAF72568(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D9020, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BAF725B4()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D9020);
  return sub_1BB872D54();
}

uint64_t sub_1BAF72604()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D9020);
  return sub_1BB872D48();
}

uint64_t sub_1BAF72654@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF72254();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF7268C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAF722A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAF726BC()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D9020);
  return sub_1BB872D60();
}

uint64_t sub_1BAF72720()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D9020);
  return sub_1BB872D0C();
}

uint64_t sub_1BAF72774@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FormatMerge.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1BAF72794(_QWORD *a1, uint64_t a2)
{
  FormatMerge.encode(to:)(a1, a2);
}

uint64_t FormatMerge.order.getter()
{
  _QWORD *v0;
  unsigned int v1;

  v1 = (*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  if (v1 > 0x12)
    return 10;
  else
    return qword_1BB8D9110[v1];
}

uint64_t FormatMerge.reverseOrder.getter()
{
  return 10 - FormatMerge.order.getter();
}

void static FormatMerge<>.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v82[33];

  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v82[32] = (char *)v82 - v7;
  MEMORY[0x1E0C80A78](v8);
  v82[31] = (char *)v82 - v9;
  MEMORY[0x1E0C80A78](v10);
  v82[30] = (char *)v82 - v11;
  MEMORY[0x1E0C80A78](v12);
  v82[29] = (char *)v82 - v13;
  MEMORY[0x1E0C80A78](v14);
  v82[28] = (char *)v82 - v15;
  MEMORY[0x1E0C80A78](v16);
  v82[27] = (char *)v82 - v17;
  MEMORY[0x1E0C80A78](v18);
  v82[26] = (char *)v82 - v19;
  MEMORY[0x1E0C80A78](v20);
  v82[25] = (char *)v82 - v21;
  MEMORY[0x1E0C80A78](v22);
  v82[24] = (char *)v82 - v23;
  MEMORY[0x1E0C80A78](v24);
  v82[23] = (char *)v82 - v25;
  MEMORY[0x1E0C80A78](v26);
  v82[22] = (char *)v82 - v27;
  MEMORY[0x1E0C80A78](v28);
  v82[21] = (char *)v82 - v29;
  MEMORY[0x1E0C80A78](v30);
  v82[20] = (char *)v82 - v31;
  MEMORY[0x1E0C80A78](v32);
  v82[19] = (char *)v82 - v33;
  MEMORY[0x1E0C80A78](v34);
  v82[18] = (char *)v82 - v35;
  MEMORY[0x1E0C80A78](v36);
  v82[17] = (char *)v82 - v37;
  MEMORY[0x1E0C80A78](v38);
  v82[16] = (char *)v82 - v39;
  MEMORY[0x1E0C80A78](v40);
  v82[15] = (char *)v82 - v41;
  MEMORY[0x1E0C80A78](v42);
  v82[14] = (char *)v82 - v43;
  MEMORY[0x1E0C80A78](v44);
  v82[13] = (char *)v82 - v45;
  MEMORY[0x1E0C80A78](v46);
  v82[12] = (char *)v82 - v47;
  MEMORY[0x1E0C80A78](v48);
  v82[11] = (char *)v82 - v49;
  MEMORY[0x1E0C80A78](v50);
  v82[10] = (char *)v82 - v51;
  MEMORY[0x1E0C80A78](v52);
  v82[9] = (char *)v82 - v53;
  MEMORY[0x1E0C80A78](v54);
  v82[8] = (char *)v82 - v55;
  MEMORY[0x1E0C80A78](v56);
  v82[7] = (char *)v82 - v57;
  MEMORY[0x1E0C80A78](v58);
  v82[6] = (char *)v82 - v59;
  MEMORY[0x1E0C80A78](v60);
  v82[5] = (char *)v82 - v61;
  MEMORY[0x1E0C80A78](v62);
  v82[4] = (char *)v82 - v63;
  MEMORY[0x1E0C80A78](v64);
  v82[3] = (char *)v82 - v65;
  MEMORY[0x1E0C80A78](v66);
  v82[2] = (char *)v82 - v67;
  MEMORY[0x1E0C80A78](v68);
  v82[1] = (char *)v82 - v69;
  MEMORY[0x1E0C80A78](v70);
  v82[0] = (char *)v82 - v71;
  MEMORY[0x1E0C80A78](v72);
  MEMORY[0x1E0C80A78](v73);
  MEMORY[0x1E0C80A78](v74);
  MEMORY[0x1E0C80A78](v75);
  MEMORY[0x1E0C80A78](v76);
  MEMORY[0x1E0C80A78](v77);
  MEMORY[0x1E0C80A78](v78);
  MEMORY[0x1E0C80A78](v79);
  MEMORY[0x1E0C80A78](v80);
  __asm { BR              X10 }
}

uint64_t sub_1BAF72E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  char v12;
  void (*v13)(uint64_t, uint64_t);

  if ((v3 >> 59) & 0x1E | (v3 >> 2) & 1)
  {
    v12 = 0;
  }
  else
  {
    v8 = v4;
    v9 = swift_projectBox();
    v10 = swift_projectBox();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v11(v6, v9, a3);
    v11(v5, v10, a3);
    swift_retain();
    swift_retain();
    v12 = sub_1BB872958();
    v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v13(v5, a3);
    v13(v6, a3);
    swift_release();
    swift_release();
  }
  return v12 & 1;
}

void sub_1BAF7399C(uint64_t a1)
{
  static FormatMerge<>.== infix(_:_:)(a1);
}

uint64_t FormatMerge<>.identifier.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *v1;
  sub_1BAF70EB8();
  v6 = sub_1BB86DEE8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_1BAF73A50(uint64_t a1)
{
  return FormatMerge<>.identifier.getter(a1);
}

uint64_t type metadata accessor for FormatMerge.CodingType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatMerge.CodingType);
}

_QWORD *assignWithCopy for FormatLayoutValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BAF73AAC(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x69 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 105);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x68)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BAF73B08(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x68)
  {
    *(_QWORD *)result = a2 - 105;
    if (a3 >= 0x69)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x69)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BAF73B58(_QWORD *a1)
{
  return (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
}

unint64_t *sub_1BAF73B6C(unint64_t *result, uint64_t a2)
{
  *result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatContentSizeCategoryValue(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BAF73C1C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1BAF73C68 + 4 * byte_1BB8D8E9D[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1BAF73C9C + 4 * byte_1BB8D8E98[v4]))();
}

uint64_t sub_1BAF73C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF73CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF73CACLL);
  return result;
}

uint64_t sub_1BAF73CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF73CC0);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1BAF73CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF73CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAF73CD8()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BAF73CE8()
{
  return 0x614D726574736F72;
}

uint64_t sub_1BAF73D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x614D726574736F72 && a2 == 0xE900000000000070)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAF73DA4()
{
  sub_1BAF73F00();
  return sub_1BB874710();
}

uint64_t sub_1BAF73DCC()
{
  sub_1BAF73F00();
  return sub_1BB87471C();
}

uint64_t SportsEventRoster.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BAF74160(0, &qword_1EF2B7350, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF73F00();
  sub_1BB8746C8();
  v10[1] = v8;
  sub_1BAF73F44();
  sub_1BAF73FA8();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAF73F00()
{
  unint64_t result;

  result = qword_1EF2B7358;
  if (!qword_1EF2B7358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D92E8, &type metadata for SportsEventRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7358);
  }
  return result;
}

void sub_1BAF73F44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC38)
  {
    type metadata accessor for SportsRoster();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC38);
  }
}

unint64_t sub_1BAF73FA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED3AAC40;
  if (!qword_1ED3AAC40)
  {
    sub_1BAF73F44();
    v2 = v1;
    v3 = sub_1BAF74234(&qword_1ED3A56D0, (uint64_t)&protocol conformance descriptor for SportsRoster);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED3AAC40);
  }
  return result;
}

uint64_t SportsEventRoster.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1BAF74160(0, &qword_1EF2B7360, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF73F00();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BAF73F44();
    sub_1BAF741BC();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAF74160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF73F00();
    v7 = a3(a1, &type metadata for SportsEventRoster.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAF741BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED3AAC50;
  if (!qword_1ED3AAC50)
  {
    sub_1BAF73F44();
    v2 = v1;
    v3 = sub_1BAF74234(&qword_1ED3A56D8, (uint64_t)&protocol conformance descriptor for SportsRoster);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED3AAC50);
  }
  return result;
}

uint64_t sub_1BAF74234(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SportsRoster();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAF74274@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsEventRoster.init(from:)(a1, a2);
}

uint64_t sub_1BAF74288(_QWORD *a1)
{
  return SportsEventRoster.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEventRoster()
{
  return &type metadata for SportsEventRoster;
}

uint64_t storeEnumTagSinglePayload for SportsEventRoster.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF742EC + 4 * byte_1BB8D91B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF7430C + 4 * byte_1BB8D91B5[v4]))();
}

_BYTE *sub_1BAF742EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF7430C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF74314(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF7431C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF74324(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF7432C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventRoster.CodingKeys()
{
  return &type metadata for SportsEventRoster.CodingKeys;
}

unint64_t sub_1BAF7434C()
{
  unint64_t result;

  result = qword_1EF2B7368;
  if (!qword_1EF2B7368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D92C0, &type metadata for SportsEventRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7368);
  }
  return result;
}

unint64_t sub_1BAF74394()
{
  unint64_t result;

  result = qword_1EF2B7370;
  if (!qword_1EF2B7370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9230, &type metadata for SportsEventRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7370);
  }
  return result;
}

unint64_t sub_1BAF743DC()
{
  unint64_t result;

  result = qword_1EF2B7378;
  if (!qword_1EF2B7378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9258, &type metadata for SportsEventRoster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7378);
  }
  return result;
}

void *ShareAttributionViewItem.shareAttributionView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t ShareAttributionViewItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShareAttributionViewItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*ShareAttributionViewItem.reuseIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id ShareAttributionViewItem.onReuse.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

Swift::Void __swiftcall ShareAttributionViewItem.prepareForReuse()()
{
  MEMORY[0x1BCCE1C6C]();

}

uint64_t ShareAttributionViewItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ShareAttributionViewItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BAF745AC()
{
  MEMORY[0x1BCCE1C6C]();

}

uint64_t sub_1BAF745D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BAF74620(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BAF74674())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BAF746B4()
{
  sub_1BAF7516C(&qword_1EF2B7398, type metadata accessor for ShareAttributionViewItem, (uint64_t)&protocol conformance descriptor for ShareAttributionViewItem);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t ShareAttributionViewReuseFactory.set(item:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v12 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    sub_1BAF52AB4(a1, (uint64_t)v8);
    v15 = type metadata accessor for SharedItem();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB4AA394((uint64_t)v8, a2, a3);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ShareAttributionViewReuseFactory.resetItem(for:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB8726B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v9 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BAA499D8(countAndFlagsBits, (uint64_t)object, (uint64_t)v5);
    swift_endAccess();
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
  }
  else
  {
    __break(1u);
  }
}

uint64_t ShareAttributionViewReuseFactory.create(for:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  Class v29;
  id v30;
  uint64_t result;
  uint64_t v32;

  v3 = v2;
  v32 = a1;
  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharedItem();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB8726B8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v15 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  swift_beginAccess();
  v17 = v3[7];
  if (!*(_QWORD *)(v17 + 16))
  {
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v18 = v32;
  v19 = sub_1BA6E35A8(v32, a2);
  if ((v20 & 1) != 0)
  {
    sub_1BAF52AB4(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v9 + 72) * v19, (uint64_t)v7);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_1BAF52BCC((uint64_t)v7, (uint64_t)v11);
    swift_endAccess();
    v22 = v3 + 2;
    v24 = v3[5];
    v23 = v3[6];
    __swift_project_boxed_opaque_existential_1(v22, v24);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, v24, v23);
    v27 = v26;
    type metadata accessor for ShareAttributionViewItem();
    v28 = (_QWORD *)swift_allocObject();
    sub_1BA563554();
    v28[5] = 0;
    v28[4] = 0;
    v30 = objc_allocWithZone(v29);
    swift_bridgeObjectRetain();
    v28[6] = objc_msgSend(v30, sel_init);
    v28[2] = v25;
    v28[3] = v27;
    swift_beginAccess();
    v28[4] = v18;
    v28[5] = a2;
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    return (uint64_t)v28;
  }
LABEL_10:
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
  swift_endAccess();
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

uint64_t ShareAttributionViewReuseFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ShareAttributionViewReuseFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF74D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = ShareAttributionViewReuseFactory.create(for:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t SingletonShareAttributionViewReuseManager.__allocating_init(objectFactory:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = a1;
  sub_1BAF75048();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v2 + 16) = sub_1BB870738();
  return v2;
}

uint64_t SingletonShareAttributionViewReuseManager.init(objectFactory:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  sub_1BAF75048();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v1 + 16) = sub_1BB870738();
  return v1;
}

uint64_t SingletonShareAttributionViewReuseManager.dequeue(for:item:owner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[4];

  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  ShareAttributionViewReuseFactory.set(item:for:)(a3, a1, a2);
  sub_1BB870750();
  v13 = v15[1];
  sub_1BA657D64();
  *v12 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  LOBYTE(a3) = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((a3 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BAA499D8(a1, a2, (uint64_t)v8);
    swift_endAccess();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SingletonShareAttributionViewReuseManager.prepareForReuse(object:owner:)()
{
  return sub_1BB870744();
}

uint64_t SingletonShareAttributionViewReuseManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BAF7501C()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BAF75048()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EE68)
  {
    type metadata accessor for ShareAttributionViewReuseFactory();
    sub_1BAF7516C(&qword_1ED3BFDF0, type metadata accessor for ShareAttributionViewReuseFactory, (uint64_t)&protocol conformance descriptor for ShareAttributionViewReuseFactory);
    v0 = sub_1BB87075C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EE68);
  }
}

uint64_t sub_1BAF750BC()
{
  return sub_1BAF7516C(&qword_1EF2B7380, type metadata accessor for ShareAttributionViewItem, (uint64_t)&protocol conformance descriptor for ShareAttributionViewItem);
}

uint64_t sub_1BAF750E8()
{
  return sub_1BAF7516C(&qword_1EF2B7388, type metadata accessor for ShareAttributionViewItem, (uint64_t)&protocol conformance descriptor for ShareAttributionViewItem);
}

uint64_t sub_1BAF75114()
{
  return sub_1BAF7516C(&qword_1EF2B7390, type metadata accessor for ShareAttributionViewItem, (uint64_t)&protocol conformance descriptor for ShareAttributionViewItem);
}

uint64_t method lookup function for ShareAttributionViewItem()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ShareAttributionViewReuseFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for SingletonShareAttributionViewReuseManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingletonShareAttributionViewReuseManager.__allocating_init(objectFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BAF7516C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for DebugGroupLayoutContext(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for DebugGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *assignWithCopy for DebugGroupLayoutContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for DebugGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DebugGroupLayoutContext()
{
  return &type metadata for DebugGroupLayoutContext;
}

uint64_t LayeredMediaLoader.identifier.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t LayeredMediaLoader.load()()
{
  sub_1BAF754C8();
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BAF75378(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  uint64_t v18;
  _QWORD v19[9];
  char v20;

  v6 = a5[5];
  v7 = a5[6];
  __swift_project_boxed_opaque_existential_1(a5 + 2, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v19, v6, v7);
  v8 = v19[0];
  v9 = v19[1];
  v10 = v19[2];
  v11 = v19[3];
  v12 = v19[4];
  v13 = v19[5];
  v14 = v19[6];
  v15 = v19[8];
  v16 = a1;
  LOBYTE(a1) = v20;
  v18 = v19[7];
  v16(v19);
  sub_1BAF7582C(v8, v9, v10, v11, v12, v13, v14, v18, v15, (char)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF754C0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return sub_1BAF75378(a1, a2, a3, a4, v4);
}

void sub_1BAF754C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C330)
  {
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C330);
  }
}

uint64_t LayeredMediaLoader.syncLoad()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1BB8726B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v5 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF738], v2);
  v6 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v8 = v1 + 2;
    v10 = v1[5];
    v9 = v1[6];
    __swift_project_boxed_opaque_existential_1(v8, v10);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t LayeredMediaLoader.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t LayeredMediaLoader.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF75654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1BAF7569C()
{
  sub_1BAF754C8();
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BAF756E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_1BB8726B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (_QWORD *)*v0;
  sub_1BA657D64();
  *v4 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF738], v1);
  v6 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if ((v6 & 1) != 0)
  {
    v8 = v5[5];
    v9 = v5[6];
    __swift_project_boxed_opaque_existential_1(v5 + 2, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of LayeredMediaLoaderType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LayeredMediaLoaderType.load()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LayeredMediaLoaderType.syncLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for LayeredMediaLoader()
{
  return objc_opt_self();
}

uint64_t method lookup function for LayeredMediaLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAF7582C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (a10 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for A12_V25()
{
  return &type metadata for A12_V25;
}

uint64_t sub_1BAF75878(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B74D8, (uint64_t (*)(void))sub_1BAF78B54, (uint64_t)&type metadata for A12_V25.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF78B54();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAF75A2C()
{
  sub_1BAF78B54();
  return sub_1BB874710();
}

uint64_t sub_1BAF75A54()
{
  sub_1BAF78B54();
  return sub_1BB87471C();
}

double sub_1BAF75A7C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAF78940(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAF75AC0(_QWORD *a1)
{
  return sub_1BAF75878(a1);
}

uint64_t sub_1BAF75AD4()
{
  sub_1BAF7862C();
  return sub_1BB86D96C();
}

uint64_t sub_1BAF75B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V25;
  v20 = sub_1BA8EE2F8();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V25;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E726A1E0, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E726A208, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V25.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2B73B0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V25.Bound, (uint64_t)&unk_1BB8D96F0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BAF76170@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[19];
  char v53[105];
  __int128 v54[9];
  __int128 v55[2];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v46 = a1;
  v3 = sub_1BB86DA38();
  v43 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v42 = type metadata accessor for A12_V25.Bound();
  v7 = v1 + *(int *)(v42 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(int *)(v8 + 40);
  v10 = v7;
  v45 = v7;
  v11 = *(_QWORD *)(v7 + v9);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(double *)(v10 + *(int *)(v8 + 32));
  sub_1BA4C010C(v12 + 16, (uint64_t)&v56);
  sub_1BA4C010C(v12 + 56, (uint64_t)v55);
  v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v15 = swift_initStackObject();
  sub_1BA4CECCC(&v56, v15 + 16);
  sub_1BA4CECCC(v55, v15 + 56);
  *(double *)(v15 + 96) = v14;
  LOBYTE(v54[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v54, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v15 + 16);
  __swift_destroy_boxed_opaque_existential_1(v15 + 56);
  v60 = inited;
  v16 = *(_QWORD *)(v11 + 16);
  sub_1BA4C010C(v16 + 16, (uint64_t)v55);
  sub_1BA4C010C(v16 + 56, (uint64_t)v54);
  v17 = v13 * *(double *)(v16 + 96);
  v18 = swift_initStackObject();
  sub_1BA4CECCC(v55, v18 + 16);
  sub_1BA4CECCC(v54, v18 + 56);
  *(double *)(v18 + 96) = v17;
  v53[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v53, (uint64_t *)&v56);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v18 + 16);
  __swift_destroy_boxed_opaque_existential_1(v18 + 56);
  sub_1BA829A4C();
  v19 = sub_1BB872E74();
  *(_QWORD *)(v19 + 16) = 2;
  sub_1BA4C010C((uint64_t)&v56, v19 + 32);
  sub_1BA4CECCC(&v56, v19 + 72);
  sub_1BA6B5BE8(v19);
  v20 = *(_QWORD *)(v11 + 16);
  sub_1BA4C010C(v20 + 16, (uint64_t)v55);
  sub_1BA4C010C(v20 + 56, (uint64_t)v54);
  v21 = v13 * *(double *)(v20 + 96);
  v22 = swift_initStackObject();
  sub_1BA4CECCC(v55, v22 + 16);
  sub_1BA4CECCC(v54, v22 + 56);
  *(double *)(v22 + 96) = v21;
  v53[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v53, (uint64_t *)&v56);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v22 + 16);
  __swift_destroy_boxed_opaque_existential_1(v22 + 56);
  v23 = *(_QWORD *)(v2 + *(int *)(v42 + 28));
  v24 = sub_1BA6B5B08((uint64_t)&v56, *(_QWORD *)(v23 + 16) - 3);
  sub_1BA6B5BE8(v24);
  v25 = v60;
  v52[2] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BACB8FF0(v23, v25, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 >= 3)
    v28 = 3;
  else
    v28 = *(_QWORD *)(v26 + 16);
  v29 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
  v30 = v26 + ((v29 + 32) & ~v29);
  v31 = (2 * v27) | 1;
  v32 = *MEMORY[0x1E0DB5D88];
  v33 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v5, v32, v33);
  (*(void (**)(char *, _QWORD, _QWORD))(v43 + 104))(v5, *MEMORY[0x1E0DB6200], v44);
  v47 = v26;
  v48 = v26;
  v49 = v30;
  v50 = v28;
  v51 = v31;
  sub_1BAF786D4(0, &qword_1EF2B7458, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v45 = sub_1BB86DB34();
  sub_1BB86DB40();
  v34 = swift_bridgeObjectRelease();
  v44 = v56;
  v35 = v57;
  v36 = v58;
  *(_QWORD *)&v56 = v26;
  *(_QWORD *)&v55[0] = v59;
  MEMORY[0x1E0C80A78](v34);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v37 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v56 = v37;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v38 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = v46;
  *v46 = 0;
  result = *(double *)&v44;
  *(_OWORD *)(v39 + 8) = v44;
  *((_QWORD *)v39 + 3) = v35;
  *((_QWORD *)v39 + 4) = v36;
  v41 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v39 + 5) = v38;
  *((_QWORD *)v39 + 6) = v41;
  return result;
}

uint64_t sub_1BAF76770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)&v20[-v15];
  v26 = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 12;
  *v16 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB63F8], v13);
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v18 = MEMORY[0x1E0DB5DD0];
  sub_1BAF786D4(0, &qword_1EF2B7478, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAF78694(&qword_1EF2B7480, &qword_1EF2B7478, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1BAF768F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *);
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t *);
  uint64_t v40;
  uint64_t v42;
  void (*v43)(uint64_t *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  void (*v47)(uint64_t);
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t *);
  unsigned int v58;
  void (*v59)(uint64_t);
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v56 = a6;
  v55 = a5;
  v54 = a4;
  v53 = a3;
  v61 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v42 - v10);
  v68 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  v60 = *MEMORY[0x1E0DB5A38];
  v59 = *(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 104);
  v59(v14);
  *v11 = v13;
  v58 = *MEMORY[0x1E0DB6318];
  v57 = *(void (**)(uint64_t *))(v9 + 104);
  v57(v11);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v15, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v43 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v43(v11, v8);
  v68 = a1;
  sub_1BAA71EEC();
  v19 = v18;
  v20 = swift_allocBox();
  v22 = (char *)v21 + *(int *)(v19 + 48);
  *v21 = 7;
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  *v11 = v20;
  v25 = v57;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v57)(v11, *MEMORY[0x1E0DB6338], v8);
  v67 = v61;
  v44 = v17;
  sub_1BB86D498();
  v26 = v43;
  v43(v11, v8);
  v45 = a1;
  v68 = a1;
  v27 = swift_allocBox();
  ((void (*)(uint64_t, _QWORD, uint64_t))v59)(v28, v60, v12);
  *v11 = v27;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v25)(v11, v58, v8);
  sub_1BB86D4EC();
  v26(v11, v8);
  v68 = a1;
  v52 = *MEMORY[0x1E0DB6410];
  v25(v11);
  sub_1BAF78758();
  v51 = v29;
  sub_1BA4CDF6C(0, &qword_1EF2B74A0, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v31 = v30;
  v32 = *(_QWORD *)(v30 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (v33 + 32) & ~v33;
  v50 = v34 + *(_QWORD *)(v32 + 72);
  v49 = v33 | 7;
  v35 = swift_allocObject();
  v48 = xmmword_1BB87CE70;
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  v46 = *MEMORY[0x1E0DB5C80];
  v47 = *(void (**)(uint64_t))(v32 + 104);
  v47(v35 + v34);
  v66 = v61;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v26(v11, v8);
  v36 = v45;
  v68 = v45;
  v37 = swift_allocBox();
  ((void (*)(uint64_t, _QWORD, uint64_t))v59)(v38, v60, v12);
  *v11 = v37;
  v39 = v57;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v57)(v11, v58, v8);
  sub_1BB86D4EC();
  v26(v11, v8);
  v68 = v36;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v39)(v11, v52, v8);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v48;
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v40 + v34, v46, v31);
  v62 = v53;
  v63 = v54;
  v64 = v55;
  v65 = v56;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v26)(v11, v8);
}

uint64_t sub_1BAF76E38(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v28 = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB63C0], v12);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v17 = (char *)v6 + v4[5];
    v27 = v12;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v26 = v13;
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 1;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v22;
    v23 = v22;
    sub_1BAB62528((uint64_t)v10, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
    sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v24, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAF770EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
  sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAF772D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
  sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAF776DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
  sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

void sub_1BAF77AE4(uint64_t a1, char *a2, char *a3, char *a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a3;
  v37 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v30 - v11);
  v13 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v13);
  v16 = a5;
  v17 = (char *)(a5 >> 1);
  if (__OFSUB__(v17, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  v18 = a4;
  if (v17 != a4 && v17 - a4 == 3)
  {
    if ((uint64_t)v17 > (uint64_t)a4)
    {
      v19 = *(_QWORD *)(v15 + 72);
      v31 = *MEMORY[0x1E0DB63F8];
      v30 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_unknownObjectRetain();
      v32 = v19;
      v33 = v18;
      v20 = (uint64_t)&v36[v19 * (_QWORD)v18];
      v34 = v10;
      v35 = a1;
      v21 = (uint64_t)v30;
      do
      {
        sub_1BA4C2DD8(v20, v21, type metadata accessor for HeadlineViewLayout.Context);
        v39 = a1;
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = 4;
        *v12 = v22;
        v23 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, v31, v9);
        MEMORY[0x1E0C80A78](v23);
        v24 = v37;
        *(&v30 - 6) = (char *)v21;
        *(&v30 - 5) = v24;
        *(&v30 - 4) = v36;
        *(&v30 - 3) = v18;
        v25 = v16;
        v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
        v38 = v27;
        v29 = sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v26, MEMORY[0x1E0DB5A18]);
        v28 = v33;
        v10 = v34;
        sub_1BB86D4BC();
        v16 = v25;
        a1 = v35;
        (*(void (**)(uint64_t *))(v10 + 8))(v12);
        sub_1BA4A2E80(v21, type metadata accessor for HeadlineViewLayout.Context);
        --v17;
        v20 += v32;
        v18 = v28;
      }
      while (v28 != v17);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1BAF77D84(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, int64_t a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void **v32;
  void *v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD *);
  char *v41;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;

  v57 = a1;
  v58 = a6;
  v46 = a3;
  v49 = a2;
  v50 = sub_1BB86DA38();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1BB86D93C();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2B7470, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v44 - v20;
  v59 = v57;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v55 = v19;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v52 = v21;
  v57 = v18;
  v23(v21, v22, v18);
  v24 = 0;
  v25 = (unint64_t)v58 >> 1;
  if ((unint64_t)v58 >> 1 != a5)
  {
    v58 = v16;
    v45 = v14;
    v16 = v46;
    swift_unknownObjectRetain();
    while (a5 < v25)
    {
      sub_1BA4C2DD8(a4 + *(_QWORD *)(v11 + 72) * a5, (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      v26 = *(_QWORD *)&v13[*(int *)(v10 + 20) + 32];
      sub_1BA4A2E80((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
      if ((v26 & 4) == 0)
      {
        swift_unknownObjectRelease();
        v24 = 2;
        goto LABEL_8;
      }
      if (v25 == ++a5)
      {
        swift_unknownObjectRelease();
        v24 = 0;
LABEL_8:
        v14 = v45;
        v16 = v58;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_9:
  v27 = v14;
  v28 = (char *)v16 + *(int *)(v14 + 20);
  v29 = *MEMORY[0x1E0DB61C8];
  v30 = sub_1BB86DA20();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  v32 = (void **)MEMORY[0x1E0DC4918];
  *v16 = v24;
  *(uint64_t *)((char *)v16 + *(int *)(v27 + 24)) = 0;
  v33 = *v32;
  *(uint64_t *)((char *)v16 + *(int *)(v27 + 28)) = (uint64_t)v33;
  v34 = qword_1ED3BC390;
  v35 = v33;
  if (v34 != -1)
LABEL_12:
    swift_once();
  swift_retain();
  v36 = v51;
  sub_1BB86D2B8();
  v37 = swift_release();
  v38 = MEMORY[0x1E0C80A78](v37);
  v39 = v50;
  *(&v44 - 4) = v49;
  *(&v44 - 3) = (uint64_t)v16;
  v43 = (unint64_t)v36;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v47 + 104))(v53, *MEMORY[0x1E0DB6208], v39, v38);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v56);
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Options);
  v40 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF786D4(0, &qword_1EF2B7488, MEMORY[0x1E0DB5A10]);
  sub_1BAF78694(&qword_1EF2B7490, &qword_1EF2B7488, v40, MEMORY[0x1E0DB5A18]);
  v43 = sub_1BA595D14();
  v41 = v52;
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v41, v57);
}

uint64_t sub_1BAF78218@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V25.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAF782F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAF75B3C(a1, a2, a3);
}

uint64_t sub_1BAF7830C()
{
  return sub_1BB690A04();
}

unint64_t sub_1BAF7831C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAF78348();
  result = sub_1BAF7838C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAF78348()
{
  unint64_t result;

  result = qword_1EF2B73A0;
  if (!qword_1EF2B73A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D963C, &type metadata for A12_V25);
    atomic_store(result, (unint64_t *)&qword_1EF2B73A0);
  }
  return result;
}

unint64_t sub_1BAF7838C()
{
  unint64_t result;

  result = qword_1EF2B73A8;
  if (!qword_1EF2B73A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9664, &type metadata for A12_V25);
    atomic_store(result, (unint64_t *)&qword_1EF2B73A8);
  }
  return result;
}

uint64_t type metadata accessor for A12_V25.Bound()
{
  uint64_t result;

  result = qword_1EF2B7410;
  if (!qword_1EF2B7410)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF7840C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF78418(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAF78494()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAF784A0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAF78514()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAF785A0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B7450, (uint64_t (*)(uint64_t))type metadata accessor for A12_V25.Bound, (uint64_t)&unk_1BB8D96C8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF785DC(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BAF76770);
}

unint64_t sub_1BAF785E8()
{
  unint64_t result;

  result = qword_1EF2B7460;
  if (!qword_1EF2B7460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9820, &type metadata for A12_V25.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B7460);
  }
  return result;
}

unint64_t sub_1BAF7862C()
{
  unint64_t result;

  result = qword_1EF2B7468;
  if (!qword_1EF2B7468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D97F0, &type metadata for A12_V25.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7468);
  }
  return result;
}

uint64_t sub_1BAF78670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAF78218(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAF78678()
{
  return swift_deallocObject();
}

uint64_t sub_1BAF78688(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BAF768F0);
}

uint64_t sub_1BAF78694(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAF786D4(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAF786D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V25.Layout;
    v8[1] = &type metadata for A12_V25.Layout.Attributes;
    v8[2] = sub_1BAF785E8();
    v8[3] = sub_1BAF7862C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BAF78750(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF76E38(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAF78758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B7498)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B74A0, (uint64_t (*)(void))sub_1BAF785E8, (uint64_t)&type metadata for A12_V25.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B7498);
  }
}

uint64_t sub_1BAF787CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF770EC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAF787D4(uint64_t a1)
{
  uint64_t v1;

  sub_1BAF77AE4(a1, *(char **)(v1 + 16), *(char **)(v1 + 24), *(char **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BAF787E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF77D84(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_1BAF787F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF772D4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAF787F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF776DC(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V25.Layout.Attributes()
{
  return &type metadata for A12_V25.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V25.Layout()
{
  return &type metadata for A12_V25.Layout;
}

unint64_t sub_1BAF78824()
{
  unint64_t result;

  result = qword_1EF2B74A8;
  if (!qword_1EF2B74A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9790, &type metadata for A12_V25.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B74A8);
  }
  return result;
}

unint64_t sub_1BAF7886C()
{
  unint64_t result;

  result = qword_1EF2B74B0;
  if (!qword_1EF2B74B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9768, &type metadata for A12_V25.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B74B0);
  }
  return result;
}

unint64_t sub_1BAF788B4()
{
  unint64_t result;

  result = qword_1EF2B74B8;
  if (!qword_1EF2B74B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9740, &type metadata for A12_V25.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B74B8);
  }
  return result;
}

unint64_t sub_1BAF788FC()
{
  unint64_t result;

  result = qword_1EF2B74C0;
  if (!qword_1EF2B74C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D97B8, &type metadata for A12_V25.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B74C0);
  }
  return result;
}

uint64_t sub_1BAF78940@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B74C8, (uint64_t (*)(void))sub_1BAF78B54, (uint64_t)&type metadata for A12_V25.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF78B54();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAF78B54()
{
  unint64_t result;

  result = qword_1EF2B74D0;
  if (!qword_1EF2B74D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9914, &type metadata for A12_V25.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B74D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V25.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF78BE4 + 4 * byte_1BB8D962D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF78C18 + 4 * byte_1BB8D9628[v4]))();
}

uint64_t sub_1BAF78C18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF78C20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF78C28);
  return result;
}

uint64_t sub_1BAF78C34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF78C3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF78C40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF78C48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V25.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V25.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAF78C68()
{
  unint64_t result;

  result = qword_1EF2B74E0;
  if (!qword_1EF2B74E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D98EC, &type metadata for A12_V25.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B74E0);
  }
  return result;
}

unint64_t sub_1BAF78CB0()
{
  unint64_t result;

  result = qword_1EF2B74E8;
  if (!qword_1EF2B74E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D985C, &type metadata for A12_V25.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B74E8);
  }
  return result;
}

unint64_t sub_1BAF78CF8()
{
  unint64_t result;

  result = qword_1EF2B74F0;
  if (!qword_1EF2B74F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D9884, &type metadata for A12_V25.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B74F0);
  }
  return result;
}

uint64_t sub_1BAF78D3C()
{
  return swift_initClassMetadata2();
}

char *sub_1BAF78D80(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  objc_super v19;
  CGRect v20;
  CGRect v21;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BB870138();
  v10 = v4;
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetWidth(v20);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetHeight(v21);
  *(_QWORD *)&v10[qword_1EF2B74F8] = sub_1BB870108();

  v19.receiver = v10;
  v19.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = qword_1EF2B74F8;
  v13 = *(void **)&v11[qword_1EF2B74F8];
  v14 = (void *)objc_opt_self();
  v15 = v11;
  v16 = v13;
  v17 = objc_msgSend(v14, sel_clearColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v11[v12]);
  return v15;
}

char *sub_1BAF78F08(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_1BAF78D80(a1, a2, a3, a4);
}

void sub_1BAF78F28()
{
  sub_1BAF79354();
}

uint64_t sub_1BAF78F54(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

uint64_t sub_1BAF78F6C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1BAF78F8C(a1, a2, a3, a4, (SEL *)&selRef_touchesBegan_withEvent_, 1);
}

uint64_t sub_1BAF78F7C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1BAF78F8C(a1, a2, a3, a4, (SEL *)&selRef_touchesEnded_withEvent_, 0);
}

uint64_t sub_1BAF78F8C(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, char a6)
{
  uint64_t v10;
  id v11;
  id v12;

  sub_1BAF792D0();
  sub_1BAF7930C();
  v10 = sub_1BB873030();
  v11 = a4;
  v12 = a1;
  sub_1BAF79020(v10, (uint64_t)a4, a5, a6);

  return swift_bridgeObjectRelease();
}

id sub_1BAF79020(uint64_t a1, uint64_t a2, SEL *a3, char a4)
{
  char *v4;
  objc_class *ObjectType;
  void *v9;
  void *v10;
  uint64_t v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BAF792D0();
  sub_1BAF7930C();
  v9 = (void *)sub_1BB873024();
  v13.receiver = v4;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, *a3, v9, a2);

  v10 = *(void **)&v4[qword_1EF2B74F8];
  v11 = a4 & 1;
  objc_msgSend(v10, sel_setSelected_, v11);
  return objc_msgSend(v10, sel_setHighlighted_, v11);
}

uint64_t sub_1BAF790EC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1BAF78F8C(a1, a2, a3, a4, (SEL *)&selRef_touchesCancelled_withEvent_, 0);
}

void sub_1BAF790FC(uint64_t a1)
{

}

uint64_t type metadata accessor for DebugItemLayoutView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugItemLayoutView);
}

uint64_t sub_1BAF79118()
{
  return sub_1BB87012C();
}

uint64_t sub_1BAF79140()
{
  return sub_1BAF79118();
}

uint64_t sub_1BAF79148()
{
  swift_getObjectType();
  return sub_1BB870EE8();
}

uint64_t sub_1BAF7918C()
{
  swift_getObjectType();
  return sub_1BB870EF4();
}

uint64_t sub_1BAF791D0()
{
  swift_getObjectType();
  return sub_1BB870EE8();
}

uint64_t sub_1BAF79214()
{
  swift_getObjectType();
  return sub_1BB870EE8();
}

uint64_t sub_1BAF79258()
{
  swift_getObjectType();
  return sub_1BB870F24();
}

uint64_t sub_1BAF79294()
{
  swift_getObjectType();
  return sub_1BB870F24();
}

unint64_t sub_1BAF792D0()
{
  unint64_t result;

  result = qword_1EF2B7580;
  if (!qword_1EF2B7580)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B7580);
  }
  return result;
}

unint64_t sub_1BAF7930C()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EF2B7588;
  if (!qword_1EF2B7588)
  {
    v1 = sub_1BAF792D0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B7588);
  }
  return result;
}

void sub_1BAF79354()
{
  sub_1BB873EAC();
  __break(1u);
}

double sub_1BAF793AC(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_OWORD *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  void *v13;
  id v14;
  double v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  id v19;
  double v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  _OWORD v28[7];
  _OWORD v29[2];
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  _OWORD v40[7];
  _OWORD v41[3];

  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if ((v8 & 1) != 0)
  {
    v11 = *(void (**)(_OWORD *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 32);
    v12 = sub_1BA6B2E68();
    v11(v40, &type metadata for FeedIssue, &type metadata for FeedIssue, v12, v9, v10);
    if (!v2)
    {
      v38 = v40[6];
      v39[0] = v41[0];
      *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v41 + 9);
      v32 = v40[0];
      v33 = v40[1];
      v34 = v40[2];
      v35 = v40[3];
      v36 = v40[4];
      v37 = v40[5];
      v13 = *(void **)&v40[0];
      v14 = objc_msgSend(*(id *)&v40[0], sel_layeredCoverJSON);
      if (v14)
      {

        objc_msgSend(v13, sel_layeredCoverAspectRatio);
        v3 = v15;
      }
      else
      {
        type metadata accessor for FormatLayoutError();
        sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        v25 = v24;
        v30 = 0;
        v31 = 0xE000000000000000;
        v28[6] = v38;
        v29[0] = v39[0];
        *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v39 + 9);
        v28[2] = v34;
        v28[3] = v35;
        v28[4] = v36;
        v28[5] = v37;
        v28[0] = v32;
        v28[1] = v33;
        sub_1BB873E34();
        v26 = v31;
        *v25 = v30;
        v25[1] = v26;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
      sub_1BA8D1FE4((uint64_t)&v32);
    }
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32);
    v17 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    v16(v5, v5, v17, v9, v10);
    if (!v2)
    {
      v18 = (void *)*((_QWORD *)v7 + 5);
      if ((objc_msgSend(v18, sel_respondsToSelector_, sel_layeredThumbnailJSON) & 1) != 0
        && (v19 = objc_msgSend(v18, sel_layeredThumbnailJSON)) != 0
        && (v19,
            (objc_msgSend(v18, sel_respondsToSelector_, sel_layeredThumbnailAspectRatio) & 1) != 0))
      {
        objc_msgSend(v18, sel_layeredThumbnailAspectRatio);
        v3 = v20;
        sub_1BA717468((uint64_t)v7);
      }
      else
      {
        type metadata accessor for FormatLayoutError();
        sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        v22 = v21;
        *(_QWORD *)&v40[0] = 0;
        *((_QWORD *)&v40[0] + 1) = 0xE000000000000000;
        sub_1BB873E34();
        v23 = *((_QWORD *)&v40[0] + 1);
        *v22 = *(_QWORD *)&v40[0];
        v22[1] = v23;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1BA717468((uint64_t)v7);
      }
    }
  }
  return v3;
}

uint64_t static FormatLayeredMediaRatioBinding.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if ((*a1 & 1) != 0)
  {
    if ((*a2 & 1) == 0)
      return 0;
  }
  else if ((*a2 & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BAF79730(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF79754();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF79754()
{
  unint64_t result;

  result = qword_1EF2B7590;
  if (!qword_1EF2B7590)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaRatioBinding, &type metadata for FormatLayeredMediaRatioBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B7590);
  }
  return result;
}

unint64_t sub_1BAF79798(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8221D8();
  a1[2] = sub_1BAEEFF44();
  result = sub_1BAF797CC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF797CC()
{
  unint64_t result;

  result = qword_1EF2B7598;
  if (!qword_1EF2B7598)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaRatioBinding, &type metadata for FormatLayeredMediaRatioBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B7598);
  }
  return result;
}

uint64_t sub_1BAF79810(_QWORD *a1)
{
  return FormatLayeredMediaRatioBinding.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatLayeredMediaRatioBinding()
{
  return &type metadata for FormatLayeredMediaRatioBinding;
}

void static FormatCodingBooleanFalseStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t static FormatCodingBooleanFalseStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = *(_QWORD *)a1 & 1;
  }
  sub_1BA69C828(v1, v2, v3);
  sub_1BA69C828(0, 0, 0);
  return v4;
}

void sub_1BAF798A4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t sub_1BAF798B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = *(_QWORD *)a1 & 1;
  }
  sub_1BA69C828(v1, v2, v3);
  sub_1BA69C828(0, 0, 0);
  return v4;
}

double static FormatCodingBooleanTrueStrategy.defaultValue.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1;
  *(_OWORD *)a1 = xmmword_1BB8A1A10;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

BOOL static FormatCodingBooleanTrueStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BOOL8 v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = (*(_QWORD *)a1 & 1) == 0;
  }
  sub_1BA69C828(v1, v2, v3);
  sub_1BA69C828(1, 0, 0);
  return v4;
}

unint64_t sub_1BAF79990(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF799B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF799B4()
{
  unint64_t result;

  result = qword_1EF2B75A0;
  if (!qword_1EF2B75A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingBooleanFalseStrategy, &type metadata for FormatCodingBooleanFalseStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B75A0);
  }
  return result;
}

unint64_t sub_1BAF79A00(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF79A24();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF79A24()
{
  unint64_t result;

  result = qword_1EF2B7608;
  if (!qword_1EF2B7608)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingBooleanTrueStrategy, &type metadata for FormatCodingBooleanTrueStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B7608);
  }
  return result;
}

double sub_1BAF79A68@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1;
  *(_OWORD *)a1 = xmmword_1BB8A1A10;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

BOOL sub_1BAF79A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BOOL8 v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = (*(_QWORD *)a1 & 1) == 0;
  }
  sub_1BA69C828(v1, v2, v3);
  sub_1BA69C828(1, 0, 0);
  return v4;
}

ValueMetadata *type metadata accessor for FormatCodingBooleanFalseStrategy()
{
  return &type metadata for FormatCodingBooleanFalseStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingBooleanTrueStrategy()
{
  return &type metadata for FormatCodingBooleanTrueStrategy;
}

uint64_t FormatPluginData.init<A>(formatContent:feedContext:feedGroup:feedDescriptor:feedKind:dataProvider:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_0;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v49;
  id v51;
  uint64_t v53;
  char v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;

  v11 = *a2;
  v12 = *((_BYTE *)a2 + 8);
  v13 = *((_BYTE *)a2 + 9);
  v14 = *((_BYTE *)a2 + 10);
  v15 = *((_BYTE *)a2 + 11);
  v16 = a2[5];
  v17 = *((_BYTE *)a2 + 48);
  v42 = a2[7];
  v43 = a2[4];
  v49 = *a5;
  sub_1BA4C2DD8(a1, a9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v18 = (int *)type metadata accessor for FormatPluginData();
  v19 = a9 + v18[5];
  *(_QWORD *)v19 = v11;
  *(_BYTE *)(v19 + 8) = v12;
  *(_BYTE *)(v19 + 9) = v13;
  *(_BYTE *)(v19 + 10) = v14;
  *(_BYTE *)(v19 + 11) = v15;
  *(_OWORD *)(v19 + 16) = *((_OWORD *)a2 + 1);
  *(_QWORD *)(v19 + 32) = v43;
  *(_QWORD *)(v19 + 40) = v16;
  *(_BYTE *)(v19 + 48) = v17;
  *(_QWORD *)(v19 + 56) = v42;
  *(_OWORD *)(v19 + 64) = *((_OWORD *)a2 + 4);
  v20 = (uint64_t *)(a9 + v18[6]);
  v21 = *(_QWORD *)(a8 + 8);
  v20[3] = a7;
  v20[4] = v21;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v20);
  v44 = *(_QWORD *)(a7 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 16))(boxed_opaque_existential_0, a3, a7);
  *(_QWORD *)(a9 + v18[8]) = a4;
  *(_BYTE *)(a9 + v18[7]) = v49;
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 72);
  v51 = a4;
  v24 = v23(a7, a8);
  v25 = v18;
  *(_QWORD *)(a9 + v18[9]) = v24;
  sub_1BA4C2DD8(a6, (uint64_t)v55 + 1, (uint64_t (*)(_QWORD))sub_1BAF79E68);
  v26 = v56;
  if (v56)
  {
    v27 = v57;
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v55 + 1), v56);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v27 + 8))(&v53, v26, v27);
    v28 = v53;
    v29 = v54;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55 + 1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v55 + 1, (uint64_t (*)(_QWORD))sub_1BAF79E68);
    v28 = 0;
    v29 = 4;
  }
  v30 = a9 + v25[10];
  *(_QWORD *)v30 = v28;
  *(_BYTE *)(v30 + 8) = v29;
  v31 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v33 = (uint64_t *)(v31 + 64);
    while (1)
    {
      v35 = *v33;
      v33 += 10;
      v34 = v35;
      if ((v35 & 0x8000000000000000) == 0)
      {
        v36 = (unsigned __int8 *)(v34 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
        swift_beginAccess();
        v37 = *v36;
        if (v37 != 4)
          break;
      }
      if (!--v32)
        goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    LOBYTE(v37) = 3;
  }
  *(_BYTE *)(a9 + v25[11]) = v37;
  sub_1BA4C2DD8(a6, (uint64_t)v55 + 1, (uint64_t (*)(_QWORD))sub_1BAF79E68);
  v38 = v56;
  if (v56)
  {
    v39 = v57;
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v55 + 1), v56);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v39 + 16))(v55, v38, v39);

    sub_1BA4A2E80(a6, (uint64_t (*)(_QWORD))sub_1BAF79E68);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(a3, a7);
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    v40 = v55[0];
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v55 + 1);
  }
  else
  {

    sub_1BA4A2E80(a6, (uint64_t (*)(_QWORD))sub_1BAF79E68);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(a3, a7);
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    result = sub_1BA4A2E80((uint64_t)v55 + 1, (uint64_t (*)(_QWORD))sub_1BAF79E68);
    v40 = 1;
  }
  *(_BYTE *)(a9 + v25[12]) = v40;
  return result;
}

uint64_t type metadata accessor for FormatPluginData()
{
  uint64_t result;

  result = qword_1ED39FBC8;
  if (!qword_1ED39FBC8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAF79E68(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A77C0, (uint64_t (*)(uint64_t))sub_1BAF79E84, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BAF79E84()
{
  unint64_t result;

  result = qword_1ED3A1418;
  if (!qword_1ED3A1418)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3A1418);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatPluginData(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  int *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t *, uint64_t, uint64_t);
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD *v107;
  char *v108;
  _QWORD *v109;
  int *v110;
  unsigned int (*v112)(_QWORD *, uint64_t, uint64_t);
  int *v113;
  _QWORD *__dst;
  _QWORD *v115;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (int *)type metadata accessor for FormatContent.Resolved();
    v7 = v6[5];
    v8 = (char *)v3 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86C8B0();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    *(_QWORD *)((char *)v3 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)v3 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_QWORD *)((char *)v3 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    *(_QWORD *)((char *)v3 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
    *(_QWORD *)((char *)v3 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
    *(_QWORD *)((char *)v3 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
    v12 = v6[12];
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v3 + v12) = v13;
    *(_QWORD *)((char *)v3 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
    v109 = v3;
    v110 = v6;
    v14 = v6[14];
    __dst = (_QWORD *)((char *)v3 + v14);
    v115 = (_QWORD *)((char *)a2 + v14);
    v15 = type metadata accessor for FormatWebEmbed.Resolved();
    v16 = *(_QWORD *)(v15 - 8);
    v112 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v17 = v13;
    swift_unknownObjectRetain();
    if (v112(v115, 1, v15))
    {
      sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v115, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v19 = v110;
      v20 = a3;
    }
    else
    {
      v105 = v16;
      v22 = v115[1];
      *__dst = *v115;
      __dst[1] = v22;
      v113 = (int *)v15;
      v23 = *(int *)(v15 + 20);
      v24 = (_QWORD *)((char *)__dst + v23);
      v25 = (char *)v115 + v23;
      v26 = *(_QWORD *)((char *)v115 + v23 + 8);
      *v24 = *(_QWORD *)((char *)v115 + v23);
      v24[1] = v26;
      v27 = (int *)type metadata accessor for FormatWebEmbed();
      v28 = v27[5];
      v106 = &v25[v28];
      v108 = (char *)v24 + v28;
      v29 = sub_1BB86C67C();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
      swift_bridgeObjectRetain();
      v32 = v29;
      swift_bridgeObjectRetain();
      v31(v108, v106, v29);
      v33 = v27[6];
      v34 = (char *)v24 + v33;
      v35 = &v25[v33];
      v102 = v31;
      v103 = v32;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v25[v33], 1, v32))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v31(v34, v35, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v32);
      }
      *(_QWORD *)((char *)v24 + v27[7]) = *(_QWORD *)&v25[v27[7]];
      v37 = v27[8];
      v38 = (_QWORD *)((char *)v24 + v37);
      v39 = &v25[v37];
      v40 = *((_QWORD *)v39 + 1);
      *v38 = *(_QWORD *)v39;
      v38[1] = v40;
      v41 = v27[9];
      v42 = (_QWORD *)((char *)v24 + v41);
      v43 = &v25[v41];
      v44 = *((_QWORD *)v43 + 1);
      *v42 = *(_QWORD *)v43;
      v42[1] = v44;
      *(_QWORD *)((char *)v24 + v27[10]) = *(_QWORD *)&v25[v27[10]];
      *(_QWORD *)((char *)v24 + v27[11]) = *(_QWORD *)&v25[v27[11]];
      *(_QWORD *)((char *)v24 + v27[12]) = *(_QWORD *)&v25[v27[12]];
      *(_QWORD *)((char *)__dst + v113[6]) = *(_QWORD *)((char *)v115 + v113[6]);
      *(_QWORD *)((char *)__dst + v113[7]) = *(_QWORD *)((char *)v115 + v113[7]);
      v45 = v113[8];
      v107 = (_QWORD *)((char *)__dst + v45);
      v46 = (_QWORD *)((char *)v115 + v45);
      v47 = type metadata accessor for WebEmbedDataVisualization();
      v104 = *(_QWORD *)(v47 - 8);
      v48 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v104 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v48(v46, 1, v47))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v107, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v19 = v110;
        v20 = a3;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v51 = *v46;
        v19 = v110;
        v20 = a3;
        v52 = v104;
        if (EnumCaseMultiPayload == 1)
        {
          v53 = v46[1];
          *v107 = v51;
          v107[1] = v53;
          v54 = type metadata accessor for GenericDataVisualization();
          v55 = *(int *)(v54 + 20);
          v56 = (char *)v107 + v55;
          v57 = (char *)v46 + v55;
          swift_bridgeObjectRetain();
          v102(v56, v57, v103);
          v58 = *(int *)(v54 + 24);
          v52 = v104;
          *(_QWORD *)((char *)v107 + v58) = *(uint64_t *)((char *)v46 + v58);
          swift_bridgeObjectRetain();
        }
        else
        {
          *v107 = v51;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v107, 0, 1, v47);
      }
      v3 = v109;
      v59 = v113[9];
      v60 = (char *)__dst + v59;
      v61 = (char *)v115 + v59;
      sub_1BA6C5A68();
      v63 = v62;
      v64 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v61, 1, v62))
      {
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v60, v61, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v105 + 56))(__dst, 0, 1, v113);
    }
    v66 = v19[15];
    v67 = *(void **)((char *)a2 + v66);
    *(_QWORD *)((char *)v3 + v66) = v67;
    *((_BYTE *)v3 + v19[16]) = *((_BYTE *)a2 + v19[16]);
    *(_QWORD *)((char *)v3 + v19[17]) = *(_QWORD *)((char *)a2 + v19[17]);
    v68 = v19[18];
    v69 = (char *)v3 + v68;
    v70 = (char *)a2 + v68;
    v71 = sub_1BB871E24();
    v72 = *(_QWORD *)(v71 - 8);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
    v74 = v67;
    swift_bridgeObjectRetain();
    if (v73(v70, 1, v71))
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v76 = v20[5];
    v77 = (char *)v3 + v76;
    v78 = (char *)a2 + v76;
    v79 = *(void **)((char *)a2 + v76);
    *(_QWORD *)v77 = v79;
    *((_DWORD *)v77 + 2) = *((_DWORD *)v78 + 2);
    v80 = *((_QWORD *)v78 + 3);
    *((_QWORD *)v77 + 2) = *((_QWORD *)v78 + 2);
    *((_QWORD *)v77 + 3) = v80;
    v81 = v78 + 32;
    v82 = *((_QWORD *)v78 + 5);
    v83 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v82 - 1) >= 3)
    {
      *((_QWORD *)v77 + 4) = *v81;
      *((_QWORD *)v77 + 5) = v82;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v77 + 2) = *(_OWORD *)v81;
    }
    v77[48] = v78[48];
    v84 = (void *)*((_QWORD *)v78 + 7);
    v85 = *((_QWORD *)v78 + 8);
    *((_QWORD *)v77 + 7) = v84;
    *((_QWORD *)v77 + 8) = v85;
    *((_QWORD *)v77 + 9) = *((_QWORD *)v78 + 9);
    v86 = v20[6];
    v87 = (char *)v3 + v86;
    v88 = (char *)a2 + v86;
    v89 = *(_QWORD *)((char *)a2 + v86 + 24);
    v90 = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v89)
    {
      v91 = *((_QWORD *)v88 + 4);
      *((_QWORD *)v87 + 3) = v89;
      *((_QWORD *)v87 + 4) = v91;
      (**(void (***)(char *, char *, uint64_t))(v89 - 8))(v87, v88, v89);
    }
    else
    {
      v92 = *((_OWORD *)v88 + 1);
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v92;
      *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
    }
    v93 = v20[8];
    *((_BYTE *)v3 + v20[7]) = *((_BYTE *)a2 + v20[7]);
    v94 = *(void **)((char *)a2 + v93);
    *(_QWORD *)((char *)v3 + v93) = v94;
    v95 = v20[10];
    *(_QWORD *)((char *)v3 + v20[9]) = *(_QWORD *)((char *)a2 + v20[9]);
    v96 = (char *)v3 + v95;
    v97 = (char *)a2 + v95;
    v98 = *(_QWORD *)v97;
    LOBYTE(v97) = v97[8];
    *(_QWORD *)v96 = v98;
    v96[8] = (char)v97;
    v99 = v20[12];
    *((_BYTE *)v3 + v20[11]) = *((_BYTE *)a2 + v20[11]);
    *((_BYTE *)v3 + v99) = *((_BYTE *)a2 + v99);
    v100 = v94;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for FormatPluginData(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FormatContent.Resolved();
  v5 = a1 + v4[5];
  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v7 = a1 + v4[14];
  v8 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + v8[5];
    swift_bridgeObjectRelease();
    v10 = type metadata accessor for FormatWebEmbed();
    v11 = v9 + *(int *)(v10 + 20);
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    v28 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v28(v11, v12);
    v14 = v9 + *(int *)(v10 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12))
      v28(v14, v12);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v15 = v7 + v8[8];
    v16 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for GenericDataVisualization();
        v28(v15 + *(int *)(v17 + 20), v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v18 = v7 + v8[9];
    sub_1BA6C5A68();
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  }

  swift_bridgeObjectRelease();
  v22 = a1 + v4[18];
  v23 = sub_1BB871E24();
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v25 = a1 + a2[5];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v25 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = a1 + a2[6];
  if (*(_QWORD *)(v26 + 24))
    __swift_destroy_boxed_opaque_existential_1(v26);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatPluginData(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  const void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  int *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t *, uint64_t, uint64_t);
  uint64_t v51;
  int EnumCaseMultiPayload;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  char *v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  _QWORD *__dst;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  int *v109;
  unsigned int (*v111)(_QWORD *, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  void *v114;
  _QWORD *v115;
  int *v116;
  _QWORD *v117;

  v3 = a2;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)v3 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)v3 + v6[6]);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)v3 + v6[7]);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)v3 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)v3 + v6[9]);
  *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)v3 + v6[10]);
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)v3 + v6[11]);
  v12 = v6[12];
  v114 = *(void **)((char *)v3 + v12);
  *(_QWORD *)((char *)a1 + v12) = v114;
  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)v3 + v6[13]);
  v109 = v6;
  v13 = v6[14];
  v14 = a1;
  v117 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)v3 + v13);
  v16 = type metadata accessor for FormatWebEmbed.Resolved();
  v108 = *(_QWORD *)(v16 - 8);
  v111 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v108 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v15;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v18 = v114;
  swift_unknownObjectRetain();
  if (v111(v15, 1, v16))
  {
    v19 = v14;
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v117, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v21 = v109;
    v22 = a3;
  }
  else
  {
    v107 = v14;
    v23 = v15[1];
    *v117 = *v15;
    v117[1] = v23;
    v115 = v15;
    v116 = (int *)v16;
    v24 = *(int *)(v16 + 20);
    v25 = (_QWORD *)((char *)v117 + v24);
    v26 = (char *)v15 + v24;
    v27 = *(_QWORD *)((char *)v15 + v24 + 8);
    *v25 = *(_QWORD *)v26;
    v25[1] = v27;
    v28 = (int *)type metadata accessor for FormatWebEmbed();
    v29 = v28[5];
    v30 = (char *)v25 + v29;
    v112 = &v26[v29];
    v31 = sub_1BB86C67C();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v30, v112, v31);
    v34 = v28[6];
    v35 = (char *)v25 + v34;
    v36 = &v26[v34];
    v103 = v33;
    v104 = v31;
    v106 = v3;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v26[v34], 1, v31))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v33(v35, v36, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
    }
    *(_QWORD *)((char *)v25 + v28[7]) = *(_QWORD *)&v26[v28[7]];
    v38 = v28[8];
    v39 = (_QWORD *)((char *)v25 + v38);
    v40 = &v26[v38];
    v41 = *((_QWORD *)v40 + 1);
    *v39 = *(_QWORD *)v40;
    v39[1] = v41;
    v42 = v28[9];
    v43 = (_QWORD *)((char *)v25 + v42);
    v44 = &v26[v42];
    v45 = *((_QWORD *)v44 + 1);
    *v43 = *(_QWORD *)v44;
    v43[1] = v45;
    *(_QWORD *)((char *)v25 + v28[10]) = *(_QWORD *)&v26[v28[10]];
    *(_QWORD *)((char *)v25 + v28[11]) = *(_QWORD *)&v26[v28[11]];
    *(_QWORD *)((char *)v25 + v28[12]) = *(_QWORD *)&v26[v28[12]];
    *(_QWORD *)((char *)v117 + v116[6]) = *(_QWORD *)((char *)v115 + v116[6]);
    *(_QWORD *)((char *)v117 + v116[7]) = *(_QWORD *)((char *)v115 + v116[7]);
    v46 = v116[8];
    __dst = (_QWORD *)((char *)v117 + v46);
    v47 = (_QWORD *)((char *)v115 + v46);
    v48 = type metadata accessor for WebEmbedDataVisualization();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v49 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v50(v47, 1, v48))
    {
      v3 = v106;
      v19 = v107;
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      v21 = v109;
      v22 = a3;
    }
    else
    {
      v113 = v49;
      v3 = v106;
      v19 = v107;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v53 = *v47;
      v21 = v109;
      v22 = a3;
      if (EnumCaseMultiPayload == 1)
      {
        v54 = v47[1];
        *__dst = v53;
        __dst[1] = v54;
        v55 = type metadata accessor for GenericDataVisualization();
        v56 = *(int *)(v55 + 20);
        v57 = (char *)__dst + v56;
        v102 = (char *)v47 + v56;
        swift_bridgeObjectRetain();
        v103(v57, v102, v104);
        *(_QWORD *)((char *)__dst + *(int *)(v55 + 24)) = *(uint64_t *)((char *)v47 + *(int *)(v55 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *__dst = v53;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v113 + 56))(__dst, 0, 1, v48);
    }
    v58 = v116[9];
    v59 = (char *)v117 + v58;
    v60 = (char *)v115 + v58;
    sub_1BA6C5A68();
    v62 = v61;
    v63 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v61))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v59, v60, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v59, 0, 1, v62);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v108 + 56))(v117, 0, 1, v116);
  }
  v65 = v21[15];
  v66 = *(void **)((char *)v3 + v65);
  *(_QWORD *)((char *)v19 + v65) = v66;
  *((_BYTE *)v19 + v21[16]) = *((_BYTE *)v3 + v21[16]);
  *(_QWORD *)((char *)v19 + v21[17]) = *(_QWORD *)((char *)v3 + v21[17]);
  v67 = v21[18];
  v68 = v19;
  v69 = (char *)v19 + v67;
  v70 = (char *)v3 + v67;
  v71 = sub_1BB871E24();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  v74 = v66;
  swift_bridgeObjectRetain();
  if (v73(v70, 1, v71))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  v76 = v22[5];
  v77 = (uint64_t)v68 + v76;
  v78 = (char *)v3 + v76;
  v79 = *(void **)((char *)v3 + v76);
  *(_QWORD *)v77 = v79;
  *(_DWORD *)(v77 + 8) = *((_DWORD *)v78 + 2);
  v80 = *((_QWORD *)v78 + 3);
  *(_QWORD *)(v77 + 16) = *((_QWORD *)v78 + 2);
  *(_QWORD *)(v77 + 24) = v80;
  v81 = v78 + 32;
  v82 = *((_QWORD *)v78 + 5);
  v83 = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v82 - 1) >= 3)
  {
    *(_QWORD *)(v77 + 32) = *v81;
    *(_QWORD *)(v77 + 40) = v82;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v77 + 32) = *(_OWORD *)v81;
  }
  *(_BYTE *)(v77 + 48) = v78[48];
  v84 = (void *)*((_QWORD *)v78 + 7);
  v85 = *((_QWORD *)v78 + 8);
  *(_QWORD *)(v77 + 56) = v84;
  *(_QWORD *)(v77 + 64) = v85;
  *(_QWORD *)(v77 + 72) = *((_QWORD *)v78 + 9);
  v86 = v22[6];
  v87 = (uint64_t)v68 + v86;
  v88 = (char *)v3 + v86;
  v89 = *(_QWORD *)((char *)v3 + v86 + 24);
  v90 = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v89)
  {
    v91 = *((_QWORD *)v88 + 4);
    *(_QWORD *)(v87 + 24) = v89;
    *(_QWORD *)(v87 + 32) = v91;
    (**(void (***)(uint64_t, char *, uint64_t))(v89 - 8))(v87, v88, v89);
  }
  else
  {
    v92 = *((_OWORD *)v88 + 1);
    *(_OWORD *)v87 = *(_OWORD *)v88;
    *(_OWORD *)(v87 + 16) = v92;
    *(_QWORD *)(v87 + 32) = *((_QWORD *)v88 + 4);
  }
  v93 = v22[8];
  *((_BYTE *)v68 + v22[7]) = *((_BYTE *)v3 + v22[7]);
  v94 = *(void **)((char *)v3 + v93);
  *(_QWORD *)((char *)v68 + v93) = v94;
  v95 = v22[10];
  *(_QWORD *)((char *)v68 + v22[9]) = *(_QWORD *)((char *)v3 + v22[9]);
  v96 = (uint64_t)v68 + v95;
  v97 = (char *)v3 + v95;
  v98 = *(_QWORD *)v97;
  LOBYTE(v97) = v97[8];
  *(_QWORD *)v96 = v98;
  *(_BYTE *)(v96 + 8) = (_BYTE)v97;
  v99 = v22[12];
  *((_BYTE *)v68 + v22[11]) = *((_BYTE *)v3 + v22[11]);
  *((_BYTE *)v68 + v99) = *((_BYTE *)v3 + v99);
  v100 = v94;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v68;
}

_QWORD *assignWithCopy for FormatPluginData(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(void);
  int v49;
  uint64_t v50;
  size_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int *v63;
  _QWORD *v64;
  _QWORD *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v93;
  int v94;
  uint64_t (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  int EnumCaseMultiPayload;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  _QWORD *v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(char *, uint64_t, uint64_t);
  int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  void *v132;
  void *v133;
  id v134;
  unint64_t v135;
  void *v136;
  void *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  void *v146;
  void *v147;
  id v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  void (*v154)(char *, char *, uint64_t);
  uint64_t v155;
  _QWORD *__dst;
  uint64_t v157;
  void (*v158)(char *, char *, uint64_t);
  char *v159;
  char *v160;
  uint64_t v161;
  _QWORD *v162;
  int *v163;
  uint64_t v164;
  unsigned int (*v165)(_QWORD *, uint64_t, uint64_t);
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *__srca;
  void *__src;
  int *__srcb;
  int *__srcc;
  int *v174;
  int *v175;
  int *v176;
  int *v177;
  _QWORD *v178;
  _QWORD *v179;
  _QWORD *v180;
  _QWORD *v181;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v11 = v6[12];
  v12 = *(void **)((char *)a1 + v11);
  v13 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v13;
  v14 = v13;

  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v15 = v6[14];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = type metadata accessor for FormatWebEmbed.Resolved();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v175 = a3;
    *v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v177 = (int *)v18;
    v179 = v17;
    v37 = *(int *)(v18 + 20);
    v181 = v16;
    v38 = (_QWORD *)((char *)v16 + v37);
    v39 = (char *)v17 + v37;
    *v38 = *(_QWORD *)((char *)v17 + v37);
    v38[1] = *(_QWORD *)((char *)v17 + v37 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v40 = (int *)type metadata accessor for FormatWebEmbed();
    v41 = v40[5];
    v42 = (char *)v38 + v41;
    v43 = &v39[v41];
    v44 = sub_1BB86C67C();
    v45 = *(_QWORD *)(v44 - 8);
    v158 = *(void (**)(char *, char *, uint64_t))(v45 + 24);
    v158(v42, v43, v44);
    v46 = v40[6];
    v47 = &v39[v46];
    v161 = v45;
    v48 = *(uint64_t (**)(void))(v45 + 48);
    v167 = (char *)v38 + v46;
    LODWORD(v43) = v48();
    v164 = v44;
    v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(v47, 1, v44);
    if ((_DWORD)v43)
    {
      if (v49)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v51 = *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64);
        v52 = v167;
LABEL_19:
        memcpy(v52, v47, v51);
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v167, v47, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v167, 0, 1, v44);
    }
    else
    {
      if (v49)
      {
        (*(void (**)(char *, uint64_t))(v161 + 8))(v167, v44);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v51 = *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64);
        v52 = v167;
        goto LABEL_19;
      }
      v158(v167, v47, v44);
    }
LABEL_28:
    *(_QWORD *)((char *)v38 + v40[7]) = *(_QWORD *)&v39[v40[7]];
    swift_retain();
    swift_release();
    v81 = v40[8];
    v82 = (_QWORD *)((char *)v38 + v81);
    v83 = &v39[v81];
    *v82 = *(_QWORD *)v83;
    v82[1] = *((_QWORD *)v83 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v84 = v40[9];
    v85 = (_QWORD *)((char *)v38 + v84);
    v86 = &v39[v84];
    *v85 = *(_QWORD *)v86;
    v85[1] = *((_QWORD *)v86 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v38 + v40[10]) = *(_QWORD *)&v39[v40[10]];
    *(_QWORD *)((char *)v38 + v40[11]) = *(_QWORD *)&v39[v40[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v38 + v40[12]) = *(_QWORD *)&v39[v40[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v181 + v177[6]) = *(_QWORD *)((char *)v179 + v177[6]);
    swift_retain();
    swift_release();
    *(_QWORD *)((char *)v181 + v177[7]) = *(_QWORD *)((char *)v179 + v177[7]);
    swift_retain();
    swift_release();
    v87 = v177[8];
    v88 = (_QWORD *)((char *)v181 + v87);
    v89 = (_QWORD *)((char *)v179 + v87);
    v90 = type metadata accessor for WebEmbedDataVisualization();
    v91 = *(_QWORD *)(v90 - 8);
    v92 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v91 + 48);
    v93 = v88;
    LODWORD(v88) = v92(v88, 1, v90);
    v94 = v92(v89, 1, v90);
    if ((_DWORD)v88)
    {
      if (!v94)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v98 = v93;
        *v93 = *v89;
        if (EnumCaseMultiPayload == 1)
        {
          v93[1] = v89[1];
          v99 = type metadata accessor for GenericDataVisualization();
          v100 = *(int *)(v99 + 20);
          v168 = (char *)v93 + v100;
          __srcb = (int *)v99;
          v159 = (char *)v89 + v100;
          v101 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
          swift_bridgeObjectRetain();
          v101(v168, v159, v164);
          v98 = v93;
          *(_QWORD *)((char *)v93 + __srcb[6]) = *(_QWORD *)((char *)v89 + __srcb[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v98, 0, 1, v90);
        goto LABEL_42;
      }
      v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    else
    {
      if (!v94)
      {
        v102 = v181;
        if (a1 != a2)
        {
          sub_1BA4A2E80((uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v103 = swift_getEnumCaseMultiPayload();
          *v93 = *v89;
          if (v103 == 1)
          {
            v93[1] = v89[1];
            v104 = type metadata accessor for GenericDataVisualization();
            v105 = *(int *)(v104 + 20);
            v169 = (char *)v93 + v105;
            __srcc = (int *)v104;
            v160 = (char *)v89 + v105;
            v106 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
            swift_bridgeObjectRetain();
            v106(v169, v160, v164);
            *(_QWORD *)((char *)v93 + __srcc[6]) = *(_QWORD *)((char *)v89 + __srcc[6]);
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_43:
        v107 = v177[9];
        v108 = (char *)v102 + v107;
        v109 = (char *)v179 + v107;
        sub_1BA6C5A68();
        v111 = v110;
        v112 = *(_QWORD *)(v110 - 8);
        v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
        v114 = v113(v108, 1, v110);
        v115 = v113(v109, 1, v111);
        if (v114)
        {
          if (!v115)
          {
            (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v108, v109, v111);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v108, 0, 1, v111);
LABEL_49:
            a3 = v175;
            goto LABEL_50;
          }
        }
        else
        {
          if (!v115)
          {
            (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v108, v109, v111);
            goto LABEL_49;
          }
          (*(void (**)(char *, uint64_t))(v112 + 8))(v108, v111);
        }
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        goto LABEL_49;
      }
      sub_1BA4A2E80((uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v95);
    memcpy(v93, v89, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
LABEL_42:
    v102 = v181;
    goto LABEL_43;
  }
  if (v22)
  {
    v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v23);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_50;
  }
  v163 = v6;
  v157 = v19;
  v174 = a3;
  v176 = (int *)v18;
  *v16 = *v17;
  v16[1] = v17[1];
  v25 = *(int *)(v18 + 20);
  v178 = v17;
  v180 = v16;
  v26 = (_QWORD *)((char *)v16 + v25);
  v27 = (char *)v17 + v25;
  *v26 = *(_QWORD *)((char *)v17 + v25);
  v26[1] = *(_QWORD *)((char *)v17 + v25 + 8);
  v28 = (int *)type metadata accessor for FormatWebEmbed();
  v29 = v28[5];
  v166 = &v27[v29];
  __srca = (char *)v26 + v29;
  v30 = sub_1BB86C67C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(__srca, v166, v30);
  v33 = v28[6];
  v34 = (char *)v26 + v33;
  v35 = &v27[v33];
  v154 = v32;
  v155 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v27[v33], 1, v30))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v32(v34, v35, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
  }
  v6 = v163;
  *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)&v27[v28[7]];
  v53 = v28[8];
  v54 = (_QWORD *)((char *)v26 + v53);
  v55 = &v27[v53];
  *v54 = *(_QWORD *)v55;
  v54[1] = *((_QWORD *)v55 + 1);
  v56 = v28[9];
  v57 = (_QWORD *)((char *)v26 + v56);
  v58 = &v27[v56];
  *v57 = *(_QWORD *)v58;
  v57[1] = *((_QWORD *)v58 + 1);
  *(_QWORD *)((char *)v26 + v28[10]) = *(_QWORD *)&v27[v28[10]];
  *(_QWORD *)((char *)v26 + v28[11]) = *(_QWORD *)&v27[v28[11]];
  *(_QWORD *)((char *)v26 + v28[12]) = *(_QWORD *)&v27[v28[12]];
  *(_QWORD *)((char *)v180 + v176[6]) = *(_QWORD *)((char *)v178 + v176[6]);
  *(_QWORD *)((char *)v180 + v176[7]) = *(_QWORD *)((char *)v178 + v176[7]);
  v59 = v176[8];
  __dst = (_QWORD *)((char *)v180 + v59);
  v162 = (_QWORD *)((char *)v178 + v59);
  v60 = type metadata accessor for WebEmbedDataVisualization();
  v61 = *(_QWORD **)(v60 - 8);
  v165 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v61[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v165(v162, 1, v60))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v162, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    a3 = v174;
    v63 = v176;
    v64 = v178;
    v65 = v180;
  }
  else
  {
    __src = v61;
    v66 = swift_getEnumCaseMultiPayload();
    *__dst = *v162;
    if (v66 == 1)
    {
      __dst[1] = v162[1];
      v67 = type metadata accessor for GenericDataVisualization();
      v68 = *(int *)(v67 + 20);
      v69 = (char *)__dst + v68;
      v70 = v60;
      v71 = (char *)v162 + v68;
      swift_bridgeObjectRetain();
      v72 = v71;
      v60 = v70;
      v154(v69, v72, v155);
      *(_QWORD *)((char *)__dst + *(int *)(v67 + 24)) = *(_QWORD *)((char *)v162 + *(int *)(v67 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    a3 = v174;
    v63 = v176;
    v64 = v178;
    v65 = v180;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__src + 7))(__dst, 0, 1, v60);
  }
  v74 = v63[9];
  v75 = (char *)v65 + v74;
  v76 = (char *)v64 + v74;
  sub_1BA6C5A68();
  v78 = v77;
  v79 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v77))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v76, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v157 + 56))(v65, 0, 1, v63);
LABEL_50:
  v117 = v6[15];
  v118 = *(void **)((char *)a1 + v117);
  v119 = *(void **)((char *)a2 + v117);
  *(_QWORD *)((char *)a1 + v117) = v119;
  v120 = v119;

  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121 = v6[18];
  v122 = (char *)a1 + v121;
  v123 = (char *)a2 + v121;
  v124 = sub_1BB871E24();
  v125 = *(_QWORD *)(v124 - 8);
  v126 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
  LODWORD(v118) = v126(v122, 1, v124);
  v127 = v126(v123, 1, v124);
  if ((_DWORD)v118)
  {
    if (!v127)
    {
      (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v122, v123, v124);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  if (v127)
  {
    (*(void (**)(char *, uint64_t))(v125 + 8))(v122, v124);
LABEL_55:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_56;
  }
  (*(void (**)(char *, char *, uint64_t))(v125 + 24))(v122, v123, v124);
LABEL_56:
  v129 = a3[5];
  v130 = (char *)a1 + v129;
  v131 = (char *)a2 + v129;
  v132 = *(void **)((char *)a2 + v129);
  v133 = *(void **)v130;
  *(_QWORD *)v130 = v132;
  v134 = v132;

  v130[8] = v131[8];
  v130[9] = v131[9];
  v130[10] = v131[10];
  v130[11] = v131[11];
  *((_QWORD *)v130 + 2) = *((_QWORD *)v131 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v130 + 3) = *((_QWORD *)v131 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v135 = *((_QWORD *)v131 + 5) - 1;
  if ((unint64_t)(*((_QWORD *)v130 + 5) - 1) < 3)
  {
    if (v135 >= 3)
    {
      *((_QWORD *)v130 + 4) = *((_QWORD *)v131 + 4);
      *((_QWORD *)v130 + 5) = *((_QWORD *)v131 + 5);
      swift_bridgeObjectRetain();
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if (v135 < 3)
  {
    sub_1BA4A2E80((uint64_t)(v130 + 32), (uint64_t (*)(_QWORD))sub_1BA76D834);
LABEL_61:
    *((_OWORD *)v130 + 2) = *((_OWORD *)v131 + 2);
    goto LABEL_63;
  }
  *((_QWORD *)v130 + 4) = *((_QWORD *)v131 + 4);
  *((_QWORD *)v130 + 5) = *((_QWORD *)v131 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_63:
  v130[48] = v131[48];
  v136 = (void *)*((_QWORD *)v130 + 7);
  v137 = (void *)*((_QWORD *)v131 + 7);
  *((_QWORD *)v130 + 7) = v137;
  v138 = v137;

  *((_QWORD *)v130 + 8) = *((_QWORD *)v131 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v130 + 9) = *((_QWORD *)v131 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139 = a3[6];
  v140 = (uint64_t)a1 + v139;
  v141 = (char *)a2 + v139;
  v142 = *(_QWORD *)((char *)a2 + v139 + 24);
  if (!*(_QWORD *)((char *)a1 + v139 + 24))
  {
    if (v142)
    {
      *(_QWORD *)(v140 + 24) = v142;
      *(_QWORD *)(v140 + 32) = *((_QWORD *)v141 + 4);
      (**(void (***)(uint64_t, char *))(v142 - 8))(v140, v141);
      goto LABEL_70;
    }
LABEL_69:
    v143 = *(_OWORD *)v141;
    v144 = *((_OWORD *)v141 + 1);
    *(_QWORD *)(v140 + 32) = *((_QWORD *)v141 + 4);
    *(_OWORD *)v140 = v143;
    *(_OWORD *)(v140 + 16) = v144;
    goto LABEL_70;
  }
  if (!v142)
  {
    __swift_destroy_boxed_opaque_existential_1(v140);
    goto LABEL_69;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v140, (uint64_t *)v141);
LABEL_70:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v145 = a3[8];
  v146 = *(void **)((char *)a1 + v145);
  v147 = *(void **)((char *)a2 + v145);
  *(_QWORD *)((char *)a1 + v145) = v147;
  v148 = v147;

  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v149 = a3[10];
  v150 = (char *)a1 + v149;
  v151 = (char *)a2 + v149;
  v152 = *(_QWORD *)v151;
  LOBYTE(v151) = v151[8];
  *(_QWORD *)v150 = v152;
  v150[8] = (char)v151;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

_OWORD *initializeWithTake for FormatPluginData(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int *v30;
  _OWORD *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  _OWORD *v74;
  uint64_t v75;
  int *v76;
  _OWORD *v77;
  int *v78;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  *(_QWORD *)((char *)a1 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  v11 = v6[14];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for FormatWebEmbed.Resolved();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v75 = v15;
    v76 = a3;
    *v12 = *v13;
    v77 = v12;
    v78 = (int *)v14;
    v17 = *(int *)(v14 + 20);
    v18 = (char *)v12 + v17;
    v74 = v13;
    v19 = (char *)v13 + v17;
    *(_OWORD *)((char *)v12 + v17) = *(_OWORD *)((char *)v13 + v17);
    v20 = (int *)type metadata accessor for FormatWebEmbed();
    v21 = v20[5];
    v22 = &v18[v21];
    v23 = &v19[v21];
    v24 = sub_1BB86C67C();
    v25 = *(_QWORD *)(v24 - 8);
    v73 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v73(v22, v23, v24);
    v26 = v20[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    v72 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(&v19[v26], 1, v24))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v78;
      v32 = v73;
      v31 = v74;
    }
    else
    {
      v33 = v28;
      v32 = v73;
      v73(v27, v33, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v24);
      v30 = v78;
      v31 = v74;
    }
    *(_QWORD *)&v18[v20[7]] = *(_QWORD *)&v19[v20[7]];
    *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
    *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
    *(_QWORD *)&v18[v20[10]] = *(_QWORD *)&v19[v20[10]];
    *(_QWORD *)&v18[v20[11]] = *(_QWORD *)&v19[v20[11]];
    *(_QWORD *)&v18[v20[12]] = *(_QWORD *)&v19[v20[12]];
    *(_QWORD *)((char *)v77 + v30[6]) = *(_QWORD *)((char *)v31 + v30[6]);
    *(_QWORD *)((char *)v77 + v30[7]) = *(_QWORD *)((char *)v31 + v30[7]);
    v34 = v30[8];
    v35 = (_OWORD *)((char *)v77 + v34);
    v36 = (_OWORD *)((char *)v31 + v34);
    v37 = type metadata accessor for WebEmbedDataVisualization();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v35 = *v36;
        v40 = type metadata accessor for GenericDataVisualization();
        v41 = v32;
        v42 = v40;
        v41((char *)v35 + *(int *)(v40 + 20), (char *)v36 + *(int *)(v40 + 20), v72);
        *(_QWORD *)((char *)v35 + *(int *)(v42 + 24)) = *(_QWORD *)((char *)v36 + *(int *)(v42 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v35, v36, *(_QWORD *)(v38 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v43 = v78[9];
    v44 = (char *)v77 + v43;
    v45 = (char *)v31 + v43;
    sub_1BA6C5A68();
    v47 = v46;
    v48 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v45, 1, v46))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v44, v45, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
    }
    a3 = v76;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v75 + 56))(v77, 0, 1, v78);
  }
  *(_QWORD *)((char *)a1 + v6[15]) = *(_QWORD *)((char *)a2 + v6[15]);
  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v50 = v6[18];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = sub_1BB871E24();
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v56 = a3[5];
  v57 = a3[6];
  v58 = (_OWORD *)((char *)a1 + v56);
  v59 = (_OWORD *)((char *)a2 + v56);
  v60 = v59[4];
  v61 = v59[2];
  v58[3] = v59[3];
  v58[4] = v60;
  v62 = v59[1];
  *v58 = *v59;
  v58[1] = v62;
  v58[2] = v61;
  v63 = (char *)a1 + v57;
  v64 = (char *)a2 + v57;
  v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
  v66 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v66) = *(_QWORD *)((char *)a2 + v66);
  v67 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  *(_QWORD *)v68 = *(_QWORD *)v69;
  v68[8] = v69[8];
  v70 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v70) = *((_BYTE *)a2 + v70);
  return a1;
}

_QWORD *assignWithTake for FormatPluginData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  _QWORD *v18;
  uint64_t (*v19)(_QWORD *, uint64_t, int *);
  int v20;
  int v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t (*v52)(void);
  int v53;
  uint64_t v54;
  size_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(_OWORD *, uint64_t, uint64_t);
  int v92;
  int v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  void *v123;
  _OWORD *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  char *v128;
  __int128 v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  char *v142;
  void *__src;
  int *v144;
  char *v145;
  int *v146;
  int *v147;
  int *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for FormatContent.Resolved();
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
  swift_unknownObjectRelease();
  v12 = v7[12];
  v13 = *(void **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);

  *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
  swift_unknownObjectRelease();
  v14 = v7[14];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v18 = (_QWORD *)*((_QWORD *)v17 - 1);
  v19 = (uint64_t (*)(_QWORD *, uint64_t, int *))v18[6];
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v148 = a3;
    v39 = v16[1];
    *v15 = *v16;
    v15[1] = v39;
    swift_bridgeObjectRelease();
    v40 = v17[5];
    v150 = v15;
    v152 = v16;
    v41 = (_QWORD *)((char *)v15 + v40);
    v42 = (char *)v16 + v40;
    v43 = *(_QWORD *)((char *)v16 + v40 + 8);
    *v41 = *(_QWORD *)((char *)v16 + v40);
    v41[1] = v43;
    swift_bridgeObjectRelease();
    v44 = type metadata accessor for FormatWebEmbed();
    v45 = *(int *)(v44 + 20);
    v145 = (char *)v41 + v45;
    v46 = &v42[v45];
    v47 = sub_1BB86C67C();
    v48 = *(_QWORD *)(v47 - 8);
    v138 = *(void (**)(char *, char *, uint64_t))(v48 + 40);
    v138(v145, v46, v47);
    v146 = (int *)v44;
    v49 = *(int *)(v44 + 24);
    v50 = v42;
    v51 = &v42[v49];
    v139 = v48;
    v52 = *(uint64_t (**)(void))(v48 + 48);
    v142 = (char *)v41 + v49;
    LODWORD(v42) = v52();
    v140 = v47;
    v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v51, 1, v47);
    if ((_DWORD)v42)
    {
      if (v53)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v55 = *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64);
        v56 = v142;
LABEL_19:
        memcpy(v56, v51, v55);
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v142, v51, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v142, 0, 1, v47);
    }
    else
    {
      if (v53)
      {
        (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v47);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v55 = *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64);
        v56 = v142;
        goto LABEL_19;
      }
      v138(v142, v51, v47);
    }
LABEL_28:
    *(_QWORD *)((char *)v41 + v146[7]) = *(_QWORD *)&v50[v146[7]];
    swift_release();
    v76 = v146[8];
    v77 = (_QWORD *)((char *)v41 + v76);
    v78 = &v50[v76];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    *v77 = v80;
    v77[1] = v79;
    swift_bridgeObjectRelease();
    v81 = v146[9];
    v82 = (_QWORD *)((char *)v41 + v81);
    v83 = &v50[v81];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    *v82 = v85;
    v82[1] = v84;
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v41 + v146[10]) = *(_QWORD *)&v50[v146[10]];
    *(_QWORD *)((char *)v41 + v146[11]) = *(_QWORD *)&v50[v146[11]];
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v41 + v146[12]) = *(_QWORD *)&v50[v146[12]];
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v150 + v17[6]) = *(_QWORD *)((char *)v152 + v17[6]);
    swift_release();
    *(_QWORD *)((char *)v150 + v17[7]) = *(_QWORD *)((char *)v152 + v17[7]);
    swift_release();
    v86 = v17[8];
    v87 = (_OWORD *)((char *)v150 + v86);
    v88 = (_OWORD *)((char *)v152 + v86);
    v89 = type metadata accessor for WebEmbedDataVisualization();
    v90 = *(_QWORD *)(v89 - 8);
    v91 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v90 + 48);
    v92 = v91(v87, 1, v89);
    v93 = v91(v88, 1, v89);
    if (v92)
    {
      if (v93)
      {
        v94 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_33:
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v94);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        v96 = v150;
        goto LABEL_41;
      }
      v96 = v150;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v87 = *v88;
        v97 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))((char *)v87 + *(int *)(v97 + 20), (char *)v88 + *(int *)(v97 + 20), v140);
        *(_QWORD *)((char *)v87 + *(int *)(v97 + 24)) = *(_QWORD *)((char *)v88 + *(int *)(v97 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v87, v88, *(_QWORD *)(v90 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
    }
    else
    {
      if (v93)
      {
        sub_1BA4A2E80((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v94 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
        goto LABEL_33;
      }
      v96 = v150;
      if (a1 != a2)
      {
        sub_1BA4A2E80((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v87 = *v88;
          v98 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v139 + 32))((char *)v87 + *(int *)(v98 + 20), (char *)v88 + *(int *)(v98 + 20), v140);
          *(_QWORD *)((char *)v87 + *(int *)(v98 + 24)) = *(_QWORD *)((char *)v88 + *(int *)(v98 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v87, v88, *(_QWORD *)(v90 + 64));
        }
      }
    }
LABEL_41:
    v99 = v17[9];
    v100 = (char *)v96 + v99;
    v101 = (char *)v152 + v99;
    sub_1BA6C5A68();
    v103 = v102;
    v104 = *(_QWORD *)(v102 - 8);
    v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
    v106 = v105(v100, 1, v102);
    v107 = v105(v101, 1, v103);
    if (v106)
    {
      if (!v107)
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v100, v101, v103);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v100, 0, 1, v103);
LABEL_47:
        a3 = v148;
        goto LABEL_48;
      }
    }
    else
    {
      if (!v107)
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 40))(v100, v101, v103);
        goto LABEL_47;
      }
      (*(void (**)(char *, uint64_t))(v104 + 8))(v100, v103);
    }
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_47;
  }
  if (v21)
  {
    v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v22);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_48;
  }
  __src = v18;
  v144 = v17;
  v147 = a3;
  v149 = v15;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v24 = v17[5];
  v25 = (char *)v15 + v24;
  v151 = v16;
  v26 = (char *)v16 + v24;
  *(_OWORD *)((char *)v15 + v24) = *(_OWORD *)v26;
  v27 = (int *)type metadata accessor for FormatWebEmbed();
  v28 = v27[5];
  v29 = &v25[v28];
  v30 = &v26[v28];
  v31 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v31 - 8);
  v141 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v141(v29, v30, v31);
  v33 = v27[6];
  v34 = &v25[v33];
  v35 = &v26[v33];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v26[v33], 1, v31))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    v37 = v149;
    v38 = v141;
  }
  else
  {
    v57 = v35;
    v38 = v141;
    v141(v34, v57, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
    v37 = v149;
  }
  *(_QWORD *)&v25[v27[7]] = *(_QWORD *)&v26[v27[7]];
  *(_OWORD *)&v25[v27[8]] = *(_OWORD *)&v26[v27[8]];
  *(_OWORD *)&v25[v27[9]] = *(_OWORD *)&v26[v27[9]];
  *(_QWORD *)&v25[v27[10]] = *(_QWORD *)&v26[v27[10]];
  *(_QWORD *)&v25[v27[11]] = *(_QWORD *)&v26[v27[11]];
  *(_QWORD *)&v25[v27[12]] = *(_QWORD *)&v26[v27[12]];
  *(_QWORD *)((char *)v37 + v144[6]) = *(_QWORD *)((char *)v151 + v144[6]);
  *(_QWORD *)((char *)v37 + v144[7]) = *(_QWORD *)((char *)v151 + v144[7]);
  v58 = v144[8];
  v59 = (_OWORD *)((char *)v37 + v58);
  v60 = (_OWORD *)((char *)v151 + v58);
  v61 = type metadata accessor for WebEmbedDataVisualization();
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v64 = v144;
    a3 = v147;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v59 = *v60;
      v65 = type metadata accessor for GenericDataVisualization();
      v66 = v38;
      v67 = v65;
      v66((char *)v59 + *(int *)(v65 + 20), (char *)v60 + *(int *)(v65 + 20), v31);
      *(_QWORD *)((char *)v59 + *(int *)(v67 + 24)) = *(_QWORD *)((char *)v60 + *(int *)(v67 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v59, v60, *(_QWORD *)(v62 + 64));
    }
    v64 = v144;
    a3 = v147;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  v69 = v64[9];
  v70 = (char *)v37 + v69;
  v71 = (char *)v151 + v69;
  sub_1BA6C5A68();
  v73 = v72;
  v74 = *(_QWORD *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v71, 1, v72))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v70, v71, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v70, 0, 1, v73);
  }
  (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__src + 7))(v37, 0, 1, v64);
LABEL_48:
  v109 = v7[15];
  v110 = *(void **)((char *)a1 + v109);
  *(_QWORD *)((char *)a1 + v109) = *(_QWORD *)((char *)a2 + v109);

  *((_BYTE *)a1 + v7[16]) = *((_BYTE *)a2 + v7[16]);
  *(_QWORD *)((char *)a1 + v7[17]) = *(_QWORD *)((char *)a2 + v7[17]);
  swift_bridgeObjectRelease();
  v111 = v7[18];
  v112 = (char *)a1 + v111;
  v113 = (char *)a2 + v111;
  v114 = sub_1BB871E24();
  v115 = *(_QWORD *)(v114 - 8);
  v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  v117 = v116(v112, 1, v114);
  v118 = v116(v113, 1, v114);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v112, v113, v114);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  if (v118)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v112, v114);
LABEL_53:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v115 + 40))(v112, v113, v114);
LABEL_54:
  v120 = a3[5];
  v121 = (char *)a1 + v120;
  v122 = (char *)a2 + v120;
  v123 = *(void **)((char *)a1 + v120);
  *(_QWORD *)((char *)a1 + v120) = *(_QWORD *)((char *)a2 + v120);

  v121[8] = v122[8];
  v121[9] = v122[9];
  v121[10] = v122[10];
  v121[11] = v122[11];
  *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v121 + 3) = *((_QWORD *)v122 + 3);
  swift_bridgeObjectRelease();
  v124 = v122 + 32;
  if ((unint64_t)(*((_QWORD *)v121 + 5) - 1) < 3)
  {
LABEL_57:
    *((_OWORD *)v121 + 2) = *v124;
    goto LABEL_59;
  }
  v125 = *((_QWORD *)v122 + 5);
  if ((unint64_t)(v125 - 1) < 3)
  {
    sub_1BA4A2E80((uint64_t)(v121 + 32), (uint64_t (*)(_QWORD))sub_1BA76D834);
    goto LABEL_57;
  }
  *((_QWORD *)v121 + 4) = *(_QWORD *)v124;
  *((_QWORD *)v121 + 5) = v125;
  swift_bridgeObjectRelease();
LABEL_59:
  v121[48] = v122[48];
  v126 = (void *)*((_QWORD *)v121 + 7);
  *((_QWORD *)v121 + 7) = *((_QWORD *)v122 + 7);

  *((_QWORD *)v121 + 8) = *((_QWORD *)v122 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v121 + 9) = *((_QWORD *)v122 + 9);
  swift_bridgeObjectRelease();
  v127 = a3[6];
  v128 = (char *)a1 + v127;
  if (*(_QWORD *)((char *)a1 + v127 + 24))
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v127);
  v129 = *(_OWORD *)((char *)a2 + v127 + 16);
  *(_OWORD *)v128 = *(_OWORD *)((char *)a2 + v127);
  *((_OWORD *)v128 + 1) = v129;
  *((_QWORD *)v128 + 4) = *(_QWORD *)((char *)a2 + v127 + 32);
  v130 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v131 = *(void **)((char *)a1 + v130);
  *(_QWORD *)((char *)a1 + v130) = *(_QWORD *)((char *)a2 + v130);

  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  v132 = a3[10];
  v133 = (char *)a1 + v132;
  v134 = (char *)a2 + v132;
  v135 = *(_QWORD *)v134;
  LOBYTE(v134) = v134[8];
  *(_QWORD *)v133 = v135;
  v133[8] = (char)v134;
  swift_bridgeObjectRelease();
  v136 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v136) = *((_BYTE *)a2 + v136);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPluginData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF7D320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FormatContent.Resolved();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPluginData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF7D3A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatContent.Resolved();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BAF7D420()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatContent.Resolved();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FeedGroupItem.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
}

uint64_t sub_1BAF7D538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
}

uint64_t FeedGroupItem.hash(into:)()
{
  sub_1BA6CF304();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t FeedGroupItem.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BA6CF304();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF7D5F4()
{
  sub_1BB8745CC();
  sub_1BA6CF304();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF7D64C()
{
  sub_1BA6CF304();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF7D688()
{
  sub_1BB8745CC();
  sub_1BA6CF304();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void FeedGroupItem.debugIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4C2DD8(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)&loc_1BAF7D840 + *((int *)qword_1BAF7DCD0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BAF7D850()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  *(_OWORD *)(v0 + 80) = xmmword_1BB87FC90;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_BYTE *)(v0 + 144) = 0;
  *(_QWORD *)v0 = v5;
  *(_QWORD *)(v0 + 8) = v7;
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 0;
  v8 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = v8;
  v9 = objc_msgSend(v2, sel_identifier);
  v10 = sub_1BB8729A0();
  swift_unknownObjectRelease();

  sub_1BA6A94C4(v0);
  return v10;
}

void FeedGroupItem.debugSourceName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BAF7DE48 + dword_1BAF7E214[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF7DE58()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return 0;
}

void FeedGroupItem.debugTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4C2DD8(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)&loc_1BAF7E33C + dword_1BAF7E80C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF7E34C()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return 0;
}

void FeedGroupItem.debugAssetHandle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BAF7E984 + *((int *)qword_1BAF7ED10 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BAF7E994()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return 0;
}

void FeedGroupItem.debugKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BAF7EE74 + *((int *)qword_1BAF7F1B0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BAF7EE84()
{
  _OWORD *v0;
  uint64_t v1;

  *v0 = xmmword_1BB8D9EE0;
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
}

void FeedGroupItem.debugScoreProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4C2DD8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)&loc_1BAF7F328 + dword_1BAF7F604[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF7F338()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  return 0;
}

uint64_t dispatch thunk of FeedGroupItemType.groupItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for FeedGroupItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BAF7F6B8 + 4 * word_1BB8D9CAA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for FeedGroupItem(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    v2 = (char *)&loc_1BAF80F98 + 4 * word_1BB8D9D0C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for FeedGroupItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  int *v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  _OWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *result;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  char *__dst;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v7 = (int *)type metadata accessor for FeedWeather(0);
      v8 = v7[7];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB87270C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
      v12 = v7[9];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
      v16 = v15;
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v17(v13, v14, v15);
      v18 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v17(&v13[v18[5]], &v14[v18[5]], v16);
      v17(&v13[v18[6]], &v14[v18[6]], v16);
      v17(&v13[v18[7]], &v14[v18[7]], v16);
      *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
      goto LABEL_36;
    case 5u:
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
      v19 = (int *)type metadata accessor for FeedHeadline(0);
      v20 = v19[10];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      *v21 = *((_BYTE *)a2 + v20);
      v21[1] = *((_BYTE *)a2 + v20 + 1);
      v23 = (int *)type metadata accessor for FeedHeadline.State(0);
      v24 = v23[6];
      v25 = &v21[v24];
      v26 = &v22[v24];
      v27 = (int *)type metadata accessor for SharedItem();
      v28 = *((_QWORD *)v27 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
      {
        v29 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v49 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v25, v26, v49);
        v25[v27[5]] = v26[v27[5]];
        *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
        v50 = v27[7];
        v98 = &v25[v50];
        v51 = &v26[v50];
        v52 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v98, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      }
      v21[v23[7]] = v22[v23[7]];
      v21[v23[8]] = v22[v23[8]];
      v21[v23[9]] = v22[v23[9]];
      v21[v23[10]] = v22[v23[10]];
      v53 = v19[11];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      v56 = sub_1BB871B24();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
      v65 = v19[13];
      v66 = *(_QWORD *)((char *)a2 + v65);
      if (v66 == 2)
        v66 = 2;
      *(_QWORD *)((char *)a1 + v65) = v66;
      *(_QWORD *)((char *)a1 + v19[14]) = *(_QWORD *)((char *)a2 + v19[14]);
      goto LABEL_36;
    case 6u:
      v30 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v30;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v31 = (int *)type metadata accessor for FeedWebEmbed();
      v32 = v31[8];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_1BB86C67C();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v37(v33, v34, v35);
      v38 = v31[9];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v96 = v37;
      v97 = v35;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)a2 + v38, 1, v35))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v37(v39, v40, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      *(_QWORD *)((char *)a1 + v31[10]) = *(_QWORD *)((char *)a2 + v31[10]);
      *(_QWORD *)((char *)a1 + v31[11]) = *(_QWORD *)((char *)a2 + v31[11]);
      v59 = v31[12];
      v60 = (_OWORD *)((char *)a1 + v59);
      v61 = (_OWORD *)((char *)a2 + v59);
      v62 = (int *)type metadata accessor for FeedHeadline(0);
      v63 = *((_QWORD *)v62 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v63 + 48))(v61, 1, v62))
      {
        sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v93 = v63;
        v94 = v31;
        *v60 = *v61;
        *((_QWORD *)v60 + 2) = *((_QWORD *)v61 + 2);
        *((_BYTE *)v60 + 24) = *((_BYTE *)v61 + 24);
        *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
        *(_OWORD *)((char *)v60 + 40) = *(_OWORD *)((char *)v61 + 40);
        *((_BYTE *)v60 + 56) = *((_BYTE *)v61 + 56);
        v67 = v62[10];
        v68 = (char *)v60 + v67;
        v69 = (char *)v61 + v67;
        *v68 = *((_BYTE *)v61 + v67);
        v68[1] = *((_BYTE *)v61 + v67 + 1);
        v70 = (int *)type metadata accessor for FeedHeadline.State(0);
        v71 = v70[6];
        __dst = &v68[v71];
        v72 = &v69[v71];
        v73 = (int *)type metadata accessor for SharedItem();
        v92 = *((_QWORD *)v73 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v92 + 48))(v72, 1, v73))
        {
          v74 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          v75 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(__dst, v72, v75);
          __dst[v73[5]] = v72[v73[5]];
          *(_QWORD *)&__dst[v73[6]] = *(_QWORD *)&v72[v73[6]];
          v96(&__dst[v73[7]], &v72[v73[7]], v97);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v92 + 56))(__dst, 0, 1, v73);
        }
        v68[v70[7]] = v69[v70[7]];
        v68[v70[8]] = v69[v70[8]];
        v68[v70[9]] = v69[v70[9]];
        v68[v70[10]] = v69[v70[10]];
        v76 = v62[11];
        v77 = (char *)v60 + v76;
        v78 = (char *)v61 + v76;
        v79 = sub_1BB871B24();
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
        }
        v31 = v94;
        *(_OWORD *)((char *)v60 + v62[12]) = *(_OWORD *)((char *)v61 + v62[12]);
        v82 = v62[13];
        v83 = *(_QWORD *)((char *)v61 + v82);
        if (v83 == 2)
          v83 = 2;
        *(_QWORD *)((char *)v60 + v82) = v83;
        *(_QWORD *)((char *)v60 + v62[14]) = *(_QWORD *)((char *)v61 + v62[14]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v93 + 56))(v60, 0, 1, v62);
      }
      v84 = v31[13];
      v85 = (_OWORD *)((char *)a1 + v84);
      v86 = (_OWORD *)((char *)a2 + v84);
      v87 = type metadata accessor for WebEmbedDataVisualization();
      v88 = *(_QWORD *)(v87 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v85 = *v86;
          v90 = type metadata accessor for GenericDataVisualization();
          v96((char *)v85 + *(int *)(v90 + 20), (char *)v86 + *(int *)(v90 + 20), v97);
          *(_QWORD *)((char *)v85 + *(int *)(v90 + 24)) = *(_QWORD *)((char *)v86 + *(int *)(v90 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v85, v86, *(_QWORD *)(v88 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
      }
      *((_BYTE *)a1 + v31[14]) = *((_BYTE *)a2 + v31[14]);
      goto LABEL_36;
    case 0xBu:
      v42 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v42;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v43 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)((char *)a1 + v43) = *(_QWORD *)((char *)a2 + v43);
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v44 = (char *)&loc_1BAF82CEC + 4 * word_1BB8D9D38[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0xCu:
      *a1 = *a2;
      v45 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      v48 = sub_1BB871E24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for FeedGroupItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  int *v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  _OWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *result;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  char *__dst;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        v7 = (int *)type metadata accessor for FeedWeather(0);
        v8 = v7[7];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1BB87270C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
        v12 = v7[9];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
        v16 = v15;
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v17(v13, v14, v15);
        v18 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v17(&v13[v18[5]], &v14[v18[5]], v16);
        v17(&v13[v18[6]], &v14[v18[6]], v16);
        v17(&v13[v18[7]], &v14[v18[7]], v16);
        *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
        goto LABEL_37;
      case 5u:
        *a1 = *a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
        v19 = (int *)type metadata accessor for FeedHeadline(0);
        v20 = v19[10];
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        *v21 = *((_BYTE *)a2 + v20);
        v21[1] = *((_BYTE *)a2 + v20 + 1);
        v23 = (int *)type metadata accessor for FeedHeadline.State(0);
        v24 = v23[6];
        v25 = &v21[v24];
        v26 = &v22[v24];
        v27 = (int *)type metadata accessor for SharedItem();
        v28 = *((_QWORD *)v27 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
        {
          v29 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v49 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v25, v26, v49);
          v25[v27[5]] = v26[v27[5]];
          *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
          v50 = v27[7];
          v98 = &v25[v50];
          v51 = &v26[v50];
          v52 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v98, v51, v52);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
        }
        v21[v23[7]] = v22[v23[7]];
        v21[v23[8]] = v22[v23[8]];
        v21[v23[9]] = v22[v23[9]];
        v21[v23[10]] = v22[v23[10]];
        v53 = v19[11];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = sub_1BB871B24();
        v57 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        }
        *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
        v65 = v19[13];
        v66 = *(_QWORD *)((char *)a2 + v65);
        if (v66 == 2)
          v66 = 2;
        *(_QWORD *)((char *)a1 + v65) = v66;
        *(_QWORD *)((char *)a1 + v19[14]) = *(_QWORD *)((char *)a2 + v19[14]);
        goto LABEL_37;
      case 6u:
        v30 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v30;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v31 = (int *)type metadata accessor for FeedWebEmbed();
        v32 = v31[8];
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_1BB86C67C();
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
        v37(v33, v34, v35);
        v38 = v31[9];
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v96 = v37;
        v97 = v35;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)a2 + v38, 1, v35))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v37(v39, v40, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
        }
        *(_QWORD *)((char *)a1 + v31[10]) = *(_QWORD *)((char *)a2 + v31[10]);
        *(_QWORD *)((char *)a1 + v31[11]) = *(_QWORD *)((char *)a2 + v31[11]);
        v59 = v31[12];
        v60 = (_OWORD *)((char *)a1 + v59);
        v61 = (_OWORD *)((char *)a2 + v59);
        v62 = (int *)type metadata accessor for FeedHeadline(0);
        v63 = *((_QWORD *)v62 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v63 + 48))(v61, 1, v62))
        {
          sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = v63;
          v94 = v31;
          *v60 = *v61;
          *((_QWORD *)v60 + 2) = *((_QWORD *)v61 + 2);
          *((_BYTE *)v60 + 24) = *((_BYTE *)v61 + 24);
          *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
          *(_OWORD *)((char *)v60 + 40) = *(_OWORD *)((char *)v61 + 40);
          *((_BYTE *)v60 + 56) = *((_BYTE *)v61 + 56);
          v67 = v62[10];
          v68 = (char *)v60 + v67;
          v69 = (char *)v61 + v67;
          *v68 = *((_BYTE *)v61 + v67);
          v68[1] = *((_BYTE *)v61 + v67 + 1);
          v70 = (int *)type metadata accessor for FeedHeadline.State(0);
          v71 = v70[6];
          __dst = &v68[v71];
          v72 = &v69[v71];
          v73 = (int *)type metadata accessor for SharedItem();
          v92 = *((_QWORD *)v73 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v92 + 48))(v72, 1, v73))
          {
            v74 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          }
          else
          {
            v75 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(__dst, v72, v75);
            __dst[v73[5]] = v72[v73[5]];
            *(_QWORD *)&__dst[v73[6]] = *(_QWORD *)&v72[v73[6]];
            v96(&__dst[v73[7]], &v72[v73[7]], v97);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v92 + 56))(__dst, 0, 1, v73);
          }
          v68[v70[7]] = v69[v70[7]];
          v68[v70[8]] = v69[v70[8]];
          v68[v70[9]] = v69[v70[9]];
          v68[v70[10]] = v69[v70[10]];
          v76 = v62[11];
          v77 = (char *)v60 + v76;
          v78 = (char *)v61 + v76;
          v79 = sub_1BB871B24();
          v80 = *(_QWORD *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          }
          v31 = v94;
          *(_OWORD *)((char *)v60 + v62[12]) = *(_OWORD *)((char *)v61 + v62[12]);
          v82 = v62[13];
          v83 = *(_QWORD *)((char *)v61 + v82);
          if (v83 == 2)
            v83 = 2;
          *(_QWORD *)((char *)v60 + v82) = v83;
          *(_QWORD *)((char *)v60 + v62[14]) = *(_QWORD *)((char *)v61 + v62[14]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v93 + 56))(v60, 0, 1, v62);
        }
        v84 = v31[13];
        v85 = (_OWORD *)((char *)a1 + v84);
        v86 = (_OWORD *)((char *)a2 + v84);
        v87 = type metadata accessor for WebEmbedDataVisualization();
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
        {
          sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v85 = *v86;
            v90 = type metadata accessor for GenericDataVisualization();
            v96((char *)v85 + *(int *)(v90 + 20), (char *)v86 + *(int *)(v90 + 20), v97);
            *(_QWORD *)((char *)v85 + *(int *)(v90 + 24)) = *(_QWORD *)((char *)v86 + *(int *)(v90 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v85, v86, *(_QWORD *)(v88 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
        }
        *((_BYTE *)a1 + v31[14]) = *((_BYTE *)a2 + v31[14]);
        goto LABEL_37;
      case 0xBu:
        v42 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v42;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v43 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)((char *)a1 + v43) = *(_QWORD *)((char *)a2 + v43);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v44 = (char *)&loc_1BAF83F98 + 4 * word_1BB8D9D4A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0xCu:
        *a1 = *a2;
        v45 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        v46 = (char *)a1 + v45;
        v47 = (char *)a2 + v45;
        v48 = sub_1BB871E24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BAF84EC0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF84EFC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  if (*(_QWORD *)(v0 + 168))
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocObject();
}

uint64_t sub_1BAF84F68()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF84F94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 256) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF85010()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAF85074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BAF8513C + 4 * byte_1BB8D9EF0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF8513C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1BA5193C4(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  *(_QWORD *)(v2 - 80) = 0x3A3A65726F6373;
  *(_QWORD *)(v2 - 72) = 0xE700000000000000;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 - 80);
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  return v4;
}

void sub_1BAF853BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4C2DD8(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BAF8547C + 4 * byte_1BB8D9EF7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF8547C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1BAF85538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4C2DD8(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1BAF85620 + 4 * byte_1BB8D9EFE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF85620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1BA6EA07C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BAF85864@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[8];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v33;

  v27[4] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3AB560, (uint64_t (*)(void))sub_1BAF887B8, (uint64_t)&type metadata for SportsDataVisualizationResponseItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v30 = v3;
  v27[5] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v27 - v4;
  v28 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v28);
  v27[7] = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v27[3] = (char *)v27 - v8;
  MEMORY[0x1E0C80A78](v9);
  v27[6] = (char *)v27 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v27 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v27 - v18;
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v27 - v22;
  v24 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1BAF887B8();
  v29 = v5;
  v25 = v33;
  sub_1BB87468C();
  if (!v25)
  {
    v27[0] = v19;
    v27[1] = v16;
    v27[2] = v13;
    v33 = v23;
    sub_1BAF887FC();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

void sub_1BAF85EC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[20];

  v2 = v1;
  v4 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7670, (uint64_t (*)(void))sub_1BAF887B8, (uint64_t)&type metadata for SportsDataVisualizationResponseItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v13[6] = *(_QWORD *)(v8 - 8);
  v13[7] = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - v9;
  v11 = a1[3];
  v13[4] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1BAF887B8();
  v13[19] = v10;
  sub_1BB8746C8();
  sub_1BA4C2DD8(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
  v12 = (char *)sub_1BAF8602C + 4 * byte_1BB8D9F0C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF8602C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA5193C4(v1, v0, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  *(_BYTE *)(v2 - 160) = 0;
  sub_1BAF88840();
  v3 = *(_QWORD *)(v2 - 168);
  v4 = *(_QWORD *)(v2 - 72);
  v5 = *(_QWORD *)(v2 - 184);
  sub_1BB8741AC();
  if (!v5)
    sub_1BB166FAC(*(_QWORD **)(v2 - 192));
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v4, v3);
}

uint64_t sub_1BAF864C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF86500 + 4 * byte_1BB8D9F13[a1]))(0x535F5354524F5053, 0xEC00000045524F43);
}

uint64_t sub_1BAF86514()
{
  return 0x425F5354524F5053;
}

unint64_t sub_1BAF86538()
{
  return 0xD000000000000010;
}

unint64_t sub_1BAF86554()
{
  return 0xD000000000000011;
}

uint64_t sub_1BAF865A4()
{
  return 0x7079546465626D65;
}

uint64_t sub_1BAF865C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7079546465626D65 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAF86660()
{
  sub_1BAF887B8();
  return sub_1BB874710();
}

uint64_t sub_1BAF86688()
{
  sub_1BAF887B8();
  return sub_1BB87471C();
}

void sub_1BAF866B0(char *a1)
{
  sub_1BB7ED6E0(*a1);
}

void sub_1BAF866BC()
{
  char *v0;

  sub_1BAB07384(0, *v0);
}

void sub_1BAF866C8(uint64_t a1)
{
  char *v1;

  sub_1BA9D0FBC(a1, *v1);
}

void sub_1BAF866D0(uint64_t a1)
{
  char *v1;

  sub_1BAB07384(a1, *v1);
}

uint64_t sub_1BAF866D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF88B60();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF86704@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAF864C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAF8672C()
{
  sub_1BAF88B1C();
  return sub_1BB872D60();
}

uint64_t sub_1BAF86788()
{
  sub_1BAF88B1C();
  return sub_1BB872D0C();
}

uint64_t sub_1BAF867D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAF85864(a1, a2);
}

void sub_1BAF867E8(_QWORD *a1)
{
  sub_1BAF85EC4(a1);
}

uint64_t sub_1BAF867FC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;

  v13[2] = a5;
  v13[1] = a4;
  sub_1BA4CDF6C(0, &qword_1EF2B7690, (uint64_t (*)(void))sub_1BAF88D40, (uint64_t)&type metadata for SportsDataVisualizationResponseDataSource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF88D40();
  sub_1BB8746C8();
  v15 = 0;
  v11 = v13[3];
  sub_1BB87417C();
  if (!v11)
  {
    v14 = 1;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAF8693C(char *a1, char *a2)
{
  return sub_1BB8069B0(*a1, *a2);
}

uint64_t sub_1BAF86948()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF869DC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF86A4C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF86ADC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAF86B38(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6144636974617473;
  if (*v1)
    v2 = 0x617461446576696CLL;
  v3 = 0xED00006C72556174;
  if (*v1)
    v3 = 0xEB000000006C7255;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAF86B8C()
{
  _BYTE *v0;

  if (*v0)
    return 0x617461446576696CLL;
  else
    return 0x6144636974617473;
}

uint64_t sub_1BAF86BDC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BAF86C3C()
{
  sub_1BAF88D40();
  return sub_1BB874710();
}

uint64_t sub_1BAF86C64()
{
  sub_1BAF88D40();
  return sub_1BB87471C();
}

uint64_t sub_1BAF86C8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BAF88BA8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BAF86CB8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BAF867FC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t type metadata accessor for SportsDataVisualizationResponseItem()
{
  uint64_t result;

  result = qword_1ED3AA1B0;
  if (!qword_1ED3AA1B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF86D10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BAF86D70 + 4 * byte_1BB8D9F1A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1BAF87354(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for SportsDataVisualizationResponseScoreItem() + 36);
      type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          v4 = sub_1BB86C8B0();
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
          break;
        case 8:
        case 9:
          v5 = sub_1BB86C8B0();
          v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
          v7(v3, v5);
          v6 = v3 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
          result = ((uint64_t (*)(uint64_t, uint64_t))v7)(v6, v5);
          break;
        default:
          return result;
      }
      break;
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BAF874F8()
{
  char *v0;

  v0 = (char *)sub_1BAF87550 + 4 * byte_1BB8D9F47[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF87550(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  v25 = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 24) = v25;
  v26 = *(_QWORD *)(v23 + 40);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = v26;
  *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
  *(_BYTE *)(v22 + 56) = *(_BYTE *)(v23 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v22;
}

void sub_1BAF876D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v5;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  JUMPOUT(0x1BAF8769CLL);
}

uint64_t sub_1BAF879FC(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
    v2 = (char *)&loc_1BAF87A6C + 4 * byte_1BB8D9F58[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1BAF87C40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  JUMPOUT(0x1BAF87C08);
}

_OWORD *sub_1BAF87F88(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t started;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
    v9 = *(int *)(v8 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v13 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
        started = type metadata accessor for StartTime(0);
        v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
        goto LABEL_7;
      case 8u:
      case 9u:
        v15 = sub_1BB86C8B0();
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(v10, v11, v15);
        v17 = type metadata accessor for StartTimeEndTime(0);
        v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + *(int *)(v8 + 40)) = *((_BYTE *)a2 + *(int *)(v8 + 40));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BAF88350(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t started;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      v8 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
      v9 = *(int *)(v8 + 36);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          v13 = sub_1BB86C8B0();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
          started = type metadata accessor for StartTime(0);
          v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
          goto LABEL_8;
        case 8u:
        case 9u:
          v15 = sub_1BB86C8B0();
          v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
          v16(v10, v11, v15);
          v17 = type metadata accessor for StartTimeEndTime(0);
          v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_8:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + *(int *)(v8 + 40)) = *((_BYTE *)a2 + *(int *)(v8 + 40));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAF88730()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1BAF887B8()
{
  unint64_t result;

  result = qword_1ED3AA170;
  if (!qword_1ED3AA170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA298, &type metadata for SportsDataVisualizationResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA170);
  }
  return result;
}

unint64_t sub_1BAF887FC()
{
  unint64_t result;

  result = qword_1ED3AA190;
  if (!qword_1ED3AA190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA270, &type metadata for SportsDataVisualizationResponseItem.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3AA190);
  }
  return result;
}

unint64_t sub_1BAF88840()
{
  unint64_t result;

  result = qword_1EF2B7678;
  if (!qword_1EF2B7678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA220, &type metadata for SportsDataVisualizationResponseItem.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B7678);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseDataSource()
{
  return &type metadata for SportsDataVisualizationResponseDataSource;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseItem.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BAF888E0 + 4 * byte_1BB8D9F82[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BAF88914 + 4 * byte_1BB8D9F7D[v4]))();
}

uint64_t sub_1BAF88914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF8891C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF88924);
  return result;
}

uint64_t sub_1BAF88930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF88938);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BAF8893C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF88944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseItem.CodingType()
{
  return &type metadata for SportsDataVisualizationResponseItem.CodingType;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseItem.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF889A0 + 4 * byte_1BB8D9F87[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF889C0 + 4 * byte_1BB8D9F8C[v4]))();
}

_BYTE *sub_1BAF889A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF889C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF889C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF889D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF889D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF889E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseItem.CodingKeys;
}

unint64_t sub_1BAF88A00()
{
  unint64_t result;

  result = qword_1EF2B7680;
  if (!qword_1EF2B7680)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA130, &type metadata for SportsDataVisualizationResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7680);
  }
  return result;
}

unint64_t sub_1BAF88A48()
{
  unint64_t result;

  result = qword_1EF2B7688;
  if (!qword_1EF2B7688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA1D0, &type metadata for SportsDataVisualizationResponseItem.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B7688);
  }
  return result;
}

unint64_t sub_1BAF88A90()
{
  unint64_t result;

  result = qword_1ED3AA180;
  if (!qword_1ED3AA180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA0A0, &type metadata for SportsDataVisualizationResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA180);
  }
  return result;
}

unint64_t sub_1BAF88AD8()
{
  unint64_t result;

  result = qword_1ED3AA178;
  if (!qword_1ED3AA178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA0C8, &type metadata for SportsDataVisualizationResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA178);
  }
  return result;
}

unint64_t sub_1BAF88B1C()
{
  unint64_t result;

  result = qword_1ED3AA188;
  if (!qword_1ED3AA188)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA158, &type metadata for SportsDataVisualizationResponseItem.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3AA188);
  }
  return result;
}

uint64_t sub_1BAF88B60()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1BAF88BA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1BA4CDF6C(0, &qword_1ED3A3068, (uint64_t (*)(void))sub_1BAF88D40, (uint64_t)&type metadata for SportsDataVisualizationResponseDataSource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF88D40();
  sub_1BB87468C();
  if (!v1)
  {
    v12 = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    sub_1BB87402C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1BAF88D40()
{
  unint64_t result;

  result = qword_1ED3A26D8;
  if (!qword_1ED3A26D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA3D8, &type metadata for SportsDataVisualizationResponseDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A26D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseDataSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF88DD0 + 4 * byte_1BB8D9F96[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF88E04 + 4 * byte_1BB8D9F91[v4]))();
}

uint64_t sub_1BAF88E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF88E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF88E14);
  return result;
}

uint64_t sub_1BAF88E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF88E28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF88E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF88E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseDataSource.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseDataSource.CodingKeys;
}

unint64_t sub_1BAF88E54()
{
  unint64_t result;

  result = qword_1EF2B7698;
  if (!qword_1EF2B7698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA3B0, &type metadata for SportsDataVisualizationResponseDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7698);
  }
  return result;
}

unint64_t sub_1BAF88E9C()
{
  unint64_t result;

  result = qword_1ED3A26E8;
  if (!qword_1ED3A26E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA2E8, &type metadata for SportsDataVisualizationResponseDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A26E8);
  }
  return result;
}

unint64_t sub_1BAF88EE4()
{
  unint64_t result;

  result = qword_1ED3A26E0;
  if (!qword_1ED3A26E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA310, &type metadata for SportsDataVisualizationResponseDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A26E0);
  }
  return result;
}

_QWORD *assignWithCopy for FormatOptionEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatOptionEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatInspectionGroup()
{
  return &type metadata for FormatInspectionGroup;
}

uint64_t sub_1BAF89010()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  sub_1BAF89364();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v4;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void sub_1BAF89090(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v35 = a3;
  v36 = a4;
  v32 = a1;
  v33 = a2;
  v34 = a6;
  v7 = type metadata accessor for FormatInspectionItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - v12;
  sub_1BA8C88C8(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v31 - v19;
  v21 = *(_QWORD *)(a5 + 16);
  if (v21)
  {
    v22 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v23 = *(_QWORD *)(v18 + 72);
    v24 = MEMORY[0x1E0DEE9D8];
    v37 = v10;
    v38 = v7;
    do
    {
      sub_1BAF892E4(v22, (uint64_t)v20);
      sub_1BA5193C4((uint64_t)v20, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7) == 1)
      {
        sub_1BAF89328((uint64_t)v16);
      }
      else
      {
        sub_1BA5193C4((uint64_t)v16, (uint64_t)v13, type metadata accessor for FormatInspectionItem);
        sub_1BA5193C4((uint64_t)v13, (uint64_t)v10, type metadata accessor for FormatInspectionItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_1BB38C7D4(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        if (v26 >= v25 >> 1)
          v24 = sub_1BB38C7D4(v25 > 1, v26 + 1, 1, v24);
        *(_QWORD *)(v24 + 16) = v26 + 1;
        v27 = v24
            + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
            + *(_QWORD *)(v8 + 72) * v26;
        v10 = v37;
        sub_1BA5193C4((uint64_t)v37, v27, type metadata accessor for FormatInspectionItem);
        v7 = v38;
      }
      v22 += v23;
      --v21;
    }
    while (v21);
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v28 = v34;
  v29 = v33;
  *v34 = v32;
  v28[1] = v29;
  v30 = v36;
  v28[2] = v35;
  v28[3] = v30;
  v28[4] = v24;
}

uint64_t sub_1BAF892E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA8C88C8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF89328(uint64_t a1)
{
  uint64_t v2;

  sub_1BA8C88C8(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAF89364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B14F0)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B14F0);
  }
}

uint64_t FormatFileVersionURIReference.data.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = type metadata accessor for FormatVersionableValue(0, a1[2], a1[3], a1[4]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

uint64_t FormatFileVersionURIReference.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for FormatVersionableValue(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
}

uint64_t FormatFileVersionURIReference.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v3 = *(_QWORD *)(a2 + 16);
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v5 + 24);
  v6 = *(_QWORD *)(v5 + 32);
  v30 = v6;
  v26 = type metadata accessor for FormatVersionableValue(0, v3, v7, v6);
  v21 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v27 = (uint64_t)&v21 - v8;
  v9 = type metadata accessor for FormatFileVersionURIReference.CodingKeys(255, v3, v7, v6);
  MEMORY[0x1BCCE5B24](&unk_1BB8DA750, v9);
  v10 = sub_1BB8741D0();
  v29 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  v32 = 0;
  v23 = v7;
  v13 = type metadata accessor for FormatFileVersionURIReference.CodingType(0, v3, v7, v30);
  MEMORY[0x1BCCE5B24](&unk_1BB8DA700, v13);
  v14 = v10;
  v15 = v28;
  sub_1BB8741AC();
  if (!v15)
  {
    v16 = v21;
    v18 = (uint64_t)v24;
    v17 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v25, v3);
    v19 = v26;
    FormatVersionableValue.init(value:versions:)(v18, *(_QWORD *)(v17 + *(int *)(v26 + 44)), v3, v23, v30, v27);
    v31 = 1;
    swift_bridgeObjectRetain();
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVersionableValue<A>, v19);
    sub_1BB8741AC();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v27, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v14);
}

uint64_t sub_1BAF896B0()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1BAF89700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA5C0, a3);
  return sub_1BB874440();
}

uint64_t sub_1BAF89754(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA5C0, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BAF897A0()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA5C0);
  return sub_1BB872D54();
}

uint64_t sub_1BAF897F0()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA5C0);
  return sub_1BB872D48();
}

uint64_t sub_1BAF89840@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF896B0();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF89878@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA8091D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAF898AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF896B0();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF898DC(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA750, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAF89910(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA750, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BAF89944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA660, a3);
  return sub_1BB874440();
}

uint64_t sub_1BAF89998(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA660, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BAF899E4()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA660);
  return sub_1BB872D54();
}

uint64_t sub_1BAF89A34()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA660);
  return sub_1BB872D48();
}

void sub_1BAF89A84(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "uri-template");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1BAF89AA8()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8DA660);
  return sub_1BB872D0C();
}

uint64_t sub_1BAF89AFC(_QWORD *a1, uint64_t a2)
{
  return FormatFileVersionURIReference.encode(to:)(a1, a2);
}

uint64_t sub_1BAF89B10(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF89B5C + 4 * byte_1BB8DA49E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF89B90 + 4 * byte_1BB8DA499[v4]))();
}

uint64_t sub_1BAF89B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF89B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF89BA0);
  return result;
}

uint64_t sub_1BAF89BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF89BB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF89BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF89BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAF89BCC()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAF89BDC()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t FormatStateViewNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeLayoutAttributes.stateLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatStateViewNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

unint64_t FormatStateViewNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatStateViewNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatStateViewNodeLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatStateViewNodeLayoutAttributes.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatStateViewNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeLayoutAttributes.__allocating_init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = swift_allocObject();
  v15 = *a3;
  v16 = *a5;
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 48) = v16;
  swift_beginAccess();
  *(_BYTE *)(v14 + 56) = a6;
  *(_QWORD *)(v14 + 64) = a7;
  return v14;
}

uint64_t FormatStateViewNodeLayoutAttributes.init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;

  v10 = *a3;
  v11 = *a5;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = v11;
  swift_beginAccess();
  *(_BYTE *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = a7;
  return v7;
}

double FormatStateViewNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t FormatStateViewNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAF89E3C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BAF89E74 + 4 * byte_1BB8DA7A0[a1]))(0xD000000000000010, 0x80000001BB965740);
}

uint64_t sub_1BAF89E74(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_1BAF89EF4()
{
  unsigned __int8 *v0;

  return sub_1BAF89E3C(*v0);
}

uint64_t sub_1BAF89EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF8AE80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF89F20()
{
  sub_1BAF8A2D4();
  return sub_1BB874710();
}

uint64_t sub_1BAF89F48()
{
  sub_1BAF8A2D4();
  return sub_1BB87471C();
}

uint64_t FormatStateViewNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatStateViewNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1BAF8A8A0(0, &qword_1EF2B76A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF8A2D4();
  sub_1BB8746C8();
  v14 = *(_QWORD *)(v3 + 16);
  LOBYTE(v12) = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA50AD30(&qword_1ED3C9F28, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB8741AC();
  if (!v2)
  {
    v14 = *(_QWORD *)(v3 + 24);
    LOBYTE(v12) = 1;
    sub_1BAF8A318();
    sub_1BAF8A37C();
    sub_1BB8741AC();
    v14 = *(_QWORD *)(v3 + 32);
    LOBYTE(v12) = 2;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v14) = 3;
    sub_1BB8741A0();
    v14 = *(_QWORD *)(v3 + 48);
    LOBYTE(v12) = 4;
    sub_1BA84B088();
    sub_1BB8741AC();
    swift_beginAccess();
    if ((*(_BYTE *)(v3 + 56) & 1) == 0)
    {
      LOBYTE(v12) = 5;
      v13 = 0;
      sub_1BAF8A400();
      sub_1BB874464();
    }
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 6;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BAF8A2D4()
{
  unint64_t result;

  result = qword_1EF2B76A8;
  if (!qword_1EF2B76A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DAA0C, &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B76A8);
  }
  return result;
}

void sub_1BAF8A318()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B76B0)
  {
    type metadata accessor for FormatStateViewNodeStateLayoutAttributes();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B76B0);
  }
}

unint64_t sub_1BAF8A37C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2B76B8;
  if (!qword_1EF2B76B8)
  {
    sub_1BAF8A318();
    v2 = v1;
    v3 = sub_1BA50AD30(&qword_1EF2B76C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNodeStateLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatStateViewNodeStateLayoutAttributes);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2B76B8);
  }
  return result;
}

unint64_t sub_1BAF8A400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B76C8;
  if (!qword_1EF2B76C8)
  {
    sub_1BAF8A8A0(255, &qword_1EF2B76A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B76C8);
  }
  return result;
}

uint64_t FormatStateViewNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatStateViewNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatStateViewNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  _QWORD v13[2];
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;

  sub_1BAF8A8A0(0, &qword_1EF2B76D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v14 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF8A2D4();
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    v10 = (uint64_t)a1;
  }
  else
  {
    v8 = v5;
    type metadata accessor for FormatLayoutAttributes();
    v16 = 0;
    sub_1BA50AD30(&qword_1ED3C9F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v9 = v14;
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 16) = v17;
    sub_1BAF8A318();
    v16 = 1;
    sub_1BAF8A8FC();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 24) = v17;
    v16 = 2;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 32) = v17;
    LOBYTE(v17) = 3;
    v13[1] = 0;
    *(_QWORD *)(v1 + 40) = sub_1BB8740C8();
    v16 = 4;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 48) = v17;
    LOBYTE(v17) = 5;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v16 = 5;
      sub_1BB8740D4();
      v12 = v15;
    }
    else
    {
      v12 = 1;
    }
    *(_BYTE *)(v1 + 56) = v12;
    type metadata accessor for FormatContextLayoutOptions();
    v16 = 6;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(_QWORD *)(v1 + 64) = v17;
    v10 = (uint64_t)a1;
  }
  __swift_destroy_boxed_opaque_existential_1(v10);
  return v1;
}

void sub_1BAF8A8A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF8A2D4();
    v7 = a3(a1, &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAF8A8FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2B76D8;
  if (!qword_1EF2B76D8)
  {
    sub_1BAF8A318();
    v2 = v1;
    v3 = sub_1BA50AD30(&qword_1EF2B76E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNodeStateLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatStateViewNodeStateLayoutAttributes);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2B76D8);
  }
  return result;
}

uint64_t sub_1BAF8A980@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatStateViewNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAF8A9D4(_QWORD *a1)
{
  return FormatStateViewNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BAF8A9F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FormatStateViewNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

uint64_t FormatStateViewNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA50AD30(&qword_1ED3C9F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB86D96C();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  swift_beginAccess();
  v6 = *(_BYTE *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 24) = v2;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = v4;
  swift_beginAccess();
  *(_BYTE *)(v8 + 56) = v6;
  *(_QWORD *)(v8 + 64) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v4);
  swift_retain();
  return v8;
}

uint64_t sub_1BAF8AB5C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B76E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatStateViewNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatStateViewNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BAF8ABA8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B76F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatStateViewNodeLayoutAttributes);
}

uint64_t sub_1BAF8ABD4(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B76F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatStateViewNodeLayoutAttributes);
}

uint64_t sub_1BAF8AC00(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2B7700, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatStateViewNodeLayoutAttributes);
}

uint64_t sub_1BAF8AC2C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 56);
  return result;
}

uint64_t sub_1BAF8AC70(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 56) = v2;
  return result;
}

uint64_t method lookup function for FormatStateViewNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatStateViewNodeLayoutAttributes.__allocating_init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FormatStateViewNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t storeEnumTagSinglePayload for FormatStateViewNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BAF8AD28 + 4 * byte_1BB8DA7AC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BAF8AD5C + 4 * byte_1BB8DA7A7[v4]))();
}

uint64_t sub_1BAF8AD5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF8AD64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF8AD6CLL);
  return result;
}

uint64_t sub_1BAF8AD78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF8AD80);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BAF8AD84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF8AD8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BAF8ADAC()
{
  unint64_t result;

  result = qword_1EF2B7708;
  if (!qword_1EF2B7708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA9E4, &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7708);
  }
  return result;
}

unint64_t sub_1BAF8ADF4()
{
  unint64_t result;

  result = qword_1EF2B7710;
  if (!qword_1EF2B7710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA954, &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7710);
  }
  return result;
}

unint64_t sub_1BAF8AE3C()
{
  unint64_t result;

  result = qword_1EF2B7718;
  if (!qword_1EF2B7718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DA97C, &type metadata for FormatStateViewNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7718);
  }
  return result;
}

uint64_t sub_1BAF8AE80(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB965740 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB96CD60 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void static FormatFlexibleExpression.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

NewsFeed::FormatFlexibleExpression __swiftcall FormatFlexibleExpression.init(direction:)(NewsFeed::FormatFlexibleExpression direction)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)direction.direction.value;
  return direction;
}

uint64_t FormatFlexibleExpression.Direction.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C61636974726576;
  if (*v0 != 1)
    v1 = 0x746E6F7A69726F68;
  if (*v0)
    return v1;
  else
    return 0x74756F79616CLL;
}

void FormatFlexibleExpression.direction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1BAF8B1C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB801120(*a1, *a2);
}

uint64_t sub_1BAF8B1D4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF8B274()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF8B2F0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAF8B38C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x6C61636974726576;
  if (v2 != 1)
  {
    v5 = 0x746E6F7A69726F68;
    v4 = 0xEA00000000006C61;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x74756F79616CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t _s8NewsFeed24FormatFlexibleExpressionV2eeoiySbAC_ACtFZ_0(_BYTE *a1, _BYTE *a2)
{
  int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
  {
    if (v3 == 3)
      return 1;
  }
  else if (v3 != 3)
  {
    if (*a1)
    {
      if (v2 == 1)
      {
        v4 = 0xE800000000000000;
        v5 = 0x6C61636974726576;
      }
      else
      {
        v5 = 0x746E6F7A69726F68;
        v4 = 0xEA00000000006C61;
      }
    }
    else
    {
      v4 = 0xE600000000000000;
      v5 = 0x74756F79616CLL;
    }
    v6 = 0xE800000000000000;
    v7 = 0x6C61636974726576;
    if (v3 != 1)
    {
      v7 = 0x746E6F7A69726F68;
      v6 = 0xEA00000000006C61;
    }
    if (*a2)
      v8 = v7;
    else
      v8 = 0x74756F79616CLL;
    if (*a2)
      v9 = v6;
    else
      v9 = 0xE600000000000000;
    if (v5 == v8 && v4 == v9)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v11 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      return 1;
  }
  return 0;
}

unint64_t sub_1BAF8B538()
{
  unint64_t result;

  result = qword_1EF2B7720;
  if (!qword_1EF2B7720)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression.Direction, &type metadata for FormatFlexibleExpression.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B7720);
  }
  return result;
}

unint64_t sub_1BAF8B57C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAF8B5A8();
  result = sub_1BA4A6E14();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAF8B5A8()
{
  unint64_t result;

  result = qword_1EF2B7728;
  if (!qword_1EF2B7728)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression.Direction, &type metadata for FormatFlexibleExpression.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B7728);
  }
  return result;
}

unint64_t sub_1BAF8B5EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF8B610();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF8B610()
{
  unint64_t result;

  result = qword_1EF2B7730;
  if (!qword_1EF2B7730)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression.Direction, &type metadata for FormatFlexibleExpression.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B7730);
  }
  return result;
}

uint64_t sub_1BAF8B654(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA4FC490, (uint64_t (*)(void))sub_1BA827F44, (uint64_t (*)(void))sub_1BAF8B538);
}

unint64_t sub_1BAF8B670(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF8B694();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF8B694()
{
  unint64_t result;

  result = qword_1EF2B7738;
  if (!qword_1EF2B7738)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression, &type metadata for FormatFlexibleExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B7738);
  }
  return result;
}

uint64_t sub_1BAF8B6D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA67537C, (uint64_t (*)(void))sub_1BA827EEC, (uint64_t (*)(void))sub_1BAF8B6F4);
}

unint64_t sub_1BAF8B6F4()
{
  unint64_t result;

  result = qword_1EF2B7740;
  if (!qword_1EF2B7740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFlexibleExpression, &type metadata for FormatFlexibleExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B7740);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFlexibleExpression(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  if (*a1 <= 3u)
    v6 = 3;
  else
    v6 = *a1;
  v7 = v6 - 4;
  if (*a1 < 3u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FormatFlexibleExpression()
{
  return &type metadata for FormatFlexibleExpression;
}

ValueMetadata *type metadata accessor for FormatFlexibleExpression.Direction()
{
  return &type metadata for FormatFlexibleExpression.Direction;
}

void sub_1BAF8B7F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t inited;
  void *v3;
  char v4;
  char v5;
  uint64_t *v6;
  uint64_t *v7;
  void *v8;
  unsigned __int8 v9;

  v1 = sub_1BB6799E0();
  FormatContentSizeCategory.groupLayoutContentSizeCategory.getter();
  type metadata accessor for GroupLayoutFactoryValidator();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v1;
  *(_QWORD *)(inited + 24) = v8;
  *(_BYTE *)(inited + 32) = v9;
  sub_1BA7C26A0(v8, v9);
  v3 = (void *)sub_1BB86D75C();
  sub_1BA7C17DC();
  v5 = v4;

  sub_1BA7C2538(v8, v9);
  if ((v5 & 1) != 0)
  {
    sub_1BA7C1A64();
    if (!v0)
    {
      swift_bridgeObjectRelease();
      sub_1BA7C2538(v8, v9);
      return;
    }
  }
  else
  {
    sub_1BA7E415C();
    swift_allocError();
    v7 = v6;
    *v6 = sub_1BB86D75C();
    *((_BYTE *)v7 + 40) = 1;
    swift_willThrow();
  }
  swift_release();
}

_QWORD *sub_1BAF8B934(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v12 = a1;
  v10 = sub_1BB873450();
  v2 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB87342C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v7);
  v11 = sub_1BA657D64();
  sub_1BB872658();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v6, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, v6);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v10);
  v1[3] = sub_1BB87348C();
  v13 = 0;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BBEE8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v1[4] = sub_1BB86E86C();
  v1[2] = v12;
  return v1;
}

uint64_t sub_1BAF8BB54(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[6];
  _BYTE v33[344];

  v25 = a3;
  v26 = a4;
  v24 = a2;
  v6 = sub_1BB872610();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB872664();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for GroupLayoutContext();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  memcpy(v33, a1, 0x150uLL);
  v27 = *(_QWORD *)(v4 + 24);
  v15 = swift_allocObject();
  swift_weakInit();
  sub_1BA4C2DD8(v24, (uint64_t)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 360) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  memcpy((void *)(v17 + 24), v33, 0x150uLL);
  sub_1BA5193C4((uint64_t)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v18 = (_QWORD *)(v17 + ((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  v19 = v26;
  *v18 = v25;
  v18[1] = v19;
  v32[4] = sub_1BAF8EA48;
  v32[5] = v17;
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 1107296256;
  v32[2] = sub_1BA4F1DD8;
  v32[3] = &block_descriptor_31;
  v20 = _Block_copy(v32);
  swift_retain();
  sub_1BAF8EA94((uint64_t)v33);
  swift_retain();
  sub_1BB872634();
  v31 = MEMORY[0x1E0DEE9D8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v21);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v11, v8, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  swift_release();
  return swift_release();
}

uint64_t sub_1BAF8BE48(uint64_t a1, const void *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v11;
  _BYTE __dst[336];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    memcpy(__dst, a2, sizeof(__dst));
    swift_retain();
    swift_retain();
    sub_1BAF8F290(__dst, a3, v11, a1, a4, a5);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAF8BF10(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t);
  _BYTE v20[12];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v21 = a2;
  v8 = sub_1BB872610();
  v24 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1BB872664();
  v22 = *(_QWORD *)(v11 - 8);
  v23 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA657D64();
  v14 = (void *)sub_1BB87345C();
  v15 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a4;
  *(_QWORD *)(v16 + 32) = a5;
  *(_QWORD *)(v16 + 40) = a1;
  *(_BYTE *)(v16 + 48) = v21;
  aBlock[4] = sub_1BAF9005C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_13_1;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v18);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v10, v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v22 + 8))(v13, v23);
}

uint64_t sub_1BAF8C19C(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BAF8C218()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  char v5;
  unint64_t v6;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  if (v5 == 1)
  {
    v6 = 0xD000000000000015;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    sub_1BB87420C();
    sub_1BB872AFC(v0);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v1);
  }
  else
  {
    v6 = 0x7420656C676E6953;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    sub_1BB87420C();
    sub_1BB872AFC(v2);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v3);
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    sub_1BB872AFC((_QWORD *)0xE100000000000000);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1BAF8C424(uint64_t a1, uint64_t a2, int a3, uint64_t a4, _QWORD *a5, uint64_t *a6, uint64_t a7, void (*a8)(_QWORD *, uint64_t), uint64_t a9, _QWORD **a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _OWORD *v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void *v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  BOOL v70;
  double v71;
  _QWORD *v72;
  _QWORD *v73;
  char isUniquelyReferenced_nonNull_native;
  double v75;
  unint64_t v76;
  unint64_t v77;
  double *v78;
  uint64_t v79;
  void *v80;
  _BYTE v82[12];
  int v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_QWORD *, uint64_t);
  _QWORD **v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106[9];
  _OWORD v107[9];
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _BYTE v117[144];
  _BYTE v118[144];
  _BYTE v119[144];
  uint64_t v120;

  v97 = a8;
  v103 = a6;
  v104 = a7;
  v105 = a4;
  v83 = a3;
  v95 = a1;
  v98 = a10;
  v96 = a9;
  v120 = *MEMORY[0x1E0C80C00];
  v99 = a5;
  sub_1BAF8FDD8((uint64_t)a5, (uint64_t)v117);
  sub_1BAF8FDD8((uint64_t)v117, (uint64_t)v119);
  v11 = type metadata accessor for DebugFormatTestSuiteResultItem();
  v94 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v93 = &v82[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v92 = &v82[-v14];
  v15 = type metadata accessor for DebugFormatTestCaseResult(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = &v82[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v82[-v20];
  MEMORY[0x1E0C80A78](v22);
  v91 = &v82[-v23];
  v24 = CACurrentMediaTime();
  v25 = MEMORY[0x1E0DEE9D8];
  v90 = *(_QWORD *)(a2 + 16);
  if (v90)
  {
    v89 = a2 + 32;
    v101 = a2;
    swift_bridgeObjectRetain();
    v26 = 0;
    v88 = xmmword_1BB87CE70;
    while (1)
    {
      v27 = *(_QWORD *)(v89 + 8 * v26);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB86E878();
      swift_release();
      if ((v108 & 1) != 0)
        break;
      sub_1BAF8FDD8((uint64_t)v99, (uint64_t)v118);
      v28 = sub_1BAF8FF60((uint64_t)v118);
      v29 = (_OWORD *)sub_1BAF8FF6C((uint64_t)v118);
      v100 = v26;
      if (v28 == 1)
      {
        v102 = v25;
        v30 = *(_QWORD *)(*(_QWORD *)v29 + 16);
        if (v30)
        {
          v31 = (_OWORD *)(*(_QWORD *)v29 + 32);
          sub_1BAF8FDD8((uint64_t)v119, (uint64_t)&v108);
          sub_1BAF8FF6C((uint64_t)&v108);
          swift_bridgeObjectRetain();
          v32 = v30 - 1;
          v33 = MEMORY[0x1E0DEE9D8];
          while (1)
          {
            v107[0] = *v31;
            v34 = v31[1];
            v35 = v31[2];
            v36 = v31[4];
            v107[3] = v31[3];
            v107[4] = v36;
            v107[1] = v34;
            v107[2] = v35;
            v37 = v31[5];
            v38 = v31[6];
            v39 = v31[8];
            v107[7] = v31[7];
            v107[8] = v39;
            v107[5] = v37;
            v107[6] = v38;
            v40 = v31[7];
            v106[6] = v31[6];
            v106[7] = v40;
            v106[8] = v31[8];
            v41 = v31[3];
            v106[2] = v31[2];
            v106[3] = v41;
            v42 = v31[5];
            v106[4] = v31[4];
            v106[5] = v42;
            v43 = v31[1];
            v106[0] = *v31;
            v106[1] = v43;
            sub_1BA8C88FC((uint64_t)v107);
            sub_1BAF8CD38(v27, v106, v103, v104, (uint64_t)v21);
            sub_1BA8C89E4((uint64_t)v107);
            sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v18, type metadata accessor for DebugFormatTestCaseResult);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v33 = sub_1BB392490(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
            v45 = *(_QWORD *)(v33 + 16);
            v44 = *(_QWORD *)(v33 + 24);
            if (v45 >= v44 >> 1)
              v33 = sub_1BB392490(v44 > 1, v45 + 1, 1, v33);
            *(_QWORD *)(v33 + 16) = v45 + 1;
            sub_1BA5193C4((uint64_t)v18, v33+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v45, type metadata accessor for DebugFormatTestCaseResult);
            sub_1BA4A2E80((uint64_t)v21, type metadata accessor for DebugFormatTestCaseResult);
            if (!v32)
              break;
            --v32;
            v31 += 9;
          }
          sub_1BA8CF278(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF8FE88);
        }
        else
        {
          v33 = MEMORY[0x1E0DEE9D8];
        }
        sub_1BB7C8D54(v27, v33, (uint64_t)&v108);
        v53 = *((_QWORD *)&v108 + 1);
        v52 = v108;
        v54 = v109;
        v55 = (void *)*((_QWORD *)&v109 + 1);
        v56 = v110;
        v57 = *((_QWORD *)&v110 + 1);
        v58 = v93;
        *v93 = v108;
        v58[1] = v53;
        *((_BYTE *)v58 + 16) = v54;
        v58[3] = v55;
        *((_BYTE *)v58 + 32) = v56;
        v58[5] = v57;
        v48 = type metadata accessor for DebugFormatTestSuiteScopeResult();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v58, 0, 1, v48);
        v87 = v52;
        swift_bridgeObjectRetain();
        v86 = v53;
        swift_bridgeObjectRetain();
        v84 = v55;
        v85 = v57;
        swift_bridgeObjectRetain();
        v25 = v102;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_1BB39247C(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
        v60 = *(_QWORD *)(v25 + 16);
        v59 = *(_QWORD *)(v25 + 24);
        if (v60 >= v59 >> 1)
          v25 = sub_1BB39247C(v59 > 1, v60 + 1, 1, v25);
        *(_QWORD *)(v25 + 16) = v60 + 1;
        v51 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
        sub_1BA5193C4((uint64_t)v93, v25 + v51 + *(_QWORD *)(v94 + 72) * v60, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestSuiteResultItem);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v113 = v29[5];
        v114 = v29[6];
        v115 = v29[7];
        v116 = v29[8];
        v109 = v29[1];
        v110 = v29[2];
        v111 = v29[3];
        v112 = v29[4];
        v108 = *v29;
        v46 = v91;
        sub_1BAF8CD38(v27, &v108, v103, v104, (uint64_t)v91);
        swift_bridgeObjectRelease();
        v47 = v92;
        sub_1BA4C2DD8((uint64_t)v46, (uint64_t)v92, type metadata accessor for DebugFormatTestCaseResult);
        v48 = type metadata accessor for DebugFormatTestSuiteScopeResult();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_1BB39247C(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
        v50 = *(_QWORD *)(v25 + 16);
        v49 = *(_QWORD *)(v25 + 24);
        if (v50 >= v49 >> 1)
          v25 = sub_1BB39247C(v49 > 1, v50 + 1, 1, v25);
        *(_QWORD *)(v25 + 16) = v50 + 1;
        v51 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
        sub_1BA5193C4((uint64_t)v92, v25 + v51 + *(_QWORD *)(v94 + 72) * v50, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestSuiteResultItem);
        sub_1BA4A2E80((uint64_t)v91, type metadata accessor for DebugFormatTestCaseResult);
      }
      sub_1BA4B07F0(0, &qword_1EF2B7808, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatTestSuiteResultItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = v88;
      type metadata accessor for DebugFormatTestSuiteScopeResult();
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v61 + v51, 1, 1, v48);
      *(_QWORD *)&v108 = v25;
      swift_bridgeObjectRetain();
      v102 = v25;
      swift_bridgeObjectRetain();
      sub_1BB386AFC(v61);
      v62 = v108;
      v63 = *v98;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v64 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v64 = sub_1BB392454(0, v63[2] + 1, 1, v63);
      v66 = v64[2];
      v65 = v64[3];
      if (v66 >= v65 >> 1)
        v64 = sub_1BB392454((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
      v67 = v100 + 1;
      v64[2] = v66 + 1;
      v68 = &v64[5 * v66];
      v69 = v101;
      v68[4] = v95;
      v68[5] = v69;
      v68[6] = v62;
      v68[7] = 0;
      *((_BYTE *)v68 + 64) = 65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v67;
      swift_bridgeObjectRelease();
      v97(v64, 0);
      swift_bridgeObjectRelease();
      v70 = v67 == v90;
      v25 = v102;
      if (v70)
      {
        a2 = v101;
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_33:
    swift_bridgeObjectRetain();
    v71 = CACurrentMediaTime() - v24;
    v72 = v98;
    v73 = *v98;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v72 = v73;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v73 = sub_1BB392454(0, v73[2] + 1, 1, v73);
      *v98 = v73;
    }
    v75 = v71 * 1000.0;
    v77 = v73[2];
    v76 = v73[3];
    if (v77 >= v76 >> 1)
    {
      v73 = sub_1BB392454((_QWORD *)(v76 > 1), v77 + 1, 1, v73);
      *v98 = v73;
    }
    v73[2] = v77 + 1;
    v78 = (double *)&v73[5 * v77];
    *((_QWORD *)v78 + 4) = v95;
    *((_QWORD *)v78 + 5) = a2;
    *((_QWORD *)v78 + 6) = v25;
    v78[7] = v75;
    *((_BYTE *)v78 + 64) = 64;
    v79 = v83 & 1;
    if ((v83 & 1) != 0)
      v80 = (void *)MEMORY[0x1E0DEE9D8];
    else
      v80 = &unk_1E726FF98;
    *(_QWORD *)&v108 = *v98;
    swift_bridgeObjectRetain();
    sub_1BB386990((uint64_t)v80);
    v97((_QWORD *)v108, v79);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF8CD38@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _UNKNOWN **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _UNKNOWN **v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  int64_t *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v106[2];
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  _UNKNOWN **v135;
  uint64_t v136;
  char *v137;
  uint64_t v138[3];
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[12];
  __int128 v153;
  uint64_t v154;
  unsigned __int8 v155[25];
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;

  v127 = a4;
  v130 = a1;
  v131 = a3;
  v119 = a5;
  v118 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1E0C80A78](v118);
  v120 = (uint64_t)v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1E0C80A78](v110);
  v111 = (uint64_t)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86D660();
  v114 = *(_QWORD *)(v10 - 8);
  v115 = v10;
  MEMORY[0x1E0C80A78](v10);
  v109 = (char *)v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86D7A4();
  v112 = *(_QWORD *)(v12 - 8);
  v113 = v12;
  MEMORY[0x1E0C80A78](v12);
  v108 = (char *)v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86D8A0();
  MEMORY[0x1E0C80A78](v14);
  v126 = (char *)v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86DA68();
  v124 = *(_QWORD *)(v16 - 8);
  v125 = v16;
  MEMORY[0x1E0C80A78](v16);
  v123 = (char *)v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB86EB84();
  v121 = *(_QWORD *)(v18 - 8);
  v122 = (_QWORD *)v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v24);
  v128 = (uint64_t)v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v106 - v27;
  v29 = sub_1BB8726B8();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (uint64_t *)((char *)v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a2[7];
  v162 = a2[6];
  v163 = v33;
  v164 = a2[8];
  v34 = a2[3];
  v158 = a2[2];
  v159 = v34;
  v35 = a2[5];
  v160 = a2[4];
  v161 = v35;
  v36 = a2[1];
  v156 = *a2;
  v157 = v36;
  v37 = *(void **)(v5 + 24);
  *v32 = v37;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0DEF740], v29);
  v38 = v37;
  v39 = sub_1BB8726D0();
  (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v6 = CACurrentMediaTime();
  v147 = v162;
  v148 = v163;
  v149 = v164;
  v143 = v158;
  v144 = v159;
  v145 = v160;
  v146 = v161;
  v32 = *(_QWORD **)(v5 + 16);
  v40 = (uint64_t)v32 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindings;
  v141 = v156;
  v142 = v157;
  swift_beginAccess();
  v106[1] = v40;
  sub_1BA8C88FC((uint64_t)&v156);
  v41 = v130;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v106[0] = (uint64_t)(v28 + 8);
  sub_1BA4C010C((uint64_t)(v28 + 8), (uint64_t)&v132);
  v107 = v28;
  sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v42 = v134;
  v43 = v135;
  __swift_project_boxed_opaque_existential_1(&v132, v134);
  v44 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v43[3])(v42, v43);
  v117 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutOrder;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v155[0] = v138[0];
  v39 = type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  v129 = sub_1BB4A74A0(&v141, v41, v44, (char *)v155);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
  sub_1BA8C88FC((uint64_t)&v156);
  swift_retain();
  v116 = sub_1BB230F34();
  if (qword_1EF2A6C58 != -1)
LABEL_5:
    swift_once();
  v45 = qword_1EF3D04D8;
  v134 = type metadata accessor for DebugFormatLogger();
  v135 = &off_1E727E580;
  *(_QWORD *)&v132 = v45;
  v46 = *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory);
  swift_weakInit();
  swift_weakAssign();
  sub_1BAF8FF7C((uint64_t)v138, (uint64_t)&v141);
  swift_retain();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BAA6ADB8((uint64_t)v20);
  sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersioningModeSelection);
  v47 = sub_1BAF8ECB0((uint64_t)&v141, (uint64_t)v20, v46);
  (*(void (**)(char *, _QWORD *))(v121 + 8))(v20, v122);
  sub_1BAF8FFB8((uint64_t)&v141);
  v48 = type metadata accessor for FeedLayoutTracker();
  v49 = swift_allocObject();
  v152[10] = &off_1E7286308;
  v152[9] = v48;
  v152[6] = v49;
  v50 = qword_1EF3D04D8;
  type metadata accessor for FormatOptionConverter();
  v51 = (_QWORD *)swift_allocObject();
  v52 = (uint64_t)v131;
  swift_retain();
  swift_retain();
  v53 = sub_1BA8EE9A4(v52, v50, v51);
  v147 = v162;
  v148 = v163;
  v149 = v164;
  v143 = v158;
  v144 = v159;
  v145 = v160;
  v146 = v161;
  v141 = v156;
  v142 = v157;
  v150 = v52;
  v151 = v116;
  sub_1BA4CECCC(&v132, (uint64_t)v152);
  v152[5] = v47;
  v152[11] = v53;
  v153 = xmmword_1BB8DACC0;
  v154 = 0;
  v134 = v39;
  v135 = (_UNKNOWN **)sub_1BA4A2870((unint64_t *)&qword_1ED3C5220, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupRegion, (uint64_t)&protocol conformance descriptor for FeedGroupRegion);
  *(_QWORD *)&v132 = v129;
  swift_retain();
  v54 = sub_1BA66B904(MEMORY[0x1E0DEE9D8]);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  LODWORD(v53) = LOBYTE(v138[0]);
  v55 = (uint64_t)v32;
  v56 = type metadata accessor for GroupLayoutContext();
  v57 = v127;
  v58 = v127 + *(int *)(v56 + 20);
  v59 = v123;
  sub_1BB86D624();
  v60 = (uint64_t)v126;
  sub_1BB86DA44();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v59, v125);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v155[0] = v138[0];
  v61 = v57;
  v62 = sub_1BA8F2F74(MEMORY[0x1E0DEE9D8]);
  v63 = v128;
  sub_1BA6A4D08(&v132, v54, (int)v53, v60, v155, v62, v128);
  sub_1BAF8B7F8();
  v64 = v58;
  v126 = (char *)v56;
  sub_1BA79BB1C(v63, v61, v138);
  v65 = v139;
  v66 = v140;
  __swift_project_boxed_opaque_existential_1(v138, v139);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v66 + 32))(&v132, v65, v66);
  LODWORD(v125) = v132;
  v67 = *((_QWORD *)&v132 + 1);
  v68 = v133;
  v69 = v134;
  v70 = (uint64_t)v135;
  v123 = v137;
  v124 = v136;
  swift_retain();
  v71 = (uint64_t)v107;
  sub_1BB86E494();
  swift_release();
  sub_1BA4C010C(v106[0], (uint64_t)&v132);
  sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v73 = v134;
  v72 = v135;
  __swift_project_boxed_opaque_existential_1(&v132, v134);
  v74 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v72[3])(v73, v72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v75 + 32) = v131;
  *(_QWORD *)&v132 = v75;
  sub_1BB872DCC();
  v76 = v132;
  swift_retain();
  swift_retain();
  v77 = (_QWORD *)sub_1BB7CBD44(v76, v74, v55);
  swift_release();
  v78 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v108, v61, v113);
  v79 = (uint64_t)v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v109, v64, v115);
  LOBYTE(v55) = *(_BYTE *)(v61 + *((int *)v126 + 11));
  v126 = *(char **)(v129 + 240);
  v80 = (int64_t *)v77[14];
  LOBYTE(v132) = v55;
  v81 = v77[18];
  v82 = v77[19];
  v83 = __swift_project_boxed_opaque_existential_1(v77 + 15, v81);
  v84 = sub_1BB3BDD40(v78, v79, (unsigned __int8 *)&v132, (uint64_t)v83, v80, v81, v82);
  v131 = v106;
  v85 = v77[2];
  MEMORY[0x1E0C80A78](v84);
  v106[-10] = v79;
  v106[-9] = (uint64_t)v77;
  v122 = v77;
  v86 = (uint64_t)v126;
  v106[-8] = v87;
  v106[-7] = v86;
  v106[-6] = (uint64_t)v78;
  LOBYTE(v106[-5]) = v55;
  v88 = v123;
  v106[-4] = v67;
  v106[-3] = v68;
  v106[-2] = v69;
  v106[-1] = v70;
  swift_bridgeObjectRetain();
  v89 = v124;
  v90 = sub_1BA791DFC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BA792480, (uint64_t)&v106[-12], v85);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v79, v115);
  v91 = v78;
  v92 = v128;
  (*(void (**)(char *, uint64_t))(v112 + 8))(v91, v113);
  v93 = v111;
  sub_1BA4C010C((uint64_t)v138, v111);
  v94 = (int *)v110;
  sub_1BA4C2DD8(v127, v93 + *(int *)(v110 + 20), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4C2DD8(v92, v93 + v94[6], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v95 = v93 + v94[7];
  *(_BYTE *)v95 = v125;
  *(_QWORD *)(v95 + 8) = v67;
  *(_QWORD *)(v95 + 16) = v68;
  *(_QWORD *)(v95 + 24) = v69;
  *(_QWORD *)(v95 + 32) = v70;
  *(_QWORD *)(v95 + 40) = v89;
  *(_QWORD *)(v95 + 48) = v88;
  *(_QWORD *)(v93 + v94[8]) = v90;
  v96 = v120;
  sub_1BA4C2DD8(v93, v120, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
  swift_storeEnumTagMultiPayload();
  sub_1BA8C88FC((uint64_t)&v156);
  v97 = v130;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v98 = CACurrentMediaTime();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA4A2E80(v93, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestCaseLayout);
  sub_1BA4A2E80(v92, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA79E0D0((uint64_t)&v141);
  v99 = v163;
  v100 = v119;
  *(_OWORD *)(v119 + 96) = v162;
  *(_OWORD *)(v100 + 112) = v99;
  *(_OWORD *)(v100 + 128) = v164;
  v101 = v159;
  *(_OWORD *)(v100 + 32) = v158;
  *(_OWORD *)(v100 + 48) = v101;
  v102 = v161;
  *(_OWORD *)(v100 + 64) = v160;
  *(_OWORD *)(v100 + 80) = v102;
  v103 = v157;
  *(_OWORD *)v100 = v156;
  *(_OWORD *)(v100 + 16) = v103;
  *(_QWORD *)(v100 + 144) = v97;
  v104 = type metadata accessor for DebugFormatTestCaseResult(0);
  sub_1BA5193C4(v96, v100 + *(int *)(v104 + 24), type metadata accessor for DebugFormatTestCaseResult.Result);
  *(double *)(v100 + *(int *)(v104 + 28)) = (v98 - v6) * 1000.0;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
}

uint64_t sub_1BAF8D9D4(uint64_t a1, void (*a2)(uint64_t, _QWORD *, _BOOL8), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _BOOL8 v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  BOOL v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD *, _BOOL8);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  _QWORD *v74;
  char v75;
  void *v76;
  _QWORD *v77;
  char v78;

  v4 = v3;
  v64 = a2;
  v65 = a3;
  v6 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_WORD *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v58 - v10;
  v11 = type metadata accessor for FeedItem(0);
  v70 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB8726B8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v4 + 24);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x1E0DEF740], v13, v15);
  v19 = v18;
  LOBYTE(v18) = sub_1BB8726D0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) == 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v21 = *(_QWORD *)(v4 + 16);
  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  v22 = a1;
  v23 = v4;
  v61 = v21;
  if (v74 != 1)
    goto LABEL_5;
  if (a1 < 1)
  {
LABEL_50:
    __break(1u);
    return result;
  }
  v22 = 1;
LABEL_5:
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v63 = a1;
  if (v78 == 1)
  {
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      swift_retain();
      sub_1BB86E878();
      result = swift_release();
      if ((v74 & 1) != 0)
        break;
      v74 = v24;
      sub_1BAF8E380(&v74, v24, v22);
      v25 = a1 == v22;
      a1 = v63;
      v64(v22, v74, v25);
      result = swift_bridgeObjectRelease();
      if (a1 == v22)
        break;
      v26 = __OFADD__(v22++, 1);
      if (v26)
      {
        __break(1u);
        goto LABEL_12;
      }
    }
  }
  else
  {
LABEL_12:
    v27 = 0;
    v60 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testSubject;
    v67 = v22;
    v58 = v4;
    v59 = v22;
    while (1)
    {
      swift_retain();
      sub_1BB86E878();
      result = swift_release();
      if ((v74 & 1) != 0)
        break;
      if (v22 < 1)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      swift_retain();
      sub_1BAF8EE28(1, v67, v23);
      v29 = v28;
      v62 = v27;
      swift_release();
      swift_bridgeObjectRetain();
      v30 = sub_1BB392440(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v32 = v30[2];
      v31 = v30[3];
      if (v32 >= v31 >> 1)
        v30 = sub_1BB392440((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
      v30[2] = v32 + 1;
      v30[v32 + 4] = v29;
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      if (v74 == 2)
      {
        v33 = 1;
        v66 = v29;
LABEL_19:
        v68 = v30;
        v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        result = sub_1BAC7AD0C(0, v33, 0);
        v34 = 0;
        v35 = v77;
        v36 = v33;
        v37 = 1;
        while (1)
        {
          if (v34)
            goto LABEL_48;
          v38 = sub_1BB5BB258();
          v39 = sub_1BB871B24();
          v40 = (uint64_t)v72;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v72, 1, 1, v39);
          v76 = 0;
          v74 = 0;
          v75 = 1;
          v73 = 0;
          v41 = (char *)v8 + v6[6];
          v42 = type metadata accessor for SharedItem();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
          *v8 = 258;
          *((_BYTE *)v8 + v6[7]) = 1;
          *((_BYTE *)v8 + v6[8]) = 0;
          *((_BYTE *)v8 + v6[9]) = 0;
          *((_BYTE *)v8 + v6[10]) = 0;
          v43 = v69;
          FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v38, 0, &v73, v40, (uint64_t)v8, &v76, v69, (uint64_t)&v74);
          swift_storeEnumTagMultiPayload();
          v77 = v35;
          v45 = v35[2];
          v44 = v35[3];
          if (v45 >= v44 >> 1)
          {
            sub_1BAC7AD0C(v44 > 1, v45 + 1, 1);
            v35 = v77;
          }
          v35[2] = v45 + 1;
          v46 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
          result = sub_1BA5193C4(v43, (uint64_t)v35 + v46 + *(_QWORD *)(v70 + 72) * v45, type metadata accessor for FeedItem);
          v34 = v37 == v33;
          if (v37 == v33)
          {
            v37 = 0;
          }
          else
          {
            v26 = __OFADD__(v37++, 1);
            if (v26)
            {
              __break(1u);
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
          }
          if (!--v36)
          {
            v47 = *(_QWORD *)(v66 + 16);
            if (v47 >= v33)
              v48 = v33;
            else
              v48 = *(_QWORD *)(v66 + 16);
            v49 = v66 + v46;
            v50 = (2 * v47) | 1;
            v74 = v35;
            v51 = swift_bridgeObjectRetain();
            result = sub_1BB386364(v51, v49, v48, v50);
            v52 = v74;
            v30 = v68;
            v54 = v68[2];
            v53 = v68[3];
            if (v54 >= v53 >> 1)
            {
              result = (uint64_t)sub_1BB392440((_QWORD *)(v53 > 1), v54 + 1, 1, v68);
              v30 = (_QWORD *)result;
            }
            v30[2] = v54 + 1;
            v30[v54 + 4] = v52;
            if (v33 == v67)
            {
              swift_bridgeObjectRelease();
              v23 = v58;
              goto LABEL_40;
            }
            v26 = __OFADD__(v33++, 1);
            if (!v26)
              goto LABEL_19;
            goto LABEL_45;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_40:
      v55 = v63;
      v22 = v59;
      v56 = v67;
      v64(v67, v30, v67 == v63);
      result = swift_bridgeObjectRelease();
      v57 = v56 == v55;
      v27 = v62;
      if (v57)
        return result;
      v26 = __OFADD__(v67++, 1);
      if (v26)
        goto LABEL_47;
    }
  }
  return result;
}

uint64_t sub_1BAF8E048@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE v13[7];
  char v14;
  uint64_t v15;
  char v16;
  void *v17;

  v2 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-v6];
  v8 = sub_1BB5BB258();
  v9 = sub_1BB871B24();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v17 = 0;
  v15 = 0;
  v16 = 1;
  v14 = 0;
  v10 = (char *)v4 + v2[6];
  v11 = type metadata accessor for SharedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *v4 = 258;
  *((_BYTE *)v4 + v2[7]) = 1;
  *((_BYTE *)v4 + v2[8]) = 0;
  *((_BYTE *)v4 + v2[9]) = 0;
  *((_BYTE *)v4 + v2[10]) = 0;
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v8, 0, &v14, (uint64_t)v7, (uint64_t)v4, &v17, a1, (uint64_t)&v15);
  type metadata accessor for FeedItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BAF8E1E4@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE v13[7];
  char v14;
  uint64_t v15;
  char v16;
  void *v17;

  v2 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-v6];
  v8 = sub_1BB5BAED4();
  v9 = sub_1BB871B24();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v17 = 0;
  v15 = 0;
  v16 = 1;
  v14 = 0;
  v10 = (char *)v4 + v2[6];
  v11 = type metadata accessor for SharedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *v4 = 258;
  *((_BYTE *)v4 + v2[7]) = 1;
  *((_BYTE *)v4 + v2[8]) = 0;
  *((_BYTE *)v4 + v2[9]) = 0;
  *((_BYTE *)v4 + v2[10]) = 0;
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v8, 0, &v14, (uint64_t)v7, (uint64_t)v4, &v17, a1, (uint64_t)&v15);
  type metadata accessor for FeedItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BAF8E380(_QWORD **a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = v3;
  v35 = *MEMORY[0x1E0C80C00];
  v8 = (_QWORD *)sub_1BB8726B8();
  v9 = *(v8 - 1);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v4 + 24);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_1BB8726D0();
  (*(void (**)(_QWORD *, _QWORD *))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_retain();
  sub_1BB86E878();
  result = swift_release();
  if ((v34 & 1) != 0 || a2[2] >= a3)
    return result;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v34 != 1)
  {
    sub_1BA4B07F0(0, &qword_1ED3A1738, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItem(0) - 8) + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
    sub_1BAF8E1E4(v18 + v17);
    v34 = a2;
    swift_bridgeObjectRetain();
    sub_1BB386350(v18);
    v12 = v34;
    if (v34[2] != a3)
    {
LABEL_10:
      sub_1BAF8E380(a1, v12, a3);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    v8 = *a1;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_7:
      v19 = v8[2];
      v20 = v8[3];
      v21 = v19 + 1;
      if (v19 >= v20 >> 1)
      {
        v33 = v19 + 1;
        v29 = v8;
        v30 = v19;
        v31 = sub_1BB392440((_QWORD *)(v20 > 1), v19 + 1, 1, v29);
        v19 = v30;
        v21 = v33;
        v8 = v31;
      }
      v8[2] = v21;
      v8[v19 + 4] = v12;
      *a1 = v8;
      goto LABEL_10;
    }
LABEL_21:
    v8 = sub_1BB392440(0, v8[2] + 1, 1, v8);
    goto LABEL_7;
  }
LABEL_11:
  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (v34 - 1 <= 1)
  {
    sub_1BA4B07F0(0, &qword_1ED3A1738, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItem(0) - 8) + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
    sub_1BAF8E048(v24 + v23);
    v34 = a2;
    swift_bridgeObjectRetain();
    sub_1BB386350(v24);
    v25 = v34;
    if (v34[2] == a3)
    {
      v26 = *a1;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_1BB392440(0, v26[2] + 1, 1, v26);
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v26 = sub_1BB392440((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v26[2] = v28 + 1;
      v26[v28 + 4] = v25;
      *a1 = v26;
    }
    sub_1BAF8E380(a1, v25, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAF8E768()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatTestRunner()
{
  return objc_opt_self();
}

uint64_t sub_1BAF8E7BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAF8E7E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for GroupLayoutContext();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 360) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = sub_1BB86D7A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  v4 = v0 + v2 + *(int *)(v1 + 20);
  v5 = sub_1BB86D660();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + v2 + *(int *)(v1 + 24);
  if (*(_QWORD *)(v6 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_1BB8705C4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAF8EA48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(type metadata accessor for GroupLayoutContext() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 360) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BAF8BE48(*(_QWORD *)(v0 + 16), (const void *)(v0 + 24), v0 + v2, *v3, v3[1]);
}

uint64_t sub_1BAF8EA94(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAF8ECB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  __int128 v15[2];
  __int128 v16[2];
  __int128 v17[2];
  _QWORD v18[5];

  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[3] = &type metadata for DebugFormatFeatureAvailability;
  v18[4] = &off_1E73489B0;
  v18[0] = swift_allocObject();
  sub_1BAF8FFEC(a1, v18[0] + 16);
  sub_1BA4C010C(a3 + 16, (uint64_t)v17);
  sub_1BA4C010C((uint64_t)v18, (uint64_t)v16);
  sub_1BA4C010C(a3 + 96, (uint64_t)v15);
  v10 = *(_QWORD *)(a3 + 136);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v11 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_offlineManager);
  v12 = swift_allocObject();
  sub_1BA4CECCC(v17, v12 + 16);
  sub_1BA4CECCC(v16, v12 + 56);
  sub_1BA4CECCC(v15, v12 + 96);
  *(_QWORD *)(v12 + 136) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion, v9, v6);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_offlineManager) = v11;
  swift_unknownObjectRetain();
  v13 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v12;
}

void sub_1BAF8EE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;

  v35 = a3;
  v6 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_WORD *)((char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)v29 - v10;
  v11 = type metadata accessor for FeedItem(0);
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v14 == -1)
    return;
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7AD0C(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v29[1] = v3;
    v30 = v13;
    v16 = 0;
    v17 = v40;
    v18 = a1 - 1;
    v31 = a2;
    while (a2 != v18)
    {
      if (v16)
        goto LABEL_25;
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      if (v37 == 1)
        v19 = sub_1BB5BB258();
      else
        v19 = sub_1BB5BAED4();
      v20 = v19;
      v21 = sub_1BB871B24();
      v22 = (uint64_t)v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v32, 1, 1, v21);
      v39 = 0;
      v37 = 0;
      v38 = 1;
      v36 = 0;
      v23 = (char *)v8 + v6[6];
      v24 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
      *v8 = 258;
      *((_BYTE *)v8 + v6[7]) = 1;
      *((_BYTE *)v8 + v6[8]) = 0;
      *((_BYTE *)v8 + v6[9]) = 0;
      *((_BYTE *)v8 + v6[10]) = 0;
      v25 = (uint64_t)v30;
      FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v20, 0, &v36, v22, (uint64_t)v8, &v39, (uint64_t)v30, (uint64_t)&v37);
      swift_storeEnumTagMultiPayload();
      v40 = v17;
      v27 = *(_QWORD *)(v17 + 16);
      v26 = *(_QWORD *)(v17 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BAC7AD0C(v26 > 1, v27 + 1, 1);
        v17 = v40;
      }
      *(_QWORD *)(v17 + 16) = v27 + 1;
      sub_1BA5193C4(v25, v17+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v27, type metadata accessor for FeedItem);
      a2 = v31;
      v16 = a1 == v31;
      if (a1 == v31)
      {
        a1 = 0;
      }
      else if (__OFADD__(a1++, 1))
      {
        goto LABEL_21;
      }
      if (v31 == ++v18)
        return;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1BAF8F164(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  result = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(_QWORD *)(v5 + 16))
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BA6E35A8(v7, v8);
        if ((v9 & 1) != 0)
        {
          swift_retain();
          v10 = swift_bridgeObjectRelease_n();
          MEMORY[0x1BCCE36AC](v10);
          if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1BAF8F290(const void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  const char *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[144];
  _QWORD v76[18];
  _BYTE v77[144];
  _QWORD v78[18];
  _QWORD v79[42];
  uint64_t v80;

  v12 = sub_1BB8726B8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[2] = a4;
  v71[3] = a5;
  v71[4] = a6;
  memcpy(v79, a1, sizeof(v79));
  v16 = *(void **)(a3 + 24);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  LOBYTE(v16) = sub_1BB8726D0();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v67 = a6;
    v18 = v79[22];
    v80 = v79[1];
    v78[0] = v79[1];
    sub_1BA781758((uint64_t)&v80);
    swift_bridgeObjectRetain();
    sub_1BAF8EA94((uint64_t)v79);
    sub_1BA5E34E0(v18);
    v19 = swift_bridgeObjectRetain();
    sub_1BA5E34E0(v19);
    v20 = swift_bridgeObjectRetain();
    sub_1BA5E34E0(v20);
    sub_1BAF8FB4C((uint64_t)v79);
    a6 = v78[0];
    v68 = a5;
    if (!(v78[0] >> 62))
    {
      v21 = *(_QWORD *)((v78[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v21)
        goto LABEL_4;
LABEL_47:
      swift_release();
LABEL_48:
      swift_bridgeObjectRelease_n();
      return sub_1BAF8BF10(MEMORY[0x1E0DEE9D8], 1, a4, v68, v67);
    }
  }
  else
  {
LABEL_45:
    __break(1u);
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_1BB873F30();
  if (!v21)
    goto LABEL_47;
LABEL_4:
  v65 = a3;
  v66 = a4;
  v64 = a2;
  a2 = a6 & 0xC000000000000001;
  v69 = *(_QWORD *)(a3 + 16);
  a4 = 4;
  while (1)
  {
    v22 = a4 - 4;
    if (a2)
    {
      v23 = MEMORY[0x1BCCE4630](a4 - 4, a6);
      v24 = a4 - 3;
      if (__OFADD__(v22, 1))
        goto LABEL_44;
    }
    else
    {
      v23 = swift_retain();
      v24 = a4 - 3;
      if (__OFADD__(v22, 1))
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
    }
    a3 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    v70 = v23;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (a3 == v78[0] && v25 == v78[1])
    {
      v28 = v65;
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v27 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
      break;
    swift_release();
    ++a4;
    if (v24 == v21)
    {
      swift_release();
      a4 = v66;
      goto LABEL_48;
    }
  }
  v28 = v65;
  swift_release();
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v29 = v64;
  sub_1BB029FBC(v70, v78[0], (uint64_t)v75);
  sub_1BAF8FD64((uint64_t)v75, (uint64_t)v76);
  sub_1BAF8FD64((uint64_t)v76, (uint64_t)v77);
  if (sub_1BAF8FDC0((uint64_t)v77) == 1)
  {
    sub_1BAF8BF10(MEMORY[0x1E0DEE9D8], 1, v66, v68, v67);
    return swift_release();
  }
  else
  {
    sub_1BAF8FDD8((uint64_t)v77, (uint64_t)v78);
    swift_beginAccess();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    v31 = v73;
    sub_1BAF8EA94((uint64_t)v79);
    v32 = sub_1BAF8F164(v31, (uint64_t)v79);
    sub_1BAF8FB4C((uint64_t)v79);
    swift_bridgeObjectRelease();
    v65 = FormatPackageInventory.merging(with:)(v32);
    swift_bridgeObjectRelease();
    sub_1BA4AD288(0, &qword_1EF2B7800, (uint64_t)&type metadata for DebugFormatTestSummaryItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB8832C0;
    v34 = sub_1BAF8C218();
    *(_QWORD *)(v33 + 32) = 0x7470697263736544;
    *(_QWORD *)(v33 + 40) = 0xEB000000006E6F69;
    *(_QWORD *)(v33 + 48) = v34;
    *(_QWORD *)(v33 + 56) = v35;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if ((_BYTE)v73)
    {
      if (v73 == 1)
      {
        v36 = 0xD000000000000018;
        v37 = "Headlines (No Thumbnail)";
      }
      else
      {
        v36 = 0xD000000000000024;
        v37 = "Headlines (Thumbnail + No Thumbnail)";
      }
      v38 = (unint64_t)(v37 - 32) | 0x8000000000000000;
    }
    else
    {
      v38 = 0x80000001BB961500;
      v36 = 0xD000000000000015;
    }
    *(_QWORD *)(v33 + 64) = 0x7463656A627553;
    *(_QWORD *)(v33 + 72) = 0xE700000000000000;
    *(_QWORD *)(v33 + 80) = v36;
    *(_QWORD *)(v33 + 88) = v38;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    v39 = 0x614C206C61656449;
    if ((_BYTE)v72)
      v39 = 0xD000000000000010;
    v40 = 0x80000001BB971300;
    if (!(_BYTE)v72)
      v40 = 0xEC00000074756F79;
    strcpy((char *)(v33 + 96), "Layout Order");
    *(_BYTE *)(v33 + 109) = 0;
    *(_WORD *)(v33 + 110) = -5120;
    *(_QWORD *)(v33 + 112) = v39;
    *(_QWORD *)(v33 + 120) = v40;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    v41 = 0x70756F7247;
    if ((_BYTE)v73)
    {
      v41 = 0x6567616B636150;
      v42 = 0xE700000000000000;
    }
    else
    {
      v42 = 0xE500000000000000;
    }
    *(_QWORD *)(v33 + 128) = 0x65706F6353;
    *(_QWORD *)(v33 + 136) = 0xE500000000000000;
    *(_QWORD *)(v33 + 144) = v41;
    *(_QWORD *)(v33 + 152) = v42;
    v43 = v70;
    v44 = (uint64_t *)(v70 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
    swift_beginAccess();
    if (v44[1])
    {
      v45 = *v44;
      v46 = v44[1];
    }
    else
    {
      v45 = *(_QWORD *)(v43 + 16);
      v46 = swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v33 + 160) = 0x6567616B636150;
    *(_QWORD *)(v33 + 168) = 0xE700000000000000;
    *(_QWORD *)(v33 + 176) = v45;
    *(_QWORD *)(v33 + 184) = v46;
    type metadata accessor for GroupLayoutContext();
    swift_bridgeObjectRetain();
    v74 = sub_1BB86D63C();
    sub_1BA6F0168();
    v47 = sub_1BB873B58();
    *(_QWORD *)(v33 + 192) = 0x736E6D756C6F43;
    *(_QWORD *)(v33 + 200) = 0xE700000000000000;
    *(_QWORD *)(v33 + 208) = v47;
    *(_QWORD *)(v33 + 216) = v48;
    v49 = (void *)sub_1BB86D75C();
    v50 = UIContentSizeCategory.description.getter();
    v52 = v51;

    *(_QWORD *)(v33 + 224) = 0xD000000000000015;
    *(_QWORD *)(v33 + 232) = 0x80000001BB973080;
    *(_QWORD *)(v33 + 240) = v50;
    *(_QWORD *)(v33 + 248) = v52;
    v53 = sub_1BB392454(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v55 = v53[2];
    v54 = v53[3];
    if (v55 >= v54 >> 1)
      v53 = sub_1BB392454((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
    v56 = v67;
    v53[2] = v55 + 1;
    v57 = &v53[5 * v55];
    v57[4] = v33;
    v57[5] = 0;
    v57[6] = 0;
    v57[7] = 0;
    *((_BYTE *)v57 + 64) = 0;
    v74 = (uint64_t)v53;
    swift_bridgeObjectRetain_n();
    v58 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v58 = sub_1BB392454(0, v53[2] + 1, 1, v53);
    v60 = v58[2];
    v59 = v58[3];
    if (v60 >= v59 >> 1)
      v58 = sub_1BB392454((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
    v58[2] = v60 + 1;
    v61 = &v58[5 * v60];
    *((_OWORD *)v61 + 2) = 0u;
    *((_OWORD *)v61 + 3) = 0u;
    *((_BYTE *)v61 + 64) = 0x80;
    swift_bridgeObjectRelease();
    sub_1BAF8BF10((uint64_t)v58, 0, v66, v68, v56);
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    MEMORY[0x1E0C80A78](v72);
    *(&v63 - 8) = v28;
    *(&v63 - 7) = (uint64_t)v78;
    *(&v63 - 6) = v65;
    *(&v63 - 5) = v29;
    *(&v63 - 4) = (uint64_t)sub_1BAF8FB40;
    *(&v63 - 3) = (uint64_t)v71;
    *(&v63 - 2) = (uint64_t)&v74;
    sub_1BAF8D9D4(v62, (void (*)(uint64_t, _QWORD *, _BOOL8))sub_1BAF8FE14, (uint64_t)(&v63 - 10));
    swift_release();
    sub_1BA8CF278(v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF8FE44);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAF8FB40(uint64_t a1, int a2)
{
  uint64_t *v2;

  return sub_1BAF8BF10(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BAF8FB4C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAF8FD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2B77F8, (uint64_t)&type metadata for DebugFormatTestScope.Resolved, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF8FDC0(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 48) >> 2) > 0x80000000)
    return -(*(_QWORD *)(a1 + 48) >> 2);
  else
    return 0;
}

uint64_t sub_1BAF8FDD8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy144_8(a2, a1);
  return a2;
}

uint64_t sub_1BAF8FE14(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return sub_1BAF8C424(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD **)(v3 + 24), *(uint64_t **)(v3 + 32), *(_QWORD *)(v3 + 40), *(void (**)(_QWORD *, uint64_t))(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD ***)(v3 + 64));
}

uint64_t sub_1BAF8FE44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  if (a7 >> 2 != 0xFFFFFFFF || a17 >= 0x100)
    return sub_1BAF8FE88(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  return result;
}

uint64_t sub_1BAF8FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if ((a17 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA79DDC8(a9, a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF8FF60(uint64_t a1)
{
  return *(_QWORD *)(a1 + 128) >> 63;
}

uint64_t sub_1BAF8FF6C(uint64_t result)
{
  *(_QWORD *)(result + 128) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1BAF8FF7C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for DebugFormatFeatureAvailability(a2, a1);
  return a2;
}

uint64_t sub_1BAF8FFB8(uint64_t a1)
{
  destroy for DebugFormatFeatureAvailability();
  return a1;
}

uint64_t sub_1BAF8FFEC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DebugFormatFeatureAvailability(a2, a1);
  return a2;
}

uint64_t sub_1BAF90028()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF9005C()
{
  uint64_t v0;

  return sub_1BAF8C19C(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t FormatViewNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 FormatViewNodeStyle.Selector.init(selector:background:borders:cornerRadius:shadow:alpha:ignoresSmartInvertColors:)@<Q0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  __n128 result;

  *(_OWORD *)(a8 + 32) = *(_OWORD *)a4;
  v8 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a8 + 56) = *(_OWORD *)a5;
  *(_OWORD *)(a8 + 72) = v8;
  v9 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a8 + 88) = *(_OWORD *)(a5 + 32);
  v10 = a1[1];
  v11 = *a2;
  v12 = *(_BYTE *)(a4 + 16);
  v13 = *(_BYTE *)(a5 + 80);
  v14 = *a6;
  *(_QWORD *)a8 = *a1;
  *(_QWORD *)(a8 + 8) = v10;
  *(_QWORD *)(a8 + 16) = v11;
  *(_QWORD *)(a8 + 24) = a3;
  *(_BYTE *)(a8 + 48) = v12;
  *(_OWORD *)(a8 + 104) = v9;
  result = *(__n128 *)(a5 + 64);
  *(__n128 *)(a8 + 120) = result;
  *(_BYTE *)(a8 + 136) = v13;
  *(_QWORD *)(a8 + 144) = v14;
  *(_BYTE *)(a8 + 152) = a7;
  return result;
}

uint64_t FormatViewNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatViewNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatViewNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatViewNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatViewNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 144);
  v8 = *(_QWORD *)(v1 + 152);
  v9 = *(_QWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 168);
  v11 = *(_QWORD *)(v1 + 176);
  v12 = *(_BYTE *)(v1 + 184);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatViewNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 185);
}

uint64_t FormatViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, __int128 *a10, char a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v14 = swift_allocObject();
  v15 = *a6;
  v16 = *a7;
  v17 = *a9;
  v18 = a9[1];
  v19 = *((_BYTE *)a9 + 16);
  v26 = a10[1];
  v27 = *a10;
  v24 = a10[3];
  v25 = a10[2];
  v20 = *((_QWORD *)a10 + 8);
  v21 = *((_QWORD *)a10 + 9);
  v22 = *((_BYTE *)a10 + 80);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 72) = a8;
  *(_QWORD *)(v14 + 80) = v17;
  *(_QWORD *)(v14 + 88) = v18;
  *(_BYTE *)(v14 + 96) = v19;
  *(_OWORD *)(v14 + 104) = v27;
  *(_OWORD *)(v14 + 120) = v26;
  *(_OWORD *)(v14 + 136) = v25;
  *(_OWORD *)(v14 + 152) = v24;
  *(_QWORD *)(v14 + 168) = v20;
  *(_QWORD *)(v14 + 176) = v21;
  *(_BYTE *)(v14 + 184) = v22;
  *(_BYTE *)(v14 + 185) = a11;
  return v14;
}

uint64_t FormatViewNodeStyle.init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, __int128 *a10, char a11)
{
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v16 = *a6;
  v17 = *a7;
  v18 = *a9;
  v28 = a9[1];
  v19 = *((_BYTE *)a9 + 16);
  v26 = a10[1];
  v27 = *a10;
  v24 = a10[3];
  v25 = a10[2];
  v22 = *((_QWORD *)a10 + 9);
  v23 = *((_QWORD *)a10 + 8);
  v20 = *((_BYTE *)a10 + 80);
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = v16;
  *(_QWORD *)(v11 + 64) = v17;
  *(_QWORD *)(v11 + 72) = a8;
  *(_QWORD *)(v11 + 80) = v18;
  *(_QWORD *)(v11 + 88) = v28;
  *(_BYTE *)(v11 + 96) = v19;
  *(_OWORD *)(v11 + 104) = v27;
  *(_OWORD *)(v11 + 120) = v26;
  *(_OWORD *)(v11 + 136) = v25;
  *(_OWORD *)(v11 + 152) = v24;
  *(_QWORD *)(v11 + 168) = v23;
  *(_QWORD *)(v11 + 176) = v22;
  *(_BYTE *)(v11 + 184) = v20;
  *(_BYTE *)(v11 + 185) = a11;
  return v11;
}

uint64_t sub_1BAF90560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v30 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 64);
  v31 = v2;
  v27 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0)
  {
    sub_1BB39D8E4();
    v6 = v32;
  }
  v7 = *(_QWORD *)(v1 + 72);
  v28 = v5;
  v29 = v4;
  v26 = v3;
  if (v7)
    v8 = sub_1BAF49D98(v7);
  else
    v8 = 0;
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v11 = *(_BYTE *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 112);
  v13 = *(_QWORD *)(v1 + 136);
  v14 = *(unsigned __int8 *)(v1 + 184);
  v24 = *(_QWORD *)(v1 + 120);
  v25 = *(_QWORD *)(v1 + 104);
  v22 = *(_QWORD *)(v1 + 144);
  v23 = *(_QWORD *)(v1 + 128);
  v20 = *(_QWORD *)(v1 + 160);
  v21 = *(_QWORD *)(v1 + 152);
  v18 = *(_QWORD *)(v1 + 176);
  v19 = *(_QWORD *)(v1 + 168);
  sub_1BA6E6C54(v9, v10, v11);
  if (v14 != 254)
  {
    sub_1BB525134();
    v13 = v32;
    v12 = v12;
  }
  v15 = *(_BYTE *)(v1 + 185);
  v16 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v16 + 16) = v31;
  *(_QWORD *)(v16 + 24) = v26;
  *(_QWORD *)(v16 + 32) = v30;
  *(_QWORD *)(v16 + 40) = v29;
  swift_beginAccess();
  *(_QWORD *)(v16 + 48) = v28;
  *(_QWORD *)(v16 + 56) = v27;
  *(_QWORD *)(v16 + 64) = v6;
  *(_QWORD *)(v16 + 72) = v8;
  *(_QWORD *)(v16 + 80) = v9;
  *(_QWORD *)(v16 + 88) = v10;
  *(_BYTE *)(v16 + 96) = v11;
  *(_QWORD *)(v16 + 104) = v25;
  *(_QWORD *)(v16 + 112) = v12;
  *(_QWORD *)(v16 + 120) = v24;
  *(_QWORD *)(v16 + 128) = v23;
  *(_QWORD *)(v16 + 136) = v13;
  *(_QWORD *)(v16 + 144) = v22;
  *(_QWORD *)(v16 + 152) = v21;
  *(_QWORD *)(v16 + 160) = v20;
  *(_QWORD *)(v16 + 168) = v19;
  *(_QWORD *)(v16 + 176) = v18;
  *(_BYTE *)(v16 + 184) = v14;
  *(_BYTE *)(v16 + 185) = v15;
  return v16;
}

uint64_t sub_1BAF90794(_QWORD *a1, _QWORD *a2)
{
  return static FormatViewNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatViewNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatViewNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatViewNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 128);
  v12 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatViewNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t FormatViewNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_1BAF90844()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  ValueMetadata *v5;
  _UNKNOWN **v6;
  uint64_t v7;

  v1 = *v0;
  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v3 = *(_QWORD *)(v1 + 64);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    v6 = &protocol witness table for FormatBackground;
    v5 = &type metadata for FormatBackground;
    v4 = *(_QWORD *)(v1 + 64);
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = v6;
  sub_1BA6E6C68(v3);
  v7 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v7;
}

uint64_t _s8NewsFeed19FormatViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v50 = *(_QWORD *)(a1 + 56);
  v51 = *(_QWORD *)(a1 + 64);
  v52 = *(_QWORD *)(a1 + 72);
  v53 = *(_QWORD *)(a1 + 80);
  v54 = *(_QWORD *)(a1 + 88);
  v55 = *(_QWORD *)(a1 + 96);
  v56 = *(_QWORD *)(a1 + 104);
  v57 = *(_QWORD *)(a1 + 112);
  v48 = *(_QWORD *)(a1 + 128);
  v49 = *(_QWORD *)(a1 + 120);
  v58 = *(unsigned __int8 *)(a1 + 136);
  v35 = *(_QWORD *)(a1 + 144);
  v33 = *(unsigned __int8 *)(a1 + 152);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v38 = *(_QWORD *)(a2 + 56);
  v39 = *(_QWORD *)(a2 + 64);
  v40 = *(_QWORD *)(a2 + 72);
  v41 = *(_QWORD *)(a2 + 80);
  v42 = *(_QWORD *)(a2 + 88);
  v43 = *(_QWORD *)(a2 + 96);
  v44 = *(_QWORD *)(a2 + 104);
  v45 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 128);
  v37 = *(_QWORD *)(a2 + 120);
  v46 = *(unsigned __int8 *)(a2 + 136);
  v34 = *(_QWORD *)(a2 + 144);
  v32 = *(unsigned __int8 *)(a2 + 152);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if ((~v2 & 0xF000000000000007) != 0)
    {
      v70 = v2;
      if ((~v8 & 0xF000000000000007) != 0)
      {
        v59 = v8;
        swift_retain_n();
        static FormatBackground.== infix(_:_:)((uint64_t)&v70);
        v15 = v14;
        swift_release();
        sub_1BA6E6CD8(v2);
        if ((v15 & 1) == 0)
          return 0;
LABEL_11:
        if (v4)
        {
          if (!v7)
            return 0;
          swift_bridgeObjectRetain();
          v16 = swift_bridgeObjectRetain();
          v17 = sub_1BA882894(v16, v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v17)
            return 0;
        }
        else if (v7)
        {
          return 0;
        }
        if (v6 <= 0xFD)
        {
          v70 = v3;
          v71 = v5;
          LOBYTE(v72) = v6;
          if (v11 <= 0xFD)
          {
            v59 = v9;
            v60 = v10;
            LOBYTE(v61) = v11;
            sub_1BA6E6C54(v3, v5, v6);
            sub_1BA6F2B04(v3, v5, v6);
            v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v70, (uint64_t)&v59);
            sub_1BA6F2B88(v70, v71, v72);
            sub_1BA6E6CC4(v3, v5, v6);
            if ((v18 & 1) == 0)
              return 0;
LABEL_23:
            v19 = v58;
            if (v58 == 254)
            {
              v20 = v46;
              v22 = v56;
              v21 = v57;
              v24 = v54;
              v23 = v55;
              v26 = v52;
              v25 = v53;
              v28 = v50;
              v27 = v51;
              v29 = v48;
              v30 = v49;
              if (v46 == 254)
              {
LABEL_30:
                if (v35)
                {
                  if (!v34)
                    return 0;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v31 = sub_1BA881EAC(v35, v34);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v31 & 1) == 0)
                    return 0;
LABEL_35:
                  if (v33 == 2)
                  {
                    if (v32 != 2)
                      return 0;
                  }
                  else if (v32 == 2 || ((((v33 & 1) == 0) ^ v32) & 1) == 0)
                  {
                    return 0;
                  }
                  return 1;
                }
                if (!v34)
                  goto LABEL_35;
                return 0;
              }
            }
            else
            {
              v28 = v50;
              v27 = v51;
              v70 = v50;
              v71 = v51;
              v26 = v52;
              v25 = v53;
              v72 = v52;
              v73 = v53;
              v24 = v54;
              v23 = v55;
              v74 = v54;
              v75 = v55;
              v22 = v56;
              v76 = v56;
              v77 = v57;
              v29 = v48;
              v30 = v49;
              v78 = v49;
              v79 = v48;
              v80 = v58;
              v20 = v46;
              if (v46 != 254)
              {
                v59 = v38;
                LODWORD(v60) = v39;
                v61 = v40;
                v62 = v41;
                v63 = v42;
                v64 = v43;
                v65 = v44;
                v66 = v45;
                v67 = v37;
                v68 = v36;
                v69 = v46;
                sub_1BA6E8A48(v50, v51, v52, v53, v54, v55, v56, v57, v49, v48, v58);
                swift_retain();
                v47 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v70, (uint64_t)&v59);
                swift_release();
                sub_1BA6E8A78(v50, v51, v52, v53, v54, v55, v56, v57, v49, v48, v58);
                if ((v47 & 1) == 0)
                  return 0;
                goto LABEL_30;
              }
              swift_retain();
              v21 = v57;
              v19 = v58;
            }
            v70 = v28;
            v71 = v27;
            v72 = v26;
            v73 = v25;
            v74 = v24;
            v75 = v23;
            v76 = v22;
            v77 = v21;
            v78 = v30;
            v79 = v29;
            v80 = v19;
            v81 = v38;
            v82 = v39;
            v83 = v40;
            v84 = v41;
            v85 = v42;
            v86 = v43;
            v87 = v44;
            v88 = v45;
            v89 = v37;
            v90 = v36;
            v91 = v20;
            sub_1BA6E8A48(v38, v39, v40, v41, v42, v43, v44, v45, v37, v36, v20);
            sub_1BA9F10E8((uint64_t)&v70);
            return 0;
          }
          sub_1BA6F2B04(v3, v5, v6);
          sub_1BA6F2B04(v3, v5, v6);
          sub_1BA6F2B88(v3, v5, v6);
        }
        else if (v11 > 0xFD)
        {
          goto LABEL_23;
        }
        sub_1BA6E6C54(v9, v10, v11);
        sub_1BA6E6CC4(v3, v5, v6);
        sub_1BA6E6CC4(v9, v10, v11);
        return 0;
      }
      swift_retain();
    }
    else if ((~v8 & 0xF000000000000007) == 0)
    {
      goto LABEL_11;
    }
    sub_1BA6E6C68(v8);
    sub_1BA6E6CD8(v2);
    sub_1BA6E6CD8(v8);
    return 0;
  }
  return result;
}

uint64_t sub_1BAF90E58(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF90F3C(&qword_1EF2B7810, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF90E8C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAF90F3C(&qword_1ED3C88B8, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  result = sub_1BAF90F3C(&qword_1ED3A66F8, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BAF90ED8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF90F3C(&qword_1ED3C88B8, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  a1[2] = sub_1BAF90F3C(&qword_1ED3A66F8, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  result = sub_1BAF90F3C(&qword_1EF2B7818, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF90F3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatViewNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAF90F78(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF90F9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF90F9C()
{
  unint64_t result;

  result = qword_1EF2B7820;
  if (!qword_1EF2B7820)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatViewNodeStyle.Selector, &type metadata for FormatViewNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B7820);
  }
  return result;
}

unint64_t sub_1BAF90FE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82DD08();
  a1[2] = sub_1BA82DD4C();
  result = sub_1BAF91014();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF91014()
{
  unint64_t result;

  result = qword_1EF2B7828;
  if (!qword_1EF2B7828)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatViewNodeStyle.Selector, &type metadata for FormatViewNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B7828);
  }
  return result;
}

uint64_t sub_1BAF91058@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF910A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatViewNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:ignoresSmartInvertColors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t assignWithCopy for FormatViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unsigned int v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  _OWORD *v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BAF913AC(a1 + 16);
    v5 = *(_QWORD *)(a2 + 16);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a1 + 32);
  v8 = (_OWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      v14 = *(_QWORD *)(a2 + 32);
      v15 = *(_QWORD *)(a2 + 40);
      sub_1BA6F2B04(v14, v15, *(_BYTE *)(a2 + 48));
      v16 = *(_QWORD *)(a1 + 32);
      v17 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      v18 = *(_BYTE *)(a1 + 48);
      *(_BYTE *)(a1 + 48) = v9;
      sub_1BA6F2B88(v16, v17, v18);
    }
    else
    {
      sub_1BA9F0244(a1 + 32);
      v11 = *(_BYTE *)(a2 + 48);
      *v7 = *v8;
      *(_BYTE *)(a1 + 48) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v12, v13, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_BYTE *)(a1 + 48) = v9;
  }
  else
  {
    v10 = *v8;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *v7 = v10;
  }
  v19 = (_OWORD *)(a1 + 56);
  v20 = (_OWORD *)(a2 + 56);
  v21 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v21 == 254)
    {
      v22 = *(_OWORD *)(a2 + 72);
      *v19 = *v20;
      *(_OWORD *)(a1 + 72) = v22;
      v23 = *(_OWORD *)(a2 + 88);
      v24 = *(_OWORD *)(a2 + 104);
      v25 = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v24;
      *(_OWORD *)(a1 + 120) = v25;
      *(_OWORD *)(a1 + 88) = v23;
    }
    else
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v30 = *(_OWORD *)(a2 + 96);
      v31 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v30;
      *(_OWORD *)(a1 + 112) = v31;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1BA9F0278(a1 + 56);
    v26 = *(_OWORD *)(a2 + 72);
    *v19 = *v20;
    *(_OWORD *)(a1 + 72) = v26;
    v28 = *(_OWORD *)(a2 + 104);
    v27 = *(_OWORD *)(a2 + 120);
    v29 = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v28;
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 88) = v29;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_retain();
    swift_release();
    v32 = *(_OWORD *)(a2 + 96);
    v33 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)(a1 + 112) = v33;
  }
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t sub_1BAF913AC(uint64_t a1)
{
  destroy for FormatColorNotExpression();
  return a1;
}

uint64_t assignWithTake for FormatViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAF913AC(a1 + 16);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a1 + 48);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v7;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_11;
  }
  v9 = *(unsigned __int8 *)(a2 + 48);
  if (v9 > 0xFD)
  {
    sub_1BA9F0244(a1 + 32);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v7;
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BA6F2B88(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 136) != 254)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_release();
      v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      goto LABEL_16;
    }
    sub_1BA9F0278(a1 + 56);
  }
  v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v13 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v13;
LABEL_16:
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

ValueMetadata *type metadata accessor for FormatViewNodeStyle.Selector()
{
  return &type metadata for FormatViewNodeStyle.Selector;
}

_QWORD *sub_1BAF91568(double *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v14;
  char *v15;
  void (*v16)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  _OWORD v54[2];
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1EF2A9CF0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v41 = *(_QWORD *)(v4 + 72);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = (_QWORD *)(v6 + v5);
  if (a2)
  {
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    v46 = sub_1BAF90560();
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    v50 = 0;
    v10 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v46, v10 + 16);
    v11 = sub_1BA9F10D0;
  }
  else
  {
    v10 = 0;
    v8 = 0;
    v9 = 0xE000000000000000;
    v11 = sub_1BB739F50;
  }
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = (uint64_t (**)())((char *)v7 + *(int *)(v12 + 24));
  *v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(_QWORD *)(v6 + v5) = v8;
  v7[2] = 0;
  v7[3] = 0;
  v7[1] = v9;
  v15 = (char *)v7 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = -1;
  v16 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v16(v7, 0, 1, v12);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v54);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(v17 + 48) = v55;
  v18 = v54[1];
  *(_OWORD *)(v17 + 16) = v54[0];
  *(_OWORD *)(v17 + 32) = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87D7A0;
  v20 = v19 + v5;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 2003134806, 0xE400000000000000, (_QWORD *)(v19 + v5));
  v16((_QWORD *)(v19 + v5), 0, 1, v12);
  if (a2)
  {
    v21 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v21, (_QWORD *)(v20 + v41));
    v16((_QWORD *)(v20 + v41), 0, 1, v12);
    v22 = *(_QWORD *)(a2 + 64);
    sub_1BA6E6C68(v22);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v20 + v41));
    v16((_QWORD *)(v20 + v41), 0, 1, v12);
    v22 = 0xF000000000000007;
  }
  sub_1BAAFC1B0(0x756F72676B636142, 0xEA0000000000646ELL, v22, (_QWORD *)(v20 + 2 * v41));
  v16((_QWORD *)(v20 + 2 * v41), 0, 1, v12);
  if (a2)
    v23 = *(_BYTE *)(a2 + 185);
  else
    v23 = 2;
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v23, (_QWORD *)(v20 + 3 * v41));
  v16((_QWORD *)(v20 + 3 * v41), 0, 1, v12);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v19, v56);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(v24 + 48) = v57;
  v25 = v56[1];
  *(_OWORD *)(v24 + 16) = v56[0];
  *(_OWORD *)(v24 + 32) = v25;
  if (a2)
  {
    v26 = *(_QWORD *)(a2 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_BYTE *)(a2 + 96);
    sub_1BA6E6C54(v26, v27, v28);
  }
  else
  {
    v26 = 0;
    v27 = 0;
    v28 = -2;
  }
  v46 = v26;
  *(_QWORD *)&v47 = v27;
  BYTE8(v47) = v28;
  v29 = sub_1BB4D88A0(a1, (uint64_t)&v46);
  sub_1BA6E6CC4(v26, v27, v28);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v29;
  if (a2)
  {
    v40 = *(_BYTE *)(a2 + 184);
    v43 = *(_QWORD *)(a2 + 176);
    v44 = *(_QWORD *)(a2 + 168);
    v30 = *(_QWORD *)(a2 + 104);
    v31 = *(_QWORD *)(a2 + 112);
    v32 = *(_QWORD *)(a2 + 120);
    v33 = *(_QWORD *)(a2 + 128);
    v34 = *(_QWORD *)(a2 + 136);
    v35 = *(_QWORD *)(a2 + 144);
    v36 = *(_QWORD *)(a2 + 152);
    a2 = *(_QWORD *)(a2 + 160);
    sub_1BA6E8A48(v30, v31, v32, v33, v34, v35, v36, a2, v44, v43, v40);
  }
  else
  {
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v43 = 0;
    v44 = 0;
    v40 = -2;
  }
  v46 = v30;
  *(_QWORD *)&v47 = v31;
  *((_QWORD *)&v47 + 1) = v32;
  *(_QWORD *)&v48 = v33;
  *((_QWORD *)&v48 + 1) = v34;
  *(_QWORD *)&v49 = v35;
  *((_QWORD *)&v49 + 1) = v36;
  v50 = a2;
  v51 = v44;
  v52 = v43;
  v53 = v40;
  v39 = sub_1BB05E83C((uint64_t)&v46);
  sub_1BA6E8A78(v30, v31, v32, v33, v34, v35, v36, a2, v44, v43, v40);
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 184) = &off_1E7335C38;
  *(_QWORD *)(inited + 152) = v39;
  v37 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  return v37;
}

uint64_t sub_1BAF91BA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF91BDC()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

_QWORD *sub_1BAF91C0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v12 = (void *)a2[4];
      swift_bridgeObjectRetain();
      if ((unint64_t)v12 >= 4)
        v13 = v12;
      v14 = a2[5];
      a1[4] = v12;
      a1[5] = v14;
      v15 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = (void *)*a2;
      v9 = v8;
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1BAF91D44(uint64_t a1)
{
  int EnumCaseMultiPayload;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    v3 = *(void **)(a1 + 32);
    if ((unint64_t)v3 >= 4)

    v4 = a1 + *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
    sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
}

_QWORD *sub_1BAF91DE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    v10 = (void *)a2[4];
    swift_bridgeObjectRetain();
    if ((unint64_t)v10 >= 4)
      v11 = v10;
    v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    v13 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = (void *)*a2;
    v8 = v7;
    *a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1BAF91EF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatDebuggerSourceHighlight);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v9 = (void *)a2[4];
      swift_bridgeObjectRetain();
      if ((unint64_t)v9 >= 4)
        v10 = v9;
      a1[4] = v9;
      a1[5] = a2[5];
      v11 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = (void *)*a2;
      v8 = v7;
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceHighlight()
{
  uint64_t result;

  result = qword_1EF2B78A0;
  if (!qword_1EF2B78A0)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BAF9206C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 5) = v7;
    v8 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1BAF92134(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatDebuggerSourceHighlight);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v7;
      v8 = *(int *)(type metadata accessor for FormatDebuggerContext() + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BAF92214()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatDebuggerContext();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BAF92284@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[128];
  _BYTE v34[48];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;

  v32 = a2;
  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - v4;
  v6 = type metadata accessor for FormatDebuggerContext();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  v31 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA5193C4(a1, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  sub_1BA5193C4((uint64_t)v33, (uint64_t)v34, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  if (sub_1BA8CF120((uint64_t)v34) != 1)
  {
    v16 = v40;
    if (v40)
    {
      v17 = v41;
      v18 = v42;
      v19 = v43;
      v20 = v39;
      if (v36)
      {
        v29 = v38;
        v30 = v37;
        if (v39 == v35 && v40 == v36)
        {
          swift_bridgeObjectRetain_n();
          sub_1BAF92890(v20, v16, v17, v18, v19);
          swift_bridgeObjectRetain();
          swift_release();
          sub_1BAF92764((uint64_t)v33);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v15 = v31;
          v14 = v32;
          if (v17 != v30)
            goto LABEL_18;
        }
        else
        {
          LODWORD(v28) = sub_1BB874398();
          swift_bridgeObjectRetain_n();
          sub_1BAF92890(v20, v16, v17, v18, v19);
          swift_bridgeObjectRetain();
          swift_release();
          sub_1BAF92764((uint64_t)v33);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v15 = v31;
          v14 = v32;
          if ((v28 & 1) == 0 || v17 != v30)
            goto LABEL_18;
        }
        if (v18 == v29)
        {
          v22 = v19;
          sub_1BA8EBAE8(v20, v16, v17, v18, v19);
          *v12 = v19;
LABEL_32:
          swift_storeEnumTagMultiPayload();
          sub_1BA5193C4((uint64_t)v12, v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatDebuggerSourceHighlight);
          v13 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v13, 1, v10);
        }
      }
      else
      {
        swift_bridgeObjectRetain_n();
        sub_1BAF92890(v20, v16, v17, v18, v19);
        swift_release();
        sub_1BAF92764((uint64_t)v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v15 = v31;
        v14 = v32;
      }
LABEL_18:
      sub_1BA8EBAE8(v20, v16, v17, v18, v19);
      *v12 = 0;
      goto LABEL_32;
    }
    v21 = v36;
    if (!v36)
    {
      swift_release();
      sub_1BAF92764((uint64_t)v33);
      goto LABEL_3;
    }
    v29 = v37;
    v30 = v35;
    v28 = v38;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BAF92764((uint64_t)v33);
      sub_1BAF9283C((uint64_t)v5);
LABEL_31:
      v15 = v31;
      v14 = v32;
      goto LABEL_32;
    }
    sub_1BA5193C4((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
    v24 = v9[2];
    v23 = v9[3];
    if (v30 == *v9 && v21 == v9[1])
    {
      swift_bridgeObjectRetain();
      swift_release();
      sub_1BAF92764((uint64_t)v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1BB874398();
      swift_bridgeObjectRetain();
      swift_release();
      sub_1BAF92764((uint64_t)v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        goto LABEL_30;
    }
    if (v29 == v24 && v28 == v23)
    {
      sub_1BA5193C4((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
      goto LABEL_31;
    }
LABEL_30:
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
    goto LABEL_31;
  }
  swift_release();
LABEL_3:
  v13 = 1;
  v15 = v31;
  v14 = v32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v13, 1, v10);
}

uint64_t sub_1BAF92764(uint64_t a1)
{
  sub_1BAF927BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(void **)(a1 + 120));
  return a1;
}

void sub_1BAF927BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA8EBAE8(a12, a13, a14, a15, a16);
  }
}

uint64_t sub_1BAF9283C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1BAF92890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a5;
  }
  return result;
}

char *sub_1BAF928C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        v8 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        if (v8)
        {
          v9 = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 5) = v8;
          *((_QWORD *)a1 + 6) = v9;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v8);
        }
        else
        {
          v31 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v31;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        }
        goto LABEL_15;
      case 1u:
        v12 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v12;
        v13 = *((_QWORD *)a2 + 2);
        v14 = *((_QWORD *)a2 + 3);
        v15 = a2[32];
        swift_bridgeObjectRetain();
        sub_1BAF92B74();
        *((_QWORD *)a1 + 2) = v13;
        *((_QWORD *)a1 + 3) = v14;
        a1[32] = v15;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v16 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v16;
        (**(void (***)(void *, const void *))(v16 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v17 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v17;
        (**(void (***)(void *, const void *))(v17 - 8))(a1, a2);
        v18 = (void *)*((_QWORD *)a2 + 5);
        v19 = (void *)*((_QWORD *)a2 + 6);
        v20 = a2[56];
        sub_1BAF92B7C(v18, v19, v20);
        *((_QWORD *)a1 + 5) = v18;
        *((_QWORD *)a1 + 6) = v19;
        a1[56] = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v21 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v21;
        sub_1BAF92BA4();
        v23 = *(int *)(v22 + 48);
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = sub_1BB8714E8();
        v27 = *(_QWORD *)(v26 - 8);
        v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (v28(v25, 1, v26))
        {
          sub_1BAB05E24(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v30 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v30;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BAF92B74()
{
  return swift_bridgeObjectRetain();
}

id sub_1BAF92B7C(id result, id a2, char a3)
{
  if (a3 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a3 != 1)
  {
    if (a3)
      return result;
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BAF92BA4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C0520)
  {
    sub_1BAB05E24(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C0520);
  }
}

void sub_1BAF92C0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
      {
        v2 = a1 + 16;
        goto LABEL_6;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      sub_1BAA49EA8();
      break;
    case 2u:
      v2 = a1;
LABEL_6:
      __swift_destroy_boxed_opaque_existential_1(v2);
      break;
    case 3u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      sub_1BAF92D3C(*(void **)(a1 + 40), *(id *)(a1 + 48), *(_BYTE *)(a1 + 56));
      break;
    case 4u:
      swift_bridgeObjectRelease();
      sub_1BAF92BA4();
      v4 = a1 + *(int *)(v3 + 48);
      v5 = sub_1BB8714E8();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:
      return;
  }
}

void sub_1BAF92D3C(void *a1, id a2, char a3)
{
  if (a3 == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if (a3 != 1)
  {
    if (a3)
      return;
    goto LABEL_4;
  }

}

char *sub_1BAF92D64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      if (v7)
      {
        v8 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = v7;
        *((_QWORD *)a1 + 6) = v8;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v7);
      }
      else
      {
        v28 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v28;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      }
      goto LABEL_14;
    case 1u:
      v9 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v9;
      v10 = *((_QWORD *)a2 + 2);
      v11 = *((_QWORD *)a2 + 3);
      v12 = a2[32];
      swift_bridgeObjectRetain();
      sub_1BAF92B74();
      *((_QWORD *)a1 + 2) = v10;
      *((_QWORD *)a1 + 3) = v11;
      a1[32] = v12;
      goto LABEL_14;
    case 2u:
      v13 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v13;
      (**(void (***)(void *, const void *))(v13 - 8))(a1, a2);
      goto LABEL_14;
    case 3u:
      v14 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v14;
      (**(void (***)(void *, const void *))(v14 - 8))(a1, a2);
      v15 = (void *)*((_QWORD *)a2 + 5);
      v16 = (void *)*((_QWORD *)a2 + 6);
      v17 = a2[56];
      sub_1BAF92B7C(v15, v16, v17);
      *((_QWORD *)a1 + 5) = v15;
      *((_QWORD *)a1 + 6) = v16;
      a1[56] = v17;
      goto LABEL_14;
    case 4u:
      v18 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v18;
      sub_1BAF92BA4();
      v20 = *(int *)(v19 + 48);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = sub_1BB8714E8();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        sub_1BAB05E24(0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      goto LABEL_14;
    case 5u:
      v27 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v27;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1BAF92FDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  if (a1 != a2)
  {
    sub_1BAF93290((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v6 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        if (v6)
        {
          *((_QWORD *)a1 + 5) = v6;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 16), (uint64_t)(a2 + 16), v6);
        }
        else
        {
          v23 = *((_OWORD *)a2 + 1);
          v24 = *((_OWORD *)a2 + 2);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_OWORD *)a1 + 1) = v23;
          *((_OWORD *)a1 + 2) = v24;
        }
        goto LABEL_15;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        v8 = *((_QWORD *)a2 + 3);
        v9 = a2[32];
        swift_bridgeObjectRetain();
        sub_1BAF92B74();
        *((_QWORD *)a1 + 2) = v7;
        *((_QWORD *)a1 + 3) = v8;
        a1[32] = v9;
        goto LABEL_15;
      case 2u:
        v10 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v10;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
        goto LABEL_15;
      case 3u:
        v11 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v11;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v11 - 8))(a1, a2);
        v12 = (void *)*((_QWORD *)a2 + 5);
        v13 = (void *)*((_QWORD *)a2 + 6);
        v14 = a2[56];
        sub_1BAF92B7C(v12, v13, v14);
        *((_QWORD *)a1 + 5) = v12;
        *((_QWORD *)a1 + 6) = v13;
        a1[56] = v14;
        goto LABEL_15;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        sub_1BAF92BA4();
        v16 = *(int *)(v15 + 48);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_1BB8714E8();
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        swift_bridgeObjectRetain();
        if (v21(v18, 1, v19))
        {
          sub_1BAB05E24(0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        goto LABEL_15;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_retain();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BAF93290(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugInspectViewItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugInspectViewItem()
{
  uint64_t result;

  result = qword_1EF2B7950;
  if (!qword_1EF2B7950)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BAF93308(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    sub_1BAF92BA4();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB8714E8();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1BAB05E24(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1BAF9340C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1BAF93290((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      sub_1BAF92BA4();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB8714E8();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_1BAB05E24(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1BAF93520()
{
  unint64_t v0;
  _QWORD v1[10];

  v1[4] = "8";
  v1[5] = &unk_1BB8DB070;
  v1[6] = &unk_1BB8DB088;
  v1[7] = &unk_1BB8DB0A0;
  sub_1BAB05E24(319);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[8] = v1;
    v1[9] = &unk_1BB8DB0D0;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectViewItem.LoadingItemType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF93608 + 4 * byte_1BB8DB028[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF93628 + 4 * byte_1BB8DB02D[v4]))();
}

_BYTE *sub_1BAF93608(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF93628(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF93630(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF93638(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF93640(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF93648(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectViewItem.LoadingItemType()
{
  return &type metadata for DebugInspectViewItem.LoadingItemType;
}

void destroy for DebugInspectViewItem.GroupLayoutFactoryMatch(uint64_t a1)
{
  sub_1BAF92D3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed20DebugInspectViewItemO23GroupLayoutFactoryMatchOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAF92B7C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugInspectViewItem.GroupLayoutFactoryMatch(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAF92B7C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAF92D3C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugInspectViewItem.GroupLayoutFactoryMatch(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAF92D3C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectViewItem.GroupLayoutFactoryMatch()
{
  return &type metadata for DebugInspectViewItem.GroupLayoutFactoryMatch;
}

uint64_t destroy for DebugInspectViewItem.RequirementMatch()
{
  return sub_1BAA49EA8();
}

uint64_t _s8NewsFeed20DebugInspectViewItemO16RequirementMatchOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1BAF92B74();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugInspectViewItem.RequirementMatch(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1BAF92B74();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAA49EA8();
  return a1;
}

uint64_t assignWithTake for DebugInspectViewItem.RequirementMatch(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAA49EA8();
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectViewItem.RequirementMatch()
{
  return &type metadata for DebugInspectViewItem.RequirementMatch;
}

unint64_t sub_1BAF93870()
{
  unint64_t result;

  result = qword_1EF2B7988;
  if (!qword_1EF2B7988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB174, &type metadata for DebugInspectViewItem.LoadingItemType);
    atomic_store(result, (unint64_t *)&qword_1EF2B7988);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V23()
{
  return &type metadata for A12_V23;
}

uint64_t sub_1BAF938C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B7AC8, (uint64_t (*)(void))sub_1BAF96428, (uint64_t)&type metadata for A12_V23.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF96428();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAF93A78()
{
  sub_1BAF96428();
  return sub_1BB874710();
}

uint64_t sub_1BAF93AA0()
{
  sub_1BAF96428();
  return sub_1BB87471C();
}

double sub_1BAF93AC8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAF96214(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAF93B0C(_QWORD *a1)
{
  return sub_1BAF938C4(a1);
}

uint64_t sub_1BAF93B20()
{
  sub_1BAF95F10();
  return sub_1BB86D96C();
}

uint64_t sub_1BAF93B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  ValueMetadata *v66;
  unint64_t v67;
  uint64_t v68;

  v53 = a2;
  v46 = a3;
  v47 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v52 = type metadata accessor for GroupLayoutBindingContext();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v57 = a1;
  sub_1BA4C2DD8(a1, v50, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v49 = sub_1BB86C8C8();
  v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v47);
  v66 = &type metadata for A12_V23;
  v20 = sub_1BA8EE380();
  v67 = v20;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v22;
  v62 = 95;
  v63 = 0xE100000000000000;
  v60 = 45;
  v61 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v48;
  *v26 = v49;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v64, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  sub_1BA7C2538(v16, v17);
  v66 = &type metadata for A12_V23;
  v67 = v20;
  v30 = v56;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  sub_1BA4C2DD8(v53, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v31 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v31 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v31 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v68;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E726A1B8, 0, 0, v31, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    v41 = v39;
    swift_release();
    v42 = type metadata accessor for A12_V23.Bound();
    v43 = v46;
    v46[3] = v42;
    v43[4] = sub_1BA4A2870(qword_1EF2B79A0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V23.Bound, (uint64_t)&unk_1BB8DB268);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v64, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v42 + 28)) = v41;
  }
  return result;
}

double sub_1BAF940A0@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  double result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[18];
  char v50[105];
  __int128 v51[2];
  __int128 v52[2];
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v43 = a1;
  v3 = sub_1BB86DA38();
  v40 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A12_V23.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(int *)(v8 + 40);
  v10 = v7;
  v42 = v7;
  v11 = *(_QWORD *)(v7 + v9);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(double *)(v10 + *(int *)(v8 + 32));
  sub_1BA4C010C(v12 + 16, (uint64_t)v52);
  sub_1BA4C010C(v12 + 56, (uint64_t)v51);
  v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v52, inited + 16);
  sub_1BA4CECCC(v51, inited + 56);
  *(double *)(inited + 96) = v14;
  v50[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v50, (uint64_t *)&v53);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1BA829A4C();
  v16 = 2;
  v17 = sub_1BB872E74();
  *(_QWORD *)(v17 + 16) = 2;
  sub_1BA4C010C((uint64_t)&v53, v17 + 32);
  sub_1BA4CECCC(&v53, v17 + 72);
  v18 = *(_QWORD *)(v11 + 16);
  sub_1BA4C010C(v18 + 16, (uint64_t)v52);
  sub_1BA4C010C(v18 + 56, (uint64_t)v51);
  v19 = v13 * *(double *)(v18 + 96);
  v20 = swift_initStackObject();
  sub_1BA4CECCC(v52, v20 + 16);
  sub_1BA4CECCC(v51, v20 + 56);
  *(double *)(v20 + 96) = v19;
  v50[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v50, (uint64_t *)&v53);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v20 + 16);
  __swift_destroy_boxed_opaque_existential_1(v20 + 56);
  v21 = sub_1BA6B5B08((uint64_t)&v53, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(_QWORD *)&v53 = v17;
  sub_1BA6B5BE8(v21);
  v22 = v53;
  v49[2] = v2;
  v23 = swift_bridgeObjectRetain();
  v24 = sub_1BACB8FF0(v23, v22, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25 < 2)
    v16 = *(_QWORD *)(v24 + 16);
  v26 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
  v27 = v24 + ((v26 + 32) & ~v26);
  v28 = (2 * v25) | 1;
  v29 = *MEMORY[0x1E0DB5D88];
  v30 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v5, v29, v30);
  (*(void (**)(char *, _QWORD, _QWORD))(v40 + 104))(v5, *MEMORY[0x1E0DB6200], v41);
  v44 = v24;
  v45 = v24;
  v46 = v27;
  v47 = v16;
  v48 = v28;
  sub_1BAF95FB8(0, &qword_1EF2B7A48, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v42 = sub_1BB86DB34();
  v31 = sub_1BB86DB40();
  v41 = v53;
  v32 = v54;
  v33 = v55;
  *(_QWORD *)&v53 = v24;
  *(_QWORD *)&v52[0] = v56;
  MEMORY[0x1E0C80A78](v31);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v34 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v53 = v34;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v35 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v43;
  *v43 = 0;
  result = *(double *)&v41;
  *(_OWORD *)(v36 + 8) = v41;
  *((_QWORD *)v36 + 3) = v32;
  *((_QWORD *)v36 + 4) = v33;
  v38 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v36 + 5) = v35;
  *((_QWORD *)v36 + 6) = v38;
  return result;
}

uint64_t sub_1BAF945B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)&v20[-v15];
  v26 = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 12;
  *v16 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB63F8], v13);
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v18 = MEMORY[0x1E0DB5DD0];
  sub_1BAF95FB8(0, &qword_1EF2B7A68, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAF95F78(&qword_1EF2B7A70, &qword_1EF2B7A68, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1BAF94734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *);
  uint64_t (*v16)(uint64_t, _QWORD *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t);
  unsigned int v35;
  void (*v36)(uint64_t);
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  unsigned int v42;
  uint64_t v43;
  unsigned int v44;
  void (*v45)(uint64_t);
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v49 = a5;
  v50 = a6;
  v47 = a3;
  v48 = a4;
  v43 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v32 - v10);
  v56 = a1;
  v33 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  v46 = *MEMORY[0x1E0DB5A38];
  v45 = *(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 104);
  v45(v14);
  *v11 = v13;
  v44 = *MEMORY[0x1E0DB6318];
  v15 = *(void (**)(uint64_t *))(v9 + 104);
  v15(v11);
  v41 = v15;
  v16 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF95FB8(0, &qword_1EF2B7A78, MEMORY[0x1E0DB5A10]);
  v32[1] = v17;
  sub_1BAF95F78(&qword_1EF2B7A80, &qword_1EF2B7A78, v16, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v34 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v34(v11, v8);
  v56 = a1;
  v42 = *MEMORY[0x1E0DB6410];
  v15(v11);
  sub_1BAF96034();
  v40 = v18;
  sub_1BA4CDF6C(0, &qword_1EF2B7A90, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 32) & ~v22;
  v39 = v23 + *(_QWORD *)(v21 + 72);
  v38 = v22 | 7;
  v24 = swift_allocObject();
  v37 = xmmword_1BB87CE70;
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  v35 = *MEMORY[0x1E0DB5C80];
  v36 = *(void (**)(uint64_t))(v21 + 104);
  v36(v24 + v23);
  v55 = v43;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v25 = v34;
  v34(v11, v8);
  v26 = v33;
  v56 = v33;
  v27 = swift_allocBox();
  ((void (*)(uint64_t, _QWORD, uint64_t))v45)(v28, v46, v12);
  *v11 = v27;
  v29 = v41;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v41)(v11, v44, v8);
  sub_1BB86D4EC();
  v25(v11, v8);
  v56 = v26;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v29)(v11, v42, v8);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v37;
  ((void (*)(uint64_t, _QWORD, uint64_t))v36)(v30 + v23, v35, v20);
  v51 = v47;
  v52 = v48;
  v53 = v49;
  v54 = v50;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v25)(v11, v8);
}

uint64_t sub_1BAF94B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF95FB8(0, &qword_1EF2B7A78, MEMORY[0x1E0DB5A10]);
  sub_1BAF95F78(&qword_1EF2B7A80, &qword_1EF2B7A78, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAF94D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF95FB8(0, &qword_1EF2B7A78, MEMORY[0x1E0DB5A10]);
  sub_1BAF95F78(&qword_1EF2B7A80, &qword_1EF2B7A78, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAF95108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB6410];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF95FB8(0, &qword_1EF2B7A78, MEMORY[0x1E0DB5A10]);
  sub_1BAF95F78(&qword_1EF2B7A80, &qword_1EF2B7A78, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

void sub_1BAF95510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, _QWORD *);
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v26 - v13);
  v15 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5 >> 1;
  v20 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v19 != a4 && v20 == 3)
  {
    if (v19 > a4)
    {
      v21 = *(_QWORD *)(v16 + 72);
      v28 = *MEMORY[0x1E0DB63F8];
      v26 = a2;
      swift_unknownObjectRetain();
      v29 = v21;
      v30 = v11;
      v22 = a3 + v21 * a4;
      v27 = v12;
      do
      {
        sub_1BA4C2DD8(v22, (uint64_t)v18, type metadata accessor for HeadlineViewLayout.Context);
        v31 = a1;
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = 4;
        *v14 = v23;
        v24 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, v28, v11);
        MEMORY[0x1E0C80A78](v24);
        v25 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BAF95FB8(0, &qword_1EF2B7A78, MEMORY[0x1E0DB5A10]);
        sub_1BAF95F78(&qword_1EF2B7A80, &qword_1EF2B7A78, v25, MEMORY[0x1E0DB5A18]);
        sub_1BB86D4BC();
        v12 = v27;
        v11 = v30;
        (*(void (**)(uint64_t *, uint64_t))(v27 + 8))(v14, v30);
        sub_1BA4A2E80((uint64_t)v18, type metadata accessor for HeadlineViewLayout.Context);
        v22 += v29;
        --v20;
      }
      while (v20);
      swift_unknownObjectRelease();
      return;
    }
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1BAF95778(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a2;
  v34 = sub_1BB86DA38();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2B7A60, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  v39 = a1;
  KeyPath = swift_getKeyPath();
  v16 = *MEMORY[0x1E0DB6410];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v38 = v12;
  v17(v15, v16, v12);
  v18 = (char *)v10 + v8[5];
  v19 = *MEMORY[0x1E0DB61C8];
  v20 = sub_1BB86DA20();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  v22 = (void **)MEMORY[0x1E0DC4918];
  *v10 = 0;
  *(_QWORD *)((char *)v10 + v8[6]) = 0;
  v23 = *v22;
  *(_QWORD *)((char *)v10 + v8[7]) = v23;
  v24 = qword_1ED3BC390;
  v25 = v23;
  if (v24 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v26 = swift_release();
  v27 = MEMORY[0x1E0C80A78](v26);
  v28 = v34;
  *(&v32 - 4) = v33;
  *(&v32 - 3) = (uint64_t)v10;
  v31 = (unint64_t)v7;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v32 + 104))(v4, *MEMORY[0x1E0DB6208], v28, v27);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  v29 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAF95FB8(0, &qword_1EF2B7A78, MEMORY[0x1E0DB5A10]);
  sub_1BAF95F78(&qword_1EF2B7A80, &qword_1EF2B7A78, v29, MEMORY[0x1E0DB5A18]);
  v31 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v38);
}

uint64_t sub_1BAF95AFC@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V23.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAF95BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAF93B88(a1, a2, a3);
}

uint64_t sub_1BAF95BF0()
{
  return sub_1BB690A1C();
}

unint64_t sub_1BAF95C00(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAF95C2C();
  result = sub_1BAF95C70();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAF95C2C()
{
  unint64_t result;

  result = qword_1EF2B7990;
  if (!qword_1EF2B7990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB1B4, &type metadata for A12_V23);
    atomic_store(result, (unint64_t *)&qword_1EF2B7990);
  }
  return result;
}

unint64_t sub_1BAF95C70()
{
  unint64_t result;

  result = qword_1EF2B7998;
  if (!qword_1EF2B7998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB1DC, &type metadata for A12_V23);
    atomic_store(result, (unint64_t *)&qword_1EF2B7998);
  }
  return result;
}

uint64_t type metadata accessor for A12_V23.Bound()
{
  uint64_t result;

  result = qword_1EF2B7A00;
  if (!qword_1EF2B7A00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF95CF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF95CFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAF95D78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAF95D84(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAF95DF8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAF95E84(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B7A40, (uint64_t (*)(uint64_t))type metadata accessor for A12_V23.Bound, (uint64_t)&unk_1BB8DB240);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF95EC0(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BAF945B4);
}

unint64_t sub_1BAF95ECC()
{
  unint64_t result;

  result = qword_1EF2B7A50;
  if (!qword_1EF2B7A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB398, &type metadata for A12_V23.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B7A50);
  }
  return result;
}

unint64_t sub_1BAF95F10()
{
  unint64_t result;

  result = qword_1EF2B7A58;
  if (!qword_1EF2B7A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB368, &type metadata for A12_V23.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7A58);
  }
  return result;
}

uint64_t sub_1BAF95F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAF95AFC(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAF95F5C()
{
  return swift_deallocObject();
}

uint64_t sub_1BAF95F6C(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BAF94734);
}

uint64_t sub_1BAF95F78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAF95FB8(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAF95FB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V23.Layout;
    v8[1] = &type metadata for A12_V23.Layout.Attributes;
    v8[2] = sub_1BAF95ECC();
    v8[3] = sub_1BAF95F10();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BAF96034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B7A88)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B7A90, (uint64_t (*)(void))sub_1BAF95ECC, (uint64_t)&type metadata for A12_V23.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B7A88);
  }
}

uint64_t sub_1BAF960A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF94B24(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAF960B0(uint64_t a1)
{
  uint64_t v1;

  sub_1BAF95510(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BAF960BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF95778(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAF960C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF94D0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAF960CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF95108(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V23.Layout.Attributes()
{
  return &type metadata for A12_V23.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V23.Layout()
{
  return &type metadata for A12_V23.Layout;
}

unint64_t sub_1BAF960F8()
{
  unint64_t result;

  result = qword_1EF2B7A98;
  if (!qword_1EF2B7A98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB308, &type metadata for A12_V23.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7A98);
  }
  return result;
}

unint64_t sub_1BAF96140()
{
  unint64_t result;

  result = qword_1EF2B7AA0;
  if (!qword_1EF2B7AA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB2E0, &type metadata for A12_V23.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AA0);
  }
  return result;
}

unint64_t sub_1BAF96188()
{
  unint64_t result;

  result = qword_1EF2B7AA8;
  if (!qword_1EF2B7AA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB2B8, &type metadata for A12_V23.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AA8);
  }
  return result;
}

unint64_t sub_1BAF961D0()
{
  unint64_t result;

  result = qword_1EF2B7AB0;
  if (!qword_1EF2B7AB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB330, &type metadata for A12_V23.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AB0);
  }
  return result;
}

uint64_t sub_1BAF96214@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B7AB8, (uint64_t (*)(void))sub_1BAF96428, (uint64_t)&type metadata for A12_V23.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF96428();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAF96428()
{
  unint64_t result;

  result = qword_1EF2B7AC0;
  if (!qword_1EF2B7AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB48C, &type metadata for A12_V23.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AC0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V23.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF964B8 + 4 * byte_1BB8DB1A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF964EC + 4 * byte_1BB8DB1A0[v4]))();
}

uint64_t sub_1BAF964EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF964F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF964FCLL);
  return result;
}

uint64_t sub_1BAF96508(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF96510);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF96514(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF9651C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V23.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V23.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAF9653C()
{
  unint64_t result;

  result = qword_1EF2B7AD0;
  if (!qword_1EF2B7AD0)
  {
    result = MEMORY[0x1BCCE5B24]("剟+܅\r", &type metadata for A12_V23.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AD0);
  }
  return result;
}

unint64_t sub_1BAF96584()
{
  unint64_t result;

  result = qword_1EF2B7AD8;
  if (!qword_1EF2B7AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB3D4, &type metadata for A12_V23.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AD8);
  }
  return result;
}

unint64_t sub_1BAF965CC()
{
  unint64_t result;

  result = qword_1EF2B7AE0;
  if (!qword_1EF2B7AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB3FC, &type metadata for A12_V23.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7AE0);
  }
  return result;
}

uint64_t sub_1BAF96610(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  char v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  unsigned __int8 *v57;
  unsigned int v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(_QWORD **);
  unint64_t v67;
  unsigned __int8 *v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  unsigned __int8 *v72;
  unsigned int v73;
  uint64_t v74;
  char v75;
  char v76;
  _QWORD v77[2];
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v81 = sub_1BB86BF20();
  v84 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v80 = (char *)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v77 - v8;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a2 + 16);
  if (!result)
    return result;
  v11 = (char *)result;
  sub_1BB86BF74();
  sub_1BAF97DE4((uint64_t)v9, (uint64_t)v6);
  v12 = sub_1BB86BFF8();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_1BA5C699C((uint64_t)v6, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    goto LABEL_28;
  }
  v14 = sub_1BB86BF38();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  if (!v14)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v15)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      if (!*(_QWORD *)(MEMORY[0x1E0DEE9E0] + 16))
        goto LABEL_93;
LABEL_32:
      v46 = sub_1BA6E35A8(0x7865646E69, 0xE500000000000000);
      if ((v47 & 1) == 0)
        goto LABEL_93;
      v48 = (uint64_t *)(v18[7] + 16 * v46);
      v27 = *v48;
      v28 = v48[1];
      v49 = HIBYTE(v28) & 0xF;
      v50 = v27 & 0xFFFFFFFFFFFFLL;
      if (!((v28 & 0x2000000000000000) != 0 ? HIBYTE(v28) & 0xF : v27 & 0xFFFFFFFFFFFFLL))
        goto LABEL_93;
      if ((v28 & 0x1000000000000000) != 0)
        goto LABEL_92;
      if ((v28 & 0x2000000000000000) == 0)
      {
        if ((v27 & 0x1000000000000000) != 0)
          v52 = (unsigned __int8 *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
LABEL_97:
          v52 = (unsigned __int8 *)sub_1BB873D80();
        v53 = sub_1BA9BF8AC(v52, v50, 10);
        if ((v54 & 1) == 0)
        {
          v55 = (uint64_t)v53;
          goto LABEL_68;
        }
        goto LABEL_93;
      }
      v85 = (_QWORD *)v27;
      v86 = v28 & 0xFFFFFFFFFFFFFFLL;
      if (v27 == 43)
      {
        if (v49)
        {
          if (v49 == 1)
            goto LABEL_99;
          if ((BYTE1(v27) - 48) > 9u)
            goto LABEL_64;
          v55 = (BYTE1(v27) - 48);
          if (v49 != 2)
          {
            if ((BYTE2(v27) - 48) > 9u)
              goto LABEL_64;
            v55 = 10 * (BYTE1(v27) - 48) + (BYTE2(v27) - 48);
            v56 = v49 - 3;
            if (v49 != 3)
            {
              v57 = (unsigned __int8 *)&v85 + 3;
              while (1)
              {
                v58 = *v57 - 48;
                if (v58 > 9)
                  goto LABEL_64;
                v59 = 10 * v55;
                if ((unsigned __int128)(v55 * (__int128)10) >> 64 != (10 * v55) >> 63)
                  goto LABEL_64;
                v55 = v59 + v58;
                if (__OFADD__(v59, v58))
                  goto LABEL_64;
                LOBYTE(v49) = 0;
                ++v57;
                if (!--v56)
                  goto LABEL_67;
              }
            }
          }
          goto LABEL_66;
        }
      }
      else
      {
        if (v27 != 45)
        {
          if (!v49 || (v27 - 48) > 9u)
            goto LABEL_64;
          v55 = (v27 - 48);
          if (v49 != 1)
          {
            if ((BYTE1(v27) - 48) > 9u)
              goto LABEL_64;
            v55 = 10 * (v27 - 48) + (BYTE1(v27) - 48);
            v67 = v49 - 2;
            if (v49 != 2)
            {
              v68 = (unsigned __int8 *)&v85 + 2;
              while (1)
              {
                v69 = *v68 - 48;
                if (v69 > 9)
                  goto LABEL_64;
                v70 = 10 * v55;
                if ((unsigned __int128)(v55 * (__int128)10) >> 64 != (10 * v55) >> 63)
                  goto LABEL_64;
                v55 = v70 + v69;
                if (__OFADD__(v70, v69))
                  goto LABEL_64;
                LOBYTE(v49) = 0;
                ++v68;
                if (!--v67)
                  goto LABEL_67;
              }
            }
          }
LABEL_66:
          LOBYTE(v49) = 0;
          goto LABEL_67;
        }
        if (v49)
        {
          if (v49 == 1)
            goto LABEL_99;
          if ((BYTE1(v27) - 48) > 9u)
            goto LABEL_64;
          if (v49 == 2)
          {
            LOBYTE(v49) = 0;
            v55 = -(uint64_t)(BYTE1(v27) - 48);
            goto LABEL_67;
          }
          if ((BYTE2(v27) - 48) > 9u)
            goto LABEL_64;
          v55 = -10 * (BYTE1(v27) - 48) - (BYTE2(v27) - 48);
          v71 = v49 - 3;
          if (v49 != 3)
          {
            v72 = (unsigned __int8 *)&v85 + 3;
            while (1)
            {
              v73 = *v72 - 48;
              if (v73 > 9)
                break;
              v74 = 10 * v55;
              if ((unsigned __int128)(v55 * (__int128)10) >> 64 != (10 * v55) >> 63)
                break;
              v55 = v74 - v73;
              if (__OFSUB__(v74, v73))
                break;
              LOBYTE(v49) = 0;
              ++v72;
              if (!--v71)
                goto LABEL_67;
            }
LABEL_64:
            v55 = 0;
            LOBYTE(v49) = 1;
            goto LABEL_67;
          }
          goto LABEL_66;
        }
        __break(1u);
      }
      __break(1u);
LABEL_102:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
    goto LABEL_29;
LABEL_6:
  v78 = v9;
  v79 = v11;
  v16 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v77[1] = v14;
  v9 = (char *)(v14 + v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v82 = *(_QWORD *)(v84 + 72);
  v83 = v17;
  v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v11 = v80;
  v19 = v81;
  v17(v80, v9, v81);
  while (1)
  {
    v21 = sub_1BB86BF08();
    v23 = v22;
    v24 = sub_1BB86BF14();
    if (v25)
      break;
    swift_bridgeObjectRetain();
    v37 = sub_1BA6E35A8(v21, v23);
    v39 = v38;
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v85 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BB4C216C();
        v18 = v85;
      }
      swift_bridgeObjectRelease();
      sub_1BAF0DDEC(v37, (uint64_t)v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v84 + 8))(v11, v19);
    v9 += v82;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      v9 = v78;
      v11 = v79;
      if (!v18[2])
        goto LABEL_93;
      goto LABEL_32;
    }
    v83(v11, v9, v19);
  }
  v26 = v24;
  v27 = v25;
  v28 = (unint64_t)v18;
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v85 = (_QWORD *)v28;
  v31 = sub_1BA6E35A8(v21, v23);
  v32 = *(_QWORD *)(v28 + 16);
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (!__OFADD__(v32, v33))
  {
    v11 = v30;
    if (*(_QWORD *)(v28 + 24) < v34)
    {
      sub_1BB4AE750(v34, v29);
      v28 = (unint64_t)v85;
      v35 = sub_1BA6E35A8(v21, v23);
      if ((v11 & 1) != (v36 & 1))
        goto LABEL_102;
      v31 = v35;
      v18 = v85;
      if ((v11 & 1) == 0)
        goto LABEL_23;
LABEL_7:
      v20 = (uint64_t *)(v18[7] + 16 * v31);
      swift_bridgeObjectRelease();
      *v20 = v26;
      v20[1] = v27;
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v80;
      v19 = v81;
      goto LABEL_9;
    }
    if ((v29 & 1) != 0)
    {
      v18 = v85;
      if ((v30 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      v28 = (unint64_t)&v85;
      sub_1BB4C216C();
      v18 = v85;
      if ((v11 & 1) != 0)
        goto LABEL_7;
    }
LABEL_23:
    v18[(v31 >> 6) + 8] |= 1 << v31;
    v41 = (uint64_t *)(v18[6] + 16 * v31);
    *v41 = v21;
    v41[1] = v23;
    v42 = (uint64_t *)(v18[7] + 16 * v31);
    *v42 = v26;
    v42[1] = v27;
    v43 = v18[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_91;
    v18[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  swift_bridgeObjectRetain();
  v55 = (uint64_t)sub_1BA9BF9A4(v27, v28, 10);
  v76 = v75;
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
  {
LABEL_93:
    sub_1BA5C699C((uint64_t)v9, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);

  }
  else
  {
    while (1)
    {
LABEL_68:
      swift_retain();
      sub_1BB86E494();
      swift_release();
      if (v55 < 0)
      {
        __break(1u);
        goto LABEL_97;
      }
      v49 = v85[2];
      if (v55 < v49)
        break;
      __break(1u);
LABEL_99:
      v55 = 0;
LABEL_67:
      if ((v49 & 1) != 0)
        goto LABEL_93;
    }
    v60 = &v85[4 * v55];
    v62 = (_QWORD *)v60[4];
    v61 = v60[5];
    v63 = v60[6];
    v64 = v60[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v65 = &v11[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
    swift_beginAccess();
    v66 = *(void (**)(_QWORD **))v65;
    if (*(_QWORD *)v65)
    {
      swift_endAccess();
      v85 = v62;
      v86 = v61;
      v87 = v63;
      v88 = v64;
      swift_retain();
      v66(&v85);
      sub_1BA49EBE0((uint64_t)v66);

      sub_1BA5C699C((uint64_t)v9, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    }
    else
    {
      sub_1BA5C699C((uint64_t)v9, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
      swift_endAccess();

    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

char *sub_1BAF96E60(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  objc_class *ObjectType;
  objc_super v25;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label;
  v6 = objc_allocWithZone((Class)sub_1BB86FE44());
  v7 = v1;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView;
  *(_QWORD *)&v7[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink] = 0;
  v10 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_linkHandler;
  *(_QWORD *)&v7[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLabelLinkHandler()), sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_editor] = a1;
  swift_retain();

  v25.receiver = v7;
  v25.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView;
  v13 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView];
  v14 = v11;
  objc_msgSend(v14, sel_addSubview_, v13);
  v15 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView;
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView]);
  v16 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label;
  objc_msgSend(v13, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label]);
  v17 = (void *)objc_opt_self();
  v18 = v13;
  v19 = objc_msgSend(v17, sel_secondarySystemBackgroundColor);
  objc_msgSend(v18, sel_setBackgroundColor_, v19);

  v20 = *(void **)&v11[v12];
  objc_msgSend(v20, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v20, sel_setAlwaysBounceHorizontal_, 1);
  v21 = *(id *)&v14[v15];
  v22 = objc_msgSend(v17, sel_separatorColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  objc_msgSend(*(id *)&v14[v16], sel_setUserInteractionEnabled_, 1);
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();

  swift_release();
  return v14;
}

void sub_1BAF971BC(uint64_t a1)
{
  id v2;
  uint64_t v3;

  swift_retain();
  sub_1BB86E494();
  swift_release();
  v2 = sub_1BAF97254(v3);
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label), sel_setAttributedText_, v2);

}

id sub_1BAF97254(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[128];
  _BYTE v36[136];

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 10.0, *MEMORY[0x1E0DC1438]);
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = 0;
    v6 = (uint64_t *)(a1 + 56);
    v25 = v2;
    while (1)
    {
      v7 = *(v6 - 2);
      v27 = *(v6 - 3);
      v9 = *(v6 - 1);
      v8 = *v6;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BB86E494();
      swift_release();
      sub_1BAF97E40((uint64_t)&v29, (uint64_t)v35);
      sub_1BAF97E40((uint64_t)v35, (uint64_t)v36);
      if (sub_1BA8CF120((uint64_t)v36) == 1)
        goto LABEL_10;
      v26 = v8;
      v11 = v31;
      v10 = v32;
      v12 = v33;
      v13 = v34;
      sub_1BAF97E40((uint64_t)&v29, (uint64_t)v28);
      swift_bridgeObjectRetain();
      sub_1BAF92764((uint64_t)v28);
      if (!v10)
        break;
      if (v11 == v27 && v10 == v7)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
          goto LABEL_15;
      }
      if (v12 != v9 || v13 != v26)
      {
LABEL_15:
        v2 = v25;
        goto LABEL_16;
      }
      v15 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      v2 = v25;
LABEL_17:
      sub_1BAF97E84(0x747865742E636F64, 0xE800000000000000, v3, v15);
      v17 = v16;
      objc_msgSend(v2, sel_appendAttributedString_, v16);

      v29 = 47;
      v30 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v18);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v19);
      v28[0] = v9;
      sub_1BB87420C();
      sub_1BB872AFC(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = sub_1BAF98060(v29, v30, v3, v15, v5, 0);
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_appendAttributedString_, v21);

      if (v5 < v4 - 1)
      {
        v22 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
        v23 = sub_1BAF98060(0x2020207C2020, 0xE600000000000000, v3, v22, 0, 1);

        objc_msgSend(v2, sel_appendAttributedString_, v23);
      }

      ++v5;
      v6 += 4;
      if (v4 == v5)
        goto LABEL_19;
    }
    v2 = v25;
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_16:
    v15 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    goto LABEL_17;
  }
LABEL_19:

  swift_bridgeObjectRelease();
  return v2;
}

void sub_1BAF9761C(uint64_t a1, uint64_t *a2)
{
  sub_1BAF97640(*a2);
}

void sub_1BAF97640(uint64_t a1)
{
  char *v1;
  char *v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  void *v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = v1;
  v3 = sub_1BAF97254(a1);
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v33);
  sub_1BB8734D4();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label];
  objc_msgSend(v12, sel_setAttributedText_, v3);
  sub_1BB8735A0();
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v34);
  v35.origin.x = v5;
  v35.origin.y = v7;
  v35.size.width = v9;
  v35.size.height = v11;
  CGRectGetHeight(v35);
  sub_1BB8735E8();
  objc_msgSend(v12, sel_setFrame_);
  v13 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView];
  sub_1BB873648();
  objc_msgSend(v13, sel_setContentSize_);
  v32 = v3;
  objc_msgSend(v12, sel_frame);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  type metadata accessor for FormatTextLink();
  swift_allocObject();
  v22 = sub_1BA644F74(v32, v15, v17, v19, v21);
  v23 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink] = v22;
  swift_retain();
  swift_release();
  v24 = *(_QWORD *)&v2[v23];
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  sub_1BA678D44(v24, (uint64_t)sub_1BAF97DDC, v25);
  swift_release();
  swift_release();
  swift_release_n();
  objc_msgSend(v13, sel_contentSize);
  v27 = v26;
  objc_msgSend(v13, sel_bounds);
  if (CGRectGetWidth(v36) >= v27)
  {
    objc_msgSend(v13, sel_setContentOffset_, 0.0, 0.0);
  }
  else
  {
    objc_msgSend(v13, sel_contentSize);
    v29 = v28;
    objc_msgSend(v13, sel_bounds);
    v30 = v29 - CGRectGetWidth(v37);
    objc_msgSend(v13, sel_contentInset);
    objc_msgSend(v13, sel_setContentOffset_, v30 + v31, 0.0);
  }

}

id sub_1BAF9793C()
{
  char *v0;
  void *v1;
  void *v2;
  double Width;
  id v4;
  double v5;
  double v6;
  double v7;
  objc_super v9;
  CGRect v10;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v10);
  v4 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v4, sel_displayScale);
  v6 = v5;

  if (v6 < 1.0)
    v7 = 1.0;
  else
    v7 = 1.0 / v6;
  return objc_msgSend(v2, sel_setFrame_, 0.0, 0.0, Width, v7);
}

uint64_t sub_1BAF97A60@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v6 = sub_1BB86BFF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v18 - v12;
  if ((a2 & 1) != 0)
  {
    v16 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  else
  {
    sub_1BB86BFC8();
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (!v14(v13, 1, v6))
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BB86BF20();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
      v18[1] = a1;
      sub_1BA6F0168();
      sub_1BB873B58();
      sub_1BB86BEFC();
      swift_bridgeObjectRelease();
      sub_1BB86BF44();
    }
    if (v14(v13, 1, v6))
    {
      v15 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
      sub_1BB86BF80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
  }
}

uint64_t type metadata accessor for DebugFormatEditorPathView()
{
  return objc_opt_self();
}

uint64_t sub_1BAF97DB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAF97DDC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAF96610(a1, v1);
}

uint64_t sub_1BAF97DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF97E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA8EBB30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAF97E84(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v15[3];
  uint64_t v16;

  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v6);

  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, a3);
    v9 = objc_msgSend(v7, sel_imageWithConfiguration_, v8);

    v10 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v9);
    v11 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v10);
    v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    v15[0] = a4;
    v12 = a4;
    v13 = (void *)sub_1BB8734C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    v15[0] = a3;
    v14 = a3;
    sub_1BB8734C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    __break(1u);
  }
}

id sub_1BAF98060(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, char a6)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t inited;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  char *v40;
  objc_class *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  void (*v52)(char *, uint64_t);
  id v53;
  void *v54;
  void *v55;
  uint64_t v57;
  id v58;
  id v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  objc_super v65;
  uint64_t v66;
  unint64_t v67;

  v64 = a3;
  v8 = a6 & 1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v57 - v10;
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v63 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  sub_1BAF97A60(a5, v8, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v66 = 32;
    v67 = 0xE100000000000000;
    sub_1BB872AFC((_QWORD *)0x20);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v19 = a4;
    v20 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    v21 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    v22 = v64;
    *(_QWORD *)(inited + 40) = v64;
    v23 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = v21;
    *(_QWORD *)(inited + 72) = v23;
    *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(inited + 80) = v19;
    v24 = v22;
    v25 = v19;
    v26 = v20;
    v27 = v23;
    sub_1BA76E82C(inited);
    v28 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v29 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v30 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    v66 = 32;
    v67 = 0xE100000000000000;
    sub_1BB872AFC((_QWORD *)0x20);
    v61 = v67;
    v62 = v66;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = xmmword_1BB87FC80;
    v33 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(v32 + 32) = *MEMORY[0x1E0DC1138];
    v34 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    v35 = v17;
    v60 = v17;
    v36 = v64;
    *(_QWORD *)(v32 + 40) = v64;
    v37 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v32 + 64) = v34;
    *(_QWORD *)(v32 + 72) = v37;
    v38 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(v32 + 80) = a4;
    v58 = a4;
    v39 = (void *)*MEMORY[0x1E0DC10F8];
    *(_QWORD *)(v32 + 104) = v38;
    *(_QWORD *)(v32 + 112) = v39;
    v40 = v63;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v63, v35, v12);
    v41 = (objc_class *)type metadata accessor for FormatAttributedStringLink();
    v59 = objc_allocWithZone(v41);
    v42 = v33;
    v43 = v36;
    v44 = v37;
    v45 = v58;
    v46 = v39;
    v47 = sub_1BB86C580();
    v49 = v48;
    v50 = (void *)sub_1BB86C6DC();
    sub_1BA69D314(v47, v49);
    v65.receiver = v59;
    v65.super_class = v41;
    v51 = objc_msgSendSuper2(&v65, sel_initWithData_ofType_, v50, 0);

    v52 = *(void (**)(char *, uint64_t))(v13 + 8);
    v52(v40, v12);
    *(_QWORD *)(v32 + 144) = v41;
    *(_QWORD *)(v32 + 120) = v51;
    sub_1BA76E82C(v32);
    v53 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v54 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v55 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v53, sel_initWithString_attributes_, v54, v55);

    v52(v60, v12);
  }
  return v31;
}

void sub_1BAF98534()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_label;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)sub_1BB86FE44()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_scrollView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_separatorView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_textLink] = 0;
  v5 = OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_linkHandler;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLabelLinkHandler()), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatSwitchCell()
{
  return objc_opt_self();
}

char *sub_1BAF98854(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  objc_super v19;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3D18]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = &v8[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_onChangeBlock];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;

  if (a2)
  {
    v10 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v19.receiver = v8;
  v19.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, 1, v10);

  v12 = OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl;
  v13 = *(void **)&v11[OBJC_IVAR____TtC8NewsFeed21DebugFormatSwitchCell_switchControl];
  v14 = v11;
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, v14, sel_valueChanged, 4096);
  objc_msgSend(v13, sel_setPreferredStyle_, 2);
  v15 = (void *)objc_opt_self();
  v16 = v13;
  v17 = objc_msgSend(v15, sel_systemBlueColor);
  objc_msgSend(v16, sel_setTintColor_, v17);

  objc_msgSend(v14, sel_setAccessoryView_, *(_QWORD *)&v11[v12]);
  return v14;
}

uint64_t FormatPreviewParameters.backgroundColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA5E7FF4(v2);
}

__n128 FormatPreviewParameters.edgeInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)(v1 + 8);
  v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t FormatPreviewParameters.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t sub_1BAF98A38@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double Width;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  double Height;
  CGRect v30;
  CGRect v31;

  v11 = *(_QWORD *)(v5 + 48);
  v12 = *(_QWORD *)(v5 + 56);
  v13 = *(unsigned __int8 *)(v5 + 64);
  if ((*(_BYTE *)(v5 + 40) & 1) == 0)
  {
    v16 = *(_QWORD *)(v5 + 24);
    v15 = *(_QWORD *)(v5 + 32);
    v17 = *(_QWORD *)(v5 + 8);
    v18 = *(_QWORD *)(v5 + 16);
    if (v13 > 0xFD)
    {
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v18;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = v15;
      v14 = (unsigned int *)MEMORY[0x1E0DB89A0];
      goto LABEL_19;
    }
    if ((v13 & 0x80) != 0)
    {
      Height = CGRectGetHeight(*(CGRect *)&a2);
      v31.origin.x = a2;
      v31.origin.y = a3;
      v31.size.width = a4;
      v31.size.height = a5;
      Width = CGRectGetWidth(v31);
      if (Width >= Height)
        Width = Height;
      v19 = Width * 0.5;
      sub_1BA6E6CC4(v11, v12, v13);
    }
    else
    {
      v19 = *(double *)(v5 + 48);
      sub_1BA6F2B04(*(uint64_t *)&v19, *(_QWORD *)(v5 + 56), *(_BYTE *)(v5 + 64));
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = v17;
    *(_QWORD *)(a1 + 8) = v18;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v15;
LABEL_18:
    *(double *)(a1 + 32) = v19;
    v14 = (unsigned int *)MEMORY[0x1E0DB8998];
    goto LABEL_19;
  }
  if (v13 <= 0xFD)
  {
    if ((v13 & 0x80) != 0)
    {
      v20 = CGRectGetHeight(*(CGRect *)&a2);
      v30.origin.x = a2;
      v30.origin.y = a3;
      v30.size.width = a4;
      v30.size.height = a5;
      v21 = CGRectGetWidth(v30);
      if (v21 >= v20)
        v21 = v20;
      v19 = v21 * 0.5;
      sub_1BA6E6CC4(v11, v12, v13);
    }
    else
    {
      v19 = *(double *)(v5 + 48);
      sub_1BA6F2B04(*(uint64_t *)&v19, *(_QWORD *)(v5 + 56), *(_BYTE *)(v5 + 64));
    }
    v28 = *MEMORY[0x1E0DC49E8];
    v22 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 16);
    v23 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 24);
    swift_bridgeObjectRelease();
    *(_OWORD *)a1 = v28;
    *(_QWORD *)(a1 + 16) = v22;
    *(_QWORD *)(a1 + 24) = v23;
    goto LABEL_18;
  }
  v14 = (unsigned int *)MEMORY[0x1E0DB89A8];
LABEL_19:
  v25 = *v14;
  v26 = sub_1BB8702A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(a1, v25, v26);
}

BOOL _s8NewsFeed23FormatPreviewParametersV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  _BOOL8 result;
  char v17;
  char v18;
  char v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  float64x2_t v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v2 = *(_QWORD *)a1;
  v3 = *(_BYTE *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v6 = *(unsigned __int8 *)(a1 + 64);
  v7 = *(_QWORD *)a2;
  v8 = *(float64x2_t *)(a1 + 24);
  v9 = *(float64x2_t *)(a1 + 8);
  v10 = *(float64x2_t *)(a2 + 24);
  v11 = *(float64x2_t *)(a2 + 8);
  v12 = *(unsigned __int8 *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  v15 = *(unsigned __int8 *)(a2 + 64);
  if ((~*(_QWORD *)a1 & 0xF000000000000007) == 0)
  {
    if ((~v7 & 0xF000000000000007) == 0)
      goto LABEL_10;
LABEL_6:
    sub_1BA5E7FF4(v7);
    sub_1BA5E800C(v2);
    sub_1BA5E800C(v7);
    return 0;
  }
  v26 = *(_QWORD *)a1;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_6;
  }
  v24[0] = v7;
  v22 = v9;
  v23 = v8;
  v20 = v11;
  v21 = v10;
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v26);
  v18 = v17;
  swift_release();
  sub_1BA5E800C(v2);
  v11 = v20;
  v10 = v21;
  v9 = v22;
  v8 = v23;
  if ((v18 & 1) == 0)
    return 0;
LABEL_10:
  if ((v3 & 1) != 0)
  {
    if (!v12)
      return 0;
    goto LABEL_15;
  }
  result = 0;
  if ((v12 & 1) == 0
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, v11), (int32x4_t)vceqq_f64(v8, v10))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)
  {
LABEL_15:
    if (v6 <= 0xFD)
    {
      v26 = v5;
      v27 = v4;
      v28 = v6;
      if (v15 <= 0xFD)
      {
        v24[0] = v14;
        v24[1] = v13;
        v25 = v15;
        sub_1BA6E6C54(v5, v4, v6);
        sub_1BA6F2B04(v5, v4, v6);
        v19 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v26, (uint64_t)v24);
        sub_1BA6F2B88(v26, v27, v28);
        sub_1BA6E6CC4(v5, v4, v6);
        return (v19 & 1) != 0;
      }
      sub_1BA6F2B04(v5, v4, v6);
      sub_1BA6F2B04(v5, v4, v6);
      sub_1BA6F2B88(v5, v4, v6);
    }
    else if (v15 > 0xFD)
    {
      return 1;
    }
    sub_1BA6E6C54(v14, v13, v15);
    sub_1BA6E6CC4(v5, v4, v6);
    sub_1BA6E6CC4(v14, v13, v15);
    return 0;
  }
  return result;
}

unint64_t sub_1BAF98E68(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF98E8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF98E8C()
{
  unint64_t result;

  result = qword_1EF2B7B80;
  if (!qword_1EF2B7B80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPreviewParameters, &type metadata for FormatPreviewParameters);
    atomic_store(result, (unint64_t *)&qword_1EF2B7B80);
  }
  return result;
}

unint64_t sub_1BAF98ED0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5B8D24();
  a1[2] = sub_1BA7E41E4();
  result = sub_1BAF98F04();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF98F04()
{
  unint64_t result;

  result = qword_1EF2B7B88;
  if (!qword_1EF2B7B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPreviewParameters, &type metadata for FormatPreviewParameters);
    atomic_store(result, (unint64_t *)&qword_1EF2B7B88);
  }
  return result;
}

_QWORD *destroy for FormatPreviewParameters(_QWORD *result)
{
  _QWORD *v1;
  unsigned int v2;

  v1 = result;
  if ((~*result & 0xF000000000000007) != 0)
    result = (_QWORD *)swift_release();
  v2 = *((unsigned __int8 *)v1 + 64);
  if (v2 <= 0xFD)
    return (_QWORD *)sub_1BA6F2B88(v1[6], v1[7], v2);
  return result;
}

uint64_t initializeWithCopy for FormatPreviewParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v5 = *((unsigned __int8 *)a2 + 64);
  if (v5 <= 0xFD)
  {
    v7 = a2[6];
    v6 = a2[7];
    sub_1BA6F2B04(v7, v6, v5);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v6;
    *(_BYTE *)(a1 + 64) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPreviewParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  unsigned int v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = *a2;
  v5 = *a2 & 0xF000000000000007;
  if ((~*(_QWORD *)a1 & 0xF000000000000007) == 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *(_QWORD *)a1 = v4;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
    sub_1BAA5FA24(a1);
    v4 = *a2;
LABEL_6:
    *(_QWORD *)a1 = v4;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = v4;
  swift_retain();
  swift_release();
LABEL_8:
  v6 = *(_OWORD *)(a2 + 1);
  v7 = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  v8 = (_OWORD *)(a1 + 48);
  v9 = a2 + 6;
  v10 = *((unsigned __int8 *)a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v10 <= 0xFD)
    {
      v16 = a2[6];
      v15 = a2[7];
      sub_1BA6F2B04(v16, v15, v10);
      v17 = *(_QWORD *)(a1 + 48);
      v18 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v15;
      v19 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v10;
      sub_1BA6F2B88(v17, v18, v19);
    }
    else
    {
      sub_1BA9F0244(a1 + 48);
      v12 = *((_BYTE *)a2 + 64);
      *v8 = *v9;
      *(_BYTE *)(a1 + 64) = v12;
    }
  }
  else if (v10 <= 0xFD)
  {
    v14 = a2[6];
    v13 = a2[7];
    sub_1BA6F2B04(v14, v13, v10);
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v13;
    *(_BYTE *)(a1 + 64) = v10;
  }
  else
  {
    v11 = *v9;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *v8 = v11;
  }
  return a1;
}

uint64_t assignWithTake for FormatPreviewParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if ((~*(_QWORD *)a1 & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v4 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24(a1);
LABEL_4:
    *(_QWORD *)a1 = v4;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = v4;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v5 = a2 + 6;
  v6 = *(unsigned __int8 *)(a1 + 64);
  if (v6 <= 0xFD)
  {
    v7 = *((unsigned __int8 *)a2 + 64);
    if (v7 <= 0xFD)
    {
      v8 = *(_QWORD *)(a1 + 48);
      v9 = *(_QWORD *)(a1 + 56);
      *(_OWORD *)(a1 + 48) = *v5;
      *(_BYTE *)(a1 + 64) = v7;
      sub_1BA6F2B88(v8, v9, v6);
      return a1;
    }
    sub_1BA9F0244(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *v5;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FormatPreviewParameters()
{
  return &type metadata for FormatPreviewParameters;
}

_QWORD *sub_1BAF99268(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD v33[4];
  char v34;

  v2 = *(_QWORD *)a2;
  v28 = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  v26 = *(_QWORD *)(a2 + 24);
  v27 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 48);
  v25 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_BYTE *)(a2 + 64);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, v7);
  v9 = *(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  v13 = (_QWORD *)(v12 + v11);
  if ((v6 & 0xFE) == 0x7E)
  {
    sub_1BAAF7724(0xD000000000000010, 0x80000001BB973280, 0xF000000000000007, v13);
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v3 = 0;
    v17 = 1;
  }
  else
  {
    sub_1BA5E7FF4(v2);
    sub_1BAAF7724(0xD000000000000010, 0x80000001BB973280, v2, v13);
    v16 = v26;
    v17 = v25 & 1;
    v15 = v27;
    v14 = v28;
  }
  v33[0] = v14;
  v33[1] = v15;
  v33[2] = v16;
  v33[3] = v3;
  v34 = v17;
  sub_1BAAFC74C(0x736E492065676445, 0xEB00000000737465, (uint64_t)v33, (_QWORD *)((char *)v13 + v10));
  if ((v6 & 0xFE) == 0x7E)
  {
    v4 = 0;
    v5 = 0;
    v6 = -2;
  }
  else
  {
    sub_1BA6E6C54(v4, v5, v6);
  }
  *(_QWORD *)&v30 = v4;
  *((_QWORD *)&v30 + 1) = v5;
  LOBYTE(v31) = v6;
  v18 = sub_1BB4D88A0(a1, (uint64_t)&v30);
  sub_1BA6E6CC4(v4, v5, v6);
  v19 = sub_1BB079B30(v12, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = sub_1BA97461C(v19);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0xD000000000000012, 0x80000001BB9732A0, 0, 0, v20, &v30);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v21 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v21;
  *(_QWORD *)(v21 + 48) = v32;
  v22 = v31;
  *(_OWORD *)(v21 + 16) = v30;
  *(_OWORD *)(v21 + 32) = v22;
  v23 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v23;
}

uint64_t sub_1BAF99550()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

NewsFeed::ShortcutCommandState_optional __swiftcall ShortcutCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  NewsFeed::ShortcutCommandState_optional v2;

  v1 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = NewsFeed_ShortcutCommandState_notShortcut;
  else
    v2.value = NewsFeed_ShortcutCommandState_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t ShortcutCommandState.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74726F6853746F6ELL;
  else
    return 0x6374726F68537369;
}

uint64_t sub_1BAF99618(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x74726F6853746F6ELL;
  else
    v3 = 0x6374726F68537369;
  if (v2)
    v4 = 0xEA00000000007475;
  else
    v4 = 0xEB00000000747563;
  if (*a2)
    v5 = 0x74726F6853746F6ELL;
  else
    v5 = 0x6374726F68537369;
  if (*a2)
    v6 = 0xEB00000000747563;
  else
    v6 = 0xEA00000000007475;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BAF996CC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF99758()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF997C0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF99848@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAF998A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6374726F68537369;
  if (*v1)
    v2 = 0x74726F6853746F6ELL;
  v3 = 0xEA00000000007475;
  if (*v1)
    v3 = 0xEB00000000747563;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAF998F0()
{
  sub_1BAF99E14();
  return sub_1BB872CE8();
}

uint64_t static Commands.Shortcuts.setShortcut.getter()
{
  if (qword_1ED3C4C60 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BAF9996C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v2 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_1BAF99A8C(_BYTE *a1)
{
  uint64_t *v1;

  if ((*a1 & 1) != 0)
  {
    if (qword_1EF2A7238 != -1)
      swift_once();
    v1 = &qword_1EF2C4728;
  }
  else
  {
    if (qword_1EF2A7240 != -1)
      swift_once();
    v1 = &qword_1EF2C4730;
  }
  return (id)*v1;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE14toggleShortcut3forACSS_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BAF99E58(0, &qword_1EF2B7BA0, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v0);
  sub_1BAF99E58(0, &qword_1EF2B7BA8, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v1);
  sub_1BAF99E58(0, &qword_1EF2B7BB0, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED3C4C60 != -1)
    swift_once();
  sub_1BA82BF2C();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB870030();
  sub_1BB870018();
  sub_1BB870348();
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB2C();
}

unint64_t sub_1BAF99D00()
{
  unint64_t result;

  result = qword_1EF2B7B90;
  if (!qword_1EF2B7B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ShortcutCommandState, &type metadata for ShortcutCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B7B90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShortcutCommandState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF99D94 + 4 * byte_1BB8DB625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF99DC8 + 4 * asc_1BB8DB620[v4]))();
}

uint64_t sub_1BAF99DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF99DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF99DD8);
  return result;
}

uint64_t sub_1BAF99DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF99DECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF99DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF99DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Commands.Shortcuts()
{
  return &type metadata for Commands.Shortcuts;
}

unint64_t sub_1BAF99E14()
{
  unint64_t result;

  result = qword_1EF2B7B98;
  if (!qword_1EF2B7B98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ShortcutCommandState, &type metadata for ShortcutCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B7B98);
  }
  return result;
}

void sub_1BAF99E58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA82BF2C();
    v7 = a3(a1, &type metadata for ShortcutCommandState, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BAF99EB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBFD0)
  {
    v0 = sub_1BB871434();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBFD0);
  }
}

void sub_1BAF99F08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D00C0)
  {
    sub_1BA82BF2C();
    v0 = sub_1BB86F6E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D00C0);
  }
}

uint64_t SportsStandingDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[6];
  uint64_t v27;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v24 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v20 = *a1;
  v21 = v8;
  v10 = a1[4];
  v9 = a1[5];
  v11 = v1[4];
  v25 = v1[5];
  v12 = v1[7];
  v22 = v1[6];
  v23 = v6;
  (*(void (**)(uint64_t, uint64_t, double))(v13 + 16))(v24, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v4);
  v14 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata);
  v26[5] = v9;
  v27 = v15;
  v26[0] = v20;
  v26[1] = v6;
  v26[2] = v8;
  v26[3] = v7;
  v26[4] = v10;
  v16 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v22;
  swift_bridgeObjectRetain();
  sub_1BAF9A4C8(v15);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(v11, v25, v17, v12, v24, v14, &v27, v26);
  return v16;
}

uint64_t SportsStandingDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsStandingDataVisualization.competitorTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsStandingDataVisualization.umcCanonicalId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsStandingDataVisualization.leagueTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsStandingDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, a1);
}

uint64_t SportsStandingDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsStandingDataVisualization.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata);
  *a1 = v2;
  return sub_1BAF9A4C8(v2);
}

uint64_t SportsStandingDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 32);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BA99178C(v2, v3);
}

uint64_t SportsStandingDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, a1);
}

uint64_t SportsStandingDataVisualization.routeTag.getter()
{
  uint64_t v0;
  BOOL v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8))
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16) == 0;
  else
    v1 = 1;
  if (!v1)
    return swift_unknownObjectRetain();
  result = *(_QWORD *)(v0 + 56);
  if (result)
    return swift_unknownObjectRetain();
  return result;
}

uint64_t SportsStandingDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

_QWORD *SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8)
{
  _QWORD *v8;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v46 = a6;
  v47 = a1;
  v48 = a5;
  v14 = sub_1BB86C67C();
  v15 = MEMORY[0x1E0C80A78](v14);
  v42 = a3;
  v43 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *a7;
  v41 = a2;
  v18 = *a8;
  v17 = a8[1];
  v19 = (void *)a8[2];
  v20 = a8[3];
  v22 = a8[4];
  v21 = a8[5];
  v23 = v48;
  v8[4] = v47;
  v8[5] = a2;
  v8[6] = a3;
  v8[7] = a4;
  v47 = a4;
  v44 = v25;
  v45 = v24;
  (*(void (**)(uint64_t, uint64_t, double))(v25 + 16))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v23, v15);
  v26 = 0;
  *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources) = v46;
  *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata) = v40;
  v27 = (_QWORD *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  *v27 = v18;
  v27[1] = v17;
  v27[2] = (uint64_t)v19;
  v27[3] = v20;
  v27[4] = v22;
  v27[5] = v21;
  v49 = v18;
  v50 = v17;
  v51 = v19;
  v52 = v20;
  v40 = v20;
  v53 = v22;
  v54 = v21;
  v46 = v21;
  if (v17 && v19)
  {
    swift_unknownObjectRetain();
    v26 = v19;
  }
  v28 = v40;
  v39 = v22;
  sub_1BA99178C(v18, v17);
  swift_unknownObjectRetain();
  v29 = v42;
  swift_bridgeObjectRetain();
  v30 = v48;
  v31 = sub_1BB0FE158(v41, v29, v48, (uint64_t)&v49, v26);
  v33 = v32;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v8[2] = v31;
  v8[3] = v33;
  v49 = v18;
  v50 = v17;
  v51 = v19;
  v52 = v28;
  v53 = v39;
  v54 = v46;
  v34 = v43;
  sub_1BB0FA6B8(v30, &v49, 0xD000000000000018, 0x80000001BB9733A0, v43);
  swift_unknownObjectRelease();
  v35 = v44;
  v36 = v30;
  v37 = v45;
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v36, v45);
  sub_1BA993900(v18, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, v34, v37);
  return v8;
}

uint64_t sub_1BAF9A4C8(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRetain();
  return result;
}

uint64_t SportsStandingDataVisualization.with(metadata:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[6];
  uint64_t v27;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v24 = (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v23 = v1[4];
  v7 = v1[6];
  v25 = v1[5];
  v8 = v1[7];
  (*(void (**)(uint64_t, uint64_t, double))(v9 + 16))(v24, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v4);
  v22 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  v10 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  v11 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  v15 = v10[4];
  v16 = v10[5];
  v26[0] = v11;
  v26[1] = v12;
  v26[2] = v13;
  v26[3] = v14;
  v26[4] = v15;
  v26[5] = v16;
  v27 = v6;
  v21 = swift_allocObject();
  swift_unknownObjectRetain();
  v17 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v18 = v22;
  swift_bridgeObjectRetain();
  sub_1BA99178C(v11, v12);
  v19 = v21;
  SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(v17, v25, v7, v8, v24, v18, &v27, v26);
  return v19;
}

uint64_t SportsStandingDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsStandingDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsStandingDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char v60;

  v56 = *v1;
  v3 = sub_1BB86C67C();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v45 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088];
  sub_1BAF9CE24(0, (unint64_t *)&unk_1ED3A3B70, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v45 - v9;
  sub_1BAF9CE24(0, &qword_1ED3A3B00, (unint64_t *)&qword_1ED3AB0D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8], v7);
  v53 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v52 = (char *)&v45 - v12;
  sub_1BA4CDF6C(0, &qword_1EF2B7BB8, (uint64_t (*)(void))sub_1BAF9CE98, (uint64_t)&type metadata for SportsStandingDataVisualization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v45 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF9CE98();
  v19 = v54;
  v18 = v55;
  sub_1BB87468C();
  if (v18)
  {
LABEL_11:
    swift_deallocPartialClassInstance();
    v44 = (uint64_t)a1;
    goto LABEL_12;
  }
  v20 = v51;
  v55 = v15;
  v46 = a1;
  LOBYTE(v57) = 0;
  sub_1BAF9CFA8((unint64_t *)&unk_1ED3A3AF0, MEMORY[0x1E0DB50A0]);
  v22 = v52;
  v21 = v53;
  sub_1BB8740D4();
  sub_1BB86ED1C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v21);
  *((_QWORD *)v19 + 4) = v57;
  LOBYTE(v57) = 1;
  *((_QWORD *)v19 + 5) = sub_1BB874098();
  *((_QWORD *)v19 + 6) = v23;
  v53 = v14;
  v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088];
  sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A3B60, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v26 = v25;
  LOBYTE(v57) = 4;
  sub_1BAF9D008((unint64_t *)&unk_1ED3A3B50, (unint64_t *)&unk_1ED3A3B60, v24, MEMORY[0x1E0DB50A0]);
  v27 = (uint64_t)v20;
  sub_1BB874068();
  v52 = 0;
  v28 = v17;
  v29 = *(_QWORD *)(v26 - 8);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v26);
  v31 = v50;
  if (v30 == 1)
  {
    sub_1BAF9CEEC(v27);
    v32 = 0;
  }
  else
  {
    sub_1BB86ED1C();
    v32 = v57;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v26);
  }
  v34 = v48;
  v33 = v49;
  *((_QWORD *)v19 + 7) = v32;
  LOBYTE(v57) = 2;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v35 = v52;
  v36 = v53;
  v37 = v52;
  sub_1BB8740D4();
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v35)
      swift_unknownObjectRelease();
    a1 = v46;
    goto LABEL_11;
  }
  v38 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v38(&v19[OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl], v34, v31);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v60 = 3;
  sub_1BA993B04(&qword_1ED3AB090, &qword_1ED3AA680, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources] = v57;
  v60 = 5;
  sub_1BAF9CF48();
  sub_1BB874068();
  *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata] = v57;
  v60 = 6;
  sub_1BA993A48();
  sub_1BB874068();
  v39 = &v19[OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config];
  v40 = v58;
  *(_OWORD *)v39 = v57;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v59;
  LOBYTE(v57) = 7;
  *((_QWORD *)v19 + 2) = sub_1BB874098();
  *((_QWORD *)v19 + 3) = v41;
  LOBYTE(v57) = 8;
  v42 = v47;
  sub_1BB8740D4();
  (*(void (**)(_QWORD, uint64_t))(v55 + 8))(0, v36);
  v38(&v19[OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl], v42, v31);
  v44 = (uint64_t)v46;
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1(v44);
  return v19;
}

uint64_t SportsStandingDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088];
  sub_1BAF9CE24(0, (unint64_t *)&unk_1ED3A3B70, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v31 = (uint64_t)&v31 - v6;
  v7 = sub_1BB86E008();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF9CE24(0, &qword_1ED3A3B00, (unint64_t *)&qword_1ED3AB0D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8], v4);
  v37 = v11;
  v34 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v36 = (char *)&v31 - v12;
  sub_1BA4CDF6C(0, &qword_1EF2B7BD8, (uint64_t (*)(void))sub_1BAF9CE98, (uint64_t)&type metadata for SportsStandingDataVisualization.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v35 = v13;
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF9CE98();
  sub_1BB8746C8();
  v32 = v2;
  *(_QWORD *)&v39 = *(_QWORD *)(v2 + 32);
  v16 = qword_1ED39E310;
  swift_bridgeObjectRetain_n();
  if (v16 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED39A4E0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v17, v7);
  MEMORY[0x1E0C80A78](v18);
  v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BA4C3E90(0, (unint64_t *)&qword_1ED3AB0D0, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(&v31 - 2) = v20;
  *(&v31 - 1) = sub_1BAF9D008((unint64_t *)&unk_1ED3AB0E0, (unint64_t *)&qword_1ED3AB0D0, v19, MEMORY[0x1E0DEAF38]);
  swift_getKeyPath();
  v21 = v36;
  sub_1BB86ED34();
  swift_bridgeObjectRelease();
  LOBYTE(v39) = 0;
  sub_1BAF9CFA8(&qword_1ED3A3AE8, MEMORY[0x1E0DB5098]);
  v22 = v35;
  v23 = v37;
  v24 = v38;
  sub_1BB8741AC();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v23);
  if (!v24)
  {
    v25 = v32;
    LOBYTE(v39) = 1;
    sub_1BB87417C();
    v26 = swift_unknownObjectRetain();
    v27 = v31;
    sub_1BAF9B48C(v26, v31);
    LOBYTE(v39) = 4;
    v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088];
    sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A3B60, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    sub_1BAF9D008((unint64_t *)&unk_1ED3A3B40, (unint64_t *)&unk_1ED3A3B60, v28, MEMORY[0x1E0DB5098]);
    sub_1BB87414C();
    sub_1BAF9CEEC(v27);
    LOBYTE(v39) = 2;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    *(_QWORD *)&v39 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
    v42 = 3;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA993B04((unint64_t *)&qword_1ED3AB080, (unint64_t *)&unk_1ED3AA670, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v39 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata);
    v42 = 5;
    sub_1BAF9D05C();
    sub_1BB87414C();
    v30 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16);
    v39 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
    v40 = v30;
    v41 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 32);
    v42 = 6;
    sub_1BA993C44();
    sub_1BB87414C();
    LOBYTE(v39) = 7;
    sub_1BB87417C();
    LOBYTE(v39) = 8;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v22);
}

uint64_t sub_1BAF9B48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v4 = sub_1BB86E008();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF9CE24(0, (unint64_t *)&unk_1ED3A3B70, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - v9;
  v19[1] = a1;
  v11 = qword_1ED39E310;
  swift_unknownObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED39A4E0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  MEMORY[0x1E0C80A78](v13);
  v19[-2] = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
  swift_getKeyPath();
  sub_1BB86ED04();
  swift_unknownObjectRelease();
  sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A3B60, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v14))
  {
    sub_1BAF9CEEC((uint64_t)v10);
    v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t sub_1BAF9B6A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF9B6E4 + 4 * a7[a1]))(0x74697465706D6F63, 0xEE0073676154726FLL);
}

uint64_t sub_1BAF9B6E4()
{
  return 0x6E6F6E6143636D75;
}

uint64_t sub_1BAF9B708()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BAF9B720()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BAF9B744()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BAF9B760()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BAF9B778()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BAF9B78C()
{
  return 0x696669746E656469;
}

unint64_t sub_1BAF9B7A8()
{
  return 0xD000000000000012;
}

uint64_t sub_1BAF9B7C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF9B804 + 4 * byte_1BB8DB759[a1]))(0x74697465706D6F63, 0xEE0073676154726FLL);
}

uint64_t sub_1BAF9B804()
{
  return 0x6E6F6E6143636D75;
}

uint64_t sub_1BAF9B828()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BAF9B840()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BAF9B864()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BAF9B880()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BAF9B898()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BAF9B8AC()
{
  return 0x696669746E656469;
}

unint64_t sub_1BAF9B8C8()
{
  return 0xD000000000000012;
}

void sub_1BAF9B8E4(char *a1)
{
  sub_1BB7EED1C(*a1);
}

uint64_t sub_1BAF9B8F0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D13C8((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BAF9B934(uint64_t a1)
{
  char *v1;

  sub_1BA9D13C8(a1, *v1);
}

uint64_t sub_1BAF9B93C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D13C8((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BAF9B97C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF9D5B8();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF9B9A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAF9B6A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAF9B9D0()
{
  unsigned __int8 *v0;

  return sub_1BAF9B7C4(*v0);
}

uint64_t sub_1BAF9B9D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF9D5B8();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF9B9FC()
{
  sub_1BAF9CE98();
  return sub_1BB874710();
}

uint64_t sub_1BAF9BA24()
{
  sub_1BAF9CE98();
  return sub_1BB87471C();
}

uint64_t SportsStandingDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl;
  v2 = sub_1BB86C67C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  sub_1BAF9CEDC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_metadata));
  sub_1BA993900(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsStandingDataVisualization.__deallocating_deinit()
{
  SportsStandingDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1BAF9BB30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char *result;

  v5 = swift_allocObject();
  result = SportsStandingDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAF9BB84(_QWORD *a1)
{
  return SportsStandingDataVisualization.encode(to:)(a1);
}

uint64_t static SportsStandingDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t SportsStandingDataVisualizationMetadata.backingTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsStandingDataVisualizationMetadata.init(backingTag:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SportsStandingDataVisualizationMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a2;
  sub_1BAF9CE24(0, (unint64_t *)&unk_1ED3A3B70, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v22 = (uint64_t)&v21 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2B7BF0, (uint64_t (*)(void))sub_1BAF9D0A0, (uint64_t)&type metadata for SportsStandingDataVisualizationMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF9D0A0();
  sub_1BB87468C();
  if (!v2)
  {
    v11 = v21;
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088];
    sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A3B60, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    v14 = v13;
    sub_1BAF9D008((unint64_t *)&unk_1ED3A3B50, (unint64_t *)&unk_1ED3A3B60, v12, MEMORY[0x1E0DB50A0]);
    sub_1BB874068();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1BAF9CEEC(v22);
      *v11 = 0;
    }
    else
    {
      v16 = v22;
      sub_1BB86ED1C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v17 = v23;
      v18 = v16;
      v19 = v21;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
      *v19 = v17;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t SportsStandingDataVisualizationMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  sub_1BAF9CE24(0, (unint64_t *)&unk_1ED3A3B70, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - v3;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2B7C00, (uint64_t (*)(void))sub_1BAF9D0A0, (uint64_t)&type metadata for SportsStandingDataVisualizationMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v13 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF9D0A0();
  sub_1BB8746C8();
  v9 = swift_unknownObjectRetain();
  sub_1BAF9B48C(v9, (uint64_t)v4);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088];
  sub_1BA4C3E90(0, (unint64_t *)&unk_1ED3A3B60, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  sub_1BAF9D008((unint64_t *)&unk_1ED3A3B40, (unint64_t *)&unk_1ED3A3B60, v10, MEMORY[0x1E0DB5098]);
  sub_1BB87414C();
  sub_1BAF9CEEC((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v6);
}

uint64_t sub_1BAF9C008()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAF9C05C()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAF9C078()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAF9C0C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BAF9C118(_QWORD *a1@<X8>)
{
  *a1 = 0x54676E696B636162;
  a1[1] = 0xEA00000000006761;
}

uint64_t sub_1BAF9C138()
{
  return 0x54676E696B636162;
}

uint64_t sub_1BAF9C154@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BAF9C1A8()
{
  sub_1BAF9D0A0();
  return sub_1BB874710();
}

uint64_t sub_1BAF9C1D0()
{
  sub_1BAF9D0A0();
  return sub_1BB87471C();
}

uint64_t sub_1BAF9C1F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsStandingDataVisualizationMetadata.init(from:)(a1, a2);
}

uint64_t sub_1BAF9C20C(_QWORD *a1)
{
  return SportsStandingDataVisualizationMetadata.encode(to:)(a1);
}

_QWORD *sub_1BAF9C220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  _QWORD *result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _UNKNOWN **v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  _QWORD *v103;
  __int128 v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t inited;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  unint64_t v114;
  __int128 v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  void (*v135)(_QWORD *, _QWORD, uint64_t, uint64_t);
  __int128 v136;
  __int128 v137;
  _UNKNOWN **v138;
  uint64_t v139;
  _QWORD v140[5];
  __int128 v141;
  uint64_t v142;
  _OWORD v143[2];
  uint64_t v144;

  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v110 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v109 = (_QWORD *)((char *)&v104 - v6);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v126 = (char *)&v104 - v9;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v104 - v12;
  if (!a1)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v124 = v11;
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  v104 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = v14;
  sub_1BA8C88C8(0);
  v128 = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v122 = v19 | 7;
  v123 = v15;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87D7A0;
  v127 = v20;
  v105 = v21;
  v22 = (_QWORD *)(v21 + v20);
  v24 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 48);
  v25 = type metadata accessor for FormatInspectionItem(0);
  v108 = a1;
  v26 = v25;
  v27 = (char *)v22 + *(int *)(v25 + 24);
  *(_QWORD *)v27 = v24;
  *((_QWORD *)v27 + 1) = v23;
  v28 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v133 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v134 = v28;
  v133(v27, 0, 1, v28);
  *v22 = 0xD000000000000010;
  v22[1] = 0x80000001BB9658C0;
  v22[2] = 0;
  v22[3] = 0;
  v29 = (char *)v22 + *(int *)(v26 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  v30 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v30(v22, 0, 1, v26);
  v106 = v22;
  v129 = v18;
  v31 = (_QWORD *)((char *)v22 + v18);
  v32 = v26;
  v33 = v108;
  v121 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v121(v13, v108 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl, v2);
  v125 = v3;
  v34 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
  v119 = v2;
  v120 = v34;
  v34((uint64_t)v13, 0, 1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF770C(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v13, v31);
  v135 = v30;
  v30(v31, 0, 1, v32);
  v35 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_urlDataSources);
  if (v35 >> 62)
    goto LABEL_22;
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v36)
  {
    while (1)
    {
      v142 = MEMORY[0x1E0DEE9D8];
      result = (_QWORD *)sub_1BAC7A388(0, v36 & ~(v36 >> 63), 0);
      if (v36 < 0)
        break;
      v33 = 0;
      v38 = v142;
      v39 = 2 * v129;
      v116 = v127 + 3 * v129;
      v117 = v35 & 0xC000000000000001;
      v115 = xmmword_1BB87FC80;
      v40 = MEMORY[0x1E0DEA968];
      v112 = xmmword_1BB88A7F0;
      v111 = xmmword_1BB88A800;
      v113 = v36;
      v114 = v35;
      v118 = 2 * v129;
      while (v36 != v33)
      {
        v131 = v38;
        v132 = v33;
        if (v117)
        {
          v41 = (_QWORD *)MEMORY[0x1BCCE4630](v33, v35);
        }
        else
        {
          v41 = *(_QWORD **)(v35 + 8 * v33 + 32);
          swift_retain();
        }
        v42 = v135;
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v115;
        v130 = v43;
        v44 = (_QWORD *)(v43 + v127);
        v45 = v41[2];
        v46 = v41[3];
        sub_1BA993F8C(v45, v46);
        sub_1BAAF9A70(0x20746E65746E6F43, 0xEC00000065707954, v45, v46, v44);
        v42(v44, 0, 1, v32);
        v47 = (char *)v44 + v129;
        v48 = v41[5];
        *(_QWORD *)&v141 = v41[4];
        *((_QWORD *)&v141 + 1) = v48;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        v49 = v32;
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          v50 = &v47[*(int *)(v32 + 24)];
          *(_QWORD *)v50 = v136;
          v51 = v134;
          swift_storeEnumTagMultiPayload();
          v133(v50, 0, 1, v51);
          *(_OWORD *)v47 = v112;
          *((_QWORD *)v47 + 2) = 0;
          *((_QWORD *)v47 + 3) = 0;
          v52 = &v47[*(int *)(v32 + 28)];
          *(_QWORD *)v52 = 0;
          *((_QWORD *)v52 + 1) = 0;
          v52[16] = -1;
        }
        else
        {
          *((_QWORD *)&v137 + 1) = v40;
          v138 = (_UNKNOWN **)MEMORY[0x1E0DEA9D8];
          v136 = v141;
          sub_1BA4CECCC(&v136, (uint64_t)v140);
          v53 = __swift_project_boxed_opaque_existential_1(v140, v140[3]);
          v54 = *v53;
          v55 = v53[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v56 = (uint64_t)v109;
          *v109 = v54;
          *(_QWORD *)(v56 + 8) = v55;
          v57 = v134;
          swift_storeEnumTagMultiPayload();
          v133((char *)v56, 0, 1, v57);
          *(_OWORD *)v47 = v112;
          *((_QWORD *)v47 + 2) = 0;
          *((_QWORD *)v47 + 3) = 0;
          sub_1BA993F9C(v56, (uint64_t)&v47[*(int *)(v49 + 24)]);
          v58 = &v47[*(int *)(v49 + 28)];
          *(_QWORD *)v58 = 0;
          *((_QWORD *)v58 + 1) = 0;
          v58[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v140);
        }
        v59 = v49;
        v60 = v119;
        swift_bridgeObjectRelease();
        v135(v47, 0, 1, v49);
        v61 = (char *)v44 + v39;
        v62 = (uint64_t)v126;
        v63 = v121;
        v121(v126, (uint64_t)v41 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v60);
        v120(v62, 0, 1, v60);
        v64 = v124;
        sub_1BA7E8428(v62, v124);
        v65 = v59;
        v66 = v125;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v64, 1, v60) == 1)
        {
          sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
          v133(&v61[*(int *)(v65 + 24)], 1, 1, v134);
          *(_OWORD *)v61 = v111;
          *((_QWORD *)v61 + 2) = 0;
          *((_QWORD *)v61 + 3) = 0;
          v67 = &v61[*(int *)(v65 + 28)];
          *(_QWORD *)v67 = 0;
          *((_QWORD *)v67 + 1) = 0;
          v67[16] = -1;
        }
        else
        {
          v68 = v63;
          v69 = v110;
          v68(v110, v64, v60);
          sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
          v70 = &v61[*(int *)(v65 + 24)];
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v70, v69, v60);
          v71 = v134;
          swift_storeEnumTagMultiPayload();
          v133(v70, 0, 1, v71);
          *(_OWORD *)v61 = v111;
          *((_QWORD *)v61 + 2) = 0;
          *((_QWORD *)v61 + 3) = 0;
          v72 = &v61[*(int *)(v65 + 28)];
          *(_QWORD *)v72 = 0;
          *((_QWORD *)v72 + 1) = 0;
          v72[16] = -1;
          (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v60);
        }
        v36 = v113;
        v35 = v114;
        v32 = v65;
        v135(v61, 0, 1, v65);
        sub_1BAF89090(0, 0xE000000000000000, 0, 0, v130, v143);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((_QWORD *)&v137 + 1) = &type metadata for FormatInspectionGroup;
        v138 = &off_1E72D2F60;
        v73 = swift_allocObject();
        *(_QWORD *)&v136 = v73;
        swift_release();
        *(_QWORD *)(v73 + 48) = v144;
        v74 = v143[1];
        *(_OWORD *)(v73 + 16) = v143[0];
        *(_OWORD *)(v73 + 32) = v74;
        v142 = v131;
        v76 = *(_QWORD *)(v131 + 16);
        v75 = *(_QWORD *)(v131 + 24);
        if (v76 >= v75 >> 1)
          sub_1BAC7A388(v75 > 1, v76 + 1, 1);
        v33 = v132 + 1;
        v77 = *((_QWORD *)&v137 + 1);
        v78 = (uint64_t)v138;
        v79 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v136, *((uint64_t *)&v137 + 1));
        v80 = MEMORY[0x1E0C80A78](v79);
        v82 = (char *)&v104 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v83 + 16))(v82, v80);
        sub_1BA6AC628(v76, (uint64_t)v82, &v142, v77, v78);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v136);
        v38 = v142;
        v39 = v118;
        v40 = MEMORY[0x1E0DEA968];
        if (v36 == v33)
        {
          swift_bridgeObjectRelease();
          v33 = v108;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v36 = sub_1BB873F30();
      if (!v36)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v39 = 2 * v129;
    v38 = MEMORY[0x1E0DEE9D8];
LABEL_24:
    v84 = v135;
    v133 = (void (*)(char *, _QWORD, uint64_t, uint64_t))(inited + 32);
    v85 = (_QWORD *)((char *)v106 + v39);
    v86 = sub_1BA9747FC(v38);
    swift_bridgeObjectRelease();
    v87 = sub_1BB6DF010(v86);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x756F532061746144, 0xEC00000073656372, (uint64_t)v87, 0, 0, v85);
    v134 = v32;
    v84(v85, 0, 1, v32);
    v88 = v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config;
    v90 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
    v89 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 8);
    v91 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16);
    v92 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 24);
    v94 = *(_UNKNOWN ***)(v33 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 32);
    v93 = *(_QWORD *)(v88 + 40);
    if (v89)
    {
      swift_bridgeObjectRetain();
      v132 = v90;
    }
    else
    {
      v132 = 0;
    }
    v95 = (_QWORD *)((char *)v106 + 3 * v129);
    sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v96 = swift_initStackObject();
    *(_OWORD *)(v96 + 16) = v104;
    *(_QWORD *)&v136 = v90;
    *((_QWORD *)&v136 + 1) = v89;
    *(_QWORD *)&v137 = v91;
    *((_QWORD *)&v137 + 1) = v92;
    v138 = v94;
    v139 = v93;
    v97 = sub_1BB0FD744((uint64_t *)&v136);
    *(_QWORD *)(v96 + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(v96 + 64) = &off_1E7335C38;
    *(_QWORD *)(v96 + 32) = v97;
    v98 = sub_1BA9747FC(v96);
    swift_setDeallocating();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
    swift_arrayDestroy();
    v99 = sub_1BB6DF010(v98);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x6769666E6F43, 0xE600000000000000, (uint64_t)v99, v132, v89, v95);
    v135(v95, 0, 1, v134);
    sub_1BAF89090(0x676E69646E617453, 0xE800000000000000, 0, 0, v105, &v136);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v100 = inited;
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v100 + 64) = &off_1E72D2F60;
    v101 = swift_allocObject();
    *(_QWORD *)(v100 + 32) = v101;
    *(_QWORD *)(v101 + 48) = v138;
    v102 = v137;
    *(_OWORD *)(v101 + 16) = v136;
    *(_OWORD *)(v101 + 32) = v102;
    v103 = sub_1BB6DF010(v100);
    swift_setDeallocating();
    sub_1BA67D978(0, &qword_1EF2ABC80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    swift_release();
    return v103;
  }
  return result;
}

void sub_1BAF9CE24(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA4C3E90(255, a3, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BAF9CE98()
{
  unint64_t result;

  result = qword_1EF2B7BC0;
  if (!qword_1EF2B7BC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBBC4, &type metadata for SportsStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7BC0);
  }
  return result;
}

uint64_t sub_1BAF9CEDC(uint64_t result)
{
  if (result != 1)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t sub_1BAF9CEEC(uint64_t a1)
{
  uint64_t v2;

  sub_1BAF9CE24(0, (unint64_t *)&unk_1ED3A3B70, (unint64_t *)&unk_1ED3A3B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BAF9CF48()
{
  unint64_t result;

  result = qword_1EF2B7BC8;
  if (!qword_1EF2B7BC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsStandingDataVisualizationMetadata, &type metadata for SportsStandingDataVisualizationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF2B7BC8);
  }
  return result;
}

uint64_t sub_1BAF9CF90()
{
  return 16;
}

__n128 sub_1BAF9CF9C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BAF9CFA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BAF9CE24(255, &qword_1ED3A3B00, (unint64_t *)&qword_1ED3AB0D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAF9D008(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA4C3E90(255, a2, (unint64_t *)&qword_1ED3AB1E0, (uint64_t)&protocolRef_FCSportsProviding, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAF9D05C()
{
  unint64_t result;

  result = qword_1EF2B7BE0;
  if (!qword_1EF2B7BE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsStandingDataVisualizationMetadata, &type metadata for SportsStandingDataVisualizationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF2B7BE0);
  }
  return result;
}

unint64_t sub_1BAF9D0A0()
{
  unint64_t result;

  result = qword_1EF2B7BF8;
  if (!qword_1EF2B7BF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBB74, &type metadata for SportsStandingDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7BF8);
  }
  return result;
}

uint64_t sub_1BAF9D0E4()
{
  return type metadata accessor for SportsStandingDataVisualization();
}

uint64_t type metadata accessor for SportsStandingDataVisualization()
{
  uint64_t result;

  result = qword_1ED3A9400;
  if (!qword_1ED3A9400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF9D128()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SportsStandingDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsStandingDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SportsStandingDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

_QWORD *initializeBufferWithCopyOfBuffer for SportsStandingDataVisualizationMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsStandingDataVisualizationMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SportsStandingDataVisualizationMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsStandingDataVisualizationMetadata()
{
  return &type metadata for SportsStandingDataVisualizationMetadata;
}

uint64_t storeEnumTagSinglePayload for SportsStandingDataVisualizationMetadata.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF9D2E0 + 4 * byte_1BB8DB762[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF9D300 + 4 * byte_1BB8DB767[v4]))();
}

_BYTE *sub_1BAF9D2E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF9D300(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF9D308(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF9D310(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF9D318(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF9D320(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingDataVisualizationMetadata.CodingKeys()
{
  return &type metadata for SportsStandingDataVisualizationMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SportsStandingDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BAF9D388 + 4 * byte_1BB8DB771[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BAF9D3BC + 4 * byte_1BB8DB76C[v4]))();
}

uint64_t sub_1BAF9D3BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF9D3C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF9D3CCLL);
  return result;
}

uint64_t sub_1BAF9D3D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF9D3E0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BAF9D3E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF9D3EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingDataVisualization.CodingKeys()
{
  return &type metadata for SportsStandingDataVisualization.CodingKeys;
}

unint64_t sub_1BAF9D40C()
{
  unint64_t result;

  result = qword_1EF2B7C10;
  if (!qword_1EF2B7C10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBA5C, &type metadata for SportsStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C10);
  }
  return result;
}

unint64_t sub_1BAF9D454()
{
  unint64_t result;

  result = qword_1EF2B7C18;
  if (!qword_1EF2B7C18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBB4C, &type metadata for SportsStandingDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C18);
  }
  return result;
}

unint64_t sub_1BAF9D49C()
{
  unint64_t result;

  result = qword_1EF2B7C20;
  if (!qword_1EF2B7C20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBA84, &type metadata for SportsStandingDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C20);
  }
  return result;
}

unint64_t sub_1BAF9D4E4()
{
  unint64_t result;

  result = qword_1EF2B7C28;
  if (!qword_1EF2B7C28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBAAC, &type metadata for SportsStandingDataVisualizationMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C28);
  }
  return result;
}

unint64_t sub_1BAF9D52C()
{
  unint64_t result;

  result = qword_1EF2B7C30;
  if (!qword_1EF2B7C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB994, &type metadata for SportsStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C30);
  }
  return result;
}

unint64_t sub_1BAF9D574()
{
  unint64_t result;

  result = qword_1EF2B7C38;
  if (!qword_1EF2B7C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB9BC, &type metadata for SportsStandingDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C38);
  }
  return result;
}

uint64_t sub_1BAF9D5B8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1BAF9D600()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAF9D634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A610)
  {
    sub_1BA4C3E90(255, (unint64_t *)&unk_1ED39A600, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A610);
  }
}

uint64_t sub_1BAF9D6AC()
{
  return 8;
}

_QWORD *sub_1BAF9D6B8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t FormatLayeredMediaNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatLayeredMediaNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatLayeredMediaNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 144);
  v8 = *(_QWORD *)(v1 + 152);
  v9 = *(_QWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 168);
  v11 = *(_QWORD *)(v1 + 176);
  v12 = *(_BYTE *)(v1 + 184);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatLayeredMediaNodeStyle.video.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 192);
  v3 = *(_QWORD *)(v1 + 200);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 208);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.motion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 216);
  v3 = *(_QWORD *)(v1 + 224);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 232);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 233);
}

uint64_t FormatLayeredMediaNodeStyle.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF9D93C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t *v54;
  _OWORD *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  _QWORD *v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  _QWORD *v98;
  __int128 *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  char v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  _BOOL8 v114;
  uint64_t v115;
  char v116;
  unint64_t v117;
  char v118;
  _QWORD *v119;
  char v120;
  char v121;
  unint64_t v122;
  uint64_t v123;
  _BOOL8 v124;
  uint64_t v125;
  char v126;
  unint64_t v127;
  char v128;
  _QWORD *v129;
  __int128 *v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  _OWORD *v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  unint64_t v162;
  unint64_t v163;
  _QWORD *v164;
  __int128 *v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  _OWORD *v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  __int128 *v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  unint64_t v211;
  unint64_t v212;
  _OWORD *v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  int v242;
  uint64_t v243;
  unsigned __int8 v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  unsigned __int8 v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t result;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unsigned __int8 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  uint64_t v278;
  int64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  _OWORD v283[13];
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  _QWORD *v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  _BYTE v333[32];
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  _BYTE v345[32];
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  _QWORD *v361;

  swift_beginAccess();
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[5];
  v276 = v1[4];
  swift_beginAccess();
  v277 = v1;
  v6 = v1[6];
  swift_beginAccess();
  v278 = a1;
  v7 = *(_QWORD *)(a1 + 48);
  v361 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v8 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v7 + 16);
  if (__OFADD__(v8, v9))
    goto LABEL_90;
  v275 = v4;
  sub_1BAFA1358();
  swift_bridgeObjectRetain();
  v273 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v10 = sub_1BA6E6D30(0, v8, 0, MEMORY[0x1E0DEE9D8]);
  v11 = *(_QWORD *)(v6 + 16);
  v280 = v7;
  v282 = v6;
  v274 = v3;
  if (!v11)
    goto LABEL_20;
  v279 = v9;
  swift_bridgeObjectRetain();
  v12 = *(_OWORD *)(v6 + 192);
  v357 = *(_OWORD *)(v6 + 176);
  v358 = v12;
  v13 = *(_OWORD *)(v6 + 224);
  v359 = *(_OWORD *)(v6 + 208);
  v360 = v13;
  v14 = *(_OWORD *)(v6 + 128);
  v353 = *(_OWORD *)(v6 + 112);
  v354 = v14;
  v15 = *(_OWORD *)(v6 + 160);
  v355 = *(_OWORD *)(v6 + 144);
  v356 = v15;
  v16 = *(_OWORD *)(v6 + 48);
  v17 = *(_OWORD *)(v6 + 80);
  v18 = *(_OWORD *)(v6 + 96);
  v350 = *(_OWORD *)(v6 + 64);
  v351 = v17;
  v352 = v18;
  v19 = *(_OWORD *)(v6 + 32);
  v349 = v16;
  v348 = v19;
  v20 = *((_QWORD *)&v19 + 1);
  v21 = v11 - 1;
  for (i = 240; ; i += 208)
  {
    v23 = v348;
    sub_1BAC687E4((uint64_t)&v348);
    sub_1BAC687E4((uint64_t)&v348);
    swift_bridgeObjectRetain();
    v24 = v361;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v324 = v24;
    v27 = sub_1BA6E35A8(v23, v20);
    v28 = v24[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
    {
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v31 = v26;
    if (v24[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C79A4();
        if ((v31 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B70A4(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_1BA6E35A8(v23, v20);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_91;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_11:
        v34 = (_QWORD *)v324;
        v35 = (__int128 *)(*(_QWORD *)(v324 + 56) + 208 * v27);
        v336 = *v35;
        v36 = v35[3];
        v38 = v35[1];
        v37 = v35[2];
        v340 = v35[4];
        v339 = v36;
        v337 = v38;
        v338 = v37;
        v39 = v35[7];
        v41 = v35[5];
        v40 = v35[6];
        v344 = v35[8];
        v343 = v39;
        v341 = v41;
        v342 = v40;
        v42 = v35[11];
        v44 = v35[9];
        v43 = v35[10];
        v347 = v35[12];
        v346 = v42;
        *(_OWORD *)v345 = v44;
        *(_OWORD *)&v345[16] = v43;
        sub_1BAC6890C((uint64_t)&v336);
        *v35 = v348;
        v45 = v352;
        v46 = v350;
        v47 = v349;
        v35[3] = v351;
        v35[4] = v45;
        v35[1] = v47;
        v35[2] = v46;
        v48 = v356;
        v49 = v354;
        v50 = v353;
        v35[7] = v355;
        v35[8] = v48;
        v35[5] = v50;
        v35[6] = v49;
        v51 = v360;
        v52 = v358;
        v53 = v357;
        v35[11] = v359;
        v35[12] = v51;
        v35[9] = v53;
        v35[10] = v52;
        goto LABEL_15;
      }
    }
    v34 = (_QWORD *)v324;
    *(_QWORD *)(v324 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v54 = (uint64_t *)(v34[6] + 16 * v27);
    *v54 = v23;
    v54[1] = v20;
    v55 = (_OWORD *)(v34[7] + 208 * v27);
    v56 = v360;
    v57 = v359;
    v58 = v358;
    v55[9] = v357;
    v55[10] = v58;
    v55[11] = v57;
    v55[12] = v56;
    v59 = v356;
    v60 = v355;
    v61 = v354;
    v55[5] = v353;
    v55[6] = v61;
    v55[7] = v60;
    v55[8] = v59;
    v62 = v352;
    v63 = v351;
    v64 = v350;
    v55[1] = v349;
    v55[2] = v64;
    v55[3] = v63;
    v55[4] = v62;
    *v55 = v348;
    v65 = v34[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_86;
    v34[2] = v67;
    swift_bridgeObjectRetain();
LABEL_15:
    v361 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v68 = v10[2];
    v69 = v10[3];
    swift_bridgeObjectRetain();
    if (v68 >= v69 >> 1)
      v10 = sub_1BA6E6D30((_QWORD *)(v69 > 1), v68 + 1, 1, v10);
    v10[2] = v68 + 1;
    v70 = &v10[2 * v68];
    v70[4] = v23;
    v70[5] = v20;
    sub_1BAC6890C((uint64_t)&v348);
    if (!v21)
      break;
    v348 = *(_OWORD *)(v282 + i);
    v71 = *(_OWORD *)(v282 + i + 16);
    v72 = *(_OWORD *)(v282 + i + 32);
    v73 = *(_OWORD *)(v282 + i + 48);
    v352 = *(_OWORD *)(v282 + i + 64);
    v351 = v73;
    v350 = v72;
    v349 = v71;
    v74 = *(_OWORD *)(v282 + i + 80);
    v75 = *(_OWORD *)(v282 + i + 96);
    v76 = *(_OWORD *)(v282 + i + 112);
    v356 = *(_OWORD *)(v282 + i + 128);
    v355 = v76;
    v354 = v75;
    v353 = v74;
    v77 = *(_OWORD *)(v282 + i + 144);
    v78 = *(_OWORD *)(v282 + i + 160);
    v79 = *(_OWORD *)(v282 + i + 176);
    v360 = *(_OWORD *)(v282 + i + 192);
    v359 = v79;
    v358 = v78;
    v357 = v77;
    v20 = *((_QWORD *)&v348 + 1);
    --v21;
  }
  swift_bridgeObjectRelease();
  v9 = v279;
  v7 = v280;
LABEL_20:
  v80 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v81 = *(_QWORD *)(v7 + 16);
  if (!v81)
    goto LABEL_52;
  swift_bridgeObjectRetain();
  v82 = v81 - 1;
  v83 = 32;
  while (2)
  {
    v348 = *(_OWORD *)(v7 + v83);
    v84 = *(_OWORD *)(v7 + v83 + 16);
    v85 = *(_OWORD *)(v7 + v83 + 32);
    v86 = *(_OWORD *)(v7 + v83 + 48);
    v352 = *(_OWORD *)(v7 + v83 + 64);
    v351 = v86;
    v350 = v85;
    v349 = v84;
    v87 = *(_OWORD *)(v7 + v83 + 80);
    v88 = *(_OWORD *)(v7 + v83 + 96);
    v89 = *(_OWORD *)(v7 + v83 + 112);
    v356 = *(_OWORD *)(v7 + v83 + 128);
    v355 = v89;
    v354 = v88;
    v353 = v87;
    v90 = *(_OWORD *)(v7 + v83 + 144);
    v91 = *(_OWORD *)(v7 + v83 + 160);
    v92 = *(_OWORD *)(v7 + v83 + 176);
    v360 = *(_OWORD *)(v7 + v83 + 192);
    v359 = v92;
    v358 = v91;
    v357 = v90;
    v93 = v348;
    *(_OWORD *)v345 = *(_OWORD *)(v7 + v83 + 144);
    *(_OWORD *)&v345[16] = *(_OWORD *)(v7 + v83 + 160);
    v346 = *(_OWORD *)(v7 + v83 + 176);
    v347 = *(_OWORD *)(v7 + v83 + 192);
    v341 = *(_OWORD *)(v7 + v83 + 80);
    v342 = *(_OWORD *)(v7 + v83 + 96);
    v343 = *(_OWORD *)(v7 + v83 + 112);
    v344 = *(_OWORD *)(v7 + v83 + 128);
    v337 = *(_OWORD *)(v7 + v83 + 16);
    v338 = *(_OWORD *)(v7 + v83 + 32);
    v339 = *(_OWORD *)(v7 + v83 + 48);
    v340 = *(_OWORD *)(v7 + v83 + 64);
    v336 = *(_OWORD *)(v7 + v83);
    v94 = v361;
    v95 = v361[2];
    sub_1BAC687E4((uint64_t)&v348);
    if (!v95)
      goto LABEL_29;
    swift_bridgeObjectRetain();
    v96 = sub_1BA6E35A8(v93, *((uint64_t *)&v93 + 1));
    if ((v97 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_29:
      v119 = v80;
      sub_1BAC687E4((uint64_t)&v348);
      swift_bridgeObjectRetain();
      v120 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v311 = v94;
      v122 = sub_1BA6E35A8(v93, *((uint64_t *)&v93 + 1));
      v123 = v94[2];
      v124 = (v121 & 1) == 0;
      v125 = v123 + v124;
      if (__OFADD__(v123, v124))
        goto LABEL_85;
      v126 = v121;
      if (v94[3] >= v125)
      {
        if ((v120 & 1) == 0)
          sub_1BB4C79A4();
      }
      else
      {
        sub_1BB4B70A4(v125, v120);
        v127 = sub_1BA6E35A8(v93, *((uint64_t *)&v93 + 1));
        if ((v126 & 1) != (v128 & 1))
          goto LABEL_91;
        v122 = v127;
      }
      v80 = v119;
      if ((v126 & 1) != 0)
      {
        v129 = (_QWORD *)v311;
        v130 = (__int128 *)(*(_QWORD *)(v311 + 56) + 208 * v122);
        v324 = *v130;
        v131 = v130[3];
        v133 = v130[1];
        v132 = v130[2];
        v328 = v130[4];
        v327 = v131;
        v325 = v133;
        v326 = v132;
        v134 = v130[7];
        v136 = v130[5];
        v135 = v130[6];
        v332 = v130[8];
        v331 = v134;
        v329 = v136;
        v330 = v135;
        v137 = v130[11];
        v139 = v130[9];
        v138 = v130[10];
        v335 = v130[12];
        v334 = v137;
        *(_OWORD *)v333 = v139;
        *(_OWORD *)&v333[16] = v138;
        sub_1BAC6890C((uint64_t)&v324);
        *v130 = v348;
        v140 = v352;
        v141 = v350;
        v142 = v349;
        v130[3] = v351;
        v130[4] = v140;
        v130[1] = v142;
        v130[2] = v141;
        v143 = v356;
        v144 = v354;
        v145 = v353;
        v130[7] = v355;
        v130[8] = v143;
        v130[5] = v145;
        v130[6] = v144;
        v146 = v360;
        v147 = v358;
        v148 = v357;
        v130[11] = v359;
        v130[12] = v146;
        v130[9] = v148;
        v130[10] = v147;
      }
      else
      {
        v129 = (_QWORD *)v311;
        *(_QWORD *)(v311 + 8 * (v122 >> 6) + 64) |= 1 << v122;
        *(_OWORD *)(v129[6] + 16 * v122) = v93;
        v149 = (_OWORD *)(v129[7] + 208 * v122);
        v150 = v360;
        v151 = v359;
        v152 = v358;
        v149[9] = v357;
        v149[10] = v152;
        v149[11] = v151;
        v149[12] = v150;
        v153 = v356;
        v154 = v355;
        v155 = v354;
        v149[5] = v353;
        v149[6] = v155;
        v149[7] = v154;
        v149[8] = v153;
        v156 = v352;
        v157 = v351;
        v158 = v350;
        v149[1] = v349;
        v149[2] = v158;
        v149[3] = v157;
        v149[4] = v156;
        *v149 = v348;
        v159 = v129[2];
        v66 = __OFADD__(v159, 1);
        v160 = v159 + 1;
        if (v66)
          goto LABEL_87;
        v129[2] = v160;
        swift_bridgeObjectRetain();
      }
      v361 = v129;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v161 = v336;
      v162 = v119[2];
      v163 = v119[3];
      swift_bridgeObjectRetain();
      v7 = v280;
      if (v162 >= v163 >> 1)
        v80 = sub_1BA6E6D30((_QWORD *)(v163 > 1), v162 + 1, 1, v119);
      v80[2] = v162 + 1;
      *(_OWORD *)&v80[2 * v162 + 4] = v161;
      v324 = v161;
      v325 = v337;
      v326 = v338;
      *(_QWORD *)&v327 = v339;
      BYTE8(v327) = BYTE8(v339);
      v328 = v340;
      v329 = v341;
      v330 = v342;
      v331 = v343;
      v332 = v344;
      v333[0] = v345[0];
      *(_OWORD *)&v333[8] = *(_OWORD *)&v345[8];
      v333[24] = v345[24];
      v334 = v346;
      LOWORD(v335) = v347;
      *((_QWORD *)&v335 + 1) = *((_QWORD *)&v347 + 1);
      sub_1BAC6890C((uint64_t)&v324);
      if (!v82)
        break;
      goto LABEL_50;
    }
    v98 = v80;
    v99 = (__int128 *)(v94[7] + 208 * v96);
    v298 = *v99;
    v100 = v99[3];
    v101 = v99[4];
    v102 = v99[2];
    v299 = v99[1];
    v300 = v102;
    v301 = v100;
    v302 = v101;
    v103 = v99[5];
    v104 = v99[6];
    v105 = v99[8];
    v305 = v99[7];
    v306 = v105;
    v303 = v103;
    v304 = v104;
    v106 = v99[9];
    v107 = v99[10];
    v108 = v99[12];
    v309 = v99[11];
    v310 = v108;
    v307 = v106;
    v308 = v107;
    sub_1BAC687E4((uint64_t)&v298);
    swift_bridgeObjectRelease();
    *(_OWORD *)&v333[16] = v308;
    v334 = v309;
    v335 = v310;
    v330 = v304;
    v331 = v305;
    *(_OWORD *)v333 = v307;
    v332 = v306;
    v326 = v300;
    v327 = v301;
    v109 = v298;
    v329 = v303;
    v328 = v302;
    v325 = v299;
    v324 = v298;
    sub_1BAF9F620((uint64_t)&v336, (uint64_t)&v311);
    swift_bridgeObjectRetain();
    v110 = swift_isUniquelyReferenced_nonNull_native();
    v297 = v94;
    v112 = sub_1BA6E35A8(v109, *((uint64_t *)&v109 + 1));
    v113 = v94[2];
    v114 = (v111 & 1) == 0;
    v115 = v113 + v114;
    if (__OFADD__(v113, v114))
      goto LABEL_88;
    v116 = v111;
    if (v94[3] >= v115)
    {
      if ((v110 & 1) == 0)
        sub_1BB4C79A4();
    }
    else
    {
      sub_1BB4B70A4(v115, v110);
      v117 = sub_1BA6E35A8(v109, *((uint64_t *)&v109 + 1));
      if ((v116 & 1) != (v118 & 1))
        goto LABEL_91;
      v112 = v117;
    }
    v80 = v98;
    if ((v116 & 1) != 0)
    {
      v164 = v297;
      v165 = (__int128 *)(v297[7] + 208 * v112);
      v284 = *v165;
      v166 = v165[4];
      v168 = v165[1];
      v167 = v165[2];
      v287 = v165[3];
      v288 = v166;
      v285 = v168;
      v286 = v167;
      v169 = v165[8];
      v171 = v165[5];
      v170 = v165[6];
      v291 = v165[7];
      v292 = v169;
      v289 = v171;
      v290 = v170;
      v172 = v165[12];
      v174 = v165[9];
      v173 = v165[10];
      v295 = v165[11];
      v296 = v172;
      v293 = v174;
      v294 = v173;
      sub_1BAC6890C((uint64_t)&v284);
      v175 = v322;
      v165[10] = v321;
      v165[11] = v175;
      v165[12] = v323;
      v176 = v318;
      v165[6] = v317;
      v165[7] = v176;
      v177 = v320;
      v165[8] = v319;
      v165[9] = v177;
      v178 = v314;
      v165[2] = v313;
      v165[3] = v178;
      v179 = v316;
      v165[4] = v315;
      v165[5] = v179;
      v180 = v312;
      *v165 = v311;
      v165[1] = v180;
    }
    else
    {
      v164 = v297;
      v297[(v112 >> 6) + 8] |= 1 << v112;
      *(_OWORD *)(v164[6] + 16 * v112) = v109;
      v181 = (_OWORD *)(v164[7] + 208 * v112);
      v182 = v314;
      v181[2] = v313;
      v181[3] = v182;
      v183 = v312;
      *v181 = v311;
      v181[1] = v183;
      v184 = v318;
      v181[6] = v317;
      v181[7] = v184;
      v185 = v316;
      v181[4] = v315;
      v181[5] = v185;
      v186 = v323;
      v187 = v321;
      v181[11] = v322;
      v181[12] = v186;
      v188 = v320;
      v181[8] = v319;
      v181[9] = v188;
      v181[10] = v187;
      v189 = v164[2];
      v66 = __OFADD__(v189, 1);
      v190 = v189 + 1;
      if (v66)
        goto LABEL_89;
      v164[2] = v190;
      swift_bridgeObjectRetain();
    }
    v361 = v164;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v283[10] = *(_OWORD *)&v333[16];
    v283[11] = v334;
    v283[12] = v335;
    v283[6] = v330;
    v283[7] = v331;
    v283[8] = v332;
    v283[9] = *(_OWORD *)v333;
    v283[2] = v326;
    v283[3] = v327;
    v283[4] = v328;
    v283[5] = v329;
    v283[0] = v324;
    v283[1] = v325;
    sub_1BAC6890C((uint64_t)v283);
    v294 = *(_OWORD *)&v345[16];
    v295 = v346;
    v296 = v347;
    v290 = v342;
    v291 = v343;
    v292 = v344;
    v293 = *(_OWORD *)v345;
    v286 = v338;
    v287 = v339;
    v288 = v340;
    v289 = v341;
    v284 = v336;
    v285 = v337;
    sub_1BAC6890C((uint64_t)&v284);
    v7 = v280;
    if (v82)
    {
LABEL_50:
      --v82;
      v83 += 208;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_52:
  *(_QWORD *)&v348 = v80;
  swift_bridgeObjectRetain();
  v191 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v191);
  v192 = v348;
  v193 = *(_QWORD *)(v348 + 16);
  if (v193)
  {
    swift_bridgeObjectRetain();
    v194 = (uint64_t *)(v192 + 40);
    v195 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v196 = v361;
      if (v361[2])
      {
        v198 = *(v194 - 1);
        v197 = *v194;
        swift_bridgeObjectRetain_n();
        v199 = sub_1BA6E35A8(v198, v197);
        if ((v200 & 1) != 0)
        {
          v201 = (__int128 *)(v196[7] + 208 * v199);
          v348 = *v201;
          v202 = v201[3];
          v203 = v201[4];
          v204 = v201[2];
          v349 = v201[1];
          v350 = v204;
          v352 = v203;
          v351 = v202;
          v205 = v201[5];
          v206 = v201[6];
          v207 = v201[7];
          v356 = v201[8];
          v355 = v207;
          v354 = v206;
          v353 = v205;
          v208 = v201[9];
          v209 = v201[10];
          v210 = v201[11];
          v360 = v201[12];
          v359 = v210;
          v358 = v209;
          v357 = v208;
          sub_1BAC687E4((uint64_t)&v348);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v195 = sub_1BB38DA50(0, v195[2] + 1, 1, v195);
          v212 = v195[2];
          v211 = v195[3];
          if (v212 >= v211 >> 1)
            v195 = sub_1BB38DA50((_QWORD *)(v211 > 1), v212 + 1, 1, v195);
          v195[2] = v212 + 1;
          v213 = &v195[26 * v212];
          v213[2] = v348;
          v214 = v349;
          v215 = v350;
          v216 = v352;
          v213[5] = v351;
          v213[6] = v216;
          v213[3] = v214;
          v213[4] = v215;
          v217 = v353;
          v218 = v354;
          v219 = v356;
          v213[9] = v355;
          v213[10] = v219;
          v213[7] = v217;
          v213[8] = v218;
          v220 = v357;
          v221 = v358;
          v222 = v360;
          v213[13] = v359;
          v213[14] = v222;
          v213[11] = v220;
          v213[12] = v221;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v194 += 2;
      --v193;
    }
    while (v193);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v195 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v223 = v277[7];
  if (!v223)
    v223 = swift_bridgeObjectRetain();
  *(_QWORD *)&v298 = v223;
  v281 = v277[8];
  v224 = v281;
  if ((~v281 & 0xF000000000000007) == 0)
  {
    v224 = *(_QWORD *)(v278 + 64);
    sub_1BA6E6C68(v224);
  }
  *(_QWORD *)&v284 = v224;
  v225 = v277[9];
  if (!v225)
    v225 = swift_bridgeObjectRetain();
  v269 = v225;
  v226 = v277[10];
  v227 = v277[11];
  v271 = v227;
  v272 = v226;
  v228 = *((unsigned __int8 *)v277 + 96);
  v270 = *((_BYTE *)v277 + 96);
  if (v228 >= 0xFE)
  {
    v226 = *(_QWORD *)(v278 + 80);
    v227 = *(_QWORD *)(v278 + 88);
    LOBYTE(v228) = *(_BYTE *)(v278 + 96);
    sub_1BA6E6C54(v226, v227, v228);
  }
  *(_QWORD *)&v336 = v226;
  *((_QWORD *)&v336 + 1) = v227;
  v229 = v277[14];
  v230 = v277[16];
  v231 = v277[17];
  v232 = v277[18];
  v234 = v277[19];
  v233 = v277[20];
  v267 = v229;
  v268 = v277[13];
  v235 = v268;
  v265 = v230;
  v266 = v277[15];
  v236 = v266;
  v263 = v232;
  v264 = v231;
  v261 = v233;
  v262 = v234;
  v237 = v277[21];
  v238 = v277[22];
  v259 = v238;
  v260 = v237;
  LOBYTE(v337) = v228;
  v239 = *((unsigned __int8 *)v277 + 184);
  v258 = *((_BYTE *)v277 + 184);
  if (v239 == 254)
  {
    v255 = *(_QWORD *)(v278 + 112);
    v256 = *(_QWORD *)(v278 + 104);
    v236 = *(_QWORD *)(v278 + 120);
    v230 = *(_QWORD *)(v278 + 128);
    v231 = *(_QWORD *)(v278 + 136);
    v232 = *(_QWORD *)(v278 + 144);
    v234 = *(_QWORD *)(v278 + 152);
    v233 = *(_QWORD *)(v278 + 160);
    v237 = *(_QWORD *)(v278 + 168);
    v238 = *(_QWORD *)(v278 + 176);
    LOBYTE(v239) = *(_BYTE *)(v278 + 184);
    sub_1BA6E8A48(v256, v255, v236, v230, v231, v232, v234, v233, v237, v238, v239);
    v229 = v255;
    v235 = v256;
  }
  *(_QWORD *)&v348 = v235;
  *((_QWORD *)&v348 + 1) = v229;
  *(_QWORD *)&v349 = v236;
  *((_QWORD *)&v349 + 1) = v230;
  *(_QWORD *)&v350 = v231;
  *((_QWORD *)&v350 + 1) = v232;
  *(_QWORD *)&v351 = v234;
  *((_QWORD *)&v351 + 1) = v233;
  *(_QWORD *)&v352 = v237;
  *((_QWORD *)&v352 + 1) = v238;
  v240 = v277[24];
  v241 = v277[25];
  v257 = v240;
  v242 = *((unsigned __int8 *)v277 + 208);
  v243 = v241;
  v244 = *((_BYTE *)v277 + 208);
  LOBYTE(v353) = v239;
  if (v242 == 255)
  {
    v240 = *(_QWORD *)(v278 + 192);
    v243 = *(_QWORD *)(v278 + 200);
    v244 = *(_BYTE *)(v278 + 208);
    sub_1BA796C58(v240, v243, v244);
  }
  *(_QWORD *)&v324 = v240;
  *((_QWORD *)&v324 + 1) = v243;
  LOBYTE(v325) = v244;
  v245 = v277[27];
  v246 = v277[28];
  v247 = *((unsigned __int8 *)v277 + 232);
  v248 = v245;
  v249 = v246;
  v250 = *((_BYTE *)v277 + 232);
  if (v247 == 255)
  {
    v248 = *(_QWORD *)(v278 + 216);
    v249 = *(_QWORD *)(v278 + 224);
    v250 = *(_BYTE *)(v278 + 232);
    sub_1BA796C58(v248, v249, v250);
  }
  *(_QWORD *)&v311 = v248;
  *((_QWORD *)&v311 + 1) = v249;
  LOBYTE(v312) = v250;
  v251 = *((unsigned __int8 *)v277 + 233);
  if (v251 == 2)
    LOBYTE(v251) = *(_BYTE *)(v278 + 233);
  v252 = v277[30];
  if (!v252)
  {
    v252 = *(_QWORD *)(v278 + 240);
    swift_bridgeObjectRetain();
  }
  v253 = swift_allocObject();
  sub_1BA5972BC(v275, v274, v276, v273, (uint64_t)v195, (uint64_t *)&v298, (uint64_t *)&v284, v269, (uint64_t *)&v336, &v348, (uint64_t *)&v324, (uint64_t *)&v311, v251, v252);
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v281);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v272, v271, v270);
  sub_1BA6E8A48(v268, v267, v266, v265, v264, v263, v262, v261, v260, v259, v258);
  sub_1BA796C58(v257, v241, v242);
  sub_1BA796C58(v245, v246, v247);
  swift_bridgeObjectRetain();
  return v253;
}

uint64_t sub_1BAF9EA88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  size_t v26;
  uint64_t isStackAllocationSafe;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t i;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  unint64_t v76;
  unint64_t v77;
  _OWORD *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t j;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t result;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  void *v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;

  v114 = a1;
  v115 = 0;
  v143 = *MEMORY[0x1E0C80C00];
  v108 = *v1;
  swift_beginAccess();
  v103 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = sub_1BB38DA50(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v104 = sub_1BB38D92C(0, v3, 0, v4);
  v107 = *(_QWORD *)(v2 + 16);
  if (!v107)
  {
LABEL_32:
    sub_1BAFA13B8(0);
    v62 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v62 + 16);
    if (v63)
    {
      v64 = v63 - 1;
      for (i = 32; ; i += 216)
      {
        v66 = *(_OWORD *)(v62 + i + 16);
        v129 = *(_OWORD *)(v62 + i);
        v130 = v66;
        v67 = *(_OWORD *)(v62 + i + 32);
        v68 = *(_OWORD *)(v62 + i + 48);
        v69 = *(_OWORD *)(v62 + i + 80);
        v133 = *(_OWORD *)(v62 + i + 64);
        v134 = v69;
        v131 = v67;
        v132 = v68;
        v70 = *(_OWORD *)(v62 + i + 96);
        v71 = *(_OWORD *)(v62 + i + 112);
        v72 = *(_OWORD *)(v62 + i + 144);
        v137 = *(_OWORD *)(v62 + i + 128);
        v138 = v72;
        v135 = v70;
        v136 = v71;
        v73 = *(_OWORD *)(v62 + i + 160);
        v74 = *(_OWORD *)(v62 + i + 176);
        v75 = *(_OWORD *)(v62 + i + 192);
        v142 = *(_QWORD *)(v62 + i + 208);
        v140 = v74;
        v141 = v75;
        v139 = v73;
        sub_1BAC687E4((uint64_t)&v129);
        v77 = v5[2];
        v76 = v5[3];
        if (v77 >= v76 >> 1)
          v5 = sub_1BB38DA50((_QWORD *)(v76 > 1), v77 + 1, 1, v5);
        v5[2] = v77 + 1;
        v78 = &v5[26 * v77];
        v78[2] = v129;
        v79 = v130;
        v80 = v131;
        v81 = v133;
        v78[5] = v132;
        v78[6] = v81;
        v78[3] = v79;
        v78[4] = v80;
        v82 = v134;
        v83 = v135;
        v84 = v137;
        v78[9] = v136;
        v78[10] = v84;
        v78[7] = v82;
        v78[8] = v83;
        v85 = v138;
        v86 = v139;
        v87 = v141;
        v78[13] = v140;
        v78[14] = v87;
        v78[11] = v85;
        v78[12] = v86;
        if (!v64)
          break;
        --v64;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = v5[2];
    if (v88)
    {
      v89 = (uint64_t)v103;
      swift_retain();
      swift_bridgeObjectRetain();
      v90 = v88 - 1;
      v91 = v89;
      for (j = 4; ; j += 26)
      {
        v129 = *(_OWORD *)&v5[j];
        v93 = *(_OWORD *)&v5[j + 2];
        v94 = *(_OWORD *)&v5[j + 4];
        v95 = *(_OWORD *)&v5[j + 8];
        v132 = *(_OWORD *)&v5[j + 6];
        v133 = v95;
        v130 = v93;
        v131 = v94;
        v96 = *(_OWORD *)&v5[j + 10];
        v97 = *(_OWORD *)&v5[j + 12];
        v98 = *(_OWORD *)&v5[j + 16];
        v136 = *(_OWORD *)&v5[j + 14];
        v137 = v98;
        v134 = v96;
        v135 = v97;
        v99 = *(_OWORD *)&v5[j + 18];
        v100 = *(_OWORD *)&v5[j + 20];
        v101 = *(_OWORD *)&v5[j + 24];
        v140 = *(_OWORD *)&v5[j + 22];
        v141 = v101;
        v138 = v99;
        v139 = v100;
        v126 = v100;
        v127 = v140;
        v128 = v101;
        v122 = v135;
        v123 = v136;
        v124 = v137;
        v125 = v99;
        v118 = v131;
        v119 = v132;
        v120 = v133;
        v121 = v134;
        v116 = v129;
        v117 = v130;
        swift_allocObject();
        sub_1BAC687E4((uint64_t)&v129);
        v91 = sub_1BAFA06D0(v91, &v116);
        swift_release();
        if (!v90)
          break;
        --v90;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v91 = (uint64_t)v103;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v91;
  }
  v106 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v105 = v2;
LABEL_3:
  v110 = v6;
  v7 = (__int128 *)(v106 + 208 * v6);
  v129 = *v7;
  v8 = v7[1];
  v9 = v7[2];
  v10 = v7[4];
  v132 = v7[3];
  v133 = v10;
  v130 = v8;
  v131 = v9;
  v11 = v7[5];
  v12 = v7[6];
  v13 = v7[8];
  v136 = v7[7];
  v137 = v13;
  v134 = v11;
  v135 = v12;
  v14 = v7[9];
  v15 = v7[10];
  v16 = v7[12];
  v140 = v7[11];
  v141 = v16;
  v138 = v14;
  v139 = v15;
  v17 = v129;
  sub_1BAC687E4((uint64_t)&v129);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v116 = v17;
  swift_bridgeObjectRetain();
  v18 = sub_1BA6E583C((uint64_t *)&v116);
  swift_bridgeObjectRelease();
  v112 = *(_QWORD *)(v18 + 16);
  if (!v112)
  {
    swift_bridgeObjectRelease();
    sub_1BAC6890C((uint64_t)&v129);
    goto LABEL_23;
  }
  v109 = v5;
  v19 = 0;
  v20 = (uint64_t *)(v18 + 64);
  while (1)
  {
    if (v19 >= *(_QWORD *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_46;
    }
    v111 = *(v20 - 2);
    v21 = *(v20 - 1);
    v22 = *v20;
    v23 = *(_BYTE *)(v21 + 32);
    v24 = v23 & 0x3F;
    v25 = (unint64_t)((1 << v23) + 63) >> 6;
    v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 > 0xD)
    {
      isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        v28 = (char *)swift_slowAlloc();
        bzero(v28, v26);
        v32 = v25;
        v30 = v115;
        v31 = sub_1BA6EB5B4((uint64_t)v28, v32, v21, v114);
        swift_bridgeObjectRelease();
        if (v30)
          goto LABEL_48;
        v115 = 0;
        MEMORY[0x1BCCE5C38](v28, -1, -1);
        goto LABEL_15;
      }
    }
    v113 = &v103;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v28 = (char *)&v103 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v28, v26);
    v29 = v25;
    v30 = v115;
    v31 = sub_1BA6EB5B4((uint64_t)v28, v29, v21, v114);
    swift_bridgeObjectRelease();
    if (v30)
      break;
    v115 = 0;
LABEL_15:
    v33 = sub_1BA6EB330(v31, v21);
    swift_release();
    if ((v33 & 1) != 0 && (sub_1BA6EBD20(v114, v22) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v34 = v111;
      if (v111 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC687E4((uint64_t)&v129);
        v5 = v109;
        v39 = v110;
        v51 = v109[2];
        v50 = v109[3];
        v36 = v105;
        if (v51 >= v50 >> 1)
          v5 = sub_1BB38DA50((_QWORD *)(v50 > 1), v51 + 1, 1, v109);
        v5[2] = v51 + 1;
        v52 = &v5[26 * v51];
        v52[2] = v129;
        v53 = v130;
        v54 = v131;
        v55 = v133;
        v52[5] = v132;
        v52[6] = v55;
        v52[3] = v53;
        v52[4] = v54;
        v56 = v134;
        v57 = v135;
        v58 = v137;
        v52[9] = v136;
        v52[10] = v58;
        v52[7] = v56;
        v52[8] = v57;
        v59 = v138;
        v60 = v139;
        v61 = v141;
        v52[13] = v140;
        v52[14] = v61;
        v52[11] = v59;
        v52[12] = v60;
      }
      else
      {
        sub_1BAC687E4((uint64_t)&v129);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = v104;
        v36 = v105;
        v38 = v104[2];
        v37 = v104[3];
        v5 = v109;
        v39 = v110;
        if (v38 >= v37 >> 1)
          v35 = sub_1BB38D92C((_QWORD *)(v37 > 1), v38 + 1, 1, v104);
        v118 = v131;
        v119 = v132;
        v122 = v135;
        v123 = v136;
        v120 = v133;
        v121 = v134;
        v127 = v140;
        v128 = v141;
        v124 = v137;
        v125 = v138;
        v126 = v139;
        v116 = v129;
        v117 = v130;
        v35[2] = v38 + 1;
        v104 = v35;
        v40 = &v35[27 * v38];
        *((_OWORD *)v40 + 2) = v116;
        v41 = v117;
        v42 = v118;
        v43 = v120;
        *((_OWORD *)v40 + 5) = v119;
        *((_OWORD *)v40 + 6) = v43;
        *((_OWORD *)v40 + 3) = v41;
        *((_OWORD *)v40 + 4) = v42;
        v44 = v121;
        v45 = v122;
        v46 = v124;
        *((_OWORD *)v40 + 9) = v123;
        *((_OWORD *)v40 + 10) = v46;
        *((_OWORD *)v40 + 7) = v44;
        *((_OWORD *)v40 + 8) = v45;
        v47 = v125;
        v48 = v126;
        v49 = v128;
        *((_OWORD *)v40 + 13) = v127;
        *((_OWORD *)v40 + 14) = v49;
        *((_OWORD *)v40 + 11) = v47;
        *((_OWORD *)v40 + 12) = v48;
        v40[30] = v34;
      }
      sub_1BAC6890C((uint64_t)&v129);
LABEL_28:
      v6 = v39 + 1;
      if (v6 == v107)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v6 >= *(_QWORD *)(v36 + 16))
LABEL_46:
        __break(1u);
      goto LABEL_3;
    }
    ++v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 5;
    if (v112 == v19)
    {
      swift_bridgeObjectRelease();
      sub_1BAC6890C((uint64_t)&v129);
      v5 = v109;
LABEL_23:
      v36 = v105;
      v39 = v110;
      goto LABEL_28;
    }
  }
  swift_willThrow();

  __break(1u);
LABEL_48:

  result = MEMORY[0x1BCCE5C38](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAF9F23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  unsigned __int8 v37;
  uint64_t v38[2];
  unsigned __int8 v39;
  __int128 v40[2];
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46[2];
  char v47;
  uint64_t v48;
  uint64_t v49;

  v1 = v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v34 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  v49 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v35 = v2;
  if ((~v6 & 0xF000000000000007) != 0)
  {
    v46[0] = *(_QWORD *)(v1 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB39D8E4();
    v6 = *(_QWORD *)&v40[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v48 = v6;
  v7 = *(_QWORD *)(v1 + 72);
  if (v7)
    v8 = sub_1BAF49D98(v7);
  else
    v8 = 0;
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v11 = *(_BYTE *)(v1 + 96);
  v46[0] = v9;
  v46[1] = v10;
  v47 = v11;
  v12 = *(_QWORD *)(v1 + 104);
  v13 = *(_QWORD *)(v1 + 112);
  v14 = *(_QWORD *)(v1 + 136);
  v15 = *(_QWORD *)(v1 + 176);
  v16 = *(unsigned __int8 *)(v1 + 184);
  v32 = *(_OWORD *)(v1 + 144);
  v33 = *(_OWORD *)(v1 + 120);
  v31 = *(_OWORD *)(v1 + 160);
  if (v16 == 254)
  {
    sub_1BA6E6C54(v9, v10, v11);
    v18 = v31;
    v17 = v32;
    v19 = v33;
  }
  else
  {
    v38[0] = *(_QWORD *)(v1 + 136);
    sub_1BA6E6C54(v9, v10, v11);
    sub_1BB525134();
    v18 = v31;
    v17 = v32;
    v19 = v33;
    v14 = *(_QWORD *)&v40[0];
    v13 = v13;
  }
  *(_QWORD *)&v40[0] = v12;
  *((_QWORD *)&v40[0] + 1) = v13;
  v40[1] = v19;
  v41 = v14;
  v42 = v17;
  v43 = v18;
  v44 = v15;
  v45 = v16;
  v20 = *(_QWORD *)(v1 + 192);
  v21 = *(_QWORD *)(v1 + 200);
  v22 = *(_BYTE *)(v1 + 208);
  v38[0] = v20;
  v38[1] = v21;
  v39 = v22;
  v23 = *(_QWORD *)(v1 + 216);
  v24 = *(_QWORD *)(v1 + 224);
  v25 = *(_BYTE *)(v1 + 232);
  v36[0] = v23;
  v36[1] = v24;
  v37 = v25;
  v26 = *(_BYTE *)(v1 + 233);
  v27 = *(_QWORD *)(v1 + 240);
  sub_1BA796C58(v20, v21, v22);
  sub_1BA796C58(v23, v24, v25);
  if (v27)
    v28 = sub_1BAF49EF0(v27);
  else
    v28 = 0;
  v29 = swift_allocObject();
  sub_1BA5972BC(v35, v3, v34, v4, v5, &v49, &v48, v8, v46, v40, v38, v36, v26, v28);
  return v29;
}

uint64_t FormatLayeredMediaNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CD8(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  sub_1BA6E8A78(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  sub_1BA796C70(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_BYTE *)(v0 + 208));
  sub_1BA796C70(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_BYTE *)(v0 + 232));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayeredMediaNodeStyle.__deallocating_deinit()
{
  FormatLayeredMediaNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF9F548(_QWORD *a1, _QWORD *a2)
{
  return static FormatLayeredMediaNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  return sub_1BA6E6C68(v2);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 120);
  v10 = *(_QWORD *)(v1 + 128);
  v11 = *(_QWORD *)(v1 + 136);
  v12 = *(_BYTE *)(v1 + 144);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.video.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 152);
  v3 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 168);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.motion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 192);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 193);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF9F620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  unsigned __int8 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v88 = *v2;
  v6 = v2[2];
  v89 = v2[1];
  v7 = v2[3];
  v100 = v2[4];
  v103 = v2[6];
  v104 = v2[5];
  v102 = *((unsigned __int8 *)v2 + 56);
  v8 = v2[8];
  v113 = v2[10];
  v114 = v2[9];
  v111 = v2[12];
  v112 = v2[11];
  v109 = v2[14];
  v110 = v2[13];
  v101 = v2[16];
  v99 = v2[17];
  v98 = *((unsigned __int8 *)v2 + 144);
  v107 = v2[19];
  v108 = v2[15];
  v106 = v2[20];
  v105 = *((unsigned __int8 *)v2 + 168);
  v116 = v2[23];
  v117 = v2[22];
  v115 = *((unsigned __int8 *)v2 + 192);
  v87 = *((unsigned __int8 *)v2 + 193);
  v9 = v2[25];
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v63 = *(_QWORD *)(a1 + 88);
  v66 = *(_QWORD *)(a1 + 96);
  v69 = *(_QWORD *)(a1 + 104);
  v73 = *(_QWORD *)(a1 + 112);
  v76 = *(_QWORD *)(a1 + 120);
  v79 = *(_QWORD *)(a1 + 128);
  v81 = v9;
  v91 = *(_QWORD *)(a1 + 136);
  v93 = *(_BYTE *)(a1 + 144);
  v56 = *(_QWORD *)(a1 + 152);
  v57 = *(_QWORD *)(a1 + 160);
  v58 = *(_BYTE *)(a1 + 168);
  v59 = *(_QWORD *)(a1 + 176);
  v60 = *(_QWORD *)(a1 + 184);
  v61 = *(_BYTE *)(a1 + 192);
  v86 = *(_BYTE *)(a1 + 193);
  v95 = v6;
  v96 = v7;
  if (!v6)
  {
    v95 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    v7 = v96;
  }
  v97 = v7;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    sub_1BA6E6C68(v4);
    v97 = v4;
  }
  v16 = v100;
  if (!v100)
  {
    swift_bridgeObjectRetain();
    v16 = v5;
  }
  v18 = v103;
  v17 = v104;
  v19 = v102;
  if (v102 >= 0xFE)
  {
    sub_1BA6E6C54(v10, v11, v12);
    v17 = v10;
    v18 = v11;
    v19 = v12;
  }
  v82 = v19;
  v83 = v18;
  v84 = v17;
  v85 = v16;
  v90 = v8;
  v20 = v8;
  v22 = v113;
  v21 = v114;
  v24 = v111;
  v23 = v112;
  v25 = v109;
  v26 = v110;
  v27 = v108;
  v28 = v101;
  v29 = v99;
  v30 = v98;
  if (v98 == 254)
  {
    v26 = v69;
    v25 = v73;
    sub_1BA6E8A48(v13, v14, v15, v63, v66, v69, v73, v76, v79, v91, v93);
    v20 = v13;
    v21 = v14;
    v22 = v15;
    v23 = v63;
    v24 = v66;
    v27 = v76;
    v28 = v79;
    v29 = v91;
    v30 = v93;
  }
  v80 = v26;
  v32 = v106;
  v31 = v107;
  v33 = v105;
  v94 = v28;
  v92 = v30;
  if (v105 == 255)
  {
    v70 = v21;
    v34 = v20;
    v35 = v23;
    v36 = v24;
    v37 = v27;
    v38 = v29;
    sub_1BA796C58(v56, v57, v58);
    v30 = v92;
    v29 = v38;
    v28 = v94;
    v27 = v37;
    v24 = v36;
    v23 = v35;
    v20 = v34;
    v31 = v56;
    v32 = v57;
    v33 = v58;
    v21 = v70;
  }
  v40 = v116;
  v39 = v117;
  v41 = v115;
  if (v115 == 255)
  {
    v39 = v59;
    v40 = v60;
    v74 = v31;
    v77 = v22;
    v41 = v61;
    v64 = v32;
    v67 = v24;
    v42 = v20;
    v71 = v21;
    v43 = v23;
    v44 = v27;
    v45 = v29;
    v46 = v33;
    sub_1BA796C58(v59, v60, v61);
    v33 = v46;
    v32 = v64;
    v24 = v67;
    v21 = v71;
    v31 = v74;
    v30 = v92;
    v29 = v45;
    v28 = v94;
    v27 = v44;
    v23 = v43;
    v22 = v77;
    v20 = v42;
  }
  v47 = v81;
  if (!v81)
  {
    v72 = v20;
    v75 = v25;
    v78 = v22;
    v48 = v21;
    v49 = v23;
    v65 = v32;
    v68 = v24;
    v50 = v27;
    v51 = v29;
    v52 = v31;
    v62 = v33;
    v53 = swift_bridgeObjectRetain();
    v33 = v62;
    v32 = v65;
    v24 = v68;
    v31 = v52;
    v29 = v51;
    v28 = v94;
    v27 = v50;
    v23 = v49;
    v21 = v48;
    v25 = v75;
    v22 = v78;
    v20 = v72;
    v47 = v53;
    v30 = v92;
  }
  v54 = v87;
  if (v87 == 2)
    v54 = v86;
  *(_QWORD *)a2 = v88;
  *(_QWORD *)(a2 + 8) = v89;
  *(_QWORD *)(a2 + 16) = v95;
  *(_QWORD *)(a2 + 24) = v97;
  *(_QWORD *)(a2 + 32) = v85;
  *(_QWORD *)(a2 + 40) = v84;
  *(_QWORD *)(a2 + 48) = v83;
  *(_BYTE *)(a2 + 56) = v82;
  *(_QWORD *)(a2 + 64) = v20;
  *(_QWORD *)(a2 + 72) = v21;
  *(_QWORD *)(a2 + 80) = v22;
  *(_QWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v80;
  *(_QWORD *)(a2 + 112) = v25;
  *(_QWORD *)(a2 + 120) = v27;
  *(_QWORD *)(a2 + 128) = v28;
  *(_QWORD *)(a2 + 136) = v29;
  *(_BYTE *)(a2 + 144) = v30;
  *(_QWORD *)(a2 + 152) = v31;
  *(_QWORD *)(a2 + 160) = v32;
  *(_BYTE *)(a2 + 168) = v33;
  *(_QWORD *)(a2 + 176) = v39;
  *(_QWORD *)(a2 + 184) = v40;
  *(_BYTE *)(a2 + 192) = v41;
  *(_BYTE *)(a2 + 193) = v54;
  *(_QWORD *)(a2 + 200) = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v96);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v104, v103, v102);
  sub_1BA6E8A48(v90, v114, v113, v112, v111, v110, v109, v108, v101, v99, v98);
  sub_1BA796C58(v107, v106, v105);
  sub_1BA796C58(v117, v116, v115);
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNodeStyle.auxViewRequirements.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  ValueMetadata *v4;
  _UNKNOWN **v5;
  uint64_t v6;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1ED3B9F90, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v2 = *(_QWORD *)(v0 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    v5 = &protocol witness table for FormatBackground;
    v4 = &type metadata for FormatBackground;
    v3 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = v5;
  sub_1BA6E6C68(v2);
  v6 = sub_1BA67DB8C(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1ED3B8C88, (unint64_t *)&qword_1ED3B8C80);
  swift_arrayDestroy();
  return v6;
}

uint64_t sub_1BAF9FC08@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 208);
  return result;
}

uint64_t _s8NewsFeed27FormatLayeredMediaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned __int8 v127;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v94 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 56);
  v90 = *(_QWORD *)(a1 + 64);
  v91 = *(_QWORD *)(a1 + 72);
  v82 = *(_QWORD *)(a1 + 80);
  v83 = *(_QWORD *)(a1 + 88);
  v84 = *(_QWORD *)(a1 + 96);
  v85 = *(_QWORD *)(a1 + 104);
  v86 = *(_QWORD *)(a1 + 112);
  v87 = *(_QWORD *)(a1 + 120);
  v89 = *(_QWORD *)(a1 + 128);
  v81 = *(_QWORD *)(a1 + 136);
  v88 = *(unsigned __int8 *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 160);
  v67 = *(_QWORD *)(a1 + 152);
  v79 = *(unsigned __int8 *)(a1 + 168);
  v61 = *(_QWORD *)(a1 + 176);
  v62 = *(_QWORD *)(a1 + 184);
  v64 = *(unsigned __int8 *)(a1 + 192);
  v58 = *(unsigned __int8 *)(a1 + 193);
  v56 = *(_QWORD *)(a1 + 200);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v92 = *(_QWORD *)(a2 + 40);
  v93 = *(_QWORD *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 56);
  v70 = *(_QWORD *)(a2 + 64);
  v71 = *(_QWORD *)(a2 + 72);
  v72 = *(_QWORD *)(a2 + 80);
  v73 = *(_QWORD *)(a2 + 88);
  v74 = *(_QWORD *)(a2 + 96);
  v75 = *(_QWORD *)(a2 + 104);
  v76 = *(_QWORD *)(a2 + 112);
  v77 = *(_QWORD *)(a2 + 120);
  v68 = *(_QWORD *)(a2 + 136);
  v69 = *(_QWORD *)(a2 + 128);
  v80 = *(unsigned __int8 *)(a2 + 144);
  v65 = *(_QWORD *)(a2 + 160);
  v66 = *(_QWORD *)(a2 + 152);
  v78 = *(unsigned __int8 *)(a2 + 168);
  v59 = *(_QWORD *)(a2 + 184);
  v60 = *(_QWORD *)(a2 + 176);
  v63 = *(unsigned __int8 *)(a2 + 192);
  v57 = *(unsigned __int8 *)(a2 + 193);
  v55 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = sub_1BB874398();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  if (v2)
  {
    if (!v8)
      return 0;
    v54 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA881EAC(v2, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else
  {
    v54 = v7;
    if (v8)
      return 0;
  }
  if ((~v4 & 0xF000000000000007) == 0)
  {
    if ((~v9 & 0xF000000000000007) == 0)
      goto LABEL_16;
LABEL_14:
    sub_1BA6E6C68(v9);
    sub_1BA6E6CD8(v4);
    sub_1BA6E6CD8(v9);
    return 0;
  }
  v106 = v4;
  if ((~v9 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_14;
  }
  v95 = v9;
  swift_retain_n();
  static FormatBackground.== infix(_:_:)((uint64_t)&v106);
  v16 = v15;
  swift_release();
  sub_1BA6E6CD8(v4);
  if ((v16 & 1) == 0)
    return 0;
LABEL_16:
  if (v3)
  {
    if (!v10)
      return 0;
    swift_bridgeObjectRetain();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1BA882894(v17, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v18)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  v19 = v6;
  if (v6 > 0xFD)
  {
    v20 = v11;
    v21 = v5;
    v22 = v94;
    if (v11 > 0xFD)
      goto LABEL_28;
LABEL_26:
    sub_1BA6E6C54(v92, v93, v20);
    sub_1BA6E6CC4(v22, v21, v19);
    sub_1BA6E6CC4(v92, v93, v20);
    return 0;
  }
  v22 = v94;
  v106 = v94;
  v107 = v5;
  v21 = v5;
  LOBYTE(v108) = v19;
  v20 = v11;
  if (v11 > 0xFD)
  {
    sub_1BA6F2B04(v94, v5, v19);
    sub_1BA6F2B04(v94, v5, v19);
    sub_1BA6F2B88(v94, v5, v19);
    goto LABEL_26;
  }
  v95 = v92;
  v96 = v93;
  LOBYTE(v97) = v11;
  sub_1BA6E6C54(v94, v5, v19);
  sub_1BA6F2B04(v94, v5, v19);
  v23 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v106, (uint64_t)&v95);
  sub_1BA6F2B88(v106, v107, v108);
  sub_1BA6E6CC4(v94, v5, v19);
  if ((v23 & 1) == 0)
    return 0;
LABEL_28:
  v24 = v88;
  if (v88 == 254)
  {
    v25 = v80;
    v27 = v86;
    v26 = v87;
    v29 = v84;
    v28 = v85;
    v30 = v82;
    v31 = v83;
    v32 = v91;
    if (v80 == 254)
      goto LABEL_35;
LABEL_33:
    v106 = v90;
    v107 = v32;
    v108 = v30;
    v109 = v31;
    v110 = v29;
    v111 = v28;
    v112 = v27;
    v113 = v26;
    v114 = v89;
    v115 = v81;
    v116 = v24;
    v117 = v70;
    v118 = v71;
    v119 = v72;
    v120 = v73;
    v121 = v74;
    v122 = v75;
    v123 = v76;
    v124 = v77;
    v125 = v69;
    v126 = v68;
    v127 = v25;
    sub_1BA6E8A48(v70, v71, v72, v73, v74, v75, v76, v77, v69, v68, v25);
    sub_1BA9F10E8((uint64_t)&v106);
    return 0;
  }
  v106 = v90;
  v107 = v91;
  v30 = v82;
  v31 = v83;
  v108 = v82;
  v109 = v83;
  v29 = v84;
  v28 = v85;
  v110 = v84;
  v111 = v85;
  v27 = v86;
  v26 = v87;
  v112 = v86;
  v113 = v87;
  v114 = v89;
  v115 = v81;
  v116 = v88;
  if (v80 == 254)
  {
    swift_retain();
    v24 = v88;
    v32 = v91;
    v25 = -2;
    goto LABEL_33;
  }
  v95 = v70;
  LODWORD(v96) = v71;
  v97 = v72;
  v98 = v73;
  v99 = v74;
  v100 = v75;
  v101 = v76;
  v102 = v77;
  v103 = v69;
  v104 = v68;
  v105 = v80;
  sub_1BA6E8A48(v90, v91, v82, v83, v84, v85, v86, v87, v89, v81, v88);
  swift_retain();
  v33 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v106, (uint64_t)&v95);
  swift_release();
  sub_1BA6E8A78(v90, v91, v82, v83, v84, v85, v86, v87, v89, v81, v88);
  if ((v33 & 1) == 0)
    return 0;
LABEL_35:
  if (v79 == 255)
  {
    v34 = v54;
    if (v78 == 255)
      goto LABEL_50;
LABEL_43:
    v39 = v65;
    v38 = v66;
    v40 = v78;
    sub_1BA796C58(v66, v65, v78);
    v41 = v67;
    v42 = v67;
    v43 = v34;
    v44 = v79;
LABEL_59:
    sub_1BA796C58(v42, v43, v44);
    sub_1BA796C70(v41, v34, v44);
    sub_1BA796C70(v38, v39, v40);
    return 0;
  }
  v34 = v54;
  if (v78 == 255)
    goto LABEL_43;
  if ((v79 & 1) == 0)
  {
    v45 = v54;
    v36 = v66;
    v35 = v67;
    v37 = v65;
    v46 = v78;
    if ((v78 & 1) == 0)
    {
      sub_1BA69C828(v67, v54, 0);
      sub_1BA69C828(v66, v65, 0);
      result = 0;
      if (((((v67 & 1) == 0) ^ v66) & 1) == 0)
        return result;
      goto LABEL_50;
    }
LABEL_48:
    v47 = v46 & 1;
    sub_1BA69C808(v36, v37, v46 & 1);
    v48 = v79;
LABEL_65:
    sub_1BA69C828(v35, v45, v48 & 1);
    sub_1BA69C828(v36, v37, v47);
    return 0;
  }
  v36 = v66;
  v35 = v67;
  v37 = v65;
  if ((v78 & 1) == 0)
  {
    v45 = v54;
    swift_bridgeObjectRetain();
    v46 = v78;
    goto LABEL_48;
  }
  if (v67 == v66 && v54 == v65)
  {
    sub_1BA796C58(v67, v54, v78);
    sub_1BA796C58(v67, v54, v79);
    sub_1BA69C828(v67, v54, 1);
    sub_1BA69C828(v67, v54, 1);
  }
  else
  {
    v49 = sub_1BB874398();
    sub_1BA796C58(v66, v65, v78);
    sub_1BA796C58(v67, v54, v79);
    sub_1BA69C828(v67, v54, 1);
    sub_1BA69C828(v66, v65, 1);
    result = 0;
    if ((v49 & 1) == 0)
      return result;
  }
LABEL_50:
  if (v64 == 255)
  {
    if (v63 == 255)
      goto LABEL_69;
    goto LABEL_58;
  }
  if (v63 == 255)
  {
LABEL_58:
    v39 = v59;
    v38 = v60;
    v40 = v63;
    sub_1BA796C58(v60, v59, v63);
    v41 = v61;
    v34 = v62;
    v42 = v61;
    v43 = v62;
    v44 = v64;
    goto LABEL_59;
  }
  if ((v64 & 1) != 0)
  {
    v35 = v61;
    v45 = v62;
    v37 = v59;
    v36 = v60;
    v50 = v63;
    if ((v63 & 1) != 0)
    {
      if (v61 == v60 && v62 == v59)
      {
        sub_1BA796C58(v61, v62, v63);
        sub_1BA796C58(v61, v62, v64);
        sub_1BA69C828(v61, v62, 1);
        sub_1BA69C828(v61, v62, 1);
      }
      else
      {
        v51 = sub_1BB874398();
        sub_1BA796C58(v60, v59, v63);
        sub_1BA796C58(v61, v62, v64);
        sub_1BA69C828(v61, v62, 1);
        sub_1BA69C828(v60, v59, 1);
        result = 0;
        if ((v51 & 1) == 0)
          return result;
      }
      goto LABEL_69;
    }
    swift_bridgeObjectRetain();
    goto LABEL_64;
  }
  v35 = v61;
  v45 = v62;
  v37 = v59;
  v36 = v60;
  v50 = v63;
  if ((v63 & 1) != 0)
  {
LABEL_64:
    v47 = v50 & 1;
    sub_1BA69C808(v36, v37, v50 & 1);
    v48 = v64;
    goto LABEL_65;
  }
  sub_1BA69C828(v61, v62, 0);
  sub_1BA69C828(v60, v59, 0);
  result = 0;
  if (((((v61 & 1) == 0) ^ v60) & 1) == 0)
    return result;
LABEL_69:
  if (v58 == 2)
  {
    if (v57 == 2)
      goto LABEL_74;
    return 0;
  }
  result = 0;
  if (v57 != 2 && ((((v58 & 1) == 0) ^ v57) & 1) != 0)
  {
LABEL_74:
    if (v56)
    {
      if (v55)
      {
        swift_bridgeObjectRetain();
        v52 = swift_bridgeObjectRetain();
        v53 = sub_1BA882964(v52, v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53)
          return 1;
      }
    }
    else if (!v55)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BAFA0580(uint64_t a1, uint64_t (*a2)(__int128 *))
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;
  uint64_t v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A388(0, v2, 0);
    v3 = v18;
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v7 = *(v6 - 2);
      v8 = *(v6 - 1);
      v9 = *v6;
      *(_QWORD *)&v14 = v7;
      *((_QWORD *)&v14 + 1) = v8;
      v15 = v9;
      sub_1BA5E7FF4(v7);
      sub_1BA6E6C68(v8);
      sub_1BA6E6C68(v9);
      v10 = a2(&v14);
      sub_1BA5E800C(v7);
      sub_1BA6E6CD8(v8);
      sub_1BA6E6CD8(v9);
      v18 = v3;
      v12 = *(_QWORD *)(v3 + 16);
      v11 = *(_QWORD *)(v3 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BAC7A388(v11 > 1, v12 + 1, 1);
        v3 = v18;
      }
      v6 += 3;
      v17 = &off_1E7335C38;
      v16 = &type metadata for FormatInspection;
      *(_QWORD *)&v14 = v10;
      *(_QWORD *)(v3 + 16) = v12 + 1;
      sub_1BA4CECCC(&v14, v3 + 40 * v12 + 32);
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1BAFA06D0(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int128 v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  __int128 v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  char v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  unsigned __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v4 = a2[11];
  v74 = a2[10];
  v75 = v4;
  v76 = a2[12];
  v5 = a2[7];
  v70 = a2[6];
  v71 = v5;
  v6 = a2[9];
  v72 = a2[8];
  v73 = v6;
  v7 = a2[3];
  v66 = a2[2];
  v67 = v7;
  v8 = a2[5];
  v68 = a2[4];
  v69 = v8;
  v9 = a2[1];
  v64 = *a2;
  v65 = v9;
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v10;
  *(_QWORD *)(v2 + 24) = v11;
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 40) = v12;
  v13 = *((_QWORD *)&v65 + 1);
  v63 = *((_QWORD *)&v65 + 1);
  if ((~*((_QWORD *)&v65 + 1) & 0xF000000000000007) == 0)
  {
    v13 = *(_QWORD *)(a1 + 64);
    sub_1BA6E6C68(v13);
  }
  *(_QWORD *)(v2 + 64) = v13;
  v14 = v66;
  if (!(_QWORD)v66)
    v14 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 72) = v14;
  v15 = *((_QWORD *)&v66 + 1);
  v16 = v67;
  v61 = v67;
  v62 = *((_QWORD *)&v66 + 1);
  v17 = BYTE8(v67);
  v60 = BYTE8(v67);
  if (BYTE8(v67) >= 0xFEu)
  {
    v15 = *(_QWORD *)(a1 + 80);
    v16 = *(_QWORD *)(a1 + 88);
    v17 = *(_BYTE *)(a1 + 96);
    sub_1BA6E6C54(v15, v16, v17);
  }
  *(_QWORD *)(v2 + 80) = v15;
  *(_QWORD *)(v2 + 88) = v16;
  v18 = *((_QWORD *)&v68 + 1);
  v20 = *((_QWORD *)&v69 + 1);
  v19 = v69;
  v22 = *((_QWORD *)&v70 + 1);
  v21 = v70;
  v24 = *((_QWORD *)&v71 + 1);
  v23 = v71;
  v58 = *((_QWORD *)&v68 + 1);
  v59 = v68;
  v25 = v68;
  v56 = *((_QWORD *)&v69 + 1);
  v57 = v69;
  v54 = *((_QWORD *)&v70 + 1);
  v55 = v70;
  v52 = *((_QWORD *)&v71 + 1);
  v53 = v71;
  v26 = *((_QWORD *)&v72 + 1);
  v28 = v72;
  v50 = v28 >> 64;
  v27 = v28;
  v51 = v72;
  *(_BYTE *)(v2 + 96) = v17;
  v29 = v73;
  v49 = v73;
  if (v73 == 254)
  {
    v46 = *(_QWORD *)(a1 + 112);
    v48 = *(_QWORD *)(a1 + 104);
    v20 = *(_QWORD *)(a1 + 128);
    v44 = *(_QWORD *)(a1 + 120);
    v21 = *(_QWORD *)(a1 + 136);
    v22 = *(_QWORD *)(a1 + 144);
    v23 = *(_QWORD *)(a1 + 152);
    v24 = *(_QWORD *)(a1 + 160);
    v27 = *(_QWORD *)(a1 + 168);
    v26 = *(_QWORD *)(a1 + 176);
    v29 = *(_BYTE *)(a1 + 184);
    sub_1BA6E8A48(v48, v46, v44, v20, v21, v22, v23, v24, v27, v26, v29);
    v19 = v44;
    v18 = v46;
    v25 = v48;
  }
  *(_QWORD *)(v2 + 104) = v25;
  *(_QWORD *)(v2 + 112) = v18;
  *(_QWORD *)(v2 + 120) = v19;
  *(_QWORD *)(v2 + 128) = v20;
  *(_QWORD *)(v2 + 136) = v21;
  *(_QWORD *)(v2 + 144) = v22;
  *(_QWORD *)(v2 + 152) = v23;
  *(_QWORD *)(v2 + 160) = v24;
  *(_QWORD *)(v2 + 168) = v27;
  *(_QWORD *)(v2 + 176) = v26;
  v30 = v65;
  *(_BYTE *)(v2 + 184) = v29;
  if (!v30)
    v30 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 56) = v30;
  swift_beginAccess();
  v31 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v31;
  v32 = *((_QWORD *)&v73 + 1);
  v33 = v74;
  v34 = BYTE8(v74);
  v45 = v74;
  v47 = *((_QWORD *)&v73 + 1);
  v35 = BYTE8(v74);
  if (BYTE8(v74) == 255)
  {
    v32 = *(_QWORD *)(a1 + 192);
    v33 = *(_QWORD *)(a1 + 200);
    v35 = *(_BYTE *)(a1 + 208);
    sub_1BA796C58(v32, v33, v35);
  }
  *(_QWORD *)(v2 + 192) = v32;
  *(_QWORD *)(v2 + 200) = v33;
  *(_BYTE *)(v2 + 208) = v35;
  v36 = v75;
  v37 = v76;
  v38 = *((_QWORD *)&v75 + 1);
  v39 = v75;
  v40 = v76;
  if (v76 == 255)
  {
    v39 = *(_QWORD *)(a1 + 216);
    v38 = *(_QWORD *)(a1 + 224);
    v40 = *(_BYTE *)(a1 + 232);
    sub_1BA796C58(v39, v38, v40);
  }
  *(_QWORD *)(v2 + 216) = v39;
  *(_QWORD *)(v2 + 224) = v38;
  *(_BYTE *)(v2 + 232) = v40;
  v41 = BYTE1(v76);
  if (BYTE1(v76) == 2)
    v41 = *(_BYTE *)(a1 + 233);
  *(_BYTE *)(v2 + 233) = v41;
  v42 = *((_QWORD *)&v76 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v63);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v62, v61, v60);
  sub_1BA6E8A48(v59, v58, v57, v56, v55, v54, v53, v52, v51, v50, v49);
  swift_bridgeObjectRetain();
  sub_1BA796C58(v47, v45, v34);
  sub_1BA796C58(v36, *((uint64_t *)&v36 + 1), v37);
  swift_bridgeObjectRetain();
  sub_1BAC6890C((uint64_t)&v64);
  if (!v42)
  {
    v42 = *(_QWORD *)(a1 + 240);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v2 + 240) = v42;
  return v2;
}

uint64_t sub_1BAFA0A28(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAFA0B0C(&qword_1EF2B7C48, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFA0A5C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAFA0B0C(&qword_1ED3CC0D0, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  result = sub_1BAFA0B0C(&qword_1ED3A7FC0, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BAFA0AA8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAFA0B0C(&qword_1ED3CC0D0, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  a1[2] = sub_1BAFA0B0C(&qword_1ED3A7FC0, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  result = sub_1BAFA0B0C(&qword_1EF2B7C50, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAFA0B0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatLayeredMediaNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAFA0B48(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFA0B6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFA0B6C()
{
  unint64_t result;

  result = qword_1EF2B7C58;
  if (!qword_1EF2B7C58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeStyle.Selector, &type metadata for FormatLayeredMediaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C58);
  }
  return result;
}

unint64_t sub_1BAFA0BB0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA823E08();
  result = sub_1BA823E4C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAFA0BDC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA823E08();
  a1[2] = sub_1BA823E4C();
  result = sub_1BAFA0C10();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFA0C10()
{
  unint64_t result;

  result = qword_1EF2B7C60;
  if (!qword_1EF2B7C60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeStyle.Selector, &type metadata for FormatLayeredMediaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B7C60);
  }
  return result;
}

uint64_t sub_1BAFA0C54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAFA0CA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatLayeredMediaNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t assignWithCopy for FormatLayeredMediaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unsigned int v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  _OWORD *v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 *v34;
  __int128 *v35;
  int v36;
  char v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  __int128 *v48;
  __int128 *v49;
  int v50;
  char v51;
  __int128 v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BAF913AC(a1 + 24);
    v5 = *(_QWORD *)(a2 + 24);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      v14 = *(_QWORD *)(a2 + 40);
      v15 = *(_QWORD *)(a2 + 48);
      sub_1BA6F2B04(v14, v15, *(_BYTE *)(a2 + 56));
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v14;
      *(_QWORD *)(a1 + 48) = v15;
      v18 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v9;
      sub_1BA6F2B88(v16, v17, v18);
    }
    else
    {
      sub_1BA9F0244(a1 + 40);
      v11 = *(_BYTE *)(a2 + 56);
      *v7 = *v8;
      *(_BYTE *)(a1 + 56) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    sub_1BA6F2B04(v12, v13, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = v9;
  }
  else
  {
    v10 = *v8;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *v7 = v10;
  }
  v19 = (_OWORD *)(a1 + 64);
  v20 = (_OWORD *)(a2 + 64);
  v21 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
    if (v21 == 254)
    {
      v22 = *(_OWORD *)(a2 + 80);
      *v19 = *v20;
      *(_OWORD *)(a1 + 80) = v22;
      v23 = *(_OWORD *)(a2 + 96);
      v24 = *(_OWORD *)(a2 + 112);
      v25 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v24;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v23;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v30 = *(_OWORD *)(a2 + 104);
      v31 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 120) = v31;
      *(_OWORD *)(a1 + 104) = v30;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1BA9F0278(a1 + 64);
    v26 = *(_OWORD *)(a2 + 80);
    *v19 = *v20;
    *(_OWORD *)(a1 + 80) = v26;
    v28 = *(_OWORD *)(a2 + 112);
    v27 = *(_OWORD *)(a2 + 128);
    v29 = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v28;
    *(_OWORD *)(a1 + 128) = v27;
    *(_OWORD *)(a1 + 96) = v29;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_retain();
    swift_release();
    v32 = *(_OWORD *)(a2 + 104);
    v33 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 120) = v33;
    *(_OWORD *)(a1 + 104) = v32;
  }
  v34 = (__int128 *)(a1 + 152);
  v35 = (__int128 *)(a2 + 152);
  v36 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v36 == 255)
    {
      v38 = *v35;
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *v34 = v38;
    }
    else
    {
      v45 = v36 & 1;
      v46 = *(_QWORD *)(a2 + 152);
      v47 = *(_QWORD *)(a2 + 160);
      sub_1BA69C808(v46, v47, v36 & 1);
      *(_QWORD *)(a1 + 152) = v46;
      *(_QWORD *)(a1 + 160) = v47;
      *(_BYTE *)(a1 + 168) = v45;
    }
  }
  else if (v36 == 255)
  {
    sub_1BAB10C5C(a1 + 152);
    v37 = *(_BYTE *)(a2 + 168);
    *v34 = *v35;
    *(_BYTE *)(a1 + 168) = v37;
  }
  else
  {
    v39 = v36 & 1;
    v40 = *(_QWORD *)(a2 + 152);
    v41 = *(_QWORD *)(a2 + 160);
    sub_1BA69C808(v40, v41, v36 & 1);
    v42 = *(_QWORD *)(a1 + 152);
    v43 = *(_QWORD *)(a1 + 160);
    v44 = *(_BYTE *)(a1 + 168);
    *(_QWORD *)(a1 + 152) = v40;
    *(_QWORD *)(a1 + 160) = v41;
    *(_BYTE *)(a1 + 168) = v39;
    sub_1BA69C828(v42, v43, v44);
  }
  v48 = (__int128 *)(a1 + 176);
  v49 = (__int128 *)(a2 + 176);
  v50 = *(unsigned __int8 *)(a2 + 192);
  if (*(unsigned __int8 *)(a1 + 192) == 255)
  {
    if (v50 == 255)
    {
      v52 = *v49;
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *v48 = v52;
    }
    else
    {
      v59 = v50 & 1;
      v60 = *(_QWORD *)(a2 + 176);
      v61 = *(_QWORD *)(a2 + 184);
      sub_1BA69C808(v60, v61, v50 & 1);
      *(_QWORD *)(a1 + 176) = v60;
      *(_QWORD *)(a1 + 184) = v61;
      *(_BYTE *)(a1 + 192) = v59;
    }
  }
  else if (v50 == 255)
  {
    sub_1BAB10C5C(a1 + 176);
    v51 = *(_BYTE *)(a2 + 192);
    *v48 = *v49;
    *(_BYTE *)(a1 + 192) = v51;
  }
  else
  {
    v53 = v50 & 1;
    v54 = *(_QWORD *)(a2 + 176);
    v55 = *(_QWORD *)(a2 + 184);
    sub_1BA69C808(v54, v55, v50 & 1);
    v56 = *(_QWORD *)(a1 + 176);
    v57 = *(_QWORD *)(a1 + 184);
    v58 = *(_BYTE *)(a1 + 192);
    *(_QWORD *)(a1 + 176) = v54;
    *(_QWORD *)(a1 + 184) = v55;
    *(_BYTE *)(a1 + 192) = v53;
    sub_1BA69C828(v56, v57, v58);
  }
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLayeredMediaNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAF913AC(a1 + 24);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *v7;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    goto LABEL_11;
  }
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 > 0xFD)
  {
    sub_1BA9F0244(a1 + 40);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *v7;
  *(_BYTE *)(a1 + 56) = v9;
  sub_1BA6F2B88(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
LABEL_14:
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    sub_1BA9F0278(a1 + 64);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
LABEL_16:
  v14 = (_OWORD *)(a2 + 152);
  v15 = *(unsigned __int8 *)(a1 + 168);
  if (v15 == 255)
  {
LABEL_19:
    *(_OWORD *)(a1 + 152) = *v14;
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    goto LABEL_21;
  }
  v16 = *(unsigned __int8 *)(a2 + 168);
  if (v16 == 255)
  {
    sub_1BAB10C5C(a1 + 152);
    goto LABEL_19;
  }
  v17 = *(_QWORD *)(a1 + 152);
  v18 = *(_QWORD *)(a1 + 160);
  *(_OWORD *)(a1 + 152) = *v14;
  *(_BYTE *)(a1 + 168) = v16 & 1;
  sub_1BA69C828(v17, v18, v15 & 1);
LABEL_21:
  v19 = (_OWORD *)(a2 + 176);
  v20 = *(unsigned __int8 *)(a1 + 192);
  if (v20 != 255)
  {
    v21 = *(unsigned __int8 *)(a2 + 192);
    if (v21 != 255)
    {
      v22 = *(_QWORD *)(a1 + 176);
      v23 = *(_QWORD *)(a1 + 184);
      *(_OWORD *)(a1 + 176) = *v19;
      *(_BYTE *)(a1 + 192) = v21 & 1;
      sub_1BA69C828(v22, v23, v20 & 1);
      goto LABEL_26;
    }
    sub_1BAB10C5C(a1 + 176);
  }
  *(_OWORD *)(a1 + 176) = *v19;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
LABEL_26:
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeStyle.Selector()
{
  return &type metadata for FormatLayeredMediaNodeStyle.Selector;
}

void sub_1BAFA1358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AFB40)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AFB40);
  }
}

void sub_1BAFA13B8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3AFB08)
  {
    v2 = sub_1BAFA1410();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3AFB08);
  }
}

unint64_t sub_1BAFA1410()
{
  unint64_t result;

  result = qword_1ED3AFB00;
  if (!qword_1ED3AFB00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DBD74, &type metadata for FormatLayeredMediaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3AFB00);
  }
  return result;
}

_QWORD *sub_1BAFA1454(double *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v58;
  uint64_t v59;
  uint64_t inited;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  _OWORD v69[2];
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  sub_1BA67D7C8(0, (unint64_t *)&qword_1EF2A9CF0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v4 = *(_QWORD *)(v3 - 8);
  v59 = *(_QWORD *)(v4 + 72);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = (_QWORD *)(v6 + v5);
  if (a2)
  {
    v8 = *(_QWORD *)(a2 + 40);
    v53 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v61 = sub_1BAF9F23C();
    v62 = 0u;
    v63 = 0u;
    v64 = 0;
    v65 = xmmword_1BB8D5E60;
    v9 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v61, v9 + 16);
    v10 = sub_1BA9F10D0;
  }
  else
  {
    v9 = 0;
    v53 = 0;
    v8 = 0xE000000000000000;
    v10 = sub_1BB739F50;
  }
  v11 = type metadata accessor for FormatInspectionItem(0);
  v12 = (uint64_t (**)())((char *)v7 + *(int *)(v11 + 24));
  *v12 = v10;
  v12[1] = (uint64_t (*)())v9;
  v13 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  *(_QWORD *)(v6 + v5) = v53;
  v7[2] = 0;
  v7[3] = 0;
  v7[1] = v8;
  v14 = (char *)v7 + *(int *)(v11 + 28);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = -1;
  v15 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v15((unint64_t)v7, 0, 1, v11);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v69);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(v16 + 48) = v70;
  v17 = v69[1];
  *(_OWORD *)(v16 + 16) = v69[0];
  *(_OWORD *)(v16 + 32) = v17;
  v18 = v59;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB8832C0;
  v20 = v19 + v5;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x4D6465726579614CLL, 0xEC00000061696465, (_QWORD *)(v19 + v5));
  v15(v19 + v5, 0, 1, v11);
  v55 = v19;
  if (a2)
  {
    v21 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v21, (_QWORD *)(v20 + v59));
    v15(v20 + v59, 0, 1, v11);
    v22 = *(_QWORD *)(a2 + 64);
    sub_1BA6E6C68(v22);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v20 + v59));
    v15(v20 + v59, 0, 1, v11);
    v22 = 0xF000000000000007;
  }
  sub_1BAAFC1B0(0x756F72676B636142, 0xEA0000000000646ELL, v22, (_QWORD *)(v20 + 2 * v59));
  v15(v20 + 2 * v59, 0, 1, v11);
  if (a2)
  {
    v23 = *(_QWORD *)(a2 + 192);
    v24 = *(_QWORD *)(a2 + 200);
    v25 = *(_BYTE *)(a2 + 208);
    sub_1BA796C58(v23, v24, v25);
    sub_1BAAFA830(0x6F65646956, 0xE500000000000000, v23, v24, v25, (_QWORD *)(v20 + 3 * v59));
    v18 = v59;
    v15(v20 + 3 * v59, 0, 1, v11);
    v26 = *(_QWORD *)(a2 + 216);
    v27 = *(_QWORD *)(a2 + 224);
    v28 = *(_BYTE *)(a2 + 232);
    sub_1BA796C58(v26, v27, v28);
  }
  else
  {
    v28 = -1;
    sub_1BAAFA830(0x6F65646956, 0xE500000000000000, 0, 0, 0xFFu, (_QWORD *)(v20 + 3 * v59));
    v15(v20 + 3 * v59, 0, 1, v11);
    v26 = 0;
    v27 = 0;
  }
  sub_1BAAFA830(0x6E6F69746F4DLL, 0xE600000000000000, v26, v27, v28, (_QWORD *)(v20 + 4 * v18));
  v15(v20 + 4 * v18, 0, 1, v11);
  if (a2)
  {
    sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, *(_BYTE *)(a2 + 233), (_QWORD *)(v20 + 5 * v18));
    v29 = v15(v20 + 5 * v18, 0, 1, v11);
    if (*(_QWORD *)(a2 + 240))
    {
      MEMORY[0x1E0C80A78](v29);
      v30 = swift_bridgeObjectRetain();
      v31 = sub_1BAFA0580(v30, (uint64_t (*)(__int128 *))sub_1BAFA1D50);
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = MEMORY[0x1E0DEE9D8];
    }
    v18 = v59;
  }
  else
  {
    sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, 2, (_QWORD *)(v20 + 5 * v18));
    v15(v20 + 5 * v18, 0, 1, v11);
    v31 = MEMORY[0x1E0DEE9D8];
  }
  v32 = sub_1BA9747FC(v31);
  swift_bridgeObjectRelease();
  v33 = sub_1BB6DF010(v32);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x737265746C6946, 0xE700000000000000, (uint64_t)v33, 0, 0, (_QWORD *)(v20 + 6 * v18));
  v15(v20 + 6 * v18, 0, 1, v11);
  sub_1BAF89090(0x4D6465726579614CLL, 0xEC00000061696465, 0, 0, v55, v71);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v34 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v34;
  *(_QWORD *)(v34 + 48) = v72;
  v35 = v71[1];
  *(_OWORD *)(v34 + 16) = v71[0];
  *(_OWORD *)(v34 + 32) = v35;
  if (a2)
  {
    v36 = *(_QWORD *)(a2 + 80);
    v37 = *(_QWORD *)(a2 + 88);
    v38 = *(_BYTE *)(a2 + 96);
    sub_1BA6E6C54(v36, v37, v38);
  }
  else
  {
    v36 = 0;
    v37 = 0;
    v38 = -2;
  }
  v61 = v36;
  *(_QWORD *)&v62 = v37;
  BYTE8(v62) = v38;
  v39 = sub_1BB4D88A0(a1, (uint64_t)&v61);
  sub_1BA6E6CC4(v36, v37, v38);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v39;
  if (a2)
  {
    v40 = *(_QWORD *)(a2 + 144);
    v41 = *(_QWORD *)(a2 + 152);
    v42 = *(_QWORD *)(a2 + 160);
    v52 = *(_BYTE *)(a2 + 184);
    v54 = *(_QWORD *)(a2 + 176);
    v56 = *(_QWORD *)(a2 + 168);
    v43 = *(_QWORD *)(a2 + 104);
    v44 = *(_QWORD *)(a2 + 112);
    v45 = *(_QWORD *)(a2 + 120);
    v46 = *(_QWORD *)(a2 + 128);
    a2 = *(_QWORD *)(a2 + 136);
    v47 = v40;
    v48 = v41;
    v49 = v42;
    sub_1BA6E8A48(v43, v44, v45, v46, a2, v40, v41, v42, v56, v54, v52);
  }
  else
  {
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v48 = 0;
    v49 = 0;
    v56 = 0;
    v54 = 0;
    v52 = -2;
  }
  v61 = v43;
  *(_QWORD *)&v62 = v44;
  *((_QWORD *)&v62 + 1) = v45;
  *(_QWORD *)&v63 = v46;
  *((_QWORD *)&v63 + 1) = a2;
  v64 = v47;
  *(_QWORD *)&v65 = v48;
  *((_QWORD *)&v65 + 1) = v49;
  v66 = v56;
  v67 = v54;
  v68 = v52;
  v58 = sub_1BB05E83C((uint64_t)&v61);
  sub_1BA6E8A78(v43, v44, v45, v46, a2, v47, v48, v49, v56, v54, v52);
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 184) = &off_1E7335C38;
  *(_QWORD *)(inited + 152) = v58;
  v50 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  return v50;
}

uint64_t sub_1BAFA1D1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BAFA1D50(__int128 *a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;

  v1 = *((_QWORD *)a1 + 2);
  v3 = *a1;
  v4 = v1;
  return sub_1BB546834((uint64_t *)&v3);
}

uint64_t sub_1BAFA1D80()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1BAFA1DB0(void **a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _QWORD *v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  void **v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _QWORD v63[2];
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void **v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  _QWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;

  v71 = a8;
  v89 = a6;
  v90 = a7;
  v70 = a3;
  v69 = a2;
  v96 = a1;
  v73 = a17;
  v67 = a16;
  v74 = a15;
  v66 = a14;
  v65 = a13;
  v68 = a12;
  v91 = a11;
  v88 = a10;
  v75 = a9;
  v63[1] = *v17;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v20);
  v110 = (uint64_t)v63 - v21;
  v23 = *(_QWORD *)a4;
  v22 = *(_QWORD *)(a4 + 8);
  v24 = *(_QWORD *)(a4 + 16);
  v25 = *(_QWORD *)(a4 + 24);
  v26 = *(_QWORD *)(a4 + 32);
  v27 = *(_QWORD *)(a4 + 48);
  v92 = *(_QWORD *)(a4 + 40);
  v93 = v27;
  v28 = *(_QWORD *)(a4 + 64);
  v94 = *(_QWORD *)(a4 + 56);
  v95 = v26;
  v29 = *(unsigned __int8 *)(a4 + 72);
  v31 = *(_QWORD *)a5;
  v30 = *(_QWORD *)(a5 + 8);
  LODWORD(a5) = *(unsigned __int8 *)(a5 + 16);
  v82 = *v96;
  v87 = (_QWORD *)sub_1BAFA24DC(v82);
  v86 = v32;
  v83 = v23;
  v100[0] = v23;
  v100[1] = v22;
  v84 = v22;
  v85 = v24;
  v101 = v24;
  v102 = v25;
  v64 = v25;
  v103 = v95;
  v104 = v92;
  v105 = v93;
  v106 = v94;
  v79 = v28;
  v107 = v28;
  v81 = v29;
  v108 = v29;
  v76 = v31;
  v97 = v31;
  v98 = v30;
  v77 = v30;
  v78 = a5;
  v99 = a5;
  v33 = objc_msgSend(v82, sel_publishDate);
  if (v33)
  {
    v34 = v33;
    v35 = v110;
    sub_1BB86C874();

    v36 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  else
  {
    v37 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v110, 1, 1, v37);
  }
  v39 = v90;
  v38 = v91;
  v40 = v89;
  v41 = v72;
  v42 = v96;
  *((_QWORD *)&v62 + 1) = v73;
  *((_QWORD *)&v61 + 1) = v74;
  *(_QWORD *)&v62 = v67;
  *(_QWORD *)&v61 = v66;
  *(_QWORD *)&v60 = v71;
  *((_QWORD *)&v60 + 1) = v75;
  sub_1BAFA3438(v96, v69 & 1, v70 & 1, (uint64_t)v100, (uint64_t)v87, v86, &v97, v89, v90, v60, v88, v91, v68 & 1, v65 & 1, v61, v62);
  v82 = v41;
  if (v41)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA69D490(v40, v39);
    sub_1BA502AD0(v38, (unint64_t *)&unk_1EF2ACAA8, (void (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo);
    sub_1BA502AD0(v110, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
    sub_1BA6E3730(v76, v77);
    sub_1BA92CCAC(v83, v84, v85, v64, v95, v92, v93, v94, v79);
    v43 = v80;
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1BA502AD0(v110, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E3730(v76, v77);
    v44 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
    v45 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v46 = objc_msgSend(v44, sel_initWithJSONString_, v45);

    v43 = v80;
    *(_QWORD *)(v80 + 16) = v46;
    v100[0] = 0;
    v100[1] = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v97 = 0x7250656C7A7A7570;
    v98 = 0xEF3D73736572676FLL;
    v47 = &v109;
    if (v79 != 1)
    {
      v100[0] = v83;
      v100[1] = v84;
      LOBYTE(v101) = v85 & 1;
      v48 = v64;
      v49 = v94;
      v102 = v64;
      v103 = v95;
      v51 = v92;
      v50 = v93;
      v104 = v92;
      LOBYTE(v105) = v93 & 1;
      v106 = v94;
      v107 = v79;
      v108 = v81 & 1;
      v52 = v79;
      PuzzleProgress.debugDescription.getter();
      sub_1BA92CCAC(v83, v84, v85, v48, v95, v51, v50, v49, v52);
    }
    sub_1BB872AFC(v47);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v53);
    v55 = v97;
    v54 = v98;
    v100[0] = 0;
    v100[1] = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v100, "puzzleConfig= ");
    HIBYTE(v100[1]) = -18;
    sub_1BB872AFC(v87);
    swift_bridgeObjectRelease();
    v100[0] = v55;
    v100[1] = v54;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA69D490(v89, v90);
    v57 = v100[0];
    v58 = v100[1];
    sub_1BA502AD0(v91, (unint64_t *)&unk_1EF2ACAA8, (void (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo);
    sub_1BA4A2E80((uint64_t)v96, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResource);
    *(_QWORD *)(v43 + 24) = v57;
    *(_QWORD *)(v43 + 32) = v58;
  }
  return v43;
}

uint64_t sub_1BAFA24DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned __int8 v52;
  uint64_t v53;
  char v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  id v85;
  char v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  id v93;
  _QWORD *v94;
  char v95;
  char v96;
  char v97;
  unsigned __int8 v98;
  char v99;
  unsigned __int8 v100;
  char v101;
  unsigned __int8 v102;
  char v103;
  void *v104;
  void *v105;
  id v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  _QWORD v115[3];
  unint64_t v116;
  unint64_t v117;
  _OWORD v118[2];
  __int128 v119;
  uint64_t v120;
  uint64_t v121;

  v121 = *MEMORY[0x1E0C80C00];
  v2 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v2);
  v115[1] = (char *)v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v115 - v9;
  v117 = MEMORY[0x1E0DEE9E0];
  v11 = objc_msgSend(a1, sel_identifier, v8);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = MEMORY[0x1E0DEA968];
  v120 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v119 = v12;
  *((_QWORD *)&v119 + 1) = v14;
  sub_1BA76EAE0(&v119, v118);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
  v117 = v116;
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  v18 = sub_1BB8729A0();
  v20 = v19;

  v120 = v15;
  *(_QWORD *)&v119 = v18;
  *((_QWORD *)&v119 + 1) = v20;
  sub_1BA76EAE0(&v119, v118);
  v21 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0xD000000000000014, 0x80000001BB9735E0, v21);
  v117 = v116;
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(a1, sel_title);
  if (v22)
  {
    v23 = v22;
    v24 = sub_1BB8729A0();
    v26 = v25;

    v120 = v15;
    *(_QWORD *)&v119 = v24;
    *((_QWORD *)&v119 + 1) = v26;
    sub_1BA76EAE0(&v119, v118);
    v27 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x656C746974, 0xE500000000000000, v27);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x656C746974, 0xE500000000000000, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v28 = objc_msgSend(a1, sel_subtitle);
  if (v28)
  {
    v29 = v28;
    v30 = sub_1BB8729A0();
    v32 = v31;

    v120 = v15;
    *(_QWORD *)&v119 = v30;
    *((_QWORD *)&v119 + 1) = v32;
    sub_1BA76EAE0(&v119, v118);
    v33 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x656C746974627573, 0xE800000000000000, v33);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x656C746974627573, 0xE800000000000000, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v34 = objc_msgSend(a1, sel_puzzleDescription);
  if (v34)
  {
    v35 = v34;
    v36 = sub_1BB8729A0();
    v38 = v37;

    v120 = v15;
    *(_QWORD *)&v119 = v36;
    *((_QWORD *)&v119 + 1) = v38;
    sub_1BA76EAE0(&v119, v118);
    v39 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x7470697263736564, 0xEB000000006E6F69, v39);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x7470697263736564, 0xEB000000006E6F69, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v40 = objc_msgSend(a1, sel_authors);
  if (v40)
  {
    v41 = v40;
    v42 = MEMORY[0x1E0DEA968];
    v43 = sub_1BB872DB4();

    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v42, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v120 = v44;
    *(_QWORD *)&v119 = v43;
    sub_1BA76EAE0(&v119, v118);
    v45 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x726F68747561, 0xE600000000000000, v45);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x726F68747561, 0xE600000000000000, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v46 = objc_msgSend(a1, sel_publishDate);
  if (v46)
  {
    v47 = v46;
    sub_1BB86C874();

    v48 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v6, 0, 1, v48);
  }
  else
  {
    v48 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v6, 1, 1, v48);
  }
  sub_1BA50236C((uint64_t)v6, (uint64_t)v10);
  sub_1BB86C8B0();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v48) == 1)
  {
    sub_1BA502AD0((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BAA48D9C(0x656873696C627570, 0xED00006574614464, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  else
  {
    sub_1BB86C85C();
    v120 = MEMORY[0x1E0DEB070];
    *(_QWORD *)&v119 = v50;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v48);
    sub_1BA76EAE0(&v119, v118);
    v51 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x656873696C627570, 0xED00006574614464, v51);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  v52 = objc_msgSend(a1, sel_isPaid);
  v53 = MEMORY[0x1E0DEAFA0];
  v120 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v119) = v52;
  sub_1BA76EAE0(&v119, v118);
  v54 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0x646961507369, 0xE600000000000000, v54);
  v117 = v116;
  swift_bridgeObjectRelease();
  v55 = objc_msgSend(a1, sel_teaserClue);
  if (v55)
  {
    v56 = v55;
    v57 = sub_1BB8729A0();
    v59 = v58;

    v120 = v15;
    *(_QWORD *)&v119 = v57;
    *((_QWORD *)&v119 + 1) = v59;
    sub_1BA76EAE0(&v119, v118);
    v60 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x6C43726573616574, 0xEA00000000006575, v60);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x6C43726573616574, 0xEA00000000006575, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v61 = objc_msgSend(a1, sel_teaserInfo);
  if (v61)
  {
    v62 = v61;
    v63 = sub_1BB8729A0();
    v65 = v64;

    v120 = v15;
    *(_QWORD *)&v119 = v63;
    *((_QWORD *)&v119 + 1) = v65;
    sub_1BA76EAE0(&v119, v118);
    v66 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x6948726573616574, 0xEA0000000000746ELL, v66);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x6948726573616574, 0xEA0000000000746ELL, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v67 = objc_msgSend(a1, sel_teaserAnswer);
  if (v67)
  {
    v68 = v67;
    v69 = sub_1BB8729A0();
    v71 = v70;

    v120 = v15;
    *(_QWORD *)&v119 = v69;
    *((_QWORD *)&v119 + 1) = v71;
    sub_1BA76EAE0(&v119, v118);
    v72 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x6E41726573616574, 0xEC00000072657773, v72);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x6E41726573616574, 0xEC00000072657773, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v73 = objc_msgSend(a1, sel_teaserNumber);
  if (v73)
  {
    v74 = v73;
    v75 = sub_1BB8729A0();
    v77 = v76;

    v120 = v15;
    *(_QWORD *)&v119 = v75;
    *((_QWORD *)&v119 + 1) = v77;
    sub_1BA76EAE0(&v119, v118);
    v78 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x754E726573616574, 0xEC0000007265626DLL, v78);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x754E726573616574, 0xEC0000007265626DLL, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v79 = objc_msgSend(a1, sel_teaserDirection);
  if (v79)
  {
    v80 = v79;
    v81 = sub_1BB8729A0();
    v83 = v82;

    v120 = v15;
    *(_QWORD *)&v119 = v81;
    *((_QWORD *)&v119 + 1) = v83;
    sub_1BA76EAE0(&v119, v118);
    v84 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0x6944726573616574, 0xEF6E6F6974636572, v84);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0x6944726573616574, 0xEF6E6F6974636572, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  v85 = objc_msgSend(a1, sel_difficulty);
  v120 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)&v119 = v85;
  sub_1BA76EAE0(&v119, v118);
  v86 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0x6C75636966666964, 0xEA00000000007974, v86);
  v117 = v116;
  swift_bridgeObjectRelease();
  v87 = objc_msgSend(a1, sel_difficultyDescription);
  if (v87)
  {
    v88 = v87;
    v89 = sub_1BB8729A0();
    v91 = v90;

    v120 = v15;
    *(_QWORD *)&v119 = v89;
    *((_QWORD *)&v119 + 1) = v91;
    sub_1BA76EAE0(&v119, v118);
    v92 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v117;
    v117 = 0x8000000000000000;
    sub_1BA785F30(v118, 0xD000000000000015, 0x80000001BB973600, v92);
    v117 = v116;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA48D9C(0xD000000000000015, 0x80000001BB973600, &v119);
    sub_1BA6EDA74((uint64_t)&v119);
  }
  *(_QWORD *)&v119 = 0;
  *((_QWORD *)&v119 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v119 = 0xD000000000000013;
  *((_QWORD *)&v119 + 1) = 0x80000001BB9720D0;
  v93 = objc_msgSend(a1, sel_identifier);
  sub_1BB8729A0();

  sub_1BB872AFC(v94);
  swift_bridgeObjectRelease();
  v120 = v15;
  sub_1BA76EAE0(&v119, v118);
  v95 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 7107189, 0xE300000000000000, v95);
  v117 = v116;
  swift_bridgeObjectRelease();
  v96 = sub_1BAFA4DF4(a1);
  v120 = v53;
  LOBYTE(v119) = v96 & 1;
  sub_1BA76EAE0(&v119, v118);
  v97 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0xD000000000000018, 0x80000001BB973620, v97);
  v117 = v116;
  swift_bridgeObjectRelease();
  v98 = objc_msgSend(a1, sel_ignoreFromStatsAndStreaks);
  v120 = v53;
  LOBYTE(v119) = v98;
  sub_1BA76EAE0(&v119, v118);
  v99 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0xD000000000000019, 0x80000001BB973640, v99);
  v117 = v116;
  swift_bridgeObjectRelease();
  v100 = objc_msgSend(a1, sel_isDeprecated);
  v120 = v53;
  LOBYTE(v119) = v100;
  sub_1BA76EAE0(&v119, v118);
  v101 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0x6365727065447369, 0xEC00000064657461, v101);
  v117 = v116;
  swift_bridgeObjectRelease();
  v102 = objc_msgSend(a1, sel_isDraft);
  v120 = v53;
  LOBYTE(v119) = v102;
  sub_1BA76EAE0(&v119, v118);
  v103 = swift_isUniquelyReferenced_nonNull_native();
  v116 = v117;
  v117 = 0x8000000000000000;
  sub_1BA785F30(v118, 0x74666172447369, 0xE700000000000000, v103);
  v117 = v116;
  swift_bridgeObjectRelease();
  v104 = (void *)objc_opt_self();
  v105 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v119 = 0;
  v106 = objc_msgSend(v104, sel_dataWithJSONObject_options_error_, v105, 2, &v119);

  v107 = (id)v119;
  if (v106)
  {
    v108 = sub_1BB86C6E8();
    v110 = v109;

    sub_1BB8729DC();
    v111 = sub_1BB8729B8();
    sub_1BA69D314(v108, v110);
  }
  else
  {
    v112 = v107;
    v113 = (void *)sub_1BB86C484();

    swift_willThrow();
    return 0;
  }
  return v111;
}

id sub_1BAFA3438(void **a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, unint64_t a9, __int128 a10, uint64_t a11, uint64_t a12, char a13, char a14, __int128 a15, __int128 a16)
{
  void *v16;
  id v17;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  _BYTE *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  void *v86;
  void *v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  _BYTE *v96;
  uint64_t v97;
  int v98;
  int v99;
  void **v100;
  void *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  char v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  __int128 v128;
  char v129;
  uint64_t v130;

  v17 = v16;
  v111 = a8;
  v110 = a6;
  v104 = a5;
  v130 = *MEMORY[0x1E0C80C00];
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1EF2ACAA8, (void (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo);
  MEMORY[0x1E0C80A78](v23);
  v114 = (uint64_t)&v97 - v24;
  v113 = type metadata accessor for PuzzleHistoryInfo();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v102 = (uint64_t)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(a4 + 8);
  *(_QWORD *)&v115 = *(_QWORD *)a4;
  *((_QWORD *)&v115 + 1) = v29;
  v30 = *(_QWORD *)(a4 + 24);
  v116 = *(_QWORD *)(a4 + 16);
  v105 = *(_QWORD *)(a4 + 32);
  v117 = *(_QWORD *)(a4 + 40);
  v108 = *(_QWORD *)(a4 + 48);
  v109 = *(_QWORD *)(a4 + 56);
  v107 = *(_QWORD *)(a4 + 64);
  v31 = *(unsigned __int8 *)(a4 + 72);
  v32 = a7[1];
  v106 = *a7;
  v33 = *((unsigned __int8 *)a7 + 16);
  type metadata accessor for PuzzleResource();
  v34 = sub_1BAFA40BC();
  if (!v35)
  {
    sub_1BAFA4394();
    swift_allocError();
    *v63 = 0;
LABEL_34:
    swift_willThrow();
    return v17;
  }
  v99 = v33;
  v98 = v31;
  v100 = a1;
  v103 = v28;
  v101 = v16;
  v121 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v119 = v34;
  *((_QWORD *)&v119 + 1) = v35;
  sub_1BA76EAE0(&v119, &v128);
  v36 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v118 = v36;
  sub_1BA785F30(&v128, 0x6144656C7A7A7570, 0xEA00000000006174, isUniquelyReferenced_nonNull_native);
  v38 = v118;
  swift_bridgeObjectRelease();
  v39 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v40 = objc_msgSend(v39, sel_userInterfaceIdiom);

  v41 = MEMORY[0x1E0DEAFA0];
  v121 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v119) = v40 == 0;
  sub_1BA76EAE0(&v119, &v128);
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v118 = v38;
  sub_1BA785F30(&v128, 0x4F676E696E6E7572, 0xEF656C69626F4D6ELL, v42);
  v43 = v118;
  swift_bridgeObjectRelease();
  v121 = v41;
  LOBYTE(v119) = a2 & 1;
  sub_1BA76EAE0(&v119, &v128);
  v44 = swift_isUniquelyReferenced_nonNull_native();
  v118 = v43;
  sub_1BA785F30(&v128, 0x6269726373627573, 0xEA00000000006465, v44);
  v45 = v118;
  swift_bridgeObjectRelease();
  v121 = v41;
  LOBYTE(v119) = a3 & 1;
  sub_1BA76EAE0(&v119, &v128);
  v46 = swift_isUniquelyReferenced_nonNull_native();
  v118 = v45;
  sub_1BA785F30(&v128, 0x7365636341736168, 0xE900000000000073, v46);
  v47 = v118;
  swift_bridgeObjectRelease();
  v121 = v41;
  LOBYTE(v119) = a14 & 1;
  sub_1BA76EAE0(&v119, &v128);
  v48 = swift_isUniquelyReferenced_nonNull_native();
  v118 = v47;
  sub_1BA785F30(&v128, 0xD000000000000018, 0x80000001BB9734B0, v48);
  v49 = v118;
  swift_bridgeObjectRelease();
  if (v32 != 1)
  {
    *(_QWORD *)&v119 = v106;
    *((_QWORD *)&v119 + 1) = v32;
    v120 = v99;
    v50 = sub_1BAFA43D8((uint64_t *)&v119);
    sub_1BA78647C();
    v121 = v51;
    *(_QWORD *)&v119 = v50;
    sub_1BA76EAE0(&v119, &v128);
    v52 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v49;
    sub_1BA785F30(&v128, 0x634168636E75616CLL, 0xEC0000006E6F6974, v52);
    v49 = v118;
    swift_bridgeObjectRelease();
  }
  v53 = v110;
  v54 = v109;
  v55 = v108;
  v56 = v107;
  if (v107 == 1)
  {
LABEL_10:
    v60 = MEMORY[0x1E0DEA968];
    v62 = a9;
    if (!v53)
      goto LABEL_12;
    goto LABEL_11;
  }
  v119 = v115;
  v120 = v116 & 1;
  v121 = v30;
  v122 = v105;
  v123 = v117;
  v124 = v108 & 1;
  v125 = v109;
  v126 = v107;
  v127 = v98 & 1;
  *(_QWORD *)&v128 = v106;
  *((_QWORD *)&v128 + 1) = v32;
  v57 = v105;
  v129 = v99;
  sub_1BA86B484(v30, v105);
  swift_bridgeObjectRetain();
  v58 = sub_1BAFA44E8((uint64_t *)&v119, (uint64_t)&v128);
  if (!v59)
  {
    sub_1BA92CCAC(v115, *((uint64_t *)&v115 + 1), v116, v30, v57, v117, v55, v54, v56);
    goto LABEL_10;
  }
  v60 = MEMORY[0x1E0DEA968];
  v121 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v119 = v58;
  *((_QWORD *)&v119 + 1) = v59;
  sub_1BA76EAE0(&v119, &v128);
  v61 = swift_isUniquelyReferenced_nonNull_native();
  v118 = v49;
  sub_1BA785F30(&v128, 0xD000000000000011, 0x80000001BB973590, v61);
  v49 = v118;
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x1E0DEAFA0];
  sub_1BA92CCAC(v115, *((uint64_t *)&v115 + 1), v116, v30, v105, v117, v55, v54, v56);
  v62 = a9;
  if (v53)
  {
LABEL_11:
    v121 = v60;
    *(_QWORD *)&v119 = v104;
    *((_QWORD *)&v119 + 1) = v53;
    sub_1BA76EAE0(&v119, &v128);
    swift_bridgeObjectRetain();
    v64 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v49;
    sub_1BA785F30(&v128, 0x6F43656C7A7A7570, 0xEC0000006769666ELL, v64);
    v49 = v118;
    swift_bridgeObjectRelease();
  }
LABEL_12:
  v65 = v111;
  if (v62 >> 60 != 15)
  {
    sub_1BA69D44C(v111, v62);
    sub_1BB8729DC();
    v66 = sub_1BB8729B8();
    if (v67)
    {
      v121 = v60;
      *(_QWORD *)&v119 = v66;
      *((_QWORD *)&v119 + 1) = v67;
      sub_1BA76EAE0(&v119, &v128);
      v68 = swift_isUniquelyReferenced_nonNull_native();
      v118 = v49;
      sub_1BA785F30(&v128, 0x6553656C7A7A7570, 0xEE0073676E697474, v68);
      v49 = v118;
      swift_bridgeObjectRelease();
    }
    sub_1BA69D490(v65, v62);
  }
  if (*((_QWORD *)&a10 + 1))
  {
    v121 = v60;
    v119 = a10;
    sub_1BA76EAE0(&v119, &v128);
    swift_bridgeObjectRetain();
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v49;
    sub_1BA785F30(&v128, 0xD000000000000012, 0x80000001BB973570, v69);
    v49 = v118;
    swift_bridgeObjectRelease();
  }
  if (*((_QWORD *)&a16 + 1))
  {
    v121 = v60;
    v119 = a16;
    sub_1BA76EAE0(&v119, &v128);
    swift_bridgeObjectRetain();
    v70 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v49;
    sub_1BA785F30(&v128, 0xD000000000000011, 0x80000001BB973550, v70);
    v49 = v118;
    swift_bridgeObjectRelease();
  }
  if (a11)
  {
    swift_retain();
    v71 = sub_1BB631564();
    sub_1BA78647C();
    v121 = v72;
    *(_QWORD *)&v119 = v71;
    sub_1BA76EAE0(&v119, &v128);
    v73 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v49;
    sub_1BA785F30(&v128, 0x7453656C7A7A7570, 0xEF6F666E49737461, v73);
    v49 = v118;
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*((_QWORD *)&a15 + 1))
  {
    v121 = MEMORY[0x1E0DEA968];
    v119 = a15;
    sub_1BA76EAE0(&v119, &v128);
    swift_bridgeObjectRetain();
    v74 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v49;
    sub_1BA785F30(&v128, 0xD000000000000011, 0x80000001BB973530, v74);
    v49 = v118;
    swift_bridgeObjectRelease();
  }
  v121 = v41;
  LOBYTE(v119) = a13 & 1;
  sub_1BA76EAE0(&v119, &v128);
  v75 = swift_isUniquelyReferenced_nonNull_native();
  v118 = v49;
  sub_1BA785F30(&v128, 0xD00000000000001ALL, 0x80000001BB9734D0, v75);
  v76 = v118;
  swift_bridgeObjectRelease();
  v77 = v114;
  sub_1BA9CFF94(a12, v114);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v77, 1, v113) == 1)
  {
    sub_1BA502AD0(v77, (unint64_t *)&unk_1EF2ACAA8, (void (*)(uint64_t))type metadata accessor for PuzzleHistoryInfo);
  }
  else
  {
    v78 = v102;
    sub_1BAFA4EB4(v77, v102);
    v79 = PuzzleHistoryInfo.asDictionary.getter();
    sub_1BA78647C();
    v121 = v80;
    *(_QWORD *)&v119 = v79;
    sub_1BA76EAE0(&v119, &v128);
    v81 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v76;
    sub_1BA785F30(&v128, 0xD000000000000011, 0x80000001BB973510, v81);
    v76 = v118;
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v78, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleHistoryInfo);
  }
  v82 = sub_1BAFA4A88(*v100);
  if (v82)
  {
    v83 = v82;
    sub_1BA78647C();
    v121 = v84;
    *(_QWORD *)&v119 = v83;
    sub_1BA76EAE0(&v119, &v128);
    v85 = swift_isUniquelyReferenced_nonNull_native();
    v118 = v76;
    sub_1BA785F30(&v128, 0xD000000000000013, 0x80000001BB9734F0, v85);
    swift_bridgeObjectRelease();
  }
  v86 = (void *)objc_opt_self();
  v87 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v119 = 0;
  v17 = objc_msgSend(v86, sel_dataWithJSONObject_options_error_, v87, 2, &v119);

  v88 = (id)v119;
  if (!v17)
  {
    v94 = v88;
    sub_1BB86C484();

    goto LABEL_34;
  }
  v89 = sub_1BB86C6E8();
  v91 = v90;

  v17 = v103;
  sub_1BB8729DC();
  v92 = sub_1BB8729B8();
  if (v93)
  {
    v17 = (id)v92;
  }
  else
  {
    sub_1BAFA4394();
    swift_allocError();
    *v96 = 1;
    swift_willThrow();
  }
  sub_1BA69D314(v89, v91);
  return v17;
}

uint64_t sub_1BAFA4064()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleDatastore()
{
  return objc_opt_self();
}

uint64_t sub_1BAFA40B0(uint64_t *a1, uint64_t *a2)
{
  return sub_1BAFA4EF8(*a1, *a2);
}

uint64_t sub_1BAFA40BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1BB86BE54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v4);
  sub_1BB86C610();
  sub_1BB8729DC();
  v5 = sub_1BB872964();
  v7 = v6;
  swift_bridgeObjectRelease();
  v10[0] = v5;
  v10[1] = v7;
  sub_1BB86BE00();
  sub_1BA7114A0();
  v8 = sub_1BB873AEC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1BAFA4394()
{
  unint64_t result;

  result = qword_1EF2B7D10;
  if (!qword_1EF2B7D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC030, &type metadata for PuzzleDatastoreError);
    atomic_store(result, (unint64_t *)&qword_1EF2B7D10);
  }
  return result;
}

uint64_t sub_1BAFA43D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  _OWORD v10[2];
  __int128 v11;
  uint64_t v12;

  v2 = *a1;
  v1 = a1[1];
  v3 = 0xD000000000000011;
  if (v1)
    v3 = 0xD000000000000013;
  v4 = 0x80000001BB966870;
  v5 = MEMORY[0x1E0DEA968];
  v12 = MEMORY[0x1E0DEA968];
  if (!v1)
    v4 = 0x80000001BB966890;
  *(_QWORD *)&v11 = v3;
  *((_QWORD *)&v11 + 1) = v4;
  sub_1BA76EAE0(&v11, v10);
  v6 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BA785F30(v10, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v12 = v5;
    *(_QWORD *)&v11 = v2;
    *((_QWORD *)&v11 + 1) = v1;
    sub_1BA76EAE0(&v11, v10);
    swift_bridgeObjectRetain();
    v8 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v10, 25705, 0xE200000000000000, v8);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1BAFA44E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unsigned __int8 v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  void *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  _OWORD v46[2];
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v4);
  v6 = *a1;
  v5 = a1[1];
  v8 = a1[3];
  v7 = a1[4];
  v9 = a1[5];
  v45 = *((_BYTE *)a1 + 48);
  v10 = a1[8];
  v42 = a1[7];
  v43 = *((_BYTE *)a1 + 16);
  v44 = *((_BYTE *)a1 + 72);
  v11 = *(_QWORD *)(a2 + 8);
  if (!NFInternalBuild())
    goto LABEL_5;
  v41 = (void *)objc_opt_self();
  v12 = objc_msgSend(v41, sel_standardUserDefaults);
  v13 = v10;
  v14 = v8;
  v15 = (void *)sub_1BB872970();
  v16 = objc_msgSend(v12, sel_BOOLForKey_, v15);

  v8 = v14;
  v10 = v13;
  if (v11 > 1)
    goto LABEL_5;
  if ((v16 & 1) != 0)
  {
    v17 = objc_msgSend(v41, sel_standardUserDefaults);
    v18 = (void *)sub_1BB872970();
    objc_msgSend(v17, sel_setBool_forKey_, 0, v18);

    return 0;
  }
  else
  {
LABEL_5:
    v20 = MEMORY[0x1E0DEB418];
    v48 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v47 = v6;
    sub_1BA76EAE0(&v47, v46);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v46, 0x73736572676F7270, 0xED00006C6576654CLL, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    v48 = v20;
    *(_QWORD *)&v47 = v5;
    sub_1BA76EAE0(&v47, v46);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v46, 0x6172754479616C70, 0xEC0000006E6F6974, v22);
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEAFA0];
    v48 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v47) = v43;
    sub_1BA76EAE0(&v47, v46);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v46, 0x6465766C6F537369, 0xE800000000000000, v24);
    swift_bridgeObjectRelease();
    v48 = v23;
    LOBYTE(v47) = v44;
    sub_1BA76EAE0(&v47, v46);
    v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BA785F30(v46, 0x6576655264657375, 0xEA00000000006C61, v25);
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
    {
      v48 = v20;
      *(_QWORD *)&v47 = v9;
      sub_1BA76EAE0(&v47, v46);
      v26 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BA785F30(v46, 0x65726F6373, 0xE500000000000000, v26);
      swift_bridgeObjectRelease();
    }
    if (v10)
    {
      v48 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v47 = v42;
      *((_QWORD *)&v47 + 1) = v10;
      sub_1BA76EAE0(&v47, v46);
      swift_bridgeObjectRetain();
      v27 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BA785F30(v46, 0x44496B6E6172, 0xE600000000000000, v27);
      swift_bridgeObjectRelease();
    }
    if (v7 >> 60 != 15)
    {
      sub_1BA69D44C(v8, v7);
      sub_1BB8729DC();
      v28 = sub_1BB8729B8();
      if (v29)
      {
        v48 = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v47 = v28;
        *((_QWORD *)&v47 + 1) = v29;
        sub_1BA76EAE0(&v47, v46);
        v30 = swift_isUniquelyReferenced_nonNull_native();
        sub_1BA785F30(v46, 0x73736572676F7270, 0xEC00000061746144, v30);
        swift_bridgeObjectRelease();
      }
      sub_1BA69D490(v8, v7);
    }
    v31 = (void *)objc_opt_self();
    v32 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v47 = 0;
    v33 = objc_msgSend(v31, sel_dataWithJSONObject_options_error_, v32, 2, &v47);

    v34 = (id)v47;
    if (v33)
    {
      v35 = sub_1BB86C6E8();
      v37 = v36;

      sub_1BB8729DC();
      v19 = sub_1BB8729B8();
      sub_1BA69D314(v35, v37);
    }
    else
    {
      v38 = v34;
      v39 = (void *)sub_1BB86C484();

      swift_willThrow();
      return 0;
    }
  }
  return v19;
}

uint64_t sub_1BAFA4A88(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _OWORD *v14;
  int v15;
  Swift::String_optional v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD *v36;
  _OWORD v37[2];
  Swift::String_optional v38;
  uint64_t v39;

  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - v8;
  swift_getObjectType();
  v10 = objc_msgSend(a1, sel_publishDate);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
LABEL_30:
    sub_1BA502AD0((uint64_t)v9, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 0;
  }
  v11 = v10;
  sub_1BB86C874();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
    goto LABEL_30;
  sub_1BA502AD0((uint64_t)v9, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v12 = 0;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v15 = byte_1E7254DC8[v12 + 32];
    LOBYTE(v38.value._countAndFlagsBits) = byte_1E7254DC8[v12 + 32];
    v16 = FCPuzzleProviding.publishDateString(format:)((NewsFeed::PuzzlePublishDateFormat)&v38);
    if (!v16.value._object)
      goto LABEL_6;
    v17 = 0x6D756964656DLL;
    if (v15 != 1)
      v17 = 1735290732;
    v18 = 0xE600000000000000;
    if (v15 != 1)
      v18 = 0xE400000000000000;
    v19 = v15 ? v17 : 0x74726F6873;
    v20 = v15 ? v18 : 0xE500000000000000;
    v39 = MEMORY[0x1E0DEA968];
    v38 = v16;
    sub_1BA76EAE0(&v38, v37);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = v13;
    v23 = sub_1BA6E35A8(v19, v20);
    v24 = v13[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v13[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v13 = v36;
        if ((v22 & 1) == 0)
          goto LABEL_25;
      }
      else
      {
        sub_1BB4C18B8();
        v13 = v36;
        if ((v27 & 1) == 0)
          goto LABEL_25;
      }
    }
    else
    {
      sub_1BA7860C8(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_1BA6E35A8(v19, v20);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_34;
      v23 = v28;
      v13 = v36;
      if ((v27 & 1) == 0)
      {
LABEL_25:
        v13[(v23 >> 6) + 8] |= 1 << v23;
        v30 = (uint64_t *)(v13[6] + 16 * v23);
        *v30 = v19;
        v30[1] = v20;
        sub_1BA76EAE0(v37, (_OWORD *)(v13[7] + 32 * v23));
        v31 = v13[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_33;
        v13[2] = v33;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    v14 = (_OWORD *)(v13[7] + 32 * v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    sub_1BA76EAE0(v37, v14);
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    if (++v12 == 3)
      return (uint64_t)v13;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BAFA4DF4(void *a1)
{
  id v2;
  void *v3;
  id v4;

  if (!NFInternalBuild())
    return (uint64_t)objc_msgSend(a1, sel_showInfoModalOnFirstPlay);
  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_1BB872970();
  v4 = objc_msgSend(v2, sel_integerForKey_, v3);

  if (v4 == (id)2)
    return 0;
  if (v4 != (id)1)
    return (uint64_t)objc_msgSend(a1, sel_showInfoModalOnFirstPlay);
  return 1;
}

uint64_t sub_1BAFA4EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleHistoryInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFA4EF8(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = objc_msgSend(*(id *)(a1 + 16), sel_JSONString);
  v4 = sub_1BB8729A0();
  v6 = v5;

  v7 = objc_msgSend(*(id *)(a2 + 16), sel_JSONString);
  v8 = sub_1BB8729A0();
  v10 = v9;

  if (v4 == v8 && v6 == v10)
    v12 = 1;
  else
    v12 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t storeEnumTagSinglePayload for PuzzleDatastoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFA500C + 4 * byte_1BB8DBF45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFA5040 + 4 * asc_1BB8DBF40[v4]))();
}

uint64_t sub_1BAFA5040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFA5048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFA5050);
  return result;
}

uint64_t sub_1BAFA505C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFA5064);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFA5068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFA5070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleDatastoreError()
{
  return &type metadata for PuzzleDatastoreError;
}

unint64_t sub_1BAFA5090()
{
  unint64_t result;

  result = qword_1EF2B7D18;
  if (!qword_1EF2B7D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC008, &type metadata for PuzzleDatastoreError);
    atomic_store(result, (unint64_t *)&qword_1EF2B7D18);
  }
  return result;
}

void static FormatSourceItemTipTraitsDefaultStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

BOOL static FormatSourceItemTipTraitsDefaultStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BOOL8 v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = (v3 & 1) != 0 || *(_QWORD *)(v1 + 16) != 0;
  sub_1BA896BB8(*(_QWORD *)a1, v2, v3);
  sub_1BA896BE0(v1, v2, v3);
  sub_1BA896BE0(MEMORY[0x1E0DEE9D8], 0, 0);
  return v4;
}

void sub_1BAFA5160(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

BOOL sub_1BAFA5174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BOOL8 v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = (v3 & 1) != 0 || *(_QWORD *)(v1 + 16) != 0;
  sub_1BA896BB8(*(_QWORD *)a1, v2, v3);
  sub_1BA896BE0(v1, v2, v3);
  sub_1BA896BE0(MEMORY[0x1E0DEE9D8], 0, 0);
  return v4;
}

unint64_t sub_1BAFA51EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFA5210();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFA5210()
{
  unint64_t result;

  result = qword_1EF2B7D20;
  if (!qword_1EF2B7D20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipTraitsDefaultStrategy, &type metadata for FormatSourceItemTipTraitsDefaultStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B7D20);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceItemTipTraitsDefaultStrategy()
{
  return &type metadata for FormatSourceItemTipTraitsDefaultStrategy;
}

id SharingIssueImageActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v4;
  __int128 v5;
  unint64_t v6;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage))
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage);
    v6 = sub_1BA49DEA8();
    *(_QWORD *)&v5 = v4;
    sub_1BA76EAE0(&v5, (_OWORD *)a1);
    return v4;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = sub_1BAFA52EC();
    *(_QWORD *)a1 = MEMORY[0x1E0DEE9B8] + 8;
    return 0;
  }
}

unint64_t sub_1BAFA52EC()
{
  unint64_t result;

  result = qword_1EF2B7D98;
  if (!qword_1EF2B7D98)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B7D98);
  }
  return result;
}

void SharingIssueImageActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;

  if (!a1)
    goto LABEL_9;
  if (sub_1BB8729A0() == 0xD000000000000026 && v5 == 0x80000001BB968360)
  {
    v6 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v7 = sub_1BB874398();
  v8 = a1;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {

LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
LABEL_6:
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage);
  if (v9)
  {
    v14 = sub_1BA49DEA8();
    *(_QWORD *)&v13 = v9;
    v10 = v9;

    sub_1BA76EAE0(&v13, (_OWORD *)a2);
  }
  else
  {
    sub_1BA6EDAC4();
    v12 = v11;
    *(_QWORD *)(a2 + 24) = sub_1BAFA54B8();

    *(_QWORD *)a2 = v12;
  }
}

unint64_t sub_1BAFA54B8()
{
  unint64_t result;

  result = qword_1EF2B7DA0;
  if (!qword_1EF2B7DA0)
  {
    sub_1BA6EDAC4();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B7DA0);
  }
  return result;
}

id SharingIssueImageActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingIssueImageActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingIssueImageActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharingIssueImageActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingIssueImageActivityItemSource()
{
  return swift_lookUpClassMethod();
}

void FormatPuzzleStatisticBinding.Text.text(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a1;
  v40 = type metadata accessor for PuzzleLeaderboardEntry();
  v36 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v28 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AD7D0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v28 - v7;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4390, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, v2);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v38 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v41 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  MEMORY[0x1E0C80A78](v41);
  v34 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v30 = (char *)&v28 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v33 = (char *)&v28 - v22;
  v29 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v29);
  v35 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v24);
  v25 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  __asm { BR              X10 }
}

void sub_1BAFA5A3C()
{
  type metadata accessor for FeedPuzzleStatistic();
  PuzzleStatistic.identifier.getter();
}

BOOL static FormatPuzzleStatisticBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BAFA65A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4390, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  v13 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v14 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v13 + *(int *)(v14 + 20), (uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
    goto LABEL_5;
  }
  sub_1BAFA75E4((uint64_t)v6, (uint64_t)v12);
  sub_1BAFA75E4((uint64_t)v12, (uint64_t)v9);
  v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_1BA5C699C((uint64_t)v9, (unint64_t *)&unk_1ED3C4390, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_5:
    v17 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  sub_1BA5193C4((uint64_t)v9, a2, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
}

uint64_t FormatPuzzleStatisticBinding.Text.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 10;
  if (v2 < 0xA)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static FormatPuzzleStatisticBinding.Text.CodingType.allCases.getter()
{
  return &unk_1E724FB80;
}

uint64_t FormatPuzzleStatisticBinding.Text.CodingType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFA6824 + 4 * byte_1BB8DC118[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAFA6824()
{
  return 0x6974736974617473;
}

unint64_t sub_1BAFA6848()
{
  return 0xD000000000000013;
}

void sub_1BAFA690C(char *a1)
{
  sub_1BB7F1718(*a1);
}

uint64_t sub_1BAFA6918()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1B18((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BAFA695C(uint64_t a1)
{
  char *v1;

  sub_1BA9D1B18(a1, *v1);
}

uint64_t sub_1BAFA6964()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1B18((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BAFA69A4@<X0>(char *a1@<X8>)
{
  return FormatPuzzleStatisticBinding.Text.CodingType.init(rawValue:)(a1);
}

uint64_t sub_1BAFA69B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatPuzzleStatisticBinding.Text.CodingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAFA69D4()
{
  sub_1BAFA75A0();
  return sub_1BB872D60();
}

uint64_t sub_1BAFA6A30()
{
  sub_1BAFA75A0();
  return sub_1BB872D0C();
}

void sub_1BAFA6A7C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724FB80;
}

uint64_t FormatPuzzleStatisticBinding.Text.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleStatisticBinding.Text.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BAFA6AF8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Text.init(from:)(a1, a2);
}

void sub_1BAFA6B0C(_QWORD *a1)
{
  FormatPuzzleStatisticBinding.Text.encode(to:)(a1);
}

void sub_1BAFA6B20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BAFA6B98()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  sub_1BA4C2DD8(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  *(_BYTE *)(v3 - 58) = 0;
  result = sub_1BAFA7220(0x696669746E656449, 0xEA00000000007265, v1, (_BYTE *)(v3 - 58), (_QWORD *)(v6 + v5));
  *v0 = v6;
  return result;
}

uint64_t sub_1BAFA7220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;

  LOBYTE(v13) = *a4;
  FormatPuzzleStatisticBinding.Text.text(from:)(a3);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    *(_QWORD *)&v13 = v9;
    *((_QWORD *)&v13 + 1) = v10;
    *((_QWORD *)&v14 + 1) = MEMORY[0x1E0DEA968];
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = 0u;
    v14 = 0u;
  }
  sub_1BAAF40BC(a1, a2, (uint64_t)&v13, a5);
  return sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
}

unint64_t sub_1BAFA72D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CFA20;
  if (!qword_1ED3CFA20)
  {
    sub_1BA4AD288(255, (unint64_t *)&unk_1ED3CFA28, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEBF30]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF68], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CFA20);
  }
  return result;
}

unint64_t sub_1BAFA7334()
{
  unint64_t result;

  result = qword_1EF2B7DD0;
  if (!qword_1EF2B7DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text.CodingType, &type metadata for FormatPuzzleStatisticBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B7DD0);
  }
  return result;
}

unint64_t sub_1BAFA737C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B7DD8;
  if (!qword_1EF2B7DD8)
  {
    sub_1BA4AD288(255, &qword_1EF2B7DE0, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Text.CodingType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B7DD8);
  }
  return result;
}

unint64_t sub_1BAFA73E0()
{
  unint64_t result;

  result = qword_1EF2B7DE8;
  if (!qword_1EF2B7DE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text, &type metadata for FormatPuzzleStatisticBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B7DE8);
  }
  return result;
}

unint64_t sub_1BAFA7424(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFA7448();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFA7448()
{
  unint64_t result;

  result = qword_1EF2B7DF0;
  if (!qword_1EF2B7DF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text, &type metadata for FormatPuzzleStatisticBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B7DF0);
  }
  return result;
}

unint64_t sub_1BAFA748C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75C44();
  a1[2] = sub_1BAEF9B90();
  result = sub_1BAFA73E0();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Text()
{
  return &type metadata for FormatPuzzleStatisticBinding.Text;
}

uint64_t _s4TextOwst_4_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BAFA7520 + 4 * byte_1BB8DC13B[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BAFA7554 + 4 * byte_1BB8DC136[v4]))();
}

uint64_t sub_1BAFA7554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFA755C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFA7564);
  return result;
}

uint64_t sub_1BAFA7570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFA7578);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BAFA757C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFA7584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Text.CodingType()
{
  return &type metadata for FormatPuzzleStatisticBinding.Text.CodingType;
}

unint64_t sub_1BAFA75A0()
{
  unint64_t result;

  result = qword_1ED3ACA40;
  if (!qword_1ED3ACA40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text.CodingType, &type metadata for FormatPuzzleStatisticBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA40);
  }
  return result;
}

uint64_t sub_1BAFA75E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4390, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BAFA7640()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  char *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v18[4];

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem];
  }
  else
  {
    ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    v5 = v0;
    v6 = (void *)sub_1BB872970();
    if (ObjectType)
    {
      v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      v8 = *(_QWORD *)(ObjectType - 8);
      v9 = MEMORY[0x1E0C80A78](v7);
      v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v8 + 16))(v11, v9);
      v12 = sub_1BB874380();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      v12 = 0;
    }
    v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 0, v12, sel_doNext, v18[0]);

    swift_unknownObjectRelease();
    v15 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v14;
    v3 = v14;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

void sub_1BAFA77A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8];
  v3 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BAFAC70C(v4, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections] = v5;
  swift_bridgeObjectRelease();
  sub_1BAFA799C();
  v6 = objc_msgSend(v0, sel_navigationItem);
  v7 = objc_msgSend(v6, sel_searchController);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_searchBar);

    objc_msgSend(v8, sel_setEnabled_, *(_QWORD *)(*(_QWORD *)&v0[v3] + 16) != 0);
  }
}

void sub_1BAFA78D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BAFAC70C(v6, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections) = v7;
  swift_bridgeObjectRelease();
  sub_1BAFA799C();
}

void sub_1BAFA799C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView), sel_reloadData);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB1EB36C(v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAFA7A54();
}

void sub_1BAFA7A54()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = sub_1BAFA7640();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection);
  swift_beginAccess();
  objc_msgSend(v1, sel_setEnabled_, *(_QWORD *)(v2[2] + 16) != 0);

  if (*(_QWORD *)(*v2 + 16))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB87420C();
    sub_1BB872AFC(v3);
    swift_bridgeObjectRelease();
    sub_1BB872AFC("v40@0:8@16@24@32");
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
  }
}

id sub_1BAFA7BC0()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id result;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  objc_super v67;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB8716B0();
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  MEMORY[0x1E0C80A78](v3);
  v63 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB8716BC();
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  MEMORY[0x1E0C80A78](v5);
  v60 = (_QWORD *)((char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for FormatVersioningModeSelection(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67.receiver = v0;
  v67.super_class = ObjectType;
  v59[2] = ObjectType;
  objc_msgSendSuper2(&v67, sel_viewDidLoad, v8);
  v11 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView];
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_systemBackgroundColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v13);

  objc_msgSend(v11, sel_setDelegate_, v1);
  objc_msgSend(v11, sel_setDataSource_, v1);
  objc_msgSend(v11, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v11, sel_setAllowsMultipleSelectionDuringEditing_, 1);
  v14 = objc_msgSend(v12, sel_secondaryLabelColor);
  objc_msgSend(v11, sel_setTintColor_, v14);

  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, sel_setTableFooterView_, v15);

  type metadata accessor for SubtitleTableViewCell();
  sub_1BB873234();
  type metadata accessor for DebugFormatUploadEntryTableViewCell();
  sub_1BB873234();
  type metadata accessor for DebugFormatUploadHiddenTableViewCell();
  sub_1BB873234();
  type metadata accessor for DebugJournalHeaderView();
  sub_1BB873228();
  objc_msgSend(v11, sel_setEditing_animated_, 1, 0);
  objc_msgSend(v11, sel_setAllowsFocusDuringEditing_, 0);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v17 = result;
    objc_msgSend(result, sel_addSubview_, v11);

    v18 = objc_msgSend(v1, sel_navigationItem);
    v19 = (void *)sub_1BB872970();
    objc_msgSend(v18, sel_setTitle_, v19);

    v20 = objc_msgSend(v1, sel_navigationItem);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v59[0] = v21;
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BB8856E0;
    v23 = (void *)sub_1BB872970();
    v24 = (void *)objc_opt_self();
    v25 = objc_msgSend(v24, sel_systemImageNamed_, v23);

    swift_allocObject();
    swift_unknownObjectWeakInit();
    v26 = objc_allocWithZone((Class)sub_1BB870A08());
    *(_QWORD *)(v22 + 32) = sub_1BB8709FC();
    v66 = v22;
    sub_1BB872DCC();
    v59[1] = sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    v27 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setLeftBarButtonItems_, v27);

    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C40]), sel_initWithSearchResultsController_, 0);
    objc_msgSend(v28, sel_setSearchResultsUpdater_, v1);
    objc_msgSend(v28, sel_setObscuresBackgroundDuringPresentation_, 0);
    objc_msgSend(v28, sel_setHidesNavigationBarDuringPresentation_, 0);
    v29 = objc_msgSend(v28, sel_searchBar);
    v30 = objc_msgSend(v12, sel_systemBlueColor);
    objc_msgSend(v29, sel_setTintColor_, v30);

    v31 = objc_msgSend(v28, sel_searchBar);
    v32 = (void *)sub_1BB872970();
    objc_msgSend(v31, sel_setPlaceholder_, v32);

    v33 = objc_msgSend(v28, sel_searchBar);
    v34 = objc_msgSend(v33, sel_searchTextField);

    objc_msgSend(v34, sel_setAutocorrectionType_, 1);
    v35 = objc_msgSend(v28, sel_searchBar);
    v36 = objc_msgSend(v35, sel_searchTextField);

    objc_msgSend(v36, sel_setAutocapitalizationType_, 0);
    v37 = objc_msgSend(v28, sel_searchBar);
    v38 = (void *)sub_1BB872970();
    v39 = objc_msgSend(v24, sel_systemImageNamed_, v38);

    objc_msgSend(v37, sel_setImage_forSearchBarIcon_state_, v39, 0, 0);
    v40 = objc_msgSend(v28, sel_searchBar);
    objc_msgSend(v40, sel_setShowsCancelButton_, 0);

    v41 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v41, sel_setSearchController_, v28);

    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    sub_1BAFAD890((uint64_t)v10);
    v44 = v43;
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersioningModeSelection);
    objc_msgSend(v42, sel_setAttributedText_, v44);

    objc_msgSend(v42, sel_setNumberOfLines_, 2);
    v45 = sub_1BAFA7640();
    objc_msgSend(v45, sel_setEnabled_, 0);

    v46 = sub_1BAFA7640();
    v47 = objc_msgSend(v12, sel_systemBlueColor);
    objc_msgSend(v46, sel_setTintColor_, v47);

    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1BB8DC3E0;
    v49 = (void *)sub_1BB872970();
    v50 = objc_msgSend(v24, sel_systemImageNamed_, v49);

    v51 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v52 = v1;
    v53 = objc_msgSend(v51, sel_initWithImage_style_target_action_, v50, 0, v52, sel_doTocWithSender_);

    *(_QWORD *)(v48 + 32) = v53;
    *(_QWORD *)(v48 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(_QWORD *)(v48 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v42);
    *(_QWORD *)(v48 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(_QWORD *)(v48 + 64) = sub_1BAFA7640();
    v66 = v48;
    sub_1BB872DCC();
    v54 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v52, sel_setToolbarItems_, v54);

    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    swift_retain();
    sub_1BB86D2D0();
    swift_release();
    sub_1BB86D2DC();
    swift_release();
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E470();
    swift_release();
    sub_1BB86FDCC();
    v55 = v60;
    static CoverView.loading.getter(v60);
    v57 = v63;
    v56 = v64;
    v58 = v65;
    (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E0DBC810], v65);
    sub_1BB86FDC0();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t))(v61 + 8))(v55, v62);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAFA8774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BA49A224(0, &qword_1EF2B7EB0);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB895110;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BB8856F0;
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
  swift_retain();
  *(_QWORD *)(v1 + 32) = sub_1BB8738F4();
  swift_retain();
  *(_QWORD *)(v1 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v0 + 32) = sub_1BB8736C0();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB8856F0;
  swift_retain();
  *(_QWORD *)(v2 + 32) = sub_1BB8738F4();
  swift_retain();
  *(_QWORD *)(v2 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v0 + 40) = sub_1BB8736C0();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856F0;
  swift_retain();
  *(_QWORD *)(v3 + 32) = sub_1BB8738F4();
  swift_retain();
  *(_QWORD *)(v3 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v0 + 48) = sub_1BB8736C0();
  sub_1BB872DCC();
  return sub_1BB8736B4();
}

void sub_1BAFA8B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (char *)v3;
    swift_beginAccess();
    v5 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v5);
    swift_endAccess();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1BAFA7A54();

  }
}

void sub_1BAFA8C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (char *)v3;
    swift_beginAccess();
    v5 = swift_bridgeObjectRetain();
    sub_1BB024F00(v5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1BAFA7A54();

  }
}

void sub_1BAFA8CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (char *)v3;
    swift_beginAccess();
    v5 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v5);
    swift_endAccess();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1BAFA7A54();

  }
}

void sub_1BAFA8D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (char *)v3;
    swift_beginAccess();
    v5 = swift_bridgeObjectRetain();
    sub_1BB024F00(v5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_reloadData);
    sub_1BAFA7A54();

  }
}

void sub_1BAFA8E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v11;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    v11 = v5;
    if (*(_QWORD *)(v5 + 16))
    {
      v7 = 7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = &byte_1E72512F8;
      do
      {
        v9 = *v8++;
        sub_1BAC76408(v9, &v10);
        --v7;
      }
      while (v7);
      v5 = v11;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BAFA78D0(v6, v5);

  }
}

void sub_1BAFA8F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  uint64_t v10;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    v6 = 7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = &byte_1E72512F8;
    do
    {
      v8 = *v7++;
      sub_1BA9DAAB4(&v9, v8);
      --v6;
    }
    while (v6);
    sub_1BAFA78D0(v5, v10);

  }
}

void sub_1BAFA8FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;

  swift_getObjectType();
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor)+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue), sel_cancelAllOperations);
  *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController)
            + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff) = 0;
  swift_release();
  v1 = swift_retain();
  sub_1BA96DD04(v1);
  swift_release();
  sub_1BAFABF14(MEMORY[0x1E0DEE9D8]);
  swift_retain();
  sub_1BB86E494();
  v2 = swift_release();
  if ((v6 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](v2);
    sub_1BB86EC14();
    v3 = (void *)sub_1BB86E854();
    sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B7E88, (uint64_t)&type metadata for DebugFormatUploadSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB86E974();
    swift_release();

    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v4 = (void *)sub_1BB87345C();
    sub_1BB86E98C();
    swift_release();

    v5 = (void *)sub_1BB87345C();
    sub_1BB86E9B0();
    swift_release();
    swift_release();

  }
}

void sub_1BAFA91D0()
{
  sub_1BAFA8FC0();
}

void sub_1BAFA92BC()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  objc_super v23;

  v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, sel_viewWillLayoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView];
  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    sub_1BB86FDA8();
    v13 = objc_msgSend(v1, sel_splitViewController);
    if (v13)
    {
      v14 = v13;
      if ((sub_1BB8733D8() & 1) != 0)
      {
        v15 = objc_msgSend(v1, sel_navigationItem);
        sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
        v16 = (void *)sub_1BB872D9C();
        objc_msgSend(v15, sel_setRightBarButtonItems_, v16);

LABEL_8:
        return;
      }

    }
    v15 = objc_msgSend(v1, sel_navigationItem);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB8856E0;
    v18 = (void *)sub_1BB872970();
    v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v18);

    if (v19)
    {
      v20 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
      v21 = v1;
      v22 = objc_msgSend(v20, sel_initWithImage_style_target_action_, v19, 0, v21, sel_doDismiss);

      *(_QWORD *)(v17 + 32) = v22;
      sub_1BB872DCC();
      sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
      v16 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_setRightBarButtonItems_, v16);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatUploadViewController()
{
  return objc_opt_self();
}

void sub_1BAFA9708()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections];
  v3 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = (uint64_t *)(v2 + 56);
    do
    {
      v6 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v7 = v1;
      v8 = sub_1BAFACF54(v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      sub_1BB386B10(v8);
      v5 += 4;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v12;
  }
  objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadConfirmViewController());
  v9 = swift_retain();
  v10 = (char *)sub_1BA92EDD4(v9, v3);
  swift_release();
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate + 8] = &off_1E72D49E8;
  swift_unknownObjectWeakAssign();
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v10);
  objc_msgSend(v11, sel_setModalPresentationStyle_, 1);
  objc_msgSend(v11, sel_setModalInPresentation_, 1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v11, 1, 0);

}

void sub_1BAFA98E4(uint64_t a1)
{
  char *v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(unint64_t, _QWORD, uint64_t, uint64_t);
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  unint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  id v32;
  id v33;
  id v34;
  _QWORD *v35;
  unint64_t v36;
  void *v37;
  id v38;
  unint64_t v39;
  id v40;
  id v41;
  id v42;
  _QWORD *v43;
  unint64_t v44;
  void *v45;
  id v46;
  unint64_t v47;
  id v48;
  id v49;
  id v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  __int128 v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  objc_class *v58;
  _BYTE *v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  char *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(_QWORD *, _QWORD, uint64_t, uint64_t);
  id v76;
  id v77;
  id v78;
  objc_super v79;
  _OWORD v80[2];
  uint64_t v81;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  sub_1BA8C88C8(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 72);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB8827B0;
  v10 = (void *)sub_1BB872970();
  v78 = (id)objc_opt_self();
  v11 = objc_msgSend(v78, sel_systemImageNamed_, v10);

  if (!v11)
  {
    __break(1u);
    goto LABEL_12;
  }
  v74 = v1;
  v72 = a1;
  v73 = v9;
  v12 = v9 + v7;
  v77 = (id)objc_opt_self();
  v13 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  v14 = objc_msgSend(v11, sel_imageWithConfiguration_, v13);

  v76 = (id)objc_opt_self();
  v15 = objc_msgSend(v76, sel_systemPinkColor);
  v16 = type metadata accessor for FormatInspectionItem(0);
  v17 = (_QWORD *)(v12 + *(int *)(v16 + 24));
  *v17 = v14;
  v17[1] = v15;
  v18 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v75 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v75(v17, 0, 1, v18);
  *(_OWORD *)v12 = xmmword_1BB8DC3F0;
  *(_QWORD *)(v12 + 16) = 0xD000000000000063;
  *(_QWORD *)(v12 + 24) = 0x80000001BB973940;
  v19 = v12 + *(int *)(v16 + 28);
  *(_QWORD *)v19 = 0;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = -1;
  v20 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v20(v12, 0, 1, v16);
  v21 = (void *)sub_1BB872970();
  v22 = objc_msgSend(v78, sel_systemImageNamed_, v21);

  if (!v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v23 = v12 + v8;
  v24 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  v25 = objc_msgSend(v22, sel_imageWithConfiguration_, v24);

  v26 = objc_msgSend(v76, sel_systemGreenColor);
  v27 = (_QWORD *)(v12 + v8 + *(int *)(v16 + 24));
  *v27 = v25;
  v27[1] = v26;
  swift_storeEnumTagMultiPayload();
  v75(v27, 0, 1, v18);
  *(_OWORD *)v23 = xmmword_1BB8DC400;
  *(_QWORD *)(v23 + 16) = 0xD00000000000005BLL;
  *(_QWORD *)(v23 + 24) = 0x80000001BB9739B0;
  v28 = v12 + v8 + *(int *)(v16 + 28);
  *(_QWORD *)v28 = 0;
  *(_QWORD *)(v28 + 8) = 0;
  *(_BYTE *)(v28 + 16) = -1;
  v20(v12 + v8, 0, 1, v16);
  v29 = (void *)sub_1BB872970();
  v30 = objc_msgSend(v78, sel_systemImageNamed_, v29);

  if (!v30)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = v12 + 2 * v8;
  v32 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  v33 = objc_msgSend(v30, sel_imageWithConfiguration_, v32);

  v34 = objc_msgSend(v76, sel_systemBlueColor);
  v35 = (_QWORD *)(v31 + *(int *)(v16 + 24));
  *v35 = v33;
  v35[1] = v34;
  swift_storeEnumTagMultiPayload();
  v75(v35, 0, 1, v18);
  *(_OWORD *)v31 = xmmword_1BB8AB4B0;
  *(_QWORD *)(v31 + 16) = 0xD00000000000003CLL;
  *(_QWORD *)(v31 + 24) = 0x80000001BB973A10;
  v36 = v31 + *(int *)(v16 + 28);
  *(_QWORD *)v36 = 0;
  *(_QWORD *)(v36 + 8) = 0;
  *(_BYTE *)(v36 + 16) = -1;
  v20(v31, 0, 1, v16);
  v37 = (void *)sub_1BB872970();
  v38 = objc_msgSend(v78, sel_systemImageNamed_, v37);

  if (!v38)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v39 = v12 + 3 * v8;
  v40 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  v41 = objc_msgSend(v38, sel_imageWithConfiguration_, v40);

  v42 = objc_msgSend(v76, sel_systemPurpleColor);
  v43 = (_QWORD *)(v39 + *(int *)(v16 + 24));
  *v43 = v41;
  v43[1] = v42;
  swift_storeEnumTagMultiPayload();
  v75(v43, 0, 1, v18);
  *(_OWORD *)v39 = xmmword_1BB8DC410;
  *(_QWORD *)(v39 + 16) = 0xD000000000000052;
  *(_QWORD *)(v39 + 24) = 0x80000001BB973A50;
  v44 = v39 + *(int *)(v16 + 28);
  *(_QWORD *)v44 = 0;
  *(_QWORD *)(v44 + 8) = 0;
  *(_BYTE *)(v44 + 16) = -1;
  v20(v39, 0, 1, v16);
  v45 = (void *)sub_1BB872970();
  v46 = objc_msgSend(v78, sel_systemImageNamed_, v45);

  if (!v46)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v47 = v12 + 4 * v8;
  v48 = objc_msgSend(v77, sel_configurationWithPointSize_, 15.0);
  v49 = objc_msgSend(v46, sel_imageWithConfiguration_, v48);

  v50 = objc_msgSend(v76, sel_systemRedColor);
  v51 = (_QWORD *)(v47 + *(int *)(v16 + 24));
  *v51 = v49;
  v51[1] = v50;
  swift_storeEnumTagMultiPayload();
  v75(v51, 0, 1, v18);
  *(_OWORD *)v47 = xmmword_1BB8DC420;
  *(_QWORD *)(v47 + 16) = 0xD000000000000062;
  *(_QWORD *)(v47 + 24) = 0x80000001BB973AB0;
  v52 = v47 + *(int *)(v16 + 28);
  *(_QWORD *)v52 = 0;
  *(_QWORD *)(v52 + 8) = 0;
  *(_BYTE *)(v52 + 16) = -1;
  v20(v47, 0, 1, v16);
  sub_1BAF89090(0, 0xE000000000000000, 0, 0, v73, v80);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v53 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v53;
  *(_QWORD *)(v53 + 48) = v81;
  v54 = v80[1];
  *(_OWORD *)(v53 + 16) = v80[0];
  *(_OWORD *)(v53 + 32) = v54;
  v55 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  v56 = *(_QWORD *)&v74[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor];
  swift_retain();
  v57 = sub_1BB6DED58((uint64_t)v55);
  swift_bridgeObjectRelease();
  v58 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  v59 = objc_allocWithZone(v58);
  v59[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v59[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v59[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v59[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v60 = &v59[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v60 = 0;
  v60[1] = 0xE000000000000000;
  v61 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v62 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v63 = v59;
  *(_QWORD *)&v59[v61] = objc_msgSend(v62, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v56;
  *(_QWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v57;
  *(_QWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v57;
  *(_QWORD *)&v63[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
  swift_retain();
  swift_bridgeObjectRetain();

  v79.receiver = v63;
  v79.super_class = v58;
  v64 = objc_msgSendSuper2(&v79, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v64, sel_setTitle_, 0);
  swift_release();
  v65 = objc_msgSend(v64, sel_navigationItem);
  v66 = (void *)sub_1BB872970();
  objc_msgSend(v65, sel_setTitle_, v66);

  v67 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v64);
  objc_msgSend(v67, sel_setModalPresentationStyle_, 7);
  v68 = objc_msgSend(v67, sel_popoverPresentationController);
  if (v68)
  {
    v69 = v68;
    objc_msgSend(v68, sel_setBarButtonItem_, v72);

  }
  v70 = objc_msgSend(v67, sel_popoverPresentationController);
  if (v70)
  {
    v71 = v70;
    objc_msgSend(v70, sel_setPermittedArrowDirections_, 2);

  }
  objc_msgSend(v74, sel_presentViewController_animated_completion_, v67, 1, 0);

}

unint64_t sub_1BAFAA43C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  char *v8;
  id v9;
  uint64_t inited;
  void **v11;
  void *v12;
  void *v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;

  v1 = v0;
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v4 = *(_QWORD *)(v3 + 32 * result + 56);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (result < *(_QWORD *)(v4 + 16))
  {
    v5 = v4 + 16 * result;
    v6 = *(char **)(v5 + 32);
    v7 = *(unsigned __int8 *)(v5 + 40);
    sub_1BA904664(v6, *(_BYTE *)(v5 + 40));
    swift_bridgeObjectRelease();
    if (v7)
    {
      if (v7 != 1)
      {
        type metadata accessor for SubtitleTableViewCell();
        v48 = v6;
        v49 = (void *)sub_1BB87321C();
        v50 = objc_msgSend(v49, sel_textLabel);
        if (v50)
        {
          v51 = v50;
          sub_1BA907794(v6);
          v52 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
          objc_msgSend(v51, sel_setText_, v52);

        }
        v53 = objc_msgSend(v49, sel_textLabel);
        if (v53)
        {
          v54 = v53;
          v55 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
          objc_msgSend(v54, sel_setFont_, v55);

        }
        v56 = objc_msgSend(v49, sel_textLabel);
        if (v56)
        {
          v57 = v56;
          v58 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
          objc_msgSend(v57, sel_setTextColor_, v58);

        }
        v59 = objc_msgSend(v49, sel_textLabel);
        if (v59)
        {
          v60 = v59;
          objc_msgSend(v59, sel_setNumberOfLines_, 0);

        }
        v61 = objc_msgSend(v49, sel_detailTextLabel);
        if (v61)
        {
          v62 = v61;
          objc_msgSend(v61, sel_setText_, 0);

        }
        v8 = v49;
        objc_msgSend(v8, sel_setSelectionStyle_, 0);
        sub_1BA90469C(v6, 2);
        sub_1BA90469C(v6, 2);

        return (unint64_t)v8;
      }
      type metadata accessor for DebugFormatUploadHiddenTableViewCell();
      swift_bridgeObjectRetain();
      v8 = (char *)sub_1BB87321C();
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
      objc_msgSend(v9, sel_setAlignment_, 1);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      v11 = (void **)MEMORY[0x1E0DC1138];
      *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
      v12 = *v11;
      *(_QWORD *)(inited + 32) = *v11;
      v13 = (void *)objc_opt_self();
      v14 = *MEMORY[0x1E0DC1438];
      v15 = v12;
      v16 = objc_msgSend(v13, sel_systemFontOfSize_weight_, 17.0, v14);
      v17 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
      *(_QWORD *)(inited + 40) = v16;
      v18 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v17;
      *(_QWORD *)(inited + 72) = v18;
      v19 = (void *)objc_opt_self();
      v20 = v18;
      v21 = objc_msgSend(v19, sel_systemBlueColor);
      v22 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      *(_QWORD *)(inited + 80) = v21;
      v23 = (void *)*MEMORY[0x1E0DC1178];
      *(_QWORD *)(inited + 104) = v22;
      *(_QWORD *)(inited + 112) = v23;
      *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
      *(_QWORD *)(inited + 120) = v9;
      v24 = v23;
      v25 = v9;
      sub_1BA76E82C(inited);
      v26 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      v27 = (void *)sub_1BB872970();
      type metadata accessor for Key(0);
      sub_1BA76F768();
      v28 = (void *)sub_1BB872760();
      swift_bridgeObjectRelease();
      v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

      objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button], sel_setAttributedTitle_forState_, v29, 0);
      v30 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_onTap];
      v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v6;
      v33 = v30;
      v34 = (void *)sub_1BB871338();

      sub_1BA90469C(v6, 1);
    }
    else
    {
      type metadata accessor for DebugFormatUploadEntryTableViewCell();
      swift_retain();
      v8 = (char *)sub_1BB87321C();
      v35 = objc_msgSend(v8, sel_textLabel);
      if (v35)
      {
        v36 = v35;
        v37 = sub_1BA84A7CC();
        objc_msgSend(v36, sel_setAttributedText_, v37);

      }
      v38 = objc_msgSend(v8, sel_textLabel);
      if (v38)
      {
        v39 = v38;
        objc_msgSend(v38, sel_setNumberOfLines_, 0);

      }
      v40 = objc_msgSend(v8, sel_detailTextLabel);
      if (v40)
      {
        v41 = v40;
        objc_msgSend(v40, sel_setNumberOfLines_, 0);

      }
      v42 = objc_msgSend(v8, sel_detailTextLabel);
      if (v42)
      {
        v43 = v42;
        v44 = sub_1BA84ABC0();
        objc_msgSend(v43, sel_setAttributedText_, v44);

      }
      v45 = OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff;
      v46 = *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff];
      v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_showDiff] = v46 != 0;
      if (v46)
        v47 = *(id *)&v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton];
      else
        v47 = 0;
      objc_msgSend(v8, sel_setEditingAccessoryView_, v47);

      if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController)
                     + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff))
      {
        swift_retain();
        sub_1BA86B20C();
        v65 = v64;
        if (*(_QWORD *)&v6[v45])
        {
          v66 = v63;
          sub_1BA86B20C();
          if (v66 == v68 && v65 == v67)
            v70 = 1;
          else
            v70 = sub_1BB874398();
          swift_bridgeObjectRelease();
        }
        else
        {
          v70 = 0;
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        v70 = 0;
      }
      v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected] = v70 & 1;
      sub_1BAF1EAD8();
      v71 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap];
      v72 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v73 = swift_allocObject();
      *(_QWORD *)(v73 + 16) = v72;
      *(_QWORD *)(v73 + 24) = v6;
      sub_1BA904664(v6, 0);
      v33 = v71;
      v74 = (void *)sub_1BB871338();
      sub_1BA90469C(v6, 0);
      sub_1BA90469C(v6, 0);

    }
    swift_release();
    return (unint64_t)v8;
  }
LABEL_48:
  __break(1u);
  return result;
}

void sub_1BAFAACB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void *v23;
  void *v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v4 = sub_1BB86CBE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0568, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  swift_beginAccess();
  v28 = (char *)MEMORY[0x1BCCE5D40](a1 + 16);
  if (v28)
  {
    v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_diff);
    if (v12)
    {
      v13 = *(char **)&v28[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController];
      *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff] = v12;
      swift_retain_n();
      v14 = v13;
      swift_release();
      v15 = swift_retain();
      sub_1BA96DD04(v15);

      v25[1] = v12;
      swift_release();
      swift_release();
      v27 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView;
      v16 = objc_msgSend(*(id *)&v28[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView], sel_indexPathsForSelectedRows);
      if (v16)
      {
        v17 = v16;
        v18 = sub_1BB872DB4();

      }
      else
      {
        v18 = MEMORY[0x1E0DEE9D8];
      }
      objc_msgSend(*(id *)&v28[v27], sel_reloadData);
      v19 = *(_QWORD *)(v18 + 16);
      v25[0] = v18;
      if (v19)
      {
        v20 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        v26 = *(_QWORD *)(v5 + 72);
        v21 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        while (1)
        {
          v21(v11, v20, v4);
          v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          v22(v11, 0, 1, v4);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
            break;
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
          v23 = *(void **)&v28[v27];
          v24 = (void *)sub_1BB86CB8C();
          objc_msgSend(v23, sel_selectRowAtIndexPath_animated_scrollPosition_, v24, 0, 0, v25[0]);

          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          v20 += v26;
          if (!--v19)
            goto LABEL_12;
        }
      }
      else
      {
        v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_12:
        v22(v11, 1, 1, v4);
      }
      swift_release();
      swift_bridgeObjectRelease();
    }

  }
}

void sub_1BAFAAF88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor);
    objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadHiddenContainerController());
    swift_retain();
    swift_bridgeObjectRetain();
    v7 = sub_1BB5E56B8(v6, a2);
    swift_release();
    v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v7);

    objc_msgSend(v8, sel_setModalPresentationStyle_, 1);
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v8, 1, 0);

  }
}

char *sub_1BAFAB138(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  type metadata accessor for DebugJournalHeaderView();
  v5 = (void *)sub_1BB873210();
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_systemBlueColor);
  objc_msgSend(v7, sel_setTintColor_, v8);

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (*(_QWORD *)(v9 + 16) <= a2)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x1BAFAB4C4);
  }
  v10 = *(unsigned __int8 *)(v9 + 32 * a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (objc_msgSend(v7, sel_textLabel))
    __asm { BR              X9 }
  if ((v10 - 7) > 1u)
  {
    v11 = OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel;
    v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    v13 = *(id *)&v7[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
    swift_bridgeObjectRetain();
    sub_1BAB0D26C(v10, v12);
    swift_bridgeObjectRelease();
    v14 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v14);

    objc_msgSend(*(id *)&v7[v11], sel_setHidden_, 0);
    v15 = (void *)sub_1BB86F898();
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_BYTE *)(v17 + 24) = v10;

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel], sel_setHidden_, 1);
  }
  return v7;
}

void sub_1BAFAB4E8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter);
    v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1BAB0D26C(a2, v8) & 1) != 0)
      sub_1BAC76408(a2, &v7);
    else
      sub_1BA9DAAB4(&v7, a2);
    sub_1BAFA78D0(v6, v8);

  }
}

unint64_t sub_1BAFAB73C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (result >= *(_QWORD *)(v7 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v7 + 32 * result + 56);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(_QWORD *)(v8 + 16))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v9 = v8 + 16 * result;
  v10 = *(void **)(v9 + 32);
  v11 = *(unsigned __int8 *)(v9 + 40);
  sub_1BA904664(v10, *(_BYTE *)(v9 + 40));
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_1BA90469C(v10, v11);
    v12 = sub_1BB86CBE0();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a2;
    v15 = 1;
  }
  else
  {
    sub_1BA90469C(v10, 0);
    v16 = sub_1BB86CBE0();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a2, a1, v16);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v14 = a2;
    v15 = 0;
    v12 = v16;
  }
  return v13(v14, v15, 1, v12);
}

void sub_1BAFAB998(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_1BB86CBD4();
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (v6 >= *(_QWORD *)(v7 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(v7 + 32 * v6 + 56);
  swift_bridgeObjectRetain();
  v9 = sub_1BB86CBC8();
  if ((v9 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v9 >= *(_QWORD *)(v8 + 16))
  {
LABEL_17:
    __break(1u);
    return;
  }
  v10 = v8 + 16 * v9;
  v11 = *(void **)(v10 + 32);
  v12 = *(unsigned __int8 *)(v10 + 40);
  sub_1BA904664(v11, *(_BYTE *)(v10 + 40));
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (v12 == 1)
      v13 = 1;
    else
      v13 = 2;
    sub_1BA90469C(v11, v13);
  }
  else
  {
    v14 = v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection;
    swift_beginAccess();
    v15 = *(_QWORD *)(v14 + 16);
    swift_retain();
    sub_1BB5743C8();
    v18 = sub_1BA761FE4(v16, v17, v15);
    swift_bridgeObjectRelease();
    sub_1BB5743C8();
    if ((v18 & 1) != 0)
    {
      sub_1BAC75A98(v19, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA6EE5AC(&v26, v19, v20);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1BA4B07F0(0, &qword_1EF2B7E80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = sub_1BB86CBE0();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 16))(v24 + v23, a2, v21);
    v25 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_reloadRowsAtIndexPaths_withRowAnimation_, v25, 5);

    sub_1BAFA7A54();
    sub_1BA90469C(v11, 0);
    sub_1BA90469C(v11, 0);
  }
}

uint64_t sub_1BAFABD68(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = v1;
  v4 = sub_1BB86BE54();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_searchBar, v6);
  v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    v11 = sub_1BB8729A0();
    v13 = v12;

    v17[0] = v11;
    v17[1] = v13;
    sub_1BB86BDA0();
    sub_1BA7114A0();
    sub_1BB873AEC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
  }
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter + 8);
  swift_bridgeObjectRetain();
  sub_1BAAD4BE0();
  v15 = swift_bridgeObjectRetain();
  sub_1BAFA78D0(v15, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFABF14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unsigned int *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_1BB8716B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB8716BC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  v34 = v12;
  if (v12)
  {
    v27 = v2;
    v28 = (_QWORD *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    v29 = v9;
    v30 = v8;
    v31 = v7;
    v32 = v5;
    v33 = v4;
    swift_bridgeObjectRetain();
    v26[1] = a1;
    v13 = (uint64_t *)(a1 + 56);
    v14 = MEMORY[0x1E0DEE9D8];
    v15 = v12;
    do
    {
      v19 = *v13;
      if (*(_QWORD *)(*v13 + 16))
      {
        v20 = *((_BYTE *)v13 - 24);
        v21 = *(v13 - 2);
        v22 = *(v13 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v36 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BAC7A45C(0, *(_QWORD *)(v14 + 16) + 1, 1);
          v14 = v36;
        }
        v17 = *(_QWORD *)(v14 + 16);
        v16 = *(_QWORD *)(v14 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1BAC7A45C(v16 > 1, v17 + 1, 1);
          v14 = v36;
        }
        *(_QWORD *)(v14 + 16) = v17 + 1;
        v18 = v14 + 32 * v17;
        *(_BYTE *)(v18 + 32) = v20;
        *(_QWORD *)(v18 + 40) = v21;
        *(_QWORD *)(v18 + 48) = v22;
        *(_QWORD *)(v18 + 56) = v19;
      }
      v13 += 4;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v5 = v32;
    v4 = v33;
    v8 = v30;
    v7 = v31;
    v11 = v28;
    v9 = v29;
    v2 = v27;
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if ((v35 & 1) != 0)
  {
    swift_release();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections) = v14;
  swift_bridgeObjectRelease();
  sub_1BAFA77A4();
  if (v34)
  {
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DBC7E8], v8);
    v24 = (unsigned int *)MEMORY[0x1E0DBC808];
  }
  else
  {
    static CoverView.loading.getter(v11);
    v24 = (unsigned int *)MEMORY[0x1E0DBC810];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v24, v4);
  sub_1BB86FDC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BAFAC1C8()
{
  unint64_t v0;
  char v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;

  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v0 = sub_1BB50F254(v5);
  v3 = sub_1BB5083E4(v0, v2, v1 & 1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BAFAC2B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t inited;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  _QWORD *v20;
  char v21[8];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(*(_QWORD *)(a1 + 8) + 16))
  {
    v3 = swift_bridgeObjectRetain();
    sub_1BB1EBDA0(v3, (uint64_t)v21);
    v4 = v21[0];
    v5 = v22;
    v6 = v23;
    v7 = v24;
    v8 = sub_1BB3924CC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1BB3924CC((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[4 * v10];
    *((_BYTE *)v11 + 32) = v4;
    v11[5] = v5;
    v11[6] = v6;
    v11[7] = v7;
    v20 = v8;
  }
  sub_1BA4AD288(0, &qword_1EF2B16F0, (uint64_t)&type metadata for DebugFormatUploadSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB898AA0;
  v21[0] = 0;
  v13 = swift_bridgeObjectRetain();
  sub_1BB1EBEA0(v13, v21, inited + 32);
  v21[0] = 1;
  v14 = swift_bridgeObjectRetain();
  sub_1BB1EBEA0(v14, v21, inited + 64);
  v21[0] = 2;
  v15 = swift_bridgeObjectRetain();
  sub_1BB1EBEA0(v15, v21, inited + 96);
  v21[0] = 3;
  v16 = swift_bridgeObjectRetain();
  sub_1BB1EBEA0(v16, v21, inited + 128);
  v21[0] = 6;
  v17 = swift_bridgeObjectRetain();
  sub_1BB1EBEA0(v17, v21, inited + 160);
  v21[0] = 4;
  v18 = swift_bridgeObjectRetain();
  sub_1BB1EBEA0(v18, v21, inited + 192);
  result = sub_1BB386B1C(inited);
  *a2 = v20;
  return result;
}

uint64_t sub_1BAFAC4C8(uint64_t *a1)
{
  return sub_1BAFABF14(*a1);
}

uint64_t sub_1BAFAC4F4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t result;
  uint64_t (*v13)(void);
  uint64_t inited;
  uint64_t v15;
  id v16;
  __int128 v17;
  void *v18;

  sub_1BA4B07F0(0, &qword_1EF2B7E98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4170], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  v18 = a1;
  v5 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v6 = sub_1BB86E500();
  v7 = swift_dynamicCast();
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (!v7)
  {
    v9(v4, 1, 1, v6);
    sub_1BA5C699C((uint64_t)v4, &qword_1EF2B7E98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4170]);
    goto LABEL_5;
  }
  v9(v4, 0, 1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v4, v6);
  v11 = *MEMORY[0x1E0DB4168];
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v4, v6);
  if (v10 != v11)
  {
LABEL_5:
    v13 = MEMORY[0x1E0DED1E8];
    sub_1BA4AD288(0, &qword_1EF2B16F0, (uint64_t)&type metadata for DebugFormatUploadSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    v17 = xmmword_1BB87CE70;
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4AD288(0, (unint64_t *)&qword_1EF2B7EA0, (uint64_t)&type metadata for DebugFormatUploadItem, (uint64_t (*)(_QWORD, uint64_t))v13);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(v15 + 32) = a1;
    *(_BYTE *)(v15 + 40) = 2;
    *(_BYTE *)(inited + 32) = 7;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = v15;
    v16 = a1;
    sub_1BAFABF14(inited);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  return result;
}

uint64_t sub_1BAFAC70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v36 = *(_QWORD *)(a1 + 16);
  v56 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A45C(0, v4, 0);
  v8 = 0;
  v37 = a1 + 32;
  v49 = (uint64_t *)(a2 + 32);
  result = v56;
  v42 = a2;
  v43 = a3;
  do
  {
    v40 = result;
    v41 = v8;
    v10 = (char *)(v37 + 32 * v8);
    v39 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    v38 = *((_QWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 3);
    v13 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v13)
    {
      v16 = v5;
      goto LABEL_49;
    }
    v14 = v13;
    v15 = 0;
    v46 = v13;
    v47 = v12 + 32;
    v16 = v5;
    v44 = v11;
    while (1)
    {
      v17 = v15 <= v14 ? v14 : v15;
      v52 = v16;
      v45 = v17;
LABEL_9:
      if (v15 == v17)
      {
        __break(1u);
        JUMPOUT(0x1BAFACF00);
      }
      v18 = v47 + 16 * v15;
      v19 = *(_QWORD **)v18;
      v54 = *(_QWORD **)v18;
      v51 = v15 + 1;
      v48 = *(_BYTE *)(v18 + 8);
      if (!v48)
        break;
      if (*(_BYTE *)(v18 + 8) == 1)
        swift_bridgeObjectRetain();
      else
        v32 = v19;
LABEL_38:
      v16 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AEC0(0, *(_QWORD *)(v52 + 16) + 1, 1);
        v16 = v52;
      }
      v15 = v51;
      v30 = *(_QWORD *)(v16 + 16);
      v29 = *(_QWORD *)(v16 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BAC7AEC0(v29 > 1, v30 + 1, 1);
        v15 = v51;
        v16 = v52;
      }
      *(_QWORD *)(v16 + 16) = v30 + 1;
      v31 = v16 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v54;
      *(_BYTE *)(v31 + 40) = v48;
      v14 = v46;
      if (v15 == v46)
        goto LABEL_49;
    }
    v55 = v19[2];
    if (*(_QWORD *)(a3 + 16))
    {
      v20 = *(unsigned __int8 *)(v19[2] + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
      sub_1BB8745CC();
      __asm { BR              X8 }
    }
    sub_1BA904664(v19, 0);
    swift_retain();
    v50 = *(_QWORD *)(a2 + 16);
    if (!v50 || (v21 = *v49, (v22 = *(_QWORD *)(*v49 + 16)) == 0))
    {
      sub_1BA90469C(v54, 0);
LABEL_37:
      v5 = MEMORY[0x1E0DEE9D8];
      v11 = v44;
      goto LABEL_38;
    }
    v23 = v55 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name;
    swift_bridgeObjectRetain();
    v24 = 1;
    while (2)
    {
      v53 = v24;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      if (!*(_QWORD *)(v21 + 16))
      {
LABEL_53:
        __break(1u);
        return v5;
      }
      v5 = 0;
      v25 = v21 + 40;
      v26 = v22 - 1;
      v27 = 1;
      while (1)
      {
        if ((v27 & 1) == 0)
        {
          if (v26 == v5)
            goto LABEL_30;
LABEL_19:
          v27 = 0;
          goto LABEL_20;
        }
        sub_1BA7114A0();
        swift_bridgeObjectRetain();
        if ((sub_1BB873B40() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
        if (!*(_QWORD *)(v23 + 8))
          break;
        sub_1BB872A0C();
        v28 = sub_1BB873B40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
          goto LABEL_29;
LABEL_26:
        if (v26 == v5)
        {
          a2 = v42;
          swift_bridgeObjectRelease();
LABEL_36:
          swift_bridgeObjectRelease();
          sub_1BA90469C(v54, 0);
          a3 = v43;
          goto LABEL_37;
        }
        v27 = 1;
LABEL_20:
        ++v5;
        v25 += 16;
        if (v5 >= *(_QWORD *)(v21 + 16))
          goto LABEL_53;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      if (v26 != v5)
        goto LABEL_19;
LABEL_30:
      swift_bridgeObjectRelease();
      if (v53 != v50)
      {
        v21 = v49[v53];
        v24 = v53 + 1;
        v22 = *(_QWORD *)(v21 + 16);
        if (v22)
          continue;
        a2 = v42;
        goto LABEL_36;
      }
      break;
    }
    a2 = v42;
    swift_bridgeObjectRelease();
    a3 = v43;
    sub_1BA90469C(v54, 0);
    sub_1BA90469C(v54, 0);
    v17 = v45;
    v15 = v51;
    v16 = v52;
    v5 = MEMORY[0x1E0DEE9D8];
    v11 = v44;
    if (v51 != v46)
      goto LABEL_9;
LABEL_49:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = v40;
    v34 = *(_QWORD *)(v40 + 16);
    v33 = *(_QWORD *)(v40 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1BAC7A45C(v33 > 1, v34 + 1, 1);
      result = v40;
    }
    *(_QWORD *)(result + 16) = v34 + 1;
    v35 = result + 32 * v34;
    *(_BYTE *)(v35 + 32) = v39;
    v8 = v41 + 1;
    *(_QWORD *)(v35 + 40) = v38;
    *(_QWORD *)(v35 + 48) = v11;
    *(_QWORD *)(v35 + 56) = v16;
  }
  while (v41 + 1 != v36);
  return result;
}

uint64_t sub_1BAFACF54(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;

  result = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v4 = (_BYTE *)(a1 + 40);
    do
    {
      if (!*v4)
        __asm { BR              X9 }
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

id sub_1BAFAD1FC(uint64_t a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v8[v9] = sub_1BB86FDD8();
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem] = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections] = MEMORY[0x1E0DEE9D8];
  v11 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter];
  v12 = sub_1BAAD4BE0();
  v13 = MEMORY[0x1E0DEE9E8];
  *v11 = v12;
  v11[1] = v13;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections] = v10;
  v14 = &v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection];
  *(_QWORD *)v14 = v13;
  *((_QWORD *)v14 + 1) = v13;
  *((_QWORD *)v14 + 2) = v13;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_editor] = a1;
  type metadata accessor for DebugNewsroomService();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  type metadata accessor for DebugFormatUploadDataSource();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_dataSource] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_diffViewController] = a2;
  swift_retain_n();
  v17 = a2;

  v19.receiver = v8;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
}

void sub_1BAFAD3A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_tableView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v1[v3] = sub_1BB86FDD8();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController____lazy_storage___nextBarButtonItem] = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_sections] = MEMORY[0x1E0DEE9D8];
  v5 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filter];
  v6 = sub_1BAAD4BE0();
  v7 = MEMORY[0x1E0DEE9E8];
  *v5 = v6;
  v5[1] = v7;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections] = v4;
  v8 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection];
  *(_QWORD *)v8 = v7;
  *((_QWORD *)v8 + 1) = v7;
  *((_QWORD *)v8 + 2) = v7;

  sub_1BB873EAC();
  __break(1u);
}

id sub_1BAFAD4D0(uint64_t a1, uint64_t a2, char a3)
{
  id v3;
  uint64_t inited;
  void **v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v3, sel_setAlignment_, 1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v5 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v6 = *v5;
  *(_QWORD *)(inited + 32) = *v5;
  v7 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v39 = v6;
  v40 = v7;
  v8 = objc_msgSend(v7, sel_systemFontOfSize_, 13.0);
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v8;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  v38 = v9;
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = (void *)objc_opt_self();
  v36 = v10;
  v37 = v11;
  v12 = objc_msgSend(v11, sel_secondaryLabelColor);
  v13 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v12;
  v14 = (void *)*MEMORY[0x1E0DC1178];
  v35 = v13;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 112) = v14;
  v15 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 144) = v15;
  *(_QWORD *)(inited + 120) = v3;
  v34 = v14;
  v16 = v3;
  sub_1BA76E82C(inited);
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v18 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v19 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v20 = v17;
  v21 = v16;
  v22 = objc_msgSend(v20, sel_initWithString_attributes_, v18, v19);

  if ((a3 & 1) != 0)
  {
    v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = xmmword_1BB87FC80;
    *(_QWORD *)(v23 + 32) = v39;
    v24 = *MEMORY[0x1E0DC1420];
    v25 = v39;
    *(_QWORD *)(v23 + 40) = objc_msgSend(v40, sel_systemFontOfSize_weight_, 10.0, v24);
    *(_QWORD *)(v23 + 64) = v38;
    *(_QWORD *)(v23 + 72) = v36;
    v26 = v36;
    *(_QWORD *)(v23 + 80) = objc_msgSend(v37, sel_systemBlueColor);
    *(_QWORD *)(v23 + 104) = v35;
    *(_QWORD *)(v23 + 112) = v34;
    *(_QWORD *)(v23 + 144) = v15;
    *(_QWORD *)(v23 + 120) = v16;
    v27 = v16;
    v28 = v34;
    sub_1BA76E82C(v23);
    v29 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v30 = (void *)sub_1BB872970();
    v31 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v29, (SEL)&selRef_tableView_trailingSwipeActionsConfigurationForRowAtIndexPath_, v30, v31);

    objc_msgSend(v22, sel_appendAttributedString_, v32);
  }

  return v22;
}

void sub_1BAFAD890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[5];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v22 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v22);
  v21[3] = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v21[2] = (char *)v21 - v3;
  v4 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v4);
  v23 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v21[1] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v21[4] = (char *)v21 - v10;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1BB86EB84();
  v24 = *(_QWORD *)(v13 - 8);
  v25 = v13;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  v18 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v18);
  sub_1BAFAE340(v26, (uint64_t)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (char *)sub_1BAFADB20 + 4 * byte_1BB8DC447[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

id sub_1BAFADB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  char v10;
  id v11;

  v3 = v1;
  v4 = *(_QWORD *)(v2 - 144);
  sub_1BAFAE384(v3, v4);
  v5 = sub_1BB86EB24();
  v7 = v6;
  sub_1BB86EB78();
  v8 = sub_1BB86E3A4();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8];
  v10 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0, 1, v8) == 1;
  sub_1BA5C699C(v0, (unint64_t *)&unk_1ED3C20B8, v9);
  v11 = sub_1BAFAD4D0(v5, v7, v10);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersioningModeRelease);
  return v11;
}

void sub_1BAFADFDC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;

  v2 = v1;
  v4 = sub_1BB86CBD4();
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (v4 >= *(_QWORD *)(v5 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = *(_QWORD *)(v5 + 32 * v4 + 56);
  swift_bridgeObjectRetain();
  v7 = sub_1BB86CBC8();
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v7 >= *(_QWORD *)(v6 + 16))
  {
LABEL_17:
    __break(1u);
    return;
  }
  v8 = v6 + 16 * v7;
  v9 = *(void **)(v8 + 32);
  v10 = *(unsigned __int8 *)(v8 + 40);
  sub_1BA904664(v9, *(_BYTE *)(v8 + 40));
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (v10 == 1)
      v11 = 1;
    else
      v11 = 2;
    sub_1BA90469C(v9, v11);
  }
  else
  {
    v12 = v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_selection;
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 16);
    sub_1BA904664(v9, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB5743C8();
    v16 = sub_1BA761FE4(v14, v15, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1BB86CB8C();
    if ((v16 & 1) != 0)
      objc_msgSend(a1, sel_selectRowAtIndexPath_animated_scrollPosition_, v17, 0, 0);
    else
      objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v17, 0);
    sub_1BA90469C(v9, 0);
    sub_1BA90469C(v9, 0);

  }
}

unint64_t sub_1BAFAE1BC()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadViewController_filteredSections);
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(_QWORD *)(v2 + 32 * result + 56);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(_QWORD *)(v3 + 16))
  {
    v4 = v3 + 16 * result;
    v5 = *(void **)(v4 + 32);
    v6 = *(_BYTE *)(v4 + 40);
    sub_1BA904664(v5, v6);
    swift_bridgeObjectRelease();
    sub_1BA90469C(v5, v6);
    return (v6 & 7) == 0;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BAFAE270()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAFAE294()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAFAE2B8()
{
  uint64_t v0;

  sub_1BAFAB4E8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BAFAE2C4()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1BAFAE2D0()
{
  uint64_t v0;

  sub_1BAFAAF88(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAFAE2D8()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1BAFAE2E4()
{
  uint64_t v0;

  sub_1BAFAACB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAFAE2EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFAE320()
{
  return sub_1BAFA8774();
}

uint64_t sub_1BAFAE328()
{
  return sub_1BAFAC1C8();
}

uint64_t sub_1BAFAE340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVersioningModeSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFAE384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVersioningModeRelease(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAFAE3C8(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFA8B74(a1, v1);
}

void sub_1BAFAE3D0(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFA8C14(a1, v1);
}

void sub_1BAFAE3D8(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFA8CC8(a1, v1);
}

void sub_1BAFAE3E0(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFA8D6C(a1, v1);
}

void sub_1BAFAE3E8(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFA8E24(a1, v1);
}

void sub_1BAFAE3F0(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFA8F00(a1, v1);
}

ValueMetadata *type metadata accessor for A12_V12()
{
  return &type metadata for A12_V12;
}

uint64_t sub_1BAFAE40C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B7FF0, (uint64_t (*)(void))sub_1BAFB1A0C, (uint64_t)&type metadata for A12_V12.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB1A0C();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAFAE5C0()
{
  sub_1BAFB1A0C();
  return sub_1BB874710();
}

uint64_t sub_1BAFAE5E8()
{
  sub_1BAFB1A0C();
  return sub_1BB87471C();
}

double sub_1BAFAE610@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAFB17F8(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAFAE654(_QWORD *a1)
{
  return sub_1BAFAE40C(a1);
}

uint64_t sub_1BAFAE668()
{
  sub_1BAFB149C();
  return sub_1BB86D96C();
}

uint64_t sub_1BAFAE6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  __int128 v67;
  unsigned __int8 v68;
  ValueMetadata *v69;
  unint64_t v70;
  uint64_t v71;

  v71 = a2;
  v60 = a3;
  v5 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  MEMORY[0x1E0C80A78](v9);
  v59 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - v12;
  v14 = type metadata accessor for GroupLayoutBindingContext();
  v54 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *v3;
  v17 = (void *)*((_QWORD *)v3 + 1);
  v18 = v3[16];
  *(_QWORD *)&v67 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v67))
  {
    sub_1BA7E415C();
    swift_allocError();
    *(_OWORD *)v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(_QWORD *)(v19 + 32) = 0;
    *(_BYTE *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    v52 = a1;
    v21 = a1;
    v22 = (uint64_t)v16;
    sub_1BA4C2DD8(v21, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4C2DD8(v71, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v17, v18);
    sub_1BB86C8D4();
    v50 = sub_1BB86C8C8();
    v49 = v23;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v69 = &type metadata for A12_V12;
    v51 = sub_1BA8EE6F4();
    v70 = v51;
    v24 = v53;
    LOBYTE(v67) = v53;
    *((_QWORD *)&v67 + 1) = v17;
    v68 = v18;
    type metadata accessor for GroupLayoutKey();
    v25 = swift_allocObject();
    sub_1BA7C26A0(v17, v18);
    v61 = sub_1BB874734();
    v62 = v26;
    v65 = 95;
    v66 = 0xE100000000000000;
    v63 = 45;
    v64 = 0xE100000000000000;
    sub_1BA7114A0();
    v27 = sub_1BB873B04();
    v29 = v28;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 16) = v27;
    *(_QWORD *)(v25 + 24) = v29;
    v30 = (uint64_t *)(v25 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v31 = v49;
    *v30 = v50;
    v30[1] = v31;
    sub_1BA4C010C((uint64_t)&v67, v25 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v32 = v25 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v22, v25 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v32, 0, 1, v55);
    v55 = v25;
    v33 = v25 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4((uint64_t)v13, v25 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v33, 0, 1, v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
    sub_1BA7C2538(v17, v18);
    v69 = &type metadata for A12_V12;
    v70 = v51;
    LOBYTE(v67) = v24;
    *((_QWORD *)&v67 + 1) = v17;
    v68 = v18;
    v34 = v59;
    sub_1BA4C2DD8(v71, v59, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = MEMORY[0x1E0DEE9D8];
    v36 = (_QWORD *)(v35 + 16);
    swift_beginAccess();
    v37 = *(_QWORD **)(v35 + 16);
    sub_1BA7C26A0(v17, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v35 + 16) = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v37 = sub_1BA7892A0(0, v37[2] + 1, 1, v37);
      *v36 = v37;
    }
    v39 = v60;
    v40 = v58;
    v42 = v37[2];
    v41 = v37[3];
    if (v42 >= v41 >> 1)
    {
      v37 = sub_1BA7892A0((_QWORD *)(v41 > 1), v42 + 1, 1, v37);
      *v36 = v37;
    }
    v37[2] = v42 + 1;
    v43 = &v37[2 * v42];
    v43[4] = sub_1BACB8D7C;
    v43[5] = 0;
    swift_endAccess();
    v44 = sub_1BA7E1F18((uint64_t)&unk_1E726A038, 0, 0, v35, 4, 0, 0, 0);
    if (v40)
    {
      swift_release();
      swift_release();
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
    }
    else
    {
      v45 = v44;
      swift_release();
      v46 = type metadata accessor for A12_V12.Bound();
      v39[3] = v46;
      v39[4] = sub_1BA4A2870(&qword_1EF2B7EC8, (uint64_t (*)(uint64_t))type metadata accessor for A12_V12.Bound, (uint64_t)&unk_1BB8DC558);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
      *boxed_opaque_existential_0 = v55;
      sub_1BA4CECCC(&v67, (uint64_t)(boxed_opaque_existential_0 + 1));
      result = sub_1BA5193C4(v34, (uint64_t)boxed_opaque_existential_0 + *(int *)(v46 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v46 + 28)) = v45;
    }
  }
  return result;
}

double sub_1BAFAEC5C@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _QWORD v38[6];
  char v39[105];
  __int128 v40[9];
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A12_V12.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v42);
  sub_1BA4C010C(v11 + 56, (uint64_t)v41);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v42, v14 + 16);
  sub_1BA4CECCC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 0;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v41);
  sub_1BA4C010C(v15 + 56, (uint64_t)v40);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v41, v17 + 16);
  sub_1BA4CECCC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v19 = sub_1BA6B5B08((uint64_t)&v42, *(_QWORD *)(*(_QWORD *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v42 = inited;
  sub_1BA6B5BE8(v19);
  v20 = v42;
  v38[2] = v18;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BACB8FF0(v21, v20, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = *MEMORY[0x1E0DB5D88];
  v24 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E0DB6200], v35);
  v37 = v22;
  sub_1BAFB1540(0, &qword_1EF2B7F70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v42;
  v26 = v43;
  v27 = v44;
  *(_QWORD *)&v42 = v22;
  *(_QWORD *)&v41[0] = v45;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v42 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BAFAF138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 12;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BAFB1540(0, &qword_1EF2B7F90, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAFB1500(&qword_1EF2B7F98, &qword_1EF2B7F90, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BAFAF290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v13)(uint64_t, _QWORD *);
  void (*v14)(uint64_t *, uint64_t);
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;

  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v18 = a1;
  v9 = sub_1BB86D438();
  v10 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x1E0DB5A38], v9);
  *v8 = v10;
  v12 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v12(v8, *MEMORY[0x1E0DB6318], v5);
  v13 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v13, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v14 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v18 = a1;
  v12(v8, *MEMORY[0x1E0DB63C0], v5);
  v17 = a2;
  sub_1BB86D498();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v8, v5);
}

uint64_t sub_1BAFAF454(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  void (*v22)(uint64_t *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a2;
  v28 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v25 - v6);
  v31 = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 6;
  *v7 = v8;
  v9 = *MEMORY[0x1E0DB63F8];
  v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 104);
  v27(v7, v9, v4);
  sub_1BAFB15C4();
  sub_1BA4CDF6C(0, &qword_1EF2B7FB8, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  v15 = v14 + v13;
  sub_1BA7FDE2C();
  v17 = (_QWORD *)(v15 + *(int *)(v16 + 48));
  v18 = *MEMORY[0x1E0DB6000];
  v19 = sub_1BB86D8B8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v15, v18, v19);
  *v17 = 0x6C6F437468676972;
  v17[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E0DB5BF8], v11);
  v20 = v26;
  v30 = v26;
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v22 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v22(v7, v4);
  v31 = v28;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 6;
  *v7 = v23;
  v27(v7, v9, v4);
  v29 = v20;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v22)(v7, v4);
}

uint64_t sub_1BAFAF750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 3;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BAFAFB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, _QWORD *);
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t);
  uint64_t v24;
  _BYTE v26[12];
  unsigned int v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, double);
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v29 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (uint64_t *)&v26[-v8];
  v38 = a1;
  v35 = *MEMORY[0x1E0DB6410];
  v34 = *(void (**)(_BYTE *, double))(v6 + 104);
  v34(&v26[-v8], v7);
  sub_1BAFB15C4();
  v33 = v10;
  sub_1BA4CDF6C(0, &qword_1EF2B7FB8, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  v31 = v15 | 7;
  v32 = v16 + v14;
  v17 = swift_allocObject();
  v30 = xmmword_1BB87CE70;
  *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
  v27 = *MEMORY[0x1E0DB5C80];
  v28 = *(void (**)(uint64_t))(v13 + 104);
  v28(v17 + v16);
  v37 = a2;
  v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v18, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v19 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v19(v9, v5);
  v38 = a1;
  v20 = sub_1BB86D438();
  v21 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DB5A38], v20);
  *v9 = v21;
  v23 = (void (*)(uint64_t *, _QWORD, uint64_t))v34;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v34)(v9, *MEMORY[0x1E0DB6318], v5);
  sub_1BB86D4EC();
  v19(v9, v5);
  v38 = a1;
  v23(v9, v35, v5);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v30;
  ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v24 + v16, v27, v12);
  v36 = v29;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v19)(v9, v5);
}

uint64_t sub_1BAFAFE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BAFB0274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BAFB0684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t, _QWORD *);
  void (*v15)(uint64_t *, uint64_t);
  uint64_t v16;
  _QWORD v18[9];
  uint64_t v19;

  v18[0] = a3;
  v18[1] = a4;
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v18 - v9);
  v19 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 3;
  *v10 = v11;
  v12 = *MEMORY[0x1E0DB63F8];
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  v18[8] = a2;
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v14, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v15 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v19 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 3;
  *v10 = v16;
  v13(v10, v12, v7);
  v18[4] = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v15)(v10, v7);
}

uint64_t sub_1BAFB0868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 3 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BAFB0C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B7F88, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 5uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 4 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFB1540(0, &qword_1EF2B7FA0, MEMORY[0x1E0DB5A10]);
  sub_1BAFB1500(&qword_1EF2B7FA8, &qword_1EF2B7FA0, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BAFB108C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V12.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAFB116C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAFAE6D0(a1, a2, a3);
}

uint64_t sub_1BAFB1180()
{
  return sub_1BB690A7C();
}

unint64_t sub_1BAFB1190(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAFB11BC();
  result = sub_1BAFB1200();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAFB11BC()
{
  unint64_t result;

  result = qword_1EF2B7EB8;
  if (!qword_1EF2B7EB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC4A4, &type metadata for A12_V12);
    atomic_store(result, (unint64_t *)&qword_1EF2B7EB8);
  }
  return result;
}

unint64_t sub_1BAFB1200()
{
  unint64_t result;

  result = qword_1EF2B7EC0;
  if (!qword_1EF2B7EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC4CC, &type metadata for A12_V12);
    atomic_store(result, (unint64_t *)&qword_1EF2B7EC0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V12.Bound()
{
  uint64_t result;

  result = qword_1EF2B7F28;
  if (!qword_1EF2B7F28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAFB1280()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFB128C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAFB1308()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAFB1314(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAFB1388()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAFB1414(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B7F68, (uint64_t (*)(uint64_t))type metadata accessor for A12_V12.Bound, (uint64_t)&unk_1BB8DC530);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFB1450(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFAF138(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BAFB1458()
{
  unint64_t result;

  result = qword_1EF2B7F78;
  if (!qword_1EF2B7F78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC688, &type metadata for A12_V12.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B7F78);
  }
  return result;
}

unint64_t sub_1BAFB149C()
{
  unint64_t result;

  result = qword_1EF2B7F80;
  if (!qword_1EF2B7F80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC658, &type metadata for A12_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7F80);
  }
  return result;
}

uint64_t sub_1BAFB14E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAFB108C(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAFB14E8()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFB14F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFAF290(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFB1500(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAFB1540(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAFB1540(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V12.Layout;
    v8[1] = &type metadata for A12_V12.Layout.Attributes;
    v8[2] = sub_1BAFB1458();
    v8[3] = sub_1BAFB149C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BAFB15BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFAF454(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAFB15C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B7FB0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B7FB8, (uint64_t (*)(void))sub_1BAFB1458, (uint64_t)&type metadata for A12_V12.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B7FB0);
  }
}

uint64_t sub_1BAFB1638(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFAF750(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFB1640(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFAFB60(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFB1648(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFB0684(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1BAFB16A8, (uint64_t)sub_1BAFB16B0);
}

uint64_t sub_1BAFB1670(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFB0684(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1BAFB1698, (uint64_t)sub_1BAFB16A0);
}

uint64_t sub_1BAFB1698(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFB0868(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFB16A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFB0C7C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFB16A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFAFE64(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFB16B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFB0274(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V12.Layout.Attributes()
{
  return &type metadata for A12_V12.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V12.Layout()
{
  return &type metadata for A12_V12.Layout;
}

unint64_t sub_1BAFB16DC()
{
  unint64_t result;

  result = qword_1EF2B7FC0;
  if (!qword_1EF2B7FC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC5F8, &type metadata for A12_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7FC0);
  }
  return result;
}

unint64_t sub_1BAFB1724()
{
  unint64_t result;

  result = qword_1EF2B7FC8;
  if (!qword_1EF2B7FC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC5D0, &type metadata for A12_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7FC8);
  }
  return result;
}

unint64_t sub_1BAFB176C()
{
  unint64_t result;

  result = qword_1EF2B7FD0;
  if (!qword_1EF2B7FD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC5A8, &type metadata for A12_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7FD0);
  }
  return result;
}

unint64_t sub_1BAFB17B4()
{
  unint64_t result;

  result = qword_1EF2B7FD8;
  if (!qword_1EF2B7FD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC620, &type metadata for A12_V12.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B7FD8);
  }
  return result;
}

uint64_t sub_1BAFB17F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B7FE0, (uint64_t (*)(void))sub_1BAFB1A0C, (uint64_t)&type metadata for A12_V12.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB1A0C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAFB1A0C()
{
  unint64_t result;

  result = qword_1EF2B7FE8;
  if (!qword_1EF2B7FE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC77C, &type metadata for A12_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7FE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V12.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFB1A9C + 4 * byte_1BB8DC495[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFB1AD0 + 4 * byte_1BB8DC490[v4]))();
}

uint64_t sub_1BAFB1AD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB1AD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFB1AE0);
  return result;
}

uint64_t sub_1BAFB1AEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFB1AF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFB1AF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB1B00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V12.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V12.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAFB1B20()
{
  unint64_t result;

  result = qword_1EF2B7FF8;
  if (!qword_1EF2B7FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC754, &type metadata for A12_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7FF8);
  }
  return result;
}

unint64_t sub_1BAFB1B68()
{
  unint64_t result;

  result = qword_1EF2B8000;
  if (!qword_1EF2B8000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC6C4, &type metadata for A12_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8000);
  }
  return result;
}

unint64_t sub_1BAFB1BB0()
{
  unint64_t result;

  result = qword_1EF2B8008;
  if (!qword_1EF2B8008)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC6EC, &type metadata for A12_V12.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8008);
  }
  return result;
}

uint64_t FormatGroupColumnSystemKind.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x746C7561666564;
  else
    return 1685217635;
}

NewsFeed::FormatGroupColumnSystemKind_optional __swiftcall FormatGroupColumnSystemKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatGroupColumnSystemKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BAFB1C88(char *a1, char *a2)
{
  return sub_1BB7F2344(*a1, *a2);
}

NewsFeed::FormatGroupColumnSystemKind_optional sub_1BAFB1C94(Swift::String *a1)
{
  return FormatGroupColumnSystemKind.init(rawValue:)(*a1);
}

void sub_1BAFB1CA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1685217635;
  if (*v1)
    v2 = 0x746C7561666564;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAFB1CD8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFB1D50()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFB1DA4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFB1E18()
{
  sub_1BAFB217C();
  return sub_1BB872D60();
}

uint64_t sub_1BAFB1E74(_QWORD *a1)
{
  return FormatGroupColumnSystemKind.encode(to:)(a1);
}

uint64_t sub_1BAFB1E8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatGroupColumnSystem.init(from:)(a1, a2);
}

uint64_t sub_1BAFB1EA0(_QWORD *a1)
{
  return FormatGroupColumnSystem.encode(to:)(a1);
}

BOOL _s8NewsFeed23FormatGroupColumnSystemO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v15;
  char v16;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (!v3)
  {
    if (!v5)
    {
      sub_1BA78DE14(*a1, 0);
      sub_1BA78DE14(v4, 0);
      return 1;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if ((v2 & 1) != 0)
        v10 = 0x746C7561666564;
      else
        v10 = 1685217635;
      if ((v2 & 1) != 0)
        v11 = 0xE700000000000000;
      else
        v11 = 0xE400000000000000;
      if ((v4 & 1) != 0)
        v12 = 0x746C7561666564;
      else
        v12 = 1685217635;
      if ((v4 & 1) != 0)
        v13 = 0xE700000000000000;
      else
        v13 = 0xE400000000000000;
      if (v10 == v12 && v11 == v13)
      {
        sub_1BA8C89D0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
        sub_1BA8C89D0(v2, v3);
        sub_1BA8C89D0(v4, v5);
        sub_1BA8C89D0(v2, v3);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v15 = sub_1BB874398();
        sub_1BA8C89D0(v4, v5);
        sub_1BA8C89D0(v2, v3);
        sub_1BA8C89D0(v4, v5);
        sub_1BA8C89D0(v2, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          sub_1BA78DE14(v2, v3);
          sub_1BA78DE14(v4, v5);
          sub_1BA78DE14(v4, v5);
          v7 = v2;
          v8 = v3;
          goto LABEL_9;
        }
      }
      sub_1BA8C89D0(v4, v5);
      sub_1BA8C89D0(v2, v3);
      v16 = sub_1BA8921E4(v3, v5);
      sub_1BA78DE14(v4, v5);
      sub_1BA78DE14(v2, v3);
      sub_1BA78DE14(v2, v3);
      sub_1BA78DE14(v4, v5);
      sub_1BA78DE14(v4, v5);
      sub_1BA78DE14(v2, v3);
      return (v16 & 1) != 0;
    }
LABEL_8:
    sub_1BA8C89D0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
    sub_1BA8C89D0(v2, v3);
    sub_1BA78DE14(v2, v3);
    v7 = v4;
    v8 = v5;
LABEL_9:
    sub_1BA78DE14(v7, v8);
    return 0;
  }
  if (v5 != 1)
    goto LABEL_8;
  v6 = 1;
  sub_1BA78DE14(*a1, 1uLL);
  sub_1BA78DE14(v4, 1uLL);
  return v6;
}

unint64_t sub_1BAFB210C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAFB2138();
  result = sub_1BAFB217C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAFB2138()
{
  unint64_t result;

  result = qword_1EF2B8010;
  if (!qword_1EF2B8010)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B8010);
  }
  return result;
}

unint64_t sub_1BAFB217C()
{
  unint64_t result;

  result = qword_1ED3CC068;
  if (!qword_1ED3CC068)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3CC068);
  }
  return result;
}

unint64_t sub_1BAFB21C4()
{
  unint64_t result;

  result = qword_1ED3CFF60;
  if (!qword_1ED3CFF60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3CFF60);
  }
  return result;
}

unint64_t sub_1BAFB2208(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA9275C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFB222C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE9754C, (uint64_t (*)(void))sub_1BAEF23D8, (uint64_t (*)(void))sub_1BAFB21C4);
}

unint64_t sub_1BAFB2248(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFB226C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFB226C()
{
  unint64_t result;

  result = qword_1EF2B8018;
  if (!qword_1EF2B8018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystem, &type metadata for FormatGroupColumnSystem);
    atomic_store(result, (unint64_t *)&qword_1EF2B8018);
  }
  return result;
}

uint64_t sub_1BAFB22B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5EF7E4, (uint64_t (*)(void))sub_1BA5BC058, (uint64_t (*)(void))sub_1BAFB22CC);
}

unint64_t sub_1BAFB22CC()
{
  unint64_t result;

  result = qword_1EF2B8020;
  if (!qword_1EF2B8020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystem, &type metadata for FormatGroupColumnSystem);
    atomic_store(result, (unint64_t *)&qword_1EF2B8020);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatGroupColumnSystemKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFB235C + 4 * byte_1BB8DC7D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFB2390 + 4 * byte_1BB8DC7D0[v4]))();
}

uint64_t sub_1BAFB2390(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB2398(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFB23A0);
  return result;
}

uint64_t sub_1BAFB23AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFB23B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFB23B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB23C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupColumnSystemKind()
{
  return &type metadata for FormatGroupColumnSystemKind;
}

uint64_t sub_1BAFB23E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FormatGroupColumnSystem(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatGroupColumnSystem(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupColumnSystem()
{
  return &type metadata for FormatGroupColumnSystem;
}

uint64_t type metadata accessor for DebugFormatInspectorMaskViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugFormatInspectorMaskSegmentedViewController()
{
  uint64_t result;

  result = qword_1EF2B8098;
  if (!qword_1EF2B8098)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAFB26F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BAFB2754()
{
  return 1802723661;
}

id sub_1BAFB2764()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  return v1;
}

id sub_1BAFB27E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + qword_1EF2B8070);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = sub_1BAFB2900(0);
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v2 = *(_QWORD *)(v0 + qword_1EF2B8078);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = sub_1BAFB2900(1);
  swift_bridgeObjectRelease();
  return sub_1BB20A0CC();
}

uint64_t sub_1BAFB2900(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_1BAFB3234(a1 & 1);
  v2 = sub_1BB6DED58((uint64_t)v1);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 64;
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)v4;
      if (*(_QWORD *)(*(_QWORD *)v4 + 16))
      {
        v11 = *(_QWORD *)(v4 - 32);
        v10 = *(_QWORD *)(v4 - 24);
        v12 = *(_QWORD *)(v4 - 16);
        v13 = *(_QWORD *)(v4 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7AD80(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        if (v7 >= v6 >> 1)
          sub_1BAC7AD80(v6 > 1, v7 + 1, 1);
        *(_QWORD *)(v5 + 16) = v7 + 1;
        v8 = (_QWORD *)(v5 + 40 * v7);
        v8[4] = v11;
        v8[5] = v10;
        v8[6] = v12;
        v8[7] = v13;
        v8[8] = v9;
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

char *sub_1BAFB2A7C(uint64_t a1, __int128 *a2)
{
  char *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  objc_class *v35;
  _BYTE *v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  _BYTE *v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  char *v51;
  id v52;
  id v53;
  void *v54;
  char *v55;
  void *v56;
  char *v57;
  id v58;
  void *v59;
  char *v60;
  id v61;
  objc_class *ObjectType;
  objc_super v64;
  objc_super v65;
  objc_super v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  char v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  char v92;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = a2[9];
  v6 = a2[11];
  v90 = a2[10];
  v7 = v90;
  v91 = v6;
  v8 = a2[5];
  v9 = a2[7];
  v86 = a2[6];
  v10 = v86;
  v87 = v9;
  v11 = a2[7];
  v12 = a2[9];
  v88 = a2[8];
  v13 = v88;
  v89 = v12;
  v14 = a2[1];
  v15 = a2[3];
  v82 = a2[2];
  v16 = v82;
  v83 = v15;
  v17 = a2[3];
  v18 = a2[5];
  v84 = a2[4];
  v19 = v84;
  v85 = v18;
  v20 = a2[1];
  v80 = *a2;
  v21 = v80;
  v81 = v20;
  *(_QWORD *)&v2[qword_1EF2B8080] = a1;
  v22 = &v2[qword_1EF2B8068];
  v23 = a2[9];
  v24 = a2[11];
  *((_OWORD *)v22 + 10) = a2[10];
  *((_OWORD *)v22 + 11) = v24;
  v25 = a2[5];
  v26 = a2[7];
  *((_OWORD *)v22 + 6) = a2[6];
  *((_OWORD *)v22 + 7) = v26;
  *((_OWORD *)v22 + 8) = a2[8];
  *((_OWORD *)v22 + 9) = v23;
  v27 = a2[1];
  v28 = a2[3];
  *((_OWORD *)v22 + 2) = a2[2];
  *((_OWORD *)v22 + 3) = v28;
  *((_OWORD *)v22 + 4) = a2[4];
  *((_OWORD *)v22 + 5) = v25;
  *(_OWORD *)v22 = *a2;
  *((_OWORD *)v22 + 1) = v27;
  v29 = a2[11];
  v77 = v7;
  v78 = v29;
  v73 = v10;
  v74 = v11;
  v75 = v13;
  v76 = v5;
  v69 = v16;
  v70 = v17;
  v71 = v19;
  v72 = v8;
  v92 = *((_BYTE *)a2 + 192);
  v22[192] = *((_BYTE *)a2 + 192);
  v79 = *((_BYTE *)a2 + 192);
  v67 = v21;
  v68 = v14;
  swift_retain_n();
  v30 = v2;
  sub_1BAFB380C((uint64_t)&v80);
  v31 = sub_1BAFB2900(0);
  v32 = (void *)sub_1BB872970();
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_systemImageNamed_, v32);

  v35 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  v36 = objc_allocWithZone(v35);
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v37 = &v36[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v37 = 0;
  v37[1] = 0xE000000000000000;
  v38 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v39 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v40 = v36;
  *(_QWORD *)&v36[v38] = objc_msgSend(v39, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v31;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v31;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  v41 = v34;

  v66.receiver = v40;
  v66.super_class = v35;
  v42 = objc_msgSendSuper2(&v66, sel_initWithNibName_bundle_, 0, 0);
  v43 = (void *)sub_1BB872970();
  objc_msgSend(v42, sel_setTitle_, v43);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2B8070] = v42;
  v77 = v90;
  v78 = v91;
  v79 = v92;
  v73 = v86;
  v74 = v87;
  v75 = v88;
  v76 = v89;
  v69 = v82;
  v70 = v83;
  v71 = v84;
  v72 = v85;
  v67 = v80;
  v68 = v81;
  swift_retain();
  v44 = sub_1BAFB2900(1);
  sub_1BAFB3938((uint64_t)&v80);
  v45 = (void *)sub_1BB872970();
  v46 = objc_msgSend(v33, sel_systemImageNamed_, v45);

  v47 = objc_allocWithZone(v35);
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v48 = &v47[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v48 = 0;
  v48[1] = 0xE000000000000000;
  v49 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v50 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v51 = v47;
  *(_QWORD *)&v47[v49] = objc_msgSend(v50, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v44;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v44;
  *(_QWORD *)&v51[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  v52 = v46;

  v65.receiver = v51;
  v65.super_class = v35;
  v53 = objc_msgSendSuper2(&v65, sel_initWithNibName_bundle_, 0, 0);
  v54 = (void *)sub_1BB872970();
  objc_msgSend(v53, sel_setTitle_, v54);

  swift_release();
  *(_QWORD *)&v30[qword_1EF2B8078] = v53;

  v64.receiver = v30;
  v64.super_class = ObjectType;
  v55 = (char *)objc_msgSendSuper2(&v64, sel_initWithNibName_bundle_, 0, 0);
  v56 = *(void **)&v55[qword_1EF2B8070];
  sub_1BAFB3A64();
  v57 = v55;
  v58 = v56;
  sub_1BB8708B8();

  v59 = *(void **)&v57[qword_1EF2B8078];
  v60 = v57;
  v61 = v59;
  sub_1BB8708B8();

  swift_release();
  return v60;
}

void sub_1BAFB3058()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BAFB30B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1BAFB30C0(a1, a2, a3, a4);
}

void sub_1BAFB30C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BAFB30F8()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];
  char v9;

  v1 = *(_OWORD *)(v0 + qword_1EF2B8068 + 176);
  v8[10] = *(_OWORD *)(v0 + qword_1EF2B8068 + 160);
  v8[11] = v1;
  v9 = *(_BYTE *)(v0 + qword_1EF2B8068 + 192);
  v2 = *(_OWORD *)(v0 + qword_1EF2B8068 + 112);
  v8[6] = *(_OWORD *)(v0 + qword_1EF2B8068 + 96);
  v8[7] = v2;
  v3 = *(_OWORD *)(v0 + qword_1EF2B8068 + 144);
  v8[8] = *(_OWORD *)(v0 + qword_1EF2B8068 + 128);
  v8[9] = v3;
  v4 = *(_OWORD *)(v0 + qword_1EF2B8068 + 48);
  v8[2] = *(_OWORD *)(v0 + qword_1EF2B8068 + 32);
  v8[3] = v4;
  v5 = *(_OWORD *)(v0 + qword_1EF2B8068 + 80);
  v8[4] = *(_OWORD *)(v0 + qword_1EF2B8068 + 64);
  v8[5] = v5;
  v6 = *(_OWORD *)(v0 + qword_1EF2B8068 + 16);
  v8[0] = *(_OWORD *)(v0 + qword_1EF2B8068);
  v8[1] = v6;
  sub_1BAFB3938((uint64_t)v8);

  return swift_release();
}

uint64_t sub_1BAFB318C(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[12];
  char v10;

  v2 = *(_OWORD *)(a1 + qword_1EF2B8068 + 176);
  v9[10] = *(_OWORD *)(a1 + qword_1EF2B8068 + 160);
  v9[11] = v2;
  v10 = *(_BYTE *)(a1 + qword_1EF2B8068 + 192);
  v3 = *(_OWORD *)(a1 + qword_1EF2B8068 + 112);
  v9[6] = *(_OWORD *)(a1 + qword_1EF2B8068 + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(a1 + qword_1EF2B8068 + 144);
  v9[8] = *(_OWORD *)(a1 + qword_1EF2B8068 + 128);
  v9[9] = v4;
  v5 = *(_OWORD *)(a1 + qword_1EF2B8068 + 48);
  v9[2] = *(_OWORD *)(a1 + qword_1EF2B8068 + 32);
  v9[3] = v5;
  v6 = *(_OWORD *)(a1 + qword_1EF2B8068 + 80);
  v9[4] = *(_OWORD *)(a1 + qword_1EF2B8068 + 64);
  v9[5] = v6;
  v7 = *(_OWORD *)(a1 + qword_1EF2B8068 + 16);
  v9[0] = *(_OWORD *)(a1 + qword_1EF2B8068);
  v9[1] = v7;
  sub_1BAFB3938((uint64_t)v9);

  return swift_release();
}

uint64_t sub_1BAFB322C()
{
  return type metadata accessor for DebugFormatInspectorMaskSegmentedViewController();
}

_QWORD *sub_1BAFB3234(char a1)
{
  _QWORD *v1;
  uint64_t inited;
  uint64_t v3;
  _UNKNOWN **v4;
  ValueMetadata *v5;

  if ((a1 & 1) == 0)
    return sub_1BAFB3384();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BB2493D8();
  if (v3)
  {
    v4 = &off_1E7335C38;
    v5 = &type metadata for FormatInspection;
  }
  else
  {
    v5 = 0;
    v4 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = v4;
  v1 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v1;
}

_QWORD *sub_1BAFB3384()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[40];
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v1 = *v0;
  v2 = *(_OWORD *)(v0 + 1);
  v3 = *(_OWORD *)(v0 + 3);
  v4 = v0[5];
  v5 = *((unsigned __int8 *)v0 + 48);
  v6 = *(_OWORD *)((char *)v0 + 129);
  v7 = *(_OWORD *)((char *)v0 + 161);
  v59 = *(_OWORD *)((char *)v0 + 145);
  v60 = v7;
  v61 = *(_OWORD *)((char *)v0 + 177);
  v8 = *(_OWORD *)((char *)v0 + 65);
  v9 = *(_OWORD *)((char *)v0 + 97);
  v55 = *(_OWORD *)((char *)v0 + 81);
  v56 = v9;
  v57 = *(_OWORD *)((char *)v0 + 113);
  v58 = v6;
  v53 = *(_OWORD *)((char *)v0 + 49);
  v54 = v8;
  if (v5 == 3
    && (((unint64_t)v2 >> 59) & 0x1E | (v2 >> 2) & 1) == 4
    && (v10 = *(_QWORD *)(*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10) + 160)) != 0)
  {
    v37 = v3;
    v38 = v2;
    v11 = *(_QWORD **)(v10 + 16);
    v12 = v11[6];
    v13 = v11[7];
    v14 = v11[8];
    v15 = v11[9];
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BA8C88C8(0);
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
    v20 = v19 + v18;
    v21 = v11[10];
    if (v21)
    {
      v22 = *(_QWORD *)(v21 + 128);
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = 0;
    }
    v29 = type metadata accessor for FormatInspectionItem(0);
    v30 = v20 + *(int *)(v29 + 24);
    *(_QWORD *)v30 = v12;
    *(_QWORD *)(v30 + 8) = v13;
    *(_QWORD *)(v30 + 16) = v14;
    *(_QWORD *)(v30 + 24) = v15;
    *(_QWORD *)(v30 + 32) = 0;
    *(_QWORD *)(v30 + 40) = v22;
    *(_BYTE *)(v30 + 48) = 2;
    v31 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
    *(_OWORD *)v20 = xmmword_1BB8D4900;
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    v32 = v20 + *(int *)(v29 + 28);
    *(_QWORD *)v32 = 0;
    *(_QWORD *)(v32 + 8) = 0;
    *(_BYTE *)(v32 + 16) = -1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v20, 0, 1, v29);
    sub_1BAF89090(0x73646E756F42, 0xE600000000000000, 0, 0, v19, v51);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)&v39[24] = &type metadata for FormatInspectionGroup;
    *(_QWORD *)&v39[32] = &off_1E72D2F60;
    v33 = swift_allocObject();
    *(_QWORD *)v39 = v33;
    v34 = v51[1];
    *(_OWORD *)(v33 + 16) = v51[0];
    *(_OWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 48) = v52;
    v23 = sub_1BB38F5E0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v36 = v23[2];
    v35 = v23[3];
    if (v36 >= v35 >> 1)
      v23 = sub_1BB38F5E0((_QWORD *)(v35 > 1), v36 + 1, 1, v23);
    v23[2] = v36 + 1;
    sub_1BAFB3794((uint64_t)v39, (uint64_t)&v23[5 * v36 + 4]);
    v3 = v37;
    v2 = v38;
  }
  else
  {
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_OWORD *)&v39[8] = v2;
  *(_OWORD *)&v39[24] = v3;
  v47 = v58;
  v48 = v59;
  v49 = v60;
  v50 = v61;
  v43 = v54;
  v44 = v55;
  v45 = v56;
  *(_QWORD *)v39 = v1;
  v40 = v4;
  v41 = v5;
  v46 = v57;
  v42 = v53;
  sub_1BB24915C();
  if (v24)
  {
    *(_QWORD *)&v39[24] = &type metadata for FormatInspection;
    *(_QWORD *)&v39[32] = &off_1E7335C38;
    *(_QWORD *)v39 = v24;
  }
  else
  {
    memset(v39, 0, sizeof(v39));
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_1BB38F5E0(0, v23[2] + 1, 1, v23);
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
    v23 = sub_1BB38F5E0((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
  v23[2] = v26 + 1;
  sub_1BAFB3794((uint64_t)v39, (uint64_t)&v23[5 * v26 + 4]);
  v27 = sub_1BB6DF010((uint64_t)v23);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1BAFB3794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA89EA04(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFB37D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFB380C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 48);
  swift_retain();
  sub_1BAFB38AC(v2, v3, v4, v5, v6, v8);
  swift_bridgeObjectRetain();
  sub_1BA8E9488(v10, v7);
  return a1;
}

uint64_t sub_1BAFB38AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRetain();
LABEL_4:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAFB3938(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 48);
  swift_release();
  sub_1BAFB39D8(v2, v3, v4, v5, v6, v8);
  swift_bridgeObjectRelease();
  sub_1BA8E94B8(v10, v7);
  return a1;
}

uint64_t sub_1BAFB39D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRelease();
LABEL_4:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BAFB3A64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CD510;
  if (!qword_1EF2CD510)
  {
    v1 = type metadata accessor for DebugFormatInspectorPaneViewController();
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA908, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CD510);
  }
  return result;
}

uint64_t FeedDatabaseCommandContext.init(name:database:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

ValueMetadata *type metadata accessor for FeedDatabaseCommandContext()
{
  return &type metadata for FeedDatabaseCommandContext;
}

ValueMetadata *type metadata accessor for FeedDatabaseCommandContext.ExportDatabase()
{
  return &type metadata for FeedDatabaseCommandContext.ExportDatabase;
}

void sub_1BAFB3ADC(uint64_t a1, char a2)
{
  id v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  void *v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  if ((a2 & 1) != 0 || !a1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v3 = (void *)sub_1BB86C58C();
    v8[0] = 0;
    v4 = objc_msgSend(v2, sel_removeItemAtURL_error_, v3, v8);

    if (v4)
    {
      v5 = v8[0];
    }
    else
    {
      v6 = v8[0];
      v7 = (void *)sub_1BB86C484();

      swift_willThrow();
    }
  }
}

uint64_t sub_1BAFB3BF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void (*v8)(void *, uint64_t, uint64_t, void *);
  uint64_t v9;
  id v10;
  id v11;

  v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4)
    v9 = sub_1BB872DB4();
  else
    v9 = 0;
  swift_retain();
  v10 = a2;
  v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFB3C94()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

void sub_1BAFB3CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  sub_1BAFB46AC(a4, a5);
}

void sub_1BAFB3CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v29[2];
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v29 - v8;
  v10 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v10);
  v36 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v29 - v15;
  v46 = MEMORY[0x1E0DEE9D8];
  v38 = *(_QWORD *)(a1 + 16);
  if (v38)
  {
    v17 = 0;
    v29[1] = v4;
    v30 = (uint64_t *)(a4 + 40);
    v18 = v13;
    v34 = v9;
    v35 = a1;
    v32 = v10;
    v33 = a4;
    v31 = v13;
    while (v17 < *(_QWORD *)(a1 + 16))
    {
      v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      v40 = *(_QWORD *)(v18 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v18 + 16))(v9, a1 + v19 + v40 * v17, v10, v14);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v37)(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v10) == 1)
        goto LABEL_20;
      v39 = v19;
      v41 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v41(v16, v9, v10);
      v20 = *(_QWORD *)(a4 + 16);
      if (v20)
      {
        swift_bridgeObjectRetain();
        v21 = v30;
        while (1)
        {
          v23 = *(v21 - 1);
          v22 = *v21;
          swift_bridgeObjectRetain();
          v44 = sub_1BB86C568();
          v45 = v24;
          v42 = v23;
          v43 = v22;
          sub_1BA7114A0();
          v25 = sub_1BB873B40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v25 & 1) != 0)
            break;
          v21 += 2;
          if (!--v20)
          {
            a4 = v33;
            swift_bridgeObjectRelease();
            v9 = v34;
            a1 = v35;
            v18 = v31;
            v10 = v32;
            goto LABEL_3;
          }
        }
        a4 = v33;
        swift_bridgeObjectRelease();
        v10 = v32;
        v41(v36, v16, v32);
        v26 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC79D98(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v46;
        }
        v9 = v34;
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1BAC79D98(v27 > 1, v28 + 1, 1);
          v26 = v46;
        }
        *(_QWORD *)(v26 + 16) = v28 + 1;
        v41((char *)(v26 + v39 + v28 * v40), v36, v10);
        v46 = v26;
        a1 = v35;
        v18 = v31;
      }
      else
      {
LABEL_3:
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v10);
      }
      if (++v17 == v38)
      {
        v37(v9, 1, 1, v10, v14);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v9, 1, 1, v10, v14);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1BA7F0A80((uint64_t)v9);
  }
}

id sub_1BAFB4050(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  unsigned int v30;
  id v31;
  id v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  id v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  unsigned int v46;
  id v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t *boxed_opaque_existential_0;
  void (*v51)(uint64_t *, char *, uint64_t);
  char *v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  _QWORD v61[2];
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  id v68;
  char *v69;
  uint64_t v70;
  char *v71;
  id aBlock;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, void *, uint64_t, uint64_t, void *);
  void *v75;
  void (*v76)(uint64_t, char);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v4 = v3;
  v62 = a3;
  v70 = a2;
  v80 = *MEMORY[0x1E0C80C00];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v61 - v7;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v67 = (char *)v61 - v13;
  v61[1] = v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v61 - v16;
  v18 = NSTemporaryDirectory();
  v19 = sub_1BB8729A0();
  v21 = v20;

  aBlock = a1;
  v73 = v70;
  v78 = v19;
  v79 = v21;
  swift_bridgeObjectRetain();
  v78 = sub_1BB872B8C();
  v79 = v22;
  sub_1BB872AF0();
  swift_bridgeObjectRelease();
  sub_1BB86C55C();
  swift_bridgeObjectRelease();
  v68 = (id)objc_opt_self();
  v23 = objc_msgSend(v68, sel_defaultManager);
  v69 = v17;
  v24 = (void *)sub_1BB86C58C();
  aBlock = 0;
  LODWORD(v18) = objc_msgSend(v23, sel_removeItemAtURL_error_, v24, &aBlock);

  if ((_DWORD)v18)
  {
    v25 = aBlock;
  }
  else
  {
    v26 = aBlock;
    v27 = (void *)sub_1BB86C484();

    swift_willThrow();
    v4 = 0;
  }
  v28 = objc_msgSend(v68, sel_defaultManager);
  v29 = (void *)sub_1BB86C58C();
  aBlock = 0;
  v30 = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 0, 0, &aBlock);

  if (v30)
  {
    v61[0] = v4;
    v31 = aBlock;
  }
  else
  {
    v32 = aBlock;
    v33 = (void *)sub_1BB86C484();

    swift_willThrow();
    v61[0] = 0;
  }
  v34 = v71;
  v35 = *(char **)(v62 + 16);
  if (v35)
  {
    v36 = v62 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v64 = *(_QWORD *)(v10 + 72);
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v65 = v8;
    while (1)
    {
      v66(v8, v36, v9);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v37(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        break;
      v63 = v37;
      v70 = v36;
      v71 = v35;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v34, v8, v9);
      v38 = objc_msgSend(v68, sel_defaultManager);
      v39 = (void *)sub_1BB86C58C();
      sub_1BB86C568();
      v40 = v9;
      v41 = v34;
      v42 = v67;
      sub_1BB86C5BC();
      swift_bridgeObjectRelease();
      v43 = (void *)sub_1BB86C58C();
      v44 = v10;
      v45 = *(void (**)(char *, uint64_t))(v10 + 8);
      v45(v42, v40);
      aBlock = 0;
      v46 = objc_msgSend(v38, sel_copyItemAtURL_toURL_error_, v39, v43, &aBlock);

      v47 = aBlock;
      if (!v46)
      {
        v55 = v47;
        sub_1BB86C484();

        swift_willThrow();
        v45(v41, v40);
        swift_bridgeObjectRelease();
        v45(v69, v40);
        return v55;
      }
      v45(v41, v40);
      v36 = v70 + v64;
      v35 = v71 - 1;
      v10 = v44;
      v9 = v40;
      v8 = v65;
      v34 = v41;
      if (v71 == (char *)1)
      {
        v63(v65, 1, 1, v9);
        break;
      }
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v48(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_1BA99C424();
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v49 + 56) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v49 + 32));
  v51 = *(void (**)(uint64_t *, char *, uint64_t))(v10 + 16);
  v52 = v69;
  v51(boxed_opaque_existential_0, v69, v9);
  v53 = objc_allocWithZone(MEMORY[0x1E0CEA2D8]);
  v54 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v55 = objc_msgSend(v53, sel_initWithActivityItems_applicationActivities_, v54, 0);

  v56 = v67;
  v51((uint64_t *)v67, v52, v9);
  v57 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v58 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v58 + v57, v56, v9);
  v76 = sub_1BAFB4BA4;
  v77 = v58;
  aBlock = (id)MEMORY[0x1E0C809B0];
  v73 = 1107296256;
  v74 = sub_1BAFB3BF0;
  v75 = &block_descriptor_32;
  v59 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v55, sel_setCompletionWithItemsHandler_, v59);
  _Block_release(v59);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v52, v9);
  return v55;
}

void sub_1BAFB46AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  unint64_t v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  _QWORD v48[5];
  id v49;
  unint64_t v50;
  char v51;
  uint64_t v52;

  v45 = a2;
  v52 = *MEMORY[0x1E0C80C00];
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[1];
  v47 = (void *)*a1;
  v9 = a1[2];
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v46 = v2;
  v11 = *(void **)(v2 + 56);
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(v11, sel_contentDirectory);
  sub_1BB8729A0();

  sub_1BB86C55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BB86C58C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v49 = 0;
  v14 = objc_msgSend(v10, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v13, 0, 0, &v49);

  v15 = v49;
  if (v14)
  {
    v16 = sub_1BB872DB4();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v47;
    sub_1BAFB3CEC(v16, (uint64_t)v47, v8, v9);
    v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = sub_1BAFB4050(v17, v8, v19);
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v46 + 16), *(_QWORD *)(v46 + 40));
    v31 = (void *)sub_1BB86FFC4();
    if (v31
      && (v32 = v31,
          v33 = objc_msgSend(v31, sel_rootViewController),
          v32,
          v33))
    {
      v34 = (void *)sub_1BB8733CC();

      v35 = objc_msgSend(v30, sel_popoverPresentationController);
      v36 = v45;
      if (v35)
      {
        v37 = v35;
        if (v45)
          v38 = (void *)sub_1BB87066C();
        else
          v38 = 0;
        objc_msgSend(v37, sel_setSourceView_, v38, v45);

      }
      v39 = objc_msgSend(v30, sel_popoverPresentationController, v45);
      if (v39)
      {
        v40 = v39;
        if (!v36
          || (sub_1BB870660(),
              v41 = *(double *)v48,
              v42 = *(double *)&v48[1],
              v43 = *(double *)&v48[2],
              v44 = *(double *)&v48[3],
              sub_1BA739A14((uint64_t)v48, (uint64_t)&v49),
              v51 == 1))
        {
          v41 = *MEMORY[0x1E0C9D628];
          v42 = *(double *)(MEMORY[0x1E0C9D628] + 8);
          v43 = *(double *)(MEMORY[0x1E0C9D628] + 16);
          v44 = *(double *)(MEMORY[0x1E0C9D628] + 24);
        }
        objc_msgSend(v40, sel_setSourceRect_, v41, v42, v43, v44);

      }
      objc_msgSend(v34, sel_presentViewController_animated_completion_, v30, 1, 0);

    }
    else
    {

    }
  }
  else
  {
    v20 = v15;
    v21 = (void *)sub_1BB86C484();

    swift_willThrow();
    v22 = (uint64_t)v47;
    v23 = sub_1BB8732F4();
    sub_1BA7AA598();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
    v25 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    v26 = sub_1BA6A2D8C();
    *(_QWORD *)(v24 + 64) = v26;
    *(_QWORD *)(v24 + 32) = v22;
    *(_QWORD *)(v24 + 40) = v8;
    v49 = 0;
    v50 = 0xE000000000000000;
    v48[0] = v21;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    sub_1BB873E34();
    v27 = v49;
    v28 = v50;
    *(_QWORD *)(v24 + 96) = v25;
    *(_QWORD *)(v24 + 104) = v26;
    *(_QWORD *)(v24 + 72) = v27;
    *(_QWORD *)(v24 + 80) = v28;
    sub_1BA517860();
    v29 = (void *)sub_1BB873A08();
    sub_1BB86EF44("Failed to export database for %{public}@, error=%{public}@", 58, 2, &dword_1BA493000, v29, v23, v24);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BAFB4B44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1BAFB4BA4(uint64_t a1, char a2)
{
  sub_1BB86C67C();
  sub_1BAFB3ADC(a1, a2);
}

uint64_t dispatch thunk of FeedSortableItem.publisherID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedSortableItem.score.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedSortableItem.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

int64x2_t static FormatCodingPuzzleTypeOverridesStrategy.defaultValue.getter@<Q0>(int64x2_t *a1@<X8>)
{
  __int8 *v2;
  uint64_t v3;
  int64x2_t result;

  v2 = &a1->i8[*(int *)(type metadata accessor for FormatPuzzleType.Overrides(0) + 24)];
  v3 = sub_1BB86C67C();
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = vdupq_n_s64(0xF000000000000007);
  *a1 = result;
  return result;
}

int64x2_t sub_1BAFB4C80@<Q0>(int64x2_t *a1@<X8>)
{
  __int8 *v2;
  uint64_t v3;
  int64x2_t result;

  v2 = &a1->i8[*(int *)(type metadata accessor for FormatPuzzleType.Overrides(0) + 24)];
  v3 = sub_1BB86C67C();
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = vdupq_n_s64(0xF000000000000007);
  *a1 = result;
  return result;
}

uint64_t _s8NewsFeed39FormatCodingPuzzleTypeOverridesStrategyV12shouldEncode12wrappedValueSbAA0ceF0C0G0V_tFZ_0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v17;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = *a1;
  sub_1BA4C2DD8((uint64_t)a1, (uint64_t)&v17 - v9, v12);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
    goto LABEL_5;
  }
  v13 = *((_QWORD *)v10 + 1);
  sub_1BA5E7FF4(v13);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatPuzzleType.Overrides);
  sub_1BA5E800C(v13);
  sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
  if ((~v13 & 0xF000000000000007) != 0)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
    return 1;
  }
  sub_1BA4C2DD8((uint64_t)&v7[*(int *)(v5 + 24)], (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatPuzzleType.Overrides);
  v14 = sub_1BB86C67C();
  v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v4, 1, v14) != 1;
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  return v15;
}

unint64_t sub_1BAFB4EA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8CAEBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFB4EC8()
{
  return sub_1BAFB4F10(&qword_1ED3AD520, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
}

uint64_t sub_1BAFB4EEC()
{
  return sub_1BAFB4F10(&qword_1EF2AE330, (uint64_t)&protocol conformance descriptor for FormatPuzzleType.Overrides);
}

uint64_t sub_1BAFB4F10(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatPuzzleType.Overrides(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingPuzzleTypeOverridesStrategy()
{
  return &type metadata for FormatCodingPuzzleTypeOverridesStrategy;
}

uint64_t FormatOptionsNode.statements.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionsNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionsNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionsNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatOptionsNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatOptionsNode.statements.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatOptionsNode.statements.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatOptionsNode.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatOptionsNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatOptionsNode.__allocating_init(identifier:statements:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  swift_beginAccess();
  v8[4] = a3;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

_QWORD *FormatOptionsNode.init(identifier:statements:children:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  swift_beginAccess();
  v4[4] = a3;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatOptionsNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatOptionsNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAFB5328(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed17FormatOptionsNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BAFB5334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  unsigned __int8 v86;

  v78 = a1;
  v76 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v76);
  v66 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v65 = (uint64_t)&v59 - v6;
  MEMORY[0x1E0C80A78](v7);
  v77 = (uint64_t *)((char *)&v59 - v8);
  MEMORY[0x1E0C80A78](v9);
  v75 = (uint64_t)&v59 - v10;
  v73 = type metadata accessor for FormatOptionsNodeStatement();
  v11 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v59 - v15;
  v64 = a2 + 32;
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 32);
  v71 = *(_QWORD *)(v16 + 16);
  if (!v71)
    goto LABEL_45;
  v74 = v13;
  v61 = a2;
  v62 = v2;
  v60 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v72 = v16 + v60;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v68 = v16;
  v70 = v11;
  v19 = v74;
  while (1)
  {
    if (v18 >= *(_QWORD *)(v16 + 16))
    {
      __break(1u);
      return result;
    }
    v69 = *(_QWORD *)(v11 + 72);
    sub_1BA4C2DD8(v72 + v69 * v18, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    v20 = v19[1];
    v21 = v77;
    *v77 = *v19;
    v21[1] = v20;
    v21[6] = MEMORY[0x1E0DEE9D8];
    v22 = (uint64_t)v21 + *(int *)(v76 + 28);
    v23 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v24 = v73;
    swift_bridgeObjectRetain();
    sub_1BB46EA9C();
    v25 = v82;
    v26 = *(_QWORD *)((char *)v19 + *(int *)(v24 + 24));
    if ((v84 & 1) != 0)
    {
      v27 = v83;
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v28 = 1;
      goto LABEL_23;
    }
    v67 = v22;
    v25 = v82;
    v29 = *(_QWORD *)(v26 + 16);
    if (v29)
      break;
    swift_bridgeObjectRetain();
LABEL_22:
    v16 = v68;
    sub_1BA4A2E80((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    swift_bridgeObjectRelease();
    v27 = 0;
    v26 = 0;
    v28 = 0;
LABEL_23:
    v38 = (uint64_t)v77;
    v77[2] = v25;
    *(_QWORD *)(v38 + 24) = v27;
    *(_QWORD *)(v38 + 32) = v26;
    *(_BYTE *)(v38 + 40) = v28;
    v39 = v75;
    sub_1BA5193C4(v38, v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v40 = swift_allocBox();
    v42 = v41;
    sub_1BA4C2DD8(v39, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v43 = *(_QWORD **)(v78 + 48);
    v44 = v43[2];
    if (!v44 || v43[v44 + 3] >> 60 != 1)
      goto LABEL_28;
    v45 = swift_projectBox();
    v46 = v65;
    sub_1BA4C2DD8(v45, v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v47 = v66;
    sub_1BA4C2DD8(v42, v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    swift_retain();
    swift_retain();
    v48 = sub_1BB188A5C(v46, v47);
    sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    swift_release();
    swift_release();
    if (!v48)
    {
      v43 = *(_QWORD **)(v78 + 48);
LABEL_28:
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_1BB38ED0C(0, v43[2] + 1, 1, v43);
      v50 = v43[2];
      v49 = v43[3];
      if (v50 >= v49 >> 1)
        v43 = sub_1BB38ED0C((_QWORD *)(v49 > 1), v50 + 1, 1, v43);
      v43[2] = v50 + 1;
      v43[v50 + 4] = v40 | 0x1000000000000000;
      swift_release();
      *(_QWORD *)(v78 + 48) = v43;
      goto LABEL_33;
    }
    swift_release();
LABEL_33:
    ++v18;
    result = sub_1BA4A2E80(v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v11 = v70;
    if (v18 == v71)
    {
      swift_bridgeObjectRelease();
      v53 = *(_QWORD *)(*(_QWORD *)v64 + 16);
      if (v53)
      {
        v54 = *(_QWORD *)v64 + v60;
        swift_bridgeObjectRetain();
        v55 = v62;
        v56 = (uint64_t)v63;
        v57 = v69;
        while (1)
        {
          sub_1BA4C2DD8(v54, v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
          sub_1BAC4A7C0(v78);
          if (v55)
            break;
          sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
          v54 += v57;
          if (!--v53)
          {
            swift_bridgeObjectRelease();
            goto LABEL_44;
          }
        }
        sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        return swift_bridgeObjectRelease();
      }
LABEL_44:
      a2 = v61;
LABEL_45:
      swift_beginAccess();
      v58 = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      sub_1BABEBCF0(v78, v58);
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain_n();
  v30 = 0;
  v31 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v33 = *(unsigned __int8 *)(v26 + v30 + 32);
    if (!(v33 >> 6))
    {
      if (v25 != 3)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
        swift_allocError();
        v52 = 3;
        goto LABEL_38;
      }
      v85 = *(_BYTE *)(v26 + v30 + 32);
      v79 = 0x3FF0000000000000;
      v80 = v31;
      sub_1BB40787C();
      v32 = v81;
      goto LABEL_9;
    }
    if (v33 >> 6 != 1)
      break;
    if (v25 != 5)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v52 = 5;
      goto LABEL_38;
    }
    if ((v33 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = swift_allocObject();
      *(_BYTE *)(v32 + 16) = 1;
      *(_QWORD *)(v32 + 24) = v31;
    }
    else
    {
      v34 = swift_allocObject();
      v35 = sub_1BB872AB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v34 + 16) = v35;
      *(_QWORD *)(v34 + 24) = v31;
      v32 = v34 | 0x4000000000000000;
    }
LABEL_9:
    v79 = v32;
    FormatOptionValue.type.getter();
LABEL_10:
    swift_release();
    ++v30;
    v25 = v86;
    if (v29 == v30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  if (v25 == 4)
  {
    v36 = swift_allocObject();
    v79 = 1;
    sub_1BA6F0168();
    *(_QWORD *)(v36 + 16) = sub_1BB873B58();
    *(_QWORD *)(v36 + 24) = v37;
    *(_QWORD *)(v36 + 32) = v31;
    v79 = v36 | 0x5000000000000000;
    FormatOptionValue.type.getter();
    goto LABEL_10;
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
  swift_allocError();
  v52 = 4;
LABEL_38:
  *v51 = v52;
  v51[1] = v25;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA502AD0(v67, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFB5B90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  int v8;
  __int16 v9;

  v3 = *v1;
  v5 = 1;
  v6 = 0u;
  v7 = 0u;
  v8 = 0;
  v9 = -16384;
  swift_retain();
  sub_1BB3D9ECC((uint64_t)&v5, a1, v3);
  return swift_release();
}

uint64_t sub_1BAFB5C00(uint64_t a1, uint64_t a2)
{
  return FormatOptionsNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BAFB5C20(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2B8148, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNode, (uint64_t)&protocol conformance descriptor for FormatOptionsNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFB5C5C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BDD90, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNode, (uint64_t)&protocol conformance descriptor for FormatOptionsNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39FCA0, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNode, (uint64_t)&protocol conformance descriptor for FormatOptionsNode);
  result = sub_1BA50AD30(&qword_1EF2B8150, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNode, (uint64_t)&protocol conformance descriptor for FormatOptionsNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAFB5CD4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2B8158, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNode, (uint64_t)&protocol conformance descriptor for FormatOptionsNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFB5D10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAFB5D5C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAFB5DA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatOptionsNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatOptionsNode.__allocating_init(identifier:statements:children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BAFB5E08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFB5E34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAFB5E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v32 = a1;
  sub_1BA4A3FB4(0, &qword_1EF2AD7D0, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
  MEMORY[0x1E0C80A78](v1);
  v24 = (char *)&v20 - v2;
  v29 = type metadata accessor for PuzzleLeaderboardEntry();
  v23 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v20 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v27 = (char *)&v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  v26 = (char *)&v20 - v9;
  MEMORY[0x1E0C80A78](v10);
  v30 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  MEMORY[0x1E0C80A78](v30);
  v22 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v21 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  __asm { BR              X10 }
}

double sub_1BAFB613C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  double v8;
  double v9;

  v3 = *(_QWORD *)(v2 - 112) + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v4 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v3 + *(int *)(v4 + 20), v1, type metadata accessor for PuzzleStatisticCategory);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      v6 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      v7 = v1;
      v0 = *(_QWORD *)(v2 - 168);
    }
    else
    {
      v6 = type metadata accessor for PuzzleStatisticValue;
      v7 = v1;
    }
    sub_1BA5193C4(v7, v0, v6);
    PuzzleStatisticValue.primaryValue.getter();
    v8 = v9;
    sub_1BA4A2E80(v0, v6);
  }
  else
  {
    sub_1BA4A2E80(v1, type metadata accessor for PuzzleStatisticCategory);
    return -1.0;
  }
  return v8;
}

BOOL static FormatPuzzleStatisticBinding.Float.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BAFB65AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  v13 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v14 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v13 + *(int *)(v14 + 20), (uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for PuzzleStatisticCategory);
    goto LABEL_5;
  }
  sub_1BAFA75E4((uint64_t)v6, (uint64_t)v12);
  sub_1BAFA75E4((uint64_t)v12, (uint64_t)v9);
  v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_1BA502AD0((uint64_t)v9, (unint64_t *)&unk_1ED3C4390, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_5:
    v17 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  sub_1BA5193C4((uint64_t)v9, a2, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
}

uint64_t sub_1BAFB6788(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFB67C4 + 4 * byte_1BB8DCDA8[a1]))(0x567972616D697270, 0xEC00000065756C61);
}

uint64_t sub_1BAFB67C4()
{
  return 0x7261646E6F636573;
}

uint64_t sub_1BAFB67E8()
{
  return 0x7972616974726574;
}

unint64_t sub_1BAFB680C()
{
  return 0xD000000000000016;
}

void sub_1BAFB686C(char *a1)
{
  sub_1BB7F14FC(*a1);
}

void sub_1BAFB6878()
{
  char *v0;

  sub_1BAB07F60(0, *v0);
}

void sub_1BAFB6884(uint64_t a1)
{
  char *v1;

  sub_1BA9D1A14(a1, *v1);
}

void sub_1BAFB688C(uint64_t a1)
{
  char *v1;

  sub_1BAB07F60(a1, *v1);
}

uint64_t sub_1BAFB6894@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAFB7660();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFB68C0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAFB6788(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAFB68E8()
{
  sub_1BAFB6CE0();
  return sub_1BB872D60();
}

uint64_t sub_1BAFB6944()
{
  sub_1BAFB6CE0();
  return sub_1BB872D0C();
}

void sub_1BAFB6990(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724FBB0;
}

uint64_t FormatPuzzleStatisticBinding.Float.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleStatisticBinding.Float.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAFB6A10()
{
  unint64_t result;

  result = qword_1EF2B8160;
  if (!qword_1EF2B8160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Float, &type metadata for FormatPuzzleStatisticBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2B8160);
  }
  return result;
}

unint64_t sub_1BAFB6A54(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFB6A78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFB6A78()
{
  unint64_t result;

  result = qword_1EF2B8168;
  if (!qword_1EF2B8168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Float, &type metadata for FormatPuzzleStatisticBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2B8168);
  }
  return result;
}

unint64_t sub_1BAFB6ABC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE717B8();
  a1[2] = sub_1BAEF37F8();
  result = sub_1BAFB6A10();
  a1[3] = result;
  return result;
}

uint64_t sub_1BAFB6AF0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Float.init(from:)(a1, a2);
}

void sub_1BAFB6B04(_QWORD *a1)
{
  FormatPuzzleStatisticBinding.Float.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Float()
{
  return &type metadata for FormatPuzzleStatisticBinding.Float;
}

uint64_t _s5FloatOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BAFB6B78 + 4 * byte_1BB8DCDB4[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BAFB6BAC + 4 * byte_1BB8DCDAF[v4]))();
}

uint64_t sub_1BAFB6BAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB6BB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFB6BBCLL);
  return result;
}

uint64_t sub_1BAFB6BC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFB6BD0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BAFB6BD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB6BDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5FloatO10CodingTypeOMa()
{
  return &_s5FloatO10CodingTypeON;
}

unint64_t sub_1BAFB6BFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B8170;
  if (!qword_1EF2B8170)
  {
    sub_1BAFB6C44();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B8170);
  }
  return result;
}

void sub_1BAFB6C44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8178)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8178);
  }
}

unint64_t sub_1BAFB6C9C()
{
  unint64_t result;

  result = qword_1EF2B8180;
  if (!qword_1EF2B8180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DCFCC, &_s5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B8180);
  }
  return result;
}

unint64_t sub_1BAFB6CE0()
{
  unint64_t result;

  result = qword_1ED3ADBD8;
  if (!qword_1ED3ADBD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DCF54, &_s5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBD8);
  }
  return result;
}

void sub_1BAFB6D24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a2;
  v29 = a1;
  v30 = a3;
  v23 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v32);
  v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v25 = (char *)&v22 - v8;
  MEMORY[0x1E0C80A78](v9);
  v24 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  __asm { BR              X10 }
}

uint64_t sub_1BAFB6FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  sub_1BA4C2DD8(*(_QWORD *)(v3 - 96), v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v4 = *(int *)(v1 + 32);
  v5 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v0 + v4 + *(int *)(v5 + 20), v2, type metadata accessor for PuzzleStatisticCategory);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      v8 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      v9 = v2;
      v10 = *(_QWORD *)(v3 - 128);
    }
    else
    {
      v8 = type metadata accessor for PuzzleStatisticValue;
      v9 = v2;
      v10 = *(_QWORD *)(v3 - 136);
    }
    sub_1BA5193C4(v9, v10, v8);
    PuzzleStatisticValue.primaryValue.getter();
    v7 = v11;
    sub_1BA4A2E80(v10, v8);
  }
  else
  {
    sub_1BA4A2E80(v2, type metadata accessor for PuzzleStatisticCategory);
    v7 = -1.0;
  }
  v12 = *(_QWORD **)(v3 - 112);
  sub_1BAAF3A18(0x207972616D697250, 0xED000065756C6156, v7, 0, v12);
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v13 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
}

uint64_t sub_1BAFB7660()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

NewsFeed::LiveActivityWebEmbedDatastore::SubscriptionState_optional __swiftcall LiveActivityWebEmbedDatastore.SubscriptionState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::LiveActivityWebEmbedDatastore::SubscriptionState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t LiveActivityWebEmbedDatastore.SubscriptionState.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6269726373627573;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

uint64_t sub_1BAFB7764()
{
  return sub_1BA8D45B8();
}

uint64_t sub_1BAFB776C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFB77F0()
{
  return sub_1BAB07C58();
}

NewsFeed::LiveActivityWebEmbedDatastore::SubscriptionState_optional sub_1BAFB77F8(Swift::String *a1)
{
  return LiveActivityWebEmbedDatastore.SubscriptionState.init(rawValue:)(*a1);
}

void sub_1BAFB7804(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 0xD000000000000012;
  v3 = 0xEA00000000006465;
  v4 = 0x6269726373627573;
  if (*v1 != 1)
  {
    v4 = 0xD000000000000014;
    v3 = 0x80000001BB95EAC0;
  }
  if (*v1)
  {
    v2 = v4;
    v5 = v3;
  }
  else
  {
    v5 = 0x80000001BB95EAA0;
  }
  *a1 = v2;
  a1[1] = v5;
}

uint64_t sub_1BAFB786C()
{
  sub_1BAFBB200();
  return sub_1BB872D60();
}

uint64_t sub_1BAFB78C8()
{
  sub_1BAFBB200();
  return sub_1BB872D0C();
}

uint64_t sub_1BAFB7914(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F0764(*a1, *a2);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86EF08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.subscription.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity()
{
  uint64_t result;

  result = qword_1ED3A2CB0;
  if (!qword_1ED3A2CB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.scheduledStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity() + 24);
  return sub_1BA76D70C(v3, a1);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.clientDataTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity() + 28);
  return sub_1BA76D70C(v3, a1);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.debugDescription.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  sub_1BB86EF08();
  sub_1BA4A2870(&qword_1EF2B8188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], MEMORY[0x1E0D60D80]);
  v5 = sub_1BB87420C();
  sub_1BB872AFC(v1);
  v2 = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  v3 = (char *)*(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
  if (!*(_BYTE *)(v0 + *(int *)(v2 + 20)))
    v3 = "fixedNonCurrentPublicRelease";
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BAFB7B20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFB7B44 + 4 * byte_1BB8DD020[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1BAFB7B44()
{
  return 0x7069726373627573;
}

unint64_t sub_1BAFB7B64()
{
  return 0xD000000000000012;
}

unint64_t sub_1BAFB7B80()
{
  return 0xD000000000000013;
}

uint64_t sub_1BAFB7BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFBAE80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFB7BC4()
{
  sub_1BAFB9764();
  return sub_1BB874710();
}

uint64_t sub_1BAFB7BEC()
{
  sub_1BAFB9764();
  return sub_1BB87471C();
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B8190, (uint64_t (*)(void))sub_1BAFB9764, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB9764();
  sub_1BB8746C8();
  v16 = 0;
  sub_1BB86EF08();
  sub_1BA4A2870((unint64_t *)&unk_1ED3A25D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], MEMORY[0x1E0D60D58]);
  sub_1BB8741AC();
  if (!v2)
  {
    v15 = *(_BYTE *)(v3 + *(int *)(type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity() + 20));
    v14 = 1;
    sub_1BAFB97A8();
    sub_1BB8741AC();
    v13 = 2;
    sub_1BB86C8B0();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BB87414C();
    v12 = 3;
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t LiveActivityWebEmbedDatastore.LiveActivity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v26 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v25 - v6;
  v29 = sub_1BB86EF08();
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B81A8, (uint64_t (*)(void))sub_1BAFB9764, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v30 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - v10;
  v12 = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB9764();
  v33 = v11;
  v15 = v34;
  sub_1BB87468C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v9;
  v17 = v31;
  v39 = 0;
  sub_1BA4A2870(&qword_1EF2B81B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], MEMORY[0x1E0D60D78]);
  v18 = v29;
  sub_1BB8740D4();
  v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v20 = (uint64_t)v14;
  v19(v14, v32, v18);
  v37 = 1;
  sub_1BAFB97EC();
  sub_1BB8740D4();
  v34 = v12;
  v14[*(int *)(v12 + 20)] = v38;
  sub_1BB86C8B0();
  v36 = 2;
  v21 = sub_1BA4A2870(&qword_1ED3B0528, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v22 = (uint64_t)v28;
  v32 = (char *)v21;
  sub_1BB874068();
  sub_1BA50236C(v22, (uint64_t)&v14[*(int *)(v34 + 24)]);
  v35 = 3;
  v23 = (uint64_t)v27;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v30);
  sub_1BA50236C(v23, v20 + *(int *)(v34 + 28));
  sub_1BAFB9830(v20, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity);
}

uint64_t sub_1BAFB8254@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveActivityWebEmbedDatastore.LiveActivity.init(from:)(a1, a2);
}

uint64_t sub_1BAFB8268(_QWORD *a1)
{
  return LiveActivityWebEmbedDatastore.LiveActivity.encode(to:)(a1);
}

uint64_t LiveActivityWebEmbedDatastore.DebugData.followableLiveActivities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static LiveActivityWebEmbedDatastore.DebugData.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      v3 = swift_bridgeObjectRetain();
      v4 = sub_1BA882288(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v4 & 1) != 0)
        return 1;
    }
  }
  else if (!v2)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1BAFB82FC()
{
  return 0xD000000000000018;
}

uint64_t sub_1BAFB8318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFBB02C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BAFB8340()
{
  sub_1BAFB9874();
  return sub_1BB874710();
}

uint64_t sub_1BAFB8368()
{
  sub_1BAFB9874();
  return sub_1BB87471C();
}

uint64_t LiveActivityWebEmbedDatastore.DebugData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BA4CDF6C(0, &qword_1ED3A31D8, (uint64_t (*)(void))sub_1BAFB9874, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB9874();
  sub_1BB8746C8();
  v10[3] = v8;
  sub_1BA4B07F0(0, &qword_1ED3A2EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAFB98B8(&qword_1ED3A2EF0, (unint64_t *)&unk_1ED3A25D8, MEMORY[0x1E0D60D58], MEMORY[0x1E0DEAF10]);
  sub_1BB87414C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LiveActivityWebEmbedDatastore.DebugData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B81C0, (uint64_t (*)(void))sub_1BAFB9874, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB9874();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v12;
    sub_1BA4B07F0(0, &qword_1ED3A2EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAFB98B8(&qword_1EF2B81C8, &qword_1EF2B81B0, MEMORY[0x1E0D60D78], MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAFB867C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LiveActivityWebEmbedDatastore.DebugData.init(from:)(a1, a2);
}

uint64_t sub_1BAFB8690(_QWORD *a1)
{
  return LiveActivityWebEmbedDatastore.DebugData.encode(to:)(a1);
}

uint64_t sub_1BAFB86A4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      v3 = swift_bridgeObjectRetain();
      v4 = sub_1BA882288(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v4 & 1) != 0)
        return 1;
    }
  }
  else if (!v2)
  {
    return 1;
  }
  return 0;
}

uint64_t LiveActivityWebEmbedDatastore.liveActivities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LiveActivityWebEmbedDatastore.debug.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA6E9BC8(v2);
}

uint64_t LiveActivityWebEmbedDatastore.init(liveActivities:debug:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *a3 = result;
  a3[1] = v3;
  return result;
}

uint64_t static LiveActivityWebEmbedDatastore.empty.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1ED3CCD38 != -1)
    swift_once();
  v2 = unk_1ED3CCD30;
  *a1 = qword_1ED3CCD28;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return sub_1BA6E9BC8(v2);
}

uint64_t sub_1BAFB8794()
{
  _BYTE *v0;

  if (*v0)
    return 0x6775626564;
  else
    return 0x697463416576696CLL;
}

uint64_t sub_1BAFB87D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFBB0B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFB87FC()
{
  sub_1BAFB9950();
  return sub_1BB874710();
}

uint64_t sub_1BAFB8824()
{
  sub_1BAFB9950();
  return sub_1BB87471C();
}

uint64_t LiveActivityWebEmbedDatastore.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1BA4CDF6C(0, &qword_1ED3A31D0, (uint64_t (*)(void))sub_1BAFB9950, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB9950();
  sub_1BB8746C8();
  v15 = v8;
  v14 = 0;
  sub_1BA4B07F0(0, &qword_1ED3A2F88, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAFB99D8(&qword_1ED3A2F90, &qword_1ED3A2CA8, (uint64_t)&protocol conformance descriptor for LiveActivityWebEmbedDatastore.LiveActivity, MEMORY[0x1E0DEAF10]);
  v9 = v13;
  sub_1BB8741AC();
  if (!v9)
  {
    v15 = v12;
    v14 = 1;
    sub_1BAFB9994();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LiveActivityWebEmbedDatastore.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;
  char v15;
  uint64_t v16;

  v14 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B81D0, (uint64_t (*)(void))sub_1BAFB9950, (uint64_t)&type metadata for LiveActivityWebEmbedDatastore.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFB9950();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v14;
  sub_1BA4B07F0(0, &qword_1ED3A2F88, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v15 = 0;
  sub_1BAFB99D8(&qword_1EF2B81D8, &qword_1EF2B81E0, (uint64_t)&protocol conformance descriptor for LiveActivityWebEmbedDatastore.LiveActivity, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v11 = v16;
  v15 = 1;
  sub_1BAFB9A70();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v12 = v16;
  swift_bridgeObjectRetain();
  sub_1BA6E9BC8(v12);
  swift_bridgeObjectRelease();
  *v10 = v11;
  v10[1] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BA6E9B40(v12);
}

uint64_t sub_1BAFB8C38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LiveActivityWebEmbedDatastore.init(from:)(a1, a2);
}

uint64_t sub_1BAFB8C4C(_QWORD *a1)
{
  return LiveActivityWebEmbedDatastore.encode(to:)(a1);
}

id sub_1BAFB8C64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_1BB86EFEC();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - v4;
  v6 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BB86BCF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  sub_1BB86BD4C();
  swift_allocObject();
  sub_1BB86BD40();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0CAE150], v7);
  sub_1BB86BD04();
  v27 = v11;
  v28 = v12;
  sub_1BAFBB1BC();
  v13 = sub_1BB86BD28();
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_1BA6E9B40(v12);
  sub_1BB8729DC();
  sub_1BB8729B8();
  if (v16)
  {
    v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v18 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_initWithJSONString_, v18);
    sub_1BA69D314(v13, v15);

    swift_release();
  }
  else
  {
    sub_1BB86EFA4();
    v21 = sub_1BB86EFC8();
    v22 = sub_1BB8732F4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1BA493000, v21, v22, "Unable to create string from JSON data.", v23, 2u);
      MEMORY[0x1BCCE5C38](v23, -1, -1);
    }
    sub_1BA69D314(v13, v15);
    swift_release();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    return 0;
  }
  return v19;
}

uint64_t _s8NewsFeed29LiveActivityWebEmbedDatastoreV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1BA882138(*a1, *a2) & 1) == 0)
    return 0;
  if (v2 == 1)
  {
    if (v3 == 1)
      return 1;
    goto LABEL_7;
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_7:
    sub_1BA6E9BC8(v3);
    sub_1BA6E9B40(v2);
    sub_1BA6E9B40(v3);
    return 0;
  }
  if (v2)
  {
    if (v3)
    {
      sub_1BA6E9BC8(v2);
      sub_1BA6E9BC8(v2);
      sub_1BA6E9BC8(v3);
      v5 = swift_bridgeObjectRetain();
      v6 = sub_1BA882288(v5, v3);
      swift_bridgeObjectRelease();
      sub_1BA6E9B40(v3);
      swift_bridgeObjectRelease();
      sub_1BA6E9B40(v2);
      if ((v6 & 1) != 0)
        return 1;
    }
    else
    {
      sub_1BA6E9BC8(v2);
      swift_bridgeObjectRelease();
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

BOOL _s8NewsFeed29LiveActivityWebEmbedDatastoreV0cD0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  _BOOL8 result;
  unint64_t v31;
  int *v32;
  uint64_t v33;
  int v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = sub_1BB86C8B0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5266EC();
  v65 = v8;
  MEMORY[0x1E0C80A78](v8);
  v63 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v60 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v61 = (uint64_t)&v58 - v16;
  MEMORY[0x1E0C80A78](v17);
  v62 = (uint64_t)&v58 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v58 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v58 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v58 - v26;
  sub_1BB86EF08();
  sub_1BA4A2870(&qword_1EF2B8228, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], MEMORY[0x1E0D60D70]);
  v66 = a1;
  sub_1BB872CF4();
  v67 = a2;
  sub_1BB872CF4();
  if (v70 == v68 && v71 == v69)
  {
    swift_bridgeObjectRelease_n();
    v28 = v66;
  }
  else
  {
    v29 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    v28 = v66;
    if ((v29 & 1) == 0)
      return result;
  }
  v64 = v6;
  v31 = 0xD000000000000012;
  v32 = (int *)type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  v33 = v32[5];
  v34 = *(unsigned __int8 *)(v28 + v33);
  v35 = *(unsigned __int8 *)(v67 + v33);
  v36 = 0x80000001BB95EAA0;
  if (v34)
  {
    if (v34 == 1)
    {
      v37 = 0x6269726373627573;
      v38 = 0xEA00000000006465;
      if (!v35)
        goto LABEL_14;
    }
    else
    {
      v37 = 0xD000000000000014;
      v38 = 0x80000001BB95EAC0;
      if (!v35)
        goto LABEL_14;
    }
  }
  else
  {
    v37 = 0xD000000000000012;
    v38 = 0x80000001BB95EAA0;
    if (!v35)
    {
LABEL_14:
      if (v37 != v31)
        goto LABEL_19;
      goto LABEL_17;
    }
  }
  if (v35 == 1)
  {
    v31 = 0x6269726373627573;
    v36 = 0xEA00000000006465;
    goto LABEL_14;
  }
  v36 = 0x80000001BB95EAC0;
  if (v37 != 0xD000000000000014)
    goto LABEL_19;
LABEL_17:
  if (v38 == v36)
  {
    swift_bridgeObjectRelease_n();
    v39 = v64;
    goto LABEL_20;
  }
LABEL_19:
  v40 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  v39 = v64;
  if ((v40 & 1) == 0)
    return result;
LABEL_20:
  sub_1BA76D70C(v28 + v32[6], (uint64_t)v27);
  sub_1BA76D70C(v67 + v32[6], (uint64_t)v24);
  v41 = (uint64_t)&v12[*(int *)(v65 + 48)];
  sub_1BA76D70C((uint64_t)v27, (uint64_t)v12);
  sub_1BA76D70C((uint64_t)v24, v41);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v42((uint64_t)v12, 1, v4) == 1)
  {
    sub_1BA76D750((uint64_t)v24);
    sub_1BA76D750((uint64_t)v27);
    if (v42(v41, 1, v4) == 1)
    {
      sub_1BA76D750((uint64_t)v12);
LABEL_27:
      v48 = v62;
      sub_1BA76D70C(v28 + v32[7], v62);
      v49 = v67 + v32[7];
      v50 = v61;
      sub_1BA76D70C(v49, v61);
      v51 = v63;
      v52 = v63 + *(int *)(v65 + 48);
      sub_1BA76D70C(v48, v63);
      sub_1BA76D70C(v50, v52);
      if (v42(v51, 1, v4) == 1)
      {
        sub_1BA76D750(v50);
        sub_1BA76D750(v48);
        if (v42(v52, 1, v4) == 1)
        {
          sub_1BA76D750(v51);
          return 1;
        }
      }
      else
      {
        sub_1BA76D70C(v51, v60);
        if (v42(v52, 1, v4) != 1)
        {
          v53 = v64;
          v54 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v59, v52, v4);
          sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
          v55 = v60;
          v56 = sub_1BB872958();
          v57 = *(void (**)(char *, uint64_t))(v53 + 8);
          v57(v54, v4);
          sub_1BA76D750(v50);
          sub_1BA76D750(v48);
          v57((char *)v55, v4);
          sub_1BA76D750(v51);
          return (v56 & 1) != 0;
        }
        sub_1BA76D750(v50);
        sub_1BA76D750(v48);
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v60, v4);
      }
      v43 = v51;
      goto LABEL_33;
    }
LABEL_25:
    v43 = (uint64_t)v12;
LABEL_33:
    sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))sub_1BA5266EC);
    return 0;
  }
  sub_1BA76D70C((uint64_t)v12, (uint64_t)v21);
  if (v42(v41, 1, v4) == 1)
  {
    sub_1BA76D750((uint64_t)v24);
    sub_1BA76D750((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v4);
    goto LABEL_25;
  }
  v44 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v59, v41, v4);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v45 = sub_1BB872958();
  v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v47 = v44;
  v28 = v66;
  v46(v47, v4);
  sub_1BA76D750((uint64_t)v24);
  sub_1BA76D750((uint64_t)v27);
  v46(v21, v4);
  sub_1BA76D750((uint64_t)v12);
  if ((v45 & 1) != 0)
    goto LABEL_27;
  return 0;
}

unint64_t sub_1BAFB9764()
{
  unint64_t result;

  result = qword_1EF2B8198;
  if (!qword_1EF2B8198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD648, &type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8198);
  }
  return result;
}

unint64_t sub_1BAFB97A8()
{
  unint64_t result;

  result = qword_1EF2B81A0;
  if (!qword_1EF2B81A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore.SubscriptionState, &type metadata for LiveActivityWebEmbedDatastore.SubscriptionState);
    atomic_store(result, (unint64_t *)&qword_1EF2B81A0);
  }
  return result;
}

unint64_t sub_1BAFB97EC()
{
  unint64_t result;

  result = qword_1EF2B81B8;
  if (!qword_1EF2B81B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore.SubscriptionState, &type metadata for LiveActivityWebEmbedDatastore.SubscriptionState);
    atomic_store(result, (unint64_t *)&qword_1EF2B81B8);
  }
  return result;
}

uint64_t sub_1BAFB9830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BAFB9874()
{
  unint64_t result;

  result = qword_1ED3A2CE0;
  if (!qword_1ED3A2CE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD5F8, &type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CE0);
  }
  return result;
}

uint64_t sub_1BAFB98B8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = *a1;
  if (!result)
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48];
    sub_1BA4B07F0(255, &qword_1ED3A2EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = v10;
    v12 = sub_1BA4A2870(a2, v9, a3);
    result = MEMORY[0x1BCCE5B24](a4, v11, &v12);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAFB9950()
{
  unint64_t result;

  result = qword_1ED3A2CC0;
  if (!qword_1ED3A2CC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD5A8, &type metadata for LiveActivityWebEmbedDatastore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CC0);
  }
  return result;
}

unint64_t sub_1BAFB9994()
{
  unint64_t result;

  result = qword_1ED3A2CF0;
  if (!qword_1ED3A2CF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore.DebugData, &type metadata for LiveActivityWebEmbedDatastore.DebugData);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CF0);
  }
  return result;
}

uint64_t sub_1BAFB99D8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED3A2F88, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAFB9A70()
{
  unint64_t result;

  result = qword_1EF2B81E8;
  if (!qword_1EF2B81E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore.DebugData, &type metadata for LiveActivityWebEmbedDatastore.DebugData);
    atomic_store(result, (unint64_t *)&qword_1EF2B81E8);
  }
  return result;
}

unint64_t sub_1BAFB9AB8()
{
  unint64_t result;

  result = qword_1EF2B81F0;
  if (!qword_1EF2B81F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore.SubscriptionState, &type metadata for LiveActivityWebEmbedDatastore.SubscriptionState);
    atomic_store(result, (unint64_t *)&qword_1EF2B81F0);
  }
  return result;
}

uint64_t destroy for LiveActivityWebEmbedDatastore(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 8);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s8NewsFeed29LiveActivityWebEmbedDatastoreVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v3 != 1)
    swift_bridgeObjectRetain();
  a1[1] = v3;
  return a1;
}

_QWORD *assignWithCopy for LiveActivityWebEmbedDatastore(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] == 1)
  {
    if (v5 != 1)
    {
      *v4 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
    v6 = 1;
  }
  else
  {
    if (v5 != 1)
    {
      *v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA4F6CCC((uint64_t)(a1 + 1));
    v6 = a2[1];
  }
  *v4 = v6;
  return a1;
}

_QWORD *assignWithTake for LiveActivityWebEmbedDatastore(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] != 1)
  {
    if (v5 != 1)
    {
      *v4 = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA4F6CCC((uint64_t)(a1 + 1));
    v5 = 1;
  }
  *v4 = v5;
  return a1;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore()
{
  return &type metadata for LiveActivityWebEmbedDatastore;
}

uint64_t storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.SubscriptionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAFB9CF4 + 4 * byte_1BB8DD029[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAFB9D28 + 4 * byte_1BB8DD024[v4]))();
}

uint64_t sub_1BAFB9D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB9D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFB9D38);
  return result;
}

uint64_t sub_1BAFB9D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFB9D4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAFB9D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFB9D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.SubscriptionState()
{
  return &type metadata for LiveActivityWebEmbedDatastore.SubscriptionState;
}

_QWORD *initializeBufferWithCopyOfBuffer for LiveActivityWebEmbedDatastore.LiveActivity(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86EF08();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v13(v18, 1, v11))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;

  v4 = sub_1BB86EF08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  return result;
}

uint64_t initializeWithCopy for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = sub_1BB86EF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = sub_1BB86EF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = sub_1BB86EF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for LiveActivityWebEmbedDatastore.LiveActivity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = sub_1BB86EF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityWebEmbedDatastore.LiveActivity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFBA72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = sub_1BB86EF08();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 253)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 3)
      return v9 - 2;
    else
      return 0;
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.LiveActivity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFBA7F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1BB86EF08();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
      return result;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1BAFBA8A8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB86EF08();
  if (v0 <= 0x3F)
  {
    sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *assignWithCopy for LiveActivityWebEmbedDatastore.DebugData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LiveActivityWebEmbedDatastore.DebugData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.DebugData()
{
  return &type metadata for LiveActivityWebEmbedDatastore.DebugData;
}

uint64_t storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFBAA10 + 4 * byte_1BB8DD033[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFBAA44 + 4 * byte_1BB8DD02E[v4]))();
}

uint64_t sub_1BAFBAA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFBAA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFBAA54);
  return result;
}

uint64_t sub_1BAFBAA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFBAA68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFBAA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFBAA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.CodingKeys()
{
  return &type metadata for LiveActivityWebEmbedDatastore.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.DebugData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAFBAAD0 + 4 * byte_1BB8DD038[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAFBAAF0 + 4 * byte_1BB8DD03D[v4]))();
}

_BYTE *sub_1BAFBAAD0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAFBAAF0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFBAAF8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFBAB00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFBAB08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFBAB10(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.DebugData.CodingKeys()
{
  return &type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAFBAB78 + 4 * byte_1BB8DD047[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAFBABAC + 4 * byte_1BB8DD042[v4]))();
}

uint64_t sub_1BAFBABAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFBABB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFBABBCLL);
  return result;
}

uint64_t sub_1BAFBABC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFBABD0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAFBABD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFBABDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys()
{
  return &type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys;
}

unint64_t sub_1BAFBABFC()
{
  unint64_t result;

  result = qword_1EF2B81F8;
  if (!qword_1EF2B81F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD410, &type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B81F8);
  }
  return result;
}

unint64_t sub_1BAFBAC44()
{
  unint64_t result;

  result = qword_1EF2B8200;
  if (!qword_1EF2B8200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD4C8, &type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8200);
  }
  return result;
}

unint64_t sub_1BAFBAC8C()
{
  unint64_t result;

  result = qword_1EF2B8208;
  if (!qword_1EF2B8208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD580, &type metadata for LiveActivityWebEmbedDatastore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8208);
  }
  return result;
}

unint64_t sub_1BAFBACD4()
{
  unint64_t result;

  result = qword_1ED3A2CD0;
  if (!qword_1ED3A2CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD4F0, &type metadata for LiveActivityWebEmbedDatastore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CD0);
  }
  return result;
}

unint64_t sub_1BAFBAD1C()
{
  unint64_t result;

  result = qword_1ED3A2CC8;
  if (!qword_1ED3A2CC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD518, &type metadata for LiveActivityWebEmbedDatastore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CC8);
  }
  return result;
}

unint64_t sub_1BAFBAD64()
{
  unint64_t result;

  result = qword_1ED3A2CD8;
  if (!qword_1ED3A2CD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD438, &type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CD8);
  }
  return result;
}

unint64_t sub_1BAFBADAC()
{
  unint64_t result;

  result = qword_1ED3A2CE8;
  if (!qword_1ED3A2CE8)
  {
    result = MEMORY[0x1BCCE5B24]("酟+xl\r", &type metadata for LiveActivityWebEmbedDatastore.DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CE8);
  }
  return result;
}

unint64_t sub_1BAFBADF4()
{
  unint64_t result;

  result = qword_1EF2B8210;
  if (!qword_1EF2B8210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD380, &type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8210);
  }
  return result;
}

unint64_t sub_1BAFBAE3C()
{
  unint64_t result;

  result = qword_1EF2B8218;
  if (!qword_1EF2B8218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD3A8, &type metadata for LiveActivityWebEmbedDatastore.LiveActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8218);
  }
  return result;
}

uint64_t sub_1BAFBAE80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xEC0000006E6F6974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB973FD0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB973FF0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAFBB02C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001BB974010)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BAFBB0B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697463416576696CLL && a2 == 0xEE00736569746976;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6775626564 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BAFBB1BC()
{
  unint64_t result;

  result = qword_1ED3A2CF8;
  if (!qword_1ED3A2CF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore, &type metadata for LiveActivityWebEmbedDatastore);
    atomic_store(result, (unint64_t *)&qword_1ED3A2CF8);
  }
  return result;
}

unint64_t sub_1BAFBB200()
{
  unint64_t result;

  result = qword_1EF2B8220;
  if (!qword_1EF2B8220)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivityWebEmbedDatastore.SubscriptionState, &type metadata for LiveActivityWebEmbedDatastore.SubscriptionState);
    atomic_store(result, (unint64_t *)&qword_1EF2B8220);
  }
  return result;
}

void PuzzleStatistic.traits.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x80000000000;
}

id sub_1BAFBB258(uint64_t a1, id a2, uint64_t a3, uint64_t a4, char a5)
{
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;

  v7 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  FormatColor.color.getter();
  v9 = v8;
  v10 = objc_msgSend(v8, sel_resolvedColorWithTraitCollection_, a1);

  if ((a5 & 1) != 0)
    objc_msgSend(v10, sel_alphaComponent);
  else
    v11 = v10;
  v12 = sub_1BB8737D4();

  if (v12)
  {

    return (id)v12;
  }
  else
  {

  }
  return v7;
}

uint64_t _s8NewsFeed25FormatColorBlendProcessorV2eeoiySbAC_ACtFZ_0(double *a1, uint64_t a2)
{
  double v2;
  char v3;
  double v4;
  char v5;
  char v6;
  char v8;
  double v9;

  v2 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  v4 = *(double *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  v9 = *a1;
  static FormatColor.== infix(_:_:)((uint64_t)&v9);
  if ((v6 & 1) == 0)
    return 0;
  if ((v3 & 1) != 0)
  {
    if ((v5 & 1) == 0)
      return 0;
  }
  else
  {
    if (v2 == v4)
      v8 = v5;
    else
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1BAFBB3C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFBB3E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFBB3E8()
{
  unint64_t result;

  result = qword_1EF2B8230;
  if (!qword_1EF2B8230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBlendProcessor, &type metadata for FormatColorBlendProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2B8230);
  }
  return result;
}

unint64_t sub_1BAFBB42C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA617444();
  a1[2] = sub_1BA5D9B64();
  result = sub_1BAFBB460();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFBB460()
{
  unint64_t result;

  result = qword_1EF2B8238;
  if (!qword_1EF2B8238)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBlendProcessor, &type metadata for FormatColorBlendProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2B8238);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatColorBlendProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatColorBlendProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for FormatColorBlendProcessor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorBlendProcessor()
{
  return &type metadata for FormatColorBlendProcessor;
}

void sub_1BAFBB594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  char v13;
  char v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)v1;
  v4 = *(unsigned __int8 *)(v1 + 8);
  if (!(v4 >> 6))
  {
    v13 = *(_QWORD *)v1;
    swift_getObjectType();
    sub_1BA7A8728(v2, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)&v13);
    return;
  }
  if (v4 >> 6 == 1)
  {
    v5 = objc_msgSend(*(id *)(a1 + 16), sel_eventLeagueTag);
    v14 = v3;
    swift_getObjectType();
    v6 = &v14;
LABEL_13:
    sub_1BA7A8728((uint64_t)v5, (uint64_t)sub_1BA90FCEC, 0, (uint64_t)v6);
    swift_unknownObjectRelease();
    return;
  }
  v7 = objc_msgSend(*(id *)(a1 + 16), sel_eventCompetitorTags);
  if (v7)
  {
    v8 = v7;
    sub_1BA8EB1C8();
    v9 = sub_1BB872DB4();

    if (!(v9 >> 62))
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v3 < v10)
      goto LABEL_8;
LABEL_16:
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRelease();
    *v12 = v10;
    v12[1] = v3;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  v9 = MEMORY[0x1E0DEE9D8];
  if (MEMORY[0x1E0DEE9D8] >> 62)
    goto LABEL_15;
LABEL_7:
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3 >= v10)
    goto LABEL_16;
LABEL_8:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1BCCE4630](v3, v9);
    goto LABEL_12;
  }
  if (v3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v3 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v9 + 8 * v3 + 32);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    v15 = v4 & 0x3F;
    swift_getObjectType();
    v6 = &v15;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1BAFBB7EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAFBC474();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFBB818()
{
  sub_1BAFBC24C();
  return sub_1BB872D60();
}

uint64_t sub_1BAFBB874()
{
  sub_1BAFBC24C();
  return sub_1BB872D0C();
}

void sub_1BAFBB8C0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252B98;
}

uint64_t sub_1BAFBB8D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1BAFBB8E4(_QWORD *a1)
{
  return FormatSportsEventBinding.Text.encode(to:)(a1);
}

uint64_t sub_1BAFBB8F8@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t result;
  id v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;

  if (!*a1)
  {
    sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    v23 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v24 = (v23 + 32) & ~v23;
    v8 = swift_allocObject();
    v42 = xmmword_1BB87CE70;
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v46 = (_QWORD *)(v8 + v24);
    v25 = *(void **)(a2 + 16);
    swift_getObjectType();
    v26 = objc_msgSend(v25, sel_displayName);
    v11 = sub_1BB8729A0();
    v13 = v27;

    sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v42;
    sub_1BB54E728((uint64_t)v25, (uint64_t)&v43);
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(inited + 64) = &off_1E72D2F60;
    v29 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v29;
    *(_QWORD *)(v29 + 48) = v45;
    v30 = v44;
    *(_OWORD *)(v29 + 16) = v43;
    *(_OWORD *)(v29 + 32) = v30;
    v31 = sub_1BA9747FC(inited);
    swift_setDeallocating();
    sub_1BA89EA20();
    swift_arrayDestroy();
    v19 = sub_1BB6DF010(v31);
    swift_bridgeObjectRelease();
    v20 = v46;
    v21 = 0x746E657645;
    v22 = 0xE500000000000000;
    goto LABEL_5;
  }
  if (*a1 != 1)
  {
    v34 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
    if (v34)
    {
      v35 = v34;
      sub_1BA8EB1C8();
      v36 = sub_1BB872DB4();

      if (v36 >> 62)
      {
        swift_bridgeObjectRetain();
        v38 = sub_1BB873F30();
        v37 = swift_bridgeObjectRelease();
        if (v38)
          goto LABEL_9;
      }
      else if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        MEMORY[0x1E0C80A78](v37);
        v41[2] = a3;
        v8 = sub_1BAFBC290(v36, (void (*)(unint64_t, uint64_t))sub_1BAFBC4BC, (uint64_t)v41);
        result = swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    v39 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v40 = (v39 + 32) & ~v39;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v43 = 0u;
    v44 = 0u;
    result = sub_1BAAF422C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v43, (uint64_t *)(v8 + v40));
    goto LABEL_13;
  }
  sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  v42 = xmmword_1BB87CE70;
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v46 = (_QWORD *)(v8 + v7);
  v9 = *(void **)(a2 + 16);
  v10 = objc_msgSend(objc_msgSend(v9, sel_eventLeagueTag), sel_displayName);
  swift_unknownObjectRelease();
  v11 = sub_1BB8729A0();
  v13 = v12;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v42;
  v15 = objc_msgSend(v9, sel_eventLeagueTag);
  swift_getObjectType();
  sub_1BB54E728((uint64_t)v15, (uint64_t)&v43);
  swift_unknownObjectRelease();
  *(_QWORD *)(v14 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v14 + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v16 + 48) = v45;
  v17 = v44;
  *(_OWORD *)(v16 + 16) = v43;
  *(_OWORD *)(v16 + 32) = v17;
  v18 = sub_1BA9747FC(v14);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v19 = sub_1BB6DF010(v18);
  swift_bridgeObjectRelease();
  v20 = v46;
  v21 = 0x65756761654CLL;
  v22 = 0xE600000000000000;
LABEL_5:
  result = sub_1BAAF3C48(v21, v22, (uint64_t)v19, v11, v13, v20);
LABEL_13:
  *a4 = v8;
  return result;
}

uint64_t sub_1BAFBBE0C@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD v17[2];
  uint64_t v18;

  strcpy((char *)v17, "Competitor [");
  BYTE13(v17[0]) = 0;
  HIWORD(v17[0]) = -5120;
  sub_1BB87420C();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  v6 = v17[0];
  swift_getObjectType();
  v7 = objc_msgSend(a1, sel_displayName);
  v8 = sub_1BB8729A0();
  v10 = v9;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BB54E728((uint64_t)a1, (uint64_t)v17);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v12 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(v12 + 48) = v18;
  v13 = v17[1];
  *(_OWORD *)(v12 + 16) = v17[0];
  *(_OWORD *)(v12 + 32) = v13;
  v14 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v15 = sub_1BB6DF010(v14);
  swift_bridgeObjectRelease();
  return sub_1BAAF3C48(v6, *((uint64_t *)&v6 + 1), (uint64_t)v15, v8, v10, a2);
}

unint64_t sub_1BAFBBFC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFBBFEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFBBFEC()
{
  unint64_t result;

  result = qword_1EF2B8240;
  if (!qword_1EF2B8240)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Text, &type metadata for FormatSportsEventBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B8240);
  }
  return result;
}

unint64_t sub_1BAFBC030(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75BBC();
  a1[2] = sub_1BAEF9AC4();
  result = sub_1BAFBC064();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFBC064()
{
  unint64_t result;

  result = qword_1EF2B8258;
  if (!qword_1EF2B8258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Text, &type metadata for FormatSportsEventBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B8258);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Text()
{
  return &type metadata for FormatSportsEventBinding.Text;
}

uint64_t _s4TextO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAFBC104 + 4 * byte_1BB8DD791[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAFBC138 + 4 * asc_1BB8DD78C[v4]))();
}

uint64_t sub_1BAFBC138(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFBC140(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFBC148);
  return result;
}

uint64_t sub_1BAFBC154(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFBC15CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAFBC160(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFBC168(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa()
{
  return &_s4TextO10CodingTypeON;
}

uint64_t sub_1BAFBC184()
{
  return sub_1BA4A2870(&qword_1EF2B8260, (uint64_t (*)(uint64_t))sub_1BAFBC1B0, MEMORY[0x1E0DEAF50]);
}

void sub_1BAFBC1B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8268)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8268);
  }
}

unint64_t sub_1BAFBC208()
{
  unint64_t result;

  result = qword_1EF2B8270;
  if (!qword_1EF2B8270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD950, &_s4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B8270);
  }
  return result;
}

unint64_t sub_1BAFBC24C()
{
  unint64_t result;

  result = qword_1EF2B8278;
  if (!qword_1EF2B8278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD8D8, &_s4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B8278);
  }
  return result;
}

uint64_t sub_1BAFBC290(unint64_t a1, void (*a2)(unint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  v4 = type metadata accessor for FormatInspectionItem(0);
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A248(0, 0, 0);
  v7 = v21;
  if (a1 >> 62)
    goto LABEL_16;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v8)
  {
    while (1)
    {
      v9 = 0;
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
      v17 = a1 & 0xC000000000000001;
      while (v17)
      {
        v10 = MEMORY[0x1BCCE4630](v9, a1);
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_15;
LABEL_7:
        v19(v9, v10);
        swift_unknownObjectRelease();
        v21 = v7;
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1BAC7A248(v12 > 1, v13 + 1, 1);
          v7 = v21;
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        sub_1BAFBC4F8((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v13);
        ++v9;
        if (v11 == v8)
          goto LABEL_17;
      }
      if (v9 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v8 = sub_1BB873F30();
      if (!v8)
        goto LABEL_17;
    }
    v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
    swift_unknownObjectRetain();
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_15;
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BAFBC474()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BAFBC4BC@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1BAFBBE0C(a1, a2);
}

uint64_t sub_1BAFBC4C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFBC4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static VideoDurationFormatter.string(duration:)(double a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;

  if (a1 <= 0.0)
    return 0;
  if (a1 >= 60.0)
  {
    if (qword_1EF2A7040 != -1)
      swift_once();
    v3 = (void *)qword_1EF2B8280;
    objc_msgSend((id)qword_1EF2B8280, sel_setAllowedUnits_, 224);
    objc_msgSend(v3, sel_setZeroFormattingBehavior_, 1);
  }
  else
  {
    if (qword_1EF2A7040 != -1)
      swift_once();
    v2 = (void *)qword_1EF2B8280;
    objc_msgSend((id)qword_1EF2B8280, sel_setAllowedUnits_, 192);
    objc_msgSend(v2, sel_setZeroFormattingBehavior_, 8);
  }
  if (qword_1EF2A7040 != -1)
    swift_once();
  v4 = objc_msgSend((id)qword_1EF2B8280, sel_stringFromTimeInterval_, a1);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_1BB8729A0();

  return v6;
}

id sub_1BAFBC690()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  result = objc_msgSend(v0, sel_setUnitsStyle_, 0);
  qword_1EF2B8280 = (uint64_t)v0;
  return result;
}

uint64_t VideoDurationFormatter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t VideoDurationFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VideoDurationFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for VideoDurationFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAFBC720(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t (*v55)();
  unint64_t v56;
  unint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  _QWORD v72[5];
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v80 = a4;
  v81 = a3;
  v82 = a1;
  v76 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1E0C80A78](v76);
  v77 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for FormatDerivedDataWarningError();
  v72[1] = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v87 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v84);
  v85 = (uint64_t)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DebugFormatCompilerResultEntry();
  v86 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v72[4] = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)v72 - v11;
  MEMORY[0x1E0C80A78](v12);
  v72[3] = (char *)v72 - v13;
  MEMORY[0x1E0C80A78](v14);
  v72[2] = (char *)v72 - v15;
  MEMORY[0x1E0C80A78](v16);
  v73 = (uint64_t)v72 - v17;
  MEMORY[0x1E0C80A78](v18);
  v74 = (_QWORD *)((char *)v72 - v19);
  sub_1BAFBE9EC(0);
  MEMORY[0x1E0C80A78](v20);
  v92 = (char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for FormatDerivedDataFile();
  v93 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (uint64_t)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v94 = (uint64_t)v72 - v24;
  v96 = type metadata accessor for DebugFormatCacheFile();
  v25 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v91 = (char *)v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v27);
  v79 = (uint64_t)v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FormatDerivedDataCompilerSettings();
  MEMORY[0x1E0C80A78](v29);
  v78 = (uint64_t)v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = a2;
  v88 = *(_QWORD *)(a2 + 16);
  sub_1BA4C2DD8(v88 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, (uint64_t)v33, type metadata accessor for FormatCompilerOptions);
  v34 = *(_QWORD *)&v33[*(int *)(v31 + 32)];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatCompilerOptions);
  if (*(_QWORD *)(v34 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v35 = sub_1BB874608();
    v36 = -1 << *(_BYTE *)(v34 + 32);
    v37 = v35 & ~v36;
    if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
    {
      v38 = ~v36;
      while (!*(_BYTE *)(*(_QWORD *)(v34 + 48) + v37) || *(_BYTE *)(*(_QWORD *)(v34 + 48) + v37) == 1)
      {
        v39 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
          goto LABEL_30;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_8;
      }
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      v98 = MEMORY[0x1E0DEE9D8];
LABEL_31:
      sub_1BA4B07F0(0, &qword_1EF2B83B8, (uint64_t (*)(uint64_t))sub_1BAF57920, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      return sub_1BB86E9E0();
    }
  }
LABEL_8:
  swift_bridgeObjectRelease();
  v40 = CACurrentMediaTime();
  v41 = *(_QWORD *)(v89 + 24);
  v42 = *(_QWORD *)(v41 + 16);
  if (!v42)
  {
    swift_bridgeObjectRetain();
    v45 = MEMORY[0x1E0DEE9E0];
LABEL_27:
    swift_bridgeObjectRelease();
    v65 = v78;
    sub_1BA4C2DD8(v80, v78, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
    type metadata accessor for FormatDerivedDataCompiler();
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = &unk_1E7270188;
    *(_QWORD *)(v66 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_system) = v81;
    sub_1BA5193C4(v65, v66 + OBJC_IVAR____TtC8NewsFeed25FormatDerivedDataCompiler_settings, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
    swift_retain();
    v52 = v79;
    v67 = v88;
    sub_1BAA8DA8C(v88, (char *)v45, v82, v79);
    swift_bridgeObjectRelease();
    v68 = (CACurrentMediaTime() - v40) * 1000.0;
    v69 = v85;
    sub_1BA4C2DD8(v52, v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v70 = sub_1BB728750(v52);
    v53 = (uint64_t)v74;
    sub_1BB589780(v67, v69, v70, v74, v68);
    isUniquelyReferenced_nonNull_native = v73;
    sub_1BA4C2DD8(v53, v73, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
    v51 = sub_1BB3921C0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v50 = *(uint64_t (**)())(v51 + 16);
    v57 = *(_QWORD *)(v51 + 24);
    v47 = (int64_t)v50 + 1;
    if ((unint64_t)v50 >= v57 >> 1)
LABEL_34:
      v51 = sub_1BB3921C0(v57 > 1, v47, 1, v51);
    *(_QWORD *)(v51 + 16) = v47;
    sub_1BA5193C4(isUniquelyReferenced_nonNull_native, v51+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * (_QWORD)v50, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
    swift_release();
    sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
    sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v98 = v51;
    goto LABEL_31;
  }
  v43 = v41 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  v44 = *(_QWORD *)(v25 + 72);
  v72[0] = *(_QWORD *)(v89 + 24);
  swift_bridgeObjectRetain_n();
  v45 = MEMORY[0x1E0DEE9E0];
  v46 = (uint64_t)v92;
  v47 = v93;
  v48 = (uint64_t)v91;
  v90 = v44;
  while (1)
  {
    sub_1BA4C2DD8(v43, v48, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    sub_1BA4C2DD8(v48 + *(int *)(v96 + 24), v46, (uint64_t (*)(_QWORD))sub_1BAFBE9EC);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v46, 1, v97) != 1)
      break;
    sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BAFBE9EC);
LABEL_11:
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v43 += v44;
    if (!--v42)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  v49 = v94;
  v50 = type metadata accessor for FormatDerivedDataFile;
  sub_1BA5193C4(v46, v94, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
  v52 = *(_QWORD *)v49;
  v51 = *(_QWORD *)(v49 + 8);
  v53 = *(unsigned __int8 *)(v49 + 16);
  sub_1BA4C2DD8(v49, v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
  sub_1BA987528(v52, v51, v53);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v98 = v45;
  v47 = v45;
  v56 = sub_1BB4AB4B4(v52, v51, v53);
  v57 = *(_QWORD *)(v45 + 16);
  v58 = (v55 & 1) == 0;
  v59 = v57 + v58;
  if (__OFADD__(v57, v58))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v50 = v55;
  if (*(_QWORD *)(v45 + 24) >= v59)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v45 = v98;
      if ((v55 & 1) == 0)
        goto LABEL_17;
    }
    else
    {
      sub_1BB4C7C1C();
      v45 = v98;
      if ((v50 & 1) == 0)
        goto LABEL_17;
    }
    goto LABEL_21;
  }
  sub_1BB4B7648(v59, isUniquelyReferenced_nonNull_native);
  v60 = sub_1BB4AB4B4(v52, v51, v53);
  if ((v50 & 1) == (v61 & 1))
  {
    v56 = v60;
    v45 = v98;
    if ((v50 & 1) == 0)
    {
LABEL_17:
      *(_QWORD *)(v45 + 8 * (v56 >> 6) + 64) |= 1 << v56;
      v62 = *(_QWORD *)(v45 + 48) + 24 * v56;
      *(_QWORD *)v62 = v52;
      *(_QWORD *)(v62 + 8) = v51;
      *(_BYTE *)(v62 + 16) = v53;
      v47 = v93;
      sub_1BA5193C4(v95, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v93 + 72) * v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      v63 = *(_QWORD *)(v45 + 16);
      v64 = __OFADD__(v63, 1);
      v57 = v63 + 1;
      if (v64)
        goto LABEL_33;
      *(_QWORD *)(v45 + 16) = v57;
      sub_1BA987528(v52, v51, v53);
      goto LABEL_22;
    }
LABEL_21:
    v47 = v93;
    sub_1BAFBEA08(v95, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v93 + 72) * v56);
LABEL_22:
    swift_bridgeObjectRelease();
    sub_1BA986FA0(v52, v51, v53);
    sub_1BA4A2E80(v94, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    v48 = (uint64_t)v91;
    v46 = (uint64_t)v92;
    v44 = v90;
    goto LABEL_11;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BAFBD688(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int64_t v61;
  int64_t v62;
  unint64_t v63;
  unint64_t v64;
  int64_t v65;
  unint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  const char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char v95;
  _QWORD *v96;
  char v97;
  unint64_t v98;
  uint64_t v99;
  _BOOL8 v100;
  uint64_t v101;
  char v102;
  unint64_t v103;
  char v104;
  _QWORD *v105;
  uint64_t *v106;
  _QWORD *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t result;
  _QWORD v116[2];
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  const char *v121;
  uint64_t v122;
  const char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;

  v127 = a2;
  sub_1BA9B5BA0(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v6);
  v121 = (char *)v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v116 - v9);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v116 - v12);
  v122 = a1;
  v14 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v119 = type metadata accessor for FormatCompilerOptions(0);
  v120 = v14;
  v125 = v14 + *(int *)(v119 + 24);
  sub_1BA4C2DD8(v125, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  v123 = v5;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v13, type metadata accessor for FormatCompilerOptions.Newsroom);
  v15 = *v13;
  v16 = v13[1];
  sub_1BA5931BC(*v13, v16);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v16 == 1)
  {
    v124 = MEMORY[0x1E0DEE9E0];
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v15, v16);
    v17 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    if (v16)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v126 = v17;
      sub_1BB4BDCEC(24945, 0xE200000000000000, v15, v16, isUniquelyReferenced_nonNull_native);
      v124 = (uint64_t)v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v124 = MEMORY[0x1E0DEE9E0];
    }
  }
  v19 = v123;
  sub_1BA4C2DD8(v125, (uint64_t)v123, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  sub_1BA5193C4((uint64_t)v19, (uint64_t)v10, type metadata accessor for FormatCompilerOptions.Newsroom);
  v20 = *v10;
  v21 = v10[1];
  v23 = v10[2];
  v22 = v10[3];
  sub_1BA5931BC(*v10, v21);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v21 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v20, v21);
    if (v22)
    {
      v24 = v124;
      if (*(_QWORD *)(v124 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1BA6E35A8(v23, v22);
        v26 = v25;
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
        {
          v27 = *(_QWORD *)(v120 + *(int *)(v119 + 32));
          if (*(_QWORD *)(v27 + 16))
          {
            v117 = v23;
            sub_1BB8745CC();
            swift_bridgeObjectRetain();
            v116[1] = "ignoreUnusedProperty";
            sub_1BB872A90();
            v28 = sub_1BB874608();
            v29 = -1 << *(_BYTE *)(v27 + 32);
            v30 = v28 & ~v29;
            if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
            {
              v31 = ~v29;
              v118 = 0xD000000000000014;
              while (!*(_BYTE *)(*(_QWORD *)(v27 + 48) + v30) || *(_BYTE *)(*(_QWORD *)(v27 + 48) + v30) == 2)
              {
                v32 = sub_1BB874398();
                swift_bridgeObjectRelease();
                if ((v32 & 1) != 0)
                  goto LABEL_20;
                v30 = (v30 + 1) & v31;
                if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
                  goto LABEL_17;
              }
              swift_bridgeObjectRelease();
LABEL_20:
              swift_bridgeObjectRelease();
              v19 = v123;
              v24 = v124;
              v23 = v117;
              goto LABEL_21;
            }
LABEL_17:
            swift_bridgeObjectRelease();
            v23 = v117;
          }
          type metadata accessor for FormatDerivedDataError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
          swift_allocError();
          v33 = *(_QWORD *)(v122 + 16);
          v34 = *(_QWORD *)(v122 + 24);
          *v35 = v23;
          v35[1] = v22;
          v35[2] = 0x676E6967617473;
          v35[3] = 0xE700000000000000;
          v35[4] = v33;
          v35[5] = v34;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
      }
LABEL_21:
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v126 = (_QWORD *)v24;
      sub_1BB4BDCEC(0x676E6967617473, 0xE700000000000000, v23, v22, v36);
      v124 = (uint64_t)v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_1BA4C2DD8(v125, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  v37 = (uint64_t)v19;
  v38 = (uint64_t *)v121;
  sub_1BA5193C4(v37, (uint64_t)v121, type metadata accessor for FormatCompilerOptions.Newsroom);
  v39 = *v38;
  v40 = v38[1];
  v42 = v38[4];
  v41 = v38[5];
  sub_1BA5931BC(*v38, v40);
  sub_1BA4A2E80((uint64_t)v38, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v40 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v39, v40);
    if (v41)
    {
      v43 = v124;
      if (*(_QWORD *)(v124 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1BA6E35A8(v42, v41);
        v45 = v44;
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
        {
          v46 = *(_QWORD *)(v120 + *(int *)(v119 + 32));
          if (*(_QWORD *)(v46 + 16))
          {
            sub_1BB8745CC();
            swift_bridgeObjectRetain();
            v121 = "ignoreUnusedProperty";
            sub_1BB872A90();
            v47 = sub_1BB874608();
            v48 = -1 << *(_BYTE *)(v46 + 32);
            v49 = v47 & ~v48;
            if (((*(_QWORD *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) != 0)
            {
              v50 = ~v48;
              v125 = 0xD000000000000014;
              v123 = "isolatedThunderstormsNight";
              while (!*(_BYTE *)(*(_QWORD *)(v46 + 48) + v49) || *(_BYTE *)(*(_QWORD *)(v46 + 48) + v49) == 2)
              {
                v51 = sub_1BB874398();
                swift_bridgeObjectRelease();
                if ((v51 & 1) != 0)
                  goto LABEL_37;
                v49 = (v49 + 1) & v50;
                if (((*(_QWORD *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
                  goto LABEL_33;
              }
              swift_bridgeObjectRelease();
LABEL_37:
              swift_bridgeObjectRelease();
              v43 = v124;
              goto LABEL_38;
            }
LABEL_33:
            swift_bridgeObjectRelease();
          }
          type metadata accessor for FormatDerivedDataError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
          swift_allocError();
          v52 = *(_QWORD *)(v122 + 16);
          v53 = *(_QWORD *)(v122 + 24);
          *v54 = v42;
          v54[1] = v41;
          v54[2] = 0x69746375646F7270;
          v54[3] = 0xEA00000000006E6FLL;
          v54[4] = v52;
          v54[5] = v53;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
      }
LABEL_38:
      v56 = swift_isUniquelyReferenced_nonNull_native();
      v126 = (_QWORD *)v43;
      sub_1BB4BDCEC(0x69746375646F7270, 0xEA00000000006E6FLL, v42, v41, v56);
      v55 = (uint64_t)v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
  }
  v55 = v124;
LABEL_39:
  v57 = *(_QWORD *)(v55 + 64);
  v123 = (const char *)(v55 + 64);
  v58 = 1 << *(_BYTE *)(v55 + 32);
  v59 = -1;
  if (v58 < 64)
    v59 = ~(-1 << v58);
  v60 = v59 & v57;
  v61 = (unint64_t)(v58 + 63) >> 6;
  swift_bridgeObjectRetain();
  v62 = 0;
  while (1)
  {
    do
    {
      if (v60)
      {
        v63 = __clz(__rbit64(v60));
        v60 &= v60 - 1;
        v64 = v63 | (v62 << 6);
        goto LABEL_58;
      }
      v65 = v62 + 1;
      if (__OFADD__(v62, 1))
      {
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      if (v65 >= v61)
        goto LABEL_61;
      v66 = *(_QWORD *)&v123[8 * v65];
      ++v62;
      if (v66)
        goto LABEL_57;
      v62 = v65 + 1;
      if (v65 + 1 >= v61)
        goto LABEL_61;
      v66 = *(_QWORD *)&v123[8 * v62];
      if (v66)
        goto LABEL_57;
      v62 = v65 + 2;
      if (v65 + 2 >= v61)
        goto LABEL_61;
      v66 = *(_QWORD *)&v123[8 * v62];
      if (v66)
        goto LABEL_57;
      v67 = v65 + 3;
      if (v67 >= v61)
      {
LABEL_61:
        swift_release();
        v78 = 1 << *(_BYTE *)(v55 + 32);
        v79 = -1;
        if (v78 < 64)
          v79 = ~(-1 << v78);
        v80 = v79 & *(_QWORD *)(v55 + 64);
        v121 = (const char *)((unint64_t)(v78 + 63) >> 6);
        swift_bridgeObjectRetain();
        v81 = 0;
        while (2)
        {
          if (v80)
          {
            v124 = (v80 - 1) & v80;
            v125 = v81;
            v83 = __clz(__rbit64(v80)) | (v81 << 6);
          }
          else
          {
            v84 = (const char *)(v81 + 1);
            if (__OFADD__(v81, 1))
              goto LABEL_99;
            if ((uint64_t)v84 >= (uint64_t)v121)
              goto LABEL_94;
            v85 = *(_QWORD *)&v123[8 * (_QWORD)v84];
            v86 = v81 + 1;
            if (!v85)
            {
              v86 = v81 + 2;
              if (v81 + 2 >= (uint64_t)v121)
                goto LABEL_94;
              v85 = *(_QWORD *)&v123[8 * v86];
              if (!v85)
              {
                v86 = v81 + 3;
                if (v81 + 3 >= (uint64_t)v121)
                  goto LABEL_94;
                v85 = *(_QWORD *)&v123[8 * v86];
                if (!v85)
                {
                  v87 = v81 + 4;
                  if (v81 + 4 >= (uint64_t)v121)
                    goto LABEL_94;
                  v85 = *(_QWORD *)&v123[8 * v87];
                  if (!v85)
                  {
                    while (1)
                    {
                      v86 = v87 + 1;
                      if (__OFADD__(v87, 1))
                        goto LABEL_101;
                      if (v86 >= (uint64_t)v121)
                        goto LABEL_94;
                      v85 = *(_QWORD *)&v123[8 * v86];
                      ++v87;
                      if (v85)
                        goto LABEL_81;
                    }
                  }
                  v86 = v81 + 4;
                }
              }
            }
LABEL_81:
            v124 = (v85 - 1) & v85;
            v125 = v86;
            v83 = __clz(__rbit64(v85)) + (v86 << 6);
          }
          v88 = v55;
          v89 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v83);
          v91 = *v89;
          v90 = v89[1];
          v92 = *(_QWORD *)(v122 + 16);
          v93 = *(_QWORD *)(v122 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94 = v127;
          v95 = swift_isUniquelyReferenced_nonNull_native();
          v126 = (_QWORD *)*v94;
          v96 = v126;
          *v94 = 0x8000000000000000;
          v98 = sub_1BA6E35A8(v91, v90);
          v99 = v96[2];
          v100 = (v97 & 1) == 0;
          v101 = v99 + v100;
          if (__OFADD__(v99, v100))
          {
            __break(1u);
LABEL_97:
            __break(1u);
            goto LABEL_98;
          }
          v102 = v97;
          if (v96[3] >= v101)
          {
            if ((v95 & 1) != 0)
            {
              v105 = v126;
              if ((v97 & 1) == 0)
                goto LABEL_89;
            }
            else
            {
              sub_1BB4C216C();
              v105 = v126;
              if ((v102 & 1) == 0)
                goto LABEL_89;
            }
          }
          else
          {
            sub_1BB4AE750(v101, v95);
            v103 = sub_1BA6E35A8(v91, v90);
            if ((v102 & 1) != (v104 & 1))
              goto LABEL_102;
            v98 = v103;
            v105 = v126;
            if ((v102 & 1) == 0)
            {
LABEL_89:
              v105[(v98 >> 6) + 8] |= 1 << v98;
              v106 = (uint64_t *)(v105[6] + 16 * v98);
              *v106 = v91;
              v106[1] = v90;
              v107 = (_QWORD *)(v105[7] + 16 * v98);
              *v107 = v92;
              v107[1] = v93;
              v108 = v105[2];
              v109 = __OFADD__(v108, 1);
              v110 = v108 + 1;
              if (v109)
                goto LABEL_97;
              v105[2] = v110;
              swift_bridgeObjectRetain();
              goto LABEL_65;
            }
          }
          v82 = (_QWORD *)(v105[7] + 16 * v98);
          swift_bridgeObjectRelease();
          *v82 = v92;
          v82[1] = v93;
LABEL_65:
          *v127 = v105;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v55 = v88;
          v80 = v124;
          v81 = v125;
          continue;
        }
      }
      v66 = *(_QWORD *)&v123[8 * v67];
      if (!v66)
      {
        while (1)
        {
          v62 = v67 + 1;
          if (__OFADD__(v67, 1))
            goto LABEL_100;
          if (v62 >= v61)
            goto LABEL_61;
          v66 = *(_QWORD *)&v123[8 * v62];
          ++v67;
          if (v66)
            goto LABEL_57;
        }
      }
      v62 = v67;
LABEL_57:
      v60 = (v66 - 1) & v66;
      v64 = __clz(__rbit64(v66)) + (v62 << 6);
LABEL_58:
      v68 = *v127;
    }
    while (!*(_QWORD *)(*v127 + 16));
    v69 = 16 * v64;
    v70 = (uint64_t *)(*(_QWORD *)(v55 + 48) + v69);
    v71 = (uint64_t *)(*(_QWORD *)(v55 + 56) + v69);
    v73 = *v71;
    v72 = v71[1];
    v75 = *v70;
    v74 = v70[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v76 = sub_1BA6E35A8(v75, v74);
    if ((v77 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  v111 = (uint64_t *)(*(_QWORD *)(v68 + 56) + 16 * v76);
  v113 = *v111;
  v112 = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatDerivedDataError();
  sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
  swift_allocError();
  *v114 = v75;
  v114[1] = v74;
  v114[2] = v73;
  v114[3] = v72;
  v114[4] = v113;
  v114[5] = v112;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_94:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFBE33C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  const char *v28;
  char v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;

  v37 = a3;
  v36 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugFormatCompilerResultEntry();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v38 = (char *)&v32 - v8;
  v43 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1E0C80A78](v43);
  v42 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  if (!*(_QWORD *)(*a2 + 16)
    || (sub_1BB8745CC(),
        v45 = "unusedProperties",
        sub_1BB872A90(),
        v11 = sub_1BB874608(),
        v12 = -1 << *(_BYTE *)(v10 + 32),
        v13 = v11 & ~v12,
        ((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0))
  {
LABEL_8:
    v46 = MEMORY[0x1E0DEE9E0];
    v16 = v37;
    if (v37 >> 62)
      goto LABEL_36;
    v17 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      v19 = MEMORY[0x1E0DEE9D8];
LABEL_38:
      swift_bridgeObjectRelease();
      v47 = v19;
      goto LABEL_39;
    }
LABEL_10:
    v18 = 0;
    v41 = v16 & 0xC000000000000001;
    v33 = v16 & 0xFFFFFFFFFFFFFF8;
    v32 = v16 + 32;
    v19 = MEMORY[0x1E0DEE9D8];
    v44 = "ignoreUnusedProperty";
    v45 = "isolatedThunderstormsNight";
    v40 = v17;
    while (1)
    {
      if (v41)
      {
        v20 = MEMORY[0x1BCCE4630](v18, v37);
        v21 = __OFADD__(v18++, 1);
        if (v21)
          goto LABEL_34;
      }
      else
      {
        if (v18 >= *(_QWORD *)(v33 + 16))
          goto LABEL_35;
        v20 = *(_QWORD *)(v32 + 8 * v18);
        swift_retain();
        v21 = __OFADD__(v18++, 1);
        if (v21)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          swift_bridgeObjectRetain();
          v17 = sub_1BB873F30();
          if (!v17)
            goto LABEL_37;
          goto LABEL_10;
        }
      }
      v22 = v42;
      sub_1BA4C2DD8(*(_QWORD *)(v20 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v42, type metadata accessor for FormatCompilerOptions);
      v23 = *(_QWORD *)(v22 + *(int *)(v43 + 32));
      swift_bridgeObjectRetain();
      sub_1BA4A2E80(v22, type metadata accessor for FormatCompilerOptions);
      if (!*(_QWORD *)(v23 + 16)
        || (sub_1BB8745CC(),
            sub_1BB872A90(),
            v16 = (unint64_t)&v47,
            v24 = sub_1BB874608(),
            v25 = -1 << *(_BYTE *)(v23 + 32),
            v26 = v24 & ~v25,
            ((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0))
      {
LABEL_27:
        swift_bridgeObjectRelease();
        v16 = *(_QWORD *)(v20 + 16);
        v30 = swift_retain();
        sub_1BAFBD688(v30, &v46);
        swift_release();
        swift_release();
        goto LABEL_11;
      }
      v27 = ~v25;
      while (!*(_BYTE *)(*(_QWORD *)(v23 + 48) + v26))
      {
        v28 = v45;
LABEL_25:
        v16 = (unint64_t)v28 | 0x8000000000000000;
        v29 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
        {
          swift_release();
          goto LABEL_30;
        }
        v26 = (v26 + 1) & v27;
        if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
          goto LABEL_27;
      }
      if (*(_BYTE *)(*(_QWORD *)(v23 + 48) + v26) == 1)
        break;
      swift_release();
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
LABEL_11:
      if (v18 == v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    v28 = v44;
    goto LABEL_25;
  }
  v14 = ~v12;
  while (!*(_BYTE *)(*(_QWORD *)(v10 + 48) + v13) || *(_BYTE *)(*(_QWORD *)(v10 + 48) + v13) == 2)
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_33;
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_33:
  v47 = MEMORY[0x1E0DEE9D8];
LABEL_39:
  sub_1BA4B07F0(0, &qword_1EF2B83B8, (uint64_t (*)(uint64_t))sub_1BAF57920, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t type metadata accessor for DebugFormatCompiler()
{
  return objc_opt_self();
}

void sub_1BAFBE9EC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2A9CD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFBEA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDerivedDataFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFBEA4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (qword_1EF2A6D60 != -1)
    swift_once();
  sub_1BA50AD30((unint64_t *)&qword_1EF2AAC00, a2, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatUploadService, (uint64_t)&unk_1BB8DDA9C);
  sub_1BB86D210();
  if (qword_1EF2A6D68 != -1)
    swift_once();
  sub_1BB86D210();
  sub_1BB872AFC((_QWORD *)0x2F2F3A70747468);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB86C634();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFBEBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    v3 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
    sub_1BB86E194();
    swift_allocObject();
    v1 = sub_1BB86E188();
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1BAFBEC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = a1;
  if (a1 == 1)
  {
    sub_1BA4AD288(0, &qword_1EF2B8478, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAFC220C();
    sub_1BAFC226C();
    sub_1BB872BBC();
    sub_1BA4AD288(0, &qword_1EF2B8490, (uint64_t)&type metadata for DebugFormatUploadTargetResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1BA4AD288(0, &qword_1EF2B8478, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB86EC14();
    v6 = (void *)sub_1BB86E854();
    sub_1BB86E968();
    swift_release();

  }
  sub_1BAFBEE74(v5, a2, a3);
  sub_1BB86EBF0();
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = v5;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BAFC22C0;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = (void *)sub_1BB86E854();
  v10 = sub_1BB86E974();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1BAFBEE74(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  if (a1 - 1 > 1)
  {
    sub_1BA4AD288(0, &qword_1EF2B8478, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAFC220C();
    sub_1BAFC226C();
    sub_1BB872BBC();
    sub_1BA4AD288(0, &qword_1EF2B8490, (uint64_t)&type metadata for DebugFormatUploadTargetResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    sub_1BB86EC14();
    v4 = (void *)sub_1BB86E854();
    sub_1BB86E9A4();
    swift_release();

    *(_QWORD *)(swift_allocObject() + 16) = a3;
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1BB86E854();
    sub_1BA4AD288(0, &qword_1EF2B8478, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    type metadata accessor for DebugFormatUploadService();
    sub_1BB86E980();
    swift_release();
    swift_release();

    v6 = (void *)sub_1BB86E854();
    v7 = sub_1BB86E968();
    swift_release();

    return v7;
  }
}

uint64_t sub_1BAFBF054(unint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _BYTE v7[8];

  sub_1BA4AD288(0, &qword_1EF2B8498, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_retain();
  sub_1BAFC24E8(a1, a2, (uint64_t)v7, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1BAFBF150);
  swift_release();
  v4 = (void *)sub_1BB86E854();
  sub_1BAFC23FC();
  sub_1BA50AD30(&qword_1EF2B84A8, 255, (uint64_t (*)(uint64_t))sub_1BAFC23FC, MEMORY[0x1E0DEAF50]);
  v5 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_1BAFBF150(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

void sub_1BAFBF1F0(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 - 80);
  v5 = *(_QWORD *)(v2 - 72);
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v6, v5);
  v7 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v7);
  sub_1BB86EC14();
  swift_retain();
  v8 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  swift_retain();
  v9 = (void *)sub_1BB86E854();
  v10 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  *v1 = v10;
}

uint64_t sub_1BAFBF3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v13[6];

  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v13 - v6;
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a2 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t)v10, v11);
  sub_1BAFBF50C(a2, (uint64_t)v7);
  sub_1BA958B28((uint64_t)v10, (uint64_t)v7, v13);
  if (!v2)
  {
    a1 = sub_1BAFBF984((uint64_t)v13);
    sub_1BAFC265C((uint64_t)v13);
  }
  return a1;
}

void sub_1BAFBF50C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a1;
  v14 = a2;
  v10 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v12 = (char *)&v9 - v3;
  v4 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v4);
  v13 = sub_1BB86EB84();
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v6);
  if (qword_1EF2A6CB8 != -1)
    swift_once();
  sub_1BA50AD30((unint64_t *)&qword_1EF2AAC00, v7, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatUploadService, (uint64_t)&unk_1BB8DDA9C);
  sub_1BB86D210();
  v8 = (char *)&loc_1BAFBF6EC + 4 * byte_1BB8DDA37[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAFBF984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - v4;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFBEA4C(v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1BA7F0A80((uint64_t)v5);
    type metadata accessor for DebugFormatServiceError();
    sub_1BA50AD30((unint64_t *)&qword_1EF2CCCF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatServiceError, (uint64_t)&unk_1BB928240);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  else
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    MEMORY[0x1E0C80A78](v13);
    *(&v15 - 4) = (uint64_t)v9;
    *(&v15 - 3) = a1;
    *(&v15 - 2) = v1;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v12 = sub_1BB86EA58();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v12;
}

uint64_t sub_1BAFBFBA0()
{
  return sub_1BAFC0E74();
}

uint64_t sub_1BAFBFBB4(void *a1)
{
  sub_1BB873CB4();
  sub_1BB872AFC("packages/themes/");
  sub_1BA8EBDF8();
  sub_1BB873E34();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4(a1, 0, 0, 0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFBFC9C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v5;
  uint64_t v6;
  _BYTE v8[8];

  sub_1BA4AD288(0, &qword_1EF2B8498, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_retain();
  sub_1BAFC24E8(a3, a2, (uint64_t)v8, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))sub_1BAFBFD98);
  swift_release();
  v5 = (void *)sub_1BB86E854();
  sub_1BAFC23FC();
  sub_1BA50AD30(&qword_1EF2B84A8, 255, (uint64_t (*)(uint64_t))sub_1BAFC23FC, MEMORY[0x1E0DEAF50]);
  v6 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v6;
}

void sub_1BAFBFD98(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

void sub_1BAFBFE38(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 - 80);
  v5 = *(_QWORD *)(v2 - 72);
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v6, v5);
  v7 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v7);
  sub_1BB86EC14();
  swift_retain();
  v8 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  swift_retain();
  v9 = (void *)sub_1BB86E854();
  v10 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  *v1 = v10;
}

uint64_t sub_1BAFC0034(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v72;
  int v73;
  _QWORD v74[2];
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unsigned __int8 v83;
  _OWORD v84[3];

  v79 = *v1;
  sub_1BA9B5BA0(0);
  MEMORY[0x1E0C80A78](v3);
  v80 = (uint64_t)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v5);
  v81 = (_QWORD *)((char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v74 - v8;
  v10 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v74 - v14;
  v16 = type metadata accessor for FormatPackage();
  v77 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v74 - v20;
  v22 = a1 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file;
  sub_1BA4C2DD8(a1 + OBJC_IVAR____TtC8NewsFeed22DebugFormatUploadEntry_file, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v73 = 0;
    v72 = 168;
    goto LABEL_25;
  }
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  if (v21[48] != 5)
  {
    v24 = (uint64_t)v18;
    v25 = swift_allocObject();
    sub_1BA4C2DD8(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v26 = v82;
    sub_1BAFBF50C(a1, (uint64_t)v9);
    sub_1BA958B28((uint64_t)v12, (uint64_t)v9, (uint64_t *)v84);
    v27 = v84[1];
    *(_OWORD *)(v25 + 16) = v84[0];
    *(_OWORD *)(v25 + 32) = v27;
    *(_OWORD *)(v25 + 48) = v84[2];
    if (qword_1EF2A6E78 != -1)
      swift_once();
    type metadata accessor for DebugNewsroomService();
    sub_1BA50AD30(&qword_1EF2ADAC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomService, (uint64_t)&unk_1BB8918B8);
    sub_1BB86D210();
    v28 = v83;
    v29 = *(int *)(v16 + 92);
    v30 = (uint64_t)&v21[v29 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 24)];
    v31 = v80;
    sub_1BA4C2DD8(v30, v80, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
    v32 = v31;
    v33 = v81;
    sub_1BA5193C4(v32, (uint64_t)v81, type metadata accessor for FormatCompilerOptions.Newsroom);
    if ((_DWORD)v28)
    {
      if ((_DWORD)v28 == 1)
      {
        if (v33[1] != 1)
        {
          v34 = v33 + 2;
          v35 = v33[3];
          goto LABEL_15;
        }
LABEL_13:
        sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatCompilerOptions.Newsroom);
        goto LABEL_19;
      }
      if (v33[1] == 1)
        goto LABEL_13;
      v34 = v33 + 4;
      v35 = v33[5];
    }
    else
    {
      v35 = v33[1];
      v34 = v33;
      if (v35 == 1)
        goto LABEL_13;
    }
LABEL_15:
    v36 = *v34;
    swift_bridgeObjectRetain();
    v37 = sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatCompilerOptions.Newsroom);
    if (v35)
    {
      v38 = v21[48];
      v76 = v21;
      if (v38 >= 4)
      {
        if (v38 == 4)
        {
          MEMORY[0x1E0C80A78](v37);
          v74[-4] = v26;
          v74[-3] = v36;
          v72 = v35;
          sub_1BAA312C0(0);
          v81 = (uint64_t *)v39;
          v74[1] = sub_1BB86EC14();
          v40 = v24;
          sub_1BA4C2DD8((uint64_t)v21, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
          v41 = *(unsigned __int8 *)(v77 + 80);
          v42 = (v41 + 24) & ~v41;
          v80 = v41 | 7;
          v78 += 7;
          v43 = (v78 + v42) & 0xFFFFFFFFFFFFFFF8;
          v44 = swift_allocObject();
          v75 = v25;
          *(_QWORD *)(v44 + 16) = v25;
          sub_1BA5193C4(v24, v44 + v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
          v45 = (_QWORD *)(v44 + v43);
          *v45 = v36;
          v45[1] = v35;
          swift_retain();
          v46 = (void *)sub_1BB86E854();
          sub_1BA7AD210(0, &qword_1EF2B84C0, sub_1BAA312C0);
          sub_1BB86E980();
          swift_release();
          swift_release();

          v47 = (uint64_t)v76;
          sub_1BA4C2DD8((uint64_t)v76, v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
          v48 = (v41 + 16) & ~v41;
          v49 = (v78 + v48) & 0xFFFFFFFFFFFFFFF8;
          v50 = swift_allocObject();
          sub_1BA5193C4(v40, v50 + v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
          *(_QWORD *)(v50 + v49) = v75;
          swift_retain();
          v51 = (void *)sub_1BB86E854();
          sub_1BB86E980();
          swift_release();
          swift_release();

          v52 = (void *)sub_1BB86E854();
          v23 = sub_1BB86E974();
          swift_release();

          sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
LABEL_22:
          swift_release();
          return v23;
        }
        if (v38 != 6)
        {
          while (1)
          {
            v73 = 0;
            v72 = 267;
LABEL_25:
            sub_1BB873EAC();
            __break(1u);
          }
        }
      }
      MEMORY[0x1E0C80A78](v37);
      v74[-4] = v26;
      v74[-3] = v36;
      v72 = v35;
      sub_1BAA30BA8(0);
      v81 = (uint64_t *)v56;
      sub_1BB86EC14();
      v57 = v25;
      v58 = v24;
      sub_1BA4C2DD8((uint64_t)v21, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v59 = *(unsigned __int8 *)(v77 + 80);
      v60 = (v59 + 24) & ~v59;
      v80 = v59 | 7;
      v78 += 7;
      v61 = (v78 + v60) & 0xFFFFFFFFFFFFFFF8;
      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = v25;
      sub_1BA5193C4(v24, v62 + v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v63 = (_QWORD *)(v62 + v61);
      *v63 = v36;
      v63[1] = v35;
      swift_retain();
      v64 = (void *)sub_1BB86E854();
      sub_1BA7AD210(0, &qword_1EF2B84C8, sub_1BAA30BA8);
      sub_1BB86E980();
      swift_release();
      swift_release();

      v65 = (uint64_t)v76;
      sub_1BA4C2DD8((uint64_t)v76, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v66 = (v59 + 16) & ~v59;
      v67 = (v78 + v66) & 0xFFFFFFFFFFFFFFF8;
      v68 = swift_allocObject();
      sub_1BA5193C4(v58, v68 + v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      *(_QWORD *)(v68 + v67) = v57;
      swift_retain();
      v69 = (void *)sub_1BB86E854();
      sub_1BB86E980();
      swift_release();
      swift_release();

      v70 = (void *)sub_1BB86E854();
      v23 = sub_1BB86E974();
      swift_release();

      sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      goto LABEL_22;
    }
LABEL_19:
    v54 = *(_QWORD *)(v25 + 16);
    v53 = *(_QWORD *)(v25 + 24);
    sub_1BAFC26F8();
    swift_allocError();
    *(_QWORD *)v55 = v54;
    *(_QWORD *)(v55 + 8) = v53;
    *(_QWORD *)(v55 + 16) = v28;
    *(_BYTE *)(v55 + 24) = 4;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v23 = sub_1BB86E9C8();
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    goto LABEL_22;
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v23 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  return v23;
}

void sub_1BAFC0A5C(uint64_t a1, uint64_t a2)
{
  sub_1BB873CB4();
  sub_1BB872AFC(0);
  __asm { BR              X10 }
}

uint64_t sub_1BAFC0AF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v6, v7);
  swift_bridgeObjectRelease();
  *v2 = v1;
  v2[1] = 0;
  return swift_retain();
}

void sub_1BAFC0C38(uint64_t a1, uint64_t a2)
{
  sub_1BB873CB4();
  sub_1BB872AFC(0);
  __asm { BR              X10 }
}

id sub_1BAFC0CD4@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  sub_1BA8EBDF8();
  sub_1BB873E34();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)v1, 0, 0, v8, v9);
  swift_bridgeObjectRelease();
  *v3 = v2;
  v3[1] = v1 | 0x8000000000000000;
  swift_retain();
  return (id)v1;
}

uint64_t sub_1BAFC0E74()
{
  sub_1BA4AD288(0, &qword_1EF2B8478, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAFC220C();
  sub_1BAFC226C();
  sub_1BB872BBC();
  sub_1BA4AD288(0, &qword_1EF2B8490, (uint64_t)&type metadata for DebugFormatUploadTargetResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BAFC0F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  id v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 aBlock;
  __int128 v33;
  __int128 v34;

  v28[1] = a7;
  v29 = a3;
  v30 = a4;
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BB86BC8C();
  v15 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  swift_retain();
  sub_1BB86BC5C();
  sub_1BB86BC20();
  sub_1BB86BC80();
  sub_1BB86BD4C();
  swift_allocObject();
  sub_1BB86BD40();
  v19 = a6[1];
  aBlock = *a6;
  v33 = v19;
  v34 = a6[2];
  sub_1BAFC26B4();
  sub_1BB86BD28();
  swift_release();
  sub_1BB86BC74();
  sub_1BAFBEBA0();
  v20 = (void *)sub_1BB86E17C();
  swift_release();
  v21 = (void *)sub_1BB86BC38();
  v22 = swift_allocObject();
  v23 = v30;
  *(_QWORD *)(v22 + 16) = v29;
  *(_QWORD *)(v22 + 24) = v23;
  v24 = a6[1];
  *(_OWORD *)(v22 + 32) = *a6;
  *(_OWORD *)(v22 + 48) = v24;
  *(_OWORD *)(v22 + 64) = a6[2];
  *(_QWORD *)(v22 + 80) = sub_1BA4D7948;
  *(_QWORD *)(v22 + 88) = v18;
  *(_QWORD *)&v34 = sub_1BAFC2780;
  *((_QWORD *)&v34 + 1) = v22;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v33 = sub_1BAF35F80;
  *((_QWORD *)&v33 + 1) = &block_descriptor_33;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  sub_1BAFC27AC((uint64_t)a6);
  swift_release();
  v26 = objc_msgSend(v20, sel_dataTaskWithRequest_completionHandler_, v21, v25);
  _Block_release(v25);

  objc_msgSend(v26, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v31);
}

void sub_1BAFC129C(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, void (*a8)(void))
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;

  if (a4)
  {
    v12 = *a7;
    v11 = a7[1];
    sub_1BAFC26F8();
    v13 = (void *)swift_allocError();
    *(_QWORD *)v14 = a4;
    *(_QWORD *)(v14 + 8) = v12;
    *(_QWORD *)(v14 + 16) = v11;
    *(_BYTE *)(v14 + 24) = 0;
    v15 = a4;
    v16 = a4;
    swift_bridgeObjectRetain();
    a5(v13);

    v17 = a4;
LABEL_8:

    return;
  }
  if (!a3 || (objc_opt_self(), (v20 = swift_dynamicCastObjCClass()) == 0))
  {
    v23 = *a7;
    v22 = a7[1];
    sub_1BAFC26F8();
    v24 = swift_allocError();
    *(_QWORD *)v25 = a3;
    *(_QWORD *)(v25 + 8) = v23;
    *(_QWORD *)(v25 + 16) = v22;
    *(_BYTE *)(v25 + 24) = 2;
    v26 = a3;
    swift_bridgeObjectRetain();
    a5((void *)v24);
    v17 = (void *)v24;
    goto LABEL_8;
  }
  v21 = (void *)v20;
  v32 = a3;
  if (objc_msgSend(v21, sel_statusCode) == (id)201)
  {
    a8();
  }
  else
  {
    v27 = objc_msgSend(v21, sel_statusCode);
    v29 = *a7;
    v28 = a7[1];
    sub_1BAFC26F8();
    v30 = (void *)swift_allocError();
    *(_QWORD *)v31 = v27;
    *(_QWORD *)(v31 + 8) = v29;
    *(_QWORD *)(v31 + 16) = v28;
    *(_BYTE *)(v31 + 24) = 3;
    swift_bridgeObjectRetain();
    a5(v30);

  }
}

uint64_t sub_1BAFC1474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v30[2];
  _OWORD v31[3];

  sub_1BAA312C0(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatPackage();
  v12 = sub_1BB86EB24();
  v14 = v12;
  v15 = v13;
  v16 = *(_QWORD *)(a1 + 88);
  if (v16 && *(_QWORD *)(v16 + 16) && (v17 = sub_1BA6E35A8(v12, v13), (v18 & 1) != 0))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v17);
    v30[1] = a6;
    v20 = *v19;
    v21 = v19[1];
    swift_bridgeObjectRetain();
    v22 = sub_1BAFC315C(v20, v21, v14);
    v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v31[0] = v14;
    *((_QWORD *)&v31[0] + 1) = v15;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    v24 = *((_QWORD *)&v31[0] + 1);
    v22 = *(_QWORD **)&v31[0];
  }
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31[0] = 0;
  *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31[0] = 0xD000000000000010;
  *((_QWORD *)&v31[0] + 1) = 0x80000001BB974340;
  sub_1BB872AFC((_QWORD *)0xD000000000000010);
  v26 = v31[0];
  swift_beginAccess();
  v27 = *(_OWORD *)(a3 + 32);
  v31[0] = *(_OWORD *)(a3 + 16);
  v31[1] = v27;
  v31[2] = *(_OWORD *)(a3 + 48);
  sub_1BAFC27AC((uint64_t)v31);
  sub_1BAA2D058(v26, *((unint64_t *)&v26 + 1), (uint64_t *)v31);
  sub_1BAFC265C((uint64_t)v31);
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAA312C0);
  sub_1BA4B07F0(0, &qword_1EF2B84D8, (uint64_t (*)(uint64_t))sub_1BAA312C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86E9E0();
  v28 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  return v28;
}

uint64_t sub_1BAFC16F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v43 = a2;
  v41 = a4;
  v42 = a3;
  v6 = type metadata accessor for DebugNewsroomThemeData();
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAA312C0(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7AD210(0, &qword_1EF2B84C0, v12);
  v14 = v13;
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v40 - v15);
  v40[1] = a4 + 16;
  v18 = *(int *)(v17 + 48);
  v19 = (uint64_t)v16 + v18;
  v20 = (uint64_t)a1 + v18;
  v22 = *a1;
  v21 = a1[1];
  *v16 = v22;
  v16[1] = v21;
  sub_1BA4C2DD8(v20, (uint64_t)v16 + v18, (uint64_t (*)(_QWORD))sub_1BAA312C0);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))sub_1BAA312C0);
  v23 = (uint64_t)v16 + *(int *)(v14 + 48);
  sub_1BA4C2DD8(v20, v23, (uint64_t (*)(_QWORD))sub_1BAA312C0);
  v24 = v23;
  v25 = v42;
  sub_1BA5193C4(v24, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAA312C0);
  sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugNewsroomThemeData);
  v26 = *(_QWORD *)(v25 + 24);
  v8[3] = *(_QWORD *)(v25 + 16);
  v8[4] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8[9] = v22;
  v8[10] = v21;
  v27 = v41;
  swift_beginAccess();
  v29 = *(_QWORD *)(v27 + 16);
  v28 = *(_QWORD *)(v27 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[7] = v29;
  v8[8] = v28;
  if (v8[11])
    v30 = v8[11];
  else
    v30 = sub_1BA8F2B44(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for FormatPackage();
  swift_bridgeObjectRetain();
  v31 = sub_1BB86EB24();
  v33 = v32;
  swift_beginAccess();
  v35 = *(_QWORD *)(v27 + 16);
  v34 = *(_QWORD *)(v27 + 24);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = v30;
  sub_1BB4BDCEC(v35, v34, v31, v33, isUniquelyReferenced_nonNull_native);
  v37 = v44;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8[11] = v37;
  v38 = sub_1BAA2E994((uint64_t)v11, (uint64_t)v8);
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAA312C0);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugNewsroomThemeData);
  return v38;
}

uint64_t sub_1BAFC19C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v30[2];
  _OWORD v31[3];

  sub_1BAA30BA8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatPackage();
  v12 = sub_1BB86EB24();
  v14 = v12;
  v15 = v13;
  v16 = *(_QWORD *)(a1 + 96);
  if (v16 && *(_QWORD *)(v16 + 16) && (v17 = sub_1BA6E35A8(v12, v13), (v18 & 1) != 0))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v17);
    v30[1] = a6;
    v20 = *v19;
    v21 = v19[1];
    swift_bridgeObjectRetain();
    v22 = sub_1BAFC315C(v20, v21, v14);
    v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v31[0] = v14;
    *((_QWORD *)&v31[0] + 1) = v15;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    v24 = *((_QWORD *)&v31[0] + 1);
    v22 = *(_QWORD **)&v31[0];
  }
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31[0] = 0;
  *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31[0] = 0xD000000000000011;
  *((_QWORD *)&v31[0] + 1) = 0x80000001BB974320;
  sub_1BB872AFC((_QWORD *)0xD000000000000011);
  v26 = v31[0];
  swift_beginAccess();
  v27 = *(_OWORD *)(a3 + 32);
  v31[0] = *(_OWORD *)(a3 + 16);
  v31[1] = v27;
  v31[2] = *(_OWORD *)(a3 + 48);
  sub_1BAFC27AC((uint64_t)v31);
  sub_1BAA2D058(v26, *((unint64_t *)&v26 + 1), (uint64_t *)v31);
  sub_1BAFC265C((uint64_t)v31);
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
  sub_1BA4B07F0(0, &qword_1EF2B84D0, (uint64_t (*)(uint64_t))sub_1BAA30BA8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86E9E0();
  v28 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  return v28;
}

uint64_t sub_1BAFC1C40(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;

  v51 = a2;
  v49 = a3;
  v6 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DebugNewsroomLayoutData();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA30BA8(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7AD210(0, &qword_1EF2B84C8, sub_1BAA30BA8);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (_QWORD **)((char *)&v46 - v16);
  v19 = *(int *)(v18 + 48);
  v20 = (uint64_t)v17 + v19;
  v21 = (uint64_t)a1 + v19;
  v22 = *a1;
  v23 = a1[1];
  v48 = v22;
  v46 = a4 + 2;
  v47 = v23;
  *v17 = v22;
  v17[1] = v23;
  sub_1BA4C2DD8(v21, v20, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
  v24 = (uint64_t)v17 + *(int *)(v15 + 48);
  v25 = (uint64_t)v13;
  v26 = v49;
  sub_1BA4C2DD8(v21, v24, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
  sub_1BA5193C4(v24, v25, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
  sub_1BA4C2DD8(v25, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugNewsroomLayoutData);
  v27 = *(_QWORD *)(v26 + 24);
  *((_QWORD *)v10 + 2) = *(_QWORD *)(v26 + 16);
  *((_QWORD *)v10 + 3) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[32] = 0x4050503020001uLL >> (8 * *(_BYTE *)(v26 + 48));
  swift_beginAccess();
  v28 = a4[4];
  v29 = a4[5];
  sub_1BA69D44C(v28, v29);
  sub_1BB8729DC();
  v30 = sub_1BB8729B8();
  v32 = v31;
  sub_1BA69D314(v28, v29);
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 7) = v30;
  *((_QWORD *)v10 + 8) = v32;
  swift_bridgeObjectRelease();
  v33 = v47;
  *((_QWORD *)v10 + 5) = v48;
  *((_QWORD *)v10 + 6) = v33;
  swift_beginAccess();
  v35 = a4[2];
  v34 = a4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 9) = v35;
  *((_QWORD *)v10 + 10) = v34;
  if (*((_QWORD *)v10 + 12))
    v36 = *((_QWORD *)v10 + 12);
  else
    v36 = sub_1BA8F2B44(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for FormatPackage();
  swift_bridgeObjectRetain();
  v37 = sub_1BB86EB24();
  v39 = v38;
  swift_beginAccess();
  v41 = a4[2];
  v40 = a4[3];
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52 = v36;
  sub_1BB4BDCEC(v41, v40, v37, v39, isUniquelyReferenced_nonNull_native);
  v43 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 12) = v43;
  v44 = sub_1BAA2DEA0(v25, (uint64_t)v10);
  sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BAA30BA8);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugNewsroomLayoutData);
  return v44;
}

uint64_t sub_1BAFC1FD0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatUploadService()
{
  return objc_opt_self();
}

_QWORD *sub_1BAFC2024()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_1BB873450();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB87342C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v7);
  type metadata accessor for DebugNewsroomService();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  v0[2] = v8;
  v0[3] = 0;
  sub_1BA657D64();
  sub_1BB872634();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1BA50AD30((unint64_t *)&unk_1ED3B9840, 255, v6, MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA50AD30((unint64_t *)&qword_1ED3B9660, 255, (uint64_t (*)(uint64_t))sub_1BA81D850, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v1);
  v0[4] = sub_1BB87348C();
  return v0;
}

unint64_t sub_1BAFC220C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B8480;
  if (!qword_1EF2B8480)
  {
    sub_1BA4AD288(255, &qword_1EF2B8478, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B8480);
  }
  return result;
}

unint64_t sub_1BAFC226C()
{
  unint64_t result;

  result = qword_1EF2B8488;
  if (!qword_1EF2B8488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934DD0, &type metadata for DebugFormatUploadEntryResult);
    atomic_store(result, (unint64_t *)&qword_1EF2B8488);
  }
  return result;
}

uint64_t sub_1BAFC22B0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFC22C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_BYTE *)a3 = *(_BYTE *)(v3 + 16);
  *(_QWORD *)(a3 + 8) = a1;
  *(_QWORD *)(a3 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAFC22F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAFC2314()
{
  uint64_t v0;

  return sub_1BAFBF054(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAFC232C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_1BB873D80();
  }
  result = sub_1BAFC2D38((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

void sub_1BAFC23FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B84A0)
  {
    sub_1BA4AD288(255, &qword_1EF2B8498, (uint64_t)&type metadata for DebugFormatUploadEntryResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B84A0);
  }
}

uint64_t sub_1BAFC2468()
{
  uint64_t v0;

  return sub_1BAFBF3EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BAFC2480(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFC0A5C(a1, v1);
}

void sub_1BAFC24B4(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFC0C38(a1, v1);
}

uint64_t sub_1BAFC24E8(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v7)
      break;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1BB873DD4();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    v9 = 0;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1BCCE4630](v9, a1);
      }
      else
      {
        v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
        swift_retain();
      }
      v12 = v10;
      a4(&v13, &v12, a2);
      swift_release();
      if (v4)
        return swift_release();
      ++v9;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (v7 == v9)
        return v14;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAFC265C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1BA69D314(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAFC26A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFC0F2C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(__int128 **)(v4 + 24), *(_QWORD *)(v4 + 32));
}

unint64_t sub_1BAFC26B4()
{
  unint64_t result;

  result = qword_1EF2B84B0;
  if (!qword_1EF2B84B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8880F0, &type metadata for DebugFormatUploadFile);
    atomic_store(result, (unint64_t *)&qword_1EF2B84B0);
  }
  return result;
}

unint64_t sub_1BAFC26F8()
{
  unint64_t result;

  result = qword_1EF2B84B8;
  if (!qword_1EF2B84B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDB00, &type metadata for DebugFormatUploadServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2B84B8);
  }
  return result;
}

uint64_t sub_1BAFC273C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA69D314(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAFC2780(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_1BAFC129C(a1, a2, a3, a4, *(void (**)(void *))(v4 + 16), *(_QWORD *)(v4 + 24), (uint64_t *)(v4 + 32), *(void (**)(void))(v4 + 80));
}

uint64_t sub_1BAFC27AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1BA69D44C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAFC27F8()
{
  return sub_1BAA2BF9C();
}

uint64_t sub_1BAFC2820()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFC2844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAFBFC9C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BAFC285C()
{
  uint64_t v0;

  return sub_1BAFC0034(*(_QWORD *)(v0 + 24));
}

void sub_1BAFC2888(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFC0A5C(a1, v1);
}

void sub_1BAFC28BC(uint64_t a1)
{
  uint64_t v1;

  sub_1BAFC0C38(a1, v1);
}

uint64_t sub_1BAFC28F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA69D314(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFC2924()
{
  return sub_1BAFC299C((uint64_t (*)(_QWORD, _QWORD))sub_1BAA2DC24);
}

uint64_t sub_1BAFC2944(uint64_t a1, uint64_t a2)
{
  return sub_1BAFC29F0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_1BAFC1474);
}

uint64_t sub_1BAFC2964(uint64_t a1, uint64_t a2)
{
  return sub_1BAFC2CC8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))sub_1BAFC16F0);
}

uint64_t sub_1BAFC2980()
{
  return sub_1BAFC299C((uint64_t (*)(_QWORD, _QWORD))sub_1BAA2D9A8);
}

uint64_t sub_1BAFC299C(uint64_t (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BAFC29D4(uint64_t a1, uint64_t a2)
{
  return sub_1BAFC29F0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_1BAFC19C4);
}

uint64_t sub_1BAFC29F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v7 = *(_QWORD *)(type metadata accessor for FormatPackage() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, a2, *(_QWORD *)(v3 + 16), v3 + v8, *v9, v9[1]);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for FormatPackage();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + 168) >= 3uLL)
    swift_bridgeObjectRelease();
  v3 = v2 + v1[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for FormatCompilerOptions(0);
  v5 = v3 + *(int *)(v4 + 24);
  if (*(_QWORD *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v6 = v5 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v7 = sub_1BB86E710();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v3 + *(int *)(v4 + 28);
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
  v11 = v2 + v1[24];
  v12 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v2 + v1[25];
  if (!v9(v13, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAFC2CAC(uint64_t a1, uint64_t a2)
{
  return sub_1BAFC2CC8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))sub_1BAFC1C40);
}

uint64_t sub_1BAFC2CC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for FormatPackage() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return a3(a1, a2, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BAFC2D38(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_1BB80CBC0(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_1BB872B2C();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_1BB80CBC0(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_1BB80CBC0(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_1BB872B2C();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

_QWORD *sub_1BAFC315C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int16 v10;
  unsigned __int8 *v11;
  char v12;
  _QWORD *v13;
  char v14;
  char v15;
  _QWORD *v16;
  _QWORD *result;
  _QWORD *v18;
  uint64_t v19;

  sub_1BA7114A0();
  v4 = (_QWORD *)sub_1BB873B4C();
  if (v4[2] != 2
    || (v5 = v4[8],
        v6 = v4[9],
        v8 = v4[10],
        v7 = v4[11],
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !((v6 ^ v5) >> 14)))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v9 = sub_1BAFC232C(v5, v6, v8, v7, 10);
  if ((v10 & 0x100) != 0)
  {
    v11 = sub_1BB0A8548(v5, v6, v8, v7, 10);
    v15 = v14;
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_9;
LABEL_7:
    v19 = a3;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v13);
    return (_QWORD *)v19;
  }
  v11 = (unsigned __int8 *)v9;
  v12 = v10;
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_7;
LABEL_9:
  v19 = a3;
  swift_bridgeObjectRetain();
  result = sub_1BB872AFC(v16);
  if (!__OFADD__(v11, 1))
  {
    sub_1BB87420C();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_QWORD *)v19;
  }
  __break(1u);
  return result;
}

void *sub_1BAFC3310(void *result, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      v4 = result;
      goto LABEL_3;
    case 3:
    case 4:
LABEL_3:
      result = (void *)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for DebugFormatUploadServiceError(uint64_t a1)
{
  sub_1BAFC3384(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1BAFC3384(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:

      goto LABEL_4;
    case 2:
      swift_bridgeObjectRelease();

      break;
    case 3:
    case 4:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for DebugFormatUploadServiceError(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAFC3310(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DebugFormatUploadServiceError(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAFC3310(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BAFC3384(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BAFC3384(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatUploadServiceError()
{
  return &type metadata for DebugFormatUploadServiceError;
}

uint64_t dispatch thunk of static FeedGroupAdInsertable.createAdGroup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t HeadlineViewRendererPipelineProcessor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return v0;
}

uint64_t HeadlineViewRendererPipelineProcessor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

unint64_t HeadlineViewRendererPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BA548BBC(a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1BAFC35D8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v20[0] = a3;
  v20[1] = a2;
  v22 = a5;
  v9 = sub_1BB87027C();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - v10;
  v12 = sub_1BB86CBE0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(*a1, sel_indexPath, v14);
  sub_1BB86CBA4();

  v23 = v20[0];
  v24 = a4;
  v25 = a6;
  v26 = a7;
  sub_1BB86FAD8();
  sub_1BB86FAE4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v18 = v22;
  sub_1BB870270();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v18, 0, 1, a4);
}

uint64_t method lookup function for HeadlineViewRendererPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAFC3760@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BAFC35D8(a1, v2[10], v2[4], v2[5], a2, v2[8], v2[9]);
}

unint64_t sub_1BAFC3794()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B84E0;
  if (!qword_1EF2B84E0)
  {
    sub_1BA865418(255);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B84E0);
  }
  return result;
}

uint64_t sub_1BAFC37DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BAFC3800()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

BOOL static FormatPublisherLogoSizeBinding.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPublisherLogoSizeBinding.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPublisherLogoSizeBinding.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAFC38A4()
{
  unint64_t result;

  result = qword_1EF2B84E8;
  if (!qword_1EF2B84E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizeBinding, &type metadata for FormatPublisherLogoSizeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B84E8);
  }
  return result;
}

unint64_t sub_1BAFC38E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFC390C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFC390C()
{
  unint64_t result;

  result = qword_1EF2B84F0;
  if (!qword_1EF2B84F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizeBinding, &type metadata for FormatPublisherLogoSizeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B84F0);
  }
  return result;
}

unint64_t sub_1BAFC3950(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA569C10();
  a1[2] = sub_1BA59894C();
  result = sub_1BAFC38A4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatPublisherLogoSizeBinding()
{
  return &type metadata for FormatPublisherLogoSizeBinding;
}

uint64_t sub_1BAFC3994@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BAFC41B4();
    v14 = 0uLL;
    sub_1BB8740D4();
    if ((v13 & 1) != 0)
    {
      v14 = xmmword_1BB87FC90;
      sub_1BAFC41F8();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v11 = 0;
      v12 = 0;
    }
    else
    {
      v13 = xmmword_1BB87FC90;
      sub_1BAFC423C();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v11 = v14;
      v12 = *((_QWORD *)&v14 + 1);
    }
    *a2 = v11;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAFC3B7C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = v1[1];
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  if (v9)
  {
    LOBYTE(v11) = 0;
    sub_1BAFC4280();
    v12 = 0uLL;
    sub_1BB8741AC();
    if (!v2)
    {
      LOBYTE(v12) = v13;
      *((_QWORD *)&v12 + 1) = v9;
      v11 = xmmword_1BB87FC90;
      sub_1BAFC4308();
LABEL_6:
      sub_1BB8741AC();
    }
  }
  else
  {
    LOBYTE(v11) = 1;
    sub_1BAFC4280();
    v12 = 0uLL;
    sub_1BB8741AC();
    if (!v2)
    {
      v12 = xmmword_1BB87FC90;
      sub_1BAFC42C4();
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BAFC3D40(char *a1, char *a2)
{
  return sub_1BB7EF954(*a1, *a2);
}

uint64_t sub_1BAFC3D4C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFC3DC8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFC3E20()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFC3E98@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAFC3EF4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1970169197;
  if (!*v1)
    v2 = 0x6C65694674786574;
  v3 = 0xE900000000000064;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAFC3F30()
{
  sub_1BAFC4460();
  return sub_1BB872D60();
}

uint64_t sub_1BAFC3F8C()
{
  sub_1BAFC4460();
  return sub_1BB872D0C();
}

uint64_t sub_1BAFC3FD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BAFC3994(a1, a2);
}

uint64_t sub_1BAFC3FEC(_QWORD *a1)
{
  return sub_1BAFC3B7C(a1);
}

uint64_t sub_1BAFC4004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v2)
  {
    if (v3)
    {
      v4 = *(_BYTE *)a1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1BB7EFC28(v4);
      if ((v5 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v6 = sub_1BA885B50(v2, v3);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v6 & 1) != 0)
          return 1;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3)
    goto LABEL_9;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugFormatTemplateKeyTextField(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatTemplateKeyTextField(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatTemplateKeyTextField(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyUIElement()
{
  return &type metadata for DebugFormatTemplateKeyUIElement;
}

unint64_t sub_1BAFC41B4()
{
  unint64_t result;

  result = qword_1EF2B84F8;
  if (!qword_1EF2B84F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDE8C, &type metadata for DebugFormatTemplateKeyUIElement.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B84F8);
  }
  return result;
}

unint64_t sub_1BAFC41F8()
{
  unint64_t result;

  result = qword_1EF2B8500;
  if (!qword_1EF2B8500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92E28C, &type metadata for DebugFormatTemplateKeyMenu);
    atomic_store(result, (unint64_t *)&qword_1EF2B8500);
  }
  return result;
}

unint64_t sub_1BAFC423C()
{
  unint64_t result;

  result = qword_1EF2B8508;
  if (!qword_1EF2B8508)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9316B0, &type metadata for DebugFormatTemplateKeyTextField);
    atomic_store(result, (unint64_t *)&qword_1EF2B8508);
  }
  return result;
}

unint64_t sub_1BAFC4280()
{
  unint64_t result;

  result = qword_1EF2B8510;
  if (!qword_1EF2B8510)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDE64, &type metadata for DebugFormatTemplateKeyUIElement.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B8510);
  }
  return result;
}

unint64_t sub_1BAFC42C4()
{
  unint64_t result;

  result = qword_1EF2B8518;
  if (!qword_1EF2B8518)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92E264, &type metadata for DebugFormatTemplateKeyMenu);
    atomic_store(result, (unint64_t *)&qword_1EF2B8518);
  }
  return result;
}

unint64_t sub_1BAFC4308()
{
  unint64_t result;

  result = qword_1EF2B8520;
  if (!qword_1EF2B8520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB931688, &type metadata for DebugFormatTemplateKeyTextField);
    atomic_store(result, (unint64_t *)&qword_1EF2B8520);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTemplateKeyUIElement.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFC4398 + 4 * byte_1BB8DDD15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFC43CC + 4 * byte_1BB8DDD10[v4]))();
}

uint64_t sub_1BAFC43CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFC43D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFC43DCLL);
  return result;
}

uint64_t sub_1BAFC43E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFC43F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFC43F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFC43FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTemplateKeyUIElement.CodingType()
{
  return &type metadata for DebugFormatTemplateKeyUIElement.CodingType;
}

unint64_t sub_1BAFC441C()
{
  unint64_t result;

  result = qword_1EF2B8528;
  if (!qword_1EF2B8528)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDE3C, &type metadata for DebugFormatTemplateKeyUIElement.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B8528);
  }
  return result;
}

unint64_t sub_1BAFC4460()
{
  unint64_t result;

  result = qword_1EF2B8530;
  if (!qword_1EF2B8530)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DDDC4, &type metadata for DebugFormatTemplateKeyUIElement.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B8530);
  }
  return result;
}

char *sub_1BAFC44A8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  objc_class *v5;
  objc_class *v6;
  id v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  double v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v89;
  objc_class *ObjectType;
  objc_super v91;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap;
  sub_1BA563554();
  v6 = v5;
  v7 = objc_allocWithZone(v5);
  v8 = v1;
  *(_QWORD *)&v2[v4] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton;
  v10 = (void *)objc_opt_self();
  *(_QWORD *)&v8[v9] = objc_msgSend(v10, sel_buttonWithType_, 0);
  v11 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  v12 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton;
  *(_QWORD *)&v8[v12] = objc_msgSend(v10, sel_buttonWithType_, 0);
  v13 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap;
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  v14 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton;
  *(_QWORD *)&v8[v14] = objc_msgSend(v10, sel_buttonWithType_, 0);
  v15 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap;
  *(_QWORD *)&v8[v15] = objc_msgSend(objc_allocWithZone(v6), sel_init);
  v16 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton;
  *(_QWORD *)&v8[v16] = objc_msgSend(v10, sel_buttonWithType_, 0);
  v17 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel;
  *(_QWORD *)&v8[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView;
  *(_QWORD *)&v8[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B98]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel;
  *(_QWORD *)&v8[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_editor] = a1;
  swift_retain();

  v91.receiver = v8;
  v91.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v91, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v21 = (void *)objc_opt_self();
  v22 = (char *)v20;
  v23 = objc_msgSend(v21, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  objc_msgSend(v22, sel_setClipsToBounds_, 1);
  v24 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v24, sel_setCornerRadius_, 4.0);

  v25 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel;
  v26 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel];
  v27 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v26, sel_setTextColor_, v27);

  v28 = *(void **)&v22[v25];
  v89 = (id)objc_opt_self();
  v29 = v28;
  v30 = objc_msgSend(v89, sel_systemFontOfSize_, 11.0);
  objc_msgSend(v29, sel_setFont_, v30);

  objc_msgSend(v22, sel_addSubview_, *(_QWORD *)&v22[v25]);
  v31 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton;
  v32 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton];
  v33 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v32, sel_setTintColor_, v33);

  v34 = *(id *)&v22[v31];
  v35 = (void *)sub_1BB872970();
  v36 = (void *)objc_opt_self();
  v37 = objc_msgSend(v36, sel_systemImageNamed_, v35);

  objc_msgSend(v34, sel_setImage_forState_, v37, 0);
  v38 = *(void **)&v22[v31];
  objc_msgSend(v38, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v38);
  v39 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap];
  v40 = v38;
  sub_1BB871368();

  v41 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton;
  v42 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton];
  v43 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v42, sel_setTintColor_, v43);

  v44 = *(id *)&v22[v41];
  v45 = (void *)sub_1BB872970();
  v46 = objc_msgSend(v36, sel_systemImageNamed_, v45);

  objc_msgSend(v44, sel_setImage_forState_, v46, 0);
  v47 = *(void **)&v22[v41];
  objc_msgSend(v47, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v47);
  v48 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap];
  v49 = v47;
  sub_1BB871368();

  v50 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton;
  v51 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton];
  v52 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v51, sel_setTintColor_, v52);

  v53 = *(id *)&v22[v50];
  v54 = (void *)sub_1BB872970();
  v55 = objc_msgSend(v36, sel_systemImageNamed_, v54);

  objc_msgSend(v53, sel_setImage_forState_, v55, 0);
  v56 = *(void **)&v22[v50];
  objc_msgSend(v56, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v56);
  v57 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap];
  v58 = v56;
  sub_1BB871368();

  v59 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel;
  v60 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel];
  objc_msgSend(v60, sel_setUserInteractionEnabled_, 0);
  v61 = v60;
  v62 = objc_msgSend(v89, sel_systemFontOfSize_, 8.0);
  objc_msgSend(v61, sel_setFont_, v62);

  v63 = *(id *)&v22[v59];
  v64 = objc_msgSend(v21, sel_whiteColor);
  objc_msgSend(v63, sel_setTextColor_, v64);

  v65 = *(id *)&v22[v59];
  v66 = objc_msgSend(v21, sel_systemBlueColor);
  objc_msgSend(v65, sel_setBackgroundColor_, v66);

  v67 = *(void **)&v22[v59];
  objc_msgSend(v67, sel_setFrame_, 0.0, 0.0, 16.0, 16.0);
  v68 = objc_msgSend(v67, sel_layer);
  objc_msgSend(v68, sel_setCornerRadius_, 8.0);

  v69 = objc_msgSend(*(id *)&v22[v59], sel_layer);
  objc_msgSend(v69, sel_setCornerCurve_, *MEMORY[0x1E0CD2A60]);

  v70 = objc_msgSend(*(id *)&v22[v59], sel_layer);
  objc_msgSend(v70, sel_setMasksToBounds_, 1);

  v71 = *(void **)&v22[v59];
  objc_msgSend(v71, sel_setTextAlignment_, 1);
  objc_msgSend(v71, sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(v22, sel_addSubview_, v71);
  v72 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton;
  v73 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton];
  v74 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v73, sel_setTintColor_, v74);

  v75 = *(id *)&v22[v72];
  v76 = (void *)sub_1BB872970();
  v77 = objc_msgSend(v36, sel_systemImageNamed_, v76);

  objc_msgSend(v75, sel_setImage_forState_, v77, 0);
  v78 = *(void **)&v22[v72];
  objc_msgSend(v78, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v22, sel_addSubview_, v78);
  v79 = *(id *)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap];
  v80 = v78;
  sub_1BB871368();

  v81 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView;
  v82 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView];
  LODWORD(v83) = 0;
  objc_msgSend(v82, sel_setProgress_, v83);
  v84 = v82;
  v85 = objc_msgSend(v21, sel_systemBlueColor);
  objc_msgSend(v84, sel_setProgressTintColor_, v85);

  v86 = *(id *)&v22[v81];
  v87 = objc_msgSend(v21, sel_clearColor);
  objc_msgSend(v86, sel_setTrackTintColor_, v87);

  objc_msgSend(v22, sel_addSubview_, *(_QWORD *)&v22[v81]);
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E470();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E470();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E470();
  swift_release();

  swift_release();
  return v22;
}

void sub_1BAFC50DC(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  sub_1BB872AFC(v4);
  v5 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v5);
  swift_bridgeObjectRelease();

}

id sub_1BAFC51BC(uint64_t a1, _DWORD *a2, double a3)
{
  LODWORD(a3) = *a2;
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView), sel_setProgress_animated_, 0, a3);
}

void sub_1BAFC51DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;

  v4 = *a2;
  v3 = a2[1];
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v5 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel);
  v9 = v3;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v6);
  sub_1BB872AFC(v7);
  v8 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setText_, v8, v4, v9);
  swift_bridgeObjectRelease();

}

void sub_1BAFC52BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v2 = *a2;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTintColor_, v5);

  v6 = *(_QWORD *)(sub_1BB37D3C4(v2) + 16);
  swift_bridgeObjectRelease();
  if (v6)
  {
    v7 = objc_msgSend(v4, sel_systemYellowColor);
    objc_msgSend(v3, sel_setTintColor_, v7);

  }
  v8 = *(_QWORD *)(sub_1BB37D11C(v2) + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    v9 = objc_msgSend(v4, sel_systemRedColor);
    objc_msgSend(v3, sel_setTintColor_, v9);

  }
}

void sub_1BAFC53DC(uint64_t a1, unsigned __int8 *a2)
{
  int v3;
  void *v4;
  void *v5;
  char **v6;
  id v7;
  void *v8;
  id v9;

  v3 = *a2;
  v4 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton);
  v5 = (void *)objc_opt_self();
  if (v3)
    v6 = &selRef_systemBlueColor;
  else
    v6 = &selRef_systemRedColor;
  v7 = objc_msgSend(v5, *v6);
  objc_msgSend(v4, sel_setTintColor_, v7);

  v8 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel);
  v9 = objc_msgSend((id)objc_opt_self(), *v6);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

}

void sub_1BAFC54B0(uint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel);
  objc_msgSend(v2, sel_setHidden_, *a2 == 0);
  sub_1BB87420C();
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

}

void sub_1BAFC556C()
{
  char *v0;
  void *v1;
  double Height;
  void *v3;
  double Width;
  double v5;
  double v6;
  void *v7;
  double MinX;
  double v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  void *v25;
  CGFloat v26;
  void *v27;
  double MaxX;
  double v29;
  double MinY;
  double v31;
  id v32;
  objc_super v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v33.receiver = v0;
  v33.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v33, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton];
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v34);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, 8.0, 0.0, Height, CGRectGetHeight(v35));
  v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v36);
  objc_msgSend(v0, sel_bounds);
  v5 = Width - CGRectGetHeight(v37);
  objc_msgSend(v0, sel_bounds);
  v6 = CGRectGetHeight(v38);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_setFrame_, v5, 0.0, v6, CGRectGetHeight(v39));
  v7 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton];
  objc_msgSend(v3, sel_frame);
  MinX = CGRectGetMinX(v40);
  objc_msgSend(v0, sel_bounds);
  v9 = MinX - CGRectGetHeight(v41);
  objc_msgSend(v0, sel_bounds);
  v10 = CGRectGetHeight(v42);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v7, sel_setFrame_, v9, 0.0, v10, CGRectGetHeight(v43));
  v11 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton];
  objc_msgSend(v7, sel_frame);
  v12 = CGRectGetMinX(v44);
  objc_msgSend(v0, sel_bounds);
  v13 = v12 - CGRectGetHeight(v45);
  objc_msgSend(v0, sel_bounds);
  v14 = CGRectGetHeight(v46);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v11, sel_setFrame_, v13, 0.0, v14, CGRectGetHeight(v47));
  v15 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v48);
  sub_1BB8735B8();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  objc_msgSend(v0, sel_bounds);
  v24 = CGRectGetHeight(v49);
  objc_msgSend(v15, sel_setFrame_, UIEdgeInsetsInsetRect(v17, v19, v21, v23, 0.0, v24 + 8.0));
  v25 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView];
  objc_msgSend(v0, sel_bounds);
  v26 = CGRectGetHeight(v50) + -3.0;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v25, sel_setFrame_, 0.0, v26, CGRectGetWidth(v51), 3.0);
  v27 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel];
  objc_msgSend(v7, sel_frame);
  MaxX = CGRectGetMaxX(v52);
  objc_msgSend(v27, sel_frame);
  v29 = MaxX - CGRectGetWidth(v53);
  objc_msgSend(v7, sel_frame);
  MinY = CGRectGetMinY(v54);
  objc_msgSend(v27, sel_frame);
  v31 = CGRectGetWidth(v55);
  objc_msgSend(v27, sel_frame);
  objc_msgSend(v27, sel_setFrame_, v29, MinY, v31, CGRectGetHeight(v56));
  v32 = objc_msgSend(v27, sel_layer);
  objc_msgSend(v27, sel_frame);
  objc_msgSend(v32, sel_setCornerRadius_, CGRectGetHeight(v57) * 0.5);

}

uint64_t type metadata accessor for DebugFormatEditorStatusView()
{
  return objc_opt_self();
}

void sub_1BAFC5AC4()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap;
  sub_1BA563554();
  v3 = v2;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton;
  v5 = (void *)objc_opt_self();
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, sel_buttonWithType_, 0);
  v6 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v7 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton;
  *(_QWORD *)&v0[v7] = objc_msgSend(v5, sel_buttonWithType_, 0);
  v8 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v9 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton;
  *(_QWORD *)&v0[v9] = objc_msgSend(v5, sel_buttonWithType_, 0);
  v10 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v11 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton;
  *(_QWORD *)&v0[v11] = objc_msgSend(v5, sel_buttonWithType_, 0);
  v12 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_statusLabel;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_progressView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B98]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverReloadQueueLabel;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BAFC5CD8(uint64_t a1)
{
  char *v1;
  char *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t *j;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[80];
  uint64_t v23;
  _QWORD v24[16];

  v2 = v1;
  sub_1BAF97E40(a1, (uint64_t)v24);
  v3 = objc_msgSend(v1, sel_subviews);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v4 = sub_1BB872DB4();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_10;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_10;
  }
  if (v5 < 1)
  {
LABEL_18:
    __break(1u);
    return;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1BCCE4630](i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    objc_msgSend(v7, sel_removeFromSuperview);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  sub_1BAF97E40((uint64_t)v24, (uint64_t)v22);
  if (sub_1BA8CF120((uint64_t)v22) != 1)
  {
    v9 = v23;
    v10 = *(_QWORD *)(v23 + 16);
    if (v10)
    {
      v11 = *(double *)&v2[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_breakpointSize];
      sub_1BA6A0C50(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
      swift_bridgeObjectRetain();
      for (j = (uint64_t *)(v9 + 56); ; j += 4)
      {
        v13 = *(j - 1);
        if (__OFSUB__(v13, 1))
          break;
        v14 = *j;
        v15 = *(j - 2);
        v16 = v11 * (double)(v13 - 1);
        *(_QWORD *)&v19 = *(j - 3);
        *((_QWORD *)&v19 + 1) = v15;
        v20 = v13;
        v21 = v14;
        objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceBreakpointIndicatorView());
        swift_bridgeObjectRetain();
        v17 = swift_retain();
        v18 = sub_1BAFC60AC(v17, &v19, 0.0, v16, v11, v11);
        objc_msgSend(v2, sel_addSubview_, v18);

        if (!--v10)
        {
          swift_bridgeObjectRelease();
          sub_1BA6A0C50(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
          return;
        }
      }
      __break(1u);
      goto LABEL_18;
    }
  }
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceBreakpointView()
{
  return objc_opt_self();
}

char *sub_1BAFC60AC(uint64_t a1, __int128 *a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  __int128 v34;
  objc_class *ObjectType;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v13 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA4AD288(0, &qword_1ED3C49C0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DBC320]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (_QWORD *)((char *)&v34 - v17);
  v34 = *a2;
  v20 = *((_QWORD *)a2 + 2);
  v19 = *((_QWORD *)a2 + 3);
  v21 = OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_onTap;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, v13, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  v23 = objc_allocWithZone(v22);
  v24 = v6;
  *(_QWORD *)&v6[v21] = objc_msgSend(v23, sel_init);
  *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_editor] = a1;
  v25 = &v24[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap];
  *(_OWORD *)v25 = v34;
  *((_QWORD *)v25 + 2) = v20;
  *((_QWORD *)v25 + 3) = v19;
  swift_retain();

  v36.receiver = v24;
  v36.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v36, sel_initWithFrame_, a3, a4, a5, a6);
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E470();
  swift_release();
  v27 = OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_onTap;
  *v18 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DBC310], v15);
  v28 = v26;

  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  v29 = *(void **)&v26[v27];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v30 = v29;

  swift_release();
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B18]), sel_initWithDelegate_, v28);
  v32 = v28;
  objc_msgSend(v32, sel_addInteraction_, v31);

  swift_release();
  return v32;
}

void sub_1BAFC6374(uint64_t a1, uint64_t *a2)
{
  sub_1BAFC6398(*a2);
}

void sub_1BAFC6398(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  CGRect v12;

  v3 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v3, sel_setCornerRadius_, CGRectGetHeight(v12) * 0.5);

  v4 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v4, sel_setBorderWidth_, 1.0);

  LOBYTE(a1) = sub_1BAFC67B0(a1);
  v5 = (void *)objc_opt_self();
  v6 = v5;
  if ((a1 & 1) != 0)
  {
    v7 = objc_msgSend(v5, sel_systemBlueColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v7);

    v8 = objc_msgSend(v1, sel_layer);
    v9 = objc_msgSend(v6, sel_systemBlueColor);
  }
  else
  {
    v10 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v10);

    v8 = objc_msgSend(v1, sel_layer);
    v9 = objc_msgSend(v6, sel_secondaryLabelColor);
  }
  v11 = objc_msgSend(v9, sel_CGColor);

  objc_msgSend(v8, sel_setBorderColor_, v11);
}

uint64_t sub_1BAFC657C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char *v3;
  _QWORD *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1);
  if (result)
  {
    v3 = (char *)result;
    swift_retain();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    swift_release();
    v4 = v14;
    if ((sub_1BAFC67B0((uint64_t)v14) & 1) != 0)
    {
      v5 = v3;
      swift_retain();
      v6 = (_QWORD *)sub_1BAFC7874((uint64_t)v14, (uint64_t)v5);
      swift_bridgeObjectRelease();

      v14 = v6;
      swift_retain();
      sub_1BB86E4A0();

      swift_release();
    }
    else
    {
      v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap];
      v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 8];
      v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 16];
      v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 24];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1BB392600(0, v14[2] + 1, 1, v14);
      v12 = v4[2];
      v11 = v4[3];
      if (v12 >= v11 >> 1)
        v4 = sub_1BB392600((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
      v4[2] = v12 + 1;
      v13 = &v4[4 * v12];
      v13[4] = v8;
      v13[5] = v7;
      v13[6] = v9;
      v13[7] = v10;
      v14 = v4;
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BAFC6B38((uint64_t *)&v14);
      swift_bridgeObjectRelease_n();
      swift_retain();
      sub_1BB86E4A0();

      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAFC67B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v3 = v1 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  for (i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    v11 = *(i - 1);
    v10 = *i;
    v12 = *(i - 3) == v4 && *(i - 2) == v5;
    if ((v12 || (sub_1BB874398() & 1) != 0) && v11 == v6 && v10 == v7)
      break;
    if (!--v2)
      return 0;
  }
  return 1;
}

void sub_1BAFC69A0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceBreakpointIndicatorView()
{
  return objc_opt_self();
}

id sub_1BAFC6A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BAF92890(a12, a13, a14, a15, a16);
  }
  return result;
}

uint64_t sub_1BAFC6B0C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAFC6B30()
{
  uint64_t v0;

  return sub_1BAFC657C(v0);
}

uint64_t sub_1BAFC6B38(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BACAB988(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BAFC6BA0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BAFC6BA0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  _BOOL4 v26;
  int v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  char v57;
  BOOL v58;
  char v59;
  __int128 v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  char *__dst;
  uint64_t v130;
  uint64_t v131;
  _BOOL4 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_158;
    if (v4)
      return sub_1BAFC73B8(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_166;
  v125 = v4;
  v121 = result;
  v119 = a1;
  if (v4 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_124:
      v122 = v8;
      if (v13 >= 2)
      {
        v113 = *v119;
        do
        {
          v114 = v13 - 2;
          if (v13 < 2)
            goto LABEL_153;
          if (!v113)
            goto LABEL_165;
          v115 = *(_QWORD *)&v11[16 * v114 + 32];
          v116 = *(_QWORD *)&v11[16 * v13 + 24];
          sub_1BAFC74F8((char *)(v113 + 32 * v115), (char *)(v113 + 32 * *(_QWORD *)&v11[16 * v13 + 16]), v113 + 32 * v116, __dst);
          if (v2)
            break;
          if (v116 < v115)
            goto LABEL_154;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1BACAB464((uint64_t)v11);
          if (v114 >= *((_QWORD *)v11 + 2))
            goto LABEL_155;
          v117 = &v11[16 * v114 + 32];
          *(_QWORD *)v117 = v115;
          *((_QWORD *)v117 + 1) = v116;
          v118 = *((_QWORD *)v11 + 2);
          if (v13 > v118)
            goto LABEL_156;
          memmove(&v11[16 * v13 + 16], &v11[16 * v13 + 32], 16 * (v118 - v13));
          *((_QWORD *)v11 + 2) = v118 - 1;
          v13 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    __dst = (char *)(v8 + 32);
  }
  v122 = v8;
  v9 = 0;
  v10 = *a1;
  v120 = *a1 + 48;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = v125;
  v130 = *a1;
  while (1)
  {
    v14 = v9;
    v15 = v9 + 1;
    v124 = v11;
    v126 = v9;
    if (v9 + 1 < v12)
    {
      v16 = (uint64_t *)(v10 + 32 * v15);
      v17 = *v16;
      v18 = v16[1];
      v19 = v16[2];
      v20 = v16[3];
      v21 = (_QWORD *)(v10 + 32 * v9);
      v22 = v21[2];
      v23 = v21[3];
      v24 = v17 == *v21 && v18 == v21[1];
      if (v24 || (v25 = sub_1BB874398(), v10 = v130, (v25 & 1) != 0))
      {
        v26 = v19 < v22;
        if (v19 == v22)
          v26 = v20 < v23;
        v132 = v26;
      }
      else
      {
        v27 = sub_1BB874398();
        v10 = v130;
        v132 = v27;
      }
      v12 = v125;
      v14 = v126;
      v15 = v126 + 2;
      v11 = v124;
      if (v126 + 2 < v125)
      {
        v28 = (uint64_t *)(v120 + 32 * v126);
        while (1)
        {
          v134 = v15;
          v29 = v28[4];
          v30 = v28[5];
          v31 = *v28;
          v32 = v28[1];
          v33 = v28[2] == *(v28 - 2) && v28[3] == *(v28 - 1);
          if (v33 || (v34 = sub_1BB874398(), v10 = v130, (v34 & 1) != 0))
          {
            v35 = v29 == v31 ? v30 < v32 : v29 < v31;
          }
          else
          {
            v35 = sub_1BB874398();
            v10 = v130;
          }
          v11 = v124;
          v12 = v125;
          v15 = v134;
          if (((v132 ^ v35) & 1) != 0)
            break;
          v15 = v134 + 1;
          v28 += 4;
          if (v125 == v134 + 1)
          {
            v15 = v125;
            break;
          }
        }
        v14 = v126;
      }
      if (v132)
      {
        if (v15 < v14)
          goto LABEL_159;
        if (v14 < v15)
        {
          v36 = 32 * v15;
          v37 = 32 * v14;
          v38 = v15;
          v39 = v14;
          do
          {
            if (v39 != --v15)
            {
              if (!v10)
                goto LABEL_164;
              v40 = (_OWORD *)(v10 + v37);
              v41 = v10 + v36;
              v42 = *(_QWORD *)(v10 + v37);
              v43 = *(_QWORD *)(v10 + v37 + 8);
              v44 = *(_OWORD *)(v10 + v37 + 16);
              v45 = *(_OWORD *)(v10 + v36 - 16);
              *v40 = *(_OWORD *)(v10 + v36 - 32);
              v40[1] = v45;
              *(_QWORD *)(v41 - 32) = v42;
              *(_QWORD *)(v41 - 24) = v43;
              *(_OWORD *)(v41 - 16) = v44;
            }
            ++v39;
            v36 -= 32;
            v37 += 32;
          }
          while (v39 < v15);
          v15 = v38;
        }
      }
    }
    if (v15 < v12)
    {
      if (__OFSUB__(v15, v14))
        goto LABEL_157;
      if (v15 - v14 < v121)
        break;
    }
LABEL_75:
    if (v15 < v14)
      goto LABEL_152;
    v136 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v62 = *((_QWORD *)v11 + 2);
    v61 = *((_QWORD *)v11 + 3);
    v13 = v62 + 1;
    v10 = v130;
    v9 = v136;
    v63 = v126;
    if (v62 >= v61 >> 1)
    {
      v112 = sub_1BACAA368((char *)(v61 > 1), v62 + 1, 1, v11);
      v9 = v136;
      v10 = v130;
      v11 = v112;
      v63 = v126;
    }
    *((_QWORD *)v11 + 2) = v13;
    v64 = v11 + 32;
    v65 = &v11[16 * v62 + 32];
    *(_QWORD *)v65 = v63;
    *((_QWORD *)v65 + 1) = v9;
    if (v62)
    {
      while (1)
      {
        v66 = v13 - 1;
        if (v13 >= 4)
        {
          v71 = &v64[16 * v13];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_141;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_142;
          v78 = v13 - 2;
          v79 = &v64[16 * v13 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_144;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_147;
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_151;
            v94 = v69 < v104;
            goto LABEL_112;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v95 = *((_QWORD *)v11 + 4);
            v96 = *((_QWORD *)v11 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_106;
          }
          v68 = *((_QWORD *)v11 + 4);
          v67 = *((_QWORD *)v11 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_143;
        v78 = v13 - 2;
        v84 = &v64[16 * v13 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_146;
        v90 = &v64[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_149;
        if (__OFADD__(v88, v93))
          goto LABEL_150;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_112:
          if (v94)
            v66 = v78;
          goto LABEL_114;
        }
LABEL_106:
        if ((v89 & 1) != 0)
          goto LABEL_145;
        v97 = &v64[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_148;
        if (v100 < v88)
        {
          v9 = v136;
          goto LABEL_14;
        }
LABEL_114:
        v105 = v66 - 1;
        if (v66 - 1 >= v13)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        if (!v10)
          goto LABEL_163;
        v106 = v11;
        v107 = &v64[16 * v105];
        v108 = *(_QWORD *)v107;
        v109 = &v64[16 * v66];
        v110 = *((_QWORD *)v109 + 1);
        sub_1BAFC74F8((char *)(v10 + 32 * *(_QWORD *)v107), (char *)(v10 + 32 * *(_QWORD *)v109), v10 + 32 * v110, __dst);
        if (v2)
          goto LABEL_135;
        if (v110 < v108)
          goto LABEL_138;
        if (v66 > *((_QWORD *)v106 + 2))
          goto LABEL_139;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v64[16 * v105 + 8] = v110;
        v111 = *((_QWORD *)v106 + 2);
        if (v66 >= v111)
          goto LABEL_140;
        v11 = v106;
        v13 = v111 - 1;
        memmove(&v64[16 * v66], v109 + 16, 16 * (v111 - 1 - v66));
        *((_QWORD *)v11 + 2) = v111 - 1;
        v10 = v130;
        v9 = v136;
        if (v111 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v12 = v125;
    v8 = v122;
    if (v9 >= v125)
      goto LABEL_124;
  }
  v46 = v14 + v121;
  if (__OFADD__(v14, v121))
    goto LABEL_160;
  if (v46 >= v12)
    v46 = v12;
  if (v46 >= v14)
  {
    if (v15 != v46)
    {
      v128 = v2;
      v47 = (_QWORD *)(v10 + 32 * v15);
      v123 = v46;
      do
      {
        v48 = (uint64_t *)(v10 + 32 * v15);
        v49 = *v48;
        v50 = v48[1];
        v52 = v48[2];
        v51 = v48[3];
        v53 = v14;
        v127 = v47;
        v135 = v15;
        do
        {
          v55 = *(v47 - 2);
          v54 = *(v47 - 1);
          v56 = v49 == *(v47 - 4) && v50 == *(v47 - 3);
          if (v56
            || (v131 = *(v47 - 2),
                v133 = *(v47 - 1),
                v57 = sub_1BB874398(),
                v55 = v131,
                v54 = v133,
                v15 = v135,
                v10 = v130,
                (v57 & 1) != 0))
          {
            v58 = v52 < v55;
            if (v52 == v55)
              v58 = v51 < v54;
            if (!v58)
              break;
          }
          else
          {
            v59 = sub_1BB874398();
            v15 = v135;
            v10 = v130;
            if ((v59 & 1) == 0)
              break;
          }
          if (!v10)
            goto LABEL_162;
          v49 = *v47;
          v50 = v47[1];
          v52 = v47[2];
          v51 = v47[3];
          v60 = *((_OWORD *)v47 - 1);
          *(_OWORD *)v47 = *((_OWORD *)v47 - 2);
          *((_OWORD *)v47 + 1) = v60;
          *(v47 - 3) = v50;
          *(v47 - 2) = v52;
          *(v47 - 1) = v51;
          *(v47 - 4) = v49;
          v47 -= 4;
          ++v53;
        }
        while (v15 != v53);
        ++v15;
        v14 = v126;
        v47 = v127 + 4;
      }
      while (v15 != v123);
      v15 = v123;
      v2 = v128;
      v11 = v124;
    }
    goto LABEL_75;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BAFC73B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  __int128 v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = result;
  if (a3 != a2)
  {
    v22 = *a4;
    v4 = (_QWORD *)(*a4 + 32 * a3);
LABEL_5:
    v5 = (uint64_t *)(v22 + 32 * a3);
    v6 = *v5;
    v7 = v5[1];
    v9 = v5[2];
    v8 = v5[3];
    v10 = v17;
    v18 = v4;
    v19 = a3;
    while (1)
    {
      v12 = *(v4 - 2);
      v11 = *(v4 - 1);
      v13 = v6 == *(v4 - 4) && v7 == *(v4 - 3);
      if (v13
        || (v20 = *(v4 - 2), v21 = *(v4 - 1),
                             result = sub_1BB874398(),
                             v12 = v20,
                             v11 = v21,
                             a3 = v19,
                             (result & 1) != 0))
      {
        v14 = v9 < v12;
        if (v9 == v12)
          v14 = v8 < v11;
        if (!v14)
        {
LABEL_4:
          ++a3;
          v4 = v18 + 4;
          if (a3 == a2)
            return result;
          goto LABEL_5;
        }
      }
      else
      {
        result = sub_1BB874398();
        a3 = v19;
        if ((result & 1) == 0)
          goto LABEL_4;
      }
      if (!v22)
        break;
      v6 = *v4;
      v7 = v4[1];
      v9 = v4[2];
      v8 = v4[3];
      v15 = *((_OWORD *)v4 - 1);
      *(_OWORD *)v4 = *((_OWORD *)v4 - 2);
      *((_OWORD *)v4 + 1) = v15;
      *(v4 - 3) = v7;
      *(v4 - 2) = v9;
      *(v4 - 1) = v8;
      *(v4 - 4) = v6;
      v4 -= 4;
      if (a3 == ++v10)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAFC74F8(char *a1, char *__src, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  __int128 v18;
  char *v19;
  __int128 v20;
  char v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  BOOL v35;
  char *v36;
  __int128 v37;
  char v38;
  __int128 v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *__srcb;
  char *v50;
  char *v51;
  char *v52;
  char *v53;

  v4 = __src;
  v5 = a1;
  v6 = __src - a1;
  v7 = __src - a1 + 31;
  if (__src - a1 >= 0)
    v7 = __src - a1;
  v8 = v7 >> 5;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 5;
  v53 = a1;
  v52 = __dst;
  v45 = __dst;
  if (v8 >= v10 >> 5)
  {
    if (v9 < -31)
      goto LABEL_63;
    if (__dst != __src || &__src[32 * v11] <= __dst)
    {
      memmove(__dst, __src, 32 * v11);
      __dst = v45;
      v5 = a1;
    }
    v22 = &__dst[32 * v11];
    v51 = v22;
    v53 = v4;
    if (v5 >= v4 || v9 < 32)
    {
LABEL_62:
      sub_1BACAB20C((void **)&v53, (const void **)&v52, &v51);
      return 1;
    }
    v23 = (char *)(a3 - 32);
    v24 = v4;
    while (1)
    {
      v50 = v4;
      v25 = v23 + 32;
      v26 = v22 - 32;
      v28 = *((_QWORD *)v22 - 2);
      v27 = *((_QWORD *)v22 - 1);
      v29 = *((_QWORD *)v24 - 4);
      v30 = *((_QWORD *)v24 - 3);
      v24 -= 32;
      v32 = *((_QWORD *)v24 + 2);
      v31 = *((_QWORD *)v24 + 3);
      if (*((_QWORD *)v22 - 4) == v29 && *((_QWORD *)v22 - 3) == v30)
        goto LABEL_44;
      v44 = v22;
      v41 = *((_QWORD *)v22 - 1);
      v42 = *((_QWORD *)v24 + 3);
      v34 = sub_1BB874398();
      v27 = v41;
      v31 = v42;
      v25 = v23 + 32;
      v22 = v44;
      __dst = v45;
      v5 = a1;
      if ((v34 & 1) != 0)
      {
LABEL_44:
        v35 = v28 < v32;
        if (v28 == v32)
          v35 = v27 < v31;
        v36 = v50;
        if (!v35)
        {
LABEL_54:
          v51 = v26;
          if (v25 < v22 || v23 >= v22 || v25 != v22)
          {
            v39 = *((_OWORD *)v26 + 1);
            *(_OWORD *)v23 = *(_OWORD *)v26;
            *((_OWORD *)v23 + 1) = v39;
          }
          v24 = v36;
          v22 = v26;
          if (v36 <= v5)
            goto LABEL_62;
          goto LABEL_59;
        }
      }
      else
      {
        v38 = sub_1BB874398();
        v25 = v23 + 32;
        v22 = v44;
        __dst = v45;
        v5 = a1;
        v36 = v50;
        if ((v38 & 1) == 0)
          goto LABEL_54;
      }
      if (v25 != v36 || v23 >= v36)
      {
        v37 = *((_OWORD *)v24 + 1);
        *(_OWORD *)v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v37;
      }
      v53 = v24;
      if (v24 <= v5)
        goto LABEL_62;
LABEL_59:
      v23 -= 32;
      v4 = v24;
      if (v22 <= __dst)
        goto LABEL_62;
    }
  }
  if (v6 >= -31)
  {
    if (__dst != a1 || &a1[32 * v8] <= __dst)
    {
      memmove(__dst, a1, 32 * v8);
      __dst = v45;
      v5 = a1;
    }
    v43 = &__dst[32 * v8];
    v51 = v43;
    if ((unint64_t)v4 < a3 && v6 >= 32)
    {
      while (1)
      {
        v12 = *((_QWORD *)v4 + 2);
        v13 = *((_QWORD *)v4 + 3);
        v14 = *((_QWORD *)__dst + 2);
        v15 = *((_QWORD *)__dst + 3);
        v16 = *(_QWORD *)v4 == *(_QWORD *)__dst && *((_QWORD *)v4 + 1) == *((_QWORD *)__dst + 1);
        if (v16 || (v46 = __dst, __srcb = v5, v17 = sub_1BB874398(), __dst = v46, v5 = __srcb, (v17 & 1) != 0))
        {
          if (v12 == v14)
          {
            if (v13 < v15)
              goto LABEL_23;
          }
          else if (v12 < v14)
          {
            goto LABEL_23;
          }
        }
        else
        {
          v21 = sub_1BB874398();
          __dst = v46;
          v5 = __srcb;
          if ((v21 & 1) != 0)
          {
LABEL_23:
            v19 = v4 + 32;
            if (v5 < v4 || v5 >= v19 || v5 != v4)
            {
              v20 = *((_OWORD *)v4 + 1);
              *(_OWORD *)v5 = *(_OWORD *)v4;
              *((_OWORD *)v5 + 1) = v20;
            }
            goto LABEL_27;
          }
        }
        if (v5 != __dst)
        {
          v18 = *((_OWORD *)__dst + 1);
          *(_OWORD *)v5 = *(_OWORD *)__dst;
          *((_OWORD *)v5 + 1) = v18;
        }
        __dst += 32;
        v52 = __dst;
        v19 = v4;
LABEL_27:
        v5 += 32;
        if (__dst < v43)
        {
          v4 = v19;
          if ((unint64_t)v19 < a3)
            continue;
        }
        v53 = v5;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
LABEL_63:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAFC7874(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap);
    v30 = -(uint64_t)v2;
    v5 = result + 56;
    v6 = MEMORY[0x1E0DEE9D8];
    v26 = result + 56;
    v27 = *(_QWORD *)(result + 16);
    v29 = (_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed48DebugFormatDebuggerSourceBreakpointIndicatorView_sourceMap);
    while (1)
    {
      v28 = v6;
      if (v3 <= v2)
        v7 = v2;
      else
        v7 = v3;
      v8 = -(uint64_t)v7;
      for (i = (uint64_t *)(v5 + 32 * v3++); ; i += 4)
      {
        if (v8 + v3 == 1)
        {
          __break(1u);
          return result;
        }
        v11 = *(i - 3);
        v12 = *(i - 2);
        v13 = *(i - 1);
        v14 = *i;
        v15 = v4[2];
        v16 = v4[3];
        if (v11 == *v4 && v12 == v4[1])
          break;
        v18 = *(i - 2);
        v19 = *(i - 3);
        v20 = *(i - 1);
        v21 = *i;
        v22 = v8;
        result = sub_1BB874398();
        v8 = v22;
        v14 = v21;
        v13 = v20;
        v11 = v19;
        v12 = v18;
        v4 = v29;
        if ((result & 1) == 0 || v13 != v15 || v14 != v16)
          goto LABEL_21;
LABEL_12:
        ++v3;
        if (v30 + v3 == 1)
          return v28;
      }
      if (v13 == v15 && v14 == v16)
        goto LABEL_12;
LABEL_21:
      swift_bridgeObjectRetain();
      v6 = v28;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1BAC7AF08(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v6 = v28;
      }
      v5 = v26;
      v2 = v27;
      v24 = *(_QWORD *)(v6 + 16);
      v23 = *(_QWORD *)(v6 + 24);
      if (v24 >= v23 >> 1)
      {
        result = sub_1BAC7AF08(v23 > 1, v24 + 1, 1);
        v5 = v26;
        v2 = v27;
        v6 = v28;
      }
      *(_QWORD *)(v6 + 16) = v24 + 1;
      v25 = (_QWORD *)(v6 + 32 * v24);
      v25[4] = v11;
      v25[5] = v12;
      v25[6] = v13;
      v25[7] = v14;
      if (!(v30 + v3))
        return v6;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BAFC7A50()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v1 = v0;
  sub_1BAFC7C50();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1BB871824();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D90]), sel_initWithView_, v1);
  objc_msgSend(v1, sel_bounds);
  v14 = UIEdgeInsetsInsetRect(v10, v11, v12, v13, -8.0, -8.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = objc_msgSend(v1, sel_superview);
  objc_msgSend(v1, sel_convertRect_toView_, v21, v14, v16, v18, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  sub_1BA49A224(0, qword_1EF2B86B8);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC1E70], v5);
  *v4 = v23;
  v4[1] = v25;
  v4[2] = v27;
  v4[3] = v29;
  v4[4] = 0x4010000000000000;
  v30 = *MEMORY[0x1E0DC1B88];
  v31 = sub_1BB8717B8();
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v32 + 104))(v4, v30, v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v4, 0, 1, v31);
  return sub_1BB873318();
}

void sub_1BAFC7C50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B86B0)
  {
    sub_1BB8717B8();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B86B0);
  }
}

uint64_t sub_1BAFC7CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t refreshed;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v20[40];

  sub_1BAFC7F80();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  refreshed = type metadata accessor for FormatRefreshBlueprintModifier();
  MEMORY[0x1E0C80A78](refreshed);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v20[-v15 - 8];
  sub_1BA4C010C(v2 + 16, (uint64_t)v20);
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BAFC7F80);
  sub_1BB7666BC((uint64_t)v20, (uint64_t)v10, (uint64_t)v7, v16);
  sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatRefreshBlueprintModifier);
  sub_1BAFC7FD4();
  swift_allocObject();
  sub_1BA4A2870(&qword_1ED3AC3E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatRefreshBlueprintModifier, (uint64_t)&unk_1BB949310);
  v17 = sub_1BB86FE8C();
  sub_1BAFC809C((uint64_t)v16);
  return v17;
}

uint64_t type metadata accessor for FormatBlueprintModifierFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BAFC7E7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[64];
  _QWORD v9[8];

  v3 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4C010C(*v1 + 16, (uint64_t)v8);
  sub_1BA4C2DD8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA8663DC((uint64_t)v8, (uint64_t)v5, v9);
  sub_1BAFC80D8((uint64_t)v9, (uint64_t)v8);
  sub_1BAFC7FD4();
  swift_allocObject();
  sub_1BAFC8114();
  v6 = sub_1BB86FE8C();
  sub_1BAFC8158((uint64_t)v9);
  return v6;
}

uint64_t sub_1BAFC7F60(uint64_t a1, uint64_t a2)
{
  return sub_1BAFC7CA4(a1, a2);
}

void sub_1BAFC7F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E60)
  {
    sub_1BB8700B4();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E60);
  }
}

void sub_1BAFC7FD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3DC0)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1BA4A2870(&qword_1ED3A7240, (uint64_t (*)(uint64_t))type metadata accessor for FormatSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatSectionDescriptor);
    sub_1BA4A2870((unint64_t *)&qword_1ED3A53E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel, (uint64_t)&protocol conformance descriptor for FormatModel);
    v0 = sub_1BB86FE98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3DC0);
  }
}

uint64_t sub_1BAFC809C(uint64_t a1)
{
  uint64_t refreshed;

  refreshed = type metadata accessor for FormatRefreshBlueprintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(refreshed - 8) + 8))(a1, refreshed);
  return a1;
}

uint64_t sub_1BAFC80D8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FormatPrewarmBlueprintModifier(a2, a1);
  return a2;
}

unint64_t sub_1BAFC8114()
{
  unint64_t result;

  result = qword_1ED3A8D80;
  if (!qword_1ED3A8D80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87DD88, &type metadata for FormatPrewarmBlueprintModifier);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D80);
  }
  return result;
}

uint64_t sub_1BAFC8158(uint64_t a1)
{
  destroy for FormatPrewarmBlueprintModifier(a1);
  return a1;
}

uint64_t sub_1BAFC818C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFC81B8 + 4 * byte_1BB8DDFF0[a1]))(1684828002, 0xE400000000000000);
}

uint64_t sub_1BAFC81B8()
{
  return 0x63696C617469;
}

uint64_t sub_1BAFC81CC()
{
  return 0x6E696C7265646E75;
}

uint64_t sub_1BAFC81E8()
{
  return 0x6874656B69727473;
}

uint64_t sub_1BAFC820C()
{
  return 0x7069726373627573;
}

uint64_t sub_1BAFC822C()
{
  return 0x7263737265707573;
}

uint64_t sub_1BAFC824C()
{
  return 1701080931;
}

uint64_t sub_1BAFC8258()
{
  return 1802398060;
}

uint64_t sub_1BAFC8264()
{
  return 0x31676E6964616568;
}

uint64_t sub_1BAFC827C()
{
  return 0x32676E6964616568;
}

uint64_t sub_1BAFC8294()
{
  return 0x33676E6964616568;
}

uint64_t sub_1BAFC82AC()
{
  return 0x34676E6964616568;
}

uint64_t sub_1BAFC82C4()
{
  return 0x35676E6964616568;
}

uint64_t sub_1BAFC82DC()
{
  return 0x36676E6964616568;
}

uint64_t sub_1BAFC82F4()
{
  return 0x7061726761726170;
}

uint64_t sub_1BAFC8314()
{
  return 1851879539;
}

uint64_t sub_1BAFC8320()
{
  return 6648432;
}

uint64_t sub_1BAFC8330()
{
  return 0x6567616D69;
}

uint64_t sub_1BAFC8344(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  result = sub_1BB86C370();
  if (a2 - 6 >= 0xC)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_1BAFC85CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFC85F8 + 4 * byte_1BB8DE008[a1]))(1684828002, 0xE400000000000000);
}

uint64_t sub_1BAFC85F8()
{
  return 0x63696C617469;
}

uint64_t sub_1BAFC860C()
{
  return 0x6E696C7265646E75;
}

uint64_t sub_1BAFC8628()
{
  return 0x6874656B69727473;
}

uint64_t sub_1BAFC864C()
{
  return 0x7069726373627573;
}

uint64_t sub_1BAFC866C()
{
  return 0x7263737265707573;
}

uint64_t sub_1BAFC868C()
{
  return 1701080931;
}

uint64_t sub_1BAFC8698()
{
  return 1802398060;
}

uint64_t sub_1BAFC86A4()
{
  return 0x31676E6964616568;
}

uint64_t sub_1BAFC86BC()
{
  return 0x32676E6964616568;
}

uint64_t sub_1BAFC86D4()
{
  return 0x33676E6964616568;
}

uint64_t sub_1BAFC86EC()
{
  return 0x34676E6964616568;
}

uint64_t sub_1BAFC8704()
{
  return 0x35676E6964616568;
}

uint64_t sub_1BAFC871C()
{
  return 0x36676E6964616568;
}

uint64_t sub_1BAFC8734()
{
  return 0x7061726761726170;
}

uint64_t sub_1BAFC8754()
{
  return 1851879539;
}

uint64_t sub_1BAFC8760()
{
  return 6648432;
}

uint64_t sub_1BAFC8770()
{
  return 0x6567616D69;
}

uint64_t sub_1BAFC8784@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAFC9464();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFC87B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAFC85CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAFC87D8()
{
  sub_1BAFC94B4();
  return sub_1BB872D60();
}

uint64_t sub_1BAFC8834()
{
  sub_1BAFC94B4();
  return sub_1BB872D0C();
}

void sub_1BAFC8880(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253610;
}

uint64_t sub_1BAFC8890()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAFC85CC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFC88F0()
{
  unsigned __int8 *v0;

  sub_1BAFC85CC(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFC8930()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAFC85CC(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFC898C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BAFC85CC(*a1);
  v5 = v4;
  if (v3 == sub_1BAFC85CC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BAFC8A14()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v6;
  char v7;

  v0 = sub_1BB872A0C();
  v2 = v0 == 98 && v1 == 0xE100000000000000;
  if (v2
    || (v3 = v0, v4 = v1, (sub_1BB874398() & 1) != 0)
    || (v3 == 0x676E6F727473 ? (v6 = v4 == 0xE600000000000000) : (v6 = 0), v6 || (sub_1BB874398() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  else if (v3 == 28005 && v4 == 0xE200000000000000
         || (sub_1BB874398() & 1) != 0
         || v3 == 105 && v4 == 0xE100000000000000
         || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
  else if (v3 == 112 && v4 == 0xE100000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 14;
  }
  else if (v3 == 7103844 && v4 == 0xE300000000000000
         || (sub_1BB874398() & 1) != 0
         || v3 == 115 && v4 == 0xE100000000000000
         || (sub_1BB874398() & 1) != 0
         || v3 == 0x656B69727473 && v4 == 0xE600000000000000
         || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 3;
  }
  else if (v3 == 117 && v4 == 0xE100000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 2;
  }
  else if (v3 == 97 && v4 == 0xE100000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 7;
  }
  else if (v3 == 6452595 && v4 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 4;
  }
  else if (v3 == 7370099 && v4 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 5;
  }
  else if (v3 == 12648 && v4 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 8;
  }
  else if (v3 == 12904 && v4 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 9;
  }
  else if (v3 == 13160 && v4 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 10;
  }
  else if (v3 == 13416 && v4 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 11;
  }
  else if (v3 == 13672 && v4 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 12;
  }
  else if (v3 == 13928 && v4 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 13;
  }
  else if (v3 == 1701080931 && v4 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 6;
  }
  else if (v3 == 1851879539 && v4 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 15;
  }
  else if (v3 == 6648432 && v4 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 16;
  }
  else if (v3 == 6778217 && v4 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 17;
  }
  else
  {
    v7 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_release();
    if ((v7 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

uint64_t sub_1BAFC9170()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v6;
  char v7;

  v0 = sub_1BB872A0C();
  v2 = v0 == 1819112552 && v1 == 0xE400000000000000;
  if (v2 || (v3 = v0, v4 = v1, (sub_1BB874398() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  else
  {
    v6 = v3 == 2036625250 && v4 == 0xE400000000000000;
    if (v6 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
    else if (v3 == 29282 && v4 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 2;
    }
    else
    {
      v7 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t storeEnumTagSinglePayload for FormatAttributedStringAnnotation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFC931C + 4 * byte_1BB8DE01F[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1BAFC9350 + 4 * byte_1BB8DE01A[v4]))();
}

uint64_t sub_1BAFC9350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFC9358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFC9360);
  return result;
}

uint64_t sub_1BAFC936C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFC9374);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1BAFC9378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFC9380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatAttributedStringAnnotation()
{
  return &type metadata for FormatAttributedStringAnnotation;
}

unint64_t sub_1BAFC93A0()
{
  unint64_t result;

  result = qword_1ED3A2D88;
  if (!qword_1ED3A2D88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE114, &type metadata for FormatAttributedStringAnnotation);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D88);
  }
  return result;
}

uint64_t sub_1BAFC93E4()
{
  return sub_1BA4A2870(&qword_1EF2B86F8, (uint64_t (*)(uint64_t))sub_1BAFC9410, MEMORY[0x1E0DEAF50]);
}

void sub_1BAFC9410()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8700)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8700);
  }
}

uint64_t sub_1BAFC9464()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

unint64_t sub_1BAFC94B4()
{
  unint64_t result;

  result = qword_1ED3A2D90;
  if (!qword_1ED3A2D90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE204, &type metadata for FormatAttributedStringAnnotation);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D90);
  }
  return result;
}

uint64_t FeedIssueScoringContext.configurationSet.getter()
{
  char *v0;

  return qword_1BB8DECA8[*v0];
}

id FeedIssueScoringContext.scoringConfiguration(treatment:)(void *a1)
{
  return sub_1BAFC972C(a1, (SEL *)&selRef_defaultScoringConfig, (SEL *)&selRef_curatedIssuesScoringConfig, (SEL *)&selRef_magazineFeedIssueScoringConfig);
}

id FeedIssueScoringContext.topicsConfiguration(treatment:)(void *a1)
{
  return sub_1BAFC972C(a1, (SEL *)&selRef_defaultTopicsConfig, (SEL *)&selRef_curatedIssuesTopicsConfig, (SEL *)&selRef_magazineFeedIssueTopicsConfig);
}

id FeedIssueScoringContext.ontologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1BAFC972C(a1, (SEL *)&selRef_defaultOntologyLevelConfig, (SEL *)&selRef_curatedIssuesOntologyLevelConfig, (SEL *)&selRef_magazineFeedIssueOntologyLevelConfig);
}

id sub_1BAFC972C(id result, SEL *a2, SEL *a3, SEL *a4)
{
  _BYTE *v4;

  if (*v4)
  {
    if (*v4 != 1)
      goto LABEL_7;
    result = objc_msgSend(result, *a3);
    if (result)
      return result;
    __break(1u);
  }
  result = objc_msgSend(result, *a2);
  if (result)
    return result;
  __break(1u);
LABEL_7:
  result = objc_msgSend(result, *a4);
  if (!result)
    __break(1u);
  return result;
}

void FeedScoringContext.shadowScoringConfiguration(treatment:)()
{
  sub_1BAFCA4CC();
}

void FeedHeadlineScoringContext.shadowScoringConfiguration(treatment:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFC97E0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_shadowDefaultScoringConfig);
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x1BAFC9800);
  }
  v2 = sub_1BB87276C();

  return v2;
}

id FeedIssueScoringContext.shadowScoringConfiguration(treatment:)(void *a1)
{
  return sub_1BAFCAB8C(a1, (SEL *)&selRef_shadowDefaultScoringConfig, (SEL *)&selRef_shadowCuratedIssuesScoringConfig, (SEL *)&selRef_shadowMagazineFeedIssueScoringConfig);
}

void FeedScoringContext.shadowTopicsConfiguration(treatment:)()
{
  __asm { BR              X11 }
}

void sub_1BAFC9D9C()
{
  FeedHeadlineScoringContext.shadowTopicsConfiguration(treatment:)();
}

void FeedHeadlineScoringContext.shadowTopicsConfiguration(treatment:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFC9EA0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_shadowDefaultTopicsConfig);
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x1BAFC9EC0);
  }
  v2 = sub_1BB872DB4();

  return v2;
}

id FeedIssueScoringContext.shadowTopicsConfiguration(treatment:)(id a1)
{
  _BYTE *v1;
  void *v2;
  id result;
  uint64_t v4;

  if (*v1)
  {
    if (*v1 != 1)
      goto LABEL_7;
    a1 = objc_msgSend(a1, sel_shadowCuratedIssuesTopicsConfig);
    v2 = a1;
    if (a1)
    {
LABEL_8:
      v4 = sub_1BB872DB4();

      return (id)v4;
    }
    __break(1u);
  }
  a1 = objc_msgSend(a1, sel_shadowDefaultTopicsConfig);
  v2 = a1;
  if (a1)
    goto LABEL_8;
  __break(1u);
LABEL_7:
  result = objc_msgSend(a1, sel_shadowMagazineFeedIssueTopicsConfig);
  v2 = result;
  if (result)
    goto LABEL_8;
  __break(1u);
  return result;
}

void FeedScoringContext.shadowOntologyLevelConfiguration(treatment:)()
{
  sub_1BAFCA4CC();
}

void sub_1BAFCA4CC()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAFCA4FC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void FeedHeadlineScoringContext.shadowOntologyLevelConfiguration(treatment:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFCA600(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_shadowDefaultOntologyLevelConfig);
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x1BAFCA620);
  }
  v2 = sub_1BB87276C();

  return v2;
}

id FeedIssueScoringContext.shadowOntologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1BAFCAB8C(a1, (SEL *)&selRef_shadowDefaultOntologyLevelConfig, (SEL *)&selRef_shadowCuratedIssuesOntologyLevelConfig, (SEL *)&selRef_shadowMagazineFeedIssueOntologyLevelConfig);
}

id sub_1BAFCAB8C(id a1, SEL *a2, SEL *a3, SEL *a4)
{
  _BYTE *v4;
  void *v5;
  id result;
  uint64_t v7;

  if (*v4)
  {
    if (*v4 != 1)
      goto LABEL_7;
    a1 = objc_msgSend(a1, *a3);
    v5 = a1;
    if (a1)
    {
LABEL_8:
      v7 = sub_1BB87276C();

      return (id)v7;
    }
    __break(1u);
  }
  a1 = objc_msgSend(a1, *a2);
  v5 = a1;
  if (a1)
    goto LABEL_8;
  __break(1u);
LABEL_7:
  result = objc_msgSend(a1, *a4);
  v5 = result;
  if (result)
    goto LABEL_8;
  __break(1u);
  return result;
}

uint64_t FeedIssueScoringContext.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657461727543;
  if (*v0 != 1)
    v1 = 0x656E697A6167614DLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E55;
}

uint64_t FeedScoringContext.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BA4CDF6C(0, &qword_1EF2B8708, (uint64_t (*)(void))sub_1BAFCCA08, (uint64_t)&type metadata for FeedScoringContext.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFCCA08();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BAFCCA4C();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAFCAE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  *v3 = -16384;
  JUMPOUT(0x1BAFCADC0);
}

void sub_1BAFCAE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _WORD *v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 81) = 1;
  sub_1BAFCCB18();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
    *v4 = *(unsigned __int8 *)(v5 - 72);
    JUMPOUT(0x1BAFCADC0);
  }
  JUMPOUT(0x1BAFCADB0);
}

void sub_1BAFCAE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _WORD *v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 71) = 1;
  sub_1BAFCCAD4();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
    *v4 = *(unsigned __int8 *)(v5 - 70) | 0x4000;
    JUMPOUT(0x1BAFCADC0);
  }
  JUMPOUT(0x1BAFCADB0);
}

void sub_1BAFCAED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _WORD *v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 69) = 1;
  sub_1BAFCCA90();
  sub_1BB8740D4();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
    *v4 = *(_WORD *)(v5 - 68) | 0x8000;
    JUMPOUT(0x1BAFCADC0);
  }
  JUMPOUT(0x1BAFCADB0);
}

void FeedScoringContext.encode(to:)(_QWORD *a1)
{
  unsigned __int16 *v1;
  uint64_t v3;
  int v4;

  sub_1BA4CDF6C(0, &qword_1EF2B8738, (uint64_t (*)(void))sub_1BAFCCA08, (uint64_t)&type metadata for FeedScoringContext.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  v4 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFCCA08();
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BAFCB00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 82) = 1;
  *(_BYTE *)(v4 - 83) = 0;
  sub_1BAFCCB5C();
  sub_1BB8741AC();
  if (!v2)
  {
    *(_BYTE *)(v4 - 84) = v3;
    *(_BYTE *)(v4 - 85) = 1;
    sub_1BAFCCC28();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t sub_1BAFCB1A4(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1BA4CDF6C(0, &qword_1EF2B87C8, (uint64_t (*)(void))sub_1BAFCD5FC, (uint64_t)&type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFCD5FC();
  sub_1BB8746C8();
  v16 = v8;
  v15 = 0;
  sub_1BAFCCC28();
  v9 = v11[1];
  sub_1BB8741AC();
  if (!v9)
  {
    v14 = v12;
    v13 = 1;
    sub_1BAFCCBE4();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BAFCB30C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  char v10;
  char v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v14 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B87B8, (uint64_t (*)(void))sub_1BAFCD5FC, (uint64_t)&type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFCD5FC();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v14;
    v17 = 0;
    sub_1BAFCCB18();
    sub_1BB8740D4();
    v10 = v18;
    v15 = 1;
    sub_1BAFCCAD4();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v16;
    *v9 = v10;
    v9[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAFCB4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA86B664(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFCB4D0()
{
  sub_1BAFCCA08();
  return sub_1BB874710();
}

uint64_t sub_1BAFCB4F8()
{
  sub_1BAFCCA08();
  return sub_1BB87471C();
}

void sub_1BAFCB520(char *a1)
{
  sub_1BB8064A8(*a1);
}

void sub_1BAFCB52C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAFCB578()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAFCB5DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFCB618()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAFCB668()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAFCB6B0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFCB714@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAFCD570();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFCB740()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAFCB770 + 4 * byte_1BB8DE281[*v0]))();
}

void sub_1BAFCB770(_QWORD *a1@<X8>)
{
  *a1 = 0x656E696C64616568;
  a1[1] = 0xE800000000000000;
}

void sub_1BAFCB78C(_QWORD *a1@<X8>)
{
  *a1 = 0x6575737369;
  a1[1] = 0xE500000000000000;
}

void sub_1BAFCB7A4(_QWORD *a1@<X8>)
{
  *a1 = 1835365481;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BAFCB7B8()
{
  sub_1BAFCD5B8();
  return sub_1BB872D60();
}

uint64_t sub_1BAFCB814()
{
  sub_1BAFCD5B8();
  return sub_1BB872D0C();
}

uint64_t sub_1BAFCB860()
{
  _BYTE *v0;

  if (*v0)
    return 0x6575737369;
  else
    return 0x656E696C64616568;
}

uint64_t sub_1BAFCB898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFCD86C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFCB8BC()
{
  sub_1BAFCD5FC();
  return sub_1BB874710();
}

uint64_t sub_1BAFCB8E4()
{
  sub_1BAFCD5FC();
  return sub_1BB87471C();
}

uint64_t sub_1BAFCB90C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BAFCB30C(a1, a2);
}

uint64_t sub_1BAFCB920(_QWORD *a1)
{
  return sub_1BAFCB1A4(a1);
}

uint64_t sub_1BAFCB934(_QWORD *a1)
{
  return FeedScoringContext.init(from:)(a1);
}

void sub_1BAFCB948(_QWORD *a1)
{
  FeedScoringContext.encode(to:)(a1);
}

uint64_t FeedItemScoringContext.configurationSet.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 0;
}

id FeedItemScoringContext.scoringConfiguration(treatment:)(void *a1)
{
  return sub_1BAFCB9AC(a1, (SEL *)&selRef_defaultScoringConfig, (SEL *)&selRef_magazineFeedArticleScoringConfig);
}

id FeedItemScoringContext.topicsConfiguration(treatment:)(void *a1)
{
  return sub_1BAFCB9AC(a1, (SEL *)&selRef_defaultTopicsConfig, (SEL *)&selRef_magazineFeedArticleTopicsConfig);
}

id FeedItemScoringContext.ontologyLevelConfiguration(treatment:)(void *a1)
{
  return sub_1BAFCB9AC(a1, (SEL *)&selRef_defaultOntologyLevelConfig, (SEL *)&selRef_magazineFeedArticleOntologyLevelConfig);
}

id sub_1BAFCB9AC(id result, SEL *a2, SEL *a3)
{
  _BYTE *v3;

  if ((*v3 & 1) != 0)
  {
    result = objc_msgSend(result, *a3);
    if (result)
      return result;
    __break(1u);
  }
  result = objc_msgSend(result, *a2);
  if (!result)
    __break(1u);
  return result;
}

uint64_t FeedItemScoringContext.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E697A6167614DLL;
  else
    return 0x6E776F6E6B6E55;
}

BOOL static FeedItemScoringContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedItemScoringContext.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedItemScoringContext.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BAFCBAC0()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E697A6167614DLL;
  else
    return 0x6E776F6E6B6E55;
}

NewsFeed::FeedHeadlineScoringContext_optional __swiftcall FeedHeadlineScoringContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FeedHeadlineScoringContext_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BB87450C();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 19;
  switch(v3)
  {
    case 0:
      goto LABEL_21;
    case 1:
      v5 = 1;
      goto LABEL_21;
    case 2:
      v5 = 2;
      goto LABEL_21;
    case 3:
      v5 = 3;
      goto LABEL_21;
    case 4:
      v5 = 4;
      goto LABEL_21;
    case 5:
      v5 = 5;
      goto LABEL_21;
    case 6:
      v5 = 6;
      goto LABEL_21;
    case 7:
      v5 = 7;
      goto LABEL_21;
    case 8:
      v5 = 8;
      goto LABEL_21;
    case 9:
      v5 = 9;
      goto LABEL_21;
    case 10:
      v5 = 10;
      goto LABEL_21;
    case 11:
      v5 = 11;
      goto LABEL_21;
    case 12:
      v5 = 12;
      goto LABEL_21;
    case 13:
      v5 = 13;
      goto LABEL_21;
    case 14:
      v5 = 14;
      goto LABEL_21;
    case 15:
      v5 = 15;
      goto LABEL_21;
    case 16:
      v5 = 16;
      goto LABEL_21;
    case 17:
      v5 = 17;
      goto LABEL_21;
    case 18:
      v5 = 18;
LABEL_21:
      v6 = v5;
      break;
    case 19:
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    default:
      v6 = 37;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t FeedHeadlineScoringContext.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFCBCD4 + 4 * byte_1BB8DE2AA[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1BAFCBCD4()
{
  return 0x754179636167656CLL;
}

uint64_t sub_1BAFCBCF8()
{
  return 0x6565466F69647561;
}

uint64_t sub_1BAFCBE64()
{
  return 0x7374726F7053796DLL;
}

unint64_t sub_1BAFCBE78()
{
  return 0xD000000000000013;
}

uint64_t sub_1BAFCBE90()
{
  return 0x7374726F7053796DLL;
}

unint64_t sub_1BAFCBEB4()
{
  return 0xD000000000000010;
}

uint64_t sub_1BAFCC010()
{
  return 0x5265746144676174;
}

void sub_1BAFCC030()
{
  JUMPOUT(0x1BAFCC048);
}

uint64_t sub_1BAFCC078()
{
  return 0x6469577961646F74;
}

uint64_t sub_1BAFCC098()
{
  return 0x6567646957676174;
}

uint64_t sub_1BAFCC0B8()
{
  sub_1BB8745CC();
  FeedHeadlineScoringContext.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFCC11C()
{
  FeedHeadlineScoringContext.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFCC16C()
{
  sub_1BB8745CC();
  FeedHeadlineScoringContext.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedHeadlineScoringContext_optional sub_1BAFCC1CC(Swift::String *a1)
{
  return FeedHeadlineScoringContext.init(rawValue:)(*a1);
}

uint64_t sub_1BAFCC1D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FeedHeadlineScoringContext.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAFCC1FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB80522C(*a1, *a2);
}

uint64_t sub_1BAFCC208()
{
  sub_1BAFCD684();
  return sub_1BB872D60();
}

uint64_t sub_1BAFCC264()
{
  sub_1BAFCD684();
  return sub_1BB872D0C();
}

NewsFeed::FeedIssueScoringContext_optional __swiftcall FeedIssueScoringContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedIssueScoringContext_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedIssueScoringContext.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657461727563;
  if (*v0 != 1)
    v1 = 0x656E697A6167616DLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1BAFCC370()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFCC418()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFCC49C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedIssueScoringContext_optional sub_1BAFCC540(Swift::String *a1)
{
  return FeedIssueScoringContext.init(rawValue:)(*a1);
}

void sub_1BAFCC54C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x64657461727563;
  if (v2 != 1)
  {
    v5 = 0x656E697A6167616DLL;
    v4 = 0xEC00000064656546;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAFCC5B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB805938(*a1, *a2);
}

uint64_t sub_1BAFCC5C0()
{
  sub_1BAFCD640();
  return sub_1BB872D60();
}

uint64_t sub_1BAFCC61C()
{
  sub_1BAFCD640();
  return sub_1BB872D0C();
}

uint64_t sub_1BAFCC668()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657461727543;
  if (*v0 != 1)
    v1 = 0x656E697A6167614DLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E55;
}

void _s8NewsFeed0B14ScoringContextO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFCC70C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (v0 >= 0x4000)
  {
    v5 = 0;
  }
  else
  {
    v1 = FeedHeadlineScoringContext.rawValue.getter();
    v3 = v2;
    if (v1 == FeedHeadlineScoringContext.rawValue.getter() && v3 == v4)
      v5 = 1;
    else
      v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

unint64_t sub_1BAFCCA08()
{
  unint64_t result;

  result = qword_1EF2B8710;
  if (!qword_1EF2B8710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEA24, &type metadata for FeedScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8710);
  }
  return result;
}

unint64_t sub_1BAFCCA4C()
{
  unint64_t result;

  result = qword_1EF2B8718;
  if (!qword_1EF2B8718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE9FC, &type metadata for FeedScoringContext.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B8718);
  }
  return result;
}

unint64_t sub_1BAFCCA90()
{
  unint64_t result;

  result = qword_1EF2B8720;
  if (!qword_1EF2B8720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE9D4, &type metadata for FeedScoringContext.FeedItemScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8720);
  }
  return result;
}

unint64_t sub_1BAFCCAD4()
{
  unint64_t result;

  result = qword_1EF2B8728;
  if (!qword_1EF2B8728)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssueScoringContext, &type metadata for FeedIssueScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8728);
  }
  return result;
}

unint64_t sub_1BAFCCB18()
{
  unint64_t result;

  result = qword_1EF2B8730;
  if (!qword_1EF2B8730)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedHeadlineScoringContext, &type metadata for FeedHeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8730);
  }
  return result;
}

unint64_t sub_1BAFCCB5C()
{
  unint64_t result;

  result = qword_1EF2B8740;
  if (!qword_1EF2B8740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE9AC, &type metadata for FeedScoringContext.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B8740);
  }
  return result;
}

unint64_t sub_1BAFCCBA0()
{
  unint64_t result;

  result = qword_1EF2B8748;
  if (!qword_1EF2B8748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE984, &type metadata for FeedScoringContext.FeedItemScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8748);
  }
  return result;
}

unint64_t sub_1BAFCCBE4()
{
  unint64_t result;

  result = qword_1EF2B8750;
  if (!qword_1EF2B8750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssueScoringContext, &type metadata for FeedIssueScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8750);
  }
  return result;
}

unint64_t sub_1BAFCCC28()
{
  unint64_t result;

  result = qword_1EF2B8758;
  if (!qword_1EF2B8758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedHeadlineScoringContext, &type metadata for FeedHeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8758);
  }
  return result;
}

unint64_t sub_1BAFCCC70()
{
  unint64_t result;

  result = qword_1EF2B8760;
  if (!qword_1EF2B8760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItemScoringContext, &type metadata for FeedItemScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8760);
  }
  return result;
}

unint64_t sub_1BAFCCCB4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFCCCD8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFCCCD8()
{
  unint64_t result;

  result = qword_1EF2B8768;
  if (!qword_1EF2B8768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItemScoringContext, &type metadata for FeedItemScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8768);
  }
  return result;
}

unint64_t sub_1BAFCCD20()
{
  unint64_t result;

  result = qword_1EF2B8770;
  if (!qword_1EF2B8770)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedHeadlineScoringContext, &type metadata for FeedHeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8770);
  }
  return result;
}

unint64_t sub_1BAFCCD64(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFCCD88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFCCD88()
{
  unint64_t result;

  result = qword_1EF2B8778;
  if (!qword_1EF2B8778)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedHeadlineScoringContext, &type metadata for FeedHeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8778);
  }
  return result;
}

unint64_t sub_1BAFCCDD0()
{
  unint64_t result;

  result = qword_1EF2B8780;
  if (!qword_1EF2B8780)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssueScoringContext, &type metadata for FeedIssueScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8780);
  }
  return result;
}

unint64_t sub_1BAFCCE14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFCCE38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFCCE38()
{
  unint64_t result;

  result = qword_1EF2B8788;
  if (!qword_1EF2B8788)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssueScoringContext, &type metadata for FeedIssueScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B8788);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedScoringContext(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 65283 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65283 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65283;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65283;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65283;
  }
LABEL_17:
  v6 = ((*a1 >> 14) | (4 * (HIBYTE(*a1) & 0x3C | (*a1 >> 6)))) ^ 0xFF;
  if (v6 >= 0xFC)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for FeedScoringContext(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCCF74 + 4 * byte_1BB8DE2D8[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_1BAFCCFA8 + 4 * byte_1BB8DE2D3[v4]))();
}

uint64_t sub_1BAFCCFA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAFCCFB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BAFCCFB8);
  return result;
}

uint64_t sub_1BAFCCFD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCCFE0);
  *(_WORD *)result = (((-(__int16)a2 & 0xF0) << 6) - ((_WORD)a2 << 14)) & 0xFF3F | (((-a2 >> 2) & 3) << 6);
  return result;
}

uint64_t sub_1BAFCCFE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAFCCFEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemScoringContext()
{
  return &type metadata for FeedItemScoringContext;
}

uint64_t getEnumTagSinglePayload for FeedHeadlineScoringContext(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDC)
    goto LABEL_17;
  if (a2 + 36 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 36) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 36;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 36;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 36;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x25;
  v8 = v6 - 37;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedHeadlineScoringContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 36 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 36) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDB)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCD0E8 + 4 * byte_1BB8DE2E2[v4]))();
  *a1 = a2 + 36;
  return ((uint64_t (*)(void))((char *)sub_1BAFCD11C + 4 * byte_1BB8DE2DD[v4]))();
}

uint64_t sub_1BAFCD11C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD124(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFCD12CLL);
  return result;
}

uint64_t sub_1BAFCD138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCD140);
  *(_BYTE *)result = a2 + 36;
  return result;
}

uint64_t sub_1BAFCD144(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD14C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedIssueScoringContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCD1A4 + 4 * byte_1BB8DE2EC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAFCD1D8 + 4 * byte_1BB8DE2E7[v4]))();
}

uint64_t sub_1BAFCD1D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD1E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFCD1E8);
  return result;
}

uint64_t sub_1BAFCD1F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCD1FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAFCD200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedScoringContext.FeedItemScoringContext(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedScoringContext.FeedItemScoringContext(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCD2F4 + 4 * byte_1BB8DE2F6[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1BAFCD328 + 4 * byte_1BB8DE2F1[v4]))();
}

uint64_t sub_1BAFCD328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAFCD330(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BAFCD338);
  return result;
}

uint64_t sub_1BAFCD344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCD34CLL);
  *(_BYTE *)(result + 1) = a2 + 2;
  return result;
}

uint64_t sub_1BAFCD350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAFCD358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedScoringContext.FeedItemScoringContext()
{
  return &type metadata for FeedScoringContext.FeedItemScoringContext;
}

uint64_t storeEnumTagSinglePayload for FeedScoringContext.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCD3C0 + 4 * byte_1BB8DE300[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAFCD3F4 + 4 * byte_1BB8DE2FB[v4]))();
}

uint64_t sub_1BAFCD3F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD3FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFCD404);
  return result;
}

uint64_t sub_1BAFCD410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCD418);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAFCD41C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedScoringContext.CodingType()
{
  return &type metadata for FeedScoringContext.CodingType;
}

ValueMetadata *type metadata accessor for FeedScoringContext.CodingKeys()
{
  return &type metadata for FeedScoringContext.CodingKeys;
}

unint64_t sub_1BAFCD454()
{
  unint64_t result;

  result = qword_1EF2B8790;
  if (!qword_1EF2B8790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE8BC, &type metadata for FeedScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8790);
  }
  return result;
}

unint64_t sub_1BAFCD49C()
{
  unint64_t result;

  result = qword_1EF2B8798;
  if (!qword_1EF2B8798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE95C, &type metadata for FeedScoringContext.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B8798);
  }
  return result;
}

unint64_t sub_1BAFCD4E4()
{
  unint64_t result;

  result = qword_1EF2B87A0;
  if (!qword_1EF2B87A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE82C, &type metadata for FeedScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B87A0);
  }
  return result;
}

unint64_t sub_1BAFCD52C()
{
  unint64_t result;

  result = qword_1EF2B87A8;
  if (!qword_1EF2B87A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE854, &type metadata for FeedScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B87A8);
  }
  return result;
}

uint64_t sub_1BAFCD570()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1BAFCD5B8()
{
  unint64_t result;

  result = qword_1EF2B87B0;
  if (!qword_1EF2B87B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DE8E4, &type metadata for FeedScoringContext.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B87B0);
  }
  return result;
}

unint64_t sub_1BAFCD5FC()
{
  unint64_t result;

  result = qword_1EF2B87C0;
  if (!qword_1EF2B87C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEB2C, &type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B87C0);
  }
  return result;
}

unint64_t sub_1BAFCD640()
{
  unint64_t result;

  result = qword_1EF2B87D0;
  if (!qword_1EF2B87D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedIssueScoringContext, &type metadata for FeedIssueScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B87D0);
  }
  return result;
}

unint64_t sub_1BAFCD684()
{
  unint64_t result;

  result = qword_1EF2B87D8;
  if (!qword_1EF2B87D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedHeadlineScoringContext, &type metadata for FeedHeadlineScoringContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B87D8);
  }
  return result;
}

uint64_t _s8NewsFeed22FeedItemScoringContextOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCD714 + 4 * byte_1BB8DE30A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFCD748 + 4 * byte_1BB8DE305[v4]))();
}

uint64_t sub_1BAFCD748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFCD758);
  return result;
}

uint64_t sub_1BAFCD764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCD76CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFCD770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCD778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedScoringContext.FeedItemScoringContext.CodingKeys()
{
  return &type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys;
}

unint64_t sub_1BAFCD798()
{
  unint64_t result;

  result = qword_1EF2B87E0;
  if (!qword_1EF2B87E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEB04, &type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B87E0);
  }
  return result;
}

unint64_t sub_1BAFCD7E0()
{
  unint64_t result;

  result = qword_1EF2B87E8;
  if (!qword_1EF2B87E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEA74, &type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B87E8);
  }
  return result;
}

unint64_t sub_1BAFCD828()
{
  unint64_t result;

  result = qword_1EF2B87F0;
  if (!qword_1EF2B87F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEA9C, &type metadata for FeedScoringContext.FeedItemScoringContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B87F0);
  }
  return result;
}

uint64_t sub_1BAFCD86C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656E696C64616568 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6575737369 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FormatSupplementaryNodePinEdge.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E696C69617274;
  else
    return 0x676E696461656CLL;
}

NewsFeed::FormatSupplementaryNodePinEdge_optional __swiftcall FormatSupplementaryNodePinEdge.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatSupplementaryNodePinEdge_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BAFCD9F0(char *a1, char *a2)
{
  return sub_1BB7EFEB0(*a1, *a2);
}

unint64_t sub_1BAFCDA00()
{
  unint64_t result;

  result = qword_1ED3ADC68;
  if (!qword_1ED3ADC68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinEdge, &type metadata for FormatSupplementaryNodePinEdge);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC68);
  }
  return result;
}

uint64_t sub_1BAFCDA44()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFCDAC4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFCDB20()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatSupplementaryNodePinEdge_optional sub_1BAFCDB9C(Swift::String *a1)
{
  return FormatSupplementaryNodePinEdge.init(rawValue:)(*a1);
}

void sub_1BAFCDBA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x676E696461656CLL;
  if (*v1)
    v2 = 0x676E696C69617274;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BAFCDBE8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAFCDC14();
  result = sub_1BAFCDC58();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAFCDC14()
{
  unint64_t result;

  result = qword_1EF2B87F8;
  if (!qword_1EF2B87F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinEdge, &type metadata for FormatSupplementaryNodePinEdge);
    atomic_store(result, (unint64_t *)&qword_1EF2B87F8);
  }
  return result;
}

unint64_t sub_1BAFCDC58()
{
  unint64_t result;

  result = qword_1ED3ADC70;
  if (!qword_1ED3ADC70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinEdge, &type metadata for FormatSupplementaryNodePinEdge);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC70);
  }
  return result;
}

unint64_t sub_1BAFCDC9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE787A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFCDCC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAFCDCF4();
  a1[2] = sub_1BAFCDD38();
  result = sub_1BAFCDA00();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFCDCF4()
{
  unint64_t result;

  result = qword_1ED3ADC78;
  if (!qword_1ED3ADC78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinEdge, &type metadata for FormatSupplementaryNodePinEdge);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC78);
  }
  return result;
}

unint64_t sub_1BAFCDD38()
{
  unint64_t result;

  result = qword_1ED3ADC60;
  if (!qword_1ED3ADC60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinEdge, &type metadata for FormatSupplementaryNodePinEdge);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC60);
  }
  return result;
}

uint64_t sub_1BAFCDD7C()
{
  sub_1BAFCDC58();
  return sub_1BB872D60();
}

uint64_t sub_1BAFCDDD8(_QWORD *a1)
{
  return FormatSupplementaryNodePinEdge.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatSupplementaryNodePinEdge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCDE38 + 4 * byte_1BB8DECC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFCDE6C + 4 * byte_1BB8DECC0[v4]))();
}

uint64_t sub_1BAFCDE6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCDE74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFCDE7CLL);
  return result;
}

uint64_t sub_1BAFCDE88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCDE90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFCDE94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCDE9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinEdge()
{
  return &type metadata for FormatSupplementaryNodePinEdge;
}

uint64_t PaidBundleConfigManager.__allocating_init(configurationManager:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t PaidBundleConfigManager.init(configurationManager:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t PaidBundleConfigManager.currentConfiguration.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t result;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    return (uint64_t)v2;
  }
  else
  {
    result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t PaidBundleConfigManager.fetchConfiguration()()
{
  void *v0;
  uint64_t v1;

  sub_1BA53FAC4();
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BAFCE070();
  v1 = sub_1BB86E968();
  swift_release();

  return v1;
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1BAFCDFEC(id *a1)
{
  id v1;
  uint64_t result;

  v1 = *a1;
  result = (uint64_t)objc_msgSend(*a1, sel_respondsToSelector_, sel_paidBundleConfig);
  if ((result & 1) != 0)
  {
    objc_msgSend(v1, sel_paidBundleConfig);
    sub_1BAFCE570();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BAFCE070()
{
  unint64_t result;

  result = qword_1ED39DAA0;
  if (!qword_1ED39DAA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED39DAA0);
  }
  return result;
}

uint64_t sub_1BAFCE0C4()
{
  uint64_t v0;
  uint64_t ObjectType;
  _QWORD *v2;

  ObjectType = swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_1BAFCE128;
  return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)(0, ObjectType);
}

uint64_t sub_1BAFCE128(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1BAFCE19C()
{
  uint64_t v0;
  id v1;
  _BYTE *v3;

  if ((objc_msgSend(*(id *)(v0 + 32), sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
  {
    v1 = objc_msgSend(*(id *)(v0 + 32), sel_paidBundleConfig);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(id))(v0 + 8))(v1);
  }
  else
  {
    sub_1BAFCE268();
    swift_allocError();
    *v3 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

unint64_t sub_1BAFCE268()
{
  unint64_t result;

  result = qword_1EF2B8808;
  if (!qword_1EF2B8808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEF40, &type metadata for PaidBundleConfigManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2B8808);
  }
  return result;
}

uint64_t PaidBundleConfigManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t PaidBundleConfigManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAFCE2EC()
{
  void *v0;
  uint64_t v1;

  sub_1BA53FAC4();
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  sub_1BAFCE070();
  v1 = sub_1BB86E968();
  swift_release();

  return v1;
}

uint64_t sub_1BAFCE36C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BA981098;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t dispatch thunk of PaidBundleConfigManagerType.currentConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PaidBundleConfigManagerType.fetchConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA9822B8;
  return v7(a1, a2);
}

uint64_t method lookup function for PaidBundleConfigManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaidBundleConfigManager.__allocating_init(configurationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for PaidBundleConfigManager.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFCE4A8 + 4 * byte_1BB8DEE55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFCE4DC + 4 * byte_1BB8DEE50[v4]))();
}

uint64_t sub_1BAFCE4DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCE4E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFCE4ECLL);
  return result;
}

uint64_t sub_1BAFCE4F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFCE500);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFCE504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFCE50C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleConfigManager.Errors()
{
  return &type metadata for PaidBundleConfigManager.Errors;
}

unint64_t sub_1BAFCE52C()
{
  unint64_t result;

  result = qword_1EF2B8820;
  if (!qword_1EF2B8820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DEF18, &type metadata for PaidBundleConfigManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2B8820);
  }
  return result;
}

void sub_1BAFCE570()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C368)
  {
    sub_1BAFCE070();
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C368);
  }
}

uint64_t sub_1BAFCE5C4()
{
  return sub_1BAF1FEF4();
}

id sub_1BAFCE66C(void *a1, CGFloat a2)
{
  CATransform3D v4;

  CATransform3DMakeScale(&v4, a2, a2, 1.0);
  return objc_msgSend(a1, sel_setTransform_, &v4);
}

id sub_1BAFCE6D4(void *a1, CGFloat a2, CGFloat a3)
{
  CATransform3D v5;

  CATransform3DMakeTranslation(&v5, a2, a3, 0.0);
  return objc_msgSend(a1, sel_setTransform_, &v5);
}

id sub_1BAFCE738(void *a1, void (*a2)(__int128 *__return_ptr, __n128, __n128, double), __n128 a3, __n128 a4)
{
  __int128 v6;

  a2(&v6, a3, a4, a4.n128_f64[0]);
  return objc_msgSend(a1, sel_setTransform_, &v6);
}

id sub_1BAFCE79C(void *a1, void (*a2)(__int128 *__return_ptr, double, double), double a3, double a4)
{
  __int128 v6;

  a2(&v6, a4, a3);
  return objc_msgSend(a1, sel_setTransform_, &v6);
}

id sub_1BAFCE808(void *a1, void (*a2)(__int128 *__return_ptr, double, __n128, double), double a3, __n128 a4)
{
  __int128 v6;

  a2(&v6, a4.n128_f64[0], a4, a3);
  return objc_msgSend(a1, sel_setTransform_, &v6);
}

id sub_1BAFCE870(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CATransform3D v7;

  CATransform3DMakeRotation(&v7, a2, a3, a4, a5);
  return objc_msgSend(a1, sel_setTransform_, &v7);
}

uint64_t sub_1BAFCE8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12;
  char v13;
  char v14;

  if (a1)
  {
    if (!a4)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BA881EAC(a1, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  else if (a4)
  {
    return 0;
  }
  if (a2)
  {
    if (!a5)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA881EAC(a2, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      return 0;
  }
  else if (a5)
  {
    return 0;
  }
  if (a3)
  {
    if (a6)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA881EAC(a3, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        return 1;
    }
  }
  else if (!a6)
  {
    return 1;
  }
  return 0;
}

BOOL sub_1BAFCE9E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  v5 = *a1;
  v4 = a1[1];
  v7 = *a2;
  v6 = a2[1];
  if (*a1)
  {
    v8 = *a1;
    if (!v7)
    {
LABEL_12:
      sub_1BA5DCC20(v8);
      goto LABEL_13;
    }
    sub_1BA5DCC20(v8);
    sub_1BA5DCC20(v5);
    sub_1BA5DCC20(v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BA881EAC(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_14:
      sub_1BA5DCC4C(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v5;
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1BA881EAC(v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5DCC4C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5DCC4C(v5);
    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    goto LABEL_13;
  }
  v5 = a1[2];
  v11 = a1[3];
  v7 = a2[2];
  v12 = a2[3];
  if (!v5)
  {
    if (!v7)
      goto LABEL_18;
LABEL_13:
    sub_1BA5DCC20(v7);
    sub_1BA5DCC4C(v5);
    v15 = v7;
    goto LABEL_15;
  }
  v8 = a1[2];
  if (!v7)
    goto LABEL_12;
  sub_1BA5DCC20(v8);
  sub_1BA5DCC20(v5);
  sub_1BA5DCC20(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA881EAC(v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA881EAC(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5DCC4C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5DCC4C(v5);
  if ((v14 & 1) == 0)
    return 0;
LABEL_18:
  v18 = a1[4];
  v17 = a1[5];
  v20 = a2[4];
  v19 = a2[5];
  if (v18)
  {
    if (v20)
    {
      sub_1BA5DCC20(v18);
      sub_1BA5DCC20(v18);
      sub_1BA5DCC20(v20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_1BA881EAC(v18, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = sub_1BA881EAC(v17, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5DCC4C(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5DCC4C(v18);
        return (v22 & 1) != 0;
      }
      sub_1BA5DCC4C(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v18;
LABEL_15:
      sub_1BA5DCC4C(v15);
      return 0;
    }
    sub_1BA5DCC20(v18);
LABEL_26:
    sub_1BA5DCC20(v20);
    sub_1BA5DCC4C(v18);
    v15 = v20;
    goto LABEL_15;
  }
  if (v20)
    goto LABEL_26;
  return 1;
}

void sub_1BAFCED30(_QWORD *a1)
{
  FormatAnimationNodeKeyPath.encode(to:)(a1);
}

void sub_1BAFCED48()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFCED88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  sub_1BAC86C64(0);
  v3 = *(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87D7A0;
  sub_1BAAF7494(0x687461502079654BLL, 0xE800000000000000, 0x726F66736E617254, 0xEF656C616353206DLL, (_QWORD *)(v6 + v5));
  swift_bridgeObjectRetain();
  sub_1BAAF3E48(0x6C6156206D6F7246, 0xEA00000000006575, v1, (_QWORD *)(v6 + v5 + v4));
  swift_bridgeObjectRetain();
  sub_1BAAF3E48(0x65756C6156206F54, 0xE800000000000000, v2, (_QWORD *)(v6 + v5 + 2 * v4));
  swift_bridgeObjectRetain();
  sub_1BAAF3E48(0x65756C6156207942, 0xE800000000000000, v0, (_QWORD *)(v6 + v5 + 3 * v4));
  return v6;
}

void _s8NewsFeed26FormatAnimationNodeKeyPathO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BAFCF468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (v13)
  {
    v19 = v5;
    v20 = v8;
    v21 = v7;
    v22 = v1;
    v28 = v5;
    v29 = v0;
    v23 = v2;
    v24 = v3;
    v25 = v4;
    sub_1BA51A92C(v19, v0, v20, v21, v12, v11, v9);
    sub_1BA51A92C(v6, v22, v10, v25, v24, v23, v13);
    sub_1BA51A9E0(v28, v29, v32, v31, v12, v11, v9);
    sub_1BA51A9E0(v6, v22, v10, v25, v24, v23, v13);
    return 0;
  }
  else
  {
    v14 = v7;
    v15 = v4;
    v27 = v1;
    v16 = v3;
    v30 = v2;
    v17 = v0;
    sub_1BA51A92C(v6, v1, v10, v4, v3, v2, 0);
    sub_1BA51A92C(v5, v17, v32, v14, v12, v11, 0);
    sub_1BA51A92C(v5, v17, v32, v14, v12, v11, 0);
    sub_1BA51A92C(v6, v27, v10, v15, v16, v30, 0);
    v26 = sub_1BAFCE8D0(v5, v17, v32, v6, v27, v10);
    sub_1BA51A9E0(v5, v17, v32, v31, v12, v11, 0);
    sub_1BA51A9E0(v6, v27, v10, v15, v16, v30, 0);
    sub_1BA51A9E0(v6, v27, v10, v15, v16, v30, 0);
    sub_1BA51A9E0(v5, v17, v32, v31, v12, v11, 0);
    return v26 & 1;
  }
}

unint64_t sub_1BAFD050C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFD0530();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFD0530()
{
  unint64_t result;

  result = qword_1EF2B8828;
  if (!qword_1EF2B8828)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeKeyPath, &type metadata for FormatAnimationNodeKeyPath);
    atomic_store(result, (unint64_t *)&qword_1EF2B8828);
  }
  return result;
}

unint64_t sub_1BAFD0574(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA501570();
  a1[2] = sub_1BAEF6930();
  result = sub_1BAFD05A8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFD05A8()
{
  unint64_t result;

  result = qword_1EF2B8830;
  if (!qword_1EF2B8830)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeKeyPath, &type metadata for FormatAnimationNodeKeyPath);
    atomic_store(result, (unint64_t *)&qword_1EF2B8830);
  }
  return result;
}

uint64_t destroy for FormatAnimationNodeKeyPath(uint64_t a1)
{
  return sub_1BA51A9E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatAnimationNodeKeyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA51A92C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatAnimationNodeKeyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA51A92C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BA51A9E0(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for FormatAnimationNodeKeyPath(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BA51A9E0(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAnimationNodeKeyPath()
{
  return &type metadata for FormatAnimationNodeKeyPath;
}

uint64_t sub_1BAFD076C()
{
  return swift_deallocObject();
}

id sub_1BAFD077C(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE870(a1, *(CGFloat *)(v1 + 16), 0.0, 0.0, 1.0);
}

uint64_t sub_1BAFD07A0()
{
  return swift_deallocObject();
}

id sub_1BAFD07B0(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE870(a1, *(CGFloat *)(v1 + 16), 0.0, 1.0, 0.0);
}

uint64_t sub_1BAFD07D4()
{
  return swift_deallocObject();
}

id sub_1BAFD07E4(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE870(a1, *(CGFloat *)(v1 + 16), 1.0, 0.0, 0.0);
}

uint64_t sub_1BAFD0808()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0818()
{
  return swift_deallocObject();
}

id sub_1BAFD0828(void *a1, double a2, __n128 a3)
{
  uint64_t v3;

  a3.n128_u64[0] = 0;
  return sub_1BAFCE808(a1, (void (*)(__int128 *__return_ptr, double, __n128, double))MEMORY[0x1E0CD2648], *(double *)(v3 + 16), a3);
}

uint64_t sub_1BAFD084C()
{
  return swift_deallocObject();
}

id sub_1BAFD085C(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE79C(a1, (void (*)(__int128 *__return_ptr, double, double))MEMORY[0x1E0CD2648], *(double *)(v1 + 16), 0.0);
}

uint64_t sub_1BAFD0880()
{
  return swift_deallocObject();
}

id sub_1BAFD0890(void *a1, __n128 a2, __n128 a3)
{
  uint64_t v3;

  a2.n128_u64[0] = *(_QWORD *)(v3 + 16);
  a3.n128_u64[0] = 0;
  return sub_1BAFCE738(a1, (void (*)(__int128 *__return_ptr, __n128, __n128, double))MEMORY[0x1E0CD2648], a2, a3);
}

uint64_t sub_1BAFD08B4()
{
  return swift_deallocObject();
}

id sub_1BAFD08C4(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE6D4(a1, *(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24));
}

uint64_t sub_1BAFD08DC()
{
  return swift_deallocObject();
}

id sub_1BAFD08EC(void *a1, double a2, __n128 a3)
{
  uint64_t v3;

  a3.n128_u64[0] = 1.0;
  return sub_1BAFCE808(a1, (void (*)(__int128 *__return_ptr, double, __n128, double))MEMORY[0x1E0CD2640], *(double *)(v3 + 16), a3);
}

uint64_t sub_1BAFD0910()
{
  return swift_deallocObject();
}

id sub_1BAFD0920(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE79C(a1, (void (*)(__int128 *__return_ptr, double, double))MEMORY[0x1E0CD2640], *(double *)(v1 + 16), 1.0);
}

uint64_t sub_1BAFD0944()
{
  return swift_deallocObject();
}

id sub_1BAFD0954(void *a1, __n128 a2, __n128 a3)
{
  uint64_t v3;

  a2.n128_u64[0] = *(_QWORD *)(v3 + 16);
  a3.n128_u64[0] = 1.0;
  return sub_1BAFCE738(a1, (void (*)(__int128 *__return_ptr, __n128, __n128, double))MEMORY[0x1E0CD2640], a2, a3);
}

uint64_t sub_1BAFD0978()
{
  return swift_deallocObject();
}

id sub_1BAFD0988(void *a1)
{
  uint64_t v1;

  return sub_1BAFCE66C(a1, *(CGFloat *)(v1 + 16));
}

uint64_t sub_1BAFD09A0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD09B0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD09C0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD09D0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD09E0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD09F0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0A00()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0A10()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0A20()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0A30()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0A40()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFD0A50()
{
  return swift_deallocObject();
}

unint64_t sub_1BAFD0A60()
{
  unint64_t result;

  result = qword_1EF2B8838;
  if (!qword_1EF2B8838)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B8838);
  }
  return result;
}

uint64_t sub_1BAFD0AC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BAFD0F48(0, &qword_1EF2B8840, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFD0C0C();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB87417C();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BB87411C();
    v9[13] = 2;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAFD0C0C()
{
  unint64_t result;

  result = qword_1ED3AA938;
  if (!qword_1ED3AA938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF254, &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA938);
  }
  return result;
}

uint64_t sub_1BAFD0C50()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6449636D75;
  if (*v0 != 1)
    v1 = 0x6E65646469487369;
  if (*v0)
    return v1;
  else
    return 0x6449676174;
}

uint64_t sub_1BAFD0CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFD125C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFD0CC8()
{
  sub_1BAFD0C0C();
  return sub_1BB874710();
}

uint64_t sub_1BAFD0CF0()
{
  sub_1BAFD0C0C();
  return sub_1BB87471C();
}

double sub_1BAFD0D18@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  sub_1BAFD0D70(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAFD0D5C(_QWORD *a1)
{
  return sub_1BAFD0AC8(a1);
}

uint64_t sub_1BAFD0D70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;

  sub_1BAFD0F48(0, &qword_1ED3AB598, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFD0C0C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v20 = 1;
  v17 = sub_1BB87402C();
  v18 = v13;
  v19 = 2;
  v14 = sub_1BB874038();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  v16 = v18;
  *(_QWORD *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = v14 & 1;
  return result;
}

void sub_1BAFD0F48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAFD0C0C();
    v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAFD0FF0 + 4 * byte_1BB8DF105[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAFD1024 + 4 * byte_1BB8DF100[v4]))();
}

uint64_t sub_1BAFD1024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFD102C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFD1034);
  return result;
}

uint64_t sub_1BAFD1040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFD1048);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAFD104C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFD1054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys;
}

uint64_t initializeWithCopy for SportsTaxonomyGraphResourceLeafEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsTaxonomyGraphResourceLeafEntityNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for SportsTaxonomyGraphResourceLeafEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceLeafEntityNode()
{
  return &type metadata for SportsTaxonomyGraphResourceLeafEntityNode;
}

unint64_t sub_1BAFD1188()
{
  unint64_t result;

  result = qword_1EF2B8848;
  if (!qword_1EF2B8848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF22C, &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8848);
  }
  return result;
}

unint64_t sub_1BAFD11D0()
{
  unint64_t result;

  result = qword_1ED3AA948;
  if (!qword_1ED3AA948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF19C, &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA948);
  }
  return result;
}

unint64_t sub_1BAFD1218()
{
  unint64_t result;

  result = qword_1ED3AA940;
  if (!qword_1ED3AA940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF1C4, &type metadata for SportsTaxonomyGraphResourceLeafEntityNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA940);
  }
  return result;
}

uint64_t sub_1BAFD125C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449636D75 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SportsSyncingConfigV2Resource.sportsFavoritesSyncMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsSyncingConfigV2Resource.umcIDs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = sub_1BAFD1420();
    v3 = sub_1BAFD148C();
    v1 = sub_1BA6E4124(v3, v2);
    *(_QWORD *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.umcIDs.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD1420()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v1 = sub_1BAFD1A68(v0, 0x736D616574, 0xE500000000000000);
    *(_QWORD *)(v0 + 56) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAFD148C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 72))
  {
    v1 = *(_QWORD *)(v0 + 72);
  }
  else
  {
    v1 = sub_1BAFD1A68(v0, 0x7365756761656CLL, 0xE700000000000000);
    *(_QWORD *)(v0 + 72) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*SportsSyncingConfigV2Resource.umcIDs.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.umcIDs.getter();
  return sub_1BAFD1530;
}

uint64_t sub_1BAFD1530(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 24) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t SportsSyncingConfigV2Resource.tagIDs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v2 = sub_1BAFD15B8();
    v3 = sub_1BAFD1624();
    v1 = sub_1BA6E4124(v3, v2);
    *(_QWORD *)(v0 + 32) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.tagIDs.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD15B8()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v1 = sub_1BAFD1BB4(v0, 0x736D616574, 0xE500000000000000);
    *(_QWORD *)(v0 + 64) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAFD1624()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 80);
  }
  else
  {
    v1 = sub_1BAFD1BB4(v0, 0x7365756761656CLL, 0xE700000000000000);
    *(_QWORD *)(v0 + 80) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*SportsSyncingConfigV2Resource.tagIDs.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.tagIDs.getter();
  return sub_1BAFD16C8;
}

uint64_t sub_1BAFD16C8(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 32) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v1 = sub_1BAFD1818(v0, 0x736D616574, 0xE500000000000000);
    *(_QWORD *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter();
  return sub_1BAFD1788;
}

uint64_t sub_1BAFD1788(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 40) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v1 = sub_1BAFD1818(v0, 0x7365756761656CLL, 0xE700000000000000);
    *(_QWORD *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD1818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) && (sub_1BA6E35A8(a2, a3), (v3 & 1) != 0))
    v4 = swift_bridgeObjectRetain();
  else
    v4 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  v6 = (uint64_t *)(v4 + 56);
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v10 = *(v6 - 3);
    v9 = *(v6 - 2);
    v11 = *(v6 - 1);
    v12 = *v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = sub_1BA6E35A8(v10, v9);
    v16 = v7[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      break;
    v19 = v14;
    if (v7[3] >= v18)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v14 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1BB4C216C();
        if ((v19 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1BB4AE750(v18, isUniquelyReferenced_nonNull_native);
      v20 = sub_1BA6E35A8(v10, v9);
      if ((v19 & 1) != (v21 & 1))
        goto LABEL_24;
      v15 = v20;
      if ((v19 & 1) != 0)
      {
LABEL_7:
        v8 = (_QWORD *)(v7[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *v8 = v11;
        v8[1] = v12;
        goto LABEL_8;
      }
    }
    v7[(v15 >> 6) + 8] |= 1 << v15;
    v22 = (uint64_t *)(v7[6] + 16 * v15);
    *v22 = v10;
    v22[1] = v9;
    v23 = (_QWORD *)(v7[7] + 16 * v15);
    *v23 = v11;
    v23[1] = v12;
    v24 = v7[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_23;
    v7[2] = v26;
    swift_bridgeObjectRetain();
LABEL_8:
    v6 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v5)
      goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t (*SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter();
  return sub_1BAFD1A58;
}

uint64_t sub_1BAFD1A58(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 48) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD1A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(v3 + 16))
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v8)
      goto LABEL_6;
    goto LABEL_12;
  }
  v5 = sub_1BA6E35A8(a2, a3);
  if ((v6 & 1) == 0)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v8)
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    goto LABEL_12;
LABEL_6:
  sub_1BA7447E8(0, v8, 0);
  v9 = v4;
  v10 = (uint64_t *)(v7 + 40);
  do
  {
    v12 = *(v10 - 1);
    v11 = *v10;
    v13 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v9 + 24);
    swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1)
      sub_1BA7447E8(v14 > 1, v13 + 1, 1);
    v10 += 4;
    *(_QWORD *)(v9 + 16) = v13 + 1;
    v15 = v9 + 16 * v13;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v11;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
LABEL_13:
  v16 = sub_1BA6E43EC(v9);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BAFD1BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(v3 + 16))
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v8)
      goto LABEL_6;
    goto LABEL_12;
  }
  v5 = sub_1BA6E35A8(a2, a3);
  if ((v6 & 1) == 0)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v8)
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    goto LABEL_12;
LABEL_6:
  sub_1BA7447E8(0, v8, 0);
  v9 = v4;
  v10 = (uint64_t *)(v7 + 56);
  do
  {
    v12 = *(v10 - 1);
    v11 = *v10;
    v13 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v9 + 24);
    swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1)
      sub_1BA7447E8(v14 > 1, v13 + 1, 1);
    *(_QWORD *)(v9 + 16) = v13 + 1;
    v15 = v9 + 16 * v13;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v11;
    v10 += 4;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
LABEL_13:
  v16 = sub_1BA6E43EC(v9);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1BAFD1D00()
{
  return 0xD000000000000016;
}

uint64_t sub_1BAFD1D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFD2870(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BAFD1D44()
{
  sub_1BAFD1F1C();
  return sub_1BB874710();
}

uint64_t sub_1BAFD1D6C()
{
  sub_1BAFD1F1C();
  return sub_1BB87471C();
}

uint64_t SportsSyncingConfigV2Resource.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsSyncingConfigV2Resource.__deallocating_deinit()
{
  SportsSyncingConfigV2Resource.deinit();
  return swift_deallocClassInstance();
}

uint64_t SportsSyncingConfigV2Resource.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v2 = v1;
  sub_1BAFD22E0(0, &qword_1EF2B8850, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFD1F1C();
  sub_1BB8746C8();
  v10[1] = *(_QWORD *)(v2 + 16);
  sub_1BAFD1F60();
  sub_1BAFD2018();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BAFD1F1C()
{
  unint64_t result;

  result = qword_1EF2B8858;
  if (!qword_1EF2B8858)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF464, &type metadata for SportsSyncingConfigV2Resource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8858);
  }
  return result;
}

void sub_1BAFD1F60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8860)
  {
    sub_1BAFD1FC4();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8860);
  }
}

void sub_1BAFD1FC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8868)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8868);
  }
}

unint64_t sub_1BAFD2018()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2B8870;
  if (!qword_1EF2B8870)
  {
    sub_1BAFD1F60();
    v2 = v1;
    v3 = sub_1BAFD23BC(&qword_1EF2B8878, (uint64_t (*)(void))sub_1BAFD2098, MEMORY[0x1E0DEAF10]);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2B8870);
  }
  return result;
}

unint64_t sub_1BAFD2098()
{
  unint64_t result;

  result = qword_1EF2B8880;
  if (!qword_1EF2B8880)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsSyncingConfigResourceItem, &type metadata for SportsSyncingConfigResourceItem);
    atomic_store(result, (unint64_t *)&qword_1EF2B8880);
  }
  return result;
}

uint64_t SportsSyncingConfigV2Resource.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsSyncingConfigV2Resource.init(from:)(a1);
  return v2;
}

uint64_t SportsSyncingConfigV2Resource.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[4];

  v10[1] = *(_QWORD *)v1;
  sub_1BAFD22E0(0, &qword_1EF2B8888, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFD1F1C();
  sub_1BB87468C();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1BAFD1F60();
    sub_1BAFD233C();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v1 + 16) = v10[3];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1BAFD22E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAFD1F1C();
    v7 = a3(a1, &type metadata for SportsSyncingConfigV2Resource.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAFD233C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2B8890;
  if (!qword_1EF2B8890)
  {
    sub_1BAFD1F60();
    v2 = v1;
    v3 = sub_1BAFD23BC(&qword_1EF2B8898, (uint64_t (*)(void))sub_1BAFD2420, MEMORY[0x1E0DEAF40]);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2B8890);
  }
  return result;
}

uint64_t sub_1BAFD23BC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BAFD1FC4();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAFD2420()
{
  unint64_t result;

  result = qword_1EF2B88A0;
  if (!qword_1EF2B88A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsSyncingConfigResourceItem, &type metadata for SportsSyncingConfigResourceItem);
    atomic_store(result, (unint64_t *)&qword_1EF2B88A0);
  }
  return result;
}

uint64_t sub_1BAFD2464@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = SportsSyncingConfigV2Resource.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAFD24B8(_QWORD *a1)
{
  return SportsSyncingConfigV2Resource.encode(to:)(a1);
}

uint64_t sub_1BAFD24D8()
{
  return SportsSyncingConfigV2Resource.umcIDs.getter();
}

uint64_t sub_1BAFD24F8()
{
  return SportsSyncingConfigV2Resource.tagIDs.getter();
}

uint64_t sub_1BAFD2518()
{
  return SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter();
}

uint64_t sub_1BAFD2538()
{
  return SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter();
}

uint64_t sub_1BAFD2558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigV2Resource.umcIDs.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFD2580(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD25B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigV2Resource.tagIDs.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFD25D8(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD2608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigV2Resource.teamUMCIDToTagIDMap.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFD2630(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFD2660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigV2Resource.leagueUMCIDToTagIDMap.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFD2688(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SportsSyncingConfigV2Resource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SportsSyncingConfigV2Resource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsSyncingConfigV2Resource.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for SportsSyncingConfigV2Resource.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAFD273C + 4 * byte_1BB8DF2B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAFD275C + 4 * byte_1BB8DF2B5[v4]))();
}

_BYTE *sub_1BAFD273C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAFD275C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFD2764(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFD276C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFD2774(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFD277C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncingConfigV2Resource.CodingKeys()
{
  return &type metadata for SportsSyncingConfigV2Resource.CodingKeys;
}

unint64_t sub_1BAFD279C()
{
  unint64_t result;

  result = qword_1EF2B8988;
  if (!qword_1EF2B8988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF43C, &type metadata for SportsSyncingConfigV2Resource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8988);
  }
  return result;
}

unint64_t sub_1BAFD27E4()
{
  unint64_t result;

  result = qword_1EF2B8990;
  if (!qword_1EF2B8990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF3AC, &type metadata for SportsSyncingConfigV2Resource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8990);
  }
  return result;
}

unint64_t sub_1BAFD282C()
{
  unint64_t result;

  result = qword_1EF2B8998;
  if (!qword_1EF2B8998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF3D4, &type metadata for SportsSyncingConfigV2Resource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8998);
  }
  return result;
}

uint64_t sub_1BAFD2870(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001BB974E30)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BAFD28F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  sub_1BAFD78C0(0, &qword_1EF2B8A60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFD787C();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v1)
  {
    type metadata accessor for DebugInspectionWebEmbed();
    v14 = 1;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    v13 = 2;
    sub_1BB87414C();
    v12 = 3;
    sub_1BB87414C();
    v11 = 4;
    type metadata accessor for DebugInspectionHeadline(0);
    sub_1BA4A2870(&qword_1EF2B8A68, type metadata accessor for DebugInspectionHeadline, (uint64_t)&unk_1BB91F098);
    sub_1BB87414C();
    v10 = 5;
    type metadata accessor for WebEmbedDataVisualization();
    sub_1BA4A2870((unint64_t *)&unk_1ED3A7A40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BAFD2B84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v33 = a2;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFD3C84(0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)&v33 - v10;
  v37 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFD78C0(0, &qword_1EF2B8A48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v40 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - v16;
  v18 = type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1BAFD787C();
  v39 = v17;
  v22 = v42;
  sub_1BB87468C();
  if (v22)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v23 = v15;
  v42 = v11;
  v24 = v37;
  v25 = (uint64_t)v38;
  v48 = 0;
  *v20 = sub_1BB874098();
  v20[1] = v26;
  v47 = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1BB8740D4();
  v27 = v13;
  v28 = (int *)v18;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)v20 + *(int *)(v18 + 20), v27, v24);
  v46 = 2;
  sub_1BB874068();
  sub_1BA5193C4(v25, (uint64_t)v20 + *(int *)(v18 + 24), (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v45 = 3;
  v29 = (uint64_t)v36;
  sub_1BB874068();
  sub_1BA5193C4(v29, (uint64_t)v20 + v28[7], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  type metadata accessor for DebugInspectionHeadline(0);
  v44 = 4;
  sub_1BA4A2870(&qword_1EF2B8A58, type metadata accessor for DebugInspectionHeadline, (uint64_t)&unk_1BB91F0C0);
  v30 = (uint64_t)v35;
  sub_1BB874068();
  sub_1BA5193C4(v30, (uint64_t)v20 + v28[8], (uint64_t (*)(_QWORD))sub_1BAFD3C84);
  type metadata accessor for WebEmbedDataVisualization();
  v43 = 5;
  sub_1BA4A2870(&qword_1ED3A7A68, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
  v31 = (uint64_t)v34;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v39, v40);
  sub_1BA5193C4(v31, (uint64_t)v20 + v28[9], (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  sub_1BA4C2DD8((uint64_t)v20, v33, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionWebEmbed);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionWebEmbed);
}

uint64_t sub_1BAFD310C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFD3140 + 4 * byte_1BB8DF4C0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAFD3140()
{
  return 5001813;
}

uint64_t sub_1BAFD3150()
{
  return 0x6C69467865646E69;
}

uint64_t sub_1BAFD3170()
{
  return 0x4C525561746164;
}

uint64_t sub_1BAFD3188()
{
  return 0x656E696C64616568;
}

uint64_t sub_1BAFD31A0()
{
  return 0x7A696C6175736976;
}

uint64_t sub_1BAFD31C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFD7AC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFD31E8()
{
  sub_1BAFD787C();
  return sub_1BB874710();
}

uint64_t sub_1BAFD3210()
{
  sub_1BAFD787C();
  return sub_1BB87471C();
}

uint64_t sub_1BAFD3238@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAFD2B84(a1, a2);
}

uint64_t sub_1BAFD324C(_QWORD *a1)
{
  return sub_1BAFD28F4(a1);
}

uint64_t sub_1BAFD3260@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *inited;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t *, char *, uint64_t);
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  _UNKNOWN **v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;

  v79 = a1;
  v95 = *MEMORY[0x1E0C80C00];
  sub_1BAFD3C84(0);
  MEMORY[0x1E0C80A78](v2);
  v78 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v74);
  v73 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v5);
  v81 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for WebEmbedDataVisualization();
  v86 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v75 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v77 = (uint64_t)&v73 - v9;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v10);
  v80 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v73 - v13;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = (_QWORD *)swift_initStackObject();
  *((_OWORD *)inited + 1) = xmmword_1BB87CE70;
  sub_1BAFD3CA0();
  v76 = v15;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(v16 + 32) = 0x696669746E656449;
  *(_QWORD *)(v16 + 40) = 0xEA00000000007265;
  v17 = *v1;
  v18 = v1[1];
  v19 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v16 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 80) = v19;
  *(_QWORD *)(v16 + 48) = v17;
  *(_QWORD *)(v16 + 56) = v18;
  *(_BYTE *)(v16 + 88) = 0;
  *(_QWORD *)(v16 + 96) = 5001813;
  *(_QWORD *)(v16 + 104) = 0xE300000000000000;
  v20 = type metadata accessor for DebugInspectionWebEmbed();
  v21 = (char *)v1 + *(int *)(v20 + 20);
  v22 = sub_1BB86C67C();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  *(_QWORD *)(v16 + 136) = v22;
  v24 = sub_1BA4A2870((unint64_t *)&qword_1ED3A0CE0, v23, MEMORY[0x1E0CB0048]);
  *(_QWORD *)(v16 + 144) = v24;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 112));
  v26 = *(_QWORD *)(v22 - 8);
  v87 = *(void (**)(uint64_t *, char *, uint64_t))(v26 + 16);
  v87(boxed_opaque_existential_0, v21, v22);
  *(_BYTE *)(v16 + 152) = 0;
  strcpy((char *)(v16 + 160), "Index File URL");
  *(_BYTE *)(v16 + 175) = -18;
  v82 = v20;
  v27 = *(int *)(v20 + 24);
  v83 = v1;
  sub_1BA4C2DD8((uint64_t)v1 + v27, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v28(v14, 1, v22) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    *(_OWORD *)(v16 + 176) = 0u;
    *(_OWORD *)(v16 + 192) = 0u;
    *(_QWORD *)(v16 + 208) = 0;
  }
  else
  {
    *(_QWORD *)(v16 + 200) = v22;
    *(_QWORD *)(v16 + 208) = v24;
    v29 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 176));
    (*(void (**)(uint64_t *, char *, uint64_t))(v26 + 32))(v29, v14, v22);
    swift_bridgeObjectRetain();
  }
  v30 = v24;
  *(_BYTE *)(v16 + 216) = 0;
  *(_QWORD *)(v16 + 224) = 0x4C52552061746144;
  *(_QWORD *)(v16 + 232) = 0xE800000000000000;
  v31 = v82;
  v32 = v83;
  v33 = v80;
  sub_1BA4C2DD8((uint64_t)v83 + *(int *)(v82 + 28), v80, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  if (v28((char *)v33, 1, v22) == 1)
  {
    sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    *(_OWORD *)(v16 + 240) = 0u;
    *(_OWORD *)(v16 + 256) = 0u;
    *(_QWORD *)(v16 + 272) = 0;
  }
  else
  {
    *(_QWORD *)(v16 + 264) = v22;
    *(_QWORD *)(v16 + 272) = v30;
    v34 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 240));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v26 + 32))(v34, v33, v22);
  }
  *(_BYTE *)(v16 + 280) = 0;
  v35 = inited;
  inited[7] = &type metadata for DebugInspectionDataSection;
  v35[8] = &off_1E728C9C8;
  v35[4] = 0x6465626D45626557;
  v35[5] = 0xE800000000000000;
  v35[6] = v16;
  v36 = v81;
  sub_1BA4C2DD8((uint64_t)v32 + *(int *)(v31 + 36), v81, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v36, 1, v85) == 1)
  {
    sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v37 = (uint64_t)v78;
    v38 = v79;
  }
  else
  {
    v86 = v30;
    v39 = v77;
    sub_1BA5193C4(v36, v77, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v40 + 32) = 0x696669746E656449;
    *(_QWORD *)(v40 + 40) = 0xEA00000000007265;
    v41 = WebEmbedDataVisualization.identifier.getter();
    v42 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v40 + 72) = MEMORY[0x1E0DEA968];
    v43 = MEMORY[0x1E0DEA9D8];
    *(_QWORD *)(v40 + 80) = MEMORY[0x1E0DEA9D8];
    *(_QWORD *)(v40 + 48) = v41;
    *(_QWORD *)(v40 + 56) = v44;
    *(_BYTE *)(v40 + 88) = 0;
    *(_QWORD *)(v40 + 96) = 1684957515;
    *(_QWORD *)(v40 + 104) = 0xE400000000000000;
    v45 = WebEmbedDataVisualization.kind.getter();
    *(_QWORD *)(v40 + 136) = v42;
    *(_QWORD *)(v40 + 144) = v43;
    *(_QWORD *)(v40 + 112) = v45;
    *(_QWORD *)(v40 + 120) = v46;
    *(_BYTE *)(v40 + 152) = 0;
    *((_QWORD *)&v90 + 1) = &type metadata for DebugInspectionDataSection;
    v91 = &off_1E728C9C8;
    strcpy((char *)&v89, "Visualization");
    HIWORD(v89) = -4864;
    *(_QWORD *)&v90 = v40;
    v48 = v35[2];
    v47 = v35[3];
    if (v48 >= v47 >> 1)
      v35 = sub_1BB392720((_QWORD *)(v47 > 1), v48 + 1, 1, v35);
    v49 = v75;
    v35[2] = v48 + 1;
    sub_1BA5193C4((uint64_t)&v89, (uint64_t)&v35[5 * v48 + 4], (uint64_t (*)(_QWORD))sub_1BAA85C90);
    sub_1BA4C2DD8(v39, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v32 = v83;
    if (EnumCaseMultiPayload == 1)
    {
      v51 = v73;
      sub_1BA5193C4((uint64_t)v49, v73, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      v52 = *(_QWORD *)(v51 + *(int *)(v74 + 24));
      swift_bridgeObjectRetain();
      v53 = v51;
      v54 = v52;
      sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      *(_QWORD *)&v89 = *v49;
      SportsDataVisualization.urlDataSources.getter();
      v54 = v55;
      swift_release();
    }
    if (v54 >> 62)
      v56 = sub_1BB873F30();
    else
      v56 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    inited = v35;
    if (v56)
    {
      v88 = MEMORY[0x1E0DEE9D8];
      sub_1BAC7AF24(0, v56 & ~(v56 >> 63), 0);
      if (v56 < 0)
        __break(1u);
      v85 = v56;
      v57 = 0;
      v58 = v88;
      v59 = v54 & 0xC000000000000001;
      v60 = v54;
      do
      {
        if (v59)
        {
          v61 = MEMORY[0x1BCCE4630](v57, v54);
        }
        else
        {
          v61 = *(_QWORD *)(v54 + 8 * v57 + 32);
          swift_retain();
        }
        v62 = *(_QWORD *)(v61 + 40);
        *(_QWORD *)&v89 = *(_QWORD *)(v61 + 32);
        *((_QWORD *)&v89 + 1) = v62;
        v63 = v61 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
        v92 = v22;
        v93 = v86;
        v64 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v90);
        v87(v64, (char *)v63, v22);
        v94 = 0;
        swift_bridgeObjectRetain();
        swift_release();
        v88 = v58;
        v66 = *(_QWORD *)(v58 + 16);
        v65 = *(_QWORD *)(v58 + 24);
        if (v66 >= v65 >> 1)
        {
          sub_1BAC7AF24(v65 > 1, v66 + 1, 1);
          v58 = v88;
        }
        ++v57;
        *(_QWORD *)(v58 + 16) = v66 + 1;
        sub_1BAFD3D30((uint64_t)&v89, v58 + (v66 << 6) + 32);
        v54 = v60;
      }
      while (v85 != v57);
      swift_bridgeObjectRelease();
      v38 = v79;
      v32 = v83;
      v39 = v77;
    }
    else
    {
      swift_bridgeObjectRelease();
      v58 = MEMORY[0x1E0DEE9D8];
      v38 = v79;
    }
    v91 = &off_1E728C9C8;
    strcpy((char *)&v89, "Data Sources");
    BYTE13(v89) = 0;
    HIWORD(v89) = -5120;
    *(_QWORD *)&v90 = v58;
    *((_QWORD *)&v90 + 1) = &type metadata for DebugInspectionDataSection;
    v35 = inited;
    v68 = inited[2];
    v67 = inited[3];
    if (v68 >= v67 >> 1)
      v35 = sub_1BB392720((_QWORD *)(v67 > 1), v68 + 1, 1, inited);
    v35[2] = v68 + 1;
    sub_1BA5193C4((uint64_t)&v89, (uint64_t)&v35[5 * v68 + 4], (uint64_t (*)(_QWORD))sub_1BAA85C90);
    sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v37 = (uint64_t)v78;
    v31 = v82;
  }
  sub_1BA4C2DD8((uint64_t)v32 + *(int *)(v31 + 32), v37, (uint64_t (*)(_QWORD))sub_1BAFD3C84);
  v69 = type metadata accessor for DebugInspectionHeadline(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v37, 1, v69) == 1)
  {
    sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))sub_1BAFD3C84);
    v89 = 0u;
    v90 = 0u;
    v91 = 0;
  }
  else
  {
    sub_1BB4DE0B8((uint64_t *)&v89);
    sub_1BA4A2E80(v37, type metadata accessor for DebugInspectionHeadline);
  }
  v71 = v35[2];
  v70 = v35[3];
  if (v71 >= v70 >> 1)
    v35 = sub_1BB392720((_QWORD *)(v70 > 1), v71 + 1, 1, v35);
  v35[2] = v71 + 1;
  sub_1BA5193C4((uint64_t)&v89, (uint64_t)&v35[5 * v71 + 4], (uint64_t (*)(_QWORD))sub_1BAA85C90);
  result = sub_1BAA85898((uint64_t)v35);
  v38[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  v38[4] = (uint64_t)&off_1E728CA90;
  *v38 = result;
  return result;
}

void sub_1BAFD3C84(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1EF2B89A0, type metadata accessor for DebugInspectionHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAFD3CA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2430)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2430);
  }
}

uint64_t type metadata accessor for DebugInspectionWebEmbed()
{
  uint64_t result;

  result = qword_1EF2B8A00;
  if (!qword_1EF2B8A00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAFD3D30(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

_QWORD *sub_1BAFD3D6C(_QWORD *a1, char *a2, int *a3)
{
  char *v3;
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int EnumCaseMultiPayload;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *__dst;
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  uint64_t v110;
  int *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  void (*v116)(char *, char *, uint64_t);

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v14 = v6[6];
    v15 = (char *)v4 + v14;
    v16 = &v3[v14];
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v17(&v3[v14], 1, v11))
    {
      sub_1BA6EF3B0();
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v20 = v6[7];
    v21 = (char *)v4 + v20;
    v22 = &v3[v20];
    if (v17(&v3[v20], 1, v11))
    {
      sub_1BA6EF3B0();
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v13(v21, v22, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    v24 = v6[8];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = &v3[v24];
    v27 = type metadata accessor for DebugInspectionHeadline(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1BAFD3C84(0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v110 = v28;
      v111 = v6;
      v114 = v27;
      v115 = v13;
      v112 = v3;
      v113 = v11;
      v30 = *((_QWORD *)v26 + 1);
      *v25 = *(_QWORD *)v26;
      v25[1] = v30;
      v31 = *((_QWORD *)v26 + 3);
      v25[2] = *((_QWORD *)v26 + 2);
      v25[3] = v31;
      *((_BYTE *)v25 + 32) = v26[32];
      v32 = *((_QWORD *)v26 + 6);
      v25[5] = *((_QWORD *)v26 + 5);
      v25[6] = v32;
      v25[7] = *((_QWORD *)v26 + 7);
      v33 = (int *)type metadata accessor for DebugInspectionArticleData(0);
      v34 = v33[9];
      __dst = (char *)v25 + v34;
      v35 = &v26[v34];
      v36 = sub_1BB86C8B0();
      v37 = *(_QWORD *)(v36 - 8);
      v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v108(v35, 1, v36))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
      }
      v39 = v33[10];
      v40 = (char *)v25 + v39;
      v41 = &v26[v39];
      v42 = *((_QWORD *)v41 + 1);
      if (v42 >> 60 == 15)
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
      }
      else
      {
        v43 = *(_QWORD *)v41;
        sub_1BA69D44C(*(_QWORD *)v41, *((_QWORD *)v41 + 1));
        *(_QWORD *)v40 = v43;
        *((_QWORD *)v40 + 1) = v42;
      }
      *(_QWORD *)((char *)v25 + v33[11]) = *(_QWORD *)&v26[v33[11]];
      v44 = v33[12];
      v45 = (char *)v25 + v44;
      v46 = &v26[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      v45[8] = v46[8];
      *((_BYTE *)v25 + v33[13]) = v26[v33[13]];
      *((_BYTE *)v25 + v33[14]) = v26[v33[14]];
      v47 = v33[15];
      v48 = (_QWORD *)((char *)v25 + v47);
      v49 = &v26[v47];
      v50 = *((_QWORD *)v49 + 1);
      *v48 = *(_QWORD *)v49;
      v48[1] = v50;
      *((_BYTE *)v25 + v33[16]) = v26[v33[16]];
      *((_BYTE *)v25 + v33[17]) = v26[v33[17]];
      *((_BYTE *)v25 + v33[18]) = v26[v33[18]];
      *((_BYTE *)v25 + v33[19]) = v26[v33[19]];
      *((_BYTE *)v25 + v33[20]) = v26[v33[20]];
      *((_BYTE *)v25 + v33[21]) = v26[v33[21]];
      *((_BYTE *)v25 + v33[22]) = v26[v33[22]];
      *((_BYTE *)v25 + v33[23]) = v26[v33[23]];
      *((_BYTE *)v25 + v33[24]) = v26[v33[24]];
      v51 = v33[25];
      v52 = (char *)v25 + v51;
      v53 = &v26[v51];
      v52[8] = v53[8];
      *(_QWORD *)v52 = *(_QWORD *)v53;
      v54 = v33[26];
      v55 = (char *)v25 + v54;
      v56 = &v26[v54];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      v55[8] = v56[8];
      v57 = v33[27];
      v58 = (_QWORD *)((char *)v25 + v57);
      v59 = &v26[v57];
      v60 = *((_QWORD *)v59 + 1);
      *v58 = *(_QWORD *)v59;
      v58[1] = v60;
      v61 = *((_QWORD *)v59 + 3);
      v58[2] = *((_QWORD *)v59 + 2);
      v58[3] = v61;
      v62 = v33[28];
      v63 = (_QWORD *)((char *)v25 + v62);
      v64 = &v26[v62];
      v65 = *((_QWORD *)v64 + 1);
      *v63 = *(_QWORD *)v64;
      v63[1] = v65;
      *(_QWORD *)((char *)v25 + v33[29]) = *(_QWORD *)&v26[v33[29]];
      v66 = v33[30];
      v67 = (_QWORD *)((char *)v25 + v66);
      v68 = &v26[v66];
      v69 = *((_QWORD *)v68 + 1);
      *v67 = *(_QWORD *)v68;
      v67[1] = v69;
      v70 = v33[31];
      v109 = (char *)v25 + v70;
      v71 = (uint64_t *)&v26[v70];
      v72 = *(_QWORD *)&v26[v70 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v72 >> 60 == 15)
      {
        *(_OWORD *)v109 = *(_OWORD *)v71;
      }
      else
      {
        v73 = *v71;
        sub_1BA69D44C(*v71, v72);
        *(_QWORD *)v109 = v73;
        *((_QWORD *)v109 + 1) = v72;
      }
      *(_QWORD *)((char *)v25 + v33[32]) = *(_QWORD *)&v26[v33[32]];
      v74 = *(int *)(v114 + 20);
      v75 = (char *)v25 + v74;
      v76 = &v26[v74];
      *v75 = v26[v74];
      v77 = *(_QWORD *)&v26[v74 + 16];
      *((_QWORD *)v75 + 1) = *(_QWORD *)&v26[v74 + 8];
      *((_QWORD *)v75 + 2) = v77;
      v78 = *(_QWORD *)&v26[v74 + 32];
      *((_QWORD *)v75 + 3) = *(_QWORD *)&v26[v74 + 24];
      *((_QWORD *)v75 + 4) = v78;
      *((_QWORD *)v75 + 5) = *(_QWORD *)&v26[v74 + 40];
      v75[48] = v26[v74 + 48];
      v79 = *(_QWORD *)&v26[v74 + 360];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v79)
      {
        *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
        v80 = *(_OWORD *)(v76 + 88);
        *(_OWORD *)(v75 + 72) = *(_OWORD *)(v76 + 72);
        *(_OWORD *)(v75 + 88) = v80;
        v81 = *(_OWORD *)(v76 + 120);
        *(_OWORD *)(v75 + 104) = *(_OWORD *)(v76 + 104);
        *(_OWORD *)(v75 + 120) = v81;
        v82 = *(_OWORD *)(v76 + 152);
        *(_OWORD *)(v75 + 136) = *(_OWORD *)(v76 + 136);
        *(_OWORD *)(v75 + 152) = v82;
        v83 = *(_OWORD *)(v76 + 184);
        *(_OWORD *)(v75 + 168) = *(_OWORD *)(v76 + 168);
        *(_OWORD *)(v75 + 184) = v83;
        v84 = *(_OWORD *)(v76 + 216);
        *(_OWORD *)(v75 + 200) = *(_OWORD *)(v76 + 200);
        *(_OWORD *)(v75 + 216) = v84;
        v85 = *(_OWORD *)(v76 + 248);
        *(_OWORD *)(v75 + 232) = *(_OWORD *)(v76 + 232);
        *(_OWORD *)(v75 + 248) = v85;
        *((_QWORD *)v75 + 33) = *((_QWORD *)v76 + 33);
        *((_OWORD *)v75 + 17) = *((_OWORD *)v76 + 17);
        *((_OWORD *)v75 + 18) = *((_OWORD *)v76 + 18);
        *((_OWORD *)v75 + 19) = *((_OWORD *)v76 + 19);
        *((_OWORD *)v75 + 20) = *((_OWORD *)v76 + 20);
        *((_OWORD *)v75 + 21) = *((_OWORD *)v76 + 21);
        v86 = *((_QWORD *)v76 + 45);
        *((_QWORD *)v75 + 44) = *((_QWORD *)v76 + 44);
        *((_QWORD *)v75 + 45) = v86;
        *((_OWORD *)v75 + 23) = *((_OWORD *)v76 + 23);
        *((_QWORD *)v75 + 48) = *((_QWORD *)v76 + 48);
        v87 = *(_OWORD *)(v76 + 392);
        v88 = *(_OWORD *)(v76 + 408);
        v89 = *(_OWORD *)(v76 + 440);
        *(_OWORD *)(v75 + 424) = *(_OWORD *)(v76 + 424);
        *(_OWORD *)(v75 + 440) = v89;
        *(_OWORD *)(v75 + 392) = v87;
        *(_OWORD *)(v75 + 408) = v88;
        v90 = *((_QWORD *)v76 + 58);
        *((_QWORD *)v75 + 57) = *((_QWORD *)v76 + 57);
        *((_QWORD *)v75 + 58) = v90;
        *((_QWORD *)v75 + 59) = *((_QWORD *)v76 + 59);
        *((_OWORD *)v75 + 30) = *((_OWORD *)v76 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v75 + 56, v76 + 56, 0x1B8uLL);
      }
      v91 = *((_QWORD *)v76 + 63);
      *((_QWORD *)v75 + 62) = *((_QWORD *)v76 + 62);
      *((_QWORD *)v75 + 63) = v91;
      *((_QWORD *)v75 + 64) = *((_QWORD *)v76 + 64);
      *((_QWORD *)v75 + 65) = *((_QWORD *)v76 + 65);
      v75[528] = v76[528];
      *((_QWORD *)v75 + 67) = *((_QWORD *)v76 + 67);
      *((_QWORD *)v75 + 68) = *((_QWORD *)v76 + 68);
      *((_QWORD *)v75 + 69) = *((_QWORD *)v76 + 69);
      *((_QWORD *)v75 + 70) = *((_QWORD *)v76 + 70);
      *((_QWORD *)v75 + 71) = *((_QWORD *)v76 + 71);
      *(_WORD *)((char *)v25 + *(int *)(v114 + 24)) = *(_WORD *)&v26[*(int *)(v114 + 24)];
      v92 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v110 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v92(v25, 0, 1, v114);
      v3 = v112;
      v11 = v113;
      v13 = v115;
      v6 = v111;
    }
    v93 = v6[9];
    v94 = (_QWORD *)((char *)v4 + v93);
    v95 = (uint64_t *)&v3[v93];
    v96 = type metadata accessor for WebEmbedDataVisualization();
    v97 = *(_QWORD *)(v96 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
    {
      sub_1BA6CAB4C(0);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v100 = *v95;
      if (EnumCaseMultiPayload == 1)
      {
        v101 = v95[1];
        *v94 = v100;
        v94[1] = v101;
        v102 = type metadata accessor for GenericDataVisualization();
        v103 = *(int *)(v102 + 20);
        v104 = (char *)v94 + v103;
        v116 = v13;
        v105 = (char *)v95 + v103;
        swift_bridgeObjectRetain();
        v116(v104, v105, v11);
        *(_QWORD *)((char *)v94 + *(int *)(v102 + 24)) = *(uint64_t *)((char *)v95 + *(int *)(v102 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *v94 = v100;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
    }
  }
  return v4;
}

uint64_t sub_1BAFD455C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + a2[6];
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v9(v8, 1, v5))
    v7(v8, v5);
  v10 = a1 + a2[7];
  if (!v9(v10, 1, v5))
    v7(v10, v5);
  v11 = a1 + a2[8];
  v12 = type metadata accessor for DebugInspectionHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    v14 = v11 + v13[9];
    v15 = sub_1BB86C8B0();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = (uint64_t *)(v11 + v13[10]);
    v18 = v17[1];
    if (v18 >> 60 != 15)
      sub_1BA69D314(*v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = (uint64_t *)(v11 + v13[31]);
    v20 = v19[1];
    if (v20 >> 60 != 15)
      sub_1BA69D314(*v19, v20);
    swift_bridgeObjectRelease();
    v21 = v11 + *(int *)(v12 + 20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v21 + 360))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v22 = a1 + a2[9];
  v23 = type metadata accessor for WebEmbedDataVisualization();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23);
  if (!(_DWORD)result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v25 = type metadata accessor for GenericDataVisualization();
      v7(v22 + *(int *)(v25 + 20), v5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

_QWORD *sub_1BAFD4878(_QWORD *a1, char *a2, int *a3)
{
  int *v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int EnumCaseMultiPayload;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  _QWORD *v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t *__dsta;
  uint64_t v109;
  int *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v13 = v3[6];
  v14 = (char *)v5 + v13;
  v15 = &v4[v13];
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v16(&v4[v13], 1, v10))
  {
    sub_1BA6EF3B0();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v18 = v3[7];
  v19 = (char *)v5 + v18;
  v20 = &v4[v18];
  if (v16(&v4[v18], 1, v10))
  {
    sub_1BA6EF3B0();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v114 = v12;
  v22 = v3[8];
  v23 = (_QWORD *)((char *)v5 + v22);
  v24 = &v4[v22];
  v25 = type metadata accessor for DebugInspectionHeadline(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1BAFD3C84(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v109 = v26;
    v110 = v3;
    v112 = v10;
    v113 = v25;
    v111 = v4;
    v105 = v5;
    v28 = *((_QWORD *)v24 + 1);
    *v23 = *(_QWORD *)v24;
    v23[1] = v28;
    v29 = *((_QWORD *)v24 + 3);
    v23[2] = *((_QWORD *)v24 + 2);
    v23[3] = v29;
    *((_BYTE *)v23 + 32) = v24[32];
    v30 = *((_QWORD *)v24 + 6);
    v23[5] = *((_QWORD *)v24 + 5);
    v23[6] = v30;
    v23[7] = *((_QWORD *)v24 + 7);
    v31 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    v32 = v31[9];
    __dst = (char *)v23 + v32;
    v33 = &v24[v32];
    v34 = sub_1BB86C8B0();
    v35 = *(_QWORD *)(v34 - 8);
    v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v106(v33, 1, v34))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
    }
    v37 = v31[10];
    v38 = (char *)v23 + v37;
    v39 = &v24[v37];
    v40 = *((_QWORD *)v39 + 1);
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
    else
    {
      v41 = *(_QWORD *)v39;
      sub_1BA69D44C(*(_QWORD *)v39, *((_QWORD *)v39 + 1));
      *(_QWORD *)v38 = v41;
      *((_QWORD *)v38 + 1) = v40;
    }
    *(_QWORD *)((char *)v23 + v31[11]) = *(_QWORD *)&v24[v31[11]];
    v42 = v31[12];
    v43 = (char *)v23 + v42;
    v44 = &v24[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    *((_BYTE *)v23 + v31[13]) = v24[v31[13]];
    *((_BYTE *)v23 + v31[14]) = v24[v31[14]];
    v45 = v31[15];
    v46 = (_QWORD *)((char *)v23 + v45);
    v47 = &v24[v45];
    v48 = *((_QWORD *)v47 + 1);
    *v46 = *(_QWORD *)v47;
    v46[1] = v48;
    *((_BYTE *)v23 + v31[16]) = v24[v31[16]];
    *((_BYTE *)v23 + v31[17]) = v24[v31[17]];
    *((_BYTE *)v23 + v31[18]) = v24[v31[18]];
    *((_BYTE *)v23 + v31[19]) = v24[v31[19]];
    *((_BYTE *)v23 + v31[20]) = v24[v31[20]];
    *((_BYTE *)v23 + v31[21]) = v24[v31[21]];
    *((_BYTE *)v23 + v31[22]) = v24[v31[22]];
    *((_BYTE *)v23 + v31[23]) = v24[v31[23]];
    *((_BYTE *)v23 + v31[24]) = v24[v31[24]];
    v49 = v31[25];
    v50 = (char *)v23 + v49;
    v51 = &v24[v49];
    v50[8] = v51[8];
    *(_QWORD *)v50 = *(_QWORD *)v51;
    v52 = v31[26];
    v53 = (char *)v23 + v52;
    v54 = &v24[v52];
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v53[8] = v54[8];
    v55 = v31[27];
    v56 = (_QWORD *)((char *)v23 + v55);
    v57 = &v24[v55];
    v58 = *((_QWORD *)v57 + 1);
    *v56 = *(_QWORD *)v57;
    v56[1] = v58;
    v59 = *((_QWORD *)v57 + 3);
    v56[2] = *((_QWORD *)v57 + 2);
    v56[3] = v59;
    v60 = v31[28];
    v61 = (_QWORD *)((char *)v23 + v60);
    v62 = &v24[v60];
    v63 = *((_QWORD *)v62 + 1);
    *v61 = *(_QWORD *)v62;
    v61[1] = v63;
    *(_QWORD *)((char *)v23 + v31[29]) = *(_QWORD *)&v24[v31[29]];
    v64 = v31[30];
    v65 = (_QWORD *)((char *)v23 + v64);
    v66 = &v24[v64];
    v67 = *((_QWORD *)v66 + 1);
    *v65 = *(_QWORD *)v66;
    v65[1] = v67;
    v68 = v31[31];
    __dsta = (_QWORD *)((char *)v23 + v68);
    v69 = (uint64_t *)&v24[v68];
    v70 = *(_QWORD *)&v24[v68 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v70 >> 60 == 15)
    {
      *(_OWORD *)__dsta = *(_OWORD *)v69;
    }
    else
    {
      v71 = *v69;
      sub_1BA69D44C(*v69, v70);
      *__dsta = v71;
      __dsta[1] = v70;
    }
    v5 = v105;
    *(_QWORD *)((char *)v23 + v31[32]) = *(_QWORD *)&v24[v31[32]];
    v72 = *(int *)(v113 + 20);
    v73 = (char *)v23 + v72;
    v74 = &v24[v72];
    *v73 = v24[v72];
    v75 = *(_QWORD *)&v24[v72 + 16];
    *((_QWORD *)v73 + 1) = *(_QWORD *)&v24[v72 + 8];
    *((_QWORD *)v73 + 2) = v75;
    v76 = *(_QWORD *)&v24[v72 + 32];
    *((_QWORD *)v73 + 3) = *(_QWORD *)&v24[v72 + 24];
    *((_QWORD *)v73 + 4) = v76;
    *((_QWORD *)v73 + 5) = *(_QWORD *)&v24[v72 + 40];
    v73[48] = v24[v72 + 48];
    v77 = *(_QWORD *)&v24[v72 + 360];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77)
    {
      *(_OWORD *)(v73 + 56) = *(_OWORD *)(v74 + 56);
      v78 = *(_OWORD *)(v74 + 88);
      *(_OWORD *)(v73 + 72) = *(_OWORD *)(v74 + 72);
      *(_OWORD *)(v73 + 88) = v78;
      v79 = *(_OWORD *)(v74 + 120);
      *(_OWORD *)(v73 + 104) = *(_OWORD *)(v74 + 104);
      *(_OWORD *)(v73 + 120) = v79;
      v80 = *(_OWORD *)(v74 + 152);
      *(_OWORD *)(v73 + 136) = *(_OWORD *)(v74 + 136);
      *(_OWORD *)(v73 + 152) = v80;
      v81 = *(_OWORD *)(v74 + 184);
      *(_OWORD *)(v73 + 168) = *(_OWORD *)(v74 + 168);
      *(_OWORD *)(v73 + 184) = v81;
      v82 = *(_OWORD *)(v74 + 216);
      *(_OWORD *)(v73 + 200) = *(_OWORD *)(v74 + 200);
      *(_OWORD *)(v73 + 216) = v82;
      v83 = *(_OWORD *)(v74 + 248);
      *(_OWORD *)(v73 + 232) = *(_OWORD *)(v74 + 232);
      *(_OWORD *)(v73 + 248) = v83;
      *((_QWORD *)v73 + 33) = *((_QWORD *)v74 + 33);
      *((_OWORD *)v73 + 17) = *((_OWORD *)v74 + 17);
      *((_OWORD *)v73 + 18) = *((_OWORD *)v74 + 18);
      *((_OWORD *)v73 + 19) = *((_OWORD *)v74 + 19);
      *((_OWORD *)v73 + 20) = *((_OWORD *)v74 + 20);
      *((_OWORD *)v73 + 21) = *((_OWORD *)v74 + 21);
      v84 = *((_QWORD *)v74 + 45);
      *((_QWORD *)v73 + 44) = *((_QWORD *)v74 + 44);
      *((_QWORD *)v73 + 45) = v84;
      *((_OWORD *)v73 + 23) = *((_OWORD *)v74 + 23);
      *((_QWORD *)v73 + 48) = *((_QWORD *)v74 + 48);
      v85 = *(_OWORD *)(v74 + 392);
      v86 = *(_OWORD *)(v74 + 408);
      v87 = *(_OWORD *)(v74 + 440);
      *(_OWORD *)(v73 + 424) = *(_OWORD *)(v74 + 424);
      *(_OWORD *)(v73 + 440) = v87;
      *(_OWORD *)(v73 + 392) = v85;
      *(_OWORD *)(v73 + 408) = v86;
      v88 = *((_QWORD *)v74 + 58);
      *((_QWORD *)v73 + 57) = *((_QWORD *)v74 + 57);
      *((_QWORD *)v73 + 58) = v88;
      *((_QWORD *)v73 + 59) = *((_QWORD *)v74 + 59);
      *((_OWORD *)v73 + 30) = *((_OWORD *)v74 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v73 + 56, v74 + 56, 0x1B8uLL);
    }
    v89 = *((_QWORD *)v74 + 63);
    *((_QWORD *)v73 + 62) = *((_QWORD *)v74 + 62);
    *((_QWORD *)v73 + 63) = v89;
    *((_QWORD *)v73 + 64) = *((_QWORD *)v74 + 64);
    *((_QWORD *)v73 + 65) = *((_QWORD *)v74 + 65);
    v73[528] = v74[528];
    *((_QWORD *)v73 + 67) = *((_QWORD *)v74 + 67);
    *((_QWORD *)v73 + 68) = *((_QWORD *)v74 + 68);
    *((_QWORD *)v73 + 69) = *((_QWORD *)v74 + 69);
    *((_QWORD *)v73 + 70) = *((_QWORD *)v74 + 70);
    *((_QWORD *)v73 + 71) = *((_QWORD *)v74 + 71);
    *(_WORD *)((char *)v23 + *(int *)(v113 + 24)) = *(_WORD *)&v24[*(int *)(v113 + 24)];
    v90 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v109 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v90(v23, 0, 1, v113);
    v4 = v111;
    v10 = v112;
    v3 = v110;
  }
  v91 = v3[9];
  v92 = (_QWORD *)((char *)v5 + v91);
  v93 = (uint64_t *)&v4[v91];
  v94 = type metadata accessor for WebEmbedDataVisualization();
  v95 = *(_QWORD *)(v94 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
  {
    sub_1BA6CAB4C(0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v98 = *v93;
    if (EnumCaseMultiPayload == 1)
    {
      v99 = v93[1];
      *v92 = v98;
      v92[1] = v99;
      v100 = type metadata accessor for GenericDataVisualization();
      v101 = *(int *)(v100 + 20);
      v102 = (char *)v92 + v101;
      v103 = (char *)v93 + v101;
      swift_bridgeObjectRetain();
      v114(v102, v103, v10);
      *(_QWORD *)((char *)v92 + *(int *)(v100 + 24)) = *(uint64_t *)((char *)v93 + *(int *)(v100 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *v92 = v98;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
  }
  return v5;
}

char *sub_1BAFD5038(char *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  void (*v91)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  int v151;
  int v152;
  int EnumCaseMultiPayload;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  void (*v166)(char *, char *, uint64_t);
  unsigned int (*v168)(char *, uint64_t, uint64_t);
  void *__dst;
  uint64_t *__dsta;
  char *v171;
  int *v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);

  v4 = a2;
  v5 = a1;
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &v5[v6];
  v8 = (char *)v4 + v6;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &v5[v12];
  v14 = (char *)v4 + v12;
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&v5[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v11(v13, v14, v9);
LABEL_7:
  v19 = a3[7];
  v20 = &v5[v19];
  v21 = (char *)v4 + v19;
  v22 = v15(&v5[v19], 1, v9);
  v23 = v15(v21, 1, v9);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
LABEL_12:
    sub_1BA6EF3B0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v11(v20, v21, v9);
LABEL_13:
  v25 = a3[8];
  v26 = (uint64_t)&v5[v25];
  v27 = (char *)v4 + v25;
  v28 = type metadata accessor for DebugInspectionHeadline(0);
  v180 = *(_QWORD *)(v28 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
  v30 = v29(v26, 1, v28);
  v31 = v29((uint64_t)v27, 1, v28);
  if (!v30)
  {
    if (v31)
    {
      sub_1BA4A2E80(v26, type metadata accessor for DebugInspectionHeadline);
      goto LABEL_19;
    }
    v177 = v9;
    v179 = v28;
    v172 = a3;
    v174 = v4;
    v175 = v10;
    v40 = v5;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_QWORD *)(v26 + 8) = *((_QWORD *)v27 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v41 = *((_QWORD *)v27 + 3);
    *(_BYTE *)(v26 + 32) = v27[32];
    *(_QWORD *)(v26 + 24) = v41;
    *(_QWORD *)(v26 + 40) = *((_QWORD *)v27 + 5);
    *(_QWORD *)(v26 + 48) = *((_QWORD *)v27 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 56) = *((_QWORD *)v27 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v42 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    v43 = v42[9];
    v44 = (void *)(v26 + v43);
    v45 = &v27[v43];
    v46 = sub_1BB86C8B0();
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
    v49 = v48(v44, 1, v46);
    v50 = v48(v45, 1, v46);
    if (v49)
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_39:
        v93 = v42[10];
        v94 = (uint64_t *)(v26 + v93);
        v95 = (uint64_t *)&v27[v93];
        v96 = *(_QWORD *)&v27[v93 + 8];
        v5 = v40;
        if (*(_QWORD *)(v26 + v93 + 8) >> 60 == 15)
        {
          v10 = v175;
          if (v96 >> 60 != 15)
          {
            v97 = *v95;
            sub_1BA69D44C(*v95, v96);
            *v94 = v97;
            v94[1] = v96;
            goto LABEL_46;
          }
        }
        else
        {
          v10 = v175;
          if (v96 >> 60 != 15)
          {
            v98 = *v95;
            sub_1BA69D44C(*v95, v96);
            v99 = *v94;
            v100 = v94[1];
            *v94 = v98;
            v94[1] = v96;
            sub_1BA69D314(v99, v100);
LABEL_46:
            *(_QWORD *)(v26 + v42[11]) = *(_QWORD *)&v27[v42[11]];
            v101 = v42[12];
            v102 = v26 + v101;
            v103 = &v27[v101];
            v104 = *(_QWORD *)v103;
            *(_BYTE *)(v102 + 8) = v103[8];
            *(_QWORD *)v102 = v104;
            *(_BYTE *)(v26 + v42[13]) = v27[v42[13]];
            *(_BYTE *)(v26 + v42[14]) = v27[v42[14]];
            v105 = v42[15];
            v106 = (_QWORD *)(v26 + v105);
            v107 = &v27[v105];
            *v106 = *(_QWORD *)v107;
            v106[1] = *((_QWORD *)v107 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v26 + v42[16]) = v27[v42[16]];
            *(_BYTE *)(v26 + v42[17]) = v27[v42[17]];
            *(_BYTE *)(v26 + v42[18]) = v27[v42[18]];
            *(_BYTE *)(v26 + v42[19]) = v27[v42[19]];
            *(_BYTE *)(v26 + v42[20]) = v27[v42[20]];
            *(_BYTE *)(v26 + v42[21]) = v27[v42[21]];
            *(_BYTE *)(v26 + v42[22]) = v27[v42[22]];
            *(_BYTE *)(v26 + v42[23]) = v27[v42[23]];
            *(_BYTE *)(v26 + v42[24]) = v27[v42[24]];
            v108 = v42[25];
            v109 = v26 + v108;
            v110 = &v27[v108];
            v111 = *(_QWORD *)v110;
            *(_BYTE *)(v109 + 8) = v110[8];
            *(_QWORD *)v109 = v111;
            v112 = v42[26];
            v113 = v26 + v112;
            v114 = &v27[v112];
            v115 = *(_QWORD *)v114;
            *(_BYTE *)(v113 + 8) = v114[8];
            *(_QWORD *)v113 = v115;
            v116 = v42[27];
            v117 = (_QWORD *)(v26 + v116);
            v118 = &v27[v116];
            *v117 = *(_QWORD *)&v27[v116];
            v117[1] = *(_QWORD *)&v27[v116 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v117[2] = *((_QWORD *)v118 + 2);
            v117[3] = *((_QWORD *)v118 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v119 = v42[28];
            v120 = (_QWORD *)(v26 + v119);
            v121 = &v27[v119];
            *v120 = *(_QWORD *)v121;
            v120[1] = *((_QWORD *)v121 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v26 + v42[29]) = *(_QWORD *)&v27[v42[29]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v122 = v42[30];
            v123 = (_QWORD *)(v26 + v122);
            v124 = &v27[v122];
            *v123 = *(_QWORD *)v124;
            v123[1] = *((_QWORD *)v124 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v125 = v42[31];
            v126 = (uint64_t *)(v26 + v125);
            v127 = (uint64_t *)&v27[v125];
            v128 = *(_QWORD *)&v27[v125 + 8];
            if (*(_QWORD *)(v26 + v125 + 8) >> 60 == 15)
            {
              v129 = v179;
              if (v128 >> 60 != 15)
              {
                v130 = *v127;
                sub_1BA69D44C(*v127, v128);
                *v126 = v130;
                v126[1] = v128;
                goto LABEL_53;
              }
            }
            else
            {
              v129 = v179;
              if (v128 >> 60 != 15)
              {
                v131 = *v127;
                sub_1BA69D44C(*v127, v128);
                v132 = *v126;
                v133 = v126[1];
                *v126 = v131;
                v126[1] = v128;
                sub_1BA69D314(v132, v133);
LABEL_53:
                v9 = v177;
                *(_QWORD *)(v26 + v42[32]) = *(_QWORD *)&v27[v42[32]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v134 = *(int *)(v129 + 20);
                v135 = v26 + v134;
                v136 = &v27[v134];
                *(_BYTE *)v135 = v27[v134];
                *(_QWORD *)(v135 + 8) = *(_QWORD *)&v27[v134 + 8];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v135 + 16) = *((_QWORD *)v136 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v135 + 24) = *((_QWORD *)v136 + 3);
                *(_QWORD *)(v135 + 32) = *((_QWORD *)v136 + 4);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v135 + 40) = *((_QWORD *)v136 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(v135 + 48) = v136[48];
                v137 = *((_QWORD *)v136 + 45);
                if (*(_QWORD *)(v135 + 360))
                {
                  if (v137)
                  {
                    *(_QWORD *)(v135 + 56) = *((_QWORD *)v136 + 7);
                    *(_QWORD *)(v135 + 64) = *((_QWORD *)v136 + 8);
                    *(_QWORD *)(v135 + 72) = *((_QWORD *)v136 + 9);
                    *(_QWORD *)(v135 + 80) = *((_QWORD *)v136 + 10);
                    *(_QWORD *)(v135 + 88) = *((_QWORD *)v136 + 11);
                    *(_QWORD *)(v135 + 96) = *((_QWORD *)v136 + 12);
                    *(_QWORD *)(v135 + 104) = *((_QWORD *)v136 + 13);
                    *(_QWORD *)(v135 + 112) = *((_QWORD *)v136 + 14);
                    *(_QWORD *)(v135 + 120) = *((_QWORD *)v136 + 15);
                    *(_QWORD *)(v135 + 128) = *((_QWORD *)v136 + 16);
                    *(_QWORD *)(v135 + 136) = *((_QWORD *)v136 + 17);
                    *(_QWORD *)(v135 + 144) = *((_QWORD *)v136 + 18);
                    *(_QWORD *)(v135 + 152) = *((_QWORD *)v136 + 19);
                    *(_QWORD *)(v135 + 160) = *((_QWORD *)v136 + 20);
                    *(_QWORD *)(v135 + 168) = *((_QWORD *)v136 + 21);
                    *(_QWORD *)(v135 + 176) = *((_QWORD *)v136 + 22);
                    *(_QWORD *)(v135 + 184) = *((_QWORD *)v136 + 23);
                    *(_QWORD *)(v135 + 192) = *((_QWORD *)v136 + 24);
                    *(_QWORD *)(v135 + 200) = *((_QWORD *)v136 + 25);
                    *(_QWORD *)(v135 + 208) = *((_QWORD *)v136 + 26);
                    *(_QWORD *)(v135 + 216) = *((_QWORD *)v136 + 27);
                    *(_QWORD *)(v135 + 224) = *((_QWORD *)v136 + 28);
                    *(_QWORD *)(v135 + 232) = *((_QWORD *)v136 + 29);
                    *(_QWORD *)(v135 + 240) = *((_QWORD *)v136 + 30);
                    *(_QWORD *)(v135 + 248) = *((_QWORD *)v136 + 31);
                    *(_QWORD *)(v135 + 256) = *((_QWORD *)v136 + 32);
                    *(_QWORD *)(v135 + 264) = *((_QWORD *)v136 + 33);
                    *(_QWORD *)(v135 + 272) = *((_QWORD *)v136 + 34);
                    *(_QWORD *)(v135 + 280) = *((_QWORD *)v136 + 35);
                    *(_QWORD *)(v135 + 288) = *((_QWORD *)v136 + 36);
                    *(_QWORD *)(v135 + 296) = *((_QWORD *)v136 + 37);
                    *(_QWORD *)(v135 + 304) = *((_QWORD *)v136 + 38);
                    *(_QWORD *)(v135 + 312) = *((_QWORD *)v136 + 39);
                    *(_QWORD *)(v135 + 320) = *((_QWORD *)v136 + 40);
                    *(_QWORD *)(v135 + 328) = *((_QWORD *)v136 + 41);
                    *(_QWORD *)(v135 + 336) = *((_QWORD *)v136 + 42);
                    *(_QWORD *)(v135 + 344) = *((_QWORD *)v136 + 43);
                    *(_QWORD *)(v135 + 352) = *((_QWORD *)v136 + 44);
                    *(_QWORD *)(v135 + 360) = *((_QWORD *)v136 + 45);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v135 + 368) = *((_QWORD *)v136 + 46);
                    *(_QWORD *)(v135 + 376) = *((_QWORD *)v136 + 47);
                    *(_QWORD *)(v135 + 384) = *((_QWORD *)v136 + 48);
                    *(_QWORD *)(v135 + 392) = *((_QWORD *)v136 + 49);
                    *(_QWORD *)(v135 + 400) = *((_QWORD *)v136 + 50);
                    *(_QWORD *)(v135 + 408) = *((_QWORD *)v136 + 51);
                    *(_QWORD *)(v135 + 416) = *((_QWORD *)v136 + 52);
                    *(_QWORD *)(v135 + 424) = *((_QWORD *)v136 + 53);
                    *(_QWORD *)(v135 + 432) = *((_QWORD *)v136 + 54);
                    *(_QWORD *)(v135 + 440) = *((_QWORD *)v136 + 55);
                    *(_QWORD *)(v135 + 448) = *((_QWORD *)v136 + 56);
                    *(_QWORD *)(v135 + 456) = *((_QWORD *)v136 + 57);
                    *(_QWORD *)(v135 + 464) = *((_QWORD *)v136 + 58);
                    *(_QWORD *)(v135 + 472) = *((_QWORD *)v136 + 59);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v135 + 480) = *((_QWORD *)v136 + 60);
                    *(_QWORD *)(v135 + 488) = *((_QWORD *)v136 + 61);
LABEL_60:
                    v4 = v174;
                    *(_QWORD *)(v135 + 496) = *((_QWORD *)v136 + 62);
                    *(_QWORD *)(v135 + 504) = *((_QWORD *)v136 + 63);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v135 + 512) = *((_QWORD *)v136 + 64);
                    *(_QWORD *)(v135 + 520) = *((_QWORD *)v136 + 65);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(v135 + 528) = v136[528];
                    *(_QWORD *)(v135 + 536) = *((_QWORD *)v136 + 67);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v135 + 544) = *((_QWORD *)v136 + 68);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v135 + 552) = *((_QWORD *)v136 + 69);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v135 + 560) = *((_QWORD *)v136 + 70);
                    *(_QWORD *)(v135 + 568) = *((_QWORD *)v136 + 71);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v141 = *(int *)(v179 + 24);
                    v142 = (char *)(v26 + v141);
                    v143 = &v27[v141];
                    *v142 = *v143;
                    v142[1] = v143[1];
                    a3 = v172;
                    goto LABEL_61;
                  }
                  sub_1BAFD6454(v135 + 56);
                }
                else if (v137)
                {
                  *(_QWORD *)(v135 + 56) = *((_QWORD *)v136 + 7);
                  *(_QWORD *)(v135 + 64) = *((_QWORD *)v136 + 8);
                  *(_QWORD *)(v135 + 72) = *((_QWORD *)v136 + 9);
                  *(_QWORD *)(v135 + 80) = *((_QWORD *)v136 + 10);
                  *(_QWORD *)(v135 + 88) = *((_QWORD *)v136 + 11);
                  *(_QWORD *)(v135 + 96) = *((_QWORD *)v136 + 12);
                  *(_QWORD *)(v135 + 104) = *((_QWORD *)v136 + 13);
                  *(_QWORD *)(v135 + 112) = *((_QWORD *)v136 + 14);
                  *(_QWORD *)(v135 + 120) = *((_QWORD *)v136 + 15);
                  *(_QWORD *)(v135 + 128) = *((_QWORD *)v136 + 16);
                  *(_QWORD *)(v135 + 136) = *((_QWORD *)v136 + 17);
                  *(_QWORD *)(v135 + 144) = *((_QWORD *)v136 + 18);
                  *(_QWORD *)(v135 + 152) = *((_QWORD *)v136 + 19);
                  *(_QWORD *)(v135 + 160) = *((_QWORD *)v136 + 20);
                  *(_QWORD *)(v135 + 168) = *((_QWORD *)v136 + 21);
                  *(_QWORD *)(v135 + 176) = *((_QWORD *)v136 + 22);
                  *(_QWORD *)(v135 + 184) = *((_QWORD *)v136 + 23);
                  *(_QWORD *)(v135 + 192) = *((_QWORD *)v136 + 24);
                  *(_QWORD *)(v135 + 200) = *((_QWORD *)v136 + 25);
                  *(_QWORD *)(v135 + 208) = *((_QWORD *)v136 + 26);
                  *(_QWORD *)(v135 + 216) = *((_QWORD *)v136 + 27);
                  *(_QWORD *)(v135 + 224) = *((_QWORD *)v136 + 28);
                  *(_QWORD *)(v135 + 232) = *((_QWORD *)v136 + 29);
                  *(_QWORD *)(v135 + 240) = *((_QWORD *)v136 + 30);
                  *(_QWORD *)(v135 + 248) = *((_QWORD *)v136 + 31);
                  *(_QWORD *)(v135 + 256) = *((_QWORD *)v136 + 32);
                  *(_QWORD *)(v135 + 264) = *((_QWORD *)v136 + 33);
                  *(_QWORD *)(v135 + 272) = *((_QWORD *)v136 + 34);
                  *(_QWORD *)(v135 + 280) = *((_QWORD *)v136 + 35);
                  *(_QWORD *)(v135 + 288) = *((_QWORD *)v136 + 36);
                  *(_QWORD *)(v135 + 296) = *((_QWORD *)v136 + 37);
                  *(_QWORD *)(v135 + 304) = *((_QWORD *)v136 + 38);
                  *(_QWORD *)(v135 + 312) = *((_QWORD *)v136 + 39);
                  *(_QWORD *)(v135 + 320) = *((_QWORD *)v136 + 40);
                  *(_QWORD *)(v135 + 328) = *((_QWORD *)v136 + 41);
                  *(_QWORD *)(v135 + 336) = *((_QWORD *)v136 + 42);
                  *(_QWORD *)(v135 + 344) = *((_QWORD *)v136 + 43);
                  *(_QWORD *)(v135 + 352) = *((_QWORD *)v136 + 44);
                  *(_QWORD *)(v135 + 360) = *((_QWORD *)v136 + 45);
                  *(_QWORD *)(v135 + 368) = *((_QWORD *)v136 + 46);
                  *(_QWORD *)(v135 + 376) = *((_QWORD *)v136 + 47);
                  *(_QWORD *)(v135 + 384) = *((_QWORD *)v136 + 48);
                  v138 = *(_OWORD *)(v136 + 392);
                  v139 = *(_OWORD *)(v136 + 408);
                  v140 = *(_OWORD *)(v136 + 440);
                  *(_OWORD *)(v135 + 424) = *(_OWORD *)(v136 + 424);
                  *(_OWORD *)(v135 + 440) = v140;
                  *(_OWORD *)(v135 + 392) = v138;
                  *(_OWORD *)(v135 + 408) = v139;
                  *(_QWORD *)(v135 + 456) = *((_QWORD *)v136 + 57);
                  *(_QWORD *)(v135 + 464) = *((_QWORD *)v136 + 58);
                  *(_QWORD *)(v135 + 472) = *((_QWORD *)v136 + 59);
                  *(_QWORD *)(v135 + 480) = *((_QWORD *)v136 + 60);
                  *(_QWORD *)(v135 + 488) = *((_QWORD *)v136 + 61);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_60;
                }
                memcpy((void *)(v135 + 56), v136 + 56, 0x1B8uLL);
                goto LABEL_60;
              }
              sub_1BA92BD1C((uint64_t)v126);
            }
            *(_OWORD *)v126 = *(_OWORD *)v127;
            goto LABEL_53;
          }
          sub_1BA92BD1C((uint64_t)v94);
        }
        *(_OWORD *)v94 = *(_OWORD *)v95;
        goto LABEL_46;
      }
      (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_39;
  }
  if (v31)
  {
LABEL_19:
    sub_1BAFD3C84(0);
    memcpy((void *)v26, v27, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_61;
  }
  v176 = v9;
  v178 = v28;
  v173 = v4;
  v171 = v5;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = *((_QWORD *)v27 + 1);
  *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
  v32 = *((_QWORD *)v27 + 3);
  *(_BYTE *)(v26 + 32) = v27[32];
  *(_QWORD *)(v26 + 24) = v32;
  *(_QWORD *)(v26 + 40) = *((_QWORD *)v27 + 5);
  *(_QWORD *)(v26 + 48) = *((_QWORD *)v27 + 6);
  *(_QWORD *)(v26 + 56) = *((_QWORD *)v27 + 7);
  v33 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v34 = v33[9];
  __dst = (void *)(v26 + v34);
  v35 = &v27[v34];
  v36 = sub_1BB86C8B0();
  v37 = *(_QWORD *)(v36 - 8);
  v168 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v168(v35, 1, v36))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  v51 = v33[10];
  v52 = v26 + v51;
  v53 = &v27[v51];
  v54 = *((_QWORD *)v53 + 1);
  if (v54 >> 60 == 15)
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  else
  {
    v55 = *(_QWORD *)v53;
    sub_1BA69D44C(*(_QWORD *)v53, *((_QWORD *)v53 + 1));
    *(_QWORD *)v52 = v55;
    *(_QWORD *)(v52 + 8) = v54;
  }
  *(_QWORD *)(v26 + v33[11]) = *(_QWORD *)&v27[v33[11]];
  v56 = v33[12];
  v57 = v26 + v56;
  v58 = &v27[v56];
  v59 = *(_QWORD *)v58;
  *(_BYTE *)(v57 + 8) = v58[8];
  *(_QWORD *)v57 = v59;
  *(_BYTE *)(v26 + v33[13]) = v27[v33[13]];
  *(_BYTE *)(v26 + v33[14]) = v27[v33[14]];
  v60 = v33[15];
  v61 = (_QWORD *)(v26 + v60);
  v62 = &v27[v60];
  *v61 = *(_QWORD *)v62;
  v61[1] = *((_QWORD *)v62 + 1);
  *(_BYTE *)(v26 + v33[16]) = v27[v33[16]];
  *(_BYTE *)(v26 + v33[17]) = v27[v33[17]];
  *(_BYTE *)(v26 + v33[18]) = v27[v33[18]];
  *(_BYTE *)(v26 + v33[19]) = v27[v33[19]];
  *(_BYTE *)(v26 + v33[20]) = v27[v33[20]];
  *(_BYTE *)(v26 + v33[21]) = v27[v33[21]];
  *(_BYTE *)(v26 + v33[22]) = v27[v33[22]];
  *(_BYTE *)(v26 + v33[23]) = v27[v33[23]];
  *(_BYTE *)(v26 + v33[24]) = v27[v33[24]];
  v63 = v33[25];
  v64 = v26 + v63;
  v65 = &v27[v63];
  v66 = *(_QWORD *)v65;
  *(_BYTE *)(v64 + 8) = v65[8];
  *(_QWORD *)v64 = v66;
  v67 = v33[26];
  v68 = v26 + v67;
  v69 = &v27[v67];
  v70 = *(_QWORD *)v69;
  *(_BYTE *)(v68 + 8) = v69[8];
  *(_QWORD *)v68 = v70;
  v71 = v33[27];
  v72 = (_QWORD *)(v26 + v71);
  v73 = &v27[v71];
  *v72 = *(_QWORD *)v73;
  v72[1] = *((_QWORD *)v73 + 1);
  v72[2] = *((_QWORD *)v73 + 2);
  v72[3] = *((_QWORD *)v73 + 3);
  v74 = v33[28];
  v75 = (_QWORD *)(v26 + v74);
  v76 = &v27[v74];
  *v75 = *(_QWORD *)v76;
  v75[1] = *((_QWORD *)v76 + 1);
  *(_QWORD *)(v26 + v33[29]) = *(_QWORD *)&v27[v33[29]];
  v77 = v33[30];
  v78 = (_QWORD *)(v26 + v77);
  v79 = &v27[v77];
  *v78 = *(_QWORD *)v79;
  v78[1] = *((_QWORD *)v79 + 1);
  v80 = v33[31];
  __dsta = (uint64_t *)(v26 + v80);
  v81 = (uint64_t *)&v27[v80];
  v82 = *(_QWORD *)&v27[v80 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v82 >> 60 == 15)
  {
    *(_OWORD *)__dsta = *(_OWORD *)v81;
  }
  else
  {
    v83 = *v81;
    sub_1BA69D44C(*v81, v82);
    *__dsta = v83;
    __dsta[1] = v82;
  }
  *(_QWORD *)(v26 + v33[32]) = *(_QWORD *)&v27[v33[32]];
  v84 = *(int *)(v178 + 20);
  v85 = v26 + v84;
  v86 = &v27[v84];
  *(_BYTE *)v85 = v27[v84];
  *(_QWORD *)(v85 + 8) = *(_QWORD *)&v27[v84 + 8];
  *(_QWORD *)(v85 + 16) = *(_QWORD *)&v27[v84 + 16];
  *(_QWORD *)(v85 + 24) = *(_QWORD *)&v27[v84 + 24];
  *(_QWORD *)(v85 + 32) = *(_QWORD *)&v27[v84 + 32];
  *(_QWORD *)(v85 + 40) = *(_QWORD *)&v27[v84 + 40];
  *(_BYTE *)(v85 + 48) = v27[v84 + 48];
  v87 = *(_QWORD *)&v27[v84 + 360];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v171;
  if (v87)
  {
    *(_QWORD *)(v85 + 56) = *((_QWORD *)v86 + 7);
    *(_QWORD *)(v85 + 64) = *((_QWORD *)v86 + 8);
    *(_QWORD *)(v85 + 72) = *((_QWORD *)v86 + 9);
    *(_QWORD *)(v85 + 80) = *((_QWORD *)v86 + 10);
    *(_QWORD *)(v85 + 88) = *((_QWORD *)v86 + 11);
    *(_QWORD *)(v85 + 96) = *((_QWORD *)v86 + 12);
    *(_QWORD *)(v85 + 104) = *((_QWORD *)v86 + 13);
    *(_QWORD *)(v85 + 112) = *((_QWORD *)v86 + 14);
    *(_QWORD *)(v85 + 120) = *((_QWORD *)v86 + 15);
    *(_QWORD *)(v85 + 128) = *((_QWORD *)v86 + 16);
    *(_QWORD *)(v85 + 136) = *((_QWORD *)v86 + 17);
    *(_QWORD *)(v85 + 144) = *((_QWORD *)v86 + 18);
    *(_QWORD *)(v85 + 152) = *((_QWORD *)v86 + 19);
    *(_QWORD *)(v85 + 160) = *((_QWORD *)v86 + 20);
    *(_QWORD *)(v85 + 168) = *((_QWORD *)v86 + 21);
    *(_QWORD *)(v85 + 176) = *((_QWORD *)v86 + 22);
    *(_QWORD *)(v85 + 184) = *((_QWORD *)v86 + 23);
    *(_QWORD *)(v85 + 192) = *((_QWORD *)v86 + 24);
    *(_QWORD *)(v85 + 200) = *((_QWORD *)v86 + 25);
    *(_QWORD *)(v85 + 208) = *((_QWORD *)v86 + 26);
    *(_QWORD *)(v85 + 216) = *((_QWORD *)v86 + 27);
    *(_QWORD *)(v85 + 224) = *((_QWORD *)v86 + 28);
    *(_QWORD *)(v85 + 232) = *((_QWORD *)v86 + 29);
    *(_QWORD *)(v85 + 240) = *((_QWORD *)v86 + 30);
    *(_QWORD *)(v85 + 248) = *((_QWORD *)v86 + 31);
    *(_QWORD *)(v85 + 256) = *((_QWORD *)v86 + 32);
    *(_QWORD *)(v85 + 264) = *((_QWORD *)v86 + 33);
    *(_QWORD *)(v85 + 272) = *((_QWORD *)v86 + 34);
    *(_QWORD *)(v85 + 280) = *((_QWORD *)v86 + 35);
    *(_QWORD *)(v85 + 288) = *((_QWORD *)v86 + 36);
    *(_QWORD *)(v85 + 296) = *((_QWORD *)v86 + 37);
    *(_QWORD *)(v85 + 304) = *((_QWORD *)v86 + 38);
    *(_QWORD *)(v85 + 312) = *((_QWORD *)v86 + 39);
    *(_QWORD *)(v85 + 320) = *((_QWORD *)v86 + 40);
    *(_QWORD *)(v85 + 328) = *((_QWORD *)v86 + 41);
    *(_QWORD *)(v85 + 336) = *((_QWORD *)v86 + 42);
    *(_QWORD *)(v85 + 344) = *((_QWORD *)v86 + 43);
    *(_QWORD *)(v85 + 352) = *((_QWORD *)v86 + 44);
    *(_QWORD *)(v85 + 360) = *((_QWORD *)v86 + 45);
    *(_QWORD *)(v85 + 368) = *((_QWORD *)v86 + 46);
    *(_QWORD *)(v85 + 376) = *((_QWORD *)v86 + 47);
    *(_QWORD *)(v85 + 384) = *((_QWORD *)v86 + 48);
    v88 = *(_OWORD *)(v86 + 392);
    v89 = *(_OWORD *)(v86 + 408);
    v90 = *(_OWORD *)(v86 + 440);
    *(_OWORD *)(v85 + 424) = *(_OWORD *)(v86 + 424);
    *(_OWORD *)(v85 + 440) = v90;
    *(_OWORD *)(v85 + 392) = v88;
    *(_OWORD *)(v85 + 408) = v89;
    *(_QWORD *)(v85 + 456) = *((_QWORD *)v86 + 57);
    *(_QWORD *)(v85 + 464) = *((_QWORD *)v86 + 58);
    *(_QWORD *)(v85 + 472) = *((_QWORD *)v86 + 59);
    *(_QWORD *)(v85 + 480) = *((_QWORD *)v86 + 60);
    *(_QWORD *)(v85 + 488) = *((_QWORD *)v86 + 61);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(v85 + 56), v86 + 56, 0x1B8uLL);
  }
  *(_QWORD *)(v85 + 496) = *((_QWORD *)v86 + 62);
  *(_QWORD *)(v85 + 504) = *((_QWORD *)v86 + 63);
  *(_QWORD *)(v85 + 512) = *((_QWORD *)v86 + 64);
  *(_QWORD *)(v85 + 520) = *((_QWORD *)v86 + 65);
  *(_BYTE *)(v85 + 528) = v86[528];
  *(_QWORD *)(v85 + 536) = *((_QWORD *)v86 + 67);
  *(_QWORD *)(v85 + 544) = *((_QWORD *)v86 + 68);
  *(_QWORD *)(v85 + 552) = *((_QWORD *)v86 + 69);
  *(_QWORD *)(v85 + 560) = *((_QWORD *)v86 + 70);
  *(_QWORD *)(v85 + 568) = *((_QWORD *)v86 + 71);
  *(_WORD *)(v26 + *(int *)(v178 + 24)) = *(_WORD *)&v27[*(int *)(v178 + 24)];
  v91 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v180 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v91(v26, 0, 1, v178);
  v9 = v176;
  v4 = v173;
LABEL_61:
  v144 = a3[9];
  v145 = &v5[v144];
  v146 = (_QWORD *)((char *)v4 + v144);
  v147 = type metadata accessor for WebEmbedDataVisualization();
  v148 = (char *)v4;
  v149 = *(_QWORD *)(v147 - 8);
  v150 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v149 + 48);
  v151 = v150(v145, 1, v147);
  v152 = v150((char *)v146, 1, v147);
  if (v151)
  {
    if (!v152)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v145 = *v146;
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v145 + 1) = v146[1];
        v154 = type metadata accessor for GenericDataVisualization();
        v155 = *(int *)(v154 + 20);
        v156 = v10;
        v157 = &v145[v155];
        v158 = (char *)v146 + v155;
        v181 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
        swift_bridgeObjectRetain();
        v181(v157, v158, v9);
        *(_QWORD *)&v145[*(int *)(v154 + 24)] = *(_QWORD *)((char *)v146 + *(int *)(v154 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v145, 0, 1, v147);
      return v5;
    }
LABEL_67:
    sub_1BA6CAB4C(0);
    memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    return v5;
  }
  if (v152)
  {
    sub_1BA4A2E80((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_67;
  }
  if (v5 != v148)
  {
    sub_1BA4A2E80((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v160 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v145 = *v146;
    if (v160 == 1)
    {
      *((_QWORD *)v145 + 1) = v146[1];
      v161 = type metadata accessor for GenericDataVisualization();
      v162 = *(int *)(v161 + 20);
      v163 = v10;
      v164 = &v145[v162];
      v165 = (char *)v146 + v162;
      v166 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
      swift_bridgeObjectRetain();
      v166(v164, v165, v9);
      *(_QWORD *)&v145[*(int *)(v161 + 24)] = *(_QWORD *)((char *)v146 + *(int *)(v161 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_1BAFD6454(uint64_t a1)
{
  destroy for DebugInspectionScoreProfile();
  return a1;
}

_OWORD *sub_1BAFD6488(_OWORD *a1, char *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _OWORD *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  _OWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  int *v56;
  void (*v57)(char *, char *, uint64_t);
  char *__dst;

  v3 = a3;
  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = v3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v15(&a2[v12], 1, v9))
  {
    sub_1BA6EF3B0();
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v17 = v3[7];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  if (v15(&a2[v17], 1, v9))
  {
    sub_1BA6EF3B0();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v11(v18, v19, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v21 = v3[8];
  v22 = (_OWORD *)((char *)a1 + v21);
  v23 = &a2[v21];
  v24 = type metadata accessor for DebugInspectionHeadline(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BAFD3C84(0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v55 = v25;
    v56 = v3;
    v57 = v11;
    *v22 = *(_OWORD *)v23;
    v27 = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 3) = v27;
    *((_BYTE *)v22 + 32) = v23[32];
    *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)(v23 + 40);
    *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
    v28 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    v29 = v28[9];
    __dst = (char *)v22 + v29;
    v30 = &v23[v29];
    v31 = sub_1BB86C8B0();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dst, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    *(_OWORD *)((char *)v22 + v28[10]) = *(_OWORD *)&v23[v28[10]];
    *(_QWORD *)((char *)v22 + v28[11]) = *(_QWORD *)&v23[v28[11]];
    v34 = v28[12];
    v35 = (char *)v22 + v34;
    v36 = &v23[v34];
    v35[8] = v36[8];
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_BYTE *)v22 + v28[13]) = v23[v28[13]];
    *((_BYTE *)v22 + v28[14]) = v23[v28[14]];
    *(_OWORD *)((char *)v22 + v28[15]) = *(_OWORD *)&v23[v28[15]];
    *((_BYTE *)v22 + v28[16]) = v23[v28[16]];
    *((_BYTE *)v22 + v28[17]) = v23[v28[17]];
    *((_BYTE *)v22 + v28[18]) = v23[v28[18]];
    *((_BYTE *)v22 + v28[19]) = v23[v28[19]];
    *((_BYTE *)v22 + v28[20]) = v23[v28[20]];
    *((_BYTE *)v22 + v28[21]) = v23[v28[21]];
    *((_BYTE *)v22 + v28[22]) = v23[v28[22]];
    *((_BYTE *)v22 + v28[23]) = v23[v28[23]];
    *((_BYTE *)v22 + v28[24]) = v23[v28[24]];
    v37 = v28[25];
    v38 = (char *)v22 + v37;
    v39 = &v23[v37];
    v38[8] = v39[8];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v40 = v28[26];
    v41 = (char *)v22 + v40;
    v42 = &v23[v40];
    v41[8] = v42[8];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v43 = v28[27];
    v44 = (_OWORD *)((char *)v22 + v43);
    v45 = &v23[v43];
    v46 = *((_OWORD *)v45 + 1);
    *v44 = *(_OWORD *)v45;
    v44[1] = v46;
    *(_OWORD *)((char *)v22 + v28[28]) = *(_OWORD *)&v23[v28[28]];
    *(_QWORD *)((char *)v22 + v28[29]) = *(_QWORD *)&v23[v28[29]];
    *(_OWORD *)((char *)v22 + v28[30]) = *(_OWORD *)&v23[v28[30]];
    *(_OWORD *)((char *)v22 + v28[31]) = *(_OWORD *)&v23[v28[31]];
    *(_QWORD *)((char *)v22 + v28[32]) = *(_QWORD *)&v23[v28[32]];
    memcpy((char *)v22 + *(int *)(v24 + 20), &v23[*(int *)(v24 + 20)], 0x240uLL);
    *(_WORD *)((char *)v22 + *(int *)(v24 + 24)) = *(_WORD *)&v23[*(int *)(v24 + 24)];
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v22, 0, 1, v24);
    v3 = v56;
    v11 = v57;
  }
  v47 = v3[9];
  v48 = (_OWORD *)((char *)a1 + v47);
  v49 = &a2[v47];
  v50 = type metadata accessor for WebEmbedDataVisualization();
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_1BA6CAB4C(0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v48 = *(_OWORD *)v49;
      v53 = type metadata accessor for GenericDataVisualization();
      v11((char *)v48 + *(int *)(v53 + 20), &v49[*(int *)(v53 + 20)], v9);
      *(_QWORD *)((char *)v48 + *(int *)(v53 + 24)) = *(_QWORD *)&v49[*(int *)(v53 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(_QWORD *)(v51 + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  return a1;
}

char *sub_1BAFD6974(char *a1, char *a2, int *a3)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  uint64_t v53;
  size_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _OWORD *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(char *, uint64_t, uint64_t);
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  uint64_t v137;
  void *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;

  v4 = a2;
  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &v4[v7];
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &v4[v13];
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v16(&a1[v13], 1, v10);
  v17 = v16(v15, 1, v10);
  if ((_DWORD)v8)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &v4[v19];
  v22 = v16(&a1[v19], 1, v10);
  v23 = v16(v21, 1, v10);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v21, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
LABEL_12:
    sub_1BA6EF3B0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v12(v20, v21, v10);
LABEL_13:
  v146 = a3;
  v25 = a3[8];
  v26 = (uint64_t)&a1[v25];
  v27 = &v4[v25];
  v28 = type metadata accessor for DebugInspectionHeadline(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_1BA4A2E80(v26, type metadata accessor for DebugInspectionHeadline);
      goto LABEL_19;
    }
    v143 = v11;
    v145 = v28;
    v141 = v4;
    v43 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_QWORD *)(v26 + 8) = v43;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 24) = *((_QWORD *)v27 + 3);
    *(_BYTE *)(v26 + 32) = v27[32];
    v44 = *((_QWORD *)v27 + 6);
    *(_QWORD *)(v26 + 40) = *((_QWORD *)v27 + 5);
    *(_QWORD *)(v26 + 48) = v44;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 56) = *((_QWORD *)v27 + 7);
    swift_bridgeObjectRelease();
    v45 = (int *)type metadata accessor for DebugInspectionArticleData(0);
    v46 = v45[9];
    v47 = (void *)(v26 + v46);
    v48 = &v27[v46];
    v49 = sub_1BB86C8B0();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
    v139 = v47;
    LODWORD(v47) = v51(v47, 1, v49);
    v52 = v51(v48, 1, v49);
    if ((_DWORD)v47)
    {
      if (v52)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v54 = *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64);
        v55 = v139;
LABEL_29:
        memcpy(v55, v48, v54);
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v139, v48, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v139, 0, 1, v49);
    }
    else
    {
      if (v52)
      {
        (*(void (**)(void *, uint64_t))(v50 + 8))(v139, v49);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v54 = *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64);
        v55 = v139;
        goto LABEL_29;
      }
      (*(void (**)(void *, char *, uint64_t))(v50 + 40))(v139, v48, v49);
    }
LABEL_32:
    v70 = v45[10];
    v71 = (uint64_t *)(v26 + v70);
    v72 = (uint64_t *)&v27[v70];
    v73 = *(_QWORD *)(v26 + v70 + 8);
    v4 = v141;
    if (v73 >> 60 != 15)
    {
      v74 = v72[1];
      if (v74 >> 60 != 15)
      {
        v75 = *v71;
        *v71 = *v72;
        v71[1] = v74;
        sub_1BA69D314(v75, v73);
LABEL_37:
        *(_QWORD *)(v26 + v45[11]) = *(_QWORD *)&v27[v45[11]];
        v76 = v45[12];
        v77 = v26 + v76;
        v78 = &v27[v76];
        *(_QWORD *)v77 = *(_QWORD *)v78;
        *(_BYTE *)(v77 + 8) = v78[8];
        *(_BYTE *)(v26 + v45[13]) = v27[v45[13]];
        *(_BYTE *)(v26 + v45[14]) = v27[v45[14]];
        v79 = v45[15];
        v80 = (_QWORD *)(v26 + v79);
        v81 = &v27[v79];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        *v80 = v83;
        v80[1] = v82;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v26 + v45[16]) = v27[v45[16]];
        *(_BYTE *)(v26 + v45[17]) = v27[v45[17]];
        *(_BYTE *)(v26 + v45[18]) = v27[v45[18]];
        *(_BYTE *)(v26 + v45[19]) = v27[v45[19]];
        *(_BYTE *)(v26 + v45[20]) = v27[v45[20]];
        *(_BYTE *)(v26 + v45[21]) = v27[v45[21]];
        *(_BYTE *)(v26 + v45[22]) = v27[v45[22]];
        *(_BYTE *)(v26 + v45[23]) = v27[v45[23]];
        *(_BYTE *)(v26 + v45[24]) = v27[v45[24]];
        v84 = v45[25];
        v85 = v26 + v84;
        v86 = &v27[v84];
        *(_QWORD *)v85 = *(_QWORD *)v86;
        *(_BYTE *)(v85 + 8) = v86[8];
        v87 = v45[26];
        v88 = v26 + v87;
        v89 = &v27[v87];
        *(_QWORD *)v88 = *(_QWORD *)v89;
        *(_BYTE *)(v88 + 8) = v89[8];
        v90 = v45[27];
        v91 = (_QWORD *)(v26 + v90);
        v92 = &v27[v90];
        v93 = *(_QWORD *)&v27[v90 + 8];
        *v91 = *(_QWORD *)&v27[v90];
        v91[1] = v93;
        swift_bridgeObjectRelease();
        v94 = *((_QWORD *)v92 + 3);
        v91[2] = *((_QWORD *)v92 + 2);
        v91[3] = v94;
        swift_bridgeObjectRelease();
        v95 = v45[28];
        v96 = (_QWORD *)(v26 + v95);
        v97 = &v27[v95];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        *v96 = v99;
        v96[1] = v98;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v26 + v45[29]) = *(_QWORD *)&v27[v45[29]];
        swift_bridgeObjectRelease();
        v100 = v45[30];
        v101 = (_QWORD *)(v26 + v100);
        v102 = &v27[v100];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        *v101 = v104;
        v101[1] = v103;
        swift_bridgeObjectRelease();
        v105 = v45[31];
        v106 = v26 + v105;
        v107 = &v27[v105];
        v108 = *(_QWORD *)(v26 + v105 + 8);
        if (v108 >> 60 == 15)
        {
          *(_OWORD *)v106 = *(_OWORD *)v107;
          v42 = v146;
        }
        else
        {
          v109 = *((_QWORD *)v107 + 1);
          v42 = v146;
          if (v109 >> 60 == 15)
          {
            sub_1BA92BD1C(v106);
            *(_OWORD *)v106 = *(_OWORD *)v107;
          }
          else
          {
            v110 = *(_QWORD *)v106;
            *(_QWORD *)v106 = *(_QWORD *)v107;
            *(_QWORD *)(v106 + 8) = v109;
            sub_1BA69D314(v110, v108);
          }
        }
        *(_QWORD *)(v26 + v45[32]) = *(_QWORD *)&v27[v45[32]];
        swift_bridgeObjectRelease();
        v111 = *(int *)(v145 + 20);
        v112 = v26 + v111;
        v113 = &v27[v111];
        *(_BYTE *)v112 = v27[v111];
        *(_QWORD *)(v112 + 8) = *(_QWORD *)&v27[v111 + 8];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v112 + 16) = *((_QWORD *)v113 + 2);
        swift_bridgeObjectRelease();
        v114 = *((_QWORD *)v113 + 4);
        *(_QWORD *)(v112 + 24) = *((_QWORD *)v113 + 3);
        *(_QWORD *)(v112 + 32) = v114;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v112 + 40) = *((_QWORD *)v113 + 5);
        swift_bridgeObjectRelease();
        *(_BYTE *)(v112 + 48) = v113[48];
        if (*(_QWORD *)(v112 + 360))
        {
          if (*((_QWORD *)v113 + 45))
          {
            *(_OWORD *)(v112 + 56) = *(_OWORD *)(v113 + 56);
            v115 = *(_OWORD *)(v113 + 88);
            *(_OWORD *)(v112 + 72) = *(_OWORD *)(v113 + 72);
            *(_OWORD *)(v112 + 88) = v115;
            v116 = *(_OWORD *)(v113 + 120);
            *(_OWORD *)(v112 + 104) = *(_OWORD *)(v113 + 104);
            *(_OWORD *)(v112 + 120) = v116;
            v117 = *(_OWORD *)(v113 + 152);
            *(_OWORD *)(v112 + 136) = *(_OWORD *)(v113 + 136);
            *(_OWORD *)(v112 + 152) = v117;
            v118 = *(_OWORD *)(v113 + 184);
            *(_OWORD *)(v112 + 168) = *(_OWORD *)(v113 + 168);
            *(_OWORD *)(v112 + 184) = v118;
            v119 = *(_OWORD *)(v113 + 216);
            *(_OWORD *)(v112 + 200) = *(_OWORD *)(v113 + 200);
            *(_OWORD *)(v112 + 216) = v119;
            v120 = *(_OWORD *)(v113 + 248);
            *(_OWORD *)(v112 + 232) = *(_OWORD *)(v113 + 232);
            *(_OWORD *)(v112 + 248) = v120;
            *(_QWORD *)(v112 + 264) = *((_QWORD *)v113 + 33);
            *(_OWORD *)(v112 + 272) = *((_OWORD *)v113 + 17);
            *(_OWORD *)(v112 + 288) = *((_OWORD *)v113 + 18);
            *(_OWORD *)(v112 + 304) = *((_OWORD *)v113 + 19);
            *(_OWORD *)(v112 + 320) = *((_OWORD *)v113 + 20);
            *(_OWORD *)(v112 + 336) = *((_OWORD *)v113 + 21);
            v121 = *((_QWORD *)v113 + 45);
            *(_QWORD *)(v112 + 352) = *((_QWORD *)v113 + 44);
            *(_QWORD *)(v112 + 360) = v121;
            swift_bridgeObjectRelease();
            *(_OWORD *)(v112 + 368) = *((_OWORD *)v113 + 23);
            *(_OWORD *)(v112 + 384) = *((_OWORD *)v113 + 24);
            *(_OWORD *)(v112 + 400) = *((_OWORD *)v113 + 25);
            *(_OWORD *)(v112 + 416) = *((_OWORD *)v113 + 26);
            *(_OWORD *)(v112 + 432) = *((_OWORD *)v113 + 27);
            *(_QWORD *)(v112 + 448) = *((_QWORD *)v113 + 56);
            *(_OWORD *)(v112 + 456) = *(_OWORD *)(v113 + 456);
            *(_QWORD *)(v112 + 472) = *((_QWORD *)v113 + 59);
            swift_bridgeObjectRelease();
            *(_OWORD *)(v112 + 480) = *((_OWORD *)v113 + 30);
LABEL_47:
            v122 = *((_QWORD *)v113 + 63);
            *(_QWORD *)(v112 + 496) = *((_QWORD *)v113 + 62);
            *(_QWORD *)(v112 + 504) = v122;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v112 + 512) = *((_QWORD *)v113 + 64);
            *(_QWORD *)(v112 + 520) = *((_QWORD *)v113 + 65);
            swift_bridgeObjectRelease();
            *(_BYTE *)(v112 + 528) = v113[528];
            *(_QWORD *)(v112 + 536) = *((_QWORD *)v113 + 67);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v112 + 544) = *((_QWORD *)v113 + 68);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v112 + 552) = *((_QWORD *)v113 + 69);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v112 + 560) = *((_QWORD *)v113 + 70);
            *(_QWORD *)(v112 + 568) = *((_QWORD *)v113 + 71);
            swift_bridgeObjectRelease();
            v11 = v143;
            v123 = *(int *)(v145 + 24);
            v124 = (char *)(v26 + v123);
            v125 = &v27[v123];
            *v124 = *v125;
            v124[1] = v125[1];
            goto LABEL_48;
          }
          sub_1BAFD6454(v112 + 56);
        }
        memcpy((void *)(v112 + 56), v113 + 56, 0x1B8uLL);
        goto LABEL_47;
      }
      sub_1BA92BD1C((uint64_t)v71);
    }
    *(_OWORD *)v71 = *(_OWORD *)v72;
    goto LABEL_37;
  }
  if (v32)
  {
LABEL_19:
    sub_1BAFD3C84(0);
    memcpy((void *)v26, v27, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    v42 = v146;
    goto LABEL_48;
  }
  v142 = v11;
  v144 = v28;
  v140 = v4;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v33 = *((_QWORD *)v27 + 3);
  *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
  *(_QWORD *)(v26 + 24) = v33;
  *(_BYTE *)(v26 + 32) = v27[32];
  *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 56) = *((_QWORD *)v27 + 7);
  v34 = (int *)type metadata accessor for DebugInspectionArticleData(0);
  v35 = v34[9];
  v36 = (void *)(v26 + v35);
  v37 = &v27[v35];
  v38 = sub_1BB86C8B0();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v42 = v146;
  *(_OWORD *)(v26 + v34[10]) = *(_OWORD *)&v27[v34[10]];
  *(_QWORD *)(v26 + v34[11]) = *(_QWORD *)&v27[v34[11]];
  v56 = v34[12];
  v57 = v26 + v56;
  v58 = &v27[v56];
  *(_BYTE *)(v57 + 8) = v58[8];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_BYTE *)(v26 + v34[13]) = v27[v34[13]];
  *(_BYTE *)(v26 + v34[14]) = v27[v34[14]];
  *(_OWORD *)(v26 + v34[15]) = *(_OWORD *)&v27[v34[15]];
  *(_BYTE *)(v26 + v34[16]) = v27[v34[16]];
  *(_BYTE *)(v26 + v34[17]) = v27[v34[17]];
  *(_BYTE *)(v26 + v34[18]) = v27[v34[18]];
  *(_BYTE *)(v26 + v34[19]) = v27[v34[19]];
  *(_BYTE *)(v26 + v34[20]) = v27[v34[20]];
  *(_BYTE *)(v26 + v34[21]) = v27[v34[21]];
  *(_BYTE *)(v26 + v34[22]) = v27[v34[22]];
  *(_BYTE *)(v26 + v34[23]) = v27[v34[23]];
  *(_BYTE *)(v26 + v34[24]) = v27[v34[24]];
  v59 = v34[25];
  v60 = v26 + v59;
  v61 = &v27[v59];
  *(_BYTE *)(v60 + 8) = v61[8];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v62 = v34[26];
  v63 = v26 + v62;
  v64 = &v27[v62];
  *(_BYTE *)(v63 + 8) = v64[8];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  v65 = v34[27];
  v66 = (_OWORD *)(v26 + v65);
  v67 = &v27[v65];
  v68 = *((_OWORD *)v67 + 1);
  *v66 = *(_OWORD *)v67;
  v66[1] = v68;
  *(_OWORD *)(v26 + v34[28]) = *(_OWORD *)&v27[v34[28]];
  *(_QWORD *)(v26 + v34[29]) = *(_QWORD *)&v27[v34[29]];
  *(_OWORD *)(v26 + v34[30]) = *(_OWORD *)&v27[v34[30]];
  *(_OWORD *)(v26 + v34[31]) = *(_OWORD *)&v27[v34[31]];
  *(_QWORD *)(v26 + v34[32]) = *(_QWORD *)&v27[v34[32]];
  memcpy((void *)(v26 + *(int *)(v144 + 20)), &v27[*(int *)(v144 + 20)], 0x240uLL);
  *(_WORD *)(v26 + *(int *)(v144 + 24)) = *(_WORD *)&v27[*(int *)(v144 + 24)];
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v144);
  v4 = v140;
  v11 = v142;
LABEL_48:
  v126 = v42[9];
  v127 = &a1[v126];
  v128 = &v4[v126];
  v129 = type metadata accessor for WebEmbedDataVisualization();
  v130 = *(_QWORD *)(v129 - 8);
  v131 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 48);
  v132 = v131(v127, 1, v129);
  v133 = v131(v128, 1, v129);
  if (!v132)
  {
    if (!v133)
    {
      if (a1 == v4)
        return a1;
      sub_1BA4A2E80((uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)v127 = *(_OWORD *)v128;
        v137 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v127[*(int *)(v137 + 20)], &v128[*(int *)(v137 + 20)], v10);
        *(_QWORD *)&v127[*(int *)(v137 + 24)] = *(_QWORD *)&v128[*(int *)(v137 + 24)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v136 = *(_QWORD *)(v130 + 64);
      goto LABEL_55;
    }
    sub_1BA4A2E80((uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_54:
    sub_1BA6CAB4C(0);
    v136 = *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64);
LABEL_55:
    memcpy(v127, v128, v136);
    return a1;
  }
  if (v133)
    goto LABEL_54;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)v127 = *(_OWORD *)v128;
    v134 = type metadata accessor for GenericDataVisualization();
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v127[*(int *)(v134 + 20)], &v128[*(int *)(v134 + 20)], v10);
    *(_QWORD *)&v127[*(int *)(v134 + 24)] = *(_QWORD *)&v128[*(int *)(v134 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v127, v128, *(_QWORD *)(v130 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  return a1;
}

uint64_t sub_1BAFD75D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFD75DC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_1BA6EF3B0();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        sub_1BAFD3C84(0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[8];
        }
        else
        {
          sub_1BA6CAB4C(0);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BAFD76C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFD76D0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_1BA6EF3B0();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        sub_1BAFD3C84(0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[8];
        }
        else
        {
          sub_1BA6CAB4C(0);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BAFD77B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1BB86C67C();
  if (v0 <= 0x3F)
  {
    sub_1BA6EF3B0();
    if (v1 <= 0x3F)
    {
      sub_1BAFD3C84(319);
      if (v2 <= 0x3F)
      {
        sub_1BA6CAB4C(319);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_1BAFD787C()
{
  unint64_t result;

  result = qword_1EF2B8A50;
  if (!qword_1EF2B8A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF614, &type metadata for DebugInspectionWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A50);
  }
  return result;
}

void sub_1BAFD78C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAFD787C();
    v7 = a3(a1, &type metadata for DebugInspectionWebEmbed.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionWebEmbed.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BAFD7968 + 4 * byte_1BB8DF4CB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BAFD799C + 4 * byte_1BB8DF4C6[v4]))();
}

uint64_t sub_1BAFD799C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFD79A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFD79ACLL);
  return result;
}

uint64_t sub_1BAFD79B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFD79C0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BAFD79C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFD79CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionWebEmbed.CodingKeys()
{
  return &type metadata for DebugInspectionWebEmbed.CodingKeys;
}

unint64_t sub_1BAFD79EC()
{
  unint64_t result;

  result = qword_1EF2B8A70;
  if (!qword_1EF2B8A70)
  {
    result = MEMORY[0x1BCCE5B24]("借+HQ\r", &type metadata for DebugInspectionWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A70);
  }
  return result;
}

unint64_t sub_1BAFD7A34()
{
  unint64_t result;

  result = qword_1EF2B8A78;
  if (!qword_1EF2B8A78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF55C, &type metadata for DebugInspectionWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A78);
  }
  return result;
}

unint64_t sub_1BAFD7A7C()
{
  unint64_t result;

  result = qword_1EF2B8A80;
  if (!qword_1EF2B8A80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF584, &type metadata for DebugInspectionWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A80);
  }
  return result;
}

uint64_t sub_1BAFD7AC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 5001813 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C69467865646E69 && a2 == 0xEC0000004C525565 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C525561746164 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7A696C6175736976 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAFD7D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C2468, (void (*)(uint64_t))type metadata accessor for FormatContent);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for FormatContent(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - v14;
  sub_1BAFD845C(v3, a1, (char *)&v19 - v14);
  v16 = type metadata accessor for FormatServiceOptions();
  if (*(_QWORD *)(v3 + *(int *)(v16 + 60)))
  {
    sub_1BB19B230((uint64_t)v15, *(_QWORD *)(v3 + *(int *)(v16 + 52)), v8);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v17, 1, v9);
  sub_1BA5193C4((uint64_t)v15, (uint64_t)v12, type metadata accessor for FormatContent);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA5193C4((uint64_t)v12, a2, type metadata accessor for FormatContent);
    return sub_1BA6AA068((uint64_t)v8, (uint64_t)&unk_1ED3C2468, (uint64_t)type metadata accessor for FormatContent, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatContent);
    return sub_1BA5193C4((uint64_t)v8, a2, type metadata accessor for FormatContent);
  }
}

uint64_t FormatServiceOptions.groupContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA57B488(v1, a1, (unint64_t *)&qword_1ED3CCC70, (void (*)(uint64_t))sub_1BAFD87F4);
}

void FormatServiceOptions.cachePolicy.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatServiceOptions.filterOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t FormatServiceOptions.tagFilterOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

double FormatServiceOptions.tagFeedFetchWindow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t FormatServiceOptions.tagFeedFetchCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t FormatServiceOptions.transformData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatServiceOptions();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
}

uint64_t FormatServiceOptions.otherArticleIDs.getter()
{
  type metadata accessor for FormatServiceOptions();
  return swift_bridgeObjectRetain();
}

id FormatServiceOptions.purpose.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for FormatServiceOptions() + 48));
}

id FormatServiceOptions.log.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
}

uint64_t FormatServiceOptions.isPrefetching.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatServiceOptions() + 56));
}

uint64_t FormatServiceOptions.init<A>(groupContext:mergeContext:filterOptions:tagFilterOptions:tagFeedFetchWindow:tagFeedFetchCount:transformData:otherArticleIDs:purpose:log:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, double a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, double a15)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  LODWORD(v54) = a8;
  v51 = a5;
  v48 = a3;
  v55 = a13;
  v52 = a10;
  v53 = a7;
  v49 = a11;
  v50 = a6;
  v19 = *a1;
  sub_1BA4A3FB4(0, &qword_1ED3BE7C8, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
  MEMORY[0x1E0C80A78](v20);
  v47 = (uint64_t)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v56 = (uint64_t)&v46 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v46 - v25;
  v27 = type metadata accessor for FormatTransformData();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v46 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a9 + 24) = type metadata accessor for FormatServiceGroupContext(0, *(_QWORD *)(v19 + 80), *(_QWORD *)(v19 + 88), v31);
  *(_QWORD *)(a9 + 32) = &protocol witness table for FormatServiceGroupContext<A>;
  *(_QWORD *)a9 = a1;
  v32 = (int *)type metadata accessor for FormatServiceOptions();
  *(_QWORD *)(a9 + v32[15]) = a2;
  v33 = *((_BYTE *)a1 + 24);
  *(_QWORD *)(a9 + 40) = a1[2];
  *(_BYTE *)(a9 + 48) = v33;
  v34 = 0x200000118;
  if ((a4 & 1) == 0)
    v34 = v48;
  v35 = v51;
  if ((v50 & 1) != 0)
    v35 = 1;
  *(_QWORD *)(a9 + 56) = v34;
  *(_QWORD *)(a9 + 64) = v35;
  v36 = v53;
  if ((v54 & 1) != 0)
    v36 = 86400.0;
  *(double *)(a9 + 72) = v36;
  v37 = 30;
  if ((v49 & 1) == 0)
    v37 = v52;
  *(_QWORD *)(a9 + 80) = v37;
  v54 = a12;
  sub_1BA57B488(a12, (uint64_t)v26, &qword_1ED3BE7C8, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v38(v26, 1, v27) == 1)
  {
    v39 = qword_1ED3BE7C0;
    swift_retain();
    swift_retain();
    if (v39 != -1)
      swift_once();
    v40 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED4768B8);
    sub_1BA4C2DD8(v40, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
    sub_1BA6AA068((uint64_t)v26, (uint64_t)&qword_1ED3BE7C8, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
    swift_retain();
    swift_retain();
  }
  v53 = a15;
  sub_1BA5193C4((uint64_t)v30, a9 + v32[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
  v41 = v54;
  v42 = v56;
  sub_1BA57B488(v54, v56, &qword_1ED3BE7C8, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
  if (v55)
  {
    swift_release();
    swift_release();
    v43 = v55;
  }
  else
  {
    v44 = v47;
    sub_1BA57B488(v42, v47, &qword_1ED3BE7C8, (void (*)(uint64_t))type metadata accessor for FormatTransformData);
    if (v38((char *)v44, 1, v27) == 1)
    {
      sub_1BA6AA068(v44, (uint64_t)&qword_1ED3BE7C8, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      swift_release();
      swift_release();
      v43 = MEMORY[0x1E0DEE9E8];
    }
    else
    {
      v43 = *(_QWORD *)(v44 + 128);
      swift_bridgeObjectRetain();
      sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
      swift_release();
      swift_release();
    }
  }
  sub_1BA6AA068(v41, (uint64_t)&qword_1ED3BE7C8, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  result = sub_1BA6AA068(v56, (uint64_t)&qword_1ED3BE7C8, (uint64_t)type metadata accessor for FormatTransformData, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  *(_QWORD *)(a9 + v32[11]) = v43;
  *(_QWORD *)(a9 + v32[12]) = a14;
  *(double *)(a9 + v32[13]) = v53;
  *(_BYTE *)(a9 + v32[14]) = 0;
  return result;
}

uint64_t sub_1BAFD845C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE v21[48];
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v21[-v7];
  sub_1BA57B488(a1, (uint64_t)&v23, (unint64_t *)&qword_1ED3CCC70, (void (*)(uint64_t))sub_1BAFD87F4);
  v9 = v25;
  if (v25)
  {
    v10 = v26;
    __swift_project_boxed_opaque_existential_1(&v23, v25);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    v12 = sub_1BB871E24();
    v13 = MEMORY[0x1E0D52E40];
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    v22 = 0;
    v14 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatContent(0) + 68));
    swift_bridgeObjectRetain();
    v15 = sub_1BA6E4124(v11, v14);
    sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v23 = 0x2D746E65746E6F63;
    v24 = 0xEB000000002D6469;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v17);
    swift_bridgeObjectRelease();
    v18 = v24;
    *(_QWORD *)(inited + 32) = v23;
    *(_QWORD *)(inited + 40) = v18;
    v19 = sub_1BA78A504(inited, v15);
    swift_setDeallocating();
    swift_arrayDestroy();
    FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a3, 0, 0, (uint64_t)v8, 0, &v22, 0, v19);
    swift_bridgeObjectRelease();
    return sub_1BA6AA068((uint64_t)v8, (uint64_t)&qword_1ED3C20E0, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  }
  else
  {
    sub_1BA6AA068((uint64_t)&v23, (uint64_t)&qword_1ED3CCC70, (uint64_t)sub_1BAFD87F4, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
    return sub_1BA4C2DD8(a2, (uint64_t)a3, type metadata accessor for FormatContent);
  }
}

double static FormatServiceOptions.default(purpose:log:)@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  double result;

  v5 = qword_1ED3BE7C0;
  v6 = a1;
  v7 = a2;
  if (v5 != -1)
    swift_once();
  v8 = type metadata accessor for FormatTransformData();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED4768B8);
  v10 = (int *)type metadata accessor for FormatServiceOptions();
  sub_1BA4C2DD8(v9, a3 + v10[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatTransformData);
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 1;
  *(_QWORD *)(a3 + v10[12]) = v6;
  *(_QWORD *)(a3 + v10[13]) = v7;
  *(_OWORD *)(a3 + 56) = xmmword_1BB886D10;
  *(_QWORD *)(a3 + 72) = 0x40F5180000000000;
  *(_QWORD *)(a3 + 80) = 30;
  *(_QWORD *)(a3 + v10[11]) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(a3 + v10[15]) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_BYTE *)(a3 + v10[14]) = 0;
  return result;
}

unint64_t sub_1BAFD87F4()
{
  unint64_t result;

  result = qword_1ED3CCC60;
  if (!qword_1ED3CCC60)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3CCC60);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatServiceOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int *v32;
  uint64_t v33;
  unsigned int (*v34)(_QWORD *, uint64_t, int *);
  uint64_t v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  int *v74;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    *(_QWORD *)(v4 + 40) = a2[5];
    *(_BYTE *)(v4 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
    v74 = a3;
    v11 = a3[10];
    v12 = v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = *(void **)((char *)a2 + v11);
    if (v14)
    {
      *(_QWORD *)v12 = v14;
      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
      v15 = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = v15;
      v16 = (_QWORD *)(v13 + 32);
      v17 = *(_QWORD *)(v13 + 40);
      v18 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)(v17 - 1) >= 3)
      {
        *(_QWORD *)(v12 + 32) = *v16;
        *(_QWORD *)(v12 + 40) = v17;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v12 + 32) = *(_OWORD *)v16;
      }
      *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
      v22 = *(void **)(v13 + 56);
      v23 = *(_QWORD *)(v13 + 64);
      *(_QWORD *)(v12 + 56) = v22;
      *(_QWORD *)(v12 + 64) = v23;
      *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
      v24 = *(_OWORD *)(v13 + 104);
      *(_OWORD *)(v12 + 104) = v24;
      v25 = v24;
      v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
      v27 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v12 + 80, v13 + 80, v25);
    }
    else
    {
      v19 = *(_OWORD *)(v13 + 80);
      *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
      *(_OWORD *)(v12 + 80) = v19;
      *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
      *(_QWORD *)(v12 + 112) = *(_QWORD *)(v13 + 112);
      v20 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v20;
      v21 = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = v21;
    }
    v28 = *(_QWORD *)(v13 + 128);
    *(_QWORD *)(v12 + 120) = *(_QWORD *)(v13 + 120);
    *(_QWORD *)(v12 + 128) = v28;
    *(_QWORD *)(v12 + 136) = *(_QWORD *)(v13 + 136);
    *(_WORD *)(v12 + 144) = *(_WORD *)(v13 + 144);
    v29 = *(int *)(type metadata accessor for FormatTransformData() + 40);
    v30 = (_QWORD *)(v12 + v29);
    v31 = (_QWORD *)(v13 + v29);
    v32 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
    v33 = *((_QWORD *)v32 - 1);
    v34 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v33 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34(v31, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      v36 = v74;
    }
    else
    {
      *v30 = *v31;
      *((_BYTE *)v30 + 8) = *((_BYTE *)v31 + 8);
      v30[2] = v31[2];
      *((_BYTE *)v30 + 24) = *((_BYTE *)v31 + 24);
      v37 = v32[6];
      v38 = (_QWORD *)((char *)v30 + v37);
      v39 = (_QWORD *)((char *)v31 + v37);
      v40 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v43 = v39[1];
        *v38 = *v39;
        v38[1] = v43;
        v44 = *(int *)(v40 + 24);
        v71 = (char *)v39 + v44;
        v72 = (char *)v38 + v44;
        v73 = v33;
        v45 = sub_1BB86D078();
        v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        v46 = v45;
        v33 = v73;
        v70(v72, v71, v46);
        *(_QWORD *)((char *)v38 + *(int *)(v40 + 28)) = *(_QWORD *)((char *)v39 + *(int *)(v40 + 28));
        v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56);
        swift_bridgeObjectRetain();
        v47(v38, 0, 1, v40);
      }
      v48 = v32[7];
      v49 = (char *)v30 + v48;
      v50 = (char *)v31 + v48;
      *(_QWORD *)v49 = *(_QWORD *)v50;
      v49[8] = v50[8];
      v51 = v32[8];
      v52 = (char *)v30 + v51;
      v53 = (char *)v31 + v51;
      v52[8] = v53[8];
      *(_QWORD *)v52 = *(_QWORD *)v53;
      v54 = v32[9];
      v55 = (char *)v30 + v54;
      v56 = (char *)v31 + v54;
      *(_QWORD *)v55 = *(_QWORD *)v56;
      v55[8] = v56[8];
      v57 = v32[10];
      v58 = (char *)v30 + v57;
      v59 = (char *)v31 + v57;
      v60 = *((_QWORD *)v59 + 4);
      if (v60 == 1)
      {
        v61 = *((_OWORD *)v59 + 1);
        *(_OWORD *)v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v61;
        *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
      }
      else
      {
        *(_QWORD *)v58 = *(_QWORD *)v59;
        v58[8] = v59[8];
        *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
        v58[24] = v59[24];
        *((_QWORD *)v58 + 4) = v60;
        swift_bridgeObjectRetain();
      }
      v36 = v74;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
    }
    v62 = v36[12];
    *(_QWORD *)(v4 + v36[11]) = *(uint64_t *)((char *)a2 + v36[11]);
    v63 = *(void **)((char *)a2 + v62);
    *(_QWORD *)(v4 + v62) = v63;
    v64 = v36[13];
    v65 = v36[14];
    v66 = *(void **)((char *)a2 + v64);
    *(_QWORD *)(v4 + v64) = v66;
    *(_BYTE *)(v4 + v65) = *((_BYTE *)a2 + v65);
    *(_QWORD *)(v4 + v36[15]) = *(uint64_t *)((char *)a2 + v36[15]);
    swift_bridgeObjectRetain();
    v67 = v63;
    v68 = v66;
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for FormatServiceOptions(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  uint64_t v32;
  void (*v33)(uint64_t, __int128 *, uint64_t);
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  int *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t *, uint64_t, int *);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  void (*v65)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  id v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  void (*v98)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *__src;
  int *v134;
  int *v135;
  int *v136;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  v10 = a3[10];
  v11 = a1 + v10;
  v12 = (__int128 *)((char *)a2 + v10);
  v13 = *(void **)(a1 + v10);
  v14 = *(void **)((char *)a2 + v10);
  if (v13)
  {
    if (!v14)
    {
      sub_1BAFD9668(v11);
      v19 = v12[3];
      v21 = *v12;
      v20 = v12[1];
      *(_OWORD *)(v11 + 32) = v12[2];
      *(_OWORD *)(v11 + 48) = v19;
      *(_OWORD *)v11 = v21;
      *(_OWORD *)(v11 + 16) = v20;
      v23 = v12[5];
      v22 = v12[6];
      v24 = v12[4];
      *(_QWORD *)(v11 + 112) = *((_QWORD *)v12 + 14);
      *(_OWORD *)(v11 + 80) = v23;
      *(_OWORD *)(v11 + 96) = v22;
      *(_OWORD *)(v11 + 64) = v24;
      goto LABEL_25;
    }
    *(_QWORD *)v11 = v14;
    v15 = v14;

    *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
    *(_BYTE *)(v11 + 9) = *((_BYTE *)v12 + 9);
    *(_BYTE *)(v11 + 10) = *((_BYTE *)v12 + 10);
    *(_BYTE *)(v11 + 11) = *((_BYTE *)v12 + 11);
    *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = *((_QWORD *)v12 + 5) - 1;
    if ((unint64_t)(*(_QWORD *)(v11 + 40) - 1) >= 3)
    {
      if (v16 >= 3)
      {
        *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
        *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      sub_1BA6AA068(v11 + 32, (uint64_t)&qword_1ED3B9200, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA6A0B5C);
    }
    else if (v16 >= 3)
    {
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
      *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
      swift_bridgeObjectRetain();
LABEL_24:
      *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
      v35 = *(void **)(v11 + 56);
      v36 = (void *)*((_QWORD *)v12 + 7);
      *(_QWORD *)(v11 + 56) = v36;
      v37 = v36;

      *(_QWORD *)(v11 + 64) = *((_QWORD *)v12 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v11 + 72) = *((_QWORD *)v12 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(v11 + 80), (uint64_t *)v12 + 10);
      goto LABEL_25;
    }
    *(_OWORD *)(v11 + 32) = v12[2];
    goto LABEL_24;
  }
  if (v14)
  {
    *(_QWORD *)v11 = v14;
    *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
    *(_BYTE *)(v11 + 9) = *((_BYTE *)v12 + 9);
    *(_BYTE *)(v11 + 10) = *((_BYTE *)v12 + 10);
    *(_BYTE *)(v11 + 11) = *((_BYTE *)v12 + 11);
    *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
    *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
    v17 = *((_QWORD *)v12 + 5) - 1;
    v18 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v134 = a3;
    if (v17 >= 3)
    {
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
      *(_QWORD *)(v11 + 40) = *((_QWORD *)v12 + 5);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v11 + 32) = v12[2];
    }
    *(_BYTE *)(v11 + 48) = *((_BYTE *)v12 + 48);
    v31 = (void *)*((_QWORD *)v12 + 7);
    *(_QWORD *)(v11 + 56) = v31;
    *(_QWORD *)(v11 + 64) = *((_QWORD *)v12 + 8);
    *(_QWORD *)(v11 + 72) = *((_QWORD *)v12 + 9);
    v32 = *((_QWORD *)v12 + 13);
    *(_QWORD *)(v11 + 104) = v32;
    *(_QWORD *)(v11 + 112) = *((_QWORD *)v12 + 14);
    v33 = **(void (***)(uint64_t, __int128 *, uint64_t))(v32 - 8);
    v34 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v11 + 80, v12 + 5, v32);
    a3 = v134;
  }
  else
  {
    v25 = *v12;
    v26 = v12[1];
    v27 = v12[3];
    *(_OWORD *)(v11 + 32) = v12[2];
    *(_OWORD *)(v11 + 48) = v27;
    *(_OWORD *)v11 = v25;
    *(_OWORD *)(v11 + 16) = v26;
    v28 = v12[4];
    v29 = v12[5];
    v30 = v12[6];
    *(_QWORD *)(v11 + 112) = *((_QWORD *)v12 + 14);
    *(_OWORD *)(v11 + 80) = v29;
    *(_OWORD *)(v11 + 96) = v30;
    *(_OWORD *)(v11 + 64) = v28;
  }
LABEL_25:
  *(_QWORD *)(v11 + 120) = *((_QWORD *)v12 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 128) = *((_QWORD *)v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 136) = *((_QWORD *)v12 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 144) = *((_BYTE *)v12 + 144);
  *(_BYTE *)(v11 + 145) = *((_BYTE *)v12 + 145);
  v38 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v39 = (uint64_t *)(v11 + v38);
  v40 = (uint64_t *)((char *)v12 + v38);
  v41 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v42 = *((_QWORD *)v41 - 1);
  v43 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
LABEL_30:
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      goto LABEL_41;
    }
    v136 = a3;
    v55 = *v40;
    *((_BYTE *)v39 + 8) = *((_BYTE *)v40 + 8);
    *v39 = v55;
    v56 = v40[2];
    *((_BYTE *)v39 + 24) = *((_BYTE *)v40 + 24);
    v39[2] = v56;
    v57 = v41[6];
    v58 = (uint64_t *)((char *)v39 + v57);
    v59 = (uint64_t *)((char *)v40 + v57);
    v60 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v131 = *(_QWORD *)(v60 - 8);
    v61 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v131 + 48);
    v62 = v61(v58, 1, v60);
    v63 = v61(v59, 1, v60);
    if (v62)
    {
      if (v63)
        goto LABEL_44;
      *v58 = *v59;
      v58[1] = v59[1];
      v95 = *(int *)(v60 + 24);
      v129 = (char *)v59 + v95;
      v130 = (char *)v58 + v95;
      v96 = sub_1BB86D078();
      v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
      swift_bridgeObjectRetain();
      v97(v130, v129, v96);
      *(_QWORD *)((char *)v58 + *(int *)(v60 + 28)) = *(_QWORD *)((char *)v59 + *(int *)(v60 + 28));
      v98 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v131 + 56);
      swift_bridgeObjectRetain();
      v98(v58, 0, 1, v60);
    }
    else
    {
      if (v63)
      {
        sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_44:
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        goto LABEL_47;
      }
      *v58 = *v59;
      v58[1] = v59[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v99 = *(int *)(v60 + 24);
      v100 = (char *)v58 + v99;
      v101 = (char *)v59 + v99;
      v102 = sub_1BB86D078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 24))(v100, v101, v102);
      *(_QWORD *)((char *)v58 + *(int *)(v60 + 28)) = *(_QWORD *)((char *)v59 + *(int *)(v60 + 28));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_47:
    v103 = v41[7];
    v104 = (char *)v39 + v103;
    v105 = (char *)v40 + v103;
    v106 = *(_QWORD *)v105;
    v104[8] = v105[8];
    *(_QWORD *)v104 = v106;
    v107 = v41[8];
    v108 = (char *)v39 + v107;
    v109 = (char *)v40 + v107;
    v110 = *(_QWORD *)v109;
    v108[8] = v109[8];
    *(_QWORD *)v108 = v110;
    v111 = v41[9];
    v112 = (char *)v39 + v111;
    v113 = (char *)v40 + v111;
    v114 = *(_QWORD *)v113;
    v112[8] = v113[8];
    *(_QWORD *)v112 = v114;
    v115 = v41[10];
    v116 = (uint64_t)v39 + v115;
    v117 = (char *)v40 + v115;
    v118 = *(uint64_t *)((char *)v40 + v115 + 32);
    a3 = v136;
    if (*(_QWORD *)(v116 + 32) == 1)
    {
      if (v118 == 1)
      {
        v119 = *(_OWORD *)v117;
        v120 = *((_OWORD *)v117 + 1);
        *(_QWORD *)(v116 + 32) = *((_QWORD *)v117 + 4);
        *(_OWORD *)v116 = v119;
        *(_OWORD *)(v116 + 16) = v120;
      }
      else
      {
        v123 = *(_QWORD *)v117;
        *(_BYTE *)(v116 + 8) = v117[8];
        *(_QWORD *)v116 = v123;
        v124 = *((_QWORD *)v117 + 2);
        *(_BYTE *)(v116 + 24) = v117[24];
        *(_QWORD *)(v116 + 16) = v124;
        *(_QWORD *)(v116 + 32) = *((_QWORD *)v117 + 4);
        swift_bridgeObjectRetain();
      }
    }
    else if (v118 == 1)
    {
      sub_1BAF10C4C(v116);
      v121 = *((_QWORD *)v117 + 4);
      v122 = *((_OWORD *)v117 + 1);
      *(_OWORD *)v116 = *(_OWORD *)v117;
      *(_OWORD *)(v116 + 16) = v122;
      *(_QWORD *)(v116 + 32) = v121;
    }
    else
    {
      v125 = *(_QWORD *)v117;
      *(_BYTE *)(v116 + 8) = v117[8];
      *(_QWORD *)v116 = v125;
      v126 = *((_QWORD *)v117 + 2);
      *(_BYTE *)(v116 + 24) = v117[24];
      *(_QWORD *)(v116 + 16) = v126;
      *(_QWORD *)(v116 + 32) = *((_QWORD *)v117 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    goto LABEL_41;
  }
  if (v45)
    goto LABEL_30;
  v135 = a3;
  v47 = *v40;
  *((_BYTE *)v39 + 8) = *((_BYTE *)v40 + 8);
  *v39 = v47;
  v48 = v40[2];
  *((_BYTE *)v39 + 24) = *((_BYTE *)v40 + 24);
  v39[2] = v48;
  v49 = v41[6];
  v50 = (uint64_t *)((char *)v39 + v49);
  v51 = (uint64_t *)((char *)v40 + v49);
  v52 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    *v50 = *v51;
    v50[1] = v51[1];
    v64 = *(int *)(v52 + 24);
    v132 = (char *)v51 + v64;
    __src = (char *)v50 + v64;
    v127 = sub_1BB86D078();
    v128 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
    swift_bridgeObjectRetain();
    v128(__src, v132, v127);
    *(_QWORD *)((char *)v50 + *(int *)(v52 + 28)) = *(_QWORD *)((char *)v51 + *(int *)(v52 + 28));
    v65 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56);
    swift_bridgeObjectRetain();
    v65(v50, 0, 1, v52);
  }
  v66 = v41[7];
  v67 = (char *)v39 + v66;
  v68 = (char *)v40 + v66;
  v69 = *(_QWORD *)v68;
  v67[8] = v68[8];
  *(_QWORD *)v67 = v69;
  v70 = v41[8];
  v71 = (char *)v39 + v70;
  v72 = (char *)v40 + v70;
  v73 = *(_QWORD *)v72;
  v71[8] = v72[8];
  *(_QWORD *)v71 = v73;
  v74 = v41[9];
  v75 = (char *)v39 + v74;
  v76 = (char *)v40 + v74;
  v77 = *(_QWORD *)v76;
  v75[8] = v76[8];
  *(_QWORD *)v75 = v77;
  v78 = v41[10];
  v79 = (char *)v39 + v78;
  v80 = (char *)v40 + v78;
  a3 = v135;
  if (*((_QWORD *)v80 + 4) == 1)
  {
    v81 = *(_OWORD *)v80;
    v82 = *((_OWORD *)v80 + 1);
    *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
    *(_OWORD *)v79 = v81;
    *((_OWORD *)v79 + 1) = v82;
  }
  else
  {
    v83 = *(_QWORD *)v80;
    v79[8] = v80[8];
    *(_QWORD *)v79 = v83;
    v84 = *((_QWORD *)v80 + 2);
    v79[24] = v80[24];
    *((_QWORD *)v79 + 2) = v84;
    *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v42 + 56))(v39, 0, 1, v41);
LABEL_41:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85 = a3[12];
  v86 = *(void **)((char *)a2 + v85);
  v87 = *(void **)(a1 + v85);
  *(_QWORD *)(a1 + v85) = v86;
  v88 = v86;

  v89 = a3[13];
  v90 = *(void **)((char *)a2 + v89);
  v91 = *(void **)(a1 + v89);
  *(_QWORD *)(a1 + v89) = v90;
  v92 = v90;

  *(_BYTE *)(a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BAFD9668(uint64_t a1)
{
  destroy for FormatTransformKnobs(a1);
  return a1;
}

uint64_t initializeWithTake for FormatServiceOptions(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v44;
  char *v45;
  _OWORD *__dst;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = a3[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(a2 + v8 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(a2 + v8 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(a2 + v8 + 16);
  *(_OWORD *)v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 112) = *(_QWORD *)(a2 + v8 + 112);
  v13 = *(_OWORD *)(a2 + v8 + 96);
  v14 = *(_OWORD *)(a2 + v8 + 64);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(a2 + v8 + 80);
  *(_OWORD *)(v9 + 96) = v13;
  *(_OWORD *)(v9 + 64) = v14;
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(a2 + v8 + 120);
  *(_QWORD *)(v9 + 136) = *(_QWORD *)(a2 + v8 + 136);
  *(_WORD *)(v9 + 144) = *(_WORD *)(a2 + v8 + 144);
  v15 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v16 = (_QWORD *)(v9 + v15);
  v17 = (_QWORD *)(v10 + v15);
  v18 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *((_BYTE *)v16 + 8) = *((_BYTE *)v17 + 8);
    v16[2] = v17[2];
    *((_BYTE *)v16 + 24) = *((_BYTE *)v17 + 24);
    v21 = v18[6];
    __dst = (_OWORD *)((char *)v16 + v21);
    v22 = (_OWORD *)((char *)v17 + v21);
    v23 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *__dst = *v22;
      v26 = *(int *)(v23 + 24);
      v44 = (char *)v22 + v26;
      v45 = (char *)__dst + v26;
      v27 = sub_1BB86D078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v45, v44, v27);
      *(_QWORD *)((char *)__dst + *(int *)(v23 + 28)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 28));
      (*(void (**)(void))(v24 + 56))();
    }
    v28 = v18[7];
    v29 = (char *)v16 + v28;
    v30 = (char *)v17 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[8];
    v32 = (char *)v16 + v31;
    v33 = (char *)v17 + v31;
    v32[8] = v33[8];
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v34 = v18[9];
    v35 = (char *)v16 + v34;
    v36 = (char *)v17 + v34;
    *(_QWORD *)v35 = *(_QWORD *)v36;
    v35[8] = v36[8];
    v37 = v18[10];
    v38 = (char *)v16 + v37;
    v39 = (char *)v17 + v37;
    v40 = *((_OWORD *)v39 + 1);
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *((_OWORD *)v38 + 1) = v40;
    *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  v41 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);
  v42 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  return a1;
}

uint64_t assignWithTake for FormatServiceOptions(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  uint64_t v39;
  size_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *__src;
  _OWORD *__dst;
  char *__dsta;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = a3[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(void **)(a1 + v8);
  if (!v11)
    goto LABEL_10;
  if (!*(_QWORD *)v10)
  {
    sub_1BAFD9668(v9);
LABEL_10:
    v14 = *(_OWORD *)(v10 + 80);
    *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
    *(_OWORD *)(v9 + 80) = v14;
    *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
    *(_QWORD *)(v9 + 112) = *(_QWORD *)(v10 + 112);
    v15 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v15;
    v16 = *(_OWORD *)(v10 + 48);
    *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
    *(_OWORD *)(v9 + 48) = v16;
    goto LABEL_13;
  }
  *(_QWORD *)v9 = *(_QWORD *)v10;

  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(v9 + 9) = *(_BYTE *)(v10 + 9);
  *(_BYTE *)(v9 + 10) = *(_BYTE *)(v10 + 10);
  *(_BYTE *)(v9 + 11) = *(_BYTE *)(v10 + 11);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)(v10 + 32);
  if ((unint64_t)(*(_QWORD *)(v9 + 40) - 1) >= 3)
  {
    v13 = *(_QWORD *)(v10 + 40);
    if ((unint64_t)(v13 - 1) >= 3)
    {
      *(_QWORD *)(v9 + 32) = *v12;
      *(_QWORD *)(v9 + 40) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1BA6AA068(v9 + 32, (uint64_t)&qword_1ED3B9200, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA6A0B5C);
  }
  *(_OWORD *)(v9 + 32) = *(_OWORD *)v12;
LABEL_12:
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v17 = *(void **)(v9 + 56);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);

  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v9 + 80);
  v18 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v18;
  *(_QWORD *)(v9 + 112) = *(_QWORD *)(v10 + 112);
LABEL_13:
  *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 128) = *(_QWORD *)(v10 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 136) = *(_QWORD *)(v10 + 136);
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + 144) = *(_WORD *)(v10 + 144);
  v19 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v20 = (_QWORD *)(v9 + v19);
  v21 = (_QWORD *)(v10 + v19);
  v22 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
LABEL_18:
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      goto LABEL_36;
    }
    *v20 = *v21;
    *((_BYTE *)v20 + 8) = *((_BYTE *)v21 + 8);
    v20[2] = v21[2];
    *((_BYTE *)v20 + 24) = *((_BYTE *)v21 + 24);
    v33 = v22[6];
    v34 = (char *)v20 + v33;
    v35 = (char *)v21 + v33;
    v36 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v85 = *(_QWORD *)(v36 - 8);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
    __dsta = v34;
    LODWORD(v34) = v37(v34, 1, v36);
    v38 = v37(v35, 1, v36);
    if ((_DWORD)v34)
    {
      if (!v38)
      {
        *(_OWORD *)__dsta = *(_OWORD *)v35;
        v58 = *(int *)(v36 + 24);
        v59 = &__dsta[v58];
        v84 = &v35[v58];
        v60 = sub_1BB86D078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v59, v84, v60);
        *(_QWORD *)&__dsta[*(int *)(v36 + 28)] = *(_QWORD *)&v35[*(int *)(v36 + 28)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dsta, 0, 1, v36);
        goto LABEL_31;
      }
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      v40 = *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64);
      v41 = __dsta;
    }
    else
    {
      if (!v38)
      {
        *(_QWORD *)__dsta = *(_QWORD *)v35;
        *((_QWORD *)__dsta + 1) = *((_QWORD *)v35 + 1);
        swift_bridgeObjectRelease();
        v61 = *(int *)(v36 + 24);
        v62 = &__dsta[v61];
        v87 = &v35[v61];
        v63 = sub_1BB86D078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v62, v87, v63);
        *(_QWORD *)&__dsta[*(int *)(v36 + 28)] = *(_QWORD *)&v35[*(int *)(v36 + 28)];
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      sub_1BA4A2E80((uint64_t)__dsta, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      v40 = *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64);
      v41 = __dsta;
    }
    memcpy(v41, v35, v40);
LABEL_31:
    v64 = v22[7];
    v65 = (char *)v20 + v64;
    v66 = (char *)v21 + v64;
    *(_QWORD *)v65 = *(_QWORD *)v66;
    v65[8] = v66[8];
    v67 = v22[8];
    v68 = (char *)v20 + v67;
    v69 = (char *)v21 + v67;
    v68[8] = v69[8];
    *(_QWORD *)v68 = *(_QWORD *)v69;
    v70 = v22[9];
    v71 = (char *)v20 + v70;
    v72 = (char *)v21 + v70;
    *(_QWORD *)v71 = *(_QWORD *)v72;
    v71[8] = v72[8];
    v73 = v22[10];
    v74 = (uint64_t)v20 + v73;
    v75 = (char *)v21 + v73;
    if (*(_QWORD *)(v74 + 32) != 1)
    {
      v76 = *((_QWORD *)v75 + 4);
      if (v76 != 1)
      {
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *(_BYTE *)(v74 + 8) = v75[8];
        *(_QWORD *)(v74 + 16) = *((_QWORD *)v75 + 2);
        *(_BYTE *)(v74 + 24) = v75[24];
        *(_QWORD *)(v74 + 32) = v76;
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      sub_1BAF10C4C(v74);
    }
    v77 = *((_OWORD *)v75 + 1);
    *(_OWORD *)v74 = *(_OWORD *)v75;
    *(_OWORD *)(v74 + 16) = v77;
    *(_QWORD *)(v74 + 32) = *((_QWORD *)v75 + 4);
    goto LABEL_36;
  }
  if (v26)
    goto LABEL_18;
  *v20 = *v21;
  *((_BYTE *)v20 + 8) = *((_BYTE *)v21 + 8);
  v20[2] = v21[2];
  *((_BYTE *)v20 + 24) = *((_BYTE *)v21 + 24);
  v28 = v22[6];
  __dst = (_OWORD *)((char *)v20 + v28);
  v29 = (_OWORD *)((char *)v21 + v28);
  v30 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *__dst = *v29;
    v42 = *(int *)(v30 + 24);
    v86 = (char *)v29 + v42;
    __src = (char *)__dst + v42;
    v43 = sub_1BB86D078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(__src, v86, v43);
    *(_QWORD *)((char *)__dst + *(int *)(v30 + 28)) = *(_QWORD *)((char *)v29 + *(int *)(v30 + 28));
    (*(void (**)(void))(v31 + 56))();
  }
  v44 = v22[7];
  v45 = (char *)v20 + v44;
  v46 = (char *)v21 + v44;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  v47 = v22[8];
  v48 = (char *)v20 + v47;
  v49 = (char *)v21 + v47;
  v48[8] = v49[8];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v50 = v22[9];
  v51 = (char *)v20 + v50;
  v52 = (char *)v21 + v50;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = v52[8];
  v53 = v22[10];
  v54 = (char *)v20 + v53;
  v55 = (char *)v21 + v53;
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_36:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v78 = a3[12];
  v79 = *(void **)(a1 + v78);
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);

  v80 = a3[13];
  v81 = *(void **)(a1 + v80);
  *(_QWORD *)(a1 + v80) = *(_QWORD *)(a2 + v80);

  v82 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v82) = *(_QWORD *)(a2 + v82);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatServiceOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFDA06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FormatTransformData();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 40), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatServiceOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFDA0F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatTransformData();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 40), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t ResourceServiceType.fetchResources(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - v7;
  v9 = FCCurrentQoSOrUtilityIfMain();
  v10 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(a3 + 8))(a1, v9, v8, *MEMORY[0x1E0D58698], 0, 0, 0, a2, a3);
  sub_1BAFDA530((uint64_t)v8);
  return v11;
}

uint64_t ResourceServiceType.fetchResource(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  FCCurrentQoSOrUtilityIfMain();
  v7 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(a1, a2);
  sub_1BAFDA530((uint64_t)v6);
  return v8;
}

uint64_t ResourceServiceType.fetchResources(identifiers:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = FCCurrentQoSOrUtilityIfMain();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 8))(a1, v8, a2, *MEMORY[0x1E0D58698], 0, 0, 0, a3, a4);
}

uint64_t ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:)(uint64_t a1, uint64_t a2)
{
  return ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(a1, a2);
}

uint64_t ResourceServiceType.fetchAllResources(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - v7;
  v9 = FCCurrentQoSOrUtilityIfMain();
  v10 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a3 + 8))(a1, v9, v8, *MEMORY[0x1E0D58698], 0, 0, 1, a2, a3);
  sub_1BAFDA530((uint64_t)v8);
  return v11;
}

uint64_t ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(a6 + 8))(a1, a2, a3, a4, 0, 0, 0, a5, a6);
}

uint64_t sub_1BAFDA530(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ResourceServiceType.fetchResources(identifiers:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  v11 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 8))(a1, a2, v10, *MEMORY[0x1E0D58698], 0, 0, 0, a3, a4);
  sub_1BAFDA530((uint64_t)v10);
  return v12;
}

uint64_t ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a8 + 8))(a1, a2, a3, a4, a5, a6 & 1, 0, a7, a8);
}

uint64_t ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  sub_1BAFDA894();
  sub_1BB86EC14();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BB86E854();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9760);
  v6 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1BAFDA790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v17;

  v14 = a8 & 1;
  sub_1BA6EA07C();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a3;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a10 + 8);
  swift_bridgeObjectRetain();
  v17 = v16(v15, a4, a5, a6, a7, v14, 0, a9, a10);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BAFDA85C()
{
  uint64_t v0;

  return sub_1BAFDA790(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BAFDA894()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B91E0)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9760);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B91E0);
  }
}

uint64_t sub_1BAFDA908@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t result;
  uint64_t v12;

  v7 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      result = swift_bridgeObjectRelease();
      *a4 = v10;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1BAFDB78C();
  swift_allocError();
  *(_QWORD *)v12 = a2;
  *(_QWORD *)(v12 + 8) = a3;
  *(_BYTE *)(v12 + 16) = 0;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1BAFDA9C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFDA9EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BAFDA908(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t ResourceServiceType.fetchResource(identifier:qualityOfService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  v7 = sub_1BB86DDB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:lifetime:)(a1, a2);
  sub_1BAFDA530((uint64_t)v6);
  return v8;
}

uint64_t sub_1BAFDAAFC()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  unsigned __int8 v3;

  v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 2)
    return v1 & 1;
  if (qword_1ED3C4538 != -1)
    swift_once();
  sub_1BAFDB834();
  sub_1BB86D210();
  result = v3;
  *(_BYTE *)(v0 + 24) = v3;
  return result;
}

uint64_t ResourceService.__allocating_init(cloudContext:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 24) = 2;
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ResourceService.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:shouldFailOnMissingObjects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  double *v35;
  int v36;
  double v37;
  uint64_t v38;
  id v39;
  void *v40;
  void (*v42)(char *, uint64_t);
  double *v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v49 = a4;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2210, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB32D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  v17 = sub_1BB86DDB0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v19);
  if (!*(_QWORD *)(a1 + 16))
  {
    v50 = sub_1BA8F2B0C(MEMORY[0x1E0DEE9D8]);
    sub_1BA4B07F0(0, &qword_1ED3B08B0, (uint64_t (*)(uint64_t))sub_1BAFDA894, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v43 = v21;
  v44 = (char *)&v43 - v20;
  v48 = v7;
  v46 = a3;
  v22 = *(void **)(v7 + 16);
  v23 = objc_allocWithZone(MEMORY[0x1E0D58EA8]);
  v47 = v17;
  v24 = a5;
  v25 = v23;
  v26 = v22;
  v45 = a7;
  v27 = v26;
  swift_bridgeObjectRetain();
  v28 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v25, sel_initWithContext_resourceIDs_downloadAssets_, v27, v28, 1);

  objc_msgSend(v29, sel_setQualityOfService_, a2);
  objc_msgSend(v29, sel_setPurpose_, v49);
  if ((a6 & 1) != 0)
    v30 = 0;
  else
    v30 = v24;
  v31 = v47;
  objc_msgSend(v29, sel_setCacheLifetimeHint_, v30);
  v32 = v29;
  objc_msgSend(v32, sel_setRelativePriority_, FCInferRelativePriorityFromQualityOfService());

  objc_msgSend(v32, sel_setCanSendFetchCompletionSynchronously_, 1);
  objc_msgSend(v32, sel_setShouldFailOnMissingObjects_, v45 & 1);
  sub_1BA98BB14(v46, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v31) != 1)
  {
    v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v44, v16, v31);
    v35 = v43;
    (*(void (**)(double *, char *, uint64_t))(v18 + 16))(v43, v34, v31);
    v36 = (*(uint64_t (**)(double *, uint64_t))(v18 + 88))(v35, v31);
    if (v36 == *MEMORY[0x1E0DB32B8])
    {
      (*(void (**)(double *, uint64_t))(v18 + 96))(v35, v31);
      v37 = *v35;
      objc_msgSend(v32, sel_setCachePolicy_, 3);
    }
    else
    {
      if (v36 != *MEMORY[0x1E0DB32C8])
      {
        if (v36 == *MEMORY[0x1E0DB32A0])
        {
          objc_msgSend(v32, sel_setCachePolicy_, 1);
        }
        else if (v36 == *MEMORY[0x1E0DB32B0])
        {
          objc_msgSend(v32, sel_setCachePolicy_, 3);
        }
        else
        {
          if (v36 != *MEMORY[0x1E0DB32A8])
          {
            objc_msgSend(v32, sel_setCachePolicy_, 0);
            v42 = *(void (**)(char *, uint64_t))(v18 + 8);
            v42(v34, v31);
            v42((char *)v35, v31);
            goto LABEL_14;
          }
          objc_msgSend(v32, sel_setCachePolicy_, 2);
        }
        goto LABEL_13;
      }
      (*(void (**)(double *, uint64_t))(v18 + 96))(v35, v31);
      v37 = *v35;
      objc_msgSend(v32, sel_setCachePolicy_, 4);
    }
    objc_msgSend(v32, sel_setMaximumCachedAge_, v37);
LABEL_13:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v34, v31);
    goto LABEL_14;
  }
  sub_1BAFDA530((uint64_t)v16);
LABEL_14:
  v38 = sub_1BAFDAAFC();
  if ((v38 & 1) != 0)
    v38 = (uint64_t)objc_msgSend(v32, sel_setCachePolicy_, 1);
  MEMORY[0x1E0C80A78](v38);
  *(&v43 - 2) = (double *)v32;
  sub_1BA4B07F0(0, &qword_1ED3B08B0, (uint64_t (*)(uint64_t))sub_1BAFDA894, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86EA58();
  *(_QWORD *)(swift_allocObject() + 16) = v32;
  v39 = v32;
  v40 = (void *)sub_1BB86E854();
  v33 = sub_1BB86EA64();

  swift_release();
  swift_release();

  return v33;
}

id sub_1BAFDB0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v14[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1BA573ED8;
  v11[5] = v10;
  v14[4] = sub_1BAFDB780;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BA573874;
  v14[3] = &block_descriptor_34;
  v12 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_setFetchCompletionBlock_, v12);
  _Block_release(v12);
  return objc_msgSend(a5, sel_start);
}

void sub_1BAFDB1E8(void *a1, void (*a2)(void *), uint64_t a3, uint64_t isUniquelyReferenced_nonNull_native, _QWORD *a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(_QWORD *);
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;

  if (!objc_msgSend(a1, sel_status)
    && (v17 = objc_msgSend(a1, sel_fetchedObject)) != 0
    && (v49 = v17, sub_1BAFDB7D0(), (swift_dynamicCast() & 1) != 0))
  {
    v18 = v48;
    if (v48 >> 62)
    {
LABEL_32:
      swift_bridgeObjectRetain_n();
      v19 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      v43 = a5;
      v44 = (void (*)(_QWORD *))isUniquelyReferenced_nonNull_native;
      if (v19)
        goto LABEL_10;
    }
    else
    {
      v19 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v43 = a5;
      v44 = (void (*)(_QWORD *))isUniquelyReferenced_nonNull_native;
      if (v19)
      {
LABEL_10:
        v46 = v18 & 0xC000000000000001;
        a5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        v20 = 4;
        v45 = (_QWORD *)v18;
        while (1)
        {
          v22 = v20 - 4;
          if (v46)
          {
            v23 = (id)MEMORY[0x1BCCE4630](v20 - 4, v18);
            v24 = v20 - 3;
            if (__OFADD__(v22, 1))
              goto LABEL_29;
          }
          else
          {
            v23 = *(id *)(v18 + 8 * v20);
            v24 = v20 - 3;
            if (__OFADD__(v22, 1))
            {
LABEL_29:
              __break(1u);
LABEL_30:
              __break(1u);
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
          }
          v47 = v24;
          v25 = v19;
          v26 = v23;
          v27 = objc_msgSend(v23, sel_resourceID, v43, v44);
          v28 = sub_1BB8729A0();
          v30 = v29;

          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v49 = a5;
          v18 = (unint64_t)a5;
          v32 = sub_1BA6E35A8(v28, v30);
          v33 = a5[2];
          v34 = (v31 & 1) == 0;
          v35 = v33 + v34;
          if (__OFADD__(v33, v34))
            goto LABEL_30;
          v36 = v31;
          if (a5[3] >= v35)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              a5 = v49;
              if ((v31 & 1) != 0)
                goto LABEL_11;
            }
            else
            {
              v18 = (unint64_t)&v49;
              sub_1BB4C7EAC();
              a5 = v49;
              if ((v36 & 1) != 0)
                goto LABEL_11;
            }
          }
          else
          {
            sub_1BB4B7A10(v35, isUniquelyReferenced_nonNull_native);
            v18 = (unint64_t)v49;
            v37 = sub_1BA6E35A8(v28, v30);
            if ((v36 & 1) != (v38 & 1))
            {
              sub_1BB874560();
              __break(1u);
              return;
            }
            v32 = v37;
            a5 = v49;
            if ((v36 & 1) != 0)
            {
LABEL_11:
              v21 = a5[7];

              *(_QWORD *)(v21 + 8 * v32) = v26;
              goto LABEL_12;
            }
          }
          a5[(v32 >> 6) + 8] |= 1 << v32;
          v39 = (uint64_t *)(a5[6] + 16 * v32);
          *v39 = v28;
          v39[1] = v30;
          *(_QWORD *)(a5[7] + 8 * v32) = v26;
          v40 = a5[2];
          v41 = __OFADD__(v40, 1);
          v42 = v40 + 1;
          if (v41)
            goto LABEL_31;
          a5[2] = v42;
          swift_bridgeObjectRetain();
LABEL_12:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v20;
          v19 = v25;
          v18 = (unint64_t)v45;
          if (v47 == v25)
            goto LABEL_34;
        }
      }
    }
    a5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_34:
    swift_bridgeObjectRelease_n();
    v44(a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = objc_msgSend(a1, sel_error);
    if (!v9)
    {
      sub_1BAFDB78C();
      v9 = (id)swift_allocError();
      *(_QWORD *)v10 = 0;
      *(_QWORD *)(v10 + 8) = 0;
      *(_BYTE *)(v10 + 16) = 3;
    }
    v11 = sub_1BB8732F4();
    sub_1BA7AA598();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87CE70;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 40) = 0xE000000000000000;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3D4460);
    v13 = (void *)sub_1BB873A08();
    sub_1BB86EF44("ResourceService failed to download resources from CK, error=%{public}@", 70, 2, &dword_1BA493000, v13, v11, v12);
    swift_bridgeObjectRelease();

    sub_1BAFDB78C();
    v14 = (void *)swift_allocError();
    *(_QWORD *)v15 = v9;
    *(_QWORD *)(v15 + 8) = 0;
    *(_BYTE *)(v15 + 16) = 2;
    v16 = v9;
    a2(v14);

  }
}

uint64_t ResourceService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ResourceService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BAFDB6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  return ResourceService.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:shouldFailOnMissingObjects:)(a1, a2, a3, a4, a5, a6 & 1, a7);
}

id sub_1BAFDB6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFDB0D8(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1BAFDB6D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BAFDB6F8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t dispatch thunk of ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:lifetime:shouldFailOnMissingObjects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a9 + 8))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t method lookup function for ResourceService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResourceService.__allocating_init(cloudContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BAFDB730()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAFDB754()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAFDB780(void *a1)
{
  uint64_t v1;

  sub_1BAFDB1E8(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40));
}

unint64_t sub_1BAFDB78C()
{
  unint64_t result;

  result = qword_1EF2B8A88;
  if (!qword_1EF2B8A88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DF7F8, &type metadata for ResourceServiceErrors);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A88);
  }
  return result;
}

void sub_1BAFDB7D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B03C8)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B9760);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B03C8);
  }
}

unint64_t sub_1BAFDB834()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C1188;
  if (!qword_1ED3C1188)
  {
    v1 = type metadata accessor for ResourceService();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ResourceService, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C1188);
  }
  return result;
}

id sub_1BAFDB87C(id result, id a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return result;
  if (a3 <= 1u)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void destroy for ResourceServiceErrors(uint64_t a1)
{
  sub_1BAFDB8B4(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BAFDB8B4(void *a1, id a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {

  }
  else if (a3 <= 1u)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s8NewsFeed21ResourceServiceErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAFDB87C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ResourceServiceErrors(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAFDB87C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAFDB8B4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResourceServiceErrors(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAFDB8B4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResourceServiceErrors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ResourceServiceErrors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAFDBA48(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1BAFDBA60(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ResourceServiceErrors()
{
  return &type metadata for ResourceServiceErrors;
}

_QWORD *FormatGroupNodeMaskRenderer.render<A, B>(context:contextLayoutOptions:layoutAttributes:maskLayoutAttributes:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BAFDC528(a2, a4, a5);
}

uint64_t FormatGroupNodeMaskRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FormatGroupNodeMaskRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1BAFDBAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BB8701C8();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB8701EC();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

id sub_1BAFDBB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  char v15;
  id v16;
  double *v17;
  id v18;
  id v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  id v43;
  id v44;
  id v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;

  v11 = v2;
  v12 = v1;
  *(_QWORD *)(v10 - 192) = v6;
  *(_QWORD *)(v10 - 184) = v0;
  v13 = v3;
  v14 = objc_allocWithZone((Class)type metadata accessor for FormatGroupNodeMaskBasicLayer());
  v15 = v13;
  sub_1BA6F2B04((uint64_t)v7, v5, v13);
  v16 = objc_msgSend(v14, sel_init);
  v17 = *(double **)(v4 + 16);
  objc_msgSend(v16, sel_setFrame_, v17[6], v17[7], v17[8], v17[9]);
  v18 = v16;
  if (v9)
    v19 = objc_msgSend(v9, sel_CGColor);
  else
    v19 = 0;
  objc_msgSend(v16, sel_setBackgroundColor_, v19);

  v20 = v17[6];
  v21 = v17[7];
  v22 = v17[8];
  v23 = v17[9];
  *(_QWORD *)(v10 - 176) = v7;
  *(_QWORD *)(v10 - 168) = v5;
  *(_BYTE *)(v10 - 160) = v15;
  sub_1BA6787C4(v16, v10 - 176, v20, v21, v22, v23);
  sub_1BA7F6D98(v7, v5, v15, v8, v11, v12, *(_QWORD *)(v10 - 192), *(_QWORD *)(v10 - 184), 0);
  v24 = objc_msgSend(v16, sel_cornerCurve);
  v25 = sub_1BB8729A0();
  v27 = v26;
  if (v25 == sub_1BB8729A0() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:

    v30 = v16;
    objc_msgSend(v30, sel_bounds);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    objc_msgSend(v30, sel_maskedCorners);
    v39 = sub_1BB8732B8();
    objc_msgSend(v30, sel_cornerRadius);
    v41 = v40;
    objc_msgSend(v30, sel_cornerRadius);
    v43 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, v39, v32, v34, v36, v38, v41, v42);
    v44 = objc_msgSend(v43, sel_CGPath);
    goto LABEL_9;
  }
  v29 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
    goto LABEL_8;
  v47 = sub_1BB8729A0();
  v49 = v48;
  if (v47 == sub_1BB8729A0() && v49 == v50)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1BB874398();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v30 = v16;
  objc_msgSend(v30, sel_bounds);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;
  objc_msgSend(v30, sel_cornerRadius);
  v43 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v52, v54, v56, v58, v59);
  v44 = objc_msgSend(v43, sel_CGPath);
LABEL_9:
  v45 = v44;

  objc_msgSend(v30, sel_setShadowPath_, v45);
  return v30;
}

_QWORD *sub_1BAFDC528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];
  char v54;

  v6 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  sub_1BAFDBAC4(a2);
  v8 = v7;
  v10 = v9;

  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(v11 + 80);
  if (!v12)
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v13 = *(_QWORD *)(v12 + 128);
  v51 = v10;
  v52 = v8;
  if (!v13)
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_11:
    v25 = *(unsigned __int8 *)(v12 + 216);
    if (v25 != 254)
    {
      v26 = *(_QWORD *)(v12 + 160);
      v27 = *(_QWORD *)(v12 + 168);
      v45 = *(_QWORD *)(v12 + 184);
      v46 = *(_QWORD *)(v12 + 176);
      v48 = *(_QWORD *)(v12 + 144);
      v50 = *(_QWORD *)(v12 + 136);
      v43 = *(_QWORD *)(v12 + 200);
      v44 = *(_QWORD *)(v12 + 192);
      v42 = *(_QWORD *)(v12 + 208);
      v47 = *(_QWORD *)(v12 + 152);
      swift_retain();
      sub_1BAFDBAC4(a2);
      v29 = v28;
      v31 = v30;
      objc_msgSend(v28, sel_setShadowRadius_, *(double *)&v50);
      objc_msgSend(v29, sel_setShadowOffset_, *(double *)&v26, *(double *)&v47);
      LODWORD(v32) = v48;
      objc_msgSend(v29, sel_setShadowOpacity_, v32);
      v53[0] = v27;
      v33 = v29;
      FormatColor.color.getter();
      v35 = v34;
      v36 = objc_msgSend(v34, sel_CGColor);

      objc_msgSend(v33, sel_setShadowColor_, v36);
      v37 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB391A5C(0, v20[2] + 1, 1, v20);
      v39 = v20[2];
      v38 = v20[3];
      if (v39 >= v38 >> 1)
        v20 = sub_1BB391A5C((_QWORD *)(v38 > 1), v39 + 1, 1, v20);
      v20[2] = v39 + 1;
      v40 = &v20[2 * v39];
      v40[4] = v37;
      v40[5] = v31;

      sub_1BA6E8A78(v50, v48, v47, v26, v27, v46, v45, v44, v43, v42, v25);
      v10 = v51;
      v8 = v52;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  sub_1BAFDBAC4(a2);
  v15 = v14;
  v49 = v16;
  if (*(_BYTE *)(a2 + 88))
  {
    v17 = 0;
    v18 = 0;
    v19 = -2;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 24);
    v18 = *(_QWORD *)(a2 + 32);
    v19 = *(_BYTE *)(a2 + 40);
    sub_1BA6F2B04(v17, v18, v19);
  }
  v53[0] = v17;
  v53[1] = v18;
  v54 = v19;
  sub_1BA67832C(a1, v15, a3, v13, v53);
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v17, v18, v19);
  v21 = v15;
  v20 = sub_1BB391A5C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v23 = v20[2];
  v22 = v20[3];
  if (v23 >= v22 >> 1)
    v20 = sub_1BB391A5C((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
  v20[2] = v23 + 1;
  v24 = &v20[2 * v23];
  v24[4] = v21;
  v24[5] = v49 | 0x8000000000000000;

  v12 = *(_QWORD *)(v11 + 80);
  v10 = v51;
  v8 = v52;
  if (v12)
    goto LABEL_11;
LABEL_17:
  type metadata accessor for FormatGroupNodeMaskRendererResult();
  result = (_QWORD *)swift_allocObject();
  result[2] = v8;
  result[3] = v10;
  result[4] = v20;
  return result;
}

uint64_t method lookup function for FormatGroupNodeMaskRenderer()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for WebEmbedCacheSize()
{
  return &type metadata for WebEmbedCacheSize;
}

_QWORD *sub_1BAFDC8EC(uint64_t a1, void (*a2)(_QWORD *, _QWORD, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t inited;
  uint64_t (*v17)(uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  _QWORD *v63;
  _QWORD v65[2];
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  __int128 v72;
  void (*v73)(_QWORD *, _QWORD, uint64_t, uint64_t);
  __int128 v74;
  void (*v75)(_QWORD *, _QWORD, uint64_t);
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  uint64_t v80;
  _OWORD v81[2];
  uint64_t v82;
  _OWORD v83[2];
  uint64_t v84;

  v73 = a2;
  v3 = type metadata accessor for FormatOption();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v65 - v8;
  sub_1BA8C88C8(0);
  v69 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v65 - v14);
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  v74 = xmmword_1BB87CE70;
  v70 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v78 = *(_QWORD *)(v11 + 72);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87A390;
  v68 = v19;
  v77 = v18;
  v71 = (_QWORD *)(v19 + v18);
  sub_1BA5B089C(0, (unint64_t *)&qword_1EF2A9CD0, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, v17);
  *(_QWORD *)&v72 = v20;
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = v74;
  v66 = v21;
  v75 = (void (*)(_QWORD *, _QWORD, uint64_t))(v21 + 32);
  v22 = *(_QWORD *)(a1 + 16);
  v23 = MEMORY[0x1E0DEE9D8];
  if (v22)
  {
    *(_QWORD *)&v83[0] = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v22, 0);
    v24 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v76 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1BA4C2DD8(v24, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB0798DC(v6, v15);
      v25 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 0, 1, v25);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v23 = *(_QWORD *)&v83[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = *(_QWORD *)&v83[0];
      }
      v27 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v23 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BAC79E1C(v26 > 1, v27 + 1, 1);
        v23 = *(_QWORD *)&v83[0];
      }
      *(_QWORD *)(v23 + 16) = v27 + 1;
      sub_1BA5193C4((uint64_t)v15, v23 + v77 + v27 * v78, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v24 += v76;
      --v22;
    }
    while (v22);
  }
  sub_1BAF89090(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v23, v79);
  swift_bridgeObjectRelease();
  v28 = v66;
  *(_QWORD *)(v66 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v28 + 64) = &off_1E72D2F60;
  v29 = swift_allocObject();
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v29 + 48) = v80;
  v30 = v79[1];
  *(_OWORD *)(v29 + 16) = v79[0];
  *(_OWORD *)(v29 + 32) = v30;
  v31 = sub_1BA9747FC(v28);
  swift_setDeallocating();
  v32 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  v33 = sub_1BB6DF010(v31);
  swift_bridgeObjectRelease();
  v34 = v71;
  sub_1BAAF3C48(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v33, 0, 0, v71);
  v35 = type metadata accessor for FormatInspectionItem(0);
  v75 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v76 = v35;
  v75(v34, 0, 1);
  v36 = swift_initStackObject();
  *(_OWORD *)(v36 + 16) = v74;
  v37 = swift_bridgeObjectRetain();
  v38 = sub_1BA67F4CC(v37);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v83[0] = v38;
  swift_retain();
  sub_1BA79BAB4((uint64_t *)v83);
  v39 = v67;
  v66 = v36;
  swift_release();
  v40 = *(_QWORD *)&v83[0];
  v41 = *(_QWORD *)(*(_QWORD *)&v83[0] + 16);
  if (v41)
  {
    v65[1] = v32;
    *(_QWORD *)&v83[0] = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v41, 0);
    v42 = *(_QWORD *)&v83[0];
    v43 = type metadata accessor for FormatInspectionItem.Value(0);
    v73 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
    *(_QWORD *)&v74 = v43;
    v44 = v39 + 1;
    v65[0] = v40;
    v45 = (uint64_t *)(v40 + 40);
    v72 = xmmword_1BB8D4900;
    do
    {
      v46 = *v45;
      v47 = v76;
      v48 = (_QWORD *)((char *)v39 + *(int *)(v76 + 24));
      *v48 = *(v45 - 1);
      v48[1] = v46;
      v49 = v74;
      swift_storeEnumTagMultiPayload();
      v73(v48, 0, 1, v49);
      *v39 = v72;
      *v44 = 0;
      v44[1] = 0;
      v50 = (char *)v39 + *(int *)(v47 + 28);
      *(_QWORD *)v50 = 0;
      *((_QWORD *)v50 + 1) = 0;
      v50[16] = -1;
      ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))v75)(v39, 0, 1, v47);
      *(_QWORD *)&v83[0] = v42;
      v51 = (uint64_t)v39;
      v52 = *(_QWORD *)(v42 + 16);
      v53 = *(_QWORD *)(v42 + 24);
      swift_bridgeObjectRetain();
      if (v52 >= v53 >> 1)
      {
        sub_1BAC79E1C(v53 > 1, v52 + 1, 1);
        v42 = *(_QWORD *)&v83[0];
      }
      v45 += 2;
      *(_QWORD *)(v42 + 16) = v52 + 1;
      sub_1BA5193C4(v51, v42 + v77 + v52 * v78, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      --v41;
      v39 = (_OWORD *)v51;
    }
    while (v41);
    swift_release();
  }
  else
  {
    swift_release();
    v42 = MEMORY[0x1E0DEE9D8];
  }
  v54 = (_QWORD *)((char *)v71 + v78);
  sub_1BAF89090(0x726F7463656C6553, 0xE900000000000073, 0, 0, v42, v81);
  swift_bridgeObjectRelease();
  v55 = v66;
  *(_QWORD *)(v66 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v55 + 64) = &off_1E72D2F60;
  v56 = swift_allocObject();
  *(_QWORD *)(v55 + 32) = v56;
  *(_QWORD *)(v56 + 48) = v82;
  v57 = v81[1];
  *(_OWORD *)(v56 + 16) = v81[0];
  *(_OWORD *)(v56 + 32) = v57;
  v58 = sub_1BA9747FC(v55);
  swift_setDeallocating();
  swift_arrayDestroy();
  v59 = sub_1BB6DF010(v58);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v59, 0, 0, v54);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v75)(v54, 0, 1, v76);
  sub_1BAF89090(0xD000000000000010, 0x80000001BB975010, 0, 0, v68, v83);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v60 = v70;
  *(_QWORD *)(v70 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v60 + 64) = &off_1E72D2F60;
  v61 = swift_allocObject();
  *(_QWORD *)(v60 + 32) = v61;
  *(_QWORD *)(v61 + 48) = v84;
  v62 = v83[1];
  *(_OWORD *)(v61 + 16) = v83[0];
  *(_OWORD *)(v61 + 32) = v62;
  v63 = sub_1BB6DF010(v60);
  swift_setDeallocating();
  sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  return v63;
}

_QWORD *sub_1BAFDD0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD v36[18];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[56];

  v36[17] = a1;
  v37 = a2;
  sub_1BA93EB04(0);
  MEMORY[0x1E0C80A78](v2);
  v36[14] = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v36[16] = (char *)v36 - v5;
  v6 = type metadata accessor for FeedPuzzleStatistic();
  v36[11] = *(_QWORD *)(v6 - 8);
  v36[12] = v6;
  MEMORY[0x1E0C80A78](v6);
  v36[2] = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v36[15] = (char *)v36 - v9;
  sub_1BAFDDE2C(0);
  MEMORY[0x1E0C80A78](v10);
  v36[9] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v36[13] = (char *)v36 - v13;
  v14 = type metadata accessor for FeedCustomItem();
  v36[6] = *(_QWORD *)(v14 - 8);
  v36[7] = v14;
  MEMORY[0x1E0C80A78](v14);
  v36[1] = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v36[10] = (char *)v36 - v17;
  sub_1BA93EB20(0);
  MEMORY[0x1E0C80A78](v18);
  v36[4] = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v36[8] = (char *)v36 - v21;
  v22 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v22);
  v36[0] = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v36[5] = (char *)v36 - v25;
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  v36[3] = (char *)v36 - v28;
  v29 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  v31 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v36 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA706C0C(v37, (uint64_t)&v38);
  if (v39)
  {
    sub_1BA4CECCC(&v38, (uint64_t)v40);
    sub_1BA4C010C((uint64_t)v40, (uint64_t)&v38);
    sub_1BA7BC210(&v38, (uint64_t)v33);
    v34 = (char *)&loc_1BAFDD438 + 4 * word_1BB8DF890[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BA706800((uint64_t)&v38);
  return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
}

_QWORD *sub_1BAFDDC54(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];
  _OWORD v17[2];
  __int128 v18;
  _OWORD v19[4];

  sub_1BAFDDE48(a2, (uint64_t)&v11, (unint64_t *)&qword_1EF2C8DD0);
  if (*((_QWORD *)&v12 + 1))
  {
    v19[1] = v15;
    v19[2] = v16[0];
    *(_OWORD *)((char *)&v19[2] + 9) = *(_OWORD *)((char *)v16 + 9);
    v17[0] = v11;
    v17[1] = v12;
    v18 = v13;
    v19[0] = v14;
    sub_1BA8EDAAC();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
    v11 = *(_OWORD *)((char *)v19 + 8);
    v12 = *(_OWORD *)((char *)&v19[1] + 8);
    v13 = *(_OWORD *)((char *)&v19[2] + 8);
    v4 = sub_1BAF34930(&v11);
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 64) = &off_1E7335C38;
    *(_QWORD *)(inited + 32) = v4;
    v5 = *((_QWORD *)&v18 + 1);
    v6 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))&v19[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1BAFDC8EC(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 96) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 104) = &off_1E7335C38;
    *(_QWORD *)(inited + 72) = v7;
    sub_1BA4C010C((uint64_t)v17, (uint64_t)&v11);
    v8 = sub_1BAFDD0B4(a1, (uint64_t)&v11);
    sub_1BA706800((uint64_t)&v11);
    *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 144) = &off_1E7335C38;
    *(_QWORD *)(inited + 112) = v8;
    v9 = sub_1BB6DF010(inited);
    swift_setDeallocating();
    sub_1BA5B089C(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760, (uint64_t)&protocol descriptor for FormatInspectionGroupable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    sub_1BAB05C18((uint64_t)v17);
  }
  else
  {
    sub_1BA82C530((uint64_t)&v11, (unint64_t *)&qword_1EF2C8DD0);
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  return v9;
}

void sub_1BAFDDE2C(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1ED3C2288, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFDDE48(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BA4CF8F4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BAFDDE94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for FormatInspectionFeedItem(uint64_t a1)
{
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 64);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatInspectionFeedItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for FormatInspectionFeedItem(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 56);
  v5 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAFDE160(a1 + 56);
      v8 = *(_OWORD *)(a2 + 72);
      v7 = *(_OWORD *)(a2 + 88);
      *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v8;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *v4 = v9;
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t sub_1BAFDE160(uint64_t a1)
{
  destroy for FeedItemAuxiliary();
  return a1;
}

uint64_t assignWithTake for FormatInspectionFeedItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 64))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 64);
  if (!v6)
  {
    sub_1BAFDE160(a1 + 56);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatInspectionFeedItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatInspectionFeedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionFeedItem()
{
  return &type metadata for FormatInspectionFeedItem;
}

ValueMetadata *type metadata accessor for DebugFormatSnapshotTransform()
{
  return &type metadata for DebugFormatSnapshotTransform;
}

BOOL sub_1BAFDE328(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2])
    return 0;
  if (a1[4] == a2[4])
    return a1[3] == a2[3];
  return 0;
}

CATransform3D *sub_1BAFDE36C@<X0>(_OWORD *a1@<X8>)
{
  double *v1;
  double v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  CGFloat v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CATransform3D *result;
  CATransform3D v21;
  CATransform3D v22;

  v3 = *v1;
  if (*v1 == 0.0 && v1[1] == 0.0 && v1[2] == 1.0 && v1[3] == 0.0 && v1[4] == 0.0)
  {
    v4 = *MEMORY[0x1E0CD2610];
    v5 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
    v6 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    v7 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    v8 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v9 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
    v10 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    v11 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
  }
  else
  {
    v12 = *(double *)(MEMORY[0x1E0CD2610] + 80);
    v13 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
    *(_OWORD *)&v22.m11 = *MEMORY[0x1E0CD2610];
    *(_OWORD *)&v22.m13 = v13;
    v14 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    *(_OWORD *)&v22.m21 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    *(_OWORD *)&v22.m23 = v14;
    *(_OWORD *)&v22.m31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v22.m33 = v12;
    v22.m34 = -0.001;
    v15 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
    *(_OWORD *)&v22.m41 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    *(_OWORD *)&v22.m43 = v15;
    CATransform3DRotate(&v21, &v22, v3 * 3.14159265 / 180.0, 1.0, 0.0, 0.0);
    v16 = v1[1] * 3.14159265;
    v22 = v21;
    CATransform3DRotate(&v21, &v22, v16 / 180.0, 0.0, 1.0, 0.0);
    v17 = v1[2];
    v22 = v21;
    CATransform3DScale(&v21, &v22, v17, v17, v17);
    v18 = v1[3];
    v19 = v1[4];
    v22 = v21;
    result = CATransform3DTranslate(&v21, &v22, v18, v19, 0.0);
    v4 = *(_OWORD *)&v21.m11;
    v5 = *(_OWORD *)&v21.m13;
    v6 = *(_OWORD *)&v21.m21;
    v7 = *(_OWORD *)&v21.m23;
    v8 = *(_OWORD *)&v21.m31;
    v9 = *(_OWORD *)&v21.m33;
    v10 = *(_OWORD *)&v21.m41;
    v11 = *(_OWORD *)&v21.m43;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return result;
}

uint64_t static FormatButtonNodeBinding.== infix(_:_:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BAFDE560 + 4 * byte_1BB8DF944[*a1 >> 6]))();
}

BOOL sub_1BAFDE560@<W0>(unsigned int a1@<W8>)
{
  unsigned __int8 v1;
  _BOOL4 v2;

  v2 = ((a1 ^ v1) & 1) == 0;
  return a1 < 0x40 && v2;
}

BOOL sub_1BAFDE578@<W0>(char a1@<W8>)
{
  return (a1 & 0xC0) == 128;
}

BOOL sub_1BAFDE588@<W0>(unsigned int a1@<W8>)
{
  return a1 > 0xBF;
}

BOOL sub_1BAFDE594@<W0>(char a1@<W8>)
{
  return (a1 & 0xC0) == 64;
}

unint64_t sub_1BAFDE5A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFDE5C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFDE5C8()
{
  unint64_t result;

  result = qword_1EF2B8A90;
  if (!qword_1EF2B8A90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeBinding, &type metadata for FormatButtonNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A90);
  }
  return result;
}

unint64_t sub_1BAFDE60C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA7E4228();
  a1[2] = sub_1BAEF5340();
  result = sub_1BAFDE640();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFDE640()
{
  unint64_t result;

  result = qword_1EF2B8A98;
  if (!qword_1EF2B8A98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeBinding, &type metadata for FormatButtonNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B8A98);
  }
  return result;
}

void sub_1BAFDE684(_QWORD *a1)
{
  FormatButtonNodeBinding.encode(to:)(a1);
}

uint64_t sub_1BAFDE698(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BAFDE6BC + 4 * byte_1BB8DF948[*a1 >> 6]))();
}

BOOL sub_1BAFDE6BC@<W0>(unsigned int a1@<W8>)
{
  unsigned __int8 v1;
  _BOOL4 v2;

  v2 = ((a1 ^ v1) & 1) == 0;
  return a1 < 0x40 && v2;
}

BOOL sub_1BAFDE6D4@<W0>(char a1@<W8>)
{
  return (a1 & 0xC0) == 128;
}

BOOL sub_1BAFDE6E4@<W0>(unsigned int a1@<W8>)
{
  return a1 > 0xBF;
}

BOOL sub_1BAFDE6F0@<W0>(char a1@<W8>)
{
  return (a1 & 0xC0) == 64;
}

uint64_t getEnumTagSinglePayload for FormatButtonNodeBinding(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7D)
    goto LABEL_17;
  if (a2 + 131 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 131) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 131;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 131;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 131;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7C)
    v6 = -1;
  return v6 + 1;
}

ValueMetadata *type metadata accessor for FormatButtonNodeBinding()
{
  return &type metadata for FormatButtonNodeBinding;
}

uint64_t static FormatHeadlineBinding.ActivityItemsConfiguration.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatHeadlineBinding.ActivityItemsConfiguration.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatHeadlineBinding.ActivityItemsConfiguration.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAFDE820()
{
  unint64_t result;

  result = qword_1EF2B8AA0;
  if (!qword_1EF2B8AA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.ActivityItemsConfiguration, &type metadata for FormatHeadlineBinding.ActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AA0);
  }
  return result;
}

unint64_t sub_1BAFDE864(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFDE888();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFDE888()
{
  unint64_t result;

  result = qword_1EF2B8AA8;
  if (!qword_1EF2B8AA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.ActivityItemsConfiguration, &type metadata for FormatHeadlineBinding.ActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AA8);
  }
  return result;
}

unint64_t sub_1BAFDE8CC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7F5EC();
  a1[2] = sub_1BAEF6D50();
  result = sub_1BAFDE820();
  a1[3] = result;
  return result;
}

uint64_t sub_1BAFDE900(_QWORD *a1)
{
  return FormatHeadlineBinding.ActivityItemsConfiguration.init(from:)(a1);
}

uint64_t sub_1BAFDE914(_QWORD *a1)
{
  return FormatHeadlineBinding.ActivityItemsConfiguration.encode(to:)(a1);
}

uint64_t _s14descr1E72D7D21C26ActivityItemsConfigurationOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAFDE968 + 4 * byte_1BB8DFA50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAFDE988 + 4 * byte_1BB8DFA55[v4]))();
}

_BYTE *sub_1BAFDE968(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAFDE988(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFDE990(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFDE998(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFDE9A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFDE9A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.ActivityItemsConfiguration()
{
  return &type metadata for FormatHeadlineBinding.ActivityItemsConfiguration;
}

void PuzzleShareData.init(puzzleHistoryItem:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v16 = 0;
    v17 = 0;
    v14 = 0;
    v15 = 1;
    goto LABEL_11;
  }
  v11 = a1;
  v12 = objc_msgSend(v11, sel_completedDate);
  if (v12)
  {
    v13 = v12;
    sub_1BB86C874();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      sub_1BA76D750((uint64_t)v10);
      v14 = objc_msgSend(v11, sel_playDuration);
      v15 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  sub_1BA76D750((uint64_t)v10);
  v14 = 0;
  v15 = 1;
LABEL_8:
  v18 = objc_msgSend(v11, sel_rankID);
  if (v18)
  {
    v19 = v18;
    v16 = sub_1BB8729A0();
    v17 = v20;

  }
  else
  {

    v16 = 0;
    v17 = 0;
  }
LABEL_11:
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 32) = a1 != 0;
}

uint64_t PuzzleShareData.solveTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PuzzleShareData.rankID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleShareData.puzzlePlayed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

void __swiftcall PuzzleShareData.init(solveTime:rankID:puzzlePlayed:)(NewsFeed::PuzzleShareData *__return_ptr retstr, Swift::Int_optional solveTime, Swift::String_optional rankID, Swift::Bool puzzlePlayed)
{
  retstr->solveTime.value = solveTime.value;
  retstr->solveTime.is_nil = solveTime.is_nil;
  retstr->rankID = rankID;
  retstr->puzzlePlayed = puzzlePlayed;
}

uint64_t destroy for FormatSystemFont()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleShareData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleShareData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for PuzzleShareData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleShareData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleShareData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleShareData()
{
  return &type metadata for PuzzleShareData;
}

void static FormatTagMoreActions.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xF000000000000007;
  a1[1] = &unk_1E726EEB0;
}

void static FormatTagNavigate.default.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t FormatTagNavigate.init(parameters:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FormatTagNavigate.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAFDEDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAFDF104(a1, a2, (void (*)(_QWORD))sub_1BA7F10C4, a3);
}

uint64_t sub_1BAFDEE08@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _OWORD v34[4];

  v4 = v3;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - v14;
  v16 = sub_1BB86BFF8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[1];
  v34[0] = *a1;
  v34[1] = v20;
  v21 = a1[3];
  v34[2] = a1[2];
  v34[3] = v21;
  v31 = a2;
  if (!*(_QWORD *)(a2 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a3, v4, v8);
  v29 = a3;
  v22 = v4;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BAFEE640((uint64_t)v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v29, v4, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v24 = sub_1BB86BF38();
    if (v24)
      v25 = v24;
    else
      v25 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v24);
    *(&v29 - 2) = (uint64_t)v34;
    v26 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BAFEE694, (uint64_t)(&v29 - 4), v31);
    v33 = v25;
    sub_1BA7F0E18(v26);
    sub_1BB86BF44();
    v27 = (uint64_t)v30;
    sub_1BB86BF80();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v28 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v32, v22, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v27, 1, v8) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v29, v28, v8);
      return sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v29, v27, v8);
    }
  }
}

uint64_t sub_1BAFDF104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v27 = a1;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - v14;
  v16 = sub_1BB86BFF8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v7 + 16))(a4, v29, v6, v18);
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BAFEE640((uint64_t)v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a4, v29, v6);
  }
  else
  {
    v26 = a4;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    v22 = sub_1BB86BF38();
    if (v22)
      v23 = v22;
    else
      v23 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v22);
    v24 = v28;
    *(&v26 - 2) = v27;
    v25 = sub_1BA7F0E2C(v24, (uint64_t)(&v26 - 4), a2);
    v30 = v23;
    sub_1BA7F0E18(v25);
    sub_1BB86BF44();
    sub_1BB86BF80();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v29, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26, v9, v6);
      return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26, v12, v6);
    }
  }
}

_OWORD *sub_1BAFDF3D0(void *a1, _OWORD *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v30 = a4;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v30 - v17;
  if (a5)
  {
    if (a5 == 1)
    {
      swift_bridgeObjectRetain();
      v19 = objc_msgSend(a1, sel_identifier);
      if (!v19)
      {
        sub_1BB8729A0();
        v19 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      v20 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v19);

      sub_1BB86C5EC();
      sub_1BAFDEE08(a2, a3, (uint64_t)v18);
      sub_1BA7EDFFC(a3, v30, 1);
      v21 = *(void (**)(char *, uint64_t))(v13 + 8);
      v21(v15, v12);
      if (qword_1ED3BA8B8 != -1)
        swift_once();
      v22 = qword_1ED3B0AE8;
      sub_1BB86D294();
      swift_retain();
      sub_1BB86D27C();
      if (qword_1ED3D5158 != -1)
        swift_once();
      sub_1BB86D270();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      a2 = (_OWORD *)sub_1BA7E8134(v22, (uint64_t)v11);
      v21(v18, v12);
    }
    else
    {
      if (a3 | v30)
      {
        if (a3 ^ 1 | v30)
        {
          if (qword_1ED39DFB0 != -1)
            swift_once();
          type metadata accessor for FormatCommandAction();
          swift_allocObject();
          swift_unknownObjectRetain();
          v28 = swift_retain();
          v25 = sub_1BAFEC334(v28, (uint64_t)a1);
        }
        else
        {
          if (qword_1ED3BA8E8 != -1)
            swift_once();
          type metadata accessor for FormatCommandAction();
          swift_allocObject();
          swift_unknownObjectRetain();
          v24 = swift_retain();
          v25 = sub_1BAFEC088(v24, (uint64_t)a1);
        }
        a2 = (_OWORD *)v25;
      }
      else
      {
        if (qword_1ED3BA900 != -1)
          swift_once();
        v26 = qword_1ED3C4C50;
        type metadata accessor for FormatVariableCollection();
        v27 = swift_allocObject();
        *(_QWORD *)(v27 + 16) = MEMORY[0x1E0DEE9E0];
        type metadata accessor for FormatOptionCollection();
        swift_initStackObject();
        swift_retain();
        swift_unknownObjectRetain();
        sub_1BA6E1E0C(MEMORY[0x1E0DEE9D8], v27);
        swift_release();
        LOWORD(v27) = sub_1BB874398() & 1 | 0x100;
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        a2 = (_OWORD *)sub_1BAFEBDE0(v26, (uint64_t)a1, v27);
      }
      swift_release();
    }
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v23 = 0xD000000000000014;
    v23[1] = 0x80000001BB8DFF20;
    v23[5] = &type metadata for FormatVersions.StarSky;
    v23[6] = &off_1E734BDC0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return a2;
}

void sub_1BAFDF8DC(char *a1)
{
  sub_1BB8008D8(*a1);
}

void sub_1BAFDF8E8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAFDF930()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAFDF9B4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFDF9EC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAFDFA5C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAFDFAA0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAFDFB24(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251150;
}

uint64_t static FormatTagNavigate.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA5B35E8(*a1, *a2);
}

void sub_1BAFDFB48(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BAFDFBA4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  swift_bridgeObjectRetain();
  sub_1BA689E44(0x6B636F6C62, 0xE500000000000000);
  v2 = v1;
  v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    sub_1BA7114A0();
    sub_1BB873ABC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v4 = sub_1BA9C0430(1uLL, 0x6B636F6C62, 0xE500000000000000);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v4, v6, v8, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(uint64_t))((char *)sub_1BAFDFD10 + 4 * byte_1BB8DFBB9[v0]))(v3);
}

uint64_t sub_1BAFDFD10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v4 = v3;
  if (qword_1ED3BA900 != -1)
    swift_once();
  v5 = qword_1ED3C4C50;
  type metadata accessor for FormatVariableCollection();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = MEMORY[0x1E0DEE9E0];
  type metadata accessor for FormatOptionCollection();
  swift_initStackObject();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BA6E1E0C(MEMORY[0x1E0DEE9D8], v6);
  swift_release();
  LOWORD(v6) = sub_1BB874398() & 1 | 0x100;
  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  v7 = sub_1BAFEBDE0(v5, v4, v6);
  swift_release();
  v8 = type metadata accessor for FormatInspectionItem(0);
  v9 = (_QWORD *)((char *)v0 + *(int *)(v8 + 24));
  *v9 = v7;
  v10 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  *v0 = v2;
  v0[1] = v1;
  v0[2] = 0;
  v0[3] = 0;
  v11 = (char *)v0 + *(int *)(v8 + 28);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = -1;
  v12 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v0, 0, 1, v12);
}

uint64_t FormatTagNavigate.parameters.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatTagNavigate.parameters.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BAFE010C(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA5B35E8(*a1, *a2);
}

uint64_t FormatTagMoreActions.title.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatTagMoreActions.actions.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *FormatTagMoreActions.init(title:actions:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t FormatTagMoreActions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char v15;
  void *v16;

  sub_1BAFEB540(0, &qword_1EF2B8AB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFEB4B8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = 0;
  sub_1BA650B5C();
  sub_1BB874068();
  v11 = (uint64_t)v16;
  sub_1BA4AD288(0, &qword_1ED39EB98, (uint64_t)&type metadata for FormatTagMoreActions.Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v15 = 1;
  sub_1BA5E7FF4(v11);
  sub_1BAFEB59C(&qword_1ED39EBB0, (uint64_t (*)(void))sub_1BAFEB4FC, MEMORY[0x1E0DEAF40]);
  sub_1BB874068();
  v12 = v16;
  if (!v16)
    v12 = &unk_1E726FC50;
  v14 = v12;
  v16 = v12;
  sub_1BA5C69E0((unint64_t *)&unk_1ED39EBA0, &qword_1ED39EB98, (uint64_t)&type metadata for FormatTagMoreActions.Action, MEMORY[0x1E0DEAF38]);
  v13 = sub_1BB872BC8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  sub_1BA5E7FF4(v11);
  swift_bridgeObjectRetain();
  sub_1BA5E800C(v11);
  *a2 = v11;
  a2[1] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BA5E800C(v11);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1BAFE03D4@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;

  v2 = 0x776F6C6C6F66;
  if (*result)
    v2 = 0x6B636F6C62;
  v3 = 0xE600000000000000;
  if (*result)
    v3 = 0xE500000000000000;
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t FormatTagMoreActions.Action.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B636F6C62;
  else
    return 0x776F6C6C6F66;
}

uint64_t FormatTagMoreActions.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFEB540(0, &qword_1EF2B8AC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v26 = v6;
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = *v1;
  v22 = v1[1];
  v23 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFEB4B8();
  sub_1BB8746C8();
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA6F3F88();
  v13 = &v5[*(int *)(v12 + 48)];
  v14 = *(int *)(v12 + 64);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C20);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17(v5, v16, v15);
  if (qword_1ED3C6D18 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476B60);
  v17(v13, v18, v15);
  *(_OWORD *)&v5[v14] = xmmword_1BB8E01F0;
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v19 = v25;
  sub_1BA69F160((uint64_t)v5, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  if (v19)
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v26);
  v28 = v23;
  v27 = 0;
  sub_1BA76361C();
  v21 = v26;
  sub_1BB87414C();
  v28 = v22;
  v27 = 1;
  sub_1BA4AD288(0, &qword_1ED39EB98, (uint64_t)&type metadata for FormatTagMoreActions.Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAFEB59C(&qword_1ED39EA28, (uint64_t (*)(void))sub_1BAFEB618, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v21);
}

uint64_t sub_1BAFE0754(char *a1, char *a2)
{
  return sub_1BB7FA7EC(*a1, *a2);
}

uint64_t sub_1BAFE0760()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFE07DC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFE0834()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFE08AC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAFE0908(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x656C746974;
  if (*v1)
    v2 = 0x736E6F69746361;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAFE0944()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6F69746361;
  else
    return 0x656C746974;
}

uint64_t sub_1BAFE097C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BAFE09DC()
{
  sub_1BAFEB4B8();
  return sub_1BB874710();
}

uint64_t sub_1BAFE0A04()
{
  sub_1BAFEB4B8();
  return sub_1BB87471C();
}

NewsFeed::FormatTagMoreActions::Action_optional __swiftcall FormatTagMoreActions.Action.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatTagMoreActions::Action_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1BAFE0A8C(char *a1, char *a2)
{
  return sub_1BB7FA750(*a1, *a2);
}

uint64_t sub_1BAFE0A98()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFE0B10()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFE0B64()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatTagMoreActions::Action_optional sub_1BAFE0BD8(Swift::String *a1)
{
  return FormatTagMoreActions.Action.init(rawValue:)(*a1);
}

void sub_1BAFE0BE4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x776F6C6C6F66;
  if (*v1)
    v2 = 0x6B636F6C62;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAFE0C1C()
{
  sub_1BAFF0894();
  return sub_1BB872D60();
}

uint64_t sub_1BAFE0C78()
{
  sub_1BAFF0894();
  return sub_1BB872D0C();
}

void sub_1BAFE0CC4(_QWORD *a1@<X8>)
{
  *a1 = 0xF000000000000007;
  a1[1] = &unk_1E72701B8;
}

uint64_t sub_1BAFE0CD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTagMoreActions.init(from:)(a1, a2);
}

uint64_t sub_1BAFE0CEC(_QWORD *a1)
{
  return FormatTagMoreActions.encode(to:)(a1);
}

uint64_t sub_1BAFE0D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadline(0);
  sub_1BAFEFD38();
  sub_1BA83AA2C();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE0DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1BAFEFA38();
  sub_1BA83A980();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE0EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0240();
  sub_1BA83A290();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE0F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0114();
  sub_1BA83ADF0();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE1074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0054();
  sub_1BA839E24();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE114C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFEFEE0();
  sub_1BA83C6D8();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE1224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for LiveActivityCommandContext();
  sub_1BAFF0838();
  sub_1BA820008();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFE1304(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_1BA67B2A8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BAFEE368, (uint64_t)&type metadata for IgnoringCommandState);
}

uint64_t sub_1BAFE1318(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_1BA67B2A8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BAFEE10C, (uint64_t)&type metadata for BlockingCommandState);
}

uint64_t sub_1BAFE132C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_1BA67B2A8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BAFEDEF8, (uint64_t)&type metadata for FollowingCommandState);
}

uint64_t sub_1BAFE1340(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int16 a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int *v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, __n128);
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  int v47;

  v44 = a2;
  v45 = *(double *)&a4;
  v47 = a5;
  sub_1BA675B7C();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86FB08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - v16;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (double *)((char *)&v42 - v20);
  v23.n128_f64[0] = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v42 - v24;
  v46 = v26;
  v43 = v14;
  if (a3)
  {
    if (a3 == 1)
    {
      *v17 = a1 & 1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v17 = a1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v29 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104);
    v29(v17, *v27, v11, v23);
  }
  else
  {
    v28 = v44;
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = v28;
    v29 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104);
    ((void (*)(char *, _QWORD, uint64_t, double))v29)(v17, *MEMORY[0x1E0DB7738], v11, v23.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v30 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v30(v25, v17, v11);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v32 = 1;
  v31(v25, 0, 1, v11);
  if ((v47 & 0x100) == 0)
  {
    v33 = v45;
    if ((v47 & 1) != 0)
      v33 = 0.0;
    *v21 = v33;
    ((void (*)(double *, _QWORD, uint64_t))v29)(v21, *MEMORY[0x1E0DB7730], v11);
    v32 = 0;
  }
  v31((char *)v21, v32, 1, v11);
  v34 = (uint64_t)&v10[*(int *)(v8 + 48)];
  v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v21, v34, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v36((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v11) == 1)
    {
      v37 = -1;
    }
    else
    {
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v37 = 0;
    }
  }
  else
  {
    v38 = v46;
    sub_1BA4C2DD8((uint64_t)v10, v46, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v11) == 1)
    {
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v38, v11);
      v37 = 0;
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v39 = v43;
      v30(v43, (char *)v34, v11);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v37 = sub_1BB872958();
      v40 = *(void (**)(char *, uint64_t))(v12 + 8);
      v40(v39, v11);
      v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v40((char *)v38, v11);
    }
  }
  sub_1BA4A2E80((uint64_t)v10, v35);
  return v37 & 1;
}

uint64_t sub_1BAFE1714(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  unsigned int *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v42 = a2;
  sub_1BA675B7C();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86FB08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v41 - v15;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v17);
  v43 = (uint64_t)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v41 - v20;
  v23.n128_f64[0] = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v41 - v24;
  if (a3)
  {
    if (a3 == 1)
    {
      *v16 = a1 & 1;
      v26 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v16 = a1;
      v26 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104))(v16, *v26, v11, v23);
  }
  else
  {
    v27 = v42;
    *(_QWORD *)v16 = a1;
    *((_QWORD *)v16 + 1) = v27;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v12 + 104))(v16, *MEMORY[0x1E0DB7738], v11, v23.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v28(v25, v16, v11);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v29(v25, 0, 1, v11);
  v44 = a4;
  if (a4 == 4)
  {
    v30 = v21;
    v31 = 1;
  }
  else
  {
    sub_1BAFEF9EC();
    sub_1BB870288();
    v30 = v21;
    v31 = 0;
  }
  v29(v30, v31, 1, v11);
  v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
  v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v21, v32, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v34((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v11) == 1)
    {
      v35 = -1;
    }
    else
    {
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v35 = 0;
    }
  }
  else
  {
    v36 = v43;
    sub_1BA4C2DD8((uint64_t)v10, v43, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v11) == 1)
    {
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v36, v11);
      v35 = 0;
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v37 = v41;
      v28(v41, (char *)v32, v11);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v35 = sub_1BB872958();
      v38 = *(void (**)(char *, uint64_t))(v12 + 8);
      v38(v37, v11);
      v39 = v36;
      v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v38((char *)v39, v11);
    }
  }
  sub_1BA4A2E80((uint64_t)v10, v33);
  return v35 & 1;
}

uint64_t sub_1BAFE1AEC(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_1BA67B2A8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BA67B868, (uint64_t)&type metadata for SavingCommandState);
}

uint64_t sub_1BAFE1B00(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  unsigned int *v27;
  void (*v28)(char *, _QWORD, uint64_t, __n128);
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  uint64_t (*v36)(_QWORD);
  char v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a4;
  v45 = a5;
  sub_1BA675B7C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86FB08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - v16;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v18);
  v43 = (uint64_t)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v42 - v21;
  v24.n128_f64[0] = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v42 - v25;
  if (a3)
  {
    if (a3 == 1)
    {
      *v17 = a1 & 1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v17 = a1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v28 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104);
    v28(v17, *v27, v12, v24);
  }
  else
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    v28 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104);
    ((void (*)(char *, _QWORD, uint64_t, double))v28)(v17, *MEMORY[0x1E0DB7738], v12, v24.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v29(v26, v17, v12);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v31 = 1;
  v30(v26, 0, 1, v12);
  v32 = v45;
  if (v45)
  {
    *(_QWORD *)v22 = v44;
    *((_QWORD *)v22 + 1) = v32;
    ((void (*)(char *, _QWORD, uint64_t))v28)(v22, *MEMORY[0x1E0DB7738], v12);
    v31 = 0;
  }
  v30(v22, v31, 1, v12);
  v33 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v22, v33, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v34((uint64_t)v11, 1, v12) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    v35 = v34(v33, 1, v12);
    if (v35 == 1)
      v36 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
    else
      v36 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    if (v35 == 1)
      v37 = -1;
    else
      v37 = 0;
  }
  else
  {
    v38 = v43;
    sub_1BA4C2DD8((uint64_t)v11, v43, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v33, 1, v12) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
      v37 = 0;
      v36 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v39 = v42;
      v29(v42, (char *)v33, v12);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      swift_bridgeObjectRetain();
      v37 = sub_1BB872958();
      v40 = *(void (**)(char *, uint64_t))(v13 + 8);
      v40(v39, v12);
      v36 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v40((char *)v38, v12);
    }
  }
  sub_1BA4A2E80((uint64_t)v11, v36);
  return v37 & 1;
}

uint64_t sub_1BAFE1EDC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  unsigned int *v27;
  void (*v28)(char *, _QWORD, uint64_t, __n128);
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v43 = a5;
  v41 = a4;
  sub_1BA675B7C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86FB08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v40 - v16;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v18);
  v42 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - v21;
  v24.n128_f64[0] = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v40 - v25;
  if (a3)
  {
    if (a3 == 1)
    {
      *v17 = a1 & 1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v17 = a1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v28 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104);
    v28(v17, *v27, v12, v24);
  }
  else
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    v28 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104);
    ((void (*)(char *, _QWORD, uint64_t, double))v28)(v17, *MEMORY[0x1E0DB7738], v12, v24.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v29(v26, v17, v12);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v31 = 1;
  v30(v26, 0, 1, v12);
  if ((v43 & 1) == 0)
  {
    *(_QWORD *)v22 = v41;
    ((void (*)(char *, _QWORD, uint64_t))v28)(v22, *MEMORY[0x1E0DB7720], v12);
    v31 = 0;
  }
  v30(v22, v31, 1, v12);
  v32 = (uint64_t)&v11[*(int *)(v9 + 48)];
  v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v22, v32, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v34((uint64_t)v11, 1, v12) == 1)
  {
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v12) == 1)
    {
      v35 = -1;
    }
    else
    {
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v35 = 0;
    }
  }
  else
  {
    v36 = v42;
    sub_1BA4C2DD8((uint64_t)v11, v42, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v12) == 1)
    {
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v36, v12);
      v35 = 0;
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v37 = v40;
      v29(v40, (char *)v32, v12);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v35 = sub_1BB872958();
      v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v37, v12);
      v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v38((char *)v36, v12);
    }
  }
  sub_1BA4A2E80((uint64_t)v11, v33);
  return v35 & 1;
}

uint64_t sub_1BAFE22A0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_1BAFE26A4(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BAFEFFE8, (uint64_t)&type metadata for FeedPuzzleProgressState);
}

uint64_t sub_1BAFE22B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  unsigned int *v27;
  void (*v28)(char *, _QWORD, uint64_t, __n128);
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v43 = a5;
  v41 = a4;
  sub_1BA675B7C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86FB08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v40 - v16;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v18);
  v42 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - v21;
  v24.n128_f64[0] = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v40 - v25;
  if (a3)
  {
    if (a3 == 1)
    {
      *v17 = a1 & 1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v17 = a1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v28 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104);
    v28(v17, *v27, v12, v24);
  }
  else
  {
    *(_QWORD *)v17 = a1;
    *((_QWORD *)v17 + 1) = a2;
    v28 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104);
    ((void (*)(char *, _QWORD, uint64_t, double))v28)(v17, *MEMORY[0x1E0DB7738], v12, v24.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v29(v26, v17, v12);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v31 = 1;
  v30(v26, 0, 1, v12);
  if (v43 > 1u)
  {
    if (v43 != 2)
      goto LABEL_12;
    *(_QWORD *)v22 = 0;
  }
  else
  {
    *(_QWORD *)v22 = v41;
  }
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, *MEMORY[0x1E0DB7730], v12);
  v31 = 0;
LABEL_12:
  v30(v22, v31, 1, v12);
  v32 = (uint64_t)&v11[*(int *)(v9 + 48)];
  v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v22, v32, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v34((uint64_t)v11, 1, v12) == 1)
  {
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v12) == 1)
    {
      v35 = -1;
    }
    else
    {
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v35 = 0;
    }
  }
  else
  {
    v36 = v42;
    sub_1BA4C2DD8((uint64_t)v11, v42, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v12) == 1)
    {
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v36, v12);
      v35 = 0;
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v37 = v40;
      v29(v40, (char *)v32, v12);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v35 = sub_1BB872958();
      v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v37, v12);
      v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v38((char *)v36, v12);
    }
  }
  sub_1BA4A2E80((uint64_t)v11, v33);
  return v35 & 1;
}

uint64_t sub_1BAFE2690(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_1BAFE26A4(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BAFF07CC, (uint64_t)&type metadata for LiveActivitySubscriptionCommandState);
}

uint64_t sub_1BAFE26A4(uint64_t a1, uint64_t a2, char a3, char a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  unsigned int *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  char v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  char v49;

  v46 = a5;
  v47 = a6;
  v45 = a2;
  sub_1BA675B7C();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86FB08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v19);
  v48 = (uint64_t)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v44 - v22;
  v25.n128_f64[0] = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v44 - v26;
  if (a3)
  {
    if (a3 == 1)
    {
      *v18 = a1 & 1;
      v28 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v18 = a1;
      v28 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v18, *v28, v13, v25);
  }
  else
  {
    v29 = v45;
    *(_QWORD *)v18 = a1;
    *((_QWORD *)v18 + 1) = v29;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v14 + 104))(v18, *MEMORY[0x1E0DB7738], v13, v25.n128_f64[0]);
    swift_bridgeObjectRetain();
  }
  v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v30(v27, v18, v13);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v32 = v31(v27, 0, 1, v13);
  v49 = a4;
  if (a4 == 3)
  {
    v33 = v23;
    v34 = 1;
  }
  else
  {
    v46(v32);
    sub_1BB870288();
    v33 = v23;
    v34 = 0;
  }
  v31(v33, v34, 1, v13);
  v35 = (uint64_t)&v12[*(int *)(v10 + 48)];
  v36 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v27, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v23, v35, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v37((uint64_t)v12, 1, v13) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v37(v35, 1, v13) == 1)
    {
      v38 = -1;
    }
    else
    {
      v36 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v38 = 0;
    }
  }
  else
  {
    v39 = v48;
    sub_1BA4C2DD8((uint64_t)v12, v48, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v37(v35, 1, v13) == 1)
    {
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v39, v13);
      v38 = 0;
      v36 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v40 = v44;
      v30(v44, (char *)v35, v13);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v38 = sub_1BB872958();
      v41 = *(void (**)(char *, uint64_t))(v14 + 8);
      v41(v40, v13);
      v42 = v39;
      v36 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v41((char *)v42, v13);
    }
  }
  sub_1BA4A2E80((uint64_t)v12, v36);
  return v38 & 1;
}

uint64_t sub_1BAFE2A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadline(0);
  sub_1BAFEFD38();
  sub_1BA83AA2C();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE2B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1BAFEFA38();
  sub_1BA83A980();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE2C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  swift_retain();
  a9(a5, a6, a8, v15, &type metadata for FeedPuzzle, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEAFB8], MEMORY[0x1E0DBCA78], ObjectType, a2);
  return swift_release();
}

uint64_t sub_1BAFE2D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0240();
  sub_1BA83A290();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE2DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0114();
  sub_1BA83ADF0();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE2EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0054();
  sub_1BA839E24();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE2F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFEFEE0();
  sub_1BA83C6D8();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE3074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for LiveActivityCommandContext();
  sub_1BAFF0838();
  sub_1BA820008();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE3154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadline(0);
  sub_1BAFEFD38();
  sub_1BA83AA2C();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE3234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1BAFEFA38();
  sub_1BA83A980();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE3314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0240();
  sub_1BA83A290();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE33EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0114();
  sub_1BA83ADF0();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE34C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFF0054();
  sub_1BA839E24();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BAFEFEE0();
  sub_1BA83C6D8();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE3674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  type metadata accessor for LiveActivityCommandContext();
  sub_1BAFF0838();
  sub_1BA820008();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFE3754(uint64_t a1, __int16 a2, void (*a3)(double *))
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (double *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 0x100) != 0)
  {
    v13 = sub_1BB86FB08();
    (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  }
  else
  {
    v9 = *(double *)&a1;
    if ((a2 & 1) != 0)
      v9 = 0.0;
    *v8 = v9;
    v10 = *MEMORY[0x1E0DB7730];
    v11 = sub_1BB86FB08();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(double *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
    (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  a3(v8);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFE3864(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 > 1u)
  {
    if (a2 != 2)
    {
      v12 = sub_1BB86FB08();
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
      goto LABEL_7;
    }
    *v8 = 0;
  }
  else
  {
    *v8 = a1;
  }
  v9 = *MEMORY[0x1E0DB7730];
  v10 = sub_1BB86FB08();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 104))(v8, v9, v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  a3(v8);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFE3978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_1BAFE39F0(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1BA82C0F4, (uint64_t)&type metadata for IgnoringCommandState, (void (*)(uint64_t))sub_1BAFEE368) & 1;
}

uint64_t sub_1BAFE39B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_1BAFE39F0(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, (void (*)(uint64_t))sub_1BAFEE10C) & 1;
}

uint64_t sub_1BAFE39F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, void (*a10)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;

  v50 = a8;
  v51 = a6;
  v53 = a5;
  v46 = a4;
  v48 = a3;
  v52 = a2;
  sub_1BA675B7C();
  v49 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86FB08();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - v18;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v20);
  v47 = (uint64_t)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v45 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v45 - v26;
  v56 = a7;
  swift_getObjectType();
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  v50();
  v51 = a9;
  sub_1BB86FF40();
  if ((_BYTE)v53)
  {
    if (v53 == 1)
    {
      *v19 = v48 & 1;
      v28 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v19 = v48;
      v28 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, *v28, v14);
  }
  else
  {
    v29 = v46;
    *(_QWORD *)v19 = v48;
    *((_QWORD *)v19 + 1) = v29;
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E0DB7738], v14);
    swift_bridgeObjectRetain();
  }
  v30 = v49;
  v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v31(v27, v19, v14);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v33 = v32(v27, 0, 1, v14);
  v54 = v55;
  if (v55 == 2)
  {
    v34 = v24;
    v35 = 1;
  }
  else
  {
    a10(v33);
    sub_1BB870288();
    v34 = v24;
    v35 = 0;
  }
  v32(v34, v35, 1, v14);
  v36 = (uint64_t)&v13[*(int *)(v30 + 48)];
  v37 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v27, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v24, v36, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v38((uint64_t)v13, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v38(v36, 1, v14) == 1)
    {
      v39 = -1;
    }
    else
    {
      v37 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v39 = 0;
    }
  }
  else
  {
    v40 = v47;
    sub_1BA4C2DD8((uint64_t)v13, v47, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v38(v36, 1, v14) == 1)
    {
      sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v40, v14);
      v39 = 0;
      v37 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v41 = v45;
      v31(v45, (char *)v36, v14);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v39 = sub_1BB872958();
      v42 = *(void (**)(char *, uint64_t))(v15 + 8);
      v42(v41, v14);
      v43 = v40;
      v37 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v42((char *)v43, v14);
    }
  }
  sub_1BA4A2E80((uint64_t)v13, v37);
  return v39 & 1;
}

uint64_t sub_1BAFE3E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  __int16 v54;

  v50 = a5;
  v45 = a4;
  v47 = a3;
  v49 = a2;
  sub_1BA675B7C();
  v48 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86FB08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v19);
  v46 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v43 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v43 - v25;
  v53 = a7;
  v54 = a8;
  swift_getObjectType();
  sub_1BA82BE0C();
  sub_1BB86FF40();
  if ((_BYTE)v50)
  {
    if (v50 == 1)
    {
      *v18 = v47 & 1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v18 = v47;
      v27 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v18, *v27, v13);
  }
  else
  {
    v28 = v45;
    *(_QWORD *)v18 = v47;
    *((_QWORD *)v18 + 1) = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v18, *MEMORY[0x1E0DB7738], v13);
    swift_bridgeObjectRetain();
  }
  v29 = v48;
  v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v30(v26, v18, v13);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v31(v26, 0, 1, v13);
  v51 = v52;
  if (v52 == 2)
  {
    v32 = v23;
    v33 = 1;
  }
  else
  {
    sub_1BAFEDEF8();
    sub_1BB870288();
    v32 = v23;
    v33 = 0;
  }
  v31(v32, v33, 1, v13);
  v34 = (uint64_t)&v12[*(int *)(v29 + 48)];
  v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v23, v34, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v36((uint64_t)v12, 1, v13) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v13) == 1)
    {
      v37 = -1;
    }
    else
    {
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v37 = 0;
    }
  }
  else
  {
    v38 = v46;
    sub_1BA4C2DD8((uint64_t)v12, v46, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v13) == 1)
    {
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v38, v13);
      v37 = 0;
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v39 = v44;
      v30(v44, (char *)v34, v13);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v37 = sub_1BB872958();
      v40 = *(void (**)(char *, uint64_t))(v14 + 8);
      v40(v39, v13);
      v41 = v38;
      v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v40((char *)v41, v13);
    }
  }
  sub_1BA4A2E80((uint64_t)v12, v35);
  return v37 & 1;
}

uint64_t sub_1BAFE427C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int *v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  double v49;
  char v50;
  char v51;

  v46 = a7;
  v47 = a2;
  v48 = a5;
  v42 = a4;
  v44 = a3;
  sub_1BA675B7C();
  v45 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86FB08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - v14;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v16);
  v43 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (double *)((char *)&v41 - v19);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v41 - v22;
  swift_getObjectType();
  type metadata accessor for FeedHeadline(0);
  sub_1BA83AA2C();
  sub_1BB86FF40();
  if ((_BYTE)v48)
  {
    if (v48 == 1)
    {
      *v15 = v44 & 1;
      v24 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v15 = v44;
      v24 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v26 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
    v26(v15, *v24, v10);
  }
  else
  {
    v25 = v42;
    *(_QWORD *)v15 = v44;
    *((_QWORD *)v15 + 1) = v25;
    v26 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
    v26(v15, *MEMORY[0x1E0DB7738], v10);
    swift_bridgeObjectRetain();
  }
  v27 = v45;
  v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v28(v23, v15, v10);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v30 = 1;
  v29(v23, 0, 1, v10);
  if ((v51 & 1) == 0)
  {
    v31 = v49;
    if ((v50 & 1) != 0)
      v31 = 0.0;
    *v20 = v31;
    v26((char *)v20, *MEMORY[0x1E0DB7730], v10);
    v30 = 0;
  }
  v29((char *)v20, v30, 1, v10);
  v32 = (uint64_t)&v9[*(int *)(v27 + 48)];
  v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v20, v32, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v34((uint64_t)v9, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v10) == 1)
    {
      v35 = -1;
    }
    else
    {
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v35 = 0;
    }
  }
  else
  {
    v36 = v43;
    sub_1BA4C2DD8((uint64_t)v9, v43, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v34(v32, 1, v10) == 1)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v36, v10);
      v35 = 0;
      v33 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v37 = v41;
      v28(v41, (char *)v32, v10);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v35 = sub_1BB872958();
      v38 = *(void (**)(char *, uint64_t))(v11 + 8);
      v38(v37, v10);
      v39 = v36;
      v33 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v38((char *)v39, v10);
    }
  }
  sub_1BA4A2E80((uint64_t)v9, v33);
  return v35 & 1;
}

uint64_t sub_1BAFE46B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  char v49;

  v45 = a7;
  v46 = a2;
  v47 = a5;
  v41 = a4;
  v43 = a3;
  sub_1BA675B7C();
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86FB08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v16);
  v42 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v40 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - v22;
  swift_getObjectType();
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1BA83A980();
  sub_1BB86FF40();
  if ((_BYTE)v47)
  {
    if (v47 == 1)
    {
      *v15 = v43 & 1;
      v24 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v15 = v43;
      v24 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v15, *v24, v10);
  }
  else
  {
    v25 = v41;
    *(_QWORD *)v15 = v43;
    *((_QWORD *)v15 + 1) = v25;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v15, *MEMORY[0x1E0DB7738], v10);
    swift_bridgeObjectRetain();
  }
  v26 = v44;
  v27 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v27(v23, v15, v10);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v28(v23, 0, 1, v10);
  v48 = v49;
  if (v49 == 4)
  {
    v29 = v20;
    v30 = 1;
  }
  else
  {
    sub_1BAFEF9EC();
    sub_1BB870288();
    v29 = v20;
    v30 = 0;
  }
  v28(v29, v30, 1, v10);
  v31 = (uint64_t)&v9[*(int *)(v26 + 48)];
  v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v20, v31, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v33((uint64_t)v9, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v33(v31, 1, v10) == 1)
    {
      v34 = -1;
    }
    else
    {
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v34 = 0;
    }
  }
  else
  {
    v35 = v42;
    sub_1BA4C2DD8((uint64_t)v9, v42, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v33(v31, 1, v10) == 1)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v35, v10);
      v34 = 0;
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v36 = v40;
      v27(v40, (char *)v31, v10);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v34 = sub_1BB872958();
      v37 = *(void (**)(char *, uint64_t))(v11 + 8);
      v37(v36, v10);
      v38 = v35;
      v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v37((char *)v38, v10);
    }
  }
  sub_1BA4A2E80((uint64_t)v9, v32);
  return v34 & 1;
}

uint64_t sub_1BAFE4AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v49 = a6;
  v50 = a2;
  v51 = a5;
  v45 = a4;
  v47 = a3;
  sub_1BA675B7C();
  v48 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86FB08();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v44 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v43 - v18;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v20);
  v46 = (uint64_t)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v43 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v43 - v26;
  v53 = a7;
  v54 = a8;
  v55 = a9;
  swift_getObjectType();
  sub_1BB86FF40();
  if ((_BYTE)v51)
  {
    if (v51 == 1)
    {
      *v19 = v47 & 1;
      v28 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v19 = v47;
      v28 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, *v28, v14);
  }
  else
  {
    v29 = v45;
    *(_QWORD *)v19 = v47;
    *((_QWORD *)v19 + 1) = v29;
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E0DB7738], v14);
    swift_bridgeObjectRetain();
  }
  v30 = v48;
  v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v31(v27, v19, v14);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v33 = 1;
  v32(v27, 0, 1, v14);
  if (v52 != 2)
  {
    sub_1BB872F1C();
    v33 = 0;
  }
  v32(v24, v33, 1, v14);
  v34 = (uint64_t)&v13[*(int *)(v30 + 48)];
  v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v27, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v24, v34, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v36((uint64_t)v13, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v14) == 1)
    {
      v37 = -1;
    }
    else
    {
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v37 = 0;
    }
  }
  else
  {
    v38 = v46;
    sub_1BA4C2DD8((uint64_t)v13, v46, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v14) == 1)
    {
      sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v38, v14);
      v37 = 0;
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v39 = v44;
      v31(v44, (char *)v34, v14);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v37 = sub_1BB872958();
      v40 = *(void (**)(char *, uint64_t))(v15 + 8);
      v40(v39, v14);
      v41 = v38;
      v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v40((char *)v41, v14);
    }
  }
  sub_1BA4A2E80((uint64_t)v13, v35);
  return v37 & 1;
}

uint64_t sub_1BAFE4F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;

  v50 = a5;
  v45 = a4;
  v47 = a3;
  v49 = a2;
  sub_1BA675B7C();
  v48 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86FB08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v19);
  v46 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v43 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v43 - v25;
  v53 = a7;
  v54 = a8;
  swift_getObjectType();
  sub_1BA4C3E90(0, &qword_1ED3BE418, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  sub_1BA67B824();
  sub_1BB86FF40();
  if ((_BYTE)v50)
  {
    if (v50 == 1)
    {
      *v18 = v47 & 1;
      v27 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v18 = v47;
      v27 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v18, *v27, v13);
  }
  else
  {
    v28 = v45;
    *(_QWORD *)v18 = v47;
    *((_QWORD *)v18 + 1) = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v18, *MEMORY[0x1E0DB7738], v13);
    swift_bridgeObjectRetain();
  }
  v29 = v48;
  v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v30(v26, v18, v13);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v31(v26, 0, 1, v13);
  v51 = v52;
  if (v52 == 2)
  {
    v32 = v23;
    v33 = 1;
  }
  else
  {
    sub_1BA67B868();
    sub_1BB870288();
    v32 = v23;
    v33 = 0;
  }
  v31(v32, v33, 1, v13);
  v34 = (uint64_t)&v12[*(int *)(v29 + 48)];
  v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v26, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v23, v34, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v36((uint64_t)v12, 1, v13) == 1)
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v13) == 1)
    {
      v37 = -1;
    }
    else
    {
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v37 = 0;
    }
  }
  else
  {
    v38 = v46;
    sub_1BA4C2DD8((uint64_t)v12, v46, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v36(v34, 1, v13) == 1)
    {
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v38, v13);
      v37 = 0;
      v35 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v39 = v44;
      v30(v44, (char *)v34, v13);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v37 = sub_1BB872958();
      v40 = *(void (**)(char *, uint64_t))(v14 + 8);
      v40(v39, v13);
      v41 = v38;
      v35 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v40((char *)v41, v13);
    }
  }
  sub_1BA4A2E80((uint64_t)v12, v35);
  return v37 & 1;
}

uint64_t sub_1BAFE5364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;

  v42 = a5;
  v38 = a4;
  v40 = a3;
  sub_1BA675B7C();
  v41 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86FB08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v14);
  v39 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - v20;
  swift_getObjectType();
  sub_1BB86FF40();
  if ((_BYTE)v42)
  {
    if (v42 == 1)
    {
      *v13 = v40 & 1;
      v22 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v13 = v40;
      v22 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, *v22, v8);
  }
  else
  {
    v23 = v38;
    *(_QWORD *)v13 = v40;
    *((_QWORD *)v13 + 1) = v23;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, *MEMORY[0x1E0DB7738], v8);
    swift_bridgeObjectRetain();
  }
  v24 = v41;
  v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25(v21, v13, v8);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v27 = 1;
  v26(v21, 0, 1, v8);
  if (v43 != 2)
  {
    sub_1BB872F1C();
    v27 = 0;
  }
  v26(v18, v27, 1, v8);
  v28 = (uint64_t)&v7[*(int *)(v24 + 48)];
  v29 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v18, v28, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v7, 1, v8) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v30(v28, 1, v8) == 1)
    {
      v31 = -1;
    }
    else
    {
      v29 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v31 = 0;
    }
  }
  else
  {
    v32 = v39;
    sub_1BA4C2DD8((uint64_t)v7, v39, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v30(v28, 1, v8) == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v32, v8);
      v31 = 0;
      v29 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v33 = v37;
      v25(v37, (char *)v28, v8);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v31 = sub_1BB872958();
      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v33, v8);
      v35 = v32;
      v29 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v34((char *)v35, v8);
    }
  }
  sub_1BA4A2E80((uint64_t)v7, v29);
  return v31 & 1;
}

uint64_t sub_1BAFE5778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unsigned int *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t (*v32)(_QWORD);
  char v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a5;
  v40 = a4;
  v42 = a3;
  sub_1BA675B7C();
  v45 = v5;
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86FB08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v13);
  v41 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v38 - v19;
  swift_getObjectType();
  sub_1BA83A290();
  sub_1BB86FF40();
  if ((_BYTE)v44)
  {
    if (v44 == 1)
    {
      *v12 = v42 & 1;
      v21 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v12 = v42;
      v21 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v23 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
    v23(v12, *v21, v7);
  }
  else
  {
    v22 = v40;
    *(_QWORD *)v12 = v42;
    *((_QWORD *)v12 + 1) = v22;
    v23 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
    v23(v12, *MEMORY[0x1E0DB7738], v7);
    swift_bridgeObjectRetain();
  }
  v24 = (uint64_t)v43;
  v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v25(v20, v12, v7);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v27 = 1;
  v26(v20, 0, 1, v7);
  v28 = v47;
  if (v47)
  {
    *(_QWORD *)v17 = v46;
    *((_QWORD *)v17 + 1) = v28;
    v23(v17, *MEMORY[0x1E0DB7738], v7);
    v27 = 0;
  }
  v26(v17, v27, 1, v7);
  v29 = v24 + *(int *)(v45 + 48);
  sub_1BA4C2DD8((uint64_t)v20, v24, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v17, v29, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v30(v24, 1, v7) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    swift_bridgeObjectRelease();
    v31 = v30(v29, 1, v7);
    if (v31 == 1)
      v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
    else
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    if (v31 == 1)
      v33 = -1;
    else
      v33 = 0;
  }
  else
  {
    v34 = v41;
    sub_1BA4C2DD8(v24, v41, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v30(v29, 1, v7) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v34, v7);
      v33 = 0;
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v35 = v39;
      v25(v39, (char *)v29, v7);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      swift_bridgeObjectRetain();
      v33 = sub_1BB872958();
      v36 = *(void (**)(char *, uint64_t))(v8 + 8);
      v36(v35, v7);
      v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      swift_bridgeObjectRelease();
      v36((char *)v34, v7);
    }
  }
  sub_1BA4A2E80(v24, v32);
  return v33 & 1;
}

uint64_t sub_1BAFE5BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int *v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;

  v45 = a5;
  v40 = a4;
  v42 = a3;
  v44 = a2;
  sub_1BA675B7C();
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86FB08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  swift_getObjectType();
  sub_1BA83ADF0();
  sub_1BB86FF40();
  if ((_BYTE)v45)
  {
    if (v45 == 1)
    {
      *v13 = v42 & 1;
      v22 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v13 = v42;
      v22 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v24(v13, *v22, v8);
  }
  else
  {
    v23 = v40;
    *(_QWORD *)v13 = v42;
    *((_QWORD *)v13 + 1) = v23;
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v24(v13, *MEMORY[0x1E0DB7738], v8);
    swift_bridgeObjectRetain();
  }
  v25 = v43;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26(v21, v13, v8);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v28 = 1;
  v27(v21, 0, 1, v8);
  if ((v47 & 1) == 0)
  {
    *(_QWORD *)v18 = v46;
    v24(v18, *MEMORY[0x1E0DB7720], v8);
    v28 = 0;
  }
  v27(v18, v28, 1, v8);
  v29 = (uint64_t)&v7[*(int *)(v25 + 48)];
  v30 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v18, v29, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v31((uint64_t)v7, 1, v8) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v31(v29, 1, v8) == 1)
    {
      v32 = -1;
    }
    else
    {
      v30 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v32 = 0;
    }
  }
  else
  {
    v33 = v41;
    sub_1BA4C2DD8((uint64_t)v7, v41, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v31(v29, 1, v8) == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v33, v8);
      v32 = 0;
      v30 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v34 = v39;
      v26(v39, (char *)v29, v8);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v32 = sub_1BB872958();
      v35 = *(void (**)(char *, uint64_t))(v9 + 8);
      v35(v34, v8);
      v36 = v33;
      v30 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v35((char *)v36, v8);
    }
  }
  sub_1BA4A2E80((uint64_t)v7, v30);
  return v32 & 1;
}

uint64_t sub_1BAFE6000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char v46;
  char v47;

  v45 = a5;
  v40 = a4;
  v42 = a3;
  v44 = a2;
  sub_1BA675B7C();
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86FB08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  swift_getObjectType();
  sub_1BA839E24();
  sub_1BB86FF40();
  if ((_BYTE)v45)
  {
    if (v45 == 1)
    {
      *v13 = v42 & 1;
      v22 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v13 = v42;
      v22 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, *v22, v8);
  }
  else
  {
    v23 = v40;
    *(_QWORD *)v13 = v42;
    *((_QWORD *)v13 + 1) = v23;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, *MEMORY[0x1E0DB7738], v8);
    swift_bridgeObjectRetain();
  }
  v24 = v43;
  v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25(v21, v13, v8);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v26(v21, 0, 1, v8);
  v46 = v47;
  if (v47 == 3)
  {
    v27 = v18;
    v28 = 1;
  }
  else
  {
    sub_1BAFEFFE8();
    sub_1BB870288();
    v27 = v18;
    v28 = 0;
  }
  v26(v27, v28, 1, v8);
  v29 = (uint64_t)&v7[*(int *)(v24 + 48)];
  v30 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v18, v29, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v31((uint64_t)v7, 1, v8) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v31(v29, 1, v8) == 1)
    {
      v32 = -1;
    }
    else
    {
      v30 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v32 = 0;
    }
  }
  else
  {
    v33 = v41;
    sub_1BA4C2DD8((uint64_t)v7, v41, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v31(v29, 1, v8) == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v33, v8);
      v32 = 0;
      v30 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v34 = v39;
      v25(v39, (char *)v29, v8);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v32 = sub_1BB872958();
      v35 = *(void (**)(char *, uint64_t))(v9 + 8);
      v35(v34, v8);
      v36 = v33;
      v30 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v35((char *)v36, v8);
    }
  }
  sub_1BA4A2E80((uint64_t)v7, v30);
  return v32 & 1;
}

uint64_t sub_1BAFE6430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int *v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;

  v43 = a5;
  v39 = a4;
  v41 = a3;
  v42 = a2;
  sub_1BA675B7C();
  v44 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86FB08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v14);
  v40 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - v20;
  swift_getObjectType();
  sub_1BA83C6D8();
  sub_1BB86FF40();
  if ((_BYTE)v43)
  {
    if (v43 == 1)
    {
      *v13 = v41 & 1;
      v22 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v13 = v41;
      v22 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v24(v13, *v22, v8);
  }
  else
  {
    v23 = v39;
    *(_QWORD *)v13 = v41;
    *((_QWORD *)v13 + 1) = v23;
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v24(v13, *MEMORY[0x1E0DB7738], v8);
    swift_bridgeObjectRetain();
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25(v21, v13, v8);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v27 = 1;
  v26(v21, 0, 1, v8);
  if (v46 > 1u)
  {
    if (v46 != 2)
      goto LABEL_12;
    *(_QWORD *)v18 = 0;
  }
  else
  {
    *(_QWORD *)v18 = v45;
  }
  v24(v18, *MEMORY[0x1E0DB7730], v8);
  v27 = 0;
LABEL_12:
  v26(v18, v27, 1, v8);
  v28 = (uint64_t)&v7[*(int *)(v44 + 48)];
  v29 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v18, v28, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v7, 1, v8) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v30(v28, 1, v8) == 1)
    {
      v31 = -1;
    }
    else
    {
      v29 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v31 = 0;
    }
  }
  else
  {
    v32 = v40;
    sub_1BA4C2DD8((uint64_t)v7, v40, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v30(v28, 1, v8) == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v32, v8);
      v31 = 0;
      v29 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v33 = v38;
      v25(v38, (char *)v28, v8);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v31 = sub_1BB872958();
      v34 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34(v33, v8);
      v35 = v32;
      v29 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v34((char *)v35, v8);
    }
  }
  sub_1BA4A2E80((uint64_t)v7, v29);
  return v31 & 1;
}

uint64_t sub_1BAFE6868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  char v49;

  v45 = a7;
  v46 = a2;
  v47 = a5;
  v41 = a4;
  v43 = a3;
  sub_1BA675B7C();
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86FB08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v16);
  v42 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v40 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - v22;
  swift_getObjectType();
  type metadata accessor for LiveActivityCommandContext();
  sub_1BA820008();
  sub_1BB86FF40();
  if ((_BYTE)v47)
  {
    if (v47 == 1)
    {
      *v15 = v43 & 1;
      v24 = (unsigned int *)MEMORY[0x1E0DB7740];
    }
    else
    {
      *(_QWORD *)v15 = v43;
      v24 = (unsigned int *)MEMORY[0x1E0DB7720];
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v15, *v24, v10);
  }
  else
  {
    v25 = v41;
    *(_QWORD *)v15 = v43;
    *((_QWORD *)v15 + 1) = v25;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v15, *MEMORY[0x1E0DB7738], v10);
    swift_bridgeObjectRetain();
  }
  v26 = v44;
  v27 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v27(v23, v15, v10);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v28(v23, 0, 1, v10);
  v48 = v49;
  if (v49 == 3)
  {
    v29 = v20;
    v30 = 1;
  }
  else
  {
    sub_1BAFF07CC();
    sub_1BB870288();
    v29 = v20;
    v30 = 0;
  }
  v28(v29, v30, 1, v10);
  v31 = (uint64_t)&v9[*(int *)(v26 + 48)];
  v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
  sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  sub_1BA4C2DD8((uint64_t)v20, v31, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v33((uint64_t)v9, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v33(v31, 1, v10) == 1)
    {
      v34 = -1;
    }
    else
    {
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
      v34 = 0;
    }
  }
  else
  {
    v35 = v42;
    sub_1BA4C2DD8((uint64_t)v9, v42, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
    if (v33(v31, 1, v10) == 1)
    {
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v35, v10);
      v34 = 0;
      v32 = (uint64_t (*)(_QWORD))sub_1BA675B7C;
    }
    else
    {
      v36 = v40;
      v27(v40, (char *)v31, v10);
      sub_1BA4A2870(&qword_1ED3C4950, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], MEMORY[0x1E0DB7758]);
      v34 = sub_1BB872958();
      v37 = *(void (**)(char *, uint64_t))(v11 + 8);
      v37(v36, v10);
      v38 = v35;
      v32 = (uint64_t (*)(_QWORD))sub_1BA6F7BEC;
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
      v37((char *)v38, v10);
    }
  }
  sub_1BA4A2E80((uint64_t)v9, v32);
  return v34 & 1;
}

uint64_t sub_1BAFE6C98@<X0>(void (*a1)(void)@<X4>, void (*a2)(uint64_t)@<X6>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  swift_getObjectType();
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  a1();
  v6 = sub_1BB86FF40();
  if (v10 == 2)
  {
    v7 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, 1, 1, v7);
  }
  else
  {
    a2(v6);
    sub_1BB870288();
    v9 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 0, 1, v9);
  }
}

uint64_t sub_1BAFE6DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  sub_1BA82BE0C();
  sub_1BB86FF40();
  if (v5 == 2)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BAFEDEF8();
    sub_1BB870288();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFE6EA8@<X0>(double *a1@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char v9;
  char v10;

  swift_getObjectType();
  type metadata accessor for FeedHeadline(0);
  sub_1BA83AA2C();
  sub_1BB86FF40();
  if ((v10 & 1) != 0)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    v4 = v8;
    if ((v9 & 1) != 0)
      v4 = 0.0;
    *a1 = v4;
    v5 = *MEMORY[0x1E0DB7730];
    v6 = sub_1BB86FB08();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(double *, uint64_t, uint64_t))(v7 + 104))(a1, v5, v6);
    return (*(uint64_t (**)(double *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
}

uint64_t sub_1BAFE6FC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  type metadata accessor for FeedHeadlineAudioCommandContext();
  sub_1BA83A980();
  sub_1BB86FF40();
  if (v5 == 4)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BAFEF9EC();
    sub_1BB870288();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFE70C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  sub_1BA4C3E90(0, &qword_1ED3BE418, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  sub_1BA67B824();
  sub_1BB86FF40();
  if (v5 == 2)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BA67B868();
    sub_1BB870288();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFE71E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  sub_1BB86FF40();
  if (v5 == 2)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BB872F1C();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFE72B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getObjectType();
  sub_1BA83A290();
  sub_1BB86FF40();
  if (v8)
  {
    *a1 = v7;
    a1[1] = v8;
    v2 = *MEMORY[0x1E0DB7738];
    v3 = sub_1BB86FB08();
    v4 = *(_QWORD *)(v3 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
  }
  else
  {
    v6 = sub_1BB86FB08();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

uint64_t sub_1BAFE73B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  swift_getObjectType();
  sub_1BA83ADF0();
  sub_1BB86FF40();
  if ((v8 & 1) != 0)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    *a1 = v7;
    v4 = *MEMORY[0x1E0DB7720];
    v5 = sub_1BB86FB08();
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 104))(a1, v4, v5);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
}

uint64_t sub_1BAFE74B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  sub_1BA839E24();
  sub_1BB86FF40();
  if (v5 == 3)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BAFEFFE8();
    sub_1BB870288();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFE75A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  swift_getObjectType();
  sub_1BA83C6D8();
  sub_1BB86FF40();
  if (v8 <= 1u)
  {
    *a1 = v7;
LABEL_5:
    v2 = *MEMORY[0x1E0DB7730];
    v3 = sub_1BB86FB08();
    v4 = *(_QWORD *)(v3 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
  }
  if (v8 == 2)
  {
    *a1 = 0;
    goto LABEL_5;
  }
  v6 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
}

uint64_t sub_1BAFE76B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  type metadata accessor for LiveActivityCommandContext();
  sub_1BA820008();
  sub_1BB86FF40();
  if (v5 == 3)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BAFF07CC();
    sub_1BB870288();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFE77B0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BA4AD288(0, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_unknownObjectRetain();
  sub_1BB872A00();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE78BC(uint64_t a1, uint64_t a2)
{
  return sub_1BAFE944C(a1, a2, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
}

uint64_t sub_1BAFE78C8(uint64_t a1, uint64_t a2)
{
  return sub_1BAFE944C(a1, a2, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
}

uint64_t sub_1BAFE78D4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BA73D594();
  swift_unknownObjectRetain();
  sub_1BB872A00();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE79C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD v8[21];
  uint64_t v9;
  unint64_t v10;

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v9 = 0x28646E616D6D6F43;
  v10 = 0xE800000000000000;
  sub_1BB871440();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BAFEFDFC(a2, (uint64_t)v8);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  return v9;
}

uint64_t sub_1BAFE7ABC(uint64_t a1, uint64_t a2)
{
  return sub_1BAFE944C(a1, a2, (uint64_t (*)(_QWORD))sub_1BAFF0548);
}

uint64_t sub_1BAFE7AC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 0;
  v7 = a2 & 1;
  v25 = a2 & 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  v9 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA6A09F0((uint64_t)&v25, v8 + 24, &qword_1EF2BD240, MEMORY[0x1E0DEE9C0] + 8);
  *(_QWORD *)(v3 + 40) = sub_1BAFEED74;
  *(_QWORD *)(v3 + 48) = v8;
  v24 = v7;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v24, v10 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 56) = sub_1BAFEEDEC;
  *(_QWORD *)(v3 + 64) = v10;
  v23 = v7;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v23, v11 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 72) = sub_1BAFEEE68;
  *(_QWORD *)(v3 + 80) = v11;
  v22 = v7;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v22, v12 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 96) = v12;
  v21 = v7;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v21, v13 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 104) = sub_1BA647E00;
  *(_QWORD *)(v3 + 112) = v13;
  v20 = v7;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v14 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v3 + 128) = v14;
  v19 = v7;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v15 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 144) = v15;
  v18 = v7;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v16 + 24, &qword_1EF2BD240, v9);
  *(_QWORD *)(v3 + 152) = sub_1BAFEEEC0;
  *(_QWORD *)(v3 + 160) = v16;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFE7D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  *(_QWORD *)(v4 + 16) = sub_1BB871440();
  *(_QWORD *)(v4 + 24) = v8;
  *(_BYTE *)(v4 + 32) = 0;
  v19 = a2;
  v20 = a3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  v10 = MEMORY[0x1E0DEA968];
  sub_1BA6A09F0((uint64_t)&v19, v9 + 24, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v4 + 40) = sub_1BAFEF3CC;
  *(_QWORD *)(v4 + 48) = v9;
  v19 = a2;
  v20 = a3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v11 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 56) = sub_1BAFEF444;
  *(_QWORD *)(v4 + 64) = v11;
  v19 = a2;
  v20 = a3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v12 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 72) = sub_1BAFEF4C0;
  *(_QWORD *)(v4 + 80) = v12;
  v19 = a2;
  v20 = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v13 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v4 + 96) = v13;
  v19 = a2;
  v20 = a3;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v14 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 104) = sub_1BA647E00;
  *(_QWORD *)(v4 + 112) = v14;
  v19 = a2;
  v20 = a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v15 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v4 + 128) = v15;
  v19 = a2;
  v20 = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1BA6A09F0((uint64_t)&v19, v16 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v4 + 144) = v16;
  v19 = a2;
  v20 = a3;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v19, v17 + 24, (unint64_t *)&qword_1ED3B9200, v10);
  *(_QWORD *)(v4 + 152) = sub_1BAFEF594;
  *(_QWORD *)(v4 + 160) = v17;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return v4;
}

uint64_t sub_1BAFE7FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = v4;
  *(_QWORD *)(v5 + 16) = sub_1BB871440();
  *(_QWORD *)(v5 + 24) = v10;
  *(_BYTE *)(v5 + 32) = 0;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v11 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 40) = sub_1BAFEEBEC;
  *(_QWORD *)(v5 + 48) = v11;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v12 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 56) = sub_1BAFEEC18;
  *(_QWORD *)(v5 + 64) = v12;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v13 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 72) = sub_1BAFEEC40;
  *(_QWORD *)(v5 + 80) = v13;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v14 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v5 + 96) = v14;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v15 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 104) = sub_1BA647E00;
  *(_QWORD *)(v5 + 112) = v15;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v16 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v5 + 128) = v16;
  sub_1BAFEECAC(a2);
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v17 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 136) = sub_1BAFEECE4;
  *(_QWORD *)(v5 + 144) = v17;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v18 + 24, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
  *(_QWORD *)(v5 + 152) = sub_1BAFEED34;
  *(_QWORD *)(v5 + 160) = v18;
  swift_retain();
  sub_1BAFEECAC(a2);
  swift_retain();
  sub_1BAFEECAC(a2);
  swift_retain();
  sub_1BAFEECAC(a2);
  swift_retain();
  sub_1BAFEECAC(a2);
  swift_retain();
  sub_1BAFEECAC(a2);
  swift_retain();
  sub_1BAFEECAC(a2);
  swift_retain();
  return v5;
}

uint64_t sub_1BAFE82F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 0;
  v16 = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v7 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 40) = sub_1BAFEF27C;
  *(_QWORD *)(v3 + 48) = v7;
  v16 = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v8 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 56) = sub_1BAFEF2BC;
  *(_QWORD *)(v3 + 64) = v8;
  v16 = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v9 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE9B4;
  *(_QWORD *)(v3 + 80) = v9;
  v16 = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v10 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 96) = v10;
  v16 = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v11 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 104) = sub_1BA647E00;
  *(_QWORD *)(v3 + 112) = v11;
  v16 = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v12 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v3 + 128) = v12;
  v16 = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  swift_unknownObjectRetain();
  sub_1BAFEF220((uint64_t)&v16, v13 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 144) = v13;
  v16 = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v14 + 24, &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
  *(_QWORD *)(v3 + 152) = sub_1BAFEF398;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  swift_unknownObjectRetain_n();
  return v3;
}

uint64_t sub_1BAFE85A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[56];

  v3 = v2;
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 0;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v7 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 40) = sub_1BAFEE7B8;
  *(_QWORD *)(v3 + 48) = v7;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v8 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 56) = sub_1BAFEE7C8;
  *(_QWORD *)(v3 + 64) = v8;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v9 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE7E8;
  *(_QWORD *)(v3 + 80) = v9;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v10 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 96) = v10;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v11 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 104) = sub_1BA647E00;
  *(_QWORD *)(v3 + 112) = v11;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v12 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v3 + 128) = v12;
  sub_1BAFEE860(a2);
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v13 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 144) = v13;
  sub_1BA6A09F0(a2, (uint64_t)v16, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v14 + 24, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  *(_QWORD *)(v3 + 152) = sub_1BAFEE8F4;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain();
  sub_1BAFEE860(a2);
  swift_retain();
  sub_1BAFEE860(a2);
  swift_retain();
  sub_1BAFEE860(a2);
  swift_retain();
  sub_1BAFEE860(a2);
  swift_retain();
  sub_1BAFEE860(a2);
  swift_retain();
  sub_1BAFEE860(a2);
  swift_retain();
  return v3;
}

uint64_t sub_1BAFE88F4(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  char v22;

  v5 = v4;
  *(_QWORD *)(v5 + 16) = sub_1BB871440();
  *(_QWORD *)(v5 + 24) = v10;
  *(_BYTE *)(v5 + 32) = 0;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v11 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 40) = sub_1BAFEE6B0;
  *(_QWORD *)(v5 + 48) = v11;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v12 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 56) = sub_1BAFEE6C0;
  *(_QWORD *)(v5 + 64) = v12;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v13 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 72) = sub_1BAFEE6E0;
  *(_QWORD *)(v5 + 80) = v13;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v14 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v5 + 96) = v14;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v15 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 104) = sub_1BA647E00;
  *(_QWORD *)(v5 + 112) = v15;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v16 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v5 + 128) = v16;
  sub_1BAFEE750(a2, a3, a4);
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v17 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v5 + 144) = v17;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v20, v18 + 24, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext);
  *(_QWORD *)(v5 + 152) = sub_1BAFEE7A4;
  *(_QWORD *)(v5 + 160) = v18;
  swift_retain();
  sub_1BAFEE750(a2, a3, a4);
  swift_retain();
  sub_1BAFEE750(a2, a3, a4);
  swift_retain();
  sub_1BAFEE750(a2, a3, a4);
  swift_retain();
  sub_1BAFEE750(a2, a3, a4);
  swift_retain();
  sub_1BAFEE750(a2, a3, a4);
  swift_retain();
  sub_1BAFEE750(a2, a3, a4);
  swift_retain();
  return v5;
}

uint64_t sub_1BAFE8C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 0;
  v16 = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v7 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 40) = sub_1BAFEEB24;
  *(_QWORD *)(v3 + 48) = v7;
  v16 = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v8 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 56) = sub_1BAFEEB5C;
  *(_QWORD *)(v3 + 64) = v8;
  v16 = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v9 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE9B4;
  *(_QWORD *)(v3 + 80) = v9;
  v16 = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v10 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 96) = v10;
  v16 = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v11 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 104) = sub_1BA647E00;
  *(_QWORD *)(v3 + 112) = v11;
  v16 = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v12 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v3 + 128) = v12;
  v16 = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  swift_retain();
  sub_1BA5193C4((uint64_t)&v16, v13 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 144) = v13;
  v16 = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v14 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEB08);
  *(_QWORD *)(v3 + 152) = sub_1BAFEEBE0;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFE8E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 0;
  v16 = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v7 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 40) = sub_1BAFEEA34;
  *(_QWORD *)(v3 + 48) = v7;
  v16 = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v8 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 56) = sub_1BAFEEA6C;
  *(_QWORD *)(v3 + 64) = v8;
  v16 = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v9 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE9B4;
  *(_QWORD *)(v3 + 80) = v9;
  v16 = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v10 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 96) = v10;
  v16 = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v11 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 104) = sub_1BA647E00;
  *(_QWORD *)(v3 + 112) = v11;
  v16 = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v12 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v3 + 128) = v12;
  v16 = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1BA5193C4((uint64_t)&v16, v13 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 144) = v13;
  v16 = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v16, v14 + 24, (uint64_t (*)(_QWORD))sub_1BAFEEA18);
  *(_QWORD *)(v3 + 152) = sub_1BAFEEAF0;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return v3;
}

uint64_t sub_1BAFE90D8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v18;

  v3 = v2;
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 0;
  v18 = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v7 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 40) = sub_1BAFEE960;
  *(_QWORD *)(v3 + 48) = v7;
  v18 = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v8 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 56) = sub_1BAFEE98C;
  *(_QWORD *)(v3 + 64) = v8;
  v18 = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v9 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE9B4;
  *(_QWORD *)(v3 + 80) = v9;
  v18 = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v10 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 96) = v10;
  v18 = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v11 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 104) = sub_1BA647E00;
  *(_QWORD *)(v3 + 112) = v11;
  v18 = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v12 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE74C;
  *(_QWORD *)(v3 + 128) = v12;
  v18 = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  v14 = a2;
  sub_1BA5193C4((uint64_t)&v18, v13 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 136) = sub_1BAFF09A8;
  *(_QWORD *)(v3 + 144) = v13;
  v18 = a2;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA5193C4((uint64_t)&v18, v15 + 24, (uint64_t (*)(_QWORD))sub_1BAFEE944);
  *(_QWORD *)(v3 + 152) = sub_1BAFEEA00;
  *(_QWORD *)(v3 + 160) = v15;
  swift_retain_n();
  v16 = v14;
  return v3;
}

uint64_t sub_1BAFE9344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  swift_getObjectType();
  a6(0);
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFE93C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  swift_getObjectType();
  a6(0);
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFE9440(uint64_t a1, uint64_t a2)
{
  return sub_1BAFE944C(a1, a2, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
}

uint64_t sub_1BAFE944C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v13;
  unint64_t v14;

  v5 = a3(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - v6;
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v13 = 0x28646E616D6D6F43;
  v14 = 0xE800000000000000;
  sub_1BB871440();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v9);
  sub_1BA4C2DD8(a2, (uint64_t)v7, a3);
  sub_1BB872A00();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v11);
  return v13;
}

uint64_t sub_1BAFE9564()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BA4AD288(0, &qword_1EF2BD240, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE9664()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_bridgeObjectRetain();
  sub_1BB872A00();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE976C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t), unint64_t *a6, uint64_t a7)
{
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v13);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v14);
  a5(a2, a3, a4);
  sub_1BA4AD288(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v15);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v16);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE9894(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v9);
  sub_1BA4C3E90(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_unknownObjectRetain();
  sub_1BB872A00();
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v11);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE99A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD v8[7];
  uint64_t v9;
  unint64_t v10;

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v9 = 0x28646E616D6D6F43;
  v10 = 0xE800000000000000;
  sub_1BB871440();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BA6A09F0(a2, (uint64_t)v8, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  sub_1BAFEE860(a2);
  sub_1BA4AD288(0, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  return v9;
}

uint64_t sub_1BAFE9AB8(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  sub_1BAFEE750(a2, a3, a4);
  sub_1BA4AD288(0, &qword_1ED39EC58, (uint64_t)&type metadata for OpenCommandContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB872A00();
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v10);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE9BD4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BAFEEB08(0);
  swift_retain();
  sub_1BB872A00();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE9CC0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BAFEEA18(0);
  swift_bridgeObjectRetain();
  sub_1BB872A00();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE9DAC(uint64_t a1, void *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  _QWORD *v7;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB871440();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BAFEE944(0);
  v5 = a2;
  sub_1BB872A00();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  return 0x28646E616D6D6F43;
}

uint64_t sub_1BAFE9E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v20;

  v20 = *a6;
  ObjectType = swift_getObjectType();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  v15 = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  v16 = sub_1BAFEE3D4();
  v17 = sub_1BA82C0F4();
  swift_retain();
  a9(a5, &v20, a8, v14, v15, &type metadata for IgnoringCommandState, v16, v17, ObjectType, a2);
  return swift_release();
}

uint64_t sub_1BAFE9F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6)
{
  swift_getObjectType();
  sub_1BA4EFE00(0, a6);
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEA024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6)
{
  swift_getObjectType();
  sub_1BA4EFE00(0, a6);
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEA0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  sub_1BAFEE178();
  sub_1BA82DAD0();
  swift_retain();
  sub_1BB86FF34();
  return swift_release();
}

uint64_t sub_1BAFEA1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  sub_1BAFEE178();
  sub_1BA82DAD0();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFEA2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_getObjectType();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  sub_1BAFEE178();
  sub_1BA82DAD0();
  swift_retain();
  sub_1BB86FF28();
  return swift_release();
}

uint64_t sub_1BAFEA398(char *a1, void (*a2)(char *), uint64_t a3, void (*a4)(double))
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  sub_1BA6F7BEC(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  if (v15 == 2)
  {
    v11 = sub_1BB86FB08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  else
  {
    a4(v8);
    sub_1BB870288();
    v12 = sub_1BB86FB08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  a2(v10);
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFEA498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t *, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))
{
  __int16 v13;
  uint64_t ObjectType;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v20;
  __int16 v21;

  v13 = *((_WORD *)a6 + 4);
  v20 = *a6;
  v21 = v13;
  ObjectType = swift_getObjectType();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = sub_1BAF60E88();
  v17 = sub_1BA82BE0C();
  swift_retain();
  a9(a5, &v20, a8, v15, &type metadata for FollowingCommandContext, &type metadata for FollowingCommandState, v16, v17, ObjectType, a2);
  return swift_release();
}

uint64_t sub_1BAFEA584(char *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  if (v11 == 4)
  {
    v7 = sub_1BB86FB08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_1BAFEF9EC();
    sub_1BB870288();
    v8 = sub_1BB86FB08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  a2(v6);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFEA678()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEA6F4()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEA774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  swift_getObjectType();
  sub_1BB86FF40();
  if (v5 == 2)
  {
    v2 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    sub_1BB872F1C();
    v4 = sub_1BB86FB08();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
}

uint64_t sub_1BAFEA850()
{
  swift_getObjectType();
  sub_1BA4C3E90(0, &qword_1ED3BE418, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEA8F4()
{
  swift_getObjectType();
  sub_1BA4C3E90(0, &qword_1ED3BE418, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEA99C()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEAA18()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEAAA0()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEAB14()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEAB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  swift_getObjectType();
  a6(0);
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEAC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  swift_getObjectType();
  a6(0);
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEAC98(_BYTE *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 2)
  {
    v7 = sub_1BB86FB08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_1BB872F1C();
    v8 = sub_1BB86FB08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  a2(v6);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFEAD70(_QWORD *a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = a1[1];
  if (v7)
  {
    *v6 = *a1;
    v6[1] = v7;
    v8 = *MEMORY[0x1E0DB7738];
    v9 = sub_1BB86FB08();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 104))(v6, v8, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  else
  {
    v11 = sub_1BB86FB08();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  }
  swift_bridgeObjectRetain();
  a2(v6);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFEAE80(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1BA6F7BEC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v7 = sub_1BB86FB08();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  }
  else
  {
    *v6 = *(_QWORD *)a1;
    v8 = *MEMORY[0x1E0DB7720];
    v9 = sub_1BB86FB08();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 104))(v6, v8, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  a2(v6);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFEAF80(char *a1, void (*a2)(char *), uint64_t a3, void (*a4)(double))
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  sub_1BA6F7BEC(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  if (v15 == 3)
  {
    v11 = sub_1BB86FB08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  else
  {
    a4(v8);
    sub_1BB870288();
    v12 = sub_1BB86FB08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  a2(v10);
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6F7BEC);
}

uint64_t sub_1BAFEB080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  swift_bridgeObjectRetain();
  sub_1BB86BEFC();
  swift_bridgeObjectRelease();
  v2 = sub_1BB86BF20();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

double sub_1BAFEB10C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  _QWORD v7[5];
  _BYTE v8[16];
  _OWORD v9[2];
  uint64_t v10;

  v7[2] = a2;
  v7[3] = a1;
  v4 = sub_1BA89F4C0((void (*)(char *))sub_1BAFEDC78, (uint64_t)v7, (uint64_t)&unk_1E724EF80, (uint64_t)v8);
  sub_1BAF89090(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v4, v9);
  swift_bridgeObjectRelease();
  result = *(double *)v9;
  v6 = v9[1];
  *(_OWORD *)a3 = v9[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 32) = v10;
  return result;
}

uint64_t _s8NewsFeed20FormatTagMoreActionsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v5 & 0xF000000000000007) == 0)
      return sub_1BA895154(v3, v4);
    goto LABEL_6;
  }
  v9 = *a1;
  if ((~v5 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    sub_1BA5E7FF4(v5);
    sub_1BA5E800C(v2);
    sub_1BA5E800C(v5);
    return 0;
  }
  swift_retain_n();
  static FormatTextContent.== infix(_:_:)((uint64_t)&v9);
  v7 = v6;
  swift_release();
  sub_1BA5E800C(v2);
  if ((v7 & 1) != 0)
    return sub_1BA895154(v3, v4);
  return 0;
}

uint64_t _s8NewsFeed16FormatTagBindingV7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v11;
  uint64_t v12[2];
  uint64_t v13[2];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        v8 = sub_1BA5B35E8(*(_QWORD *)a1, *(_QWORD *)a2);
        sub_1BA856DD0(v6, v5, 1);
        sub_1BA856DD0(v3, v2, 1);
        sub_1BA7EDFFC(v3, v2, 1);
        sub_1BA7EDFFC(v6, v5, 1);
        return v8 & 1;
      }
      goto LABEL_24;
    }
    if (v3 | v2)
    {
      if (!(v3 ^ 1 | v2))
      {
        if (v7 == 2 && v6 == 1 && !v5)
        {
          sub_1BA7EDFFC(*(_QWORD *)a1, v2, 2);
          LOBYTE(v7) = 1;
          sub_1BA7EDFFC(1, 0, 2);
          return v7 & 1;
        }
LABEL_24:
        sub_1BA856DD0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
        sub_1BA856DD0(v3, v2, v4);
        sub_1BA7EDFFC(v3, v2, v4);
        sub_1BA7EDFFC(v6, v5, v7);
        LOBYTE(v7) = 0;
        return v7 & 1;
      }
      if (v7 != 2 || v6 != 2 || v5)
        goto LABEL_24;
      sub_1BA7EDFFC(*(_QWORD *)a1, v2, 2);
      v11 = 2;
    }
    else
    {
      if (v7 != 2 || (v5 | v6) != 0)
        goto LABEL_24;
      sub_1BA7EDFFC(*(_QWORD *)a1, v2, 2);
      v11 = 0;
    }
    sub_1BA7EDFFC(v11, 0, 2);
    LOBYTE(v7) = 1;
    return v7 & 1;
  }
  if (*(_BYTE *)(a2 + 16))
    goto LABEL_24;
  v13[0] = *(_QWORD *)a1;
  v13[1] = v2;
  v12[0] = v6;
  v12[1] = v5;
  sub_1BA856DD0(v6, v5, 0);
  sub_1BA856DD0(v3, v2, 0);
  sub_1BA856DD0(v6, v5, 0);
  sub_1BA856DD0(v3, v2, 0);
  v7 = _s8NewsFeed20FormatTagMoreActionsV2eeoiySbAC_ACtFZ_0(v13, v12);
  sub_1BA7EDFFC(v3, v2, 0);
  sub_1BA7EDFFC(v6, v5, 0);
  sub_1BA7EDFFC(v6, v5, 0);
  sub_1BA7EDFFC(v3, v2, 0);
  return v7 & 1;
}

unint64_t sub_1BAFEB4B8()
{
  unint64_t result;

  result = qword_1EF2B8AB8;
  if (!qword_1EF2B8AB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E016C, &type metadata for FormatTagMoreActions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AB8);
  }
  return result;
}

unint64_t sub_1BAFEB4FC()
{
  unint64_t result;

  result = qword_1ED39EB48;
  if (!qword_1ED39EB48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagMoreActions.Action, &type metadata for FormatTagMoreActions.Action);
    atomic_store(result, (unint64_t *)&qword_1ED39EB48);
  }
  return result;
}

void sub_1BAFEB540(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAFEB4B8();
    v7 = a3(a1, &type metadata for FormatTagMoreActions.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAFEB59C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1ED39EB98, (uint64_t)&type metadata for FormatTagMoreActions.Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAFEB618()
{
  unint64_t result;

  result = qword_1ED39E690;
  if (!qword_1ED39E690)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagMoreActions.Action, &type metadata for FormatTagMoreActions.Action);
    atomic_store(result, (unint64_t *)&qword_1ED39E690);
  }
  return result;
}

unint64_t sub_1BAFEB65C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEBEAC4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFEB680(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA575C40, (uint64_t (*)(void))sub_1BA5AE9EC, (uint64_t (*)(void))sub_1BAFEB69C);
}

unint64_t sub_1BAFEB69C()
{
  unint64_t result;

  result = qword_1EF2B8AD0;
  if (!qword_1EF2B8AD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Command, &type metadata for FormatTagBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AD0);
  }
  return result;
}

unint64_t sub_1BAFEB6E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFEB704();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFEB704()
{
  unint64_t result;

  result = qword_1EF2B8AD8;
  if (!qword_1EF2B8AD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagNavigate, &type metadata for FormatTagNavigate);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AD8);
  }
  return result;
}

uint64_t sub_1BAFEB748(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA57EA40, (uint64_t (*)(void))sub_1BA5B369C, (uint64_t (*)(void))sub_1BAFEB764);
}

unint64_t sub_1BAFEB764()
{
  unint64_t result;

  result = qword_1EF2B8AE0;
  if (!qword_1EF2B8AE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagNavigate, &type metadata for FormatTagNavigate);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AE0);
  }
  return result;
}

unint64_t sub_1BAFEB7AC()
{
  unint64_t result;

  result = qword_1EF2B8AE8;
  if (!qword_1EF2B8AE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagMoreActions.Action, &type metadata for FormatTagMoreActions.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AE8);
  }
  return result;
}

uint64_t sub_1BAFEB7F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC3B2C, (uint64_t (*)(void))sub_1BAEEA008, (uint64_t (*)(void))sub_1BAFEB80C);
}

unint64_t sub_1BAFEB80C()
{
  unint64_t result;

  result = qword_1EF2B8AF0;
  if (!qword_1EF2B8AF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagMoreActions, &type metadata for FormatTagMoreActions);
    atomic_store(result, (unint64_t *)&qword_1EF2B8AF0);
  }
  return result;
}

uint64_t sub_1BAFEB850@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAFEB85C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t _s14descr1E72DA4C9V7CommandOwxx(uint64_t a1)
{
  return sub_1BA7EDFFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14descr1E72DA4C9V7CommandOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA856DD0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14descr1E72DA4C9V7CommandOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA856DD0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA7EDFFC(v6, v7, v8);
  return a1;
}

uint64_t _s14descr1E72DA4C9V7CommandOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA7EDFFC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Command()
{
  return &type metadata for FormatTagBinding.Command;
}

ValueMetadata *type metadata accessor for FormatTagNavigate()
{
  return &type metadata for FormatTagNavigate;
}

uint64_t destroy for FormatTagMoreActions(_QWORD *a1)
{
  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed20FormatTagMoreActionsVwCP_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatTagMoreActions(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *a1 = v4;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_1BAFEBAE4((uint64_t)a1);
    v4 = *a2;
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
LABEL_6:
    *a1 = v4;
    goto LABEL_8;
  }
  *a1 = v4;
  swift_retain();
LABEL_8:
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAFEBAE4(uint64_t a1)
{
  destroy for SportsDataVisualizationEventStatus();
  return a1;
}

_QWORD *assignWithTake for FormatTagMoreActions(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v4 & 0xF000000000000007) != 0)
    {
      *a1 = v4;
      swift_release();
      goto LABEL_6;
    }
    sub_1BAFEBAE4((uint64_t)a1);
  }
  *a1 = v4;
LABEL_6:
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTagMoreActions()
{
  return &type metadata for FormatTagMoreActions;
}

ValueMetadata *type metadata accessor for FormatTagMoreActions.Action()
{
  return &type metadata for FormatTagMoreActions.Action;
}

uint64_t _s8NewsFeed20FormatTagMoreActionsV6ActionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFEBBFC + 4 * byte_1BB8DFBC3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFEBC30 + 4 * byte_1BB8DFBBE[v4]))();
}

uint64_t sub_1BAFEBC30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFEBC38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFEBC40);
  return result;
}

uint64_t sub_1BAFEBC4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFEBC54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFEBC58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFEBC60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagMoreActions.CodingKeys()
{
  return &type metadata for FormatTagMoreActions.CodingKeys;
}

ValueMetadata *_s14descr1E72DA4C9V7CommandO10CodingTypeOMa()
{
  return &_s14descr1E72DA4C9V7CommandO10CodingTypeON;
}

uint64_t sub_1BAFEBC8C()
{
  return sub_1BA5C69E0(&qword_1EF2B8AF8, &qword_1EF2B8B00, (uint64_t)&_s14descr1E72DA4C9V7CommandO10CodingTypeON, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1BAFEBCC4()
{
  unint64_t result;

  result = qword_1EF2B8B08;
  if (!qword_1EF2B8B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0054, &_s14descr1E72DA4C9V7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B08);
  }
  return result;
}

unint64_t sub_1BAFEBD0C()
{
  unint64_t result;

  result = qword_1EF2B8B10;
  if (!qword_1EF2B8B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0144, &type metadata for FormatTagMoreActions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B10);
  }
  return result;
}

unint64_t sub_1BAFEBD54()
{
  unint64_t result;

  result = qword_1EF2B8B18;
  if (!qword_1EF2B8B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E007C, &type metadata for FormatTagMoreActions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B18);
  }
  return result;
}

unint64_t sub_1BAFEBD9C()
{
  unint64_t result;

  result = qword_1EF2B8B20;
  if (!qword_1EF2B8B20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E00A4, &type metadata for FormatTagMoreActions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B20);
  }
  return result;
}

uint64_t sub_1BAFEBDE0(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int16 v19;

  v4 = v3;
  swift_retain();
  *(_QWORD *)(v4 + 16) = sub_1BB871440();
  *(_QWORD *)(v4 + 24) = v8;
  *(_BYTE *)(v4 + 32) = 1;
  v18 = a2;
  v19 = a3;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v9 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 40) = sub_1BAFEDCA4;
  *(_QWORD *)(v4 + 48) = v9;
  v18 = a2;
  v19 = a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v10 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 56) = sub_1BAFEDD2C;
  *(_QWORD *)(v4 + 64) = v10;
  v18 = a2;
  v19 = a3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v11 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 72) = sub_1BAFEDDB8;
  *(_QWORD *)(v4 + 80) = v11;
  v18 = a2;
  v19 = a3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v12 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 88) = sub_1BAFEDE08;
  *(_QWORD *)(v4 + 96) = v12;
  v18 = a2;
  v19 = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v13 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 136) = sub_1BAFEDE58;
  *(_QWORD *)(v4 + 144) = v13;
  v18 = a2;
  v19 = a3;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v14 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 104) = sub_1BAFEDEA8;
  *(_QWORD *)(v4 + 112) = v14;
  v18 = a2;
  v19 = a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v15 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 120) = sub_1BAFEDED0;
  *(_QWORD *)(v4 + 128) = v15;
  v18 = a2;
  v19 = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA6A09F0((uint64_t)&v18, v16 + 24, &qword_1ED3A13B8, (uint64_t)&type metadata for FollowingCommandContext);
  *(_QWORD *)(v4 + 152) = sub_1BAFEDEEC;
  *(_QWORD *)(v4 + 160) = v16;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v4;
}

uint64_t sub_1BAFEC088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  v16 = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v7 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 40) = sub_1BAFEDFB0;
  *(_QWORD *)(v3 + 48) = v7;
  v16 = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v8 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 56) = sub_1BAFEDFF0;
  *(_QWORD *)(v3 + 64) = v8;
  v16 = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v9 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE02C;
  *(_QWORD *)(v3 + 80) = v9;
  v16 = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v10 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 88) = sub_1BAFEE048;
  *(_QWORD *)(v3 + 96) = v10;
  v16 = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v11 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 136) = sub_1BAFEE064;
  *(_QWORD *)(v3 + 144) = v11;
  v16 = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v12 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 104) = sub_1BAFEE080;
  *(_QWORD *)(v3 + 112) = v12;
  v16 = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v13 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE09C;
  *(_QWORD *)(v3 + 128) = v13;
  v16 = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v14 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 152) = sub_1BAFEE0DC;
  *(_QWORD *)(v3 + 160) = v14;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFEC334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  v16 = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v7 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 40) = sub_1BAFF09A4;
  *(_QWORD *)(v3 + 48) = v7;
  v16 = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v8 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 56) = sub_1BAFF08D8;
  *(_QWORD *)(v3 + 64) = v8;
  v16 = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v9 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE204;
  *(_QWORD *)(v3 + 80) = v9;
  v16 = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v10 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 88) = sub_1BAFEE254;
  *(_QWORD *)(v3 + 96) = v10;
  v16 = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v11 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 136) = sub_1BAFEE2A4;
  *(_QWORD *)(v3 + 144) = v11;
  v16 = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v12 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 104) = sub_1BAFEE2F4;
  *(_QWORD *)(v3 + 112) = v12;
  v16 = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v13 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE328;
  *(_QWORD *)(v3 + 128) = v13;
  v16 = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BAFEF220((uint64_t)&v16, v14 + 24, (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
  *(_QWORD *)(v3 + 152) = sub_1BAFF09B4;
  *(_QWORD *)(v3 + 160) = v14;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFEC5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  sub_1BA7C2AA0(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v10;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v12 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 40) = sub_1BAFEFA98;
  *(_QWORD *)(v3 + 48) = v12;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v13 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 56) = sub_1BAFEFC60;
  *(_QWORD *)(v3 + 64) = v13;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v14 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 72) = sub_1BAFEFC88;
  *(_QWORD *)(v3 + 80) = v14;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v15 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 88) = sub_1BAFEFCA0;
  *(_QWORD *)(v3 + 96) = v15;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v16 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 136) = sub_1BAFEFCB8;
  *(_QWORD *)(v3 + 144) = v16;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v17 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 104) = sub_1BAFEFCD0;
  *(_QWORD *)(v3 + 112) = v17;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v18 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 120) = sub_1BAFEFCE8;
  *(_QWORD *)(v3 + 128) = v18;
  sub_1BA5193C4(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v19 + v11, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  *(_QWORD *)(v3 + 152) = sub_1BAFEFD00;
  *(_QWORD *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFEC8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  sub_1BAFEF5A0(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v10;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v12 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 40) = sub_1BAFEF5C0;
  *(_QWORD *)(v3 + 48) = v12;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v13 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 56) = sub_1BAFEF648;
  *(_QWORD *)(v3 + 64) = v13;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v14 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 72) = sub_1BAFEF6E4;
  *(_QWORD *)(v3 + 80) = v14;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v15 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 88) = sub_1BAFEF6FC;
  *(_QWORD *)(v3 + 96) = v15;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v16 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 136) = sub_1BAFEF794;
  *(_QWORD *)(v3 + 144) = v16;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v17 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 104) = sub_1BAFEF7AC;
  *(_QWORD *)(v3 + 112) = v17;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v18 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 120) = sub_1BAFEF7C4;
  *(_QWORD *)(v3 + 128) = v18;
  sub_1BA5193C4(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v19 + v11, (uint64_t (*)(_QWORD))sub_1BAFEF5A0);
  *(_QWORD *)(v3 + 152) = sub_1BAFEF994;
  *(_QWORD *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFECBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[168];

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 40) = sub_1BAFEFE5C;
  *(_QWORD *)(v3 + 48) = v7;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 56) = sub_1BAFEFE64;
  *(_QWORD *)(v3 + 64) = v8;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 72) = sub_1BAFEFE7C;
  *(_QWORD *)(v3 + 80) = v9;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 88) = sub_1BAFEFE8C;
  *(_QWORD *)(v3 + 96) = v10;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 136) = sub_1BAFEFE9C;
  *(_QWORD *)(v3 + 144) = v11;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 104) = sub_1BAFEFEAC;
  *(_QWORD *)(v3 + 112) = v12;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 120) = sub_1BAFEFEBC;
  *(_QWORD *)(v3 + 128) = v13;
  sub_1BA6A09F0(a2, (uint64_t)v16, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 152) = sub_1BAFF09B0;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFECE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[168];

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 40) = sub_1BAFEFE5C;
  *(_QWORD *)(v3 + 48) = v7;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 56) = sub_1BAFEFE64;
  *(_QWORD *)(v3 + 64) = v8;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 72) = sub_1BAFEFF98;
  *(_QWORD *)(v3 + 80) = v9;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 88) = sub_1BAFEFFA8;
  *(_QWORD *)(v3 + 96) = v10;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 136) = sub_1BAFEFFB8;
  *(_QWORD *)(v3 + 144) = v11;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 104) = sub_1BAFEFFC8;
  *(_QWORD *)(v3 + 112) = v12;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 120) = sub_1BAFEFFD8;
  *(_QWORD *)(v3 + 128) = v13;
  sub_1BA6A09F0(a2, (uint64_t)v16, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 152) = sub_1BAFF09B0;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFED150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[168];

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 40) = sub_1BAFEFE5C;
  *(_QWORD *)(v3 + 48) = v7;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 56) = sub_1BAFEFE64;
  *(_QWORD *)(v3 + 64) = v8;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 72) = sub_1BAFF00BC;
  *(_QWORD *)(v3 + 80) = v9;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 88) = sub_1BAFF00CC;
  *(_QWORD *)(v3 + 96) = v10;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 136) = sub_1BAFF00DC;
  *(_QWORD *)(v3 + 144) = v11;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 104) = sub_1BAFF00EC;
  *(_QWORD *)(v3 + 112) = v12;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 120) = sub_1BAFF00FC;
  *(_QWORD *)(v3 + 128) = v13;
  sub_1BA6A09F0(a2, (uint64_t)v16, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 152) = sub_1BAFF09B0;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFED408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[168];

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 40) = sub_1BAFEFE5C;
  *(_QWORD *)(v3 + 48) = v7;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 56) = sub_1BAFEFE64;
  *(_QWORD *)(v3 + 64) = v8;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 72) = sub_1BAFF01CC;
  *(_QWORD *)(v3 + 80) = v9;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 88) = sub_1BAFF01DC;
  *(_QWORD *)(v3 + 96) = v10;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 136) = sub_1BAFF01EC;
  *(_QWORD *)(v3 + 144) = v11;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 104) = sub_1BAFF01FC;
  *(_QWORD *)(v3 + 112) = v12;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 120) = sub_1BAFF020C;
  *(_QWORD *)(v3 + 128) = v13;
  sub_1BA6A09F0(a2, (uint64_t)v16, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 152) = sub_1BAFF021C;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFED6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[168];

  v3 = v2;
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v7 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 40) = sub_1BAFEFE5C;
  *(_QWORD *)(v3 + 48) = v7;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v8 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 56) = sub_1BAFEFE64;
  *(_QWORD *)(v3 + 64) = v8;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v9 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 72) = sub_1BAFF03C0;
  *(_QWORD *)(v3 + 80) = v9;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v10 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 88) = sub_1BAFF0404;
  *(_QWORD *)(v3 + 96) = v10;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v11 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 136) = sub_1BAFF0448;
  *(_QWORD *)(v3 + 144) = v11;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v12 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 104) = sub_1BAFF048C;
  *(_QWORD *)(v3 + 112) = v12;
  sub_1BAFEFDFC(a2, (uint64_t)v16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v13 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 120) = sub_1BAFF04B8;
  *(_QWORD *)(v3 + 128) = v13;
  sub_1BA6A09F0(a2, (uint64_t)v16, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA6A09F0((uint64_t)v16, v14 + 24, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  *(_QWORD *)(v3 + 152) = sub_1BAFF09B0;
  *(_QWORD *)(v3 + 160) = v14;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BAFED978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  sub_1BAFF0548(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v10;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v12 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 40) = sub_1BAFF0568;
  *(_QWORD *)(v3 + 48) = v12;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v13 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 56) = sub_1BAFF0580;
  *(_QWORD *)(v3 + 64) = v13;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v14 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 72) = sub_1BAFF05A8;
  *(_QWORD *)(v3 + 80) = v14;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v15 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 88) = sub_1BAFF05C0;
  *(_QWORD *)(v3 + 96) = v15;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v16 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 136) = sub_1BAFF05D8;
  *(_QWORD *)(v3 + 144) = v16;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v17 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 104) = sub_1BAFF05F0;
  *(_QWORD *)(v3 + 112) = v17;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v18 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 120) = sub_1BAFF0674;
  *(_QWORD *)(v3 + 128) = v18;
  sub_1BA5193C4(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v19 + v11, (uint64_t (*)(_QWORD))sub_1BAFF0548);
  *(_QWORD *)(v3 + 152) = sub_1BAFF07B8;
  *(_QWORD *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

void sub_1BAFEDC78(uint64_t a1)
{
  sub_1BAFDFB48(a1);
}

uint64_t sub_1BAFEDC94()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDCA4()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEDD1C()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDD2C()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFEDDA8()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFEA498(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D82F8, (uint64_t)sub_1BAFEDF88, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8148]);
}

uint64_t sub_1BAFEDDF8()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFEA498(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D82D0, (uint64_t)sub_1BAA0239C, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEDE48()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFEA498(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D82A8, (uint64_t)sub_1BAFEDF60, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEDE98()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFE3E40(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_WORD *)(v3 + 32));
}

uint64_t sub_1BAFEDEC0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDED0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFE6DB4(a1);
}

uint64_t sub_1BAFEDEDC()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDEEC()
{
  return sub_1BAFE77B0();
}

unint64_t sub_1BAFEDEF8()
{
  unint64_t result;

  result = qword_1ED3A6A18;
  if (!qword_1ED3A6A18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FollowingCommandState, &type metadata for FollowingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A18);
  }
  return result;
}

uint64_t sub_1BAFEDF3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAFEDF60(char *a1)
{
  uint64_t v1;

  return sub_1BAFEA398(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(double))sub_1BAFEDEF8);
}

uint64_t sub_1BAFEDF88(char *a1)
{
  return sub_1BA675448(a1, (uint64_t)sub_1BAFEDF94);
}

uint64_t sub_1BAFEDF94(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE132C);
}

uint64_t sub_1BAFEDFA0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFE9F90(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1ED3B9800) & 1;
}

uint64_t sub_1BAFEDFE0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEDFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEA024(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1ED3B9800);
}

uint64_t sub_1BAFEE01C()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEA0BC(a1, a2, a3, a4);
}

uint64_t sub_1BAFEE038()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEA1B0(a1, a2, a3, a4);
}

uint64_t sub_1BAFEE054()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEA2A4(a1, a2, a3, a4);
}

uint64_t sub_1BAFEE070()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEE300(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE39B4);
}

uint64_t sub_1BAFEE08C()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE09C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFE6C98((void (*)(void))sub_1BA82DAD0, (void (*)(uint64_t))sub_1BAFEE10C, a1);
}

uint64_t sub_1BAFEE0CC()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE0DC()
{
  uint64_t v0;

  return sub_1BAFE9894(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (unint64_t *)&unk_1ED3B9810, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
}

unint64_t sub_1BAFEE10C()
{
  unint64_t result;

  result = qword_1EF2B8B28;
  if (!qword_1EF2B8B28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for BlockingCommandState, &type metadata for BlockingCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B28);
  }
  return result;
}

uint64_t sub_1BAFEE150(char *a1)
{
  uint64_t v1;

  return sub_1BAFEA398(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(double))sub_1BAFEE10C);
}

unint64_t sub_1BAFEE178()
{
  unint64_t result;

  result = qword_1EF2B8B30;
  if (!qword_1EF2B8B30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for BlockingCommandState, &type metadata for BlockingCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B30);
  }
  return result;
}

uint64_t sub_1BAFEE1BC(char *a1)
{
  return sub_1BA675448(a1, (uint64_t)sub_1BAFEE1C8);
}

uint64_t sub_1BAFEE1C8(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE1318);
}

uint64_t sub_1BAFEE1D4()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE1E4()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE1F4()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFE9E94(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D8668, (uint64_t)sub_1BAFEE418, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8148]);
}

uint64_t sub_1BAFEE244()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFE9E94(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D8640, (uint64_t)sub_1BAA0239C, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEE294()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFE9E94(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D8618, (uint64_t)sub_1BAFEE3AC, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEE2E4()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEE300(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE3978);
}

uint64_t sub_1BAFEE300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BAFEE318()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEE328@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFE6C98((void (*)(void))sub_1BA82C0F4, (void (*)(uint64_t))sub_1BAFEE368, a1);
}

uint64_t sub_1BAFEE358()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

unint64_t sub_1BAFEE368()
{
  unint64_t result;

  result = qword_1EF2B8B40;
  if (!qword_1EF2B8B40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IgnoringCommandState, &type metadata for IgnoringCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B40);
  }
  return result;
}

uint64_t sub_1BAFEE3AC(char *a1)
{
  uint64_t v1;

  return sub_1BAFEA398(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(double))sub_1BAFEE368);
}

unint64_t sub_1BAFEE3D4()
{
  unint64_t result;

  result = qword_1EF2B8B48;
  if (!qword_1EF2B8B48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IgnoringCommandState, &type metadata for IgnoringCommandState);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B48);
  }
  return result;
}

uint64_t sub_1BAFEE418(char *a1)
{
  return sub_1BA675448(a1, (uint64_t)sub_1BAFEE424);
}

uint64_t sub_1BAFEE424(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE1304);
}

uint64_t sub_1BAFEE434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF5D4(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA6EF3B0, (void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t objectdestroy_99Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA6EF3B0();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BAFEE4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF66C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA6EF3B0, (void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

double sub_1BAFEE510@<D0>(void (*a1)(uint64_t (*)(), _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double result;
  _QWORD v8[4];

  sub_1BA6EF3B0();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v8[2] = *(_QWORD *)(v2 + 16);
  v8[3] = v2 + ((v6 + 24) & ~v6);
  a1(sub_1BA647E00, v8);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1BAFEE590()
{
  sub_1BA6EF3B0();
  return 1;
}

uint64_t sub_1BAFEE5B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1BA6EF3B0();
  v2 = sub_1BB86FB08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

double sub_1BAFEE5F8@<D0>(uint64_t a1@<X8>)
{
  double result;

  sub_1BA6EF3B0();
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_1BAFEE62C()
{
  return sub_1BAFEF9A8((uint64_t (*)(_QWORD))sub_1BA6EF3B0, sub_1BAFE9440);
}

uint64_t sub_1BAFEE640(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAFEE694@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFEB080(a1);
}

uint64_t sub_1BAFEE6B0()
{
  return sub_1BAFEAAA0();
}

uint64_t sub_1BAFEE6C0()
{
  return sub_1BAFEAB14();
}

double sub_1BAFEE6E0@<D0>(void (*a1)(uint64_t (*)(), _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  double result;
  _QWORD v7[4];
  __int128 v8;
  char v9;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_BYTE *)(v2 + 40);
  v8 = *(_OWORD *)(v2 + 24);
  v9 = v5;
  v7[2] = v4;
  v7[3] = &v8;
  a1(sub_1BA647E00, v7);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

id sub_1BAFEE750(id result, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1BA87E594(result, a2, a3);
  return result;
}

uint64_t objectdestroy_123Tm()
{
  uint64_t v0;
  int v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255)
    sub_1BA87E5C8(*(id *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_1BAFEE7A4()
{
  uint64_t v0;

  return sub_1BAFE9AB8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1BAFEE7B8()
{
  return sub_1BAFEA99C();
}

uint64_t sub_1BAFEE7C8()
{
  return sub_1BAFEAA18();
}

double sub_1BAFEE7E8@<D0>(void (*a1)(uint64_t (*)(), _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  __int128 v6;
  double result;
  _QWORD v8[4];
  _OWORD v9[3];
  char v10;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_BYTE *)(v2 + 72);
  v6 = *(_OWORD *)(v2 + 40);
  v9[0] = *(_OWORD *)(v2 + 24);
  v9[1] = v6;
  v9[2] = *(_OWORD *)(v2 + 56);
  v10 = v5;
  v8[2] = v4;
  v8[3] = v9;
  a1(sub_1BA647E00, v8);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1BAFEE860(uint64_t a1)
{
  sub_1BAFEE898(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

id sub_1BAFEE898(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1)
    return sub_1BAB5B604(result, a2, a3, a4, a5, a6, a7);
  return result;
}

uint64_t objectdestroy_147Tm()
{
  uint64_t v0;
  int v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255)
    sub_1BAB5D7D0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  return swift_deallocObject();
}

uint64_t sub_1BAFEE8F4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[56];

  v1 = *(_QWORD *)(v0 + 16);
  sub_1BA6A09F0(v0 + 24, (uint64_t)v3, &qword_1ED39FE50, (uint64_t)&type metadata for CommandShareContent);
  return sub_1BAFE99A8(v1, (uint64_t)v3);
}

void sub_1BAFEE944(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B8B58, (uint64_t (*)(uint64_t))sub_1BA4A3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFEE960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEAB94(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (void (*)(_QWORD))sub_1BA4A3E50) & 1;
}

uint64_t sub_1BAFEE98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEAC14(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (void (*)(_QWORD))sub_1BA4A3E50);
}

double sub_1BAFEE9B4@<D0>(void (*a1)(uint64_t, _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  return sub_1BAFEF2F8(a1, (uint64_t)sub_1BA647E00, a2);
}

uint64_t objectdestroy_171Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BAFEEA00()
{
  uint64_t v0;

  return sub_1BAFE9DAC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BAFEEA08()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1BAFEEA18(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2B8B68, (uint64_t (*)(uint64_t))sub_1BA4B08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFEEA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEAB94(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, sub_1BA4B08A0) & 1;
}

uint64_t sub_1BAFEEA5C()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEAC14(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, sub_1BA4B08A0);
}

uint64_t sub_1BAFEEA90()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEAA0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEAB0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEAC0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEAD0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEAE0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAFEEAF0()
{
  return sub_1BAFE9CC0();
}

uint64_t sub_1BAFEEAF8()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1BAFEEB08(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B8B78, (uint64_t (*)(uint64_t))type metadata accessor for Commands.RemoveIssues.Prompt, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFEEB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEAB94(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (void (*)(_QWORD))type metadata accessor for Commands.RemoveIssues.Prompt) & 1;
}

uint64_t sub_1BAFEEB4C()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEAC14(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (void (*)(_QWORD))type metadata accessor for Commands.RemoveIssues.Prompt);
}

uint64_t sub_1BAFEEB80()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEB90()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEBA0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEBB0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEBC0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEBD0()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAFEEBE0()
{
  return sub_1BAFE9BD4();
}

uint64_t sub_1BAFEEBEC()
{
  return sub_1BAFEA678() & 1;
}

uint64_t sub_1BAFEEC18()
{
  return sub_1BAFEA6F4();
}

double sub_1BAFEEC40@<D0>(void (*a1)(uint64_t (*)(), _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[4];
  __int128 v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v8 = *(_OWORD *)(v2 + 24);
  v9 = v5;
  v7[2] = v4;
  v7[3] = &v8;
  a1(sub_1BA647E00, v7);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1BAFEECAC(uint64_t result)
{
  if (result != 1)
  {
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

double sub_1BAFEECE4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t objectdestroy_243Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BAFEED34()
{
  return sub_1BAFEF1D0((void (*)(uint64_t, uint64_t, uint64_t))sub_1BAFEECAC, &qword_1ED3A0430, (uint64_t)&type metadata for OpenChannelCommandContext);
}

uint64_t sub_1BAFEED50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAFEED74()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEEDEC()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

double sub_1BAFEEE68@<D0>(void (*a1)(uint64_t (*)(), _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  double result;
  _QWORD v6[5];
  char v7;

  v4 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  v6[2] = v4;
  v6[3] = &v7;
  a1(sub_1BA647E00, v6);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1BAFEEEC0()
{
  return sub_1BAFE9564();
}

uint64_t sub_1BAFEEECC()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEEDC()
{
  return sub_1BAFEA850();
}

uint64_t sub_1BAFEEEE8()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEEF8()
{
  return sub_1BAFEA8F4();
}

uint64_t sub_1BAFEEF14()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEF24()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA67B6CC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D91F8, (uint64_t)sub_1BAA0239C, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEEF74()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA67B6CC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1E72D91D0, (uint64_t)sub_1BAFEF024, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEEFC4()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFE4F00(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
}

uint64_t sub_1BAFEEFEC()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEEFFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFE70C4(a1);
}

uint64_t sub_1BAFEF008()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF018()
{
  return sub_1BAFE78D4();
}

uint64_t sub_1BAFEF024(char *a1)
{
  uint64_t v1;

  return sub_1BAFEA398(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(double))sub_1BA67B868);
}

uint64_t sub_1BAFEF050()
{
  return sub_1BAFEA678() & 1;
}

uint64_t sub_1BAFEF07C()
{
  return sub_1BAFEA6F4();
}

uint64_t sub_1BAFEF0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA679264(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (__int128 *)(v4 + 24), (uint64_t)&unk_1E72D93B0, (uint64_t)sub_1BAA0239C, (void (*)(uint64_t, __int128 *, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEF0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA679264(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), (__int128 *)(v4 + 24), (uint64_t)&unk_1E72D9388, (uint64_t)sub_1BAFEF1F8, (void (*)(uint64_t, __int128 *, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFEF130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1BAFE4AE4(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), v3[2], v3[3], v3[4], v3[5]) & 1;
}

uint64_t sub_1BAFEF16C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFEA774(a1);
}

uint64_t objectdestroy_324Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BAFEF1B4()
{
  return sub_1BAFEF1D0((void (*)(uint64_t, uint64_t, uint64_t))sub_1BA73D078, &qword_1ED3C93E0, (uint64_t)&type metadata for LikingCommandContext);
}

uint64_t sub_1BAFEF1D0(void (*a1)(uint64_t, uint64_t, uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1BAFE976C(v3[2], v3[3], v3[4], v3[5], a1, a2, a3);
}

uint64_t sub_1BAFEF1F8(_BYTE *a1)
{
  uint64_t v1;

  return sub_1BAFEAC98(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1BAFEF210()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF220(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BA4C3E90(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BAFEF27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFE9F90(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1ED3D4450) & 1;
}

uint64_t sub_1BAFEF2AC()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BAFEA024(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + 24, (unint64_t *)&qword_1ED3D4450);
}

uint64_t sub_1BAFEF2E8()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

double sub_1BAFEF2F8@<D0>(void (*a1)(uint64_t, _QWORD *)@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v5 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v7[2] = v5;
  v7[3] = &v8;
  a1(a2, v7);
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_1BAFEF348()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF358()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF368()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF378()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF388()
{
  return objectdestroyTm_8((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BAFEF398()
{
  uint64_t v0;

  return sub_1BAFE9894(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1ED3B9878, (unint64_t *)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
}

uint64_t sub_1BAFEF3CC()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFEF444()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

double sub_1BAFEF4C0@<D0>(void (*a1)(uint64_t (*)(), _QWORD *)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  double result;
  _QWORD v6[4];
  __int128 v7;

  v4 = *(_QWORD *)(v2 + 16);
  v7 = *(_OWORD *)(v2 + 24);
  v6[2] = v4;
  v6[3] = &v7;
  a1(sub_1BA647E00, v6);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1BAFEF524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1BB86FB08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t objectdestroy_381Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFEF594()
{
  return sub_1BAFE9664();
}

void sub_1BAFEF5A0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C6110, (uint64_t (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFEF5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF5D4(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (void (*)(_QWORD))type metadata accessor for FeedHeadlineAudioCommandContext);
}

uint64_t sub_1BAFEF5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a4(0) - 8) + 80);
  return sub_1BAFE9344(a1, a2, a3, *(_QWORD *)(v5 + 16), v5 + ((v10 + 24) & ~v10), a5) & 1;
}

uint64_t sub_1BAFEF648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF66C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (void (*)(_QWORD))type metadata accessor for FeedHeadlineAudioCommandContext);
}

uint64_t sub_1BAFEF66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a4(0) - 8) + 80);
  return sub_1BAFE93C0(a1, a2, a3, *(_QWORD *)(v5 + 16), v5 + ((v10 + 24) & ~v10), a5);
}

uint64_t sub_1BAFEF6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE0DE4);
}

uint64_t sub_1BAFEF6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE2B5C);
}

uint64_t sub_1BAFEF710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(a5(0) - 8) + 80);
  return a6(a1, a2, a3, a4, *(_QWORD *)(v6 + 16), v6 + ((v11 + 24) & ~v11));
}

uint64_t sub_1BAFEF794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE3234);
}

uint64_t sub_1BAFEF7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0604(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE46B4);
}

uint64_t sub_1BAFEF7C4(uint64_t a1, uint64_t a2)
{
  return sub_1BAFF0688(a1, a2, (uint64_t (*)(_QWORD))sub_1BAFEF5A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE6FC4);
}

uint64_t objectdestroy_405Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1BAFEF5A0(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = type metadata accessor for FeedHeadlineAudioCommandContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v5 = (int *)type metadata accessor for FeedHeadline(0);
    v6 = v5[10];
    v7 = v3 + v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    v8 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      v9 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

      v10 = v7 + *(int *)(v8 + 28);
      v11 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
    v12 = v3 + v5[11];
    v13 = sub_1BB871B24();
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    if (*(_QWORD *)(v3 + v5[12] + 8) >= 0x11uLL)
      swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + v5[13]) >= 3uLL)
      swift_unknownObjectRelease();

  }
  return swift_deallocObject();
}

uint64_t sub_1BAFEF994()
{
  return sub_1BAFEF9A8((uint64_t (*)(_QWORD))sub_1BAFEF5A0, sub_1BAFE78C8);
}

uint64_t sub_1BAFEF9A8(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

unint64_t sub_1BAFEF9EC()
{
  unint64_t result;

  result = qword_1ED3C0E10[0];
  if (!qword_1ED3C0E10[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAudioPlaybackState, &type metadata for FeedAudioPlaybackState);
    atomic_store(result, qword_1ED3C0E10);
  }
  return result;
}

uint64_t sub_1BAFEFA30(char *a1)
{
  uint64_t v1;

  return sub_1BAFEA584(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_1BAFEFA38()
{
  unint64_t result;

  result = qword_1ED3B1F28[0];
  if (!qword_1ED3B1F28[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAudioPlaybackState, &type metadata for FeedAudioPlaybackState);
    atomic_store(result, qword_1ED3B1F28);
  }
  return result;
}

uint64_t sub_1BAFEFA7C(char *a1)
{
  return sub_1BA675448(a1, (uint64_t)sub_1BAFEFA88);
}

uint64_t sub_1BAFEFA88(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE1714);
}

uint64_t sub_1BAFEFA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF5D4(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (void (*)(_QWORD))type metadata accessor for FeedHeadline);
}

uint64_t objectdestroy_438Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA7C2AA0(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = (int *)type metadata accessor for FeedHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v5 = v4[10];
    v6 = v3 + v5 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    v7 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      v8 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);

      v9 = v6 + *(int *)(v7 + 28);
      v10 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
    v11 = v3 + v4[11];
    v12 = sub_1BB871B24();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    if (*(_QWORD *)(v3 + v4[12] + 8) >= 0x11uLL)
      swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + v4[13]) >= 3uLL)
      swift_unknownObjectRelease();

  }
  return swift_deallocObject();
}

uint64_t sub_1BAFEFC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF66C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (void (*)(_QWORD))type metadata accessor for FeedHeadline);
}

uint64_t sub_1BAFEFC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE0D04);
}

uint64_t sub_1BAFEFCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE2A7C);
}

uint64_t sub_1BAFEFCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE3154);
}

uint64_t sub_1BAFEFCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0604(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE427C);
}

uint64_t sub_1BAFEFCE8(uint64_t a1, uint64_t a2)
{
  return sub_1BAFF0688(a1, a2, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE6EA8);
}

uint64_t sub_1BAFEFD00()
{
  return sub_1BAFEF9A8((uint64_t (*)(_QWORD))sub_1BA7C2AA0, sub_1BAFE78BC);
}

uint64_t sub_1BAFEFD14(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFE3754(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(void (**)(double *))(v1 + 16));
}

unint64_t sub_1BAFEFD38()
{
  unint64_t result;

  result = qword_1ED3AC1A0;
  if (!qword_1ED3AC1A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedListeningProgress, &type metadata for FeedListeningProgress);
    atomic_store(result, (unint64_t *)&qword_1ED3AC1A0);
  }
  return result;
}

uint64_t sub_1BAFEFD7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t (*)(uint64_t), _QWORD *);
  char v3;
  char v4;
  _QWORD v6[4];
  uint64_t v7;
  char v8;
  char v9;

  v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_BYTE *)a1 + 9);
  v7 = *a1;
  v8 = v3;
  v9 = v4;
  v6[2] = &v7;
  return v2(sub_1BAFEFDD0, v6);
}

uint64_t sub_1BAFEFDD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFE1340(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), **(_QWORD **)(v1 + 16), *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 8) | (unsigned __int16)(*(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 9) << 8));
}

uint64_t sub_1BAFEFDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFEFE64()
{
  return sub_1BAFF0350();
}

uint64_t sub_1BAFEFE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE114C(a1, a2, a3, a4);
}

uint64_t sub_1BAFEFE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE2F9C(a1, a2, a3, a4);
}

uint64_t sub_1BAFEFE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE359C(a1, a2, a3, a4);
}

uint64_t sub_1BAFEFEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0498(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE6430);
}

uint64_t sub_1BAFEFEBC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BAFE75A0(a1);
}

uint64_t sub_1BAFEFECC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFE3864(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(void (**)(_QWORD *))(v1 + 16));
}

unint64_t sub_1BAFEFEE0()
{
  unint64_t result;

  result = qword_1ED3A4BF8;
  if (!qword_1ED3A4BF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleProgress, &type metadata for FeedPuzzleProgress);
    atomic_store(result, (unint64_t *)&qword_1ED3A4BF8);
  }
  return result;
}

uint64_t sub_1BAFEFF24(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t (*)(uint64_t), _QWORD *);
  char v3;
  _QWORD v5[4];
  uint64_t v6;
  char v7;

  v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 8);
  v6 = *a1;
  v7 = v3;
  v5[2] = &v6;
  return v2(sub_1BAFEFF70, v5);
}

uint64_t sub_1BAFEFF70(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFE22B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), **(_QWORD **)(v1 + 16), *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 8));
}

uint64_t sub_1BAFEFF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE1074(a1, a2, a3, a4);
}

uint64_t sub_1BAFEFFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE2EC4(a1, a2, a3, a4);
}

uint64_t sub_1BAFEFFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE34C4(a1, a2, a3, a4);
}

uint64_t sub_1BAFEFFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0498(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE6000);
}

uint64_t sub_1BAFEFFD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFE74B0(a1);
}

unint64_t sub_1BAFEFFE8()
{
  unint64_t result;

  result = qword_1ED3A5108;
  if (!qword_1ED3A5108)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleProgressState, &type metadata for FeedPuzzleProgressState);
    atomic_store(result, (unint64_t *)&qword_1ED3A5108);
  }
  return result;
}

uint64_t sub_1BAFF002C(char *a1)
{
  uint64_t v1;

  return sub_1BAFEAF80(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(double))sub_1BAFEFFE8);
}

unint64_t sub_1BAFF0054()
{
  unint64_t result;

  result = qword_1ED3A5120;
  if (!qword_1ED3A5120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleProgressState, &type metadata for FeedPuzzleProgressState);
    atomic_store(result, (unint64_t *)&qword_1ED3A5120);
  }
  return result;
}

uint64_t sub_1BAFF0098(char *a1)
{
  return sub_1BA675448(a1, (uint64_t)sub_1BAFF00A4);
}

uint64_t sub_1BAFF00A4(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE22A0);
}

uint64_t sub_1BAFF00BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE0F9C(a1, a2, a3, a4);
}

uint64_t sub_1BAFF00CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE2DEC(a1, a2, a3, a4);
}

uint64_t sub_1BAFF00DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE33EC(a1, a2, a3, a4);
}

uint64_t sub_1BAFF00EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0498(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE5BD8);
}

uint64_t sub_1BAFF00FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BAFE73B4(a1);
}

uint64_t sub_1BAFF010C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFEAE80(a1, *(void (**)(_QWORD *))(v1 + 16));
}

unint64_t sub_1BAFF0114()
{
  unint64_t result;

  result = qword_1EF2B8B80;
  if (!qword_1EF2B8B80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleRankState, &type metadata for FeedPuzzleRankState);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B80);
  }
  return result;
}

uint64_t sub_1BAFF0158(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t (*)(uint64_t), _QWORD *);
  char v3;
  _QWORD v5[4];
  uint64_t v6;
  char v7;

  v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 8);
  v6 = *a1;
  v7 = v3;
  v5[2] = &v6;
  return v2(sub_1BAFF01A4, v5);
}

uint64_t sub_1BAFF01A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFE1EDC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), **(_QWORD **)(v1 + 16), *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 8));
}

uint64_t sub_1BAFF01CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE0EC4(a1, a2, a3, a4);
}

uint64_t sub_1BAFF01DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE2D14(a1, a2, a3, a4);
}

uint64_t sub_1BAFF01EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFE3314(a1, a2, a3, a4);
}

uint64_t sub_1BAFF01FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0498(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE5778);
}

uint64_t sub_1BAFF020C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BAFE72B8(a1);
}

uint64_t sub_1BAFF021C()
{
  uint64_t v0;

  return sub_1BAFE79C8(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1BAFF0238(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BAFEAD70(a1, *(void (**)(_QWORD *))(v1 + 16));
}

unint64_t sub_1BAFF0240()
{
  unint64_t result;

  result = qword_1EF2B8B90;
  if (!qword_1EF2B8B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleRankProgress, &type metadata for FeedPuzzleRankProgress);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B90);
  }
  return result;
}

uint64_t sub_1BAFF0284(__int128 *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t (*)(uint64_t), _QWORD *);
  _QWORD v4[4];
  __int128 v5;

  v2 = *(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *))(v1 + 16);
  v5 = *a1;
  v4[2] = &v5;
  return v2(sub_1BAFF02C8, v4);
}

uint64_t sub_1BAFF02C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFE1B00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), **(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8));
}

uint64_t sub_1BAFF02E4()
{
  swift_getObjectType();
  return sub_1BB86FF10() & 1;
}

uint64_t sub_1BAFF0350()
{
  swift_getObjectType();
  return sub_1BB86FF4C();
}

uint64_t sub_1BAFF03C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFE2C3C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + 24, (uint64_t)&unk_1E72DA260, (uint64_t)sub_1BA815060, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB8148]);
}

uint64_t sub_1BAFF0404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFE2C3C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + 24, (uint64_t)&unk_1E72DA238, (uint64_t)sub_1BAA0239C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFF0448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAFE2C3C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + 24, (uint64_t)&unk_1E72DA210, (uint64_t)sub_1BAFF09AC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB8130]);
}

uint64_t sub_1BAFF048C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0498(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE5364);
}

uint64_t sub_1BAFF0498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v4;

  return a4(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(_QWORD *)(v4 + 16), v4 + 24);
}

uint64_t sub_1BAFF04B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFE71E0(a1);
}

uint64_t objectdestroy_471Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 72))
  {
    if (*(_QWORD *)(v0 + 56) >= 0x11uLL)
      swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    if (*(_QWORD *)(v0 + 176))
      __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  }
  return swift_deallocObject();
}

void sub_1BAFF0548(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CBC00, (uint64_t (*)(uint64_t))type metadata accessor for LiveActivityCommandContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAFF0568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF5D4(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAFF0548, (void (*)(_QWORD))type metadata accessor for LiveActivityCommandContext);
}

uint64_t sub_1BAFF0580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEF66C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAFF0548, (void (*)(_QWORD))type metadata accessor for LiveActivityCommandContext);
}

uint64_t sub_1BAFF05A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BAFF0548, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE1224);
}

uint64_t sub_1BAFF05C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BAFF0548, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE3074);
}

uint64_t sub_1BAFF05D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFEF710(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BAFF0548, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE3674);
}

uint64_t sub_1BAFF05F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFF0604(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BAFF0548, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAFE6868);
}

uint64_t sub_1BAFF0604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v5;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a4(0) - 8) + 80);
  return a5(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(_QWORD *)(v5 + 16), v5 + ((v9 + 24) & ~v9));
}

uint64_t sub_1BAFF0674(uint64_t a1, uint64_t a2)
{
  return sub_1BAFF0688(a1, a2, (uint64_t (*)(_QWORD))sub_1BAFF0548, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1BAFE76B0);
}

uint64_t sub_1BAFF0688(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, a2, *(_QWORD *)(v4 + 16), v4 + ((v7 + 24) & ~v7));
}

uint64_t objectdestroy_636Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BAFF0548(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = type metadata accessor for LiveActivityCommandContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v3, 1, v4))
  {
    v5 = sub_1BB86EF08();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
    v6 = v0 + v3 + *(int *)(v4 + 20);
    v7 = sub_1BB86EE78();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject();
}

uint64_t sub_1BAFF07B8()
{
  return sub_1BAFEF9A8((uint64_t (*)(_QWORD))sub_1BAFF0548, sub_1BAFE7ABC);
}

unint64_t sub_1BAFF07CC()
{
  unint64_t result;

  result = qword_1ED3A2DC8;
  if (!qword_1ED3A2DC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivitySubscriptionCommandState, &type metadata for LiveActivitySubscriptionCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DC8);
  }
  return result;
}

uint64_t sub_1BAFF0810(char *a1)
{
  uint64_t v1;

  return sub_1BAFEAF80(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(double))sub_1BAFF07CC);
}

unint64_t sub_1BAFF0838()
{
  unint64_t result;

  result = qword_1ED3A2DD0;
  if (!qword_1ED3A2DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LiveActivitySubscriptionCommandState, &type metadata for LiveActivitySubscriptionCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DD0);
  }
  return result;
}

uint64_t sub_1BAFF087C(char *a1)
{
  return sub_1BA675448(a1, (uint64_t)sub_1BAFF0888);
}

uint64_t sub_1BAFF0888(uint64_t a1)
{
  return sub_1BA67B28C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFE2690);
}

unint64_t sub_1BAFF0894()
{
  unint64_t result;

  result = qword_1ED39EB38;
  if (!qword_1ED39EB38)
  {
    result = MEMORY[0x1BCCE5B24]("ᦟ+hK\r", &type metadata for FormatTagMoreActions.Action);
    atomic_store(result, (unint64_t *)&qword_1ED39EB38);
  }
  return result;
}

uint64_t sub_1BAFF08D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAFEDFF0(a1, a2, a3);
}

unint64_t sub_1BAFF09B8()
{
  unint64_t result;

  result = qword_1ED3A5858;
  if (!qword_1ED3A5858)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionId, &type metadata for FormatOptionId);
    atomic_store(result, (unint64_t *)&qword_1ED3A5858);
  }
  return result;
}

uint64_t sub_1BAFF0A00(char *a1, char *a2)
{
  return sub_1BB7F53EC(*a1, *a2);
}

uint64_t sub_1BAFF0A0C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFF0A84()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFF0AD8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAFF0B4C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAFF0BA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65756C6176;
  if (*v1)
    v2 = 0x6E6F6974706FLL;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAFF0BE0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BAFF0C40()
{
  sub_1BA63BD94();
  return sub_1BB874710();
}

uint64_t sub_1BAFF0C68()
{
  sub_1BA63BD94();
  return sub_1BB87471C();
}

uint64_t sub_1BAFF0C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFF0CBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB649DEC);
}

uint64_t sub_1BAFF0CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFF0CBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB64A618);
}

uint64_t sub_1BAFF0CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAFF0CBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB649600);
}

uint64_t sub_1BAFF0CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1BAFF0CE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatOptionCompareValue.init(from:)(a1, a2);
}

uint64_t sub_1BAFF0CF4(_QWORD *a1)
{
  return FormatOptionCompareValue.encode(to:)(a1);
}

uint64_t _s8NewsFeed24FormatOptionCompareValueO1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      v4 = *(_QWORD *)(a1 + 8);
      if (v3 != *(_QWORD *)a2 || v4 != *(_QWORD *)(a2 + 8))
        return sub_1BB874398();
    }
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    v8 = *(_QWORD *)a2;
    v9 = v3;
    v7 = static FormatOptionValue.< infix(_:_:)(&v9, &v8);
    return v7 & 1;
  }
  v7 = 0;
  return v7 & 1;
}

uint64_t _s8NewsFeed24FormatOptionCompareValueO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 16) != 1)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    {
      v8 = *(_QWORD *)a2;
      v9 = v3;
      v7 = static FormatOptionValue.== infix(_:_:)(&v9, &v8);
      return v7 & 1;
    }
    goto LABEL_9;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
LABEL_9:
    v7 = 0;
    return v7 & 1;
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v3 != *(_QWORD *)a2 || v4 != *(_QWORD *)(a2 + 8))
    return sub_1BB874398();
  v7 = 1;
  return v7 & 1;
}

unint64_t sub_1BAFF0E10(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAFF0E44();
  a1[2] = sub_1BAFF0E88();
  result = sub_1BAFF0ECC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFF0E44()
{
  unint64_t result;

  result = qword_1EF2B8B98;
  if (!qword_1EF2B8B98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionCompareValue, &type metadata for FormatOptionCompareValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B8B98);
  }
  return result;
}

unint64_t sub_1BAFF0E88()
{
  unint64_t result;

  result = qword_1EF2B8BA0;
  if (!qword_1EF2B8BA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionCompareValue, &type metadata for FormatOptionCompareValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B8BA0);
  }
  return result;
}

unint64_t sub_1BAFF0ECC()
{
  unint64_t result;

  result = qword_1EF2B8BA8;
  if (!qword_1EF2B8BA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionCompareValue, &type metadata for FormatOptionCompareValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B8BA8);
  }
  return result;
}

uint64_t destroy for FormatOptionCompareValue(uint64_t a1)
{
  return sub_1BA636D1C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed24FormatOptionCompareValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA7114EC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatOptionCompareValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA7114EC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA636D1C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatOptionCompareValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA636D1C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatOptionCompareValue()
{
  return &type metadata for FormatOptionCompareValue;
}

uint64_t storeEnumTagSinglePayload for FormatOptionCompareValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFF1064 + 4 * byte_1BB8E0205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFF1098 + 4 * byte_1BB8E0200[v4]))();
}

uint64_t sub_1BAFF1098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF10A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFF10A8);
  return result;
}

uint64_t sub_1BAFF10B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFF10BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFF10C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF10C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionCompareValue.CodingKeys()
{
  return &type metadata for FormatOptionCompareValue.CodingKeys;
}

unint64_t sub_1BAFF10E8()
{
  unint64_t result;

  result = qword_1EF2B8BB0[0];
  if (!qword_1EF2B8BB0[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E03E8, &type metadata for FormatOptionCompareValue.CodingKeys);
    atomic_store(result, qword_1EF2B8BB0);
  }
  return result;
}

uint64_t sub_1BAFF112C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BAFF1148()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
  type metadata accessor for LiveActivityCommandContext();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1BAFF11D0;
  return sub_1BB86EE60();
}

uint64_t sub_1BAFF11D0()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_1BAFF123C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 48) != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAFF1258()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAFF1284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18[2];

  v6 = type metadata accessor for LiveActivityCommandContext();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4A3FB4(0, &qword_1ED3C1DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - v10;
  v12 = *v4;
  v13 = sub_1BB872F94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  sub_1BA4C010C(v12 + 16, (uint64_t)v18);
  sub_1BAFF1A38(a4, (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  sub_1BA4CECCC(v18, v15 + 32);
  sub_1BAFF1B2C((uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_1BB1B6C40((uint64_t)v11, (uint64_t)&unk_1EF2B8C08, v15);
  return swift_release();
}

uint64_t sub_1BAFF13C4@<X0>(uint64_t a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1BAFF1648(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BAFF13F0()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BB86EE3C() & 1;
}

uint64_t sub_1BAFF1438()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1BAFF1450()
{
  uint64_t v0;

  sub_1BB872F7C();
  *(_QWORD *)(v0 + 24) = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BAFF14B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1BAFF14D0()
{
  uint64_t v0;

  sub_1BB872F7C();
  *(_QWORD *)(v0 + 24) = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BAFF1538()
{
  uint64_t v0;

  swift_release();
  swift_getObjectType();
  if (qword_1ED3C4B20 != -1)
    swift_once();
  type metadata accessor for LiveActivityCommandContext();
  sub_1BB86FF1C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAFF15CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BA4B0D38;
  return sub_1BB86EEA8();
}

uint64_t sub_1BAFF1648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v28;

  sub_1BA4A3FB4(0, &qword_1ED3A25D0, (void (*)(uint64_t))MEMORY[0x1E0D60D28]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - v4;
  sub_1BA4A3FB4(0, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  v15 = sub_1BB86EE54();
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1BB4AB660(a1), (v17 & 1) != 0))
  {
    v18 = v16;
    v19 = *(_QWORD *)(v15 + 56);
    v20 = sub_1BB86EEF0();
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v5, v19 + *(_QWORD *)(v21 + 72) * v18, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v5, 0, 1, v20);
  }
  else
  {
    v20 = sub_1BB86EEF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  sub_1BB86EEF0();
  v22 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v5, 1, v20) == 1)
  {
    sub_1BA502AD0((uint64_t)v5, &qword_1ED3A25D0, (void (*)(uint64_t))MEMORY[0x1E0D60D28]);
    v23 = sub_1BB86EEB4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 1, 1, v23);
  }
  else
  {
    sub_1BB86EEC0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v20);
    v23 = sub_1BB86EEB4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 0, 1, v23);
  }
  sub_1BAFF19E4((uint64_t)v14, (uint64_t)v11);
  sub_1BB86EEB4();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23) == 1)
    goto LABEL_9;
  sub_1BAFF19E4((uint64_t)v11, (uint64_t)v8);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v8, v23);
  if (v26 == *MEMORY[0x1E0D60CE8])
  {
    sub_1BA502AD0((uint64_t)v14, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
LABEL_18:
    v25 = 2;
    goto LABEL_19;
  }
  if (v26 == *MEMORY[0x1E0D60CD8])
  {
    sub_1BA502AD0((uint64_t)v14, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
    v25 = 1;
    goto LABEL_19;
  }
  if (v26 == *MEMORY[0x1E0D60CD0])
  {
LABEL_17:
    sub_1BA502AD0((uint64_t)v14, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
    goto LABEL_18;
  }
  if (v26 != *MEMORY[0x1E0D60CE0])
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v23);
    goto LABEL_17;
  }
LABEL_9:
  sub_1BA502AD0((uint64_t)v14, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
  v25 = 0;
LABEL_19:
  sub_1BA502AD0((uint64_t)v11, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
  return v25;
}

uint64_t sub_1BAFF19E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1EF2B8BF8, (void (*)(uint64_t))MEMORY[0x1E0D60CF0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFF1A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveActivityCommandContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFF1A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for LiveActivityCommandContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 72) & ~v2;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v4 = v0 + v3;
  v5 = sub_1BB86EF08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 20);
  v7 = sub_1BB86EE78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_1BAFF1B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveActivityCommandContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFF1B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LiveActivityCommandContext() - 8) + 80);
  v5 = v1 + 32;
  v6 = v1 + ((v4 + 72) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BA8195A4;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

unint64_t FormatSlotItemTagFilterAndCondition.lhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA739250(v2);
}

unint64_t FormatSlotItemTagFilterAndCondition.rhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA739250(v2);
}

uint64_t sub_1BAFF1C20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotItemTagFilterAndCondition.init(from:)(a1, a2);
}

uint64_t sub_1BAFF1C34(_QWORD *a1)
{
  return FormatSlotItemTagFilterAndCondition.encode(to:)(a1);
}

uint64_t _s8NewsFeed35FormatSlotItemTagFilterAndConditionV2eeoiySbAC_ACtFZ_0(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  v1 = a1[1];
  v5 = *a1;
  static FormatSlotItemTagFilterCondition.== infix(_:_:)((uint64_t)&v5);
  if ((v2 & 1) != 0)
  {
    v5 = v1;
    static FormatSlotItemTagFilterCondition.== infix(_:_:)((uint64_t)&v5);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_1BAFF1CA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFF1CC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFF1CC8()
{
  unint64_t result;

  result = qword_1EF2B8C10;
  if (!qword_1EF2B8C10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterAndCondition, &type metadata for FormatSlotItemTagFilterAndCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2B8C10);
  }
  return result;
}

unint64_t sub_1BAFF1D0C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE732F4();
  a1[2] = sub_1BAEFAFD4();
  result = sub_1BAFF1D40();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAFF1D40()
{
  unint64_t result;

  result = qword_1EF2B8C18;
  if (!qword_1EF2B8C18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterAndCondition, &type metadata for FormatSlotItemTagFilterAndCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2B8C18);
  }
  return result;
}

unint64_t destroy for FormatSlotItemTagFilterAndCondition(unint64_t *a1)
{
  sub_1BA6F5D74(*a1);
  return sub_1BA6F5D74(a1[1]);
}

unint64_t *_s8NewsFeed35FormatSlotItemTagFilterAndConditionVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a2;
  sub_1BA739250(*a2);
  *a1 = v4;
  v5 = a2[1];
  sub_1BA739250(v5);
  a1[1] = v5;
  return a1;
}

unint64_t *assignWithCopy for FormatSlotItemTagFilterAndCondition(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  sub_1BA739250(*a2);
  v5 = *a1;
  *a1 = v4;
  sub_1BA6F5D74(v5);
  v6 = a2[1];
  sub_1BA739250(v6);
  v7 = a1[1];
  a1[1] = v6;
  sub_1BA6F5D74(v7);
  return a1;
}

unint64_t *assignWithTake for FormatSlotItemTagFilterAndCondition(unint64_t *a1, _OWORD *a2)
{
  unint64_t v4;

  sub_1BA6F5D74(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BA6F5D74(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeAlternativeLogic.LogicalOperator(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeAlternativeLogic.LogicalOperator(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterAndCondition()
{
  return &type metadata for FormatSlotItemTagFilterAndCondition;
}

id SportsBoxScoreDataVisualization.leagueTag.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
}

uint64_t SportsBoxScoreDataVisualization.competitorTags.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
  v3 = sub_1BB872DB4();

  return v3;
}

uint64_t SportsBoxScoreDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBoxScoreDataVisualization.umcCanonicalId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBoxScoreDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBoxScoreDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, a1);
}

uint64_t SportsBoxScoreDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBoxScoreDataVisualization.roster.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsBoxScoreDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 32);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BA99178C(v2, v3);
}

uint64_t SportsBoxScoreDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA9917F4(&OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl, a1);
}

uint64_t SportsBoxScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

char *SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  char *v7;
  char *v8;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, double);
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v8 = v7;
  v54 = a5;
  v15 = sub_1BB86C67C();
  v16 = MEMORY[0x1E0C80A78](v15);
  v49 = a1;
  v50 = (uint64_t)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a6;
  v19 = *a7;
  v20 = a7[1];
  v21 = a7[2];
  v22 = a7[3];
  v23 = a7[5];
  v24 = a7[4];
  *((_QWORD *)v8 + 4) = a1;
  *((_QWORD *)v8 + 5) = a2;
  v25 = v19;
  v55 = a3;
  *((_QWORD *)v8 + 6) = a3;
  v26 = v21;
  v51 = a4;
  v52 = v27;
  v28 = *(void (**)(char *, uint64_t, double))(v27 + 16);
  v53 = v29;
  v28(&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl], a4, v16);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources] = v54;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster] = v18;
  v30 = v20;
  v31 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config];
  v32 = v25;
  *v31 = v25;
  v31[1] = v30;
  v54 = v26;
  v31[2] = v26;
  v31[3] = v22;
  v31[4] = v24;
  v31[5] = v23;
  v48 = v23;
  if (v30)
  {
    v56 = 14906;
    v57 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BA99178C(v25, v30);
    v33 = v24;
    sub_1BB872AFC(v34);
    v35 = v30;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v35 = 0;
    v33 = v24;
  }
  v47[1] = v33;
  v36 = v51;
  v56 = sub_1BB86C538();
  v57 = v37;
  sub_1BB872AFC(v38);
  sub_1BB872AFC(v39);
  sub_1BB872AFC(v40);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v41);
  swift_bridgeObjectRelease();
  v42 = v57;
  *((_QWORD *)v8 + 2) = v56;
  *((_QWORD *)v8 + 3) = v42;
  v56 = v32;
  v57 = v35;
  v58 = v54;
  v59 = v22;
  v60 = v33;
  v61 = v48;
  v43 = v50;
  sub_1BB0FA6B8(v36, &v56, 0xD000000000000019, 0x80000001BB975080, v50);
  swift_unknownObjectRelease();
  v45 = v52;
  v44 = v53;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v36, v53);
  sub_1BA993900(v32, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(&v8[OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl], v43, v44);
  return v8;
}

uint64_t SportsBoxScoreDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[6];
  uint64_t v25;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = a1[5];
  v13 = v1[4];
  v21 = v1[5];
  v22 = v1[6];
  v23 = v13;
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, v4);
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
  v24[5] = v11;
  v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v21;
  swift_bridgeObjectRetain();
  v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsBoxScoreDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsBoxScoreDataVisualization.init(from:)(a1);
  return v2;
}

uint64_t *SportsBoxScoreDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[3];
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;

  v39 = a1;
  v2 = v1;
  v4 = *v2;
  v34 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v30 - v7;
  sub_1BA99395C();
  v35 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFF4170(0, &qword_1EF2B8C28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v36 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFF412C();
  v37 = v15;
  v16 = v38;
  sub_1BB87468C();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v4;
    v18 = v35;
    v38 = v13;
    v30[2] = v17;
    LOBYTE(v40) = 0;
    v2[4] = sub_1BB874098();
    v2[5] = v19;
    LOBYTE(v40) = 1;
    sub_1BA4A2870(&qword_1ED3A3BA0, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB50A0]);
    sub_1BB8740D4();
    sub_1BB86ED1C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    v2[6] = v40;
    LOBYTE(v40) = 2;
    v20 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v21 = v33;
    v22 = v34;
    sub_1BB8740D4();
    v30[1] = v20;
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    v23(OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, v21, v22);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v43 = 3;
    sub_1BA993B04(&qword_1ED3AB090, &qword_1ED3AA680, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF40]);
    v35 = 0;
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources) = v40;
    v43 = 6;
    sub_1BA993A04();
    sub_1BB8740D4();
    *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster) = v40;
    v43 = 5;
    sub_1BA993A48();
    sub_1BB874068();
    v24 = OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config;
    v25 = v41;
    *(_OWORD *)OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config = v40;
    *(_OWORD *)(v24 + 16) = v25;
    *(_OWORD *)(v24 + 32) = v42;
    LOBYTE(v40) = 4;
    MEMORY[0x10] = sub_1BB874098();
    MEMORY[0x18] = v26;
    LOBYTE(v40) = 7;
    v27 = v31;
    v28 = v34;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v36);
    v23(OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl, v27, v28);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v2;
}

uint64_t SportsBoxScoreDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;

  v2 = sub_1BB86E008();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA99395C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFF4170(0, &qword_1EF2B8C40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFF412C();
  v14 = v10;
  v15 = v36;
  sub_1BB8746C8();
  LOBYTE(v37) = 0;
  v16 = v35;
  sub_1BB87417C();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = v11;
  v30 = 0;
  v18 = v32;
  v35 = v6;
  v31 = v13;
  *(_QWORD *)&v37 = *(_QWORD *)(v15 + 48);
  v19 = qword_1ED3A3888;
  swift_unknownObjectRetain_n();
  if (v19 != -1)
    swift_once();
  v20 = v34;
  v21 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED3A3868);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v18, v21, v20);
  MEMORY[0x1E0C80A78](v22);
  *(&v29 - 2) = sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF9B0);
  swift_getKeyPath();
  sub_1BB86ED10();
  swift_unknownObjectRelease();
  LOBYTE(v37) = 1;
  sub_1BA4A2870((unint64_t *)&unk_1ED3A3B90, (uint64_t (*)(uint64_t))sub_1BA99395C, MEMORY[0x1E0DB5098]);
  v24 = v30;
  v23 = v31;
  sub_1BB8741AC();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
  if (v24)
  {
    v26 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
  }
  else
  {
    v25 = v36;
    LOBYTE(v37) = 2;
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
    *(_QWORD *)&v37 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources);
    v40 = 3;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB070, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA993B04((unint64_t *)&qword_1ED3AB080, (unint64_t *)&unk_1ED3AA670, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v37 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
    v40 = 6;
    sub_1BA993C00();
    sub_1BB8741AC();
    v27 = v29;
    v28 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 16);
    v37 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config);
    v38 = v28;
    v39 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 32);
    v40 = 5;
    sub_1BA993C44();
    sub_1BB87414C();
    LOBYTE(v37) = 4;
    sub_1BB87417C();
    LOBYTE(v37) = 7;
    sub_1BB8741AC();
    v26 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
  }
  return v26(v23, v14);
}

uint64_t sub_1BAFF3074(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFF30B4
                                                            + 4 * asc_1BB8E0630[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BAFF30B4()
{
  return 0x746E657665;
}

uint64_t sub_1BAFF30C8()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BAFF30E0()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BAFF3104()
{
  return 0x696669746E656469;
}

uint64_t sub_1BAFF3120()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BAFF3134()
{
  return 0x726574736F72;
}

unint64_t sub_1BAFF3148()
{
  return 0xD000000000000012;
}

uint64_t sub_1BAFF3164(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFF31A4 + 4 * byte_1BB8E0638[a1]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BAFF31A4()
{
  return 0x746E657665;
}

uint64_t sub_1BAFF31B8()
{
  return 0x6C72556465626D65;
}

uint64_t sub_1BAFF31D0()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BAFF31F4()
{
  return 0x696669746E656469;
}

uint64_t sub_1BAFF3210()
{
  return 0x6769666E6F63;
}

uint64_t sub_1BAFF3224()
{
  return 0x726574736F72;
}

unint64_t sub_1BAFF3238()
{
  return 0xD000000000000012;
}

uint64_t sub_1BAFF3254(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7ED6DC(*a1, *a2);
}

uint64_t sub_1BAFF3260()
{
  unsigned __int8 *v0;

  return sub_1BAB07380(0, *v0);
}

uint64_t sub_1BAFF326C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1BA9D0FB8(a1, *v1);
}

uint64_t sub_1BAFF3274(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1BAB07380(a1, *v1);
}

uint64_t sub_1BAFF327C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAFF449C();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFF32A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAFF3074(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAFF32D0()
{
  unsigned __int8 *v0;

  return sub_1BAFF3164(*v0);
}

uint64_t sub_1BAFF32D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAFF449C();
  *a1 = result;
  return result;
}

uint64_t sub_1BAFF32FC()
{
  sub_1BAFF412C();
  return sub_1BB874710();
}

uint64_t sub_1BAFF3324()
{
  sub_1BAFF412C();
  return sub_1BB87471C();
}

uint64_t SportsBoxScoreDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl;
  v2 = sub_1BB86C67C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA993900(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config), *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsBoxScoreDataVisualization.__deallocating_deinit()
{
  SportsBoxScoreDataVisualization.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_1BAFF3428@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = SportsBoxScoreDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAFF347C(_QWORD *a1)
{
  return SportsBoxScoreDataVisualization.encode(to:)(a1);
}

uint64_t static SportsBoxScoreDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

_QWORD *sub_1BAFF34CC(uint64_t a1)
{
  char *v2;
  uint64_t (*v3)(uint64_t);
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  _QWORD *result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  _QWORD *v62;
  char *v63;
  void (*v64)(char *, uint64_t, char *);
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  __int128 v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  __int128 v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t inited;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  __int128 v93;
  __int128 v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, _QWORD, uint64_t, char *);
  void (*v102)(char *, uint64_t, char *);
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD v118[4];
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  _UNKNOWN **v123;
  _OWORD v124[2];
  uint64_t v125;

  v2 = (char *)sub_1BB86C67C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v4 = (_QWORD *)*((_QWORD *)v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v92 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v91 = (_QWORD **)((char *)&v87 - v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v3, v6);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v109 = (char *)&v87 - v11;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v87 - v14;
  if (!a1)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v100 = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v16);
  v18 = v17;
  sub_1BA8C88C8(0);
  v110 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v107 = v18;
  v105 = v23 + 3 * v21;
  v104 = v22 | 7;
  v24 = swift_allocObject();
  v103 = xmmword_1BB87FC80;
  *(_OWORD *)(v24 + 16) = xmmword_1BB87FC80;
  v88 = v24;
  v106 = v23;
  v25 = (_QWORD *)(v24 + v23);
  v27 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 40);
  v28 = type metadata accessor for FormatInspectionItem(0);
  v29 = *(int *)(v28 + 24);
  v90 = a1;
  v30 = (char *)v25 + v29;
  *(_QWORD *)v30 = v27;
  *((_QWORD *)v30 + 1) = v26;
  v31 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v115 = v31;
  v114 = v32;
  v32(v30, 0, 1, v31);
  *v25 = 0xD000000000000010;
  v25[1] = 0x80000001BB9658C0;
  v25[2] = 0;
  v25[3] = 0;
  v33 = (char *)v25 + *(int *)(v28 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v34(v25, 0, 1, v28);
  v87 = v25;
  v111 = v21;
  v102 = (void (*)(char *, uint64_t, char *))v4[2];
  v102(v15, v90 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl, v2);
  v101 = (void (*)(char *, _QWORD, uint64_t, char *))v4[7];
  v101(v15, 0, 1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF770C(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v15, (_QWORD *)((char *)v25 + v21));
  v116 = v28;
  v117 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v34;
  v34((_QWORD *)((char *)v25 + v21), 0, 1, v28);
  v35 = *(_QWORD *)(v90 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_urlDataSources);
  if (v35 >> 62)
    goto LABEL_22;
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v36)
  {
    while (1)
    {
      v120 = MEMORY[0x1E0DEE9D8];
      result = (_QWORD *)sub_1BAC7A388(0, v36 & ~(v36 >> 63), 0);
      if (v36 < 0)
        break;
      v38 = 0;
      v39 = v120;
      v95 = v35 & 0xC000000000000001;
      v108 = 2 * v111;
      v40 = MEMORY[0x1E0DEA968];
      v94 = xmmword_1BB88A7F0;
      v93 = xmmword_1BB88A800;
      v99 = v2;
      v98 = v4;
      v97 = v35;
      v96 = v36;
      while (v36 != v38)
      {
        v113 = v38;
        v112 = v39;
        if (v95)
        {
          v41 = (_QWORD *)MEMORY[0x1BCCE4630](v38, v35);
        }
        else
        {
          v41 = *(_QWORD **)(v35 + 8 * v38 + 32);
          swift_retain();
        }
        v42 = (uint64_t)v109;
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v103;
        v44 = (_QWORD *)(v43 + v106);
        v45 = v41[2];
        v46 = v41[3];
        sub_1BA993F8C(v45, v46);
        sub_1BAAF9A70(0x20746E65746E6F43, 0xEC00000065707954, v45, v46, (char *)v44);
        v47 = v116;
        v117((char *)v44, 0, 1, v116);
        v48 = (char *)v44 + v111;
        v49 = v41[5];
        *(_QWORD *)&v119 = v41[4];
        *((_QWORD *)&v119 + 1) = v49;
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          v50 = &v48[*(int *)(v47 + 24)];
          *(_QWORD *)v50 = v121;
          v51 = v115;
          swift_storeEnumTagMultiPayload();
          v114(v50, 0, 1, v51);
          *(_OWORD *)v48 = v94;
          *((_QWORD *)v48 + 2) = 0;
          *((_QWORD *)v48 + 3) = 0;
          v52 = &v48[*(int *)(v47 + 28)];
          *(_QWORD *)v52 = 0;
          *((_QWORD *)v52 + 1) = 0;
          v52[16] = -1;
        }
        else
        {
          *((_QWORD *)&v122 + 1) = v40;
          v123 = (_UNKNOWN **)MEMORY[0x1E0DEA9D8];
          v121 = v119;
          sub_1BA4CECCC(&v121, (uint64_t)v118);
          v53 = __swift_project_boxed_opaque_existential_1(v118, v118[3]);
          v54 = *v53;
          v55 = v53[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v56 = (uint64_t)v91;
          *v91 = v54;
          *(_QWORD *)(v56 + 8) = v55;
          v57 = v115;
          swift_storeEnumTagMultiPayload();
          v114((char *)v56, 0, 1, v57);
          *(_OWORD *)v48 = v94;
          *((_QWORD *)v48 + 2) = 0;
          *((_QWORD *)v48 + 3) = 0;
          sub_1BA993F9C(v56, (uint64_t)&v48[*(int *)(v47 + 24)]);
          v58 = &v48[*(int *)(v47 + 28)];
          *(_QWORD *)v58 = 0;
          *((_QWORD *)v58 + 1) = 0;
          v58[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
        }
        v59 = v100;
        swift_bridgeObjectRelease();
        v117(v48, 0, 1, v47);
        v60 = (char *)v44 + v108;
        v61 = v99;
        v4 = v102;
        v102((char *)v42, (uint64_t)v41 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v99);
        v101((char *)v42, 0, 1, v61);
        sub_1BA7E8428(v42, v59);
        v62 = v98;
        if (((unsigned int (*)(uint64_t, uint64_t, char *))v98[6])(v59, 1, v61) == 1)
        {
          sub_1BA7F0A80(v42);
          v114(&v60[*(int *)(v47 + 24)], 1, 1, v115);
          *(_OWORD *)v60 = v93;
          *((_QWORD *)v60 + 2) = 0;
          *((_QWORD *)v60 + 3) = 0;
          v63 = &v60[*(int *)(v47 + 28)];
          *(_QWORD *)v63 = 0;
          *((_QWORD *)v63 + 1) = 0;
          v63[16] = -1;
        }
        else
        {
          v64 = (void (*)(char *, uint64_t, char *))v4;
          v65 = v92;
          v64(v92, v59, v61);
          sub_1BA7F0A80(v42);
          v66 = v59;
          v67 = &v60[*(int *)(v116 + 24)];
          v47 = v116;
          ((void (*)(char *, char *, char *))v62[4])(v67, v65, v61);
          v4 = (_QWORD *)v115;
          swift_storeEnumTagMultiPayload();
          v114(v67, 0, 1, (uint64_t)v4);
          *(_OWORD *)v60 = v93;
          *((_QWORD *)v60 + 2) = 0;
          *((_QWORD *)v60 + 3) = 0;
          v68 = &v60[*(int *)(v47 + 28)];
          *(_QWORD *)v68 = 0;
          *((_QWORD *)v68 + 1) = 0;
          v68[16] = -1;
          ((void (*)(uint64_t, char *))v62[1])(v66, v61);
        }
        v117(v60, 0, 1, v47);
        sub_1BAF89090(0, 0xE000000000000000, 0, 0, v43, v124);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((_QWORD *)&v122 + 1) = &type metadata for FormatInspectionGroup;
        v123 = &off_1E72D2F60;
        v69 = swift_allocObject();
        *(_QWORD *)&v121 = v69;
        swift_release();
        *(_QWORD *)(v69 + 48) = v125;
        v70 = v124[1];
        *(_OWORD *)(v69 + 16) = v124[0];
        *(_OWORD *)(v69 + 32) = v70;
        v120 = v112;
        v72 = *(_QWORD *)(v112 + 16);
        v71 = *(_QWORD *)(v112 + 24);
        if (v72 >= v71 >> 1)
          sub_1BAC7A388(v71 > 1, v72 + 1, 1);
        v38 = v113 + 1;
        v73 = *((_QWORD *)&v122 + 1);
        v74 = (uint64_t)v123;
        v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v121, *((uint64_t *)&v122 + 1));
        v76 = MEMORY[0x1E0C80A78](v75);
        v2 = (char *)&v87 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v78 + 16))(v2, v76);
        sub_1BA6AC628(v72, (uint64_t)v2, &v120, v73, v74);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
        v39 = v120;
        v36 = v96;
        v35 = v97;
        v40 = MEMORY[0x1E0DEA968];
        if (v96 == v38)
        {
          swift_bridgeObjectRelease();
          v79 = v108;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v36 = sub_1BB873F30();
      if (!v36)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v79 = 2 * v111;
    v39 = MEMORY[0x1E0DEE9D8];
LABEL_24:
    v80 = (_QWORD *)inited;
    v81 = (_QWORD *)((char *)v87 + v79);
    v82 = sub_1BA9747FC(v39);
    swift_bridgeObjectRelease();
    v83 = sub_1BB6DF010(v82);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x756F532061746144, 0xEC00000073656372, (uint64_t)v83, 0, 0, (char *)v81);
    v117((char *)v81, 0, 1, v116);
    sub_1BAF89090(0x726F635320786F42, 0xE900000000000065, 0, 0, v88, &v121);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v80[7] = &type metadata for FormatInspectionGroup;
    v80[8] = &off_1E72D2F60;
    v84 = swift_allocObject();
    v80[4] = v84;
    *(_QWORD *)(v84 + 48) = v123;
    v85 = v122;
    *(_OWORD *)(v84 + 16) = v121;
    *(_OWORD *)(v84 + 32) = v85;
    v86 = sub_1BB6DF010((uint64_t)v80);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    swift_release();
    return v86;
  }
  return result;
}

unint64_t sub_1BAFF412C()
{
  unint64_t result;

  result = qword_1EF2B8C30;
  if (!qword_1EF2B8C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E08BC, &type metadata for SportsBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8C30);
  }
  return result;
}

void sub_1BAFF4170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAFF412C();
    v7 = a3(a1, &type metadata for SportsBoxScoreDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAFF41D0()
{
  return 8;
}

_QWORD *sub_1BAFF41DC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BAFF41E8()
{
  return type metadata accessor for SportsBoxScoreDataVisualization();
}

uint64_t type metadata accessor for SportsBoxScoreDataVisualization()
{
  uint64_t result;

  result = qword_1ED3A9170;
  if (!qword_1ED3A9170)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAFF422C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SportsBoxScoreDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsBoxScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsBoxScoreDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for SportsBoxScoreDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BAFF4344 + 4 * byte_1BB8E0645[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BAFF4378 + 4 * byte_1BB8E0640[v4]))();
}

uint64_t sub_1BAFF4378(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF4380(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFF4388);
  return result;
}

uint64_t sub_1BAFF4394(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFF439CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BAFF43A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF43A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsBoxScoreDataVisualization.CodingKeys()
{
  return &type metadata for SportsBoxScoreDataVisualization.CodingKeys;
}

unint64_t sub_1BAFF43C8()
{
  unint64_t result;

  result = qword_1EF2B8C48;
  if (!qword_1EF2B8C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0894, &type metadata for SportsBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8C48);
  }
  return result;
}

unint64_t sub_1BAFF4410()
{
  unint64_t result;

  result = qword_1EF2B8C50;
  if (!qword_1EF2B8C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E07CC, &type metadata for SportsBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8C50);
  }
  return result;
}

unint64_t sub_1BAFF4458()
{
  unint64_t result;

  result = qword_1EF2B8C58;
  if (!qword_1EF2B8C58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E07F4, &type metadata for SportsBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8C58);
  }
  return result;
}

uint64_t sub_1BAFF449C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1BAFF44E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAFF4518()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[128];
  _QWORD v7[16];

  sub_1BA4B07F0(0, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v6[-v2];
  sub_1BA5193C4((uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  swift_retain();
  sub_1BA6A0C50(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  sub_1BAF92284((uint64_t)v6, (uint64_t)v3);
  v4 = (uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight;
  swift_beginAccess();
  sub_1BAFF5784((uint64_t)v3, v4);
  swift_endAccess();
  objc_msgSend(v0, sel_setNeedsLayout);
  return sub_1BAFF57E0((uint64_t)v3);
}

char *sub_1BAFF4644(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  objc_super v18;
  _OWORD v19[8];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile];
  sub_1BA8EBB18(v19);
  sub_1BA5193C4((uint64_t)v19, v5, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  v6 = &v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel;
  sub_1BB86F8A4();
  v8 = v2;
  *(_QWORD *)&v2[v7] = sub_1BB86F880();
  v9 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(), sel_monospacedSystemFontOfSize_weight_, 10.0, *MEMORY[0x1E0DC1448]);
  v10 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor;
  *(_QWORD *)&v8[v10] = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v11 = &v8[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  v12 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_editor] = a1;
  swift_retain();

  v18.receiver = v8;
  v18.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = *(void **)&v13[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel];
  v15 = v13;
  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setHidden_, 1);
  objc_msgSend(v14, sel_setLineBreakMode_, 4);
  objc_msgSend(v15, sel_addSubview_, v14);
  v16 = (void *)sub_1BB86F898();
  swift_allocObject();
  swift_unknownObjectWeakInit();

  swift_release();
  swift_release();
  return v15;
}

void sub_1BAFF487C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  sub_1BA4B07F0(0, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  v5 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v9)
  {
    v10 = (char *)v9;
    v11 = v9 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight;
    swift_beginAccess();
    sub_1BAFF5860(v11, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {

      sub_1BAFF57E0((uint64_t)v4);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatDebuggerSourceHighlight);
      v12 = &v10[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
      swift_beginAccess();
      v13 = *(void (**)(char *, uint64_t))v12;
      if (*(_QWORD *)v12)
      {
        swift_endAccess();
        v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel];
        swift_retain();
        v13(v8, v14);
        sub_1BA49EBE0((uint64_t)v13);
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatDebuggerSourceHighlight);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatDebuggerSourceHighlight);
        swift_endAccess();
      }

    }
  }
}

void sub_1BAFF4A78()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  id v13;
  void *v14;
  void *v15;
  uint64_t inited;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  objc_super v63;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FormatDebuggerContext();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (void **)((char *)&v59 - v8);
  v63.receiver = v1;
  v63.super_class = ObjectType;
  objc_msgSendSuper2(&v63, sel_layoutSubviews, v7);
  objc_msgSend(v1, sel_setHidden_, 0);
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  swift_beginAccess();
  sub_1BAFF5860(v10, (uint64_t)v9);
  v11 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    return;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA5193C4((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
      sub_1BAFF5388();
      v15 = v14;
      objc_msgSend(v13, sel_appendAttributedString_, v14);

      sub_1BACCA0F4();
      v61 = 32;
      v62 = 0xE100000000000000;
      sub_1BB872AFC((_QWORD *)0x20);
      swift_bridgeObjectRelease();
      v60 = v61;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
      v17 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
      v18 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor];
      v19 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      *(_QWORD *)(inited + 40) = v18;
      v20 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 64) = v19;
      *(_QWORD *)(inited + 72) = v20;
      v21 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont];
      *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
      *(_QWORD *)(inited + 80) = v21;
      swift_bridgeObjectRetain();
      v22 = v17;
      v23 = v18;
      v24 = v20;
      v25 = v21;
      sub_1BA76E82C(inited);
      v26 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v27 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BA76F768();
      v28 = (void *)sub_1BB872760();
      swift_bridgeObjectRelease();
      v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);
      swift_bridgeObjectRelease();

      objc_msgSend(v13, sel_appendAttributedString_, v29);
      v30 = (void *)objc_opt_self();
      v31 = v13;
      v32 = objc_msgSend(v30, sel_systemBlueColor);
      sub_1BAFF51AC(v13, v32);

      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
      return;
    }
    v56 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    v57 = objc_msgSend(v56, sel_colorWithAlphaComponent_, 0.3);
  }
  else
  {
    v33 = *v9;
    if (*v9)
    {
      v34 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      v35 = v33;
      v36 = objc_msgSend(v34, sel_init);
      sub_1BAFF5388();
      v38 = v37;
      objc_msgSend(v36, sel_appendAttributedString_, v37);

      sub_1BAFF5A10(v33);
      v61 = 32;
      v62 = 0xE100000000000000;
      sub_1BB872AFC((_QWORD *)0x20);
      swift_bridgeObjectRelease();
      v60 = v61;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v39 = swift_initStackObject();
      *(_OWORD *)(v39 + 16) = xmmword_1BB87A390;
      v40 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(v39 + 32) = *MEMORY[0x1E0DC1140];
      v41 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor];
      v42 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      *(_QWORD *)(v39 + 40) = v41;
      v43 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(v39 + 64) = v42;
      *(_QWORD *)(v39 + 72) = v43;
      v44 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont];
      *(_QWORD *)(v39 + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
      *(_QWORD *)(v39 + 80) = v44;
      swift_bridgeObjectRetain();
      v45 = v40;
      v46 = v41;
      v47 = v43;
      v48 = v44;
      sub_1BA76E82C(v39);
      v49 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v50 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BA76F768();
      v51 = (void *)sub_1BB872760();
      swift_bridgeObjectRelease();
      v52 = objc_msgSend(v49, sel_initWithString_attributes_, v50, v51);
      swift_bridgeObjectRelease();

      objc_msgSend(v36, sel_appendAttributedString_, v52);
      v53 = (void *)objc_opt_self();
      v54 = v36;
      v55 = objc_msgSend(v53, sel_systemRedColor);
      sub_1BAFF51AC(v36, v55);

      return;
    }
    v56 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    v57 = objc_msgSend(v56, sel_colorWithAlphaComponent_, 0.3);
  }
  v58 = v57;
  objc_msgSend(v1, sel_setBackgroundColor_, v58);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel], sel_setHidden_, 1);
}

void sub_1BAFF51AC(void *a1, id a2)
{
  char *v2;
  id v5;
  void *v6;
  double v7;
  double Width;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v5 = objc_msgSend(a2, sel_colorWithAlphaComponent_, 0.3);
  objc_msgSend(v2, sel_setBackgroundColor_, v5);

  v6 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel];
  objc_msgSend(v6, sel_setHidden_, 1);
  if (a1)
  {
    v13 = a1;
    objc_msgSend(v6, sel_setHidden_, 0);
    objc_msgSend(v6, sel_setBackgroundColor_, a2);
    objc_msgSend(v6, sel_setAttributedText_, v13);
    objc_msgSend(v6, sel_sizeToFit);
    objc_msgSend(v2, sel_bounds);
    v7 = CGRectGetWidth(v14) * 0.5;
    objc_msgSend(v2, sel_bounds);
    Width = CGRectGetWidth(v15);
    objc_msgSend(v6, sel_frame);
    v9 = Width - CGRectGetWidth(v16);
    if (v7 <= v9)
      v7 = v9;
    objc_msgSend(v6, sel_frame);
    v10 = CGRectGetWidth(v17);
    objc_msgSend(v2, sel_bounds);
    v11 = CGRectGetWidth(v18) * 0.5;
    if (v11 >= v10)
      v11 = v10;
    v12 = v11 + 8.0;
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v6, sel_setFrame_, v7 + -8.0, 0.0, v12, CGRectGetHeight(v19));

  }
}

void sub_1BAFF5388()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v12[3];
  uint64_t v13;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v1);

  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont);
    v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v3);
    v5 = objc_msgSend(v2, sel_imageWithConfiguration_, v4);

    v6 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v5);
    v7 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v6);
    v8 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor);
    v13 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    v12[0] = v8;
    v9 = v8;
    v10 = (void *)sub_1BB8734C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v13 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    v12[0] = v3;
    v11 = v3;
    sub_1BB8734C8();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BAFF5688()
{
  return type metadata accessor for DebugFormatDebuggerSourceHighlightView();
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceHighlightView()
{
  uint64_t result;

  result = qword_1EF2B8CC0;
  if (!qword_1EF2B8CC0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAFF56CC()
{
  unint64_t v0;

  sub_1BA4B07F0(319, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BAFF5784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAFF57E0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAFF5834()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BAFF5858()
{
  uint64_t v0;

  sub_1BAFF487C(v0);
}

uint64_t sub_1BAFF5860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1EF2B8CD0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceHighlight, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAFF58BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD v9[8];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile];
  sub_1BA8EBB18(v9);
  sub_1BA5193C4((uint64_t)v9, v2, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
  v3 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageLabel;
  sub_1BB86F8A4();
  *(_QWORD *)&v1[v4] = sub_1BB86F880();
  v5 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageFont;
  *(_QWORD *)&v1[v5] = objc_msgSend((id)objc_opt_self(), sel_monospacedSystemFontOfSize_weight_, 10.0, *MEMORY[0x1E0DC1448]);
  v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_messageTextColor;
  *(_QWORD *)&v1[v6] = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_highlight];
  v8 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BAFF5A10(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  __int128 v11[2];
  uint64_t v12;
  void *v13;

  v13 = a1;
  v2 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BE000);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v11, (uint64_t)v8);
    v3 = v9;
    v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    v8[0] = a1;
    v6 = a1;
    return sub_1BB872A00();
  }
  return v5;
}

uint64_t FeedActivityIndicatorCoverStyler.indicatorStyle.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

id FeedActivityIndicatorCoverStyler.indicatorColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id FeedActivityIndicatorCoverStyler.backgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id sub_1BAFF5B24()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id sub_1BAFF5B2C()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void sub_1BAFF5B34()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_labelColor);
  if (qword_1ED3D5150 != -1)
    swift_once();
  if (byte_1ED3D5168 == 1)
  {
    v2 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
    v3 = objc_msgSend(v0, sel_systemBackgroundColor);
    v4 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v2, v3);

  }
  else
  {
    v4 = objc_msgSend(v0, sel_systemBackgroundColor);
  }
  qword_1ED3A0DD8 = 100;
  unk_1ED3A0DE0 = v1;
  qword_1ED3A0DE8 = (uint64_t)v4;
}

id static FeedActivityIndicatorCoverStyler.feedBackground.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v6;

  if (qword_1ED3A28F8 != -1)
    swift_once();
  v2 = (void *)unk_1ED3A0DE0;
  v3 = qword_1ED3A0DE8;
  v6 = (id)qword_1ED3A0DE8;
  *a1 = qword_1ED3A0DD8;
  a1[1] = v2;
  a1[2] = v3;
  v4 = v2;
  return v6;
}

id sub_1BAFF5CBC()
{
  id v0;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  result = _sSo7UIColorC8NewsFeedE09secondaryC10BackgroundABvgZ_0();
  qword_1EF2B8CD8 = 100;
  unk_1EF2B8CE0 = v0;
  qword_1EF2B8CE8 = (uint64_t)result;
  return result;
}

id static FeedActivityIndicatorCoverStyler.secondaryFeedBackground.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v6;

  if (qword_1EF2A7050 != -1)
    swift_once();
  v2 = (void *)unk_1EF2B8CE0;
  v3 = qword_1EF2B8CE8;
  v6 = (id)qword_1EF2B8CE8;
  *a1 = qword_1EF2B8CD8;
  a1[1] = v2;
  a1[2] = v3;
  v4 = v2;
  return v6;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedActivityIndicatorCoverStyler(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

_QWORD *assignWithCopy for FeedActivityIndicatorCoverStyler(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for FeedActivityIndicatorCoverStyler(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for FeedActivityIndicatorCoverStyler()
{
  return &type metadata for FeedActivityIndicatorCoverStyler;
}

void FormatTranslate.init(x:y:)()
{
  type metadata accessor for FormatRange();
}

void sub_1BAFF5EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
  type metadata accessor for FormatTranslate();
}

uint64_t sub_1BAFF5EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2 + *(int *)(a1 + 52), v1, v3);
}

void type metadata accessor for FormatTranslate()
{
  JUMPOUT(0x1BCCE5A70);
}

void FormatTranslate.x.getter()
{
  type metadata accessor for FormatRange();
}

uint64_t sub_1BAFF5F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void FormatTranslate.y.getter()
{
  type metadata accessor for FormatRange();
}

uint64_t sub_1BAFF5FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t static FormatTranslate.== infix(_:_:)()
{
  if ((static FormatRange.== infix(_:_:)() & 1) != 0)
    type metadata accessor for FormatTranslate();
  return 0;
}

uint64_t sub_1BAFF6064(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTranslate<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFF6090(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTranslate<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTranslate<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTranslate<A>, a2);
  a1[3] = result;
  return result;
}

void sub_1BAFF60E8()
{
  FormatTranslate.init(from:)();
}

void sub_1BAFF6108(uint64_t a1, _QWORD *a2)
{
  FormatTranslate.encode(to:)(a1, a2);
}

uint64_t sub_1BAFF611C()
{
  return static FormatTranslate.== infix(_:_:)();
}

void sub_1BAFF612C()
{
  type metadata accessor for FormatRange();
}

uint64_t *sub_1BAFF61A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & ~v8) + v7;
  v12 = v11 + v8;
  v13 = ((v11 + v8) & ~v8) + v11;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v13 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v17((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
    v18 = ((unint64_t)a2 + v12) & v9;
    v17((uint64_t *)(((unint64_t)v4 + v12) & v9), (uint64_t *)v18, v5);
    v17((uint64_t *)((v10 + (((unint64_t)v4 + v12) & v9)) & v9), (uint64_t *)((v10 + v18) & v9), v5);
  }
  return v4;
}

uint64_t sub_1BAFF62A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = v5 + v6 + a1;
  v11(v8 & ~v6, v3);
  v9 = (v8 + (v7 & ~v6)) & ~v6;
  v11(v9, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)((v7 + v9) & ~v6, v3);
}

uint64_t sub_1BAFF6338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_1BAFF63F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_1BAFF64B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_1BAFF656C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_1BAFF6628(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = ((*(_QWORD *)(v4 + 64) + v7) & ~v7) + *(_QWORD *)(v4 + 64);
  v9 = ((v8 + v7) & ~v7) + v8;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v6 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_18;
LABEL_11:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return v5 + v13 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BAFF66F4 + 4 * byte_1BB8E09E8[(v9 - 1)]))();
}

void sub_1BAFF6744(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((*(_QWORD *)(v6 + 64) + v8) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = ((v9 + v8) & ~v8) + v9;
  v11 = a3 >= v7;
  v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      v15 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v15))
      {
        v13 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  else
  {
    v13 = 0u;
  }
  if (v7 < a2)
  {
    v14 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

ValueMetadata *type metadata accessor for A18_V2()
{
  return &type metadata for A18_V2;
}

uint64_t sub_1BAFF6920(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B8EA8, (uint64_t (*)(void))sub_1BAFF8B84, (uint64_t)&type metadata for A18_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFF8B84();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAFF6AD4()
{
  sub_1BAFF8B84();
  return sub_1BB874710();
}

uint64_t sub_1BAFF6AFC()
{
  sub_1BAFF8B84();
  return sub_1BB87471C();
}

double sub_1BAFF6B24@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAFF8970(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAFF6B68(_QWORD *a1)
{
  return sub_1BAFF6920(a1);
}

uint64_t sub_1BAFF6B7C()
{
  sub_1BAFF8684();
  return sub_1BB86D96C();
}

uint64_t sub_1BAFF6BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  ValueMetadata *v66;
  unint64_t v67;
  uint64_t v68;

  v53 = a2;
  v46 = a3;
  v47 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v52 = type metadata accessor for GroupLayoutBindingContext();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v57 = a1;
  sub_1BA4C2DD8(a1, v50, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v49 = sub_1BB86C8C8();
  v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v47);
  v66 = &type metadata for A18_V2;
  v20 = sub_1BA8EE050();
  v67 = v20;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v22;
  v62 = 95;
  v63 = 0xE100000000000000;
  v60 = 45;
  v61 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v48;
  *v26 = v49;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v64, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  sub_1BA7C2538(v16, v17);
  v66 = &type metadata for A18_V2;
  v67 = v20;
  v30 = v56;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  sub_1BA4C2DD8(v53, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v31 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v31 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v31 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v68;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269E18, 0, 0, v31, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    v41 = v39;
    swift_release();
    v42 = type metadata accessor for A18_V2.Bound();
    v43 = v46;
    v46[3] = v42;
    v43[4] = sub_1BA4A2870(qword_1EF2B8D80, (uint64_t (*)(uint64_t))type metadata accessor for A18_V2.Bound, (uint64_t)&unk_1BB8E0BA8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v64, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v42 + 28)) = v41;
  }
  return result;
}

uint64_t sub_1BAFF70FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _QWORD v29[4];
  uint64_t v30;
  char v31[105];
  __int128 v32[2];
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];

  v2 = v1;
  v27 = a1;
  v26 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A18_V2.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v33);
  sub_1BA4C010C(v9 + 56, (uint64_t)v32);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v33, inited + 16);
  sub_1BA4CECCC(v32, inited + 56);
  *(double *)(inited + 96) = v11;
  v31[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v31, v37);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v29[2] = v2;
  v29[3] = v37;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v29, v13, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  v15 = *MEMORY[0x1E0DB5D88];
  v16 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v26);
  v28 = v14;
  sub_1BAFF8728(0, &qword_1EF2B8E28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v26 = sub_1BB86DB34();
  v17 = sub_1BB86DB40();
  v25 = v33;
  v18 = v34;
  v19 = v35;
  *(_QWORD *)&v33 = v14;
  *(_QWORD *)&v32[0] = v36;
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v20 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = v20;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v21 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v22 = v27;
  *v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((_QWORD *)v22 + 3) = v18;
  *((_QWORD *)v22 + 4) = v19;
  v23 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v22 + 5) = v21;
  *((_QWORD *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1BAFF74D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2B8E40, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 18;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BAFF8728(0, &qword_1EF2B8E48, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAFF86E8(&qword_1EF2B8E50, &qword_1EF2B8E48, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BAFF7630(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B8E40, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v20 - v6);
  v23 = a1;
  v8 = sub_1BB86D438();
  v9 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DB5A38], v8);
  *v7 = v9;
  v11 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E0DB6318], v4);
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFF8728(0, &qword_1EF2B8E58, MEMORY[0x1E0DB5A10]);
  sub_1BAFF86E8(&qword_1EF2B8E60, &qword_1EF2B8E58, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v13(v7, v4);
  v23 = a1;
  v11(v7, *MEMORY[0x1E0DB63C0], v4);
  sub_1BAFF87A4();
  sub_1BA4CDF6C(0, &qword_1EF2B8E70, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0DB5C80], v15);
  v22 = v21;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v7, v4);
}

uint64_t sub_1BAFF7888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2B8E40, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 9;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFF8728(0, &qword_1EF2B8E58, MEMORY[0x1E0DB5A10]);
  sub_1BAFF86E8(&qword_1EF2B8E60, &qword_1EF2B8E58, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 9;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAFF7A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B8E40, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFF8728(0, &qword_1EF2B8E58, MEMORY[0x1E0DB5A10]);
  sub_1BAFF86E8(&qword_1EF2B8E60, &qword_1EF2B8E58, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAFF7E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B8E40, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAFF8728(0, &qword_1EF2B8E58, MEMORY[0x1E0DB5A10]);
  sub_1BAFF86E8(&qword_1EF2B8E60, &qword_1EF2B8E58, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAFF8274@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V2.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAFF8354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAFF6BE4(a1, a2, a3);
}

uint64_t sub_1BAFF8368()
{
  return sub_1BB690B18();
}

unint64_t sub_1BAFF8378(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAFF83A4();
  result = sub_1BAFF83E8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAFF83A4()
{
  unint64_t result;

  result = qword_1EF2B8D70;
  if (!qword_1EF2B8D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0AF4, &type metadata for A18_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2B8D70);
  }
  return result;
}

unint64_t sub_1BAFF83E8()
{
  unint64_t result;

  result = qword_1EF2B8D78;
  if (!qword_1EF2B8D78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0B1C, &type metadata for A18_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2B8D78);
  }
  return result;
}

uint64_t type metadata accessor for A18_V2.Bound()
{
  uint64_t result;

  result = qword_1EF2B8DE0;
  if (!qword_1EF2B8DE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAFF8468()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFF8474(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAFF84F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAFF84FC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAFF8570()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAFF85FC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B8E20, (uint64_t (*)(uint64_t))type metadata accessor for A18_V2.Bound, (uint64_t)&unk_1BB8E0B80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFF8638(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFF74D8(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BAFF8640()
{
  unint64_t result;

  result = qword_1EF2B8E30;
  if (!qword_1EF2B8E30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0CD8, &type metadata for A18_V2.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B8E30);
  }
  return result;
}

unint64_t sub_1BAFF8684()
{
  unint64_t result;

  result = qword_1EF2B8E38;
  if (!qword_1EF2B8E38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0CA8, &type metadata for A18_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B8E38);
  }
  return result;
}

uint64_t sub_1BAFF86C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAFF8274(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAFF86D0()
{
  return swift_deallocObject();
}

uint64_t sub_1BAFF86E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFF7630(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFF86E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAFF8728(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAFF8728(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V2.Layout;
    v8[1] = &type metadata for A18_V2.Layout.Attributes;
    v8[2] = sub_1BAFF8640();
    v8[3] = sub_1BAFF8684();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BAFF87A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8E68)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B8E70, (uint64_t (*)(void))sub_1BAFF8640, (uint64_t)&type metadata for A18_V2.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8E68);
  }
}

uint64_t sub_1BAFF8818(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFF7888(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFF8820(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFF7A70(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAFF8828(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAFF7E6C(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V2.Layout.Attributes()
{
  return &type metadata for A18_V2.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V2.Layout()
{
  return &type metadata for A18_V2.Layout;
}

unint64_t sub_1BAFF8854()
{
  unint64_t result;

  result = qword_1EF2B8E78;
  if (!qword_1EF2B8E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0C48, &type metadata for A18_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B8E78);
  }
  return result;
}

unint64_t sub_1BAFF889C()
{
  unint64_t result;

  result = qword_1EF2B8E80;
  if (!qword_1EF2B8E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0C20, &type metadata for A18_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B8E80);
  }
  return result;
}

unint64_t sub_1BAFF88E4()
{
  unint64_t result;

  result = qword_1EF2B8E88;
  if (!qword_1EF2B8E88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0BF8, &type metadata for A18_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B8E88);
  }
  return result;
}

unint64_t sub_1BAFF892C()
{
  unint64_t result;

  result = qword_1EF2B8E90;
  if (!qword_1EF2B8E90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0C70, &type metadata for A18_V2.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B8E90);
  }
  return result;
}

uint64_t sub_1BAFF8970@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B8E98, (uint64_t (*)(void))sub_1BAFF8B84, (uint64_t)&type metadata for A18_V2.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFF8B84();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAFF8B84()
{
  unint64_t result;

  result = qword_1EF2B8EA0;
  if (!qword_1EF2B8EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0DCC, &type metadata for A18_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V2.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFF8C14 + 4 * byte_1BB8E0AE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFF8C48 + 4 * byte_1BB8E0AE0[v4]))();
}

uint64_t sub_1BAFF8C48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF8C50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFF8C58);
  return result;
}

uint64_t sub_1BAFF8C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFF8C6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFF8C70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF8C78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V2.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V2.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAFF8C98()
{
  unint64_t result;

  result = qword_1EF2B8EB0;
  if (!qword_1EF2B8EB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0DA4, &type metadata for A18_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EB0);
  }
  return result;
}

unint64_t sub_1BAFF8CE0()
{
  unint64_t result;

  result = qword_1EF2B8EB8;
  if (!qword_1EF2B8EB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0D14, &type metadata for A18_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EB8);
  }
  return result;
}

unint64_t sub_1BAFF8D28()
{
  unint64_t result;

  result = qword_1EF2B8EC0;
  if (!qword_1EF2B8EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0D3C, &type metadata for A18_V2.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EC0);
  }
  return result;
}

void static FormatTextNodeAlternativeLogic.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFF8DAC()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  uint64_t v7;
  uint64_t v8;

  if (v0 >> 62)
    return 0;
  v2 = v1[4];
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v1[2] == *(_QWORD *)(v0 + 16) && v1[3] == *(_QWORD *)(v0 + 24);
  if ((v4 || (sub_1BB874398() & 1) != 0)
    && (v7 = v3,
        v8 = v2,
        swift_retain(),
        swift_retain(),
        v5 = ((uint64_t (*)(uint64_t *, uint64_t *))static FormatTextNodeAlternativeLogic.== infix(_:_:))(&v8, &v7), swift_release(), swift_release(), (v5 & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1BAFF8FDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeAlternativeLogic.AlternativeLogic.init(from:)(a1, a2);
}

uint64_t sub_1BAFF8FF0(_QWORD *a1)
{
  return FormatTextNodeAlternativeLogic.AlternativeLogic.encode(to:)(a1);
}

uint64_t sub_1BAFF900C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeAlternativeLogic.LogicalOperator.init(from:)(a1, a2);
}

uint64_t sub_1BAFF9020(_QWORD *a1)
{
  return FormatTextNodeAlternativeLogic.LogicalOperator.encode(to:)(a1);
}

uint64_t _s8NewsFeed30FormatTextNodeAlternativeLogicO0D5LinesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_1BA881EAC(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    v5 = FormatOperator.rawValue.getter();
    v7 = v6;
    if (v5 == FormatOperator.rawValue.getter() && v7 == v8)
      v9 = 1;
    else
      v9 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t _s8NewsFeed30FormatTextNodeAlternativeLogicO0fG0V2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v3;
  char v4;
  char v5;
  uint64_t v7;

  v2 = a1[2];
  v3 = *a1 == *a2 && a1[1] == a2[1];
  if (v3 || (v4 = sub_1BB874398(), v5 = 0, (v4 & 1) != 0))
  {
    v7 = v2;
    static FormatTextNodeAlternativeLogic.== infix(_:_:)((uint64_t)&v7);
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed30FormatTextNodeAlternativeLogicO15LogicalOperatorV2eeoiySbAE_AEtFZ_0(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  v1 = a1[1];
  v5 = *a1;
  static FormatTextNodeAlternativeLogic.== infix(_:_:)((uint64_t)&v5);
  if ((v2 & 1) != 0)
  {
    v5 = v1;
    static FormatTextNodeAlternativeLogic.== infix(_:_:)((uint64_t)&v5);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_1BAFF91EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFF9210();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFF9210()
{
  unint64_t result;

  result = qword_1EF2B8EC8;
  if (!qword_1EF2B8EC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.TextLines, &type metadata for FormatTextNodeAlternativeLogic.TextLines);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EC8);
  }
  return result;
}

uint64_t sub_1BAFF9254(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA53A320, (uint64_t (*)(void))sub_1BA4FBDA0, (uint64_t (*)(void))sub_1BAFF9270);
}

unint64_t sub_1BAFF9270()
{
  unint64_t result;

  result = qword_1EF2B8ED0;
  if (!qword_1EF2B8ED0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.TextLines, &type metadata for FormatTextNodeAlternativeLogic.TextLines);
    atomic_store(result, (unint64_t *)&qword_1EF2B8ED0);
  }
  return result;
}

unint64_t sub_1BAFF92B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFF92D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFF92D8()
{
  unint64_t result;

  result = qword_1EF2B8ED8;
  if (!qword_1EF2B8ED8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.AlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic.AlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B8ED8);
  }
  return result;
}

uint64_t sub_1BAFF931C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC4990, (uint64_t (*)(void))sub_1BAEE9B44, (uint64_t (*)(void))sub_1BAFF9338);
}

unint64_t sub_1BAFF9338()
{
  unint64_t result;

  result = qword_1EF2B8EE0;
  if (!qword_1EF2B8EE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.AlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic.AlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EE0);
  }
  return result;
}

unint64_t sub_1BAFF937C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFF93A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFF93A0()
{
  unint64_t result;

  result = qword_1EF2B8EE8;
  if (!qword_1EF2B8EE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.LogicalOperator, &type metadata for FormatTextNodeAlternativeLogic.LogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EE8);
  }
  return result;
}

uint64_t sub_1BAFF93E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC4914, (uint64_t (*)(void))sub_1BAEE9B88, (uint64_t (*)(void))sub_1BAFF9400);
}

unint64_t sub_1BAFF9400()
{
  unint64_t result;

  result = qword_1EF2B8EF0;
  if (!qword_1EF2B8EF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.LogicalOperator, &type metadata for FormatTextNodeAlternativeLogic.LogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EF0);
  }
  return result;
}

unint64_t sub_1BAFF9444(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAFF9468();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAFF9468()
{
  unint64_t result;

  result = qword_1EF2B8EF8;
  if (!qword_1EF2B8EF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B8EF8);
  }
  return result;
}

uint64_t sub_1BAFF94AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA53A778, (uint64_t (*)(void))sub_1BA55289C, (uint64_t (*)(void))sub_1BAFF94C8);
}

unint64_t sub_1BAFF94C8()
{
  unint64_t result;

  result = qword_1EF2B8F00;
  if (!qword_1EF2B8F00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B8F00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic()
{
  return &type metadata for FormatTextNodeAlternativeLogic;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatFrameExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FormatFrameExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic.TextLines()
{
  return &type metadata for FormatTextNodeAlternativeLogic.TextLines;
}

uint64_t destroy for FormatTextNodeAlternativeLogic.AlternativeLogic()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s8NewsFeed30FormatTextNodeAlternativeLogicO16AlternativeLogicVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatTextNodeAlternativeLogic.AlternativeLogic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for FormatTextNodeAlternativeLogic.AlternativeLogic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic.AlternativeLogic()
{
  return &type metadata for FormatTextNodeAlternativeLogic.AlternativeLogic;
}

uint64_t destroy for FormatTextNodeAlternativeLogic.LogicalOperator()
{
  swift_release();
  return swift_release();
}

_QWORD *_s8NewsFeed30FormatTextNodeAlternativeLogicO15LogicalOperatorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatTextNodeAlternativeLogic.LogicalOperator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatTextNodeAlternativeLogic.LogicalOperator(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternativeLogic.LogicalOperator()
{
  return &type metadata for FormatTextNodeAlternativeLogic.LogicalOperator;
}

void sub_1BAFF984C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B8F08)
  {
    sub_1BB86D5B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B8F08);
  }
}

NewsFeed::FormatSlotTransformPolicy_optional __swiftcall FormatSlotTransformPolicy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatSlotTransformPolicy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatSlotTransformPolicy.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAFF9934 + 4 * byte_1BB8E1160[*v0]))(0x657571696E75, 0xE600000000000000);
}

uint64_t sub_1BAFF9934()
{
  return 0x74696D696CLL;
}

uint64_t sub_1BAFF9948()
{
  return 0x6C616E6F73726570;
}

uint64_t sub_1BAFF9968()
{
  return 0x65726975716572;
}

uint64_t sub_1BAFF9980()
{
  return 0x6F43657269707865;
}

uint64_t sub_1BAFF99A4()
{
  return 6775156;
}

uint64_t sub_1BAFF99B4()
{
  return 0x7453656C7A7A7570;
}

void sub_1BAFF99D8(char *a1)
{
  sub_1BB7F4104(*a1);
}

unint64_t sub_1BAFF99E8()
{
  unint64_t result;

  result = qword_1ED3CB260;
  if (!qword_1ED3CB260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotTransformPolicy, &type metadata for FormatSlotTransformPolicy);
    atomic_store(result, (unint64_t *)&qword_1ED3CB260);
  }
  return result;
}

void sub_1BAFF9A2C()
{
  char *v0;

  sub_1BAB08638(0, *v0);
}

void sub_1BAFF9A38()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAFF9A70()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAFF9B28(uint64_t a1)
{
  char *v1;

  sub_1BAB08638(a1, *v1);
}

NewsFeed::FormatSlotTransformPolicy_optional sub_1BAFF9B30(Swift::String *a1)
{
  return FormatSlotTransformPolicy.init(rawValue:)(*a1);
}

uint64_t sub_1BAFF9B3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAFF9B68 + 4 * byte_1BB8E116E[*v0]))();
}

void sub_1BAFF9B68(_QWORD *a1@<X8>)
{
  *a1 = 0x74696D696CLL;
  a1[1] = 0xE500000000000000;
}

void sub_1BAFF9B80(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E6F73726570;
  a1[1] = 0xEB00000000657A69;
}

void sub_1BAFF9BA4(_QWORD *a1@<X8>)
{
  *a1 = 0x65726975716572;
  a1[1] = 0xE700000000000000;
}

void sub_1BAFF9BC0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "expireContent");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BAFF9BE8(_QWORD *a1@<X8>)
{
  *a1 = 6775156;
  a1[1] = 0xE300000000000000;
}

void sub_1BAFF9BFC(_QWORD *a1@<X8>)
{
  *a1 = 0x7453656C7A7A7570;
  a1[1] = 0xEF63697473697461;
}

uint64_t storeEnumTagSinglePayload for FormatSlotTransformPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BAFF9C70 + 4 * byte_1BB8E117A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BAFF9CA4 + 4 * byte_1BB8E1175[v4]))();
}

uint64_t sub_1BAFF9CA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF9CAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFF9CB4);
  return result;
}

uint64_t sub_1BAFF9CC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFF9CC8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BAFF9CCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFF9CD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotTransformPolicy()
{
  return &type metadata for FormatSlotTransformPolicy;
}

void sub_1BAFF9CF0()
{
  __asm { BR              X12 }
}

void sub_1BAFF9D20(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BAFF9D88(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a1[7];
  v4 = a1[8];
  __swift_project_boxed_opaque_existential_1(a1 + 4, v3);
  v5 = *a2;
  v6 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  return ResourceServiceType.fetchResources(identifiers:qualityOfService:cachePolicy:purpose:)(v5, 25, (uint64_t)a2 + *(int *)(v6 + 20), *MEMORY[0x1E0D58678], v3, v4);
}

void sub_1BAFF9E0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v7 = sub_1BB86EFEC();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a2, (uint64_t)v6, type metadata accessor for SportsDataServiceBatchResourceRequest);
  v8 = a1;
  v9 = a1;
  v10 = sub_1BB86EFC8();
  v11 = sub_1BB8732F4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v22 = v13;
    *(_DWORD *)v12 = 136446466;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x1BCCE36DC](v14, MEMORY[0x1E0DEA968]);
    v17 = v16;
    swift_bridgeObjectRelease();
    v21 = sub_1BA5D2E14(v15, v17, &v22);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for SportsDataServiceBatchResourceRequest);
    *(_WORD *)(v12 + 12) = 2082;
    v21 = (uint64_t)a1;
    v18 = a1;
    sub_1BA8EBDF8();
    v19 = sub_1BB872A00();
    v21 = sub_1BA5D2E14(v19, v20, &v22);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, v10, v11, "Sports data service failed to resolve resources %{public}s, error=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v13, -1, -1);
    MEMORY[0x1BCCE5C38](v12, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for SportsDataServiceBatchResourceRequest);

  }
}

uint64_t sub_1BAFFA0A0(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
  type metadata accessor for SportsDataServiceURLRequest(0);
  return sub_1BB86E524();
}

void (**sub_1BAFFA10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(char *, uint64_t, uint64_t)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (**v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _BYTE *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(uint64_t *, _QWORD);
  unint64_t *v28;
  unint64_t v29;
  char *v30;
  unint64_t *v31;
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  uint64_t (*v42)(void);
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v68;
  void (*v69)(uint64_t *, _QWORD);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  void (**v81)(char *, uint64_t, uint64_t);
  uint64_t v82[5];
  uint64_t v83;

  v76 = a4;
  v73 = a2;
  v74 = a1;
  v79 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1E0C80A78](v79);
  v71 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v78 = (void (*)(char *, uint64_t))((char *)&v68 - v6);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v77 = (char *)&v68 - v9;
  v10 = sub_1BB86C67C();
  v81 = *(void (***)(char *, uint64_t, uint64_t))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v80 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1BB86BF20();
  v12 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v14 = (void (**)(char *, uint64_t, uint64_t))((char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v7);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v68 - v16;
  v18 = sub_1BB86BFF8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v68 - v23;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    sub_1BA98B368();
    swift_allocError();
    *v25 = 3;
    swift_willThrow();
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v72 = v18;
    v26(v24, v17, v18);
    sub_1BB86BF5C();
    sub_1BB86BF68();
    v27 = (void (*)(uint64_t *, _QWORD))sub_1BB86BF50();
    v29 = *v28;
    v30 = v24;
    v70 = v10;
    if (v29)
    {
      v31 = v28;
      v69 = v27;
      sub_1BB86ECD4();
      sub_1BB86BEFC();
      swift_bridgeObjectRelease();
      v32 = *v31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v31 = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v32 = sub_1BA785BF0(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
        *v31 = v32;
      }
      v35 = *(_QWORD *)(v32 + 16);
      v34 = *(_QWORD *)(v32 + 24);
      if (v35 >= v34 >> 1)
      {
        v32 = sub_1BA785BF0(v34 > 1, v35 + 1, 1, v32);
        *v31 = v32;
      }
      v36 = v72;
      *(_QWORD *)(v32 + 16) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v32+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v35, (char *)v14, v75);
      v69(v82, 0);
      v10 = v70;
    }
    else
    {
      v27(v82, 0);
      v36 = v72;
    }
    v37 = (uint64_t)v78;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v30, v36);
    v38 = v77;
    sub_1BB86BF80();
    v39 = *(void (**)(char *, uint64_t))(v19 + 8);
    v40 = v38;
    v39(v21, v36);
    v14 = v81;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81[6])(v40, 1, v10) == 1)
    {
      sub_1BA5C699C(v40, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1BA98B368();
      swift_allocError();
      *v41 = 4;
      swift_willThrow();
      v39(v30, v36);
    }
    else
    {
      v78 = v39;
      v14[4](v80, v40, v10);
      v42 = MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB9A0, (uint64_t (*)(uint64_t))sub_1BA98B3AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      v77 = xmmword_1BB87CE70;
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      strcpy((char *)(inited + 32), "X-REQUEST-ID");
      *(_BYTE *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))v42);
      v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v77;
      v45 = v79;
      v46 = v76;
      v47 = (uint64_t *)(v76 + *(int *)(v79 + 32));
      v49 = *v47;
      v48 = v47[1];
      *(_QWORD *)(v44 + 32) = v49;
      *(_QWORD *)(v44 + 40) = v48;
      *(_QWORD *)(inited + 48) = v44;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v77 = sub_1BA8F2DF4(inited);
      if (qword_1ED3A3BD0 != -1)
        swift_once();
      v50 = sub_1BB86EFEC();
      __swift_project_value_buffer(v50, (uint64_t)qword_1ED3A3BB8);
      sub_1BA4C2DD8(v46, v37, type metadata accessor for SportsDataServiceURLRequest);
      v51 = v71;
      sub_1BA4C2DD8(v46, v71, type metadata accessor for SportsDataServiceURLRequest);
      v52 = sub_1BB86EFC8();
      v53 = sub_1BB87330C();
      v54 = os_log_type_enabled(v52, v53);
      v68 = v30;
      if (v54)
      {
        v55 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v82[0] = v75;
        *(_DWORD *)v55 = 136446466;
        v56 = (uint64_t *)(v37 + *(int *)(v45 + 32));
        v57 = *v56;
        v58 = v56[1];
        swift_bridgeObjectRetain();
        v83 = sub_1BA5D2E14(v57, v58, v82);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v37, type metadata accessor for SportsDataServiceURLRequest);
        *(_WORD *)(v55 + 12) = 2082;
        v59 = sub_1BB86C538();
        v83 = sub_1BA5D2E14(v59, v60, v82);
        v45 = v79;
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v51, type metadata accessor for SportsDataServiceURLRequest);
        _os_log_impl(&dword_1BA493000, v52, v53, "SportsDataService executing fetch with identifier=%{public}s, url=%{public}s", (uint8_t *)v55, 0x16u);
        v61 = v75;
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v61, -1, -1);
        v62 = v55;
        v46 = v76;
        MEMORY[0x1BCCE5C38](v62, -1, -1);
      }
      else
      {
        sub_1BA4A2E80(v37, type metadata accessor for SportsDataServiceURLRequest);
        sub_1BA4A2E80(v51, type metadata accessor for SportsDataServiceURLRequest);
      }

      v63 = (uint64_t *)(v46 + *(int *)(v45 + 28));
      if (v63[3])
      {
        v64 = v63[1];
        v79 = v63[2];
        v65 = *v63;
        sub_1BB8729A0();
        sub_1BA69D44C(v65, v64);
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1BB8729A0();
        v79 = 0;
        v65 = 0;
        v64 = 0xF000000000000000;
      }
      swift_getObjectType();
      v66 = v80;
      v14 = (void (**)(char *, uint64_t, uint64_t))FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)();
      swift_bridgeObjectRelease();
      sub_1BA69D490(v65, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v81[1])(v66, v70);
      v78(v68, v72);
    }
  }
  return v14;
}

uint64_t sub_1BAFFA9E8()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1BA8F2DF4(MEMORY[0x1E0DEE9D8]);
  sub_1BB8729A0();
  v0 = FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BAFFAAC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  v3 = *a2;
  v4 = a2[1];
  type metadata accessor for SportsDataServiceResourceRequest(0);
  return ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:)(v3, v4);
}

void sub_1BAFFAB50(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED3A3BD0 != -1)
    swift_once();
  v7 = sub_1BB86EFEC();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED3A3BB8);
  sub_1BA4C2DD8(a2, (uint64_t)v6, type metadata accessor for SportsDataServiceResourceRequest);
  v8 = a1;
  v9 = a1;
  v10 = sub_1BB86EFC8();
  v11 = sub_1BB8732F4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v20 = v13;
    *(_DWORD *)v12 = 136446466;
    v14 = *v6;
    v15 = v6[1];
    swift_bridgeObjectRetain();
    v19 = sub_1BA5D2E14(v14, v15, &v20);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v12 + 12) = 2082;
    v19 = (uint64_t)a1;
    v16 = a1;
    sub_1BA8EBDF8();
    v17 = sub_1BB872A00();
    v19 = sub_1BA5D2E14(v17, v18, &v20);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BA493000, v10, v11, "Sports data service failed to resolve resource %{public}s, error=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v13, -1, -1);
    MEMORY[0x1BCCE5C38](v12, -1, -1);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for SportsDataServiceResourceRequest);

  }
}

uint64_t sub_1BAFFADC8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t storeEnumTagSinglePayload for SportsDataServiceRequestFetcher.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAFFAE4C + 4 * byte_1BB8E1270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAFFAE6C + 4 * byte_1BB8E1275[v4]))();
}

_BYTE *sub_1BAFFAE4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAFFAE6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFFAE74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFFAE7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAFFAE84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAFFAE8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceRequestFetcher.Errors()
{
  return &type metadata for SportsDataServiceRequestFetcher.Errors;
}

uint64_t sub_1BAFFAEA8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BAFFAF34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1BAFFB004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1BAFFB05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BAFFB0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BAFFB134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BAFFB1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BAFFB20C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BAFFB2E8 + 4 * byte_1BB8E127A[v17 - 1]))();
}

void sub_1BAFFB364(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for SportsDataServiceResponse()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BAFFB570()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SportsDataServiceBatchRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BAFFB5E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for SportsDataServiceBatchRequest(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BAFFB68C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for SportsDataServiceBatchRequest(0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAFFB6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAFFB760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAFFB7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_1BAFFB860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for SportsDataServiceBatchRequest(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAFFB8E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFFB8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for SportsDataServiceBatchRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BAFFB968()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAFFB974(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SportsDataServiceBatchRequest(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SportsDataServiceBatchResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SportsDataServiceBatchResponse);
}

unint64_t sub_1BAFFB9FC()
{
  unint64_t result;

  result = qword_1EF2B8F20;
  if (!qword_1EF2B8F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E13C0, &type metadata for SportsDataServiceRequestFetcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2B8F20);
  }
  return result;
}

uint64_t SportsLinksDataVisualizationResponse.supportedVisualizations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsLinksDataVisualizationResponse.standingResponseChildTagIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsLinksDataVisualizationResponse.bracketResponseChildTagIds.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for SportsLinksDataVisualizationResponse()
{
  return &type metadata for SportsLinksDataVisualizationResponse;
}

uint64_t FormatFeedConfig.init(selectors:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1BAFFBA70()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6F6974706FLL;
  else
    return 0x726F7463656C6573;
}

uint64_t sub_1BAFFBAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAFFC6BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAFFBAD4()
{
  sub_1BAFFBD18();
  return sub_1BB874710();
}

uint64_t sub_1BAFFBAFC()
{
  sub_1BAFFBD18();
  return sub_1BB87471C();
}

uint64_t FormatFeedConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_1BAFFC428(0, &qword_1EF2B8F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - v6;
  v8 = *v1;
  v9 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAFFBD18();
  sub_1BB8746C8();
  if (!v8
    || (v13 = 0,
        v12 = v8,
        sub_1BAFFBD5C(),
        sub_1BA4B07F0(0, &qword_1EF2B8F78, (uint64_t (*)(uint64_t))sub_1BAFFBE98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), sub_1BAFFBF18(&qword_1EF2B8F90, &qword_1EF2B8F78, (uint64_t (*)(uint64_t))sub_1BAFFBE98, sub_1BAFFBF84), sub_1BB874464(), !v2))
  {
    if (v9)
    {
      v13 = 1;
      v12 = v9;
      sub_1BAFFBD5C();
      sub_1BA4B07F0(0, &qword_1EF2B8F48, (uint64_t (*)(uint64_t))sub_1BAFFBDB4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BAFFBF18(&qword_1EF2B8F60, &qword_1EF2B8F48, (uint64_t (*)(uint64_t))sub_1BAFFBDB4, sub_1BAFFBE74);
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v5);
}

unint64_t sub_1BAFFBD18()
{
  unint64_t result;

  result = qword_1EF2B8F38;
  if (!qword_1EF2B8F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E15A4, &type metadata for FormatFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8F38);
  }
  return result;
}

unint64_t sub_1BAFFBD5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B8F40;
  if (!qword_1EF2B8F40)
  {
    sub_1BAFFC428(255, &qword_1EF2B8F30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B8F40);
  }
  return result;
}

void sub_1BAFFBDB4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B8F50, (uint64_t (*)(uint64_t))sub_1BAFFBDD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BAFFBDD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2B8F58)
  {
    v2 = type metadata accessor for FormatOption();
    v3 = sub_1BA4A2870(&qword_1ED3B37E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v4 = sub_1BA4A2870(&qword_1ED3AFE80, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v5 = type metadata accessor for FormatFeedConfigValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2B8F58);
  }
}

uint64_t sub_1BAFFBE74()
{
  return sub_1BAFFBFA8(&qword_1EF2B8F68, (uint64_t (*)(uint64_t))sub_1BAFFBDB4, &qword_1EF2B8F70, (uint64_t (*)(uint64_t))sub_1BAFFBDD0);
}

void sub_1BAFFBE98(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B8F80, (uint64_t (*)(uint64_t))sub_1BAFFBEB4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BAFFBEB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B8F88)
  {
    v0 = type metadata accessor for FormatFeedConfigValue(0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B8F88);
  }
}

uint64_t sub_1BAFFBF18(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAFFBF84()
{
  return sub_1BAFFBFA8(&qword_1EF2B8F98, (uint64_t (*)(uint64_t))sub_1BAFFBE98, &qword_1EF2B8FA0, (uint64_t (*)(uint64_t))sub_1BAFFBEB4);
}

uint64_t sub_1BAFFBFA8(unint64_t *a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9 = sub_1BA4A2870(a3, a4, (uint64_t)&protocol conformance descriptor for FormatFeedConfigValue<A>);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatFeedConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v29 = a2;
  sub_1BAFFC340(0);
  v26 = v3;
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFFC404(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAFFC428(0, &qword_1EF2B8FC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v26 - v13;
  v15 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1BAFFBD18();
  v16 = v31;
  sub_1BB87468C();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    v31 = v12;
    v18 = v29;
    v35 = 0;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v32 = 0;
      sub_1BA4A2870(&qword_1EF2B8FD8, (uint64_t (*)(uint64_t))sub_1BAFFC404, MEMORY[0x1E0DB3610]);
      sub_1BB8740D4();
      v19 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      v19 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34 = 1;
    v20 = sub_1BB8740F8();
    v21 = v11;
    v22 = v28;
    if ((v20 & 1) != 0)
    {
      v33 = 1;
      sub_1BA4A2870(&qword_1EF2B8FD0, (uint64_t (*)(uint64_t))sub_1BAFFC340, MEMORY[0x1E0DB3610]);
      v24 = v26;
      v23 = v27;
      sub_1BB8740D4();
      v25 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
    }
    else
    {
      v25 = 0;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v18 = v19;
    v18[1] = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BAFFC340(uint64_t a1)
{
  sub_1BAFFC364(a1, &qword_1EF2B8FA8, (uint64_t (*)(uint64_t))sub_1BAFFBDD0, &qword_1EF2B8FB0, &qword_1EF2B8F70);
}

void sub_1BAFFC364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BA4A2870(a4, a3, (uint64_t)&protocol conformance descriptor for FormatFeedConfigValue<A>);
    sub_1BA4A2870(a5, a3, (uint64_t)&protocol conformance descriptor for FormatFeedConfigValue<A>);
    v9 = sub_1BB86DF60();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BAFFC404(uint64_t a1)
{
  sub_1BAFFC364(a1, &qword_1EF2B8FB8, (uint64_t (*)(uint64_t))sub_1BAFFBEB4, &qword_1EF2B8FC0, &qword_1EF2B8FA0);
}

void sub_1BAFFC428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAFFBD18();
    v7 = a3(a1, &type metadata for FormatFeedConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAFFC484@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatFeedConfig.init(from:)(a1, a2);
}

uint64_t sub_1BAFFC498(_QWORD *a1)
{
  return FormatFeedConfig.encode(to:)(a1);
}

_QWORD *assignWithCopy for FormatImageNodeRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatFeedConfig()
{
  return &type metadata for FormatFeedConfig;
}

uint64_t storeEnumTagSinglePayload for FormatFeedConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAFFC564 + 4 * byte_1BB8E1475[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAFFC598 + 4 * asc_1BB8E1470[v4]))();
}

uint64_t sub_1BAFFC598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFFC5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAFFC5A8);
  return result;
}

uint64_t sub_1BAFFC5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAFFC5BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAFFC5C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAFFC5C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatFeedConfig.CodingKeys()
{
  return &type metadata for FormatFeedConfig.CodingKeys;
}

unint64_t sub_1BAFFC5E8()
{
  unint64_t result;

  result = qword_1EF2B8FE0;
  if (!qword_1EF2B8FE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E157C, &type metadata for FormatFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8FE0);
  }
  return result;
}

unint64_t sub_1BAFFC630()
{
  unint64_t result;

  result = qword_1EF2B8FE8;
  if (!qword_1EF2B8FE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E14EC, &type metadata for FormatFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8FE8);
  }
  return result;
}

unint64_t sub_1BAFFC678()
{
  unint64_t result;

  result = qword_1EF2B8FF0;
  if (!qword_1EF2B8FF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E1514, &type metadata for FormatFeedConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B8FF0);
  }
  return result;
}

uint64_t sub_1BAFFC6BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t Array<A>.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a1;
  v23 = a2;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  swift_bridgeObjectRetain();
  if (!MEMORY[0x1BCCE37E4](a3, a4))
    return swift_bridgeObjectRelease();
  v20 = v10;
  v21 = a5;
  v15 = 0;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8);
  while (1)
  {
    v17 = sub_1BB872E80();
    sub_1BB872E38();
    if ((v17 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v15, a4);
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_11;
      goto LABEL_5;
    }
    result = sub_1BB873D08();
    if (v20 != 8)
      break;
    v24 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 16))(v14, &v24, a4);
    swift_unknownObjectRelease();
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, a4);
    v16(v22, v23, a4, v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a4);
    if (!v5)
    {
      ++v15;
      if (v18 != MEMORY[0x1BCCE37E4](a3, a4))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAFFC988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return Array<A>.bind(binder:context:)(a1, a2, *v4, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t Dictionary.bind(binder:context:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  _QWORD v51[2];
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v58 = a1;
  v59 = a2;
  v67 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v61 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v51 - v11;
  v68 = v13;
  v73 = v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = sub_1BB873A2C();
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v51 - v20;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v22 = sub_1BB873E70();
    v52 = 0;
    v23 = 0;
    v24 = 0;
    v25 = v22 | 0x8000000000000000;
  }
  else
  {
    v26 = -1 << *(_BYTE *)(a3 + 32);
    v23 = ~v26;
    v27 = *(_QWORD *)(a3 + 64);
    v52 = a3 + 64;
    v28 = -v26;
    if (v28 < 64)
      v29 = ~(-1 << v28);
    else
      v29 = -1;
    v24 = v29 & v27;
    v25 = a3;
  }
  v54 = v25 & 0x7FFFFFFFFFFFFFFFLL;
  v51[1] = v23;
  v53 = (unint64_t)(v23 + 64) >> 6;
  v51[0] = v53 - 1;
  result = swift_bridgeObjectRetain();
  v31 = 0;
  v57 = v7;
  v65 = v21;
  v55 = TupleTypeMetadata2;
  v60 = v25;
  while (1)
  {
    v66 = v24;
    v64 = v31;
    if ((v25 & 0x8000000000000000) == 0)
      break;
    if (sub_1BB873E94())
    {
      sub_1BB874368();
      swift_unknownObjectRelease();
      sub_1BB874368();
      swift_unknownObjectRelease();
      v34 = 0;
    }
    else
    {
      v34 = 1;
    }
    v21 = v65;
    v24 = v66;
LABEL_23:
    v37 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v18, v34, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v21, v18, v63);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v21, 1, TupleTypeMetadata2) == 1)
      return sub_1BA6EBD18();
    v38 = v18;
    v39 = v12;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, &v21[*(int *)(TupleTypeMetadata2 + 48)], v73);
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v61, v21, v68);
    sub_1BAFFD014();
    if (swift_dynamicCast())
    {
      v40 = *((_QWORD *)&v71 + 1);
      v41 = v72;
      __swift_project_boxed_opaque_existential_1(&v70, *((uint64_t *)&v71 + 1));
      v42 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v58, v59, v40, v41);
      if (v42)
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v73);
        sub_1BA6EBD18();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
      }
      v69 = 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
      v7 = v57;
    }
    else
    {
      v72 = 0;
      v70 = 0u;
      v71 = 0u;
      sub_1BAFFD068((uint64_t)&v70);
    }
    v12 = v39;
    v43 = v73;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v56, v39, v73);
    if (swift_dynamicCast())
    {
      v44 = *((_QWORD *)&v71 + 1);
      v45 = v72;
      __swift_project_boxed_opaque_existential_1(&v70, *((uint64_t *)&v71 + 1));
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8);
      v47 = v69;
      v48 = v44;
      v12 = v39;
      v49 = v45;
      v7 = v57;
      v46(v58, v59, v48, v49);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v73);
      v69 = v47;
      v21 = v65;
      if (v47)
      {
        sub_1BA6EBD18();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
      }
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
      v18 = v38;
    }
    else
    {
      v72 = 0;
      v70 = 0u;
      v71 = 0u;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v43);
      result = sub_1BAFFD068((uint64_t)&v70);
      v18 = v38;
      v21 = v65;
    }
    v25 = v60;
    TupleTypeMetadata2 = v55;
  }
  if (v24)
  {
    v32 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v33 = v32 | (v31 << 6);
    goto LABEL_13;
  }
  if (__OFADD__(v31++, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v31 >= v53)
  {
    v24 = 0;
    v34 = 1;
    v31 = v64;
    goto LABEL_23;
  }
  v36 = *(_QWORD *)(v52 + 8 * v31);
  if (v36)
    goto LABEL_19;
  if (v31 + 1 >= v53)
  {
    v24 = 0;
    v34 = 1;
    goto LABEL_23;
  }
  v36 = *(_QWORD *)(v52 + 8 * (v31 + 1));
  if (v36)
  {
    ++v31;
    goto LABEL_19;
  }
  v50 = v31 + 2;
  if (v31 + 2 >= v53)
  {
    v24 = 0;
    v34 = 1;
    ++v31;
    goto LABEL_23;
  }
  v36 = *(_QWORD *)(v52 + 8 * v50);
  if (v36)
  {
    v31 += 2;
LABEL_19:
    v24 = (v36 - 1) & v36;
    v33 = __clz(__rbit64(v36)) + (v31 << 6);
LABEL_13:
    (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v18, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v67 + 72) * v33, v68);
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(&v18[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v25 + 56) + *(_QWORD *)(v7 + 72) * v33, v73);
    v34 = 0;
    goto LABEL_23;
  }
  while (1)
  {
    v31 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v31 >= v53)
    {
      v24 = 0;
      v34 = 1;
      v31 = v51[0];
      goto LABEL_23;
    }
    v36 = *(_QWORD *)(v52 + 8 * v31);
    ++v50;
    if (v36)
      goto LABEL_19;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BAFFCFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;

  return Dictionary.bind(binder:context:)(a1, a2, *v3, *(_QWORD *)(a3 + 16));
}

unint64_t sub_1BAFFD014()
{
  unint64_t result;

  result = qword_1ED3B3EE0;
  if (!qword_1ED3B3EE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B3EE0);
  }
  return result;
}

uint64_t sub_1BAFFD068(uint64_t a1)
{
  uint64_t v2;

  sub_1BAFFD0A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAFFD0A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B3EE8[0])
  {
    sub_1BAFFD014();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1ED3B3EE8);
  }
}

uint64_t dispatch thunk of FormatBindable.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t static FormatCodingMetadataStrategy.defaultValue.getter@<X0>(char *a1@<X8>)
{
  return FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, a1, 0, 0, 0, 0);
}

BOOL static FormatCodingMetadataStrategy.shouldEncode(wrappedValue:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v4, 0, 0, 0, 0);
  LOBYTE(a1) = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(a1, v4);
  sub_1BAFFD2E8((uint64_t)v4);
  return (a1 & 1) == 0;
}

uint64_t sub_1BAFFD1FC@<X0>(char *a1@<X8>)
{
  return FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, a1, 0, 0, 0, 0);
}

BOOL sub_1BAFFD240(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v4, 0, 0, 0, 0);
  LOBYTE(a1) = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(a1, v4);
  sub_1BAFFD2E8((uint64_t)v4);
  return (a1 & 1) == 0;
}

uint64_t sub_1BAFFD2E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BAFFD324(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8237E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAFFD348()
{
  return sub_1BA6BE2A8(&qword_1ED3B40A0, (uint64_t)&protocol conformance descriptor for FormatMetadata);
}

uint64_t sub_1BAFFD36C()
{
  return sub_1BA6BE2A8(&qword_1ED39CBE8, (uint64_t)&protocol conformance descriptor for FormatMetadata);
}

ValueMetadata *type metadata accessor for FormatCodingMetadataStrategy()
{
  return &type metadata for FormatCodingMetadataStrategy;
}

uint64_t FormatLayoutContext.key.getter()
{
  return swift_retain();
}

uint64_t FormatLayoutContext.inventory.getter()
{
  return swift_retain();
}

uint64_t FormatLayoutContext.annotator.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

double FormatLayoutContext.itemFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double FormatLayoutContext.sectionFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatLayoutContext.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutContext.copy(itemFrame:sectionFrame:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = v9[1];
  v12 = v9[2];
  v11 = v9[3];
  *(_QWORD *)a1 = *v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v11;
  *(double *)(a1 + 32) = a2;
  *(double *)(a1 + 40) = a3;
  *(double *)(a1 + 48) = a4;
  *(double *)(a1 + 56) = a5;
  *(double *)(a1 + 64) = a6;
  *(double *)(a1 + 72) = a7;
  *(double *)(a1 + 80) = a8;
  *(double *)(a1 + 88) = a9;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_1BAFFD454@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

double sub_1BAFFD460()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_1BAFFD46C()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t sub_1BAFFD478()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAFFD4A4@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = v9[1];
  v12 = v9[2];
  v11 = v9[3];
  *(_QWORD *)a1 = *v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v11;
  *(double *)(a1 + 32) = a2;
  *(double *)(a1 + 40) = a3;
  *(double *)(a1 + 48) = a4;
  *(double *)(a1 + 56) = a5;
  *(double *)(a1 + 64) = a6;
  *(double *)(a1 + 72) = a7;
  *(double *)(a1 + 80) = a8;
  *(double *)(a1 + 88) = a9;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

uint64_t dispatch thunk of FormatLayoutContextType.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatLayoutContextType.inventory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FormatLayoutContextType.annotator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FormatLayoutContextType.itemFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FormatLayoutContextType.sectionFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FormatLayoutContextType.itemIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FormatLayoutContextType.copy(itemFrame:sectionFrame:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

_QWORD *assignWithCopy for FormatLayoutContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayoutContext()
{
  return &type metadata for FormatLayoutContext;
}

uint64_t WebEmbedDataVisualizationDataServiceFailure.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate;
  v2 = sub_1BB86C8B0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_createdDate, v2);
  v4 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_request;
  v5 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t WebEmbedDataVisualizationDataServiceFailure.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate;
  v2 = sub_1BB86C8B0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_createdDate, v2);
  v4 = v0 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_request;
  v5 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAFFD7BC()
{
  return type metadata accessor for WebEmbedDataVisualizationDataServiceFailure();
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataServiceFailure()
{
  uint64_t result;

  result = qword_1EF2B9080;
  if (!qword_1EF2B9080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAFFD800()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86BC8C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for WebEmbedDataVisualizationDataServiceFailure()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LatestPuzzleProviderType.fetchLatestPuzzles(for:minPuzzles:maxPuzzles:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1BA9822B8;
  return v15(a1, a2, a3, a4, a5, a6);
}

ValueMetadata *type metadata accessor for LatestPuzzleProviderError()
{
  return &type metadata for LatestPuzzleProviderError;
}

uint64_t sub_1BAFFD954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return swift_task_switch();
}

uint64_t sub_1BAFFD974()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, id, uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[19];
  v3 = v0[15];
  v2 = v0[16];
  v4 = objc_msgSend((id)objc_opt_self(), sel_cachePolicyWithSoftMaxAge_, 120.0);
  v0[20] = v4;
  v5 = v1 + 2;
  v6 = v1[5];
  v7 = v1[6];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  sub_1BA6EA07C();
  v8 = swift_allocObject();
  v0[21] = v8;
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  v12 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 128) + *(_QWORD *)(v7 + 128));
  swift_bridgeObjectRetain();
  v9 = v4;
  v10 = (_QWORD *)swift_task_alloc();
  v0[22] = v10;
  *v10 = v0;
  v10[1] = sub_1BAFFDA80;
  return v12(v8, v4, 25, v6, v7);
}

uint64_t sub_1BAFFDA80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1BAFFDAFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48[2];

  v2 = *(_QWORD *)(v0 + 184);
  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v41 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v41)
    goto LABEL_29;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = (void *)MEMORY[0x1BCCE4630](0, *(_QWORD *)(v0 + 184));
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_34;
    }
    v3 = *(void **)(*(_QWORD *)(v0 + 184) + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v3, sel_latestPuzzleIDs);
  swift_unknownObjectRelease();
  if (!v4)
  {
LABEL_30:
    v22 = *(void **)(v0 + 160);
    sub_1BAFFFE74();
    swift_allocError();
    *(_QWORD *)v42 = 0;
    *(_QWORD *)(v42 + 8) = 0;
    *(_BYTE *)(v42 + 16) = 1;
LABEL_31:
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 136);
  v6 = sub_1BB872DB4();

  v1 = *(_QWORD *)(v6 + 16);
  if (v1 < v5)
  {
    if (qword_1ED3C0B50 == -1)
    {
LABEL_9:
      v7 = sub_1BB86EFEC();
      __swift_project_value_buffer(v7, (uint64_t)qword_1ED476918);
      swift_bridgeObjectRetain_n();
      v8 = sub_1BB86EFC8();
      v9 = sub_1BB8732F4();
      if (os_log_type_enabled(v8, v9))
      {
        v44 = *(_QWORD *)(v0 + 120);
        v11 = *(_QWORD *)(v0 + 128);
        v10 = *(_QWORD *)(v0 + 136);
        v12 = swift_slowAlloc();
        v13 = swift_slowAlloc();
        v48[0] = v13;
        *(_DWORD *)v12 = 134218242;
        *(_QWORD *)(v0 + 104) = v10;
        sub_1BB873A8C();
        *(_WORD *)(v12 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 112) = sub_1BA5D2E14(v44, v11, v48);
        sub_1BB873A8C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BA493000, v8, v9, "Failed to meet minimum item requirement of %ld for Puzzle Type %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v13, -1, -1);
        MEMORY[0x1BCCE5C38](v12, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      swift_bridgeObjectRelease();
      v22 = *(void **)(v0 + 160);
      v23 = *(_QWORD *)(v0 + 136);
      sub_1BAFFFE74();
      swift_allocError();
      *(_QWORD *)v24 = v23;
      *(_QWORD *)(v24 + 8) = v1;
      *(_BYTE *)(v24 + 16) = 0;
      goto LABEL_31;
    }
LABEL_34:
    swift_once();
    goto LABEL_9;
  }
  v14 = sub_1BB0E7894(*(_QWORD *)(v0 + 144), v6);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  if ((v19 & 1) != 0)
  {
    sub_1BB874434();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_unknownObjectRelease();
      v25 = MEMORY[0x1E0DEE9D8];
    }
    v26 = *(_QWORD *)(v25 + 16);
    swift_release();
    if (__OFSUB__(v20 >> 1, v18))
    {
      __break(1u);
    }
    else if (v26 == (v20 >> 1) - v18)
    {
      v21 = swift_dynamicCastClass();
      if (!v21)
      {
        swift_unknownObjectRelease();
        v21 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_22;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v21 = sub_1BA85DBB8(v14, v16, v18, v20);
LABEL_22:
  *(_QWORD *)(v0 + 200) = v21;
  swift_unknownObjectRelease();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v27 = sub_1BB86EFEC();
  *(_QWORD *)(v0 + 208) = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476918);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  v28 = sub_1BB86EFC8();
  v29 = sub_1BB87330C();
  if (os_log_type_enabled(v28, v29))
  {
    v45 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 128);
    v43 = *(_QWORD *)(v0 + 120);
    v31 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v48[0] = v46;
    *(_DWORD *)v31 = 134218754;
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(v21 + 16);
    sub_1BB873A8C();
    swift_release();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1BA5D2E14(v43, v30, v48);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 22) = 2080;
    v32 = swift_bridgeObjectRetain();
    v33 = MEMORY[0x1BCCE36DC](v32, MEMORY[0x1E0DEA968]);
    v35 = v34;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = sub_1BA5D2E14(v33, v35, v48);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 32) = 2048;
    *(_QWORD *)(v0 + 96) = v45;
    sub_1BB873A8C();
    _os_log_impl(&dword_1BA493000, v28, v29, "%ld Puzzle IDs available to be fetched for Puzzle Type %s: %s - Max Number of Puzzles: %ld", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v46, -1, -1);
    MEMORY[0x1BCCE5C38](v31, -1, -1);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v36 = *(_QWORD **)(v0 + 152);
  v37 = v36[5];
  v38 = v36[6];
  __swift_project_boxed_opaque_existential_1(v36 + 2, v37);
  v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v38 + 56) + *(_QWORD *)(v38 + 56));
  v39 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v39;
  *v39 = v0;
  v39[1] = sub_1BAFFE1F8;
  return v47(v21, 1, v37, v38);
}

uint64_t sub_1BAFFE1F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BAFFE26C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v1 = v0;
  v2 = NFInternalBuild();
  v3 = *(_QWORD *)(v0 + 224);
  if ((v2 & 1) == 0)
  {
    v17 = *(_QWORD *)(v0 + 224);
    goto LABEL_22;
  }
  *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEE9D8];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v4 = result;
    v31 = v3;
    if (result)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v31 = v3;
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        return result;
      }
      v6 = 0;
      v7 = v3 & 0xC000000000000001;
      v32 = *(_QWORD *)(v0 + 224) + 32;
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if (v7)
        {
          v9 = (void *)MEMORY[0x1BCCE4630](v6, *(_QWORD *)(v0 + 224));
        }
        else
        {
          v9 = *(void **)(v32 + 8 * v6);
          swift_unknownObjectRetain();
        }
        v10 = objc_msgSend(v9, sel_identifier);
        v11 = sub_1BB8729A0();
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_1BA6EA0D0(0, v8[2] + 1, 1, v8);
        v15 = v8[2];
        v14 = v8[3];
        if (v15 >= v14 >> 1)
          v8 = sub_1BA6EA0D0((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
        ++v6;
        v8[2] = v15 + 1;
        v16 = &v8[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
        swift_unknownObjectRelease();
      }
      while (v4 != v6);
      v1 = v0;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 40) = v8;
      v3 = v31;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRetain_n();
  v18 = sub_1BB86EFC8();
  v19 = sub_1BB87330C();
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(_QWORD *)(v1 + 128);
  if (v20)
  {
    v30 = *(_QWORD *)(v1 + 120);
    v22 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v34[0] = v33;
    *(_DWORD *)v22 = 134218498;
    swift_beginAccess();
    *(_QWORD *)(v1 + 48) = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16);
    sub_1BB873A8C();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 56) = sub_1BA5D2E14(v30, v21, v34);
    sub_1BB873A8C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2080;
    v23 = swift_bridgeObjectRetain();
    v24 = MEMORY[0x1BCCE36DC](v23, MEMORY[0x1E0DEA968]);
    v26 = v25;
    v3 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 64) = sub_1BA5D2E14(v24, v26, v34);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v18, v19, "Successfully Fetched %ld  Puzzles for Puzzle Type %s: %s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v33, -1, -1);
    MEMORY[0x1BCCE5C38](v22, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v1 + 224);
LABEL_22:
  if (v17 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v29 = swift_bridgeObjectRetain();
    v27 = (uint64_t)sub_1BA85DBAC(v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v28 = *(_QWORD *)(v1 + 232);
  v34[0] = v27;
  sub_1BAFFEA84(v34);
  if (v28)
    return swift_release();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v34[0]);
}

uint64_t sub_1BAFFE6B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAFFE6F4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAFFE730(id *a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  void *v33;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - v8;
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v32 - v19;
  v21 = *a2;
  v22 = objc_msgSend(*a1, sel_publishDate, v18);
  if (!v22)
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v25(v9, 1, 1, v10);
    goto LABEL_5;
  }
  v23 = v22;
  v33 = v21;
  sub_1BB86C874();

  v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v24(v9, v16, v10);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v25(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v21 = v33;
LABEL_5:
    sub_1BB86C8A4();
    sub_1BA76D750((uint64_t)v9);
    goto LABEL_7;
  }
  v24(v20, v9, v10);
  v21 = v33;
LABEL_7:
  v26 = objc_msgSend(v21, sel_publishDate);
  if (!v26)
  {
    v25(v6, 1, 1, v10);
    goto LABEL_11;
  }
  v27 = v26;
  sub_1BB86C874();

  v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v28(v6, v16, v10);
  v25(v6, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
LABEL_11:
    sub_1BB86C8A4();
    sub_1BA76D750((uint64_t)v6);
    goto LABEL_12;
  }
  v28(v13, v6, v10);
LABEL_12:
  v29 = sub_1BB86C814();
  v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30(v13, v10);
  v30(v20, v10);
  return v29 & 1;
}

uint64_t type metadata accessor for LatestPuzzleProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BAFFE9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *v4;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1BA981098;
  v11[18] = a4;
  v11[19] = v10;
  v11[16] = a2;
  v11[17] = a3;
  v11[15] = a1;
  return swift_task_switch();
}

uint64_t sub_1BAFFEA84(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BA6B2698(v2);
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BAFFEAFC(v6);
  return sub_1BB873DBC();
}

void sub_1BAFFEAFC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  char *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  char *v44;
  _QWORD *v45;
  void (*v46)(uint64_t, char *, uint64_t);
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v48;
  void *v49;
  char *v50;
  _QWORD *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  char *v70;
  _QWORD *v71;
  void (*v72)(char *, char *, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  id v74;
  void *v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  char *v83;
  char *v84;
  char v85;
  char *v86;
  char v87;
  void (*v88)(char *, uint64_t);
  void *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  char v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void **v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  _QWORD *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v153 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v153 - v6;
  MEMORY[0x1E0C80A78](v8);
  v162 = (char *)&v153 - v9;
  MEMORY[0x1E0C80A78](v10);
  v163 = (char *)&v153 - v11;
  v12 = sub_1BB86C8B0();
  v176 = *(_QWORD **)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v175 = (char *)&v153 - v16;
  MEMORY[0x1E0C80A78](v17);
  v161 = (char *)&v153 - v18;
  MEMORY[0x1E0C80A78](v19);
  v174 = (char *)&v153 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v153 - v22;
  v24 = a1[1];
  v25 = sub_1BB8741F4();
  if (v25 >= v24)
  {
    if (v24 < 0)
      goto LABEL_159;
    if (v24)
      sub_1BAFFF79C(0, v24, 1, a1);
    return;
  }
  if (v24 >= 0)
    v26 = v24;
  else
    v26 = v24 + 1;
  if (v24 < -1)
    goto LABEL_167;
  v157 = v25;
  v154 = a1;
  if (v24 < 2)
  {
    v29 = (char *)MEMORY[0x1E0DEE9D8];
    v180 = MEMORY[0x1E0DEE9D8];
    v167 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v24 != 1)
    {
      v93 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_124:
      v145 = v168;
      if (v93 >= 2)
      {
        v146 = *v154;
        do
        {
          v147 = v93 - 2;
          if (v93 < 2)
            goto LABEL_153;
          if (!v146)
            goto LABEL_166;
          v148 = v29;
          v149 = *(_QWORD *)&v29[16 * v147 + 32];
          v150 = *(_QWORD *)&v29[16 * v93 + 24];
          sub_1BAFFFB1C((void **)(v146 + 8 * v149), (void **)(v146 + 8 * *(_QWORD *)&v29[16 * v93 + 16]), v146 + 8 * v150, v167);
          if (v145)
            break;
          if (v150 < v149)
            goto LABEL_155;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v148 = sub_1BACAB464((uint64_t)v148);
          if (v147 >= *((_QWORD *)v148 + 2))
            goto LABEL_156;
          v151 = &v148[16 * v147 + 32];
          *(_QWORD *)v151 = v149;
          *((_QWORD *)v151 + 1) = v150;
          v152 = *((_QWORD *)v148 + 2);
          if (v93 > v152)
            goto LABEL_157;
          memmove(&v148[16 * v93 + 16], &v148[16 * v93 + 32], 16 * (v152 - v93));
          v29 = v148;
          *((_QWORD *)v148 + 2) = v152 - 1;
          v93 = v152 - 1;
        }
        while (v152 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
LABEL_136:
      *(_QWORD *)((v180 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BB872DCC();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v27 = v26 >> 1;
    sub_1BAAD72E4();
    v28 = sub_1BB872E74();
    *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) = v27;
    v167 = (void **)((v28 & 0xFFFFFFFFFFFFFF8) + 32);
    v180 = v28;
  }
  v159 = v23;
  v171 = v4;
  v30 = 0;
  v31 = *a1;
  v155 = *a1 + 16;
  v156 = v31 - 8;
  v29 = (char *)MEMORY[0x1E0DEE9D8];
  v172 = v7;
  v169 = v31;
  v170 = v14;
  v32 = v24;
  v165 = v24;
  while (1)
  {
    v33 = v30;
    v34 = v30 + 1;
    v164 = v30;
    if (v30 + 1 >= v32)
      goto LABEL_42;
    v158 = v29;
    v35 = *(void **)(v31 + 8 * v34);
    v178 = *(void **)(v31 + 8 * v30);
    v179 = v35;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v36 = v168;
    LODWORD(v166) = sub_1BAFFE730(&v179, &v178);
    v168 = v36;
    v37 = (uint64_t)v163;
    if (v36)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_136;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v32 = v165;
    v173 = v33 + 2;
    if (v33 + 2 >= v165)
    {
      v34 = v173;
      goto LABEL_33;
    }
    v38 = (void **)(v155 + 8 * v33);
    v39 = v159;
    while (1)
    {
      v41 = *(v38 - 1);
      v40 = *v38;
      swift_unknownObjectRetain();
      v177 = v41;
      swift_unknownObjectRetain();
      v42 = objc_msgSend(v40, sel_publishDate);
      if (v42)
      {
        v43 = v42;
        v44 = v174;
        sub_1BB86C874();

        v45 = v176;
        v46 = (void (*)(uint64_t, char *, uint64_t))v176[4];
        v46(v37, v44, v12);
        v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v45[7];
        v47(v37, 0, 1, v12);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v45[6])(v37, 1, v12) != 1)
        {
          v46((uint64_t)v39, (char *)v37, v12);
          goto LABEL_22;
        }
      }
      else
      {
        v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v176[7];
        v47(v37, 1, 1, v12);
      }
      sub_1BB86C8A4();
      sub_1BA76D750(v37);
LABEL_22:
      v48 = objc_msgSend(v177, sel_publishDate);
      if (v48)
      {
        v49 = v48;
        v50 = v174;
        sub_1BB86C874();

        v51 = v176;
        v52 = (void (*)(char *, char *, uint64_t))v176[4];
        v53 = (uint64_t)v162;
        v54 = v50;
        v39 = v159;
        v52(v162, v54, v12);
        v47(v53, 0, 1, v12);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v51[6])(v53, 1, v12) != 1)
        {
          v55 = v161;
          v52(v161, (char *)v53, v12);
          goto LABEL_27;
        }
      }
      else
      {
        v53 = (uint64_t)v162;
        v47((uint64_t)v162, 1, 1, v12);
      }
      v55 = v161;
      sub_1BB86C8A4();
      sub_1BA76D750(v53);
LABEL_27:
      v56 = sub_1BB86C814();
      v57 = (void (*)(char *, uint64_t))v176[1];
      v57(v55, v12);
      v57(v39, v12);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (((v166 ^ v56) & 1) != 0)
        break;
      ++v38;
      v32 = v165;
      ++v173;
      v37 = (uint64_t)v163;
      if (v165 == v173)
      {
        v34 = v165;
        goto LABEL_32;
      }
    }
    v32 = v165;
    v34 = v173;
LABEL_32:
    v33 = v164;
LABEL_33:
    v29 = v158;
    v31 = v169;
    if ((v166 & 1) != 0)
      break;
LABEL_42:
    if (v34 >= v32)
      goto LABEL_69;
    if (__OFSUB__(v34, v33))
      goto LABEL_158;
    if (v34 - v33 >= v157)
      goto LABEL_69;
    if (__OFADD__(v33, v157))
      goto LABEL_160;
    if (v33 + v157 >= v32)
      v63 = v32;
    else
      v63 = v33 + v157;
    if (v63 < v33)
    {
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if (v34 == v63)
      goto LABEL_69;
    v158 = v29;
    v64 = v156 + 8 * v34;
    v160 = v63;
    while (2)
    {
      v173 = v34;
      v65 = *(void **)(v31 + 8 * v34);
      v66 = v33;
      v166 = v64;
      do
      {
        v67 = *(void **)v64;
        swift_unknownObjectRetain();
        v177 = v67;
        swift_unknownObjectRetain();
        v68 = objc_msgSend(v65, sel_publishDate);
        if (v68)
        {
          v69 = v68;
          v70 = v174;
          sub_1BB86C874();

          v71 = v176;
          v72 = (void (*)(char *, char *, uint64_t))v176[4];
          v72(v7, v70, v12);
          v73 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v71[7];
          v73(v7, 0, 1, v12);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v71[6])(v7, 1, v12) != 1)
          {
            v72(v175, v7, v12);
            goto LABEL_59;
          }
        }
        else
        {
          v73 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v176[7];
          v73(v7, 1, 1, v12);
        }
        sub_1BB86C8A4();
        sub_1BA76D750((uint64_t)v7);
LABEL_59:
        v74 = objc_msgSend(v177, sel_publishDate);
        if (v74)
        {
          v75 = v74;
          v76 = v12;
          v77 = v176;
          v78 = v174;
          sub_1BB86C874();

          v79 = (void (*)(char *, char *, uint64_t))v77[4];
          v80 = (uint64_t)v171;
          v81 = v78;
          v82 = v77;
          v12 = v76;
          v31 = v169;
          v79(v171, v81, v12);
          v73((char *)v80, 0, 1, v12);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82[6])(v80, 1, v12) != 1)
          {
            v83 = v170;
            v79(v170, (char *)v80, v12);
            goto LABEL_64;
          }
        }
        else
        {
          v80 = (uint64_t)v171;
          v73(v171, 1, 1, v12);
        }
        v83 = v170;
        sub_1BB86C8A4();
        sub_1BA76D750(v80);
LABEL_64:
        v84 = v175;
        v85 = sub_1BB86C814();
        v86 = v83;
        v87 = v85;
        v88 = (void (*)(char *, uint64_t))v176[1];
        v88(v86, v12);
        v88(v84, v12);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v7 = v172;
        if ((v87 & 1) == 0)
          break;
        if (!v31)
          goto LABEL_163;
        v89 = *(void **)v64;
        v65 = *(void **)(v64 + 8);
        *(_QWORD *)v64 = v65;
        *(_QWORD *)(v64 + 8) = v89;
        v64 -= 8;
        ++v66;
      }
      while (v173 != v66);
      v34 = v173 + 1;
      v64 = v166 + 8;
      v33 = v164;
      if (v173 + 1 != v160)
        continue;
      break;
    }
    v34 = v160;
    v29 = v158;
LABEL_69:
    if (v34 < v33)
      goto LABEL_154;
    v90 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v29 = v90;
    else
      v29 = sub_1BACAA368(0, *((_QWORD *)v90 + 2) + 1, 1, v90);
    v92 = *((_QWORD *)v29 + 2);
    v91 = *((_QWORD *)v29 + 3);
    v93 = v92 + 1;
    if (v92 >= v91 >> 1)
      v29 = sub_1BACAA368((char *)(v91 > 1), v92 + 1, 1, v29);
    *((_QWORD *)v29 + 2) = v93;
    v94 = v29 + 32;
    v95 = &v29[16 * v92 + 32];
    *(_QWORD *)v95 = v33;
    *((_QWORD *)v95 + 1) = v34;
    v173 = v34;
    if (v92)
    {
      v31 = v169;
      while (1)
      {
        v96 = v93 - 1;
        if (v93 >= 4)
        {
          v101 = &v94[16 * v93];
          v102 = *((_QWORD *)v101 - 8);
          v103 = *((_QWORD *)v101 - 7);
          v107 = __OFSUB__(v103, v102);
          v104 = v103 - v102;
          if (v107)
            goto LABEL_142;
          v106 = *((_QWORD *)v101 - 6);
          v105 = *((_QWORD *)v101 - 5);
          v107 = __OFSUB__(v105, v106);
          v99 = v105 - v106;
          v100 = v107;
          if (v107)
            goto LABEL_143;
          v108 = v93 - 2;
          v109 = &v94[16 * v93 - 32];
          v111 = *(_QWORD *)v109;
          v110 = *((_QWORD *)v109 + 1);
          v107 = __OFSUB__(v110, v111);
          v112 = v110 - v111;
          if (v107)
            goto LABEL_145;
          v107 = __OFADD__(v99, v112);
          v113 = v99 + v112;
          if (v107)
            goto LABEL_148;
          if (v113 >= v104)
          {
            v131 = &v94[16 * v96];
            v133 = *(_QWORD *)v131;
            v132 = *((_QWORD *)v131 + 1);
            v107 = __OFSUB__(v132, v133);
            v134 = v132 - v133;
            if (v107)
              goto LABEL_152;
            v124 = v99 < v134;
            goto LABEL_107;
          }
        }
        else
        {
          if (v93 != 3)
          {
            v125 = *((_QWORD *)v29 + 4);
            v126 = *((_QWORD *)v29 + 5);
            v107 = __OFSUB__(v126, v125);
            v118 = v126 - v125;
            v119 = v107;
            goto LABEL_101;
          }
          v98 = *((_QWORD *)v29 + 4);
          v97 = *((_QWORD *)v29 + 5);
          v107 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          v100 = v107;
        }
        if ((v100 & 1) != 0)
          goto LABEL_144;
        v108 = v93 - 2;
        v114 = &v94[16 * v93 - 32];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v117 = __OFSUB__(v115, v116);
        v118 = v115 - v116;
        v119 = v117;
        if (v117)
          goto LABEL_147;
        v120 = &v94[16 * v96];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v107 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v107)
          goto LABEL_150;
        if (__OFADD__(v118, v123))
          goto LABEL_151;
        if (v118 + v123 >= v99)
        {
          v124 = v99 < v123;
LABEL_107:
          if (v124)
            v96 = v108;
          goto LABEL_109;
        }
LABEL_101:
        if ((v119 & 1) != 0)
          goto LABEL_146;
        v127 = &v94[16 * v96];
        v129 = *(_QWORD *)v127;
        v128 = *((_QWORD *)v127 + 1);
        v107 = __OFSUB__(v128, v129);
        v130 = v128 - v129;
        if (v107)
          goto LABEL_149;
        if (v130 < v118)
          goto LABEL_118;
LABEL_109:
        v135 = v96 - 1;
        if (v96 - 1 >= v93)
        {
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        if (!v31)
          goto LABEL_164;
        v136 = v29;
        v137 = v31;
        v138 = &v94[16 * v135];
        v139 = *(_QWORD *)v138;
        v140 = v96;
        v141 = &v94[16 * v96];
        v142 = *((_QWORD *)v141 + 1);
        v143 = v168;
        sub_1BAFFFB1C((void **)(v137 + 8 * *(_QWORD *)v138), (void **)(v137 + 8 * *(_QWORD *)v141), v137 + 8 * v142, v167);
        v168 = v143;
        if (v143)
          goto LABEL_135;
        if (v142 < v139)
          goto LABEL_139;
        if (v140 > *((_QWORD *)v136 + 2))
          goto LABEL_140;
        *(_QWORD *)v138 = v139;
        *(_QWORD *)&v94[16 * v135 + 8] = v142;
        v144 = *((_QWORD *)v136 + 2);
        if (v140 >= v144)
          goto LABEL_141;
        v93 = v144 - 1;
        memmove(v141, v141 + 16, 16 * (v144 - 1 - v140));
        v29 = v136;
        *((_QWORD *)v136 + 2) = v144 - 1;
        v7 = v172;
        v31 = v169;
        if (v144 <= 2)
          goto LABEL_118;
      }
    }
    v93 = 1;
    v31 = v169;
LABEL_118:
    v32 = v165;
    v30 = v173;
    if (v173 >= v165)
      goto LABEL_124;
  }
  if (v34 >= v33)
  {
    if (v33 < v34)
    {
      v58 = (uint64_t *)(v156 + 8 * v34);
      v59 = v34;
      v60 = v33;
      v61 = (uint64_t *)(v169 + 8 * v33);
      while (1)
      {
        if (v60 != --v59)
        {
          if (!v31)
            goto LABEL_165;
          v62 = *v61;
          *v61 = *v58;
          *v58 = v62;
        }
        ++v60;
        --v58;
        ++v61;
        if (v60 >= v59)
          goto LABEL_42;
      }
    }
    goto LABEL_42;
  }
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BAFFF79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  void *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v30;
  void *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;

  v44 = a1;
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v42 - v10;
  v11 = sub_1BB86C8B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v52 = (char *)&v42 - v16;
  MEMORY[0x1E0C80A78](v17);
  v46 = (char *)&v42 - v18;
  v43 = a2;
  if (a3 != a2)
  {
    v50 = *a4;
    v19 = v50 + 8 * a3 - 8;
    v47 = v14;
LABEL_5:
    v20 = *(void **)(v50 + 8 * a3);
    v21 = v44;
    v45 = v19;
    v22 = v46;
    v51 = a3;
    while (1)
    {
      v23 = *(void **)v19;
      swift_unknownObjectRetain();
      v53 = v23;
      swift_unknownObjectRetain();
      v24 = objc_msgSend(v20, sel_publishDate);
      if (v24)
      {
        v25 = v24;
        v26 = v52;
        sub_1BB86C874();

        v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v28 = (uint64_t)v48;
        v27(v48, v26, v11);
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v29(v28, 0, 1, v11);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v28, 1, v11) != 1)
        {
          v27(v22, (char *)v28, v11);
          goto LABEL_11;
        }
      }
      else
      {
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v28 = (uint64_t)v48;
        v29((uint64_t)v48, 1, 1, v11);
      }
      sub_1BB86C8A4();
      sub_1BA76D750(v28);
LABEL_11:
      v30 = objc_msgSend(v53, sel_publishDate);
      if (v30)
      {
        v31 = v30;
        v32 = v12;
        v33 = v52;
        sub_1BB86C874();

        v34 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v35 = (uint64_t)v49;
        v36 = v33;
        v12 = v32;
        v22 = v46;
        v34(v49, v36, v11);
        v29(v35, 0, 1, v11);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v35, 1, v11) != 1)
        {
          v37 = v47;
          v34(v47, (char *)v35, v11);
          goto LABEL_16;
        }
      }
      else
      {
        v35 = (uint64_t)v49;
        v29((uint64_t)v49, 1, 1, v11);
      }
      v37 = v47;
      sub_1BB86C8A4();
      sub_1BA76D750(v35);
LABEL_16:
      v38 = sub_1BB86C814();
      v39 = *(void (**)(char *, uint64_t))(v12 + 8);
      v39(v37, v11);
      v39(v22, v11);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v40 = v51;
      if ((v38 & 1) == 0)
        goto LABEL_4;
      if (!v50)
      {
        __break(1u);
        return;
      }
      v41 = *(void **)v19;
      v20 = *(void **)(v19 + 8);
      *(_QWORD *)v19 = v20;
      *(_QWORD *)(v19 + 8) = v41;
      v19 -= 8;
      if (v40 == ++v21)
      {
LABEL_4:
        a3 = v40 + 1;
        v19 = v45 + 8;
        if (a3 == v43)
          return;
        goto LABEL_5;
      }
    }
  }
}

uint64_t sub_1BAFFFB1C(void **__src, void **a2, unint64_t a3, void **__dst)
{
  uint64_t v4;
  id *v6;
  void **v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void **v15;
  char v16;
  char v17;
  id *v18;
  uint64_t v19;
  void **v20;
  id *v21;
  id *v22;
  id *v23;
  void *v24;
  void *v25;
  char v26;
  char v27;
  id *v28;
  void **v29;
  uint64_t result;
  void **v31;
  void **v32;
  void *v33;
  id v34;
  void **v35;
  void **v36;
  void **v37;

  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v37 = __src;
  v36 = __dst;
  v32 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      v19 = v4;
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        memmove(__dst, a2, 8 * v13);
        __dst = v32;
      }
      v20 = &__dst[v13];
      v35 = v20;
      v37 = v6;
      if (v7 >= v6 || v11 < 8)
        goto LABEL_48;
      v21 = (id *)(a3 - 8);
      v22 = v6;
      v31 = v7;
      while (1)
      {
        v23 = v20;
        v24 = *--v20;
        v34 = v24;
        v25 = *--v22;
        v33 = v25;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v26 = sub_1BAFFE730(&v34, &v33);
        if (v19)
          goto LABEL_47;
        v27 = v26;
        v28 = v21 + 1;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if ((v27 & 1) != 0)
        {
          v29 = v32;
          if (v28 != v6 || v21 >= v6)
            *v21 = *v22;
          v37 = v22;
          v19 = 0;
          v20 = v23;
        }
        else
        {
          v35 = v20;
          v29 = v32;
          if (v28 < v23 || v21 >= v23 || v28 != v23)
            *v21 = *v20;
          v22 = v6;
          v19 = 0;
        }
        if (v22 > v31)
        {
          --v21;
          v6 = v22;
          if (v20 > v29)
            continue;
        }
        goto LABEL_48;
      }
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      memmove(__dst, __src, 8 * v10);
      __dst = v32;
    }
    v14 = &__dst[v10];
    v35 = v14;
    if ((unint64_t)v6 >= a3 || v8 < 8)
      goto LABEL_48;
    while (1)
    {
      v34 = *v6;
      v15 = __dst;
      v33 = *__dst;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v16 = sub_1BAFFE730(&v34, &v33);
      if (v4)
        break;
      v17 = v16;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if ((v17 & 1) != 0)
      {
        v18 = v6 + 1;
        if (v7 < v6 || v7 >= v18 || v7 != v6)
          *v7 = *v6;
        __dst = v15;
      }
      else
      {
        if (v7 != v15)
          *v7 = *v15;
        __dst = v15 + 1;
        v36 = v15 + 1;
        v18 = v6;
      }
      v37 = ++v7;
      if (__dst < v14)
      {
        v6 = v18;
        if ((unint64_t)v18 < a3)
          continue;
      }
      goto LABEL_48;
    }
LABEL_47:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_48:
    sub_1BACAA5CC((void **)&v37, (const void **)&v36, &v35);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BAFFFE74()
{
  unint64_t result;

  result = qword_1EF2B9150;
  if (!qword_1EF2B9150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LatestPuzzleProviderError, &type metadata for LatestPuzzleProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF2B9150);
  }
  return result;
}

Swift::Bool __swiftcall FeedPrerollAdRequester.hasScheduledRequest(for:)(Swift::String a1)
{
  Swift::Bool v2;

  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v2;
}

uint64_t sub_1BAFFFF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_1BA761FE4(a2, a3, v8);
  result = swift_bridgeObjectRelease();
  *a4 = a3 & 1;
  return result;
}

uint64_t sub_1BAFFFFB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BAFFFF3C(v1[2], v1[3], v1[4], a1);
}

uint64_t FeedPrerollAdRequester.scheduleRequest(for:createContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v44 = a2;
  v45 = a3;
  v6 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - v11;
  v13 = sub_1BB871E60();
  v14 = *(_QWORD *)(v3 + 56);
  v48 = v15;
  v49 = v14;
  v46 = v3;
  v47 = v13;
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v50 & 1) != 0)
  {
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v16 = (void *)qword_1ED476858;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    v18 = v16;
    v19 = sub_1BB871E60();
    v21 = v20;
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    v22 = sub_1BB87330C();
    sub_1BB86EF44("Ad request already scheduled for placement=%{public}@", 53, 2, &dword_1BA493000, v18, v22, v17);

    return swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v7;
    sub_1BB871E60();
    sub_1BB87210C();
    swift_bridgeObjectRelease();
    sub_1BB871E60();
    sub_1BB872130();
    swift_bridgeObjectRelease();
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v24 = (void *)qword_1ED476858;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
    v26 = v24;
    v27 = sub_1BB871E60();
    v29 = v28;
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v29;
    v30 = sub_1BB87330C();
    sub_1BB86EF44("Scheduling ad request for placement=%{public}@", 46, 2, &dword_1BA493000, v26, v30, v25);

    swift_bridgeObjectRelease();
    sub_1BB86DD20();
    v31 = sub_1BB871E60();
    v33 = v32;
    swift_beginAccess();
    sub_1BA6EE5AC(&v50, v31, v33);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v34 = sub_1BB871E6C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v12, a1, v34);
    v35 = &v12[*(int *)(v6 + 20)];
    v36 = v45;
    *(_QWORD *)v35 = v44;
    *((_QWORD *)v35 + 1) = v36;
    sub_1BB000944((uint64_t)v12, (uint64_t)v9);
    v37 = (unint64_t *)(v4 + 24);
    swift_beginAccess();
    v38 = *(_QWORD *)(v4 + 24);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v4 + 24) = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v38 = sub_1BB392748(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
      *v37 = v38;
    }
    v41 = *(_QWORD *)(v38 + 16);
    v40 = *(_QWORD *)(v38 + 24);
    if (v41 >= v40 >> 1)
    {
      v38 = sub_1BB392748(v40 > 1, v41 + 1, 1, v38);
      *v37 = v38;
    }
    *(_QWORD *)(v38 + 16) = v41 + 1;
    sub_1BB000988((uint64_t)v9, v38+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v41);
    swift_endAccess();
    sub_1BB86DD2C();
    return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
  }
}

uint64_t type metadata accessor for FeedPrerollAdRequester.ScheduledRequest()
{
  uint64_t result;

  result = qword_1EF2B91C8;
  if (!qword_1EF2B91C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FeedPrerollAdRequester.initiateScheduledRequest(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  sub_1BB0009CC();
  MEMORY[0x1E0C80A78](v1);
  v36 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2B9160, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v35 = (uint64_t)&v31 - v4;
  v34 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  v37 = *(_QWORD *)(v0 + 56);
  sub_1BB86DD5C();
  sub_1BA4B07F0(0, &qword_1EF2B9168, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  v11 = *(_QWORD *)(v38 + 16);
  if (v11)
  {
    v32 = v10;
    v33 = v0;
    v12 = v38 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v31 = v5;
    v13 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BB000944(v12, (uint64_t)v7);
      v14 = sub_1BB871E60();
      v16 = v15;
      if (v14 == sub_1BB871E60() && v16 == v17)
        break;
      v18 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        goto LABEL_10;
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        v19 = 1;
        v20 = v35;
        v21 = (uint64_t)v36;
        v10 = v32;
        v22 = v34;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    v22 = v34;
    swift_bridgeObjectRelease();
    v20 = v35;
    sub_1BB000988((uint64_t)v7, v35);
    v19 = 0;
    v21 = (uint64_t)v36;
    v10 = v32;
LABEL_11:
    v5 = v31;
  }
  else
  {
    v19 = 1;
    v22 = v34;
    v20 = v35;
    v21 = (uint64_t)v36;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v20, v19, 1, v22);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v22) == 1)
  {
    sub_1BB000AB4(v20);
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v23 = (id)qword_1ED476858;
    v24 = sub_1BB8732F4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
    v26 = sub_1BB871E60();
    v28 = v27;
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v28;
    sub_1BB86EF44("Attempting to initiate scheduled preroll, but no request found. placement=%{public}@", 84, 2, &dword_1BA493000, v23, v24, v25);

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BB000988(v20, (uint64_t)v10);
    v30 = sub_1BB8719BC();
    MEMORY[0x1E0C80A78](v30);
    *(&v31 - 2) = (uint64_t)v10;
    sub_1BB871CF8();
    swift_release();
    sub_1BA4A2E80(v21, (uint64_t (*)(_QWORD))sub_1BB0009CC);
    return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
  }
}

uint64_t FeedPrerollAdRequester.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FeedPrerollAdRequester.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB000944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB000988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB0009CC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF2B9158)
  {
    sub_1BB871F08();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D530C0];
    sub_1BB871E6C();
    sub_1BA4A2870(&qword_1ED3D51C0, v0, MEMORY[0x1E0D530B8]);
    v1 = sub_1BB871C38();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF2B9158);
  }
}

uint64_t sub_1BB000A70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB000AB4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1EF2B9160, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB000B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for FeedPrerollAdRequester.ScheduledRequest();
  return (*(uint64_t (**)(uint64_t))(v3 + *(int *)(v4 + 20)))(a1);
}

uint64_t method lookup function for FeedPrerollAdRequester()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1BB000B68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1BB871E6C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1BB000BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB871E6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_1BB000C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BB871E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_1BB000CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BB871E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BB000D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB871E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1BB000D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB871E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1BB000DE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB000DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB871E6C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB000E68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB000E74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB871E6C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BB000EEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB871E6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLayoutSection()
{
  return &type metadata for DebugFormatLayoutSection;
}

uint64_t PuzzleHintFormatter.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB87D790;
  type metadata accessor for PuzzleTagConverter();
  v1 = (_QWORD *)swift_allocObject();
  v1[2] = 23390;
  v1[3] = 0xE200000000000000;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = 0;
  *(_QWORD *)(v0 + 32) = v1;
  return v0;
}

void sub_1BB000FD8()
{
  sub_1BB86C16C();
  __break(1u);
}

uint64_t sub_1BB000FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB002518(a1, a2, a3, (void (*)(_QWORD))sub_1BB0031D0);
}

uint64_t sub_1BB000FFC()
{
  sub_1BB0031D0();
  return sub_1BB872874();
}

void sub_1BB00103C()
{
  sub_1BA745B28();
  sub_1BB86C454();
  __break(1u);
}

uint64_t PuzzleHintFormatter.init()()
{
  uint64_t v0;
  _QWORD *v1;

  *(_OWORD *)(v0 + 16) = xmmword_1BB87D790;
  type metadata accessor for PuzzleTagConverter();
  v1 = (_QWORD *)swift_allocObject();
  v1[2] = 23390;
  v1[3] = 0xE200000000000000;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = 0;
  *(_QWORD *)(v0 + 32) = v1;
  return v0;
}

uint64_t type metadata accessor for PuzzleTagConverter()
{
  return objc_opt_self();
}

uint64_t PuzzleHintFormatter.attributedString(from:format:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  _BYTE *v53;
  uint64_t v54;

  v52._object = a2;
  v53 = a3;
  v51 = a4;
  v52._countAndFlagsBits = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v44 - v7;
  v8 = sub_1BB86C238();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C244();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86C25C();
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1EF2B6ED0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v44 - v22;
  v24 = sub_1BB86C304();
  v49 = *(_QWORD *)(v24 - 8);
  v50 = v24;
  MEMORY[0x1E0C80A78](v24);
  v45 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v46 = (char *)&v44 - v27;
  v28 = sub_1BB86C37C();
  v30 = MEMORY[0x1E0C80A78](v28);
  if (!*v53)
  {
    swift_bridgeObjectRetain();
    sub_1BB86C370();
LABEL_8:
    sub_1BB86C310();
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v44 - 2) = v36;
    swift_getKeyPath();
    sub_1BA7425CC();
    v54 = sub_1BB87369C();
    sub_1BA745B28();
    return sub_1BB86C1E4();
  }
  if (*v53 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t, double))(v13 + 104))(v15, *MEMORY[0x1E0CAF040], v12, v30);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAF020], v8);
    swift_bridgeObjectRetain();
    sub_1BB86C250();
    v31 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v47, 1, 1, v31);
    sub_1BB002894();
    sub_1BB86C2F8();
    v34 = v49;
    v33 = v50;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v23, 0, 1, v50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v23, 1, v33) == 1)
    {
      sub_1BAF5B4A8((uint64_t)v23);
      swift_bridgeObjectRetain();
      sub_1BB86C370();
      goto LABEL_8;
    }
    v42 = v46;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v46, v23, v33);
    sub_1BB0017EC(v42, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v42, v33);
  }
  else
  {
    v53 = (char *)&v44 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    PuzzleTagConverter.convertToMarkup(html:)(v52);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CAF040], v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAF020], v8);
    swift_bridgeObjectRetain();
    sub_1BB86C250();
    v32 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v48, 1, 1, v32);
    sub_1BB002894();
    sub_1BB86C2F8();
    v39 = v49;
    v38 = v50;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v20, 0, 1, v50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v20, 1, v38) == 1)
    {
      sub_1BAF5B4A8((uint64_t)v20);
      swift_bridgeObjectRetain();
      sub_1BB86C370();
      sub_1BB86C310();
      v40 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v40);
      *(&v44 - 2) = v41;
      swift_getKeyPath();
      sub_1BA7425CC();
      v54 = sub_1BB87369C();
      sub_1BA745B28();
      sub_1BB86C1E4();
    }
    else
    {
      v43 = v45;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v45, v20, v38);
      sub_1BB0017EC(v43, v51);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v43, v38);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t static UIFont.scaledPuzzleHintFont(ofSize:style:weight:traits:)()
{
  return sub_1BB87369C();
}

uint64_t sub_1BB0017EC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  void (*v28)(uint64_t, char *, uint64_t, double);
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, _QWORD);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t KeyPath;
  uint64_t v52;
  _QWORD v54[5];
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char v73[32];

  v62 = a1;
  sub_1BA716CEC();
  v68 = v3;
  MEMORY[0x1E0C80A78](v3);
  v71 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v70 = (char *)v54 - v6;
  v72 = sub_1BB86C2A4();
  v58 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v69 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C44B0, v8);
  MEMORY[0x1E0C80A78](v9);
  v64 = (char *)v54 - v10;
  v65 = sub_1BB86C2B0();
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v66 = (char *)v54 - v13;
  v14 = sub_1BB86C2BC();
  v60 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB86C304();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA716C74();
  v59 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v54 - v26;
  v28 = *(void (**)(uint64_t, char *, uint64_t, double))(v18 + 16);
  v28(a2, v62, v17, v25);
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v29, sel_scaledValueForValue_, 15.0);

  v54[4] = a2;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v20, a2, v17);
  sub_1BB86C2D4();
  v30 = v20;
  v31 = v58;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v30, v17);
  v32 = v60;
  v56 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v56(v23, v16, v14);
  v33 = sub_1BA4A2870(&qword_1ED3C44B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF160], MEMORY[0x1E0CAF180]);
  v34 = v66;
  v61 = v33;
  sub_1BB8730D8();
  v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v57 = v16;
  v60 = v14;
  v55 = v35;
  v35(v16, v14);
  v36 = v59;
  v37 = v67;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v23[*(int *)(v59 + 36)], v34, v65);
  sub_1BB003000((uint64_t)v23, (uint64_t)v27);
  v38 = *(int *)(v36 + 36);
  v62 = v27;
  v39 = &v27[v38];
  v59 = *(_QWORD *)(v37 + 16);
  v54[3] = *MEMORY[0x1E0DC4B10];
  v54[2] = &v27[v38];
  v40 = v66;
  v41 = v39;
  v42 = v65;
  ((void (*)(char *, char *, uint64_t))v59)(v66, v41, v65);
  v43 = v63;
  v44 = (uint64_t)v62;
  v45 = v60;
  sub_1BB873114();
  sub_1BA4A2870(&qword_1ED3A2450, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF150], MEMORY[0x1E0CAF158]);
  LOBYTE(v36) = sub_1BB872958();
  v46 = *(void (**)(char *, uint64_t))(v67 + 8);
  v46(v43, v42);
  v46(v40, v42);
  if ((v36 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v64, 1, 1, v72);
  }
  else
  {
    v47 = (void (*)(char *, _QWORD))sub_1BB873198();
    v48 = v64;
    v49 = v72;
    (*(void (**)(char *))(v31 + 16))(v64);
    v47(v73, 0);
    v50 = v57;
    v56(v57, (char *)v44, v45);
    sub_1BB873120();
    v55(v50, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v48, 0, 1, v49);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v48, 1, v49) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v69, v48, v72);
      sub_1BB86C298();
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      v54[-2] = v52;
      swift_getKeyPath();
      sub_1BB0030E0();
      sub_1BB86C280();
      swift_release();
      __asm { BR              X9 }
    }
  }
  return sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))sub_1BA716C74);
}

uint64_t sub_1BB002518(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  a4(0);
  return sub_1BB872958() & 1;
}

Swift::String __swiftcall PuzzleTagConverter.convertToMarkup(html:)(Swift::String html)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  Swift::String result;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;

  v2 = v1;
  object = html._object;
  countAndFlagsBits = html._countAndFlagsBits;
  sub_1BA4AD288(0, &qword_1EF2B9208, MEMORY[0x1E0DEBAF0], MEMORY[0x1E0DF1F50]);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v41 - v6;
  swift_bridgeObjectRetain();
  v8 = sub_1BB0029CC();
  v9 = v8[2];
  if (v9)
  {
    sub_1BA7114A0();
    v10 = v8 + 7;
    do
    {
      v11 = *(v10 - 3);
      v12 = (void *)*(v10 - 2);
      v13 = *(v10 - 1);
      v14 = *v10;
      v48 = countAndFlagsBits;
      v49 = object;
      v46 = v11;
      v47 = v12;
      v44 = v13;
      v45 = v14;
      countAndFlagsBits = sub_1BB873B04();
      v16 = v15;
      swift_bridgeObjectRelease();
      object = v16;
      v10 += 4;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  v41[1] = v2;
  v17 = sub_1BB002A10();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    sub_1BA7114A0();
    v19 = (unint64_t *)(v17 + 56);
    do
    {
      v20 = *(v19 - 3);
      v21 = (void *)*(v19 - 2);
      v22 = *(v19 - 1);
      v23 = *v19;
      v48 = countAndFlagsBits;
      v49 = object;
      v46 = v20;
      v47 = v21;
      v44 = v22;
      v45 = v23;
      countAndFlagsBits = sub_1BB873B04();
      v25 = v24;
      swift_bridgeObjectRelease();
      v19 += 4;
      object = v25;
      --v18;
    }
    while (v18);
  }
  else
  {
    v25 = object;
  }
  swift_bridgeObjectRelease();
  sub_1BB86EE24();
  v46 = countAndFlagsBits;
  v47 = v25;
  v44 = 0;
  v45 = 0xE000000000000000;
  sub_1BB002A6C();
  sub_1BB002AB0();
  sub_1BB002AF4();
  v26 = v43;
  sub_1BB8731B0();
  swift_bridgeObjectRelease();
  v27 = v48;
  v28 = v49;
  v29 = sub_1BB002EE8();
  v30 = v29[2];
  if (v30)
  {
    sub_1BA7114A0();
    v31 = v29 + 7;
    do
    {
      v32 = *(v31 - 3);
      v33 = (void *)*(v31 - 2);
      v34 = *(v31 - 1);
      v35 = *v31;
      v48 = v27;
      v49 = v28;
      v46 = v32;
      v47 = v33;
      v44 = v34;
      v45 = v35;
      v27 = sub_1BB873B04();
      v37 = v36;
      swift_bridgeObjectRelease();
      v31 += 4;
      v28 = v37;
      --v30;
    }
    while (v30);
  }
  else
  {
    v37 = v28;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v26);
  v38 = v27;
  v39 = v37;
  result._object = v39;
  result._countAndFlagsBits = v38;
  return result;
}

unint64_t sub_1BB002894()
{
  unint64_t result;

  result = qword_1EF2B9200;
  if (!qword_1EF2B9200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AttributeScopes.PuzzleAttributes, &type metadata for AttributeScopes.PuzzleAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B9200);
  }
  return result;
}

void sub_1BB0028D8()
{
  sub_1BB86C16C();
  __break(1u);
}

void sub_1BB0028F0()
{
  sub_1BA745B28();
  sub_1BB86C454();
  __break(1u);
}

uint64_t sub_1BB002914()
{
  return 8;
}

uint64_t sub_1BB002920()
{
  return swift_release();
}

uint64_t sub_1BB002928(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BB002934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB002518(a1, a2, a3, (void (*)(_QWORD))sub_1BB0031D0) & 1;
}

uint64_t sub_1BB002954(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (void (*)(_QWORD))sub_1BB0031D0);
}

_QWORD *sub_1BB002960(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t PuzzleHintFormatter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PuzzleHintFormatter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB0029AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  return PuzzleHintFormatter.attributedString(from:format:)(a1, a2, a3, a4);
}

void *sub_1BB0029CC()
{
  uint64_t v0;
  void *v1;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(void **)(v0 + 32);
  }
  else
  {
    v1 = &unk_1E724E6F8;
    *(_QWORD *)(v0 + 32) = &unk_1E724E6F8;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB002A10()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v1 = sub_1BB002B54(v0);
    *(_QWORD *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BB002A6C()
{
  unint64_t result;

  result = qword_1EF2B9210;
  if (!qword_1EF2B9210)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA9B0], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF2B9210);
  }
  return result;
}

unint64_t sub_1BB002AB0()
{
  unint64_t result;

  result = qword_1EF2B9218;
  if (!qword_1EF2B9218)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF2B9218);
  }
  return result;
}

unint64_t sub_1BB002AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B9220;
  if (!qword_1EF2B9220)
  {
    sub_1BA4AD288(255, &qword_1EF2B9208, MEMORY[0x1E0DEBAF0], MEMORY[0x1E0DF1F50]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DF1F60], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B9220);
  }
  return result;
}

uint64_t sub_1BB002B54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1EF2B9390, (uint64_t)&type metadata for PuzzleTagConverter.TagPair, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB8E19A0;
  *(_QWORD *)(v2 + 32) = 4088380;
  *(_QWORD *)(v2 + 40) = 0xE300000000000000;
  *(_QWORD *)(v2 + 48) = 10794;
  *(_QWORD *)(v2 + 56) = 0xE200000000000000;
  *(_QWORD *)(v2 + 64) = 1046622012;
  *(_QWORD *)(v2 + 72) = 0xE400000000000000;
  *(_QWORD *)(v2 + 80) = 10794;
  *(_QWORD *)(v2 + 88) = 0xE200000000000000;
  *(_QWORD *)(v2 + 96) = 0x3E676E6F7274733CLL;
  *(_QWORD *)(v2 + 104) = 0xE800000000000000;
  *(_QWORD *)(v2 + 112) = 10794;
  *(_QWORD *)(v2 + 120) = 0xE200000000000000;
  *(_QWORD *)(v2 + 128) = 0x676E6F7274732F3CLL;
  *(_QWORD *)(v2 + 136) = 0xE90000000000003ELL;
  *(_QWORD *)(v2 + 144) = 10794;
  *(_QWORD *)(v2 + 152) = 0xE200000000000000;
  *(_QWORD *)(v2 + 160) = 4090172;
  *(_QWORD *)(v2 + 168) = 0xE300000000000000;
  *(_QWORD *)(v2 + 176) = 95;
  *(_QWORD *)(v2 + 184) = 0xE100000000000000;
  *(_QWORD *)(v2 + 192) = 1047080764;
  *(_QWORD *)(v2 + 200) = 0xE400000000000000;
  *(_QWORD *)(v2 + 208) = 95;
  *(_QWORD *)(v2 + 216) = 0xE100000000000000;
  *(_QWORD *)(v2 + 224) = 1047356732;
  *(_QWORD *)(v2 + 232) = 0xE400000000000000;
  *(_QWORD *)(v2 + 240) = 95;
  *(_QWORD *)(v2 + 248) = 0xE100000000000000;
  *(_QWORD *)(v2 + 256) = 0x3E6D652F3CLL;
  *(_QWORD *)(v2 + 264) = 0xE500000000000000;
  *(_QWORD *)(v2 + 272) = 95;
  *(_QWORD *)(v2 + 280) = 0xE100000000000000;
  *(_QWORD *)(v2 + 288) = 4092732;
  *(_QWORD *)(v2 + 296) = 0xE300000000000000;
  *(_QWORD *)(v2 + 304) = 32382;
  *(_QWORD *)(v2 + 312) = 0xE200000000000000;
  *(_QWORD *)(v2 + 320) = 1047736124;
  *(_QWORD *)(v2 + 328) = 0xE400000000000000;
  *(_QWORD *)(v2 + 336) = 32382;
  *(_QWORD *)(v2 + 344) = 0xE200000000000000;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v2 + 352) = 4093244;
  *(_QWORD *)(v2 + 360) = 0xE300000000000000;
  *(_QWORD *)(v2 + 368) = v4;
  *(_QWORD *)(v2 + 376) = v3;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 384) = 1047867196;
  *(_QWORD *)(v2 + 392) = 0xE400000000000000;
  *(_QWORD *)(v2 + 400) = 0xD00000000000001BLL;
  *(_QWORD *)(v2 + 408) = 0x80000001BB9755C0;
  *(_QWORD *)(v2 + 416) = 0x3E7075733CLL;
  *(_QWORD *)(v2 + 424) = 0xE500000000000000;
  *(_QWORD *)(v2 + 432) = v4;
  *(_QWORD *)(v2 + 440) = v3;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 448) = 0x3E7075732F3CLL;
  *(_QWORD *)(v2 + 456) = 0xE600000000000000;
  *(_QWORD *)(v2 + 464) = 0xD00000000000001DLL;
  *(_QWORD *)(v2 + 472) = 0x80000001BB9755E0;
  *(_QWORD *)(v2 + 480) = 0x3E6275733CLL;
  *(_QWORD *)(v2 + 488) = 0xE500000000000000;
  *(_QWORD *)(v2 + 496) = v4;
  *(_QWORD *)(v2 + 504) = v3;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 512) = 0x3E6275732F3CLL;
  *(_QWORD *)(v2 + 520) = 0xE600000000000000;
  *(_QWORD *)(v2 + 528) = 0xD00000000000001BLL;
  *(_QWORD *)(v2 + 536) = 0x80000001BB975600;
  *(_QWORD *)(v2 + 544) = 0x3E6769623CLL;
  *(_QWORD *)(v2 + 552) = 0xE500000000000000;
  *(_QWORD *)(v2 + 560) = v4;
  *(_QWORD *)(v2 + 568) = v3;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 576) = 0x3E6769622F3CLL;
  *(_QWORD *)(v2 + 584) = 0xE600000000000000;
  *(_QWORD *)(v2 + 592) = 0xD000000000000018;
  *(_QWORD *)(v2 + 600) = 0x80000001BB975620;
  *(_QWORD *)(v2 + 608) = 0x3E6C6C616D733CLL;
  *(_QWORD *)(v2 + 616) = 0xE700000000000000;
  *(_QWORD *)(v2 + 624) = v4;
  *(_QWORD *)(v2 + 632) = v3;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 640) = 0x3E6C6C616D732F3CLL;
  *(_QWORD *)(v2 + 648) = 0xE800000000000000;
  *(_QWORD *)(v2 + 656) = 0xD000000000000019;
  *(_QWORD *)(v2 + 664) = 0x80000001BB975640;
  *(_QWORD *)(v2 + 672) = 1047683644;
  *(_QWORD *)(v2 + 680) = 0xE400000000000000;
  *(_QWORD *)(v2 + 688) = 10;
  *(_QWORD *)(v2 + 696) = 0xE100000000000000;
  *(_QWORD *)(v2 + 704) = 0x3E72622F3CLL;
  *(_QWORD *)(v2 + 712) = 0xE500000000000000;
  *(_QWORD *)(v2 + 720) = 10;
  *(_QWORD *)(v2 + 728) = 0xE100000000000000;
  return v2;
}

void *sub_1BB002EE8()
{
  uint64_t v0;
  void *v1;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(void **)(v0 + 48);
  }
  else
  {
    v1 = &unk_1E724E778;
    *(_QWORD *)(v0 + 48) = &unk_1E724E778;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleTagConverter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PuzzleTagConverter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double static UIFont.maxPuzzleHintScaleFactor.getter()
{
  return 1.31111;
}

uint64_t dispatch thunk of PuzzleHintFormatterType.attributedString(from:format:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for PuzzleHintFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleHintFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleHintFormatter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PuzzleTagConverter()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for PuzzleTagConverter.TagPair()
{
  return &type metadata for PuzzleTagConverter.TagPair;
}

uint64_t sub_1BB003000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA716C74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB003044()
{
  sub_1BB0030E0();
  sub_1BB86C46C();
  __break(1u);
}

